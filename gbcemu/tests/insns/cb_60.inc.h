    TEST(gbcemu, opcode_cb_60) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 60 0000
        gbc.setState(0x5636, 0x439, 0x990, 0xd622, 0x75c, 0xfe6d, 0x0, 0x0);
        gbc.writeMem(0x5636, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x439);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0001
        gbc.setState(0x4579, 0x955c, 0x75e0, 0x4427, 0xe2f0, 0x9efb, 0x0, 0x1);
        gbc.writeMem(0x4579, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x955c);
        EXPECT(gbc.pc(), 0x457b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0002
        gbc.setState(0xa197, 0x3f30, 0x1c90, 0xb35d, 0x3d91, 0x10f6, 0x0, 0x0);
        gbc.writeMem(0xa197, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3f30);
        EXPECT(gbc.pc(), 0xa199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa197), 0xcb);
        EXPECT(gbc.readMem(0xa198), 0x60);
        // CB 60 0003
        gbc.setState(0x32c2, 0x4d6, 0x8e80, 0x74b, 0xb7e, 0x8bbe, 0x1, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4d6);
        EXPECT(gbc.pc(), 0x32c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0004
        gbc.setState(0x6c54, 0x4e9b, 0xa0, 0x61bd, 0x1f52, 0x5a10, 0x0, 0x0);
        gbc.writeMem(0x6c54, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4e9b);
        EXPECT(gbc.pc(), 0x6c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0005
        gbc.setState(0x72c6, 0x6040, 0xf210, 0xd3af, 0xc5fd, 0x53d9, 0x0, 0x0);
        gbc.writeMem(0x72c6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6040);
        EXPECT(gbc.pc(), 0x72c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0006
        gbc.setState(0x94df, 0x878f, 0x66d0, 0x19b6, 0x91ac, 0xd56b, 0x1, 0x0);
        gbc.writeMem(0x94df, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x878f);
        EXPECT(gbc.pc(), 0x94e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0xcb);
        EXPECT(gbc.readMem(0x94e0), 0x60);
        // CB 60 0007
        gbc.setState(0x2472, 0xcfb6, 0x6430, 0xeea, 0xc12a, 0xdcd6, 0x1, 0x1);
        gbc.writeMem(0x2472, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcfb6);
        EXPECT(gbc.pc(), 0x2474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0008
        gbc.setState(0x412f, 0x607b, 0x6a80, 0xde79, 0xab34, 0xfd17, 0x1, 0x0);
        gbc.writeMem(0x412f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x607b);
        EXPECT(gbc.pc(), 0x4131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0009
        gbc.setState(0x3f, 0x6ef2, 0x6b50, 0xf06b, 0x7b3, 0xa009, 0x0, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6ef2);
        EXPECT(gbc.pc(), 0x41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 000A
        gbc.setState(0x4ea9, 0x5ffa, 0x1e80, 0x21a7, 0x15ae, 0x1852, 0x0, 0x0);
        gbc.writeMem(0x4ea9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5ffa);
        EXPECT(gbc.pc(), 0x4eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 000B
        gbc.setState(0xdac5, 0x8f70, 0x1e20, 0xf0b0, 0xdfc9, 0x85dd, 0x1, 0x1);
        gbc.writeMem(0xdac5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8f70);
        EXPECT(gbc.pc(), 0xdac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac5), 0xcb);
        EXPECT(gbc.readMem(0xdac6), 0x60);
        // CB 60 000C
        gbc.setState(0x5941, 0x4add, 0x8f30, 0xbeaa, 0x3ee8, 0xaef6, 0x0, 0x1);
        gbc.writeMem(0x5941, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4add);
        EXPECT(gbc.pc(), 0x5943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 000D
        gbc.setState(0x59cf, 0xb8c8, 0x8270, 0x9e9b, 0xf224, 0xfa1c, 0x1, 0x1);
        gbc.writeMem(0x59cf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb8c8);
        EXPECT(gbc.pc(), 0x59d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 000E
        gbc.setState(0x9a6c, 0xe959, 0xdb0, 0xa968, 0xf532, 0x87b2, 0x0, 0x0);
        gbc.writeMem(0x9a6c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe959);
        EXPECT(gbc.pc(), 0x9a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6c), 0xcb);
        EXPECT(gbc.readMem(0x9a6d), 0x60);
        // CB 60 000F
        gbc.setState(0x3587, 0x5168, 0xf0a0, 0x2f6c, 0x1419, 0x700c, 0x1, 0x0);
        gbc.writeMem(0x3587, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0x3589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0010
        gbc.setState(0x1ac0, 0x5fef, 0xd2a0, 0xeed1, 0x7fe3, 0x179, 0x0, 0x1);
        gbc.writeMem(0x1ac0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5fef);
        EXPECT(gbc.pc(), 0x1ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0011
        gbc.setState(0x6fc1, 0x72c5, 0x4e90, 0x1cca, 0x90ca, 0x96a2, 0x1, 0x0);
        gbc.writeMem(0x6fc1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x72c5);
        EXPECT(gbc.pc(), 0x6fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0012
        gbc.setState(0xdc56, 0xab00, 0xf650, 0xf9f0, 0xc28b, 0x4723, 0x0, 0x0);
        gbc.writeMem(0xdc56, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc56), 0xcb);
        EXPECT(gbc.readMem(0xdc57), 0x60);
        // CB 60 0013
        gbc.setState(0x603d, 0x2c84, 0xc5c0, 0xe1ea, 0x3727, 0x104c, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2c84);
        EXPECT(gbc.pc(), 0x603f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0014
        gbc.setState(0x50c8, 0xb86e, 0x45e0, 0x53b5, 0xdd6d, 0x5b1e, 0x1, 0x1);
        gbc.writeMem(0x50c8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb86e);
        EXPECT(gbc.pc(), 0x50ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0015
        gbc.setState(0xdd0c, 0x88fe, 0x920, 0xf1f8, 0xce54, 0xea6d, 0x1, 0x0);
        gbc.writeMem(0xdd0c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x88fe);
        EXPECT(gbc.pc(), 0xdd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd0c), 0xcb);
        EXPECT(gbc.readMem(0xdd0d), 0x60);
        // CB 60 0016
        gbc.setState(0xbf3f, 0xb809, 0xf2b0, 0xd7b, 0x642a, 0x8e59, 0x1, 0x0);
        gbc.writeMem(0xbf3f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb809);
        EXPECT(gbc.pc(), 0xbf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3f), 0xcb);
        EXPECT(gbc.readMem(0xbf40), 0x60);
        // CB 60 0017
        gbc.setState(0xa2b, 0xb65c, 0xe990, 0x7d4f, 0xa5eb, 0x7ce0, 0x0, 0x0);
        gbc.writeMem(0xa2b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb65c);
        EXPECT(gbc.pc(), 0xa2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0018
        gbc.setState(0x90e0, 0xf6a4, 0x4990, 0x8257, 0x7ecd, 0xbfac, 0x0, 0x0);
        gbc.writeMem(0x90e0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf6a4);
        EXPECT(gbc.pc(), 0x90e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e0), 0xcb);
        EXPECT(gbc.readMem(0x90e1), 0x60);
        // CB 60 0019
        gbc.setState(0xbd9c, 0xf168, 0x4aa0, 0x14fe, 0x966c, 0xf054, 0x1, 0x0);
        gbc.writeMem(0xbd9c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf168);
        EXPECT(gbc.pc(), 0xbd9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9c), 0xcb);
        EXPECT(gbc.readMem(0xbd9d), 0x60);
        // CB 60 001A
        gbc.setState(0xedc3, 0xe1fd, 0x2e00, 0x3b78, 0x74e8, 0x9e7f, 0x1, 0x1);
        gbc.writeMem(0xedc3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe1fd);
        EXPECT(gbc.pc(), 0xedc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc3), 0xcb);
        EXPECT(gbc.readMem(0xedc4), 0x60);
        // CB 60 001B
        gbc.setState(0xae9f, 0x4800, 0x8320, 0x3b88, 0x7e8c, 0x8c30, 0x1, 0x1);
        gbc.writeMem(0xae9f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4800);
        EXPECT(gbc.pc(), 0xaea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9f), 0xcb);
        EXPECT(gbc.readMem(0xaea0), 0x60);
        // CB 60 001C
        gbc.setState(0xa484, 0x6074, 0x6140, 0xb8f6, 0xc5f3, 0xa8ce, 0x1, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6074);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa484), 0xcb);
        EXPECT(gbc.readMem(0xa485), 0x60);
        // CB 60 001D
        gbc.setState(0x1e92, 0x7388, 0x7b80, 0x4f85, 0x777b, 0xdc51, 0x1, 0x1);
        gbc.writeMem(0x1e92, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7388);
        EXPECT(gbc.pc(), 0x1e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 001E
        gbc.setState(0x4aee, 0xdff1, 0x7990, 0x26a2, 0xacd8, 0x783e, 0x0, 0x1);
        gbc.writeMem(0x4aee, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdff1);
        EXPECT(gbc.pc(), 0x4af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 001F
        gbc.setState(0xd23a, 0xc7d0, 0x81f0, 0x9389, 0x5a59, 0xafb8, 0x1, 0x0);
        gbc.writeMem(0xd23a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc7d0);
        EXPECT(gbc.pc(), 0xd23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23a), 0xcb);
        EXPECT(gbc.readMem(0xd23b), 0x60);
        // CB 60 0020
        gbc.setState(0x893b, 0xc8cf, 0x68a0, 0xab83, 0x4272, 0xb72d, 0x1, 0x1);
        gbc.writeMem(0x893b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc8cf);
        EXPECT(gbc.pc(), 0x893d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x893b), 0xcb);
        EXPECT(gbc.readMem(0x893c), 0x60);
        // CB 60 0021
        gbc.setState(0x46d0, 0x1e94, 0x9930, 0x2d5, 0xfc07, 0xcc2b, 0x0, 0x1);
        gbc.writeMem(0x46d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1e94);
        EXPECT(gbc.pc(), 0x46d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0022
        gbc.setState(0xdde5, 0xd55c, 0x5050, 0x5781, 0x7f67, 0x6ed0, 0x1, 0x1);
        gbc.writeMem(0xdde5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd55c);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde5), 0xcb);
        EXPECT(gbc.readMem(0xdde6), 0x60);
        // CB 60 0023
        gbc.setState(0x9576, 0x15b7, 0xf630, 0x4820, 0x4390, 0xd293, 0x0, 0x0);
        gbc.writeMem(0x9576, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0x9578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9576), 0xcb);
        EXPECT(gbc.readMem(0x9577), 0x60);
        // CB 60 0024
        gbc.setState(0x8f42, 0xda, 0x13a0, 0x6d3e, 0xc532, 0xd72b, 0x0, 0x1);
        gbc.writeMem(0x8f42, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xda);
        EXPECT(gbc.pc(), 0x8f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f42), 0xcb);
        EXPECT(gbc.readMem(0x8f43), 0x60);
        // CB 60 0026
        gbc.setState(0xc680, 0xf540, 0x3ab0, 0x6925, 0xeec6, 0xa8fd, 0x0, 0x1);
        gbc.writeMem(0xc680, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0xc682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc680), 0xcb);
        EXPECT(gbc.readMem(0xc681), 0x60);
        // CB 60 0027
        gbc.setState(0x60ae, 0x522e, 0x3580, 0xac74, 0x1b01, 0xc514, 0x1, 0x1);
        gbc.writeMem(0x60ae, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x522e);
        EXPECT(gbc.pc(), 0x60b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0028
        gbc.setState(0xba42, 0xb450, 0x800, 0xfb12, 0xe27e, 0x5374, 0x1, 0x1);
        gbc.writeMem(0xba42, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb450);
        EXPECT(gbc.pc(), 0xba44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba42), 0xcb);
        EXPECT(gbc.readMem(0xba43), 0x60);
        // CB 60 0029
        gbc.setState(0x87a8, 0x56b1, 0x9b10, 0x4e12, 0xbda2, 0x6ce, 0x1, 0x1);
        gbc.writeMem(0x87a8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x56b1);
        EXPECT(gbc.pc(), 0x87aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a8), 0xcb);
        EXPECT(gbc.readMem(0x87a9), 0x60);
        // CB 60 002A
        gbc.setState(0x128c, 0xbbb7, 0x3920, 0xed5a, 0xd9e0, 0x3726, 0x0, 0x0);
        gbc.writeMem(0x128c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbbb7);
        EXPECT(gbc.pc(), 0x128e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 002B
        gbc.setState(0xd84a, 0x6616, 0x3110, 0xd64f, 0x56bb, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0xd84a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6616);
        EXPECT(gbc.pc(), 0xd84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84a), 0xcb);
        EXPECT(gbc.readMem(0xd84b), 0x60);
        // CB 60 002C
        gbc.setState(0x4847, 0x1213, 0xfeb0, 0xa354, 0x8c35, 0x7891, 0x0, 0x0);
        gbc.writeMem(0x4847, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1213);
        EXPECT(gbc.pc(), 0x4849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 002D
        gbc.setState(0x17f3, 0x7fff, 0x2a20, 0x2a1c, 0x6c43, 0xad17, 0x1, 0x1);
        gbc.writeMem(0x17f3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7fff);
        EXPECT(gbc.pc(), 0x17f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 002E
        gbc.setState(0xaf8a, 0xd836, 0xfbb0, 0xcd01, 0x9dd5, 0x72ab, 0x1, 0x1);
        gbc.writeMem(0xaf8a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd836);
        EXPECT(gbc.pc(), 0xaf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8a), 0xcb);
        EXPECT(gbc.readMem(0xaf8b), 0x60);
        // CB 60 002F
        gbc.setState(0x8231, 0x24d7, 0x89a0, 0x8116, 0xa1fb, 0x6584, 0x0, 0x1);
        gbc.writeMem(0x8231, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x24d7);
        EXPECT(gbc.pc(), 0x8233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8231), 0xcb);
        EXPECT(gbc.readMem(0x8232), 0x60);
        // CB 60 0030
        gbc.setState(0x4baa, 0x5484, 0x7f10, 0xafb4, 0x96c6, 0xa4a8, 0x0, 0x0);
        gbc.writeMem(0x4baa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5484);
        EXPECT(gbc.pc(), 0x4bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0031
        gbc.setState(0x43b, 0xd580, 0x2cf0, 0x2b17, 0x316d, 0xf847, 0x0, 0x0);
        gbc.writeMem(0x43b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd580);
        EXPECT(gbc.pc(), 0x43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0032
        gbc.setState(0x1216, 0xdb98, 0x2aa0, 0x2b16, 0xba5b, 0xdbb8, 0x1, 0x1);
        gbc.writeMem(0x1216, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdb98);
        EXPECT(gbc.pc(), 0x1218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0033
        gbc.setState(0xc638, 0x9054, 0x9c20, 0xcf7a, 0x468a, 0x7ffc, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9054);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0x60);
        // CB 60 0034
        gbc.setState(0xe69d, 0x2413, 0xa760, 0x1b2b, 0xd173, 0x5cb8, 0x0, 0x1);
        gbc.writeMem(0xe69d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2413);
        EXPECT(gbc.pc(), 0xe69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe69d), 0xcb);
        EXPECT(gbc.readMem(0xe69e), 0x60);
        // CB 60 0035
        gbc.setState(0xcd21, 0xf9f9, 0x8940, 0x63c4, 0xab6d, 0x3832, 0x0, 0x1);
        gbc.writeMem(0xcd21, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf9f9);
        EXPECT(gbc.pc(), 0xcd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd21), 0xcb);
        EXPECT(gbc.readMem(0xcd22), 0x60);
        // CB 60 0036
        gbc.setState(0x453f, 0xe239, 0xfdd0, 0x8a2f, 0x268, 0xbbff, 0x1, 0x0);
        gbc.writeMem(0x453f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0x4541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0037
        gbc.setState(0x28bf, 0x830e, 0x4d90, 0x84b1, 0x8b58, 0xcda0, 0x1, 0x1);
        gbc.writeMem(0x28bf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x830e);
        EXPECT(gbc.pc(), 0x28c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0038
        gbc.setState(0xe970, 0x2e9e, 0x9ef0, 0x97b3, 0x8b4d, 0x596e, 0x0, 0x0);
        gbc.writeMem(0xe970, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2e9e);
        EXPECT(gbc.pc(), 0xe972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe970), 0xcb);
        EXPECT(gbc.readMem(0xe971), 0x60);
        // CB 60 0039
        gbc.setState(0x28c9, 0xaed4, 0x8bd0, 0x6334, 0x8c14, 0x6528, 0x0, 0x1);
        gbc.writeMem(0x28c9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaed4);
        EXPECT(gbc.pc(), 0x28cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 003A
        gbc.setState(0xc0ea, 0xd92f, 0x8400, 0xe6c7, 0x3c1a, 0xfbab, 0x1, 0x1);
        gbc.writeMem(0xc0ea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd92f);
        EXPECT(gbc.pc(), 0xc0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ea), 0xcb);
        EXPECT(gbc.readMem(0xc0eb), 0x60);
        // CB 60 003B
        gbc.setState(0x5e9d, 0x1f10, 0x8a90, 0x83f5, 0x7576, 0xe96e, 0x1, 0x0);
        gbc.writeMem(0x5e9d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1f10);
        EXPECT(gbc.pc(), 0x5e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 003C
        gbc.setState(0xbf5d, 0xe53e, 0x1160, 0x6587, 0xa623, 0x4f46, 0x1, 0x0);
        gbc.writeMem(0xbf5d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0xbf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5d), 0xcb);
        EXPECT(gbc.readMem(0xbf5e), 0x60);
        // CB 60 003D
        gbc.setState(0xcb11, 0x59c6, 0x39b0, 0xe766, 0x7de1, 0x168d, 0x0, 0x0);
        gbc.writeMem(0xcb11, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x59c6);
        EXPECT(gbc.pc(), 0xcb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb11), 0xcb);
        EXPECT(gbc.readMem(0xcb12), 0x60);
        // CB 60 003E
        gbc.setState(0x93fa, 0xb066, 0x6950, 0x911, 0xb050, 0xe601, 0x0, 0x0);
        gbc.writeMem(0x93fa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb066);
        EXPECT(gbc.pc(), 0x93fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fa), 0xcb);
        EXPECT(gbc.readMem(0x93fb), 0x60);
        // CB 60 003F
        gbc.setState(0xa09b, 0xaad4, 0x7740, 0x54b, 0x9892, 0xea2c, 0x0, 0x0);
        gbc.writeMem(0xa09b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaad4);
        EXPECT(gbc.pc(), 0xa09d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09b), 0xcb);
        EXPECT(gbc.readMem(0xa09c), 0x60);
        // CB 60 0040
        gbc.setState(0x250c, 0x40c, 0x5970, 0xf841, 0x2b8a, 0x8256, 0x1, 0x0);
        gbc.writeMem(0x250c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x40c);
        EXPECT(gbc.pc(), 0x250e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0042
        gbc.setState(0xdc61, 0x85ae, 0xcf0, 0x3d3a, 0x2fe5, 0x944a, 0x1, 0x1);
        gbc.writeMem(0xdc61, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x85ae);
        EXPECT(gbc.pc(), 0xdc63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc61), 0xcb);
        EXPECT(gbc.readMem(0xdc62), 0x60);
        // CB 60 0043
        gbc.setState(0x9a34, 0xdc6e, 0x44f0, 0x4719, 0x1bb0, 0x4a02, 0x1, 0x0);
        gbc.writeMem(0x9a34, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdc6e);
        EXPECT(gbc.pc(), 0x9a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a34), 0xcb);
        EXPECT(gbc.readMem(0x9a35), 0x60);
        // CB 60 0044
        gbc.setState(0x65aa, 0x8d03, 0xf170, 0x9823, 0x5788, 0x31e2, 0x1, 0x1);
        gbc.writeMem(0x65aa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8d03);
        EXPECT(gbc.pc(), 0x65ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0045
        gbc.setState(0xacfe, 0x8406, 0xbb10, 0x8e19, 0xecf4, 0xe064, 0x0, 0x1);
        gbc.writeMem(0xacfe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8406);
        EXPECT(gbc.pc(), 0xad00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacfe), 0xcb);
        EXPECT(gbc.readMem(0xacff), 0x60);
        // CB 60 0046
        gbc.setState(0xb20f, 0x22e6, 0xcaf0, 0x956a, 0xa88c, 0xb22e, 0x0, 0x1);
        gbc.writeMem(0xb20f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x22e6);
        EXPECT(gbc.pc(), 0xb211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20f), 0xcb);
        EXPECT(gbc.readMem(0xb210), 0x60);
        // CB 60 0047
        gbc.setState(0x8e1, 0xe7b3, 0x5e30, 0x7def, 0x6fb0, 0x75a5, 0x1, 0x0);
        gbc.writeMem(0x8e1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe7b3);
        EXPECT(gbc.pc(), 0x8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0048
        gbc.setState(0xde0c, 0x2ccd, 0x9cc0, 0x5a4d, 0x304a, 0x6230, 0x0, 0x0);
        gbc.writeMem(0xde0c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2ccd);
        EXPECT(gbc.pc(), 0xde0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0c), 0xcb);
        EXPECT(gbc.readMem(0xde0d), 0x60);
        // CB 60 0049
        gbc.setState(0x3dcf, 0x639b, 0xa0b0, 0x532d, 0x71a7, 0xeda3, 0x0, 0x1);
        gbc.writeMem(0x3dcf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x639b);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 004A
        gbc.setState(0xaeb1, 0x9924, 0x6970, 0x5557, 0xdd95, 0x57a9, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9924);
        EXPECT(gbc.pc(), 0xaeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb1), 0xcb);
        EXPECT(gbc.readMem(0xaeb2), 0x60);
        // CB 60 004B
        gbc.setState(0x81de, 0xbca4, 0xa9e0, 0x63a3, 0xa169, 0xef5f, 0x0, 0x1);
        gbc.writeMem(0x81de, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbca4);
        EXPECT(gbc.pc(), 0x81e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81de), 0xcb);
        EXPECT(gbc.readMem(0x81df), 0x60);
        // CB 60 004D
        gbc.setState(0x41a0, 0xfe12, 0x96b0, 0xb048, 0xd415, 0x6b5, 0x0, 0x1);
        gbc.writeMem(0x41a0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfe12);
        EXPECT(gbc.pc(), 0x41a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 004E
        gbc.setState(0xcd20, 0xf640, 0x7240, 0x24ef, 0xa713, 0x5420, 0x1, 0x1);
        gbc.writeMem(0xcd20, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf640);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd20), 0xcb);
        EXPECT(gbc.readMem(0xcd21), 0x60);
        // CB 60 004F
        gbc.setState(0x17c2, 0x362a, 0xcb80, 0x1ca6, 0xde80, 0x8ac6, 0x1, 0x0);
        gbc.writeMem(0x17c2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0x17c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0050
        gbc.setState(0xc3e8, 0xd711, 0x130, 0xf78a, 0xcda4, 0x1d34, 0x1, 0x0);
        gbc.writeMem(0xc3e8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd711);
        EXPECT(gbc.pc(), 0xc3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e8), 0xcb);
        EXPECT(gbc.readMem(0xc3e9), 0x60);
        // CB 60 0051
        gbc.setState(0xca0, 0xc9bf, 0x1e20, 0x8a0b, 0x8372, 0xc4cb, 0x1, 0x0);
        gbc.writeMem(0xca0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc9bf);
        EXPECT(gbc.pc(), 0xca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0052
        gbc.setState(0x3e2f, 0xafe2, 0xf750, 0xcbfd, 0x9a4e, 0x6164, 0x0, 0x0);
        gbc.writeMem(0x3e2f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xafe2);
        EXPECT(gbc.pc(), 0x3e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0053
        gbc.setState(0x923e, 0xa728, 0x4bc0, 0x3a44, 0x1ede, 0xec5e, 0x0, 0x1);
        gbc.writeMem(0x923e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa728);
        EXPECT(gbc.pc(), 0x9240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923e), 0xcb);
        EXPECT(gbc.readMem(0x923f), 0x60);
        // CB 60 0054
        gbc.setState(0xb960, 0x89ae, 0xc2d0, 0x89b7, 0xadd1, 0xb0f4, 0x1, 0x1);
        gbc.writeMem(0xb960, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x89ae);
        EXPECT(gbc.pc(), 0xb962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb960), 0xcb);
        EXPECT(gbc.readMem(0xb961), 0x60);
        // CB 60 0055
        gbc.setState(0xdca6, 0x6d5e, 0xb660, 0x3ee2, 0xbe3e, 0x5384, 0x1, 0x0);
        gbc.writeMem(0xdca6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6d5e);
        EXPECT(gbc.pc(), 0xdca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca6), 0xcb);
        EXPECT(gbc.readMem(0xdca7), 0x60);
        // CB 60 0056
        gbc.setState(0x7541, 0xc88a, 0xf4f0, 0xa24d, 0x7fbe, 0x4559, 0x1, 0x1);
        gbc.writeMem(0x7541, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc88a);
        EXPECT(gbc.pc(), 0x7543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0057
        gbc.setState(0x8958, 0x603c, 0x2900, 0xec59, 0x4fa8, 0x56aa, 0x1, 0x1);
        gbc.writeMem(0x8958, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x603c);
        EXPECT(gbc.pc(), 0x895a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8958), 0xcb);
        EXPECT(gbc.readMem(0x8959), 0x60);
        // CB 60 0058
        gbc.setState(0x57d8, 0x1500, 0x3430, 0x755e, 0x82c8, 0x5452, 0x0, 0x1);
        gbc.writeMem(0x57d8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1500);
        EXPECT(gbc.pc(), 0x57da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0059
        gbc.setState(0xc418, 0x7965, 0x7070, 0xb0ba, 0x6b82, 0x7f24, 0x0, 0x1);
        gbc.writeMem(0xc418, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0xc41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc418), 0xcb);
        EXPECT(gbc.readMem(0xc419), 0x60);
        // CB 60 005A
        gbc.setState(0x91c7, 0xdb10, 0x1360, 0x7b39, 0x1128, 0xdbf4, 0x0, 0x0);
        gbc.writeMem(0x91c7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdb10);
        EXPECT(gbc.pc(), 0x91c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c7), 0xcb);
        EXPECT(gbc.readMem(0x91c8), 0x60);
        // CB 60 005B
        gbc.setState(0xe585, 0x487a, 0x94c0, 0xa7b3, 0x3e37, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0xe585, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x487a);
        EXPECT(gbc.pc(), 0xe587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe585), 0xcb);
        EXPECT(gbc.readMem(0xe586), 0x60);
        // CB 60 005C
        gbc.setState(0x6b44, 0xbc37, 0x7a90, 0xf940, 0x96db, 0xb48e, 0x0, 0x1);
        gbc.writeMem(0x6b44, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0x6b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 005D
        gbc.setState(0xb3fe, 0x3d4c, 0x1870, 0x4446, 0xf0f1, 0xe61c, 0x1, 0x1);
        gbc.writeMem(0xb3fe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0xb400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fe), 0xcb);
        EXPECT(gbc.readMem(0xb3ff), 0x60);
        // CB 60 005F
        gbc.setState(0x3936, 0x4e75, 0x80b0, 0x83d5, 0xa2e5, 0xf480, 0x1, 0x0);
        gbc.writeMem(0x3936, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4e75);
        EXPECT(gbc.pc(), 0x3938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0060
        gbc.setState(0x1c6b, 0x6de5, 0x8de0, 0xf520, 0x58d1, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x1c6b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6de5);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0061
        gbc.setState(0xab1e, 0xa64f, 0xb6e0, 0x65ad, 0xa303, 0x9628, 0x1, 0x1);
        gbc.writeMem(0xab1e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa64f);
        EXPECT(gbc.pc(), 0xab20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1e), 0xcb);
        EXPECT(gbc.readMem(0xab1f), 0x60);
        // CB 60 0062
        gbc.setState(0x6fa5, 0x77, 0xcb0, 0xf10c, 0x99e2, 0x14c8, 0x1, 0x1);
        gbc.writeMem(0x6fa5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x77);
        EXPECT(gbc.pc(), 0x6fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0063
        gbc.setState(0xeb69, 0x94c5, 0x5b00, 0x75c9, 0x8de6, 0xa5b8, 0x0, 0x0);
        gbc.writeMem(0xeb69, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0xeb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb69), 0xcb);
        EXPECT(gbc.readMem(0xeb6a), 0x60);
        // CB 60 0064
        gbc.setState(0x30ea, 0x19ae, 0x4c00, 0xad8d, 0x98ae, 0xa566, 0x0, 0x1);
        gbc.writeMem(0x30ea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x19ae);
        EXPECT(gbc.pc(), 0x30ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0065
        gbc.setState(0x89f3, 0x6353, 0xc3a0, 0x800f, 0xabfd, 0x4a8e, 0x1, 0x1);
        gbc.writeMem(0x89f3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6353);
        EXPECT(gbc.pc(), 0x89f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f3), 0xcb);
        EXPECT(gbc.readMem(0x89f4), 0x60);
        // CB 60 0066
        gbc.setState(0x5be2, 0x5266, 0xd6a0, 0x9542, 0x1ee9, 0xf6b, 0x1, 0x0);
        gbc.writeMem(0x5be2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0x5be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0067
        gbc.setState(0x31d, 0x7e23, 0x9980, 0xc0f0, 0x9f28, 0xf179, 0x0, 0x1);
        gbc.writeMem(0x31d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7e23);
        EXPECT(gbc.pc(), 0x31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0068
        gbc.setState(0xe00c, 0x3688, 0xcf60, 0xf256, 0x24c2, 0x4cd9, 0x0, 0x0);
        gbc.writeMem(0xe00c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3688);
        EXPECT(gbc.pc(), 0xe00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00c), 0xcb);
        EXPECT(gbc.readMem(0xe00d), 0x60);
        // CB 60 0069
        gbc.setState(0x4bed, 0x486d, 0xf130, 0x7924, 0xef18, 0xf55c, 0x0, 0x0);
        gbc.writeMem(0x4bed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x486d);
        EXPECT(gbc.pc(), 0x4bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 006A
        gbc.setState(0x1218, 0x9082, 0xe380, 0xd560, 0x42b1, 0x26fd, 0x1, 0x0);
        gbc.writeMem(0x1218, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9082);
        EXPECT(gbc.pc(), 0x121a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 006B
        gbc.setState(0xc1f1, 0xf8bb, 0x8d70, 0xe4a, 0x9bd3, 0x39f4, 0x0, 0x1);
        gbc.writeMem(0xc1f1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf8bb);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f1), 0xcb);
        EXPECT(gbc.readMem(0xc1f2), 0x60);
        // CB 60 006C
        gbc.setState(0x4f39, 0x3d19, 0x7a30, 0x7fa3, 0x4e66, 0xd56a, 0x0, 0x0);
        gbc.writeMem(0x4f39, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3d19);
        EXPECT(gbc.pc(), 0x4f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 006D
        gbc.setState(0x1656, 0x166c, 0x3770, 0x66dc, 0xa2, 0x866d, 0x0, 0x1);
        gbc.writeMem(0x1656, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x166c);
        EXPECT(gbc.pc(), 0x1658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 006E
        gbc.setState(0xc04, 0x52d4, 0x7ed0, 0xa7cf, 0x9c98, 0x3d2d, 0x1, 0x0);
        gbc.writeMem(0xc04, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x52d4);
        EXPECT(gbc.pc(), 0xc06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 006F
        gbc.setState(0x2d6b, 0x7ffb, 0x1f30, 0x1069, 0xa7ad, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0x2d6b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7ffb);
        EXPECT(gbc.pc(), 0x2d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0071
        gbc.setState(0x63bc, 0x2209, 0x4770, 0xdc93, 0xeac5, 0xc8d1, 0x1, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0x63be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0072
        gbc.setState(0xab81, 0x93d, 0xd8e0, 0x87ee, 0x1faa, 0xf410, 0x0, 0x0);
        gbc.writeMem(0xab81, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x93d);
        EXPECT(gbc.pc(), 0xab83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab81), 0xcb);
        EXPECT(gbc.readMem(0xab82), 0x60);
        // CB 60 0073
        gbc.setState(0x99ed, 0x13bf, 0xab0, 0xca16, 0x944f, 0x6ab7, 0x0, 0x1);
        gbc.writeMem(0x99ed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x13bf);
        EXPECT(gbc.pc(), 0x99ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ed), 0xcb);
        EXPECT(gbc.readMem(0x99ee), 0x60);
        // CB 60 0074
        gbc.setState(0xd75c, 0x23cd, 0xba10, 0x237d, 0x18c5, 0x2817, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x23cd);
        EXPECT(gbc.pc(), 0xd75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75c), 0xcb);
        EXPECT(gbc.readMem(0xd75d), 0x60);
        // CB 60 0075
        gbc.setState(0x379a, 0x8ab4, 0x3e80, 0x8a6d, 0x9e73, 0x9616, 0x1, 0x0);
        gbc.writeMem(0x379a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8ab4);
        EXPECT(gbc.pc(), 0x379c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0076
        gbc.setState(0xcda5, 0x9c18, 0x2730, 0xe34d, 0x3471, 0x9075, 0x1, 0x1);
        gbc.writeMem(0xcda5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9c18);
        EXPECT(gbc.pc(), 0xcda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda5), 0xcb);
        EXPECT(gbc.readMem(0xcda6), 0x60);
        // CB 60 0077
        gbc.setState(0xc6d2, 0x4921, 0x9810, 0xebaf, 0xaa79, 0xb8a7, 0x1, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4921);
        EXPECT(gbc.pc(), 0xc6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0xcb);
        EXPECT(gbc.readMem(0xc6d3), 0x60);
        // CB 60 0079
        gbc.setState(0x25f6, 0x75, 0x2d40, 0xe502, 0xf773, 0xb042, 0x1, 0x0);
        gbc.writeMem(0x25f6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x75);
        EXPECT(gbc.pc(), 0x25f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 007A
        gbc.setState(0x9af6, 0xe5c9, 0x18c0, 0x3848, 0xa2f3, 0x9b0d, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe5c9);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af6), 0xcb);
        EXPECT(gbc.readMem(0x9af7), 0x60);
        // CB 60 007B
        gbc.setState(0xbc2b, 0x27e3, 0xac60, 0x1d4d, 0x5d72, 0xbb5c, 0x0, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x27e3);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0x60);
        // CB 60 007C
        gbc.setState(0xea39, 0xa69a, 0x6e00, 0xb2c, 0x3f39, 0x34b5, 0x1, 0x0);
        gbc.writeMem(0xea39, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa69a);
        EXPECT(gbc.pc(), 0xea3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea39), 0xcb);
        EXPECT(gbc.readMem(0xea3a), 0x60);
        // CB 60 007D
        gbc.setState(0xef98, 0x7b83, 0xf5e0, 0x9d25, 0x6f1f, 0x695b, 0x1, 0x0);
        gbc.writeMem(0xef98, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7b83);
        EXPECT(gbc.pc(), 0xef9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef98), 0xcb);
        EXPECT(gbc.readMem(0xef99), 0x60);
        // CB 60 007E
        gbc.setState(0xc48d, 0xf50b, 0x18b0, 0xa887, 0x8b50, 0x1280, 0x0, 0x1);
        gbc.writeMem(0xc48d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0xc48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48d), 0xcb);
        EXPECT(gbc.readMem(0xc48e), 0x60);
        // CB 60 007F
        gbc.setState(0x4b70, 0xfbd4, 0x5460, 0x86f5, 0xc0ec, 0xc54c, 0x1, 0x1);
        gbc.writeMem(0x4b70, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfbd4);
        EXPECT(gbc.pc(), 0x4b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0080
        gbc.setState(0x2bb6, 0x79ce, 0xdef0, 0x3751, 0x91fd, 0x97ca, 0x1, 0x1);
        gbc.writeMem(0x2bb6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x79ce);
        EXPECT(gbc.pc(), 0x2bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0081
        gbc.setState(0x4afe, 0xdfee, 0x5940, 0x3789, 0xb569, 0xad27, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdfee);
        EXPECT(gbc.pc(), 0x4b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0082
        gbc.setState(0xd06e, 0x5db3, 0x8510, 0xa88c, 0x24a9, 0x9689, 0x1, 0x1);
        gbc.writeMem(0xd06e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5db3);
        EXPECT(gbc.pc(), 0xd070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd06e), 0xcb);
        EXPECT(gbc.readMem(0xd06f), 0x60);
        // CB 60 0083
        gbc.setState(0xd142, 0x5c87, 0x9b0, 0xd3fa, 0xb74f, 0xf388, 0x0, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5c87);
        EXPECT(gbc.pc(), 0xd144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd142), 0xcb);
        EXPECT(gbc.readMem(0xd143), 0x60);
        // CB 60 0084
        gbc.setState(0x3bca, 0x96bc, 0x6aa0, 0xbdba, 0xf3d0, 0xc4eb, 0x1, 0x1);
        gbc.writeMem(0x3bca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x96bc);
        EXPECT(gbc.pc(), 0x3bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0085
        gbc.setState(0x9234, 0x3dd9, 0x6300, 0x7ea9, 0x715d, 0x72b8, 0x0, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3dd9);
        EXPECT(gbc.pc(), 0x9236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9234), 0xcb);
        EXPECT(gbc.readMem(0x9235), 0x60);
        // CB 60 0086
        gbc.setState(0x8ec8, 0x3a1, 0xc580, 0x75d3, 0xf704, 0x915d, 0x1, 0x1);
        gbc.writeMem(0x8ec8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3a1);
        EXPECT(gbc.pc(), 0x8eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec8), 0xcb);
        EXPECT(gbc.readMem(0x8ec9), 0x60);
        // CB 60 0087
        gbc.setState(0x7907, 0x7a87, 0x4750, 0x8ebb, 0x28ad, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0x7907, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7a87);
        EXPECT(gbc.pc(), 0x7909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0088
        gbc.setState(0x6f99, 0x9839, 0x59c0, 0x6c5f, 0x87b9, 0x4393, 0x1, 0x0);
        gbc.writeMem(0x6f99, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9839);
        EXPECT(gbc.pc(), 0x6f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 008B
        gbc.setState(0xa5e9, 0x9dda, 0xf6c0, 0xc2a8, 0x8ea6, 0x914e, 0x1, 0x1);
        gbc.writeMem(0xa5e9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9dda);
        EXPECT(gbc.pc(), 0xa5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e9), 0xcb);
        EXPECT(gbc.readMem(0xa5ea), 0x60);
        // CB 60 008C
        gbc.setState(0x1c18, 0x41dd, 0x7fc0, 0xcd9f, 0x6a99, 0x9c53, 0x1, 0x1);
        gbc.writeMem(0x1c18, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x41dd);
        EXPECT(gbc.pc(), 0x1c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 008D
        gbc.setState(0x6d37, 0x9502, 0x9870, 0x2fe0, 0xd6ea, 0x8b9a, 0x0, 0x1);
        gbc.writeMem(0x6d37, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9502);
        EXPECT(gbc.pc(), 0x6d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 008E
        gbc.setState(0x7bec, 0x8e5b, 0x6900, 0x589f, 0xcb11, 0x19e7, 0x1, 0x1);
        gbc.writeMem(0x7bec, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8e5b);
        EXPECT(gbc.pc(), 0x7bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 008F
        gbc.setState(0xb7e4, 0x5760, 0xa430, 0x6e2b, 0x4043, 0x3f02, 0x0, 0x0);
        gbc.writeMem(0xb7e4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5760);
        EXPECT(gbc.pc(), 0xb7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e4), 0xcb);
        EXPECT(gbc.readMem(0xb7e5), 0x60);
        // CB 60 0090
        gbc.setState(0xaacc, 0x2998, 0x21c0, 0x9f0c, 0x146b, 0x6ecb, 0x0, 0x0);
        gbc.writeMem(0xaacc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2998);
        EXPECT(gbc.pc(), 0xaace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaacc), 0xcb);
        EXPECT(gbc.readMem(0xaacd), 0x60);
        // CB 60 0091
        gbc.setState(0x2589, 0x422b, 0xe5e0, 0x1f33, 0x3bb7, 0x987c, 0x0, 0x1);
        gbc.writeMem(0x2589, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x422b);
        EXPECT(gbc.pc(), 0x258b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0092
        gbc.setState(0x92ab, 0xb410, 0xa3a0, 0xce15, 0xd9a, 0xf11, 0x1, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb410);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0xcb);
        EXPECT(gbc.readMem(0x92ac), 0x60);
        // CB 60 0093
        gbc.setState(0x2085, 0x980b, 0x3bf0, 0xff9, 0x65f6, 0x56d0, 0x0, 0x1);
        gbc.writeMem(0x2085, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x980b);
        EXPECT(gbc.pc(), 0x2087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0094
        gbc.setState(0xab17, 0x222b, 0x1cf0, 0xcffb, 0xf85d, 0x2342, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x222b);
        EXPECT(gbc.pc(), 0xab19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab17), 0xcb);
        EXPECT(gbc.readMem(0xab18), 0x60);
        // CB 60 0095
        gbc.setState(0x5b88, 0xdfaa, 0xe680, 0x31, 0x9c9f, 0x6e21, 0x0, 0x0);
        gbc.writeMem(0x5b88, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdfaa);
        EXPECT(gbc.pc(), 0x5b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0096
        gbc.setState(0x5ccf, 0xc1ee, 0x6f60, 0xa379, 0x16f0, 0xd129, 0x1, 0x1);
        gbc.writeMem(0x5ccf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc1ee);
        EXPECT(gbc.pc(), 0x5cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0097
        gbc.setState(0x488f, 0xcac8, 0x7910, 0xa567, 0x5b90, 0x7f9b, 0x1, 0x0);
        gbc.writeMem(0x488f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcac8);
        EXPECT(gbc.pc(), 0x4891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0098
        gbc.setState(0xef7, 0xb7b, 0x6fa0, 0xb03b, 0x5376, 0x186, 0x0, 0x1);
        gbc.writeMem(0xef7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb7b);
        EXPECT(gbc.pc(), 0xef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0099
        gbc.setState(0x1d65, 0xe82d, 0xc220, 0x7dbe, 0xc713, 0x2c90, 0x1, 0x0);
        gbc.writeMem(0x1d65, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe82d);
        EXPECT(gbc.pc(), 0x1d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 009A
        gbc.setState(0x58af, 0xa94c, 0xdbf0, 0x3e28, 0x96b0, 0x2431, 0x0, 0x1);
        gbc.writeMem(0x58af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0x58b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 009B
        gbc.setState(0x5f2a, 0x15b7, 0xb20, 0xbfa8, 0x5bd9, 0x650, 0x1, 0x1);
        gbc.writeMem(0x5f2a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 009C
        gbc.setState(0xe1db, 0x9737, 0x9450, 0x9a4d, 0xb628, 0x8240, 0x0, 0x0);
        gbc.writeMem(0xe1db, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9737);
        EXPECT(gbc.pc(), 0xe1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0xcb);
        EXPECT(gbc.readMem(0xe1dc), 0x60);
        // CB 60 009D
        gbc.setState(0x9157, 0x7ae4, 0xf7f0, 0x8698, 0xe6f, 0xa5f8, 0x1, 0x1);
        gbc.writeMem(0x9157, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7ae4);
        EXPECT(gbc.pc(), 0x9159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9157), 0xcb);
        EXPECT(gbc.readMem(0x9158), 0x60);
        // CB 60 009E
        gbc.setState(0xb99e, 0x1686, 0x2980, 0xbf4b, 0xb9a0, 0xf83d, 0x0, 0x1);
        gbc.writeMem(0xb99e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1686);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99e), 0xcb);
        EXPECT(gbc.readMem(0xb99f), 0x60);
        // CB 60 009F
        gbc.setState(0x5b0b, 0x6cfa, 0xc720, 0x26c8, 0xf7d2, 0x8784, 0x0, 0x0);
        gbc.writeMem(0x5b0b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6cfa);
        EXPECT(gbc.pc(), 0x5b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00A0
        gbc.setState(0x1e27, 0x9cde, 0x7bf0, 0xd7c6, 0x5cce, 0x6d93, 0x0, 0x1);
        gbc.writeMem(0x1e27, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9cde);
        EXPECT(gbc.pc(), 0x1e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00A1
        gbc.setState(0x19da, 0x28dd, 0x6170, 0xf03b, 0x446c, 0xb14d, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x28dd);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00A2
        gbc.setState(0xb7d7, 0x6a3d, 0xd110, 0xd624, 0x33e6, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0xb7d7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6a3d);
        EXPECT(gbc.pc(), 0xb7d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d7), 0xcb);
        EXPECT(gbc.readMem(0xb7d8), 0x60);
        // CB 60 00A3
        gbc.setState(0x1cea, 0xa455, 0xbc80, 0x1e49, 0xdf03, 0x35e1, 0x1, 0x1);
        gbc.writeMem(0x1cea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa455);
        EXPECT(gbc.pc(), 0x1cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00A4
        gbc.setState(0xb66a, 0xe3e7, 0x67a0, 0x86cd, 0x77c1, 0x6366, 0x0, 0x0);
        gbc.writeMem(0xb66a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0xb66c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66a), 0xcb);
        EXPECT(gbc.readMem(0xb66b), 0x60);
        // CB 60 00A5
        gbc.setState(0x87ce, 0xdd1c, 0x3790, 0xad65, 0xb0ce, 0x77be, 0x0, 0x0);
        gbc.writeMem(0x87ce, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x87d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ce), 0xcb);
        EXPECT(gbc.readMem(0x87cf), 0x60);
        // CB 60 00A6
        gbc.setState(0xbf48, 0xc99e, 0xc980, 0x6791, 0xa0c5, 0x9d6, 0x0, 0x1);
        gbc.writeMem(0xbf48, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc99e);
        EXPECT(gbc.pc(), 0xbf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf48), 0xcb);
        EXPECT(gbc.readMem(0xbf49), 0x60);
        // CB 60 00A7
        gbc.setState(0x1235, 0xee0e, 0x1640, 0x490a, 0xe7ab, 0xffed, 0x0, 0x0);
        gbc.writeMem(0x1235, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xee0e);
        EXPECT(gbc.pc(), 0x1237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00A8
        gbc.setState(0x42e2, 0x82ef, 0x3530, 0x79a3, 0xcc31, 0xb71, 0x0, 0x1);
        gbc.writeMem(0x42e2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0x42e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00A9
        gbc.setState(0x9dd3, 0x8ae7, 0x13b0, 0xa0e7, 0x390e, 0x5b2d, 0x1, 0x1);
        gbc.writeMem(0x9dd3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8ae7);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd3), 0xcb);
        EXPECT(gbc.readMem(0x9dd4), 0x60);
        // CB 60 00AA
        gbc.setState(0x6b5e, 0xd7de, 0x6e10, 0x294e, 0xacad, 0x351d, 0x0, 0x0);
        gbc.writeMem(0x6b5e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd7de);
        EXPECT(gbc.pc(), 0x6b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00AB
        gbc.setState(0x54fd, 0xb15c, 0xba50, 0x328f, 0x278d, 0x1db0, 0x1, 0x1);
        gbc.writeMem(0x54fd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb15c);
        EXPECT(gbc.pc(), 0x54ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00AC
        gbc.setState(0x9554, 0x3f16, 0xaa60, 0xf16f, 0x64ee, 0xab09, 0x0, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3f16);
        EXPECT(gbc.pc(), 0x9556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9554), 0xcb);
        EXPECT(gbc.readMem(0x9555), 0x60);
        // CB 60 00AD
        gbc.setState(0x7499, 0xdc, 0xda60, 0x5a70, 0x2464, 0x29d7, 0x1, 0x1);
        gbc.writeMem(0x7499, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdc);
        EXPECT(gbc.pc(), 0x749b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00AE
        gbc.setState(0x66d0, 0xcff1, 0x640, 0xfc64, 0x23cf, 0x7035, 0x1, 0x0);
        gbc.writeMem(0x66d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcff1);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00AF
        gbc.setState(0xec0c, 0x6c8f, 0xfe40, 0xe702, 0xca08, 0xbba5, 0x0, 0x1);
        gbc.writeMem(0xec0c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6c8f);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0c), 0xcb);
        EXPECT(gbc.readMem(0xec0d), 0x60);
        // CB 60 00B0
        gbc.setState(0x38df, 0x7b36, 0x2070, 0xf1b9, 0xb062, 0xfcdb, 0x1, 0x1);
        gbc.writeMem(0x38df, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7b36);
        EXPECT(gbc.pc(), 0x38e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00B1
        gbc.setState(0x2087, 0x6f4e, 0xa8f0, 0xfad8, 0x4509, 0xd701, 0x0, 0x0);
        gbc.writeMem(0x2087, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6f4e);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00B2
        gbc.setState(0x43f, 0x81d9, 0xa870, 0x9465, 0x82cb, 0x6c1d, 0x1, 0x1);
        gbc.writeMem(0x43f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x81d9);
        EXPECT(gbc.pc(), 0x441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00B5
        gbc.setState(0x9543, 0x82ca, 0xdfd0, 0x7a5a, 0xaa85, 0xde4b, 0x1, 0x1);
        gbc.writeMem(0x9543, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0x9545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9543), 0xcb);
        EXPECT(gbc.readMem(0x9544), 0x60);
        // CB 60 00B6
        gbc.setState(0xb134, 0xc54e, 0x6cc0, 0x4f38, 0x860, 0x3d7b, 0x1, 0x0);
        gbc.writeMem(0xb134, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc54e);
        EXPECT(gbc.pc(), 0xb136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb134), 0xcb);
        EXPECT(gbc.readMem(0xb135), 0x60);
        // CB 60 00B7
        gbc.setState(0x7977, 0x42e4, 0xcdb0, 0x9f94, 0xc7fe, 0x1c69, 0x1, 0x0);
        gbc.writeMem(0x7977, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x42e4);
        EXPECT(gbc.pc(), 0x7979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00B8
        gbc.setState(0x69f0, 0x3def, 0xb7f0, 0xffb5, 0x27b6, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0x69f0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3def);
        EXPECT(gbc.pc(), 0x69f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00B9
        gbc.setState(0x6c22, 0x6b22, 0x3a50, 0x7bf9, 0xce48, 0x46ea, 0x0, 0x0);
        gbc.writeMem(0x6c22, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6b22);
        EXPECT(gbc.pc(), 0x6c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00BA
        gbc.setState(0x3bbf, 0x9d21, 0x4630, 0x54c0, 0xa400, 0xcc8f, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9d21);
        EXPECT(gbc.pc(), 0x3bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00BB
        gbc.setState(0x5950, 0x1c41, 0x1f0, 0xfbf, 0x654b, 0xdf8a, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1c41);
        EXPECT(gbc.pc(), 0x5952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00BC
        gbc.setState(0xa30e, 0x31e9, 0x9300, 0x7342, 0x60df, 0x2359, 0x0, 0x1);
        gbc.writeMem(0xa30e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x31e9);
        EXPECT(gbc.pc(), 0xa310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30e), 0xcb);
        EXPECT(gbc.readMem(0xa30f), 0x60);
        // CB 60 00BD
        gbc.setState(0xa898, 0x4c3c, 0xcf60, 0x7664, 0x3c86, 0xfc6c, 0x0, 0x0);
        gbc.writeMem(0xa898, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4c3c);
        EXPECT(gbc.pc(), 0xa89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa898), 0xcb);
        EXPECT(gbc.readMem(0xa899), 0x60);
        // CB 60 00BE
        gbc.setState(0xaab8, 0x6e09, 0xb000, 0x65a7, 0xcd2b, 0x3274, 0x0, 0x0);
        gbc.writeMem(0xaab8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6e09);
        EXPECT(gbc.pc(), 0xaaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab8), 0xcb);
        EXPECT(gbc.readMem(0xaab9), 0x60);
        // CB 60 00BF
        gbc.setState(0x4473, 0xbf7a, 0x8820, 0xdc20, 0x7b1d, 0x4bf0, 0x0, 0x0);
        gbc.writeMem(0x4473, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbf7a);
        EXPECT(gbc.pc(), 0x4475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00C0
        gbc.setState(0x7e73, 0x6a76, 0x6a80, 0x3862, 0x881b, 0xfa08, 0x0, 0x1);
        gbc.writeMem(0x7e73, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6a76);
        EXPECT(gbc.pc(), 0x7e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00C1
        gbc.setState(0x7dfc, 0x27c3, 0xad0, 0xc08e, 0x56a4, 0xf40a, 0x0, 0x1);
        gbc.writeMem(0x7dfc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x27c3);
        EXPECT(gbc.pc(), 0x7dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00C2
        gbc.setState(0xa165, 0xcdac, 0xf4e0, 0xd1ef, 0x809a, 0x55f3, 0x1, 0x0);
        gbc.writeMem(0xa165, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcdac);
        EXPECT(gbc.pc(), 0xa167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa165), 0xcb);
        EXPECT(gbc.readMem(0xa166), 0x60);
        // CB 60 00C3
        gbc.setState(0x88eb, 0xcbd, 0x2130, 0x5124, 0x8acc, 0x9590, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcbd);
        EXPECT(gbc.pc(), 0x88ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88eb), 0xcb);
        EXPECT(gbc.readMem(0x88ec), 0x60);
        // CB 60 00C4
        gbc.setState(0xb6c9, 0x5379, 0x3c0, 0x40e3, 0xbfff, 0x9bb, 0x1, 0x0);
        gbc.writeMem(0xb6c9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5379);
        EXPECT(gbc.pc(), 0xb6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c9), 0xcb);
        EXPECT(gbc.readMem(0xb6ca), 0x60);
        // CB 60 00C5
        gbc.setState(0x85d7, 0xd32d, 0x7240, 0xa5fd, 0x43b7, 0x4127, 0x1, 0x1);
        gbc.writeMem(0x85d7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd32d);
        EXPECT(gbc.pc(), 0x85d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d7), 0xcb);
        EXPECT(gbc.readMem(0x85d8), 0x60);
        // CB 60 00C6
        gbc.setState(0x436c, 0xb888, 0xb5a0, 0x8f49, 0x45c5, 0x71f5, 0x1, 0x0);
        gbc.writeMem(0x436c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb888);
        EXPECT(gbc.pc(), 0x436e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00C7
        gbc.setState(0xc542, 0x4901, 0x6110, 0xbe43, 0x50b4, 0xb869, 0x1, 0x1);
        gbc.writeMem(0xc542, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4901);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0x60);
        // CB 60 00C8
        gbc.setState(0x1a43, 0x76ea, 0x3660, 0xee05, 0x6da5, 0x4f09, 0x0, 0x1);
        gbc.writeMem(0x1a43, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x76ea);
        EXPECT(gbc.pc(), 0x1a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00C9
        gbc.setState(0x945a, 0xc578, 0xa610, 0x54cd, 0xdfc1, 0x3f57, 0x0, 0x1);
        gbc.writeMem(0x945a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945a), 0xcb);
        EXPECT(gbc.readMem(0x945b), 0x60);
        // CB 60 00CA
        gbc.setState(0xac0, 0xd394, 0x1c80, 0x2c41, 0x21e, 0x1b20, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd394);
        EXPECT(gbc.pc(), 0xac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00CB
        gbc.setState(0x8e90, 0xa631, 0xb260, 0xfd19, 0xd75f, 0xb27d, 0x0, 0x1);
        gbc.writeMem(0x8e90, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa631);
        EXPECT(gbc.pc(), 0x8e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e90), 0xcb);
        EXPECT(gbc.readMem(0x8e91), 0x60);
        // CB 60 00CC
        gbc.setState(0xd9bd, 0xf719, 0x1b40, 0xf60b, 0x3409, 0xa325, 0x0, 0x0);
        gbc.writeMem(0xd9bd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf719);
        EXPECT(gbc.pc(), 0xd9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bd), 0xcb);
        EXPECT(gbc.readMem(0xd9be), 0x60);
        // CB 60 00CE
        gbc.setState(0x3a11, 0xc86c, 0x9410, 0x41dd, 0xb8c4, 0xcb8d, 0x0, 0x0);
        gbc.writeMem(0x3a11, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc86c);
        EXPECT(gbc.pc(), 0x3a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00CF
        gbc.setState(0xc3b0, 0xdde5, 0x7390, 0x4284, 0x153, 0xbda3, 0x1, 0x1);
        gbc.writeMem(0xc3b0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdde5);
        EXPECT(gbc.pc(), 0xc3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b0), 0xcb);
        EXPECT(gbc.readMem(0xc3b1), 0x60);
        // CB 60 00D0
        gbc.setState(0x9755, 0xe72f, 0x2670, 0xaf87, 0x58f, 0x67d4, 0x1, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe72f);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9755), 0xcb);
        EXPECT(gbc.readMem(0x9756), 0x60);
        // CB 60 00D1
        gbc.setState(0x3334, 0x15ec, 0x7350, 0x3369, 0x6879, 0xd077, 0x0, 0x1);
        gbc.writeMem(0x3334, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x15ec);
        EXPECT(gbc.pc(), 0x3336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00D2
        gbc.setState(0x1cc2, 0x3c52, 0xdd20, 0x436b, 0xc147, 0x7234, 0x0, 0x1);
        gbc.writeMem(0x1cc2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c52);
        EXPECT(gbc.pc(), 0x1cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00D3
        gbc.setState(0x7772, 0xefd6, 0xd970, 0x2ab3, 0x721, 0x27f0, 0x1, 0x0);
        gbc.writeMem(0x7772, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xefd6);
        EXPECT(gbc.pc(), 0x7774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00D5
        gbc.setState(0x7b21, 0x7183, 0x8520, 0xc6ed, 0x5cf, 0x5cb8, 0x0, 0x1);
        gbc.writeMem(0x7b21, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7183);
        EXPECT(gbc.pc(), 0x7b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00D6
        gbc.setState(0xd17, 0x807d, 0x9b50, 0xe927, 0x6adf, 0xa456, 0x0, 0x0);
        gbc.writeMem(0xd17, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x807d);
        EXPECT(gbc.pc(), 0xd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00D7
        gbc.setState(0x4422, 0x9671, 0x97b0, 0xbe54, 0xb946, 0xd249, 0x1, 0x1);
        gbc.writeMem(0x4422, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9671);
        EXPECT(gbc.pc(), 0x4424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00D8
        gbc.setState(0xefde, 0x30a4, 0x3790, 0x7ec, 0xbf2d, 0xaaf1, 0x0, 0x1);
        gbc.writeMem(0xefde, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x30a4);
        EXPECT(gbc.pc(), 0xefe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefde), 0xcb);
        EXPECT(gbc.readMem(0xefdf), 0x60);
        // CB 60 00D9
        gbc.setState(0x7bbd, 0x788e, 0xb30, 0xcc88, 0x814d, 0x54e8, 0x1, 0x1);
        gbc.writeMem(0x7bbd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x788e);
        EXPECT(gbc.pc(), 0x7bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00DA
        gbc.setState(0xbfe7, 0xdc88, 0x4660, 0x6b00, 0xc5b9, 0xa9da, 0x1, 0x1);
        gbc.writeMem(0xbfe7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdc88);
        EXPECT(gbc.pc(), 0xbfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe7), 0xcb);
        EXPECT(gbc.readMem(0xbfe8), 0x60);
        // CB 60 00DB
        gbc.setState(0x7a26, 0xe6e0, 0x9120, 0x4e5a, 0x75cc, 0x2136, 0x1, 0x0);
        gbc.writeMem(0x7a26, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe6e0);
        EXPECT(gbc.pc(), 0x7a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00DD
        gbc.setState(0xe0f9, 0x7069, 0x8120, 0xc1de, 0x5676, 0x3ab6, 0x0, 0x1);
        gbc.writeMem(0xe0f9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7069);
        EXPECT(gbc.pc(), 0xe0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f9), 0xcb);
        EXPECT(gbc.readMem(0xe0fa), 0x60);
        // CB 60 00DE
        gbc.setState(0xc35b, 0xc41d, 0xa710, 0x5e01, 0x69a9, 0xd6d8, 0x1, 0x1);
        gbc.writeMem(0xc35b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc41d);
        EXPECT(gbc.pc(), 0xc35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35b), 0xcb);
        EXPECT(gbc.readMem(0xc35c), 0x60);
        // CB 60 00DF
        gbc.setState(0xcf00, 0x912f, 0xd590, 0xd316, 0xb0df, 0xf616, 0x0, 0x1);
        gbc.writeMem(0xcf00, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x912f);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf00), 0xcb);
        EXPECT(gbc.readMem(0xcf01), 0x60);
        // CB 60 00E1
        gbc.setState(0xa26f, 0x3427, 0x5480, 0x3116, 0x1efc, 0xb1fc, 0x0, 0x0);
        gbc.writeMem(0xa26f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3427);
        EXPECT(gbc.pc(), 0xa271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26f), 0xcb);
        EXPECT(gbc.readMem(0xa270), 0x60);
        // CB 60 00E2
        gbc.setState(0xb4e6, 0x1487, 0x26d0, 0xbfb3, 0xf709, 0xcf85, 0x0, 0x0);
        gbc.writeMem(0xb4e6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1487);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e6), 0xcb);
        EXPECT(gbc.readMem(0xb4e7), 0x60);
        // CB 60 00E3
        gbc.setState(0x2138, 0x213e, 0x66a0, 0x64a9, 0x3535, 0xe555, 0x1, 0x0);
        gbc.writeMem(0x2138, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x213e);
        EXPECT(gbc.pc(), 0x213a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00E4
        gbc.setState(0xb358, 0x954a, 0x7c30, 0xf88d, 0x51b2, 0xda5c, 0x0, 0x1);
        gbc.writeMem(0xb358, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x954a);
        EXPECT(gbc.pc(), 0xb35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb358), 0xcb);
        EXPECT(gbc.readMem(0xb359), 0x60);
        // CB 60 00E5
        gbc.setState(0x45f4, 0x641d, 0xb6a0, 0xc2b, 0x2531, 0xfbee, 0x1, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00E6
        gbc.setState(0x6b18, 0x24c2, 0x8550, 0x1420, 0xb8f4, 0xce52, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24c2);
        EXPECT(gbc.pc(), 0x6b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00E7
        gbc.setState(0x6c07, 0x3a73, 0x58d0, 0x8042, 0x669, 0x56b6, 0x0, 0x1);
        gbc.writeMem(0x6c07, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3a73);
        EXPECT(gbc.pc(), 0x6c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00E8
        gbc.setState(0x8a9e, 0x8d0a, 0x8110, 0x93cb, 0xf2b3, 0x4fa2, 0x0, 0x1);
        gbc.writeMem(0x8a9e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8d0a);
        EXPECT(gbc.pc(), 0x8aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9e), 0xcb);
        EXPECT(gbc.readMem(0x8a9f), 0x60);
        // CB 60 00E9
        gbc.setState(0x8eaa, 0xd363, 0x6db0, 0xdee5, 0x4b99, 0x9bd4, 0x1, 0x1);
        gbc.writeMem(0x8eaa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd363);
        EXPECT(gbc.pc(), 0x8eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eaa), 0xcb);
        EXPECT(gbc.readMem(0x8eab), 0x60);
        // CB 60 00EA
        gbc.setState(0xf83, 0x5cdf, 0xcd0, 0x86be, 0x395f, 0x22c, 0x1, 0x0);
        gbc.writeMem(0xf83, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5cdf);
        EXPECT(gbc.pc(), 0xf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00EB
        gbc.setState(0xae3b, 0xb622, 0x4940, 0x5f65, 0x8023, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0xae3b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb622);
        EXPECT(gbc.pc(), 0xae3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3b), 0xcb);
        EXPECT(gbc.readMem(0xae3c), 0x60);
        // CB 60 00EC
        gbc.setState(0x12d8, 0xaa73, 0x6500, 0x1a7b, 0x31cd, 0x3e5a, 0x0, 0x1);
        gbc.writeMem(0x12d8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaa73);
        EXPECT(gbc.pc(), 0x12da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00ED
        gbc.setState(0xa7af, 0xc54c, 0x4490, 0xf379, 0xa23f, 0x9a0, 0x1, 0x0);
        gbc.writeMem(0xa7af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc54c);
        EXPECT(gbc.pc(), 0xa7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7af), 0xcb);
        EXPECT(gbc.readMem(0xa7b0), 0x60);
        // CB 60 00EE
        gbc.setState(0x4c53, 0xa182, 0xf670, 0xe3ce, 0x891d, 0xad3e, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0x4c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00EF
        gbc.setState(0xb561, 0xc71c, 0x4590, 0xa1c4, 0xccb0, 0x6960, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc71c);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb561), 0xcb);
        EXPECT(gbc.readMem(0xb562), 0x60);
        // CB 60 00F0
        gbc.setState(0xb774, 0x4a88, 0xc4c0, 0x15a2, 0x9b29, 0x3d8e, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0xb776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb774), 0xcb);
        EXPECT(gbc.readMem(0xb775), 0x60);
        // CB 60 00F1
        gbc.setState(0x5a4d, 0xb377, 0x6b00, 0x8835, 0x65a0, 0x6a24, 0x1, 0x1);
        gbc.writeMem(0x5a4d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0x5a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00F2
        gbc.setState(0x6e71, 0xe5bc, 0x9630, 0xc669, 0x3f46, 0xa056, 0x0, 0x1);
        gbc.writeMem(0x6e71, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe5bc);
        EXPECT(gbc.pc(), 0x6e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00F3
        gbc.setState(0x14b5, 0x386f, 0x3380, 0x486, 0x721a, 0xa75, 0x0, 0x1);
        gbc.writeMem(0x14b5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x386f);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00F4
        gbc.setState(0x6186, 0x8f02, 0x8650, 0x2b, 0xd703, 0xa22, 0x1, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8f02);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00F5
        gbc.setState(0xe92f, 0xca20, 0xc030, 0x6acc, 0x3aa8, 0xf7a2, 0x0, 0x1);
        gbc.writeMem(0xe92f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xca20);
        EXPECT(gbc.pc(), 0xe931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92f), 0xcb);
        EXPECT(gbc.readMem(0xe930), 0x60);
        // CB 60 00F6
        gbc.setState(0x4d31, 0x5718, 0xa10, 0xad3e, 0x5386, 0x4b55, 0x1, 0x0);
        gbc.writeMem(0x4d31, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5718);
        EXPECT(gbc.pc(), 0x4d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00F7
        gbc.setState(0xe3a6, 0x4f42, 0x28d0, 0x73fb, 0x9d89, 0x3553, 0x0, 0x1);
        gbc.writeMem(0xe3a6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0xe3a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a6), 0xcb);
        EXPECT(gbc.readMem(0xe3a7), 0x60);
        // CB 60 00F8
        gbc.setState(0x1385, 0xd042, 0x29a0, 0xea9b, 0xe477, 0xfe5a, 0x0, 0x0);
        gbc.writeMem(0x1385, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd042);
        EXPECT(gbc.pc(), 0x1387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00F9
        gbc.setState(0x1f1f, 0x7396, 0x4f40, 0xd6a7, 0x440a, 0xd955, 0x0, 0x0);
        gbc.writeMem(0x1f1f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7396);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 00FA
        gbc.setState(0x2444, 0xea22, 0x2550, 0x1d28, 0x9ce1, 0x9f88, 0x0, 0x1);
        gbc.writeMem(0x2444, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xea22);
        EXPECT(gbc.pc(), 0x2446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00FB
        gbc.setState(0xa052, 0x53ce, 0x83d0, 0x52ab, 0xe4a2, 0x7ee3, 0x1, 0x1);
        gbc.writeMem(0xa052, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x53ce);
        EXPECT(gbc.pc(), 0xa054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa052), 0xcb);
        EXPECT(gbc.readMem(0xa053), 0x60);
        // CB 60 00FD
        gbc.setState(0x9539, 0x3929, 0x6dc0, 0xc082, 0x8f63, 0x22e4, 0x0, 0x1);
        gbc.writeMem(0x9539, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3929);
        EXPECT(gbc.pc(), 0x953b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9539), 0xcb);
        EXPECT(gbc.readMem(0x953a), 0x60);
        // CB 60 00FE
        gbc.setState(0x79cb, 0x1288, 0x5970, 0xed3e, 0x337, 0xee93, 0x1, 0x1);
        gbc.writeMem(0x79cb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1288);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 00FF
        gbc.setState(0xbd28, 0x574d, 0xb500, 0x60e0, 0x2a98, 0x304, 0x1, 0x0);
        gbc.writeMem(0xbd28, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x574d);
        EXPECT(gbc.pc(), 0xbd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd28), 0xcb);
        EXPECT(gbc.readMem(0xbd29), 0x60);
        // CB 60 0100
        gbc.setState(0x7eb7, 0x6e65, 0x1cc0, 0xeeff, 0x4f40, 0x59f0, 0x0, 0x1);
        gbc.writeMem(0x7eb7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6e65);
        EXPECT(gbc.pc(), 0x7eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0101
        gbc.setState(0x81e, 0x6fe5, 0xd200, 0x870b, 0x7ec6, 0xbaf, 0x0, 0x1);
        gbc.writeMem(0x81e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6fe5);
        EXPECT(gbc.pc(), 0x820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0102
        gbc.setState(0xbb8c, 0x1a74, 0x9e0, 0xf030, 0xcbf, 0x892d, 0x0, 0x1);
        gbc.writeMem(0xbb8c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1a74);
        EXPECT(gbc.pc(), 0xbb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8c), 0xcb);
        EXPECT(gbc.readMem(0xbb8d), 0x60);
        // CB 60 0103
        gbc.setState(0x82f1, 0xa5a4, 0x8b30, 0xf9d6, 0xaf20, 0xdbaa, 0x1, 0x1);
        gbc.writeMem(0x82f1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa5a4);
        EXPECT(gbc.pc(), 0x82f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f1), 0xcb);
        EXPECT(gbc.readMem(0x82f2), 0x60);
        // CB 60 0104
        gbc.setState(0x1d04, 0x6b26, 0x7020, 0x1d1, 0x455a, 0x4b8f, 0x0, 0x0);
        gbc.writeMem(0x1d04, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6b26);
        EXPECT(gbc.pc(), 0x1d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0105
        gbc.setState(0x6b72, 0xf3e6, 0x4870, 0xa88a, 0xae08, 0x2fe0, 0x1, 0x1);
        gbc.writeMem(0x6b72, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf3e6);
        EXPECT(gbc.pc(), 0x6b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0106
        gbc.setState(0x345e, 0x7b50, 0x7720, 0x5cb8, 0x7466, 0x55a2, 0x1, 0x0);
        gbc.writeMem(0x345e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0x3460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0107
        gbc.setState(0x6f89, 0xa385, 0x78f0, 0xed86, 0x13f3, 0x54e, 0x0, 0x0);
        gbc.writeMem(0x6f89, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa385);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0109
        gbc.setState(0x21d, 0xb4f, 0x2520, 0x9920, 0xfd, 0xa0c0, 0x1, 0x1);
        gbc.writeMem(0x21d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb4f);
        EXPECT(gbc.pc(), 0x21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 010A
        gbc.setState(0x247d, 0x899f, 0x2570, 0xb714, 0x3688, 0xd109, 0x0, 0x1);
        gbc.writeMem(0x247d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x899f);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 010B
        gbc.setState(0x7d34, 0x8728, 0xba20, 0xd88f, 0x24b1, 0xa8d9, 0x0, 0x0);
        gbc.writeMem(0x7d34, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8728);
        EXPECT(gbc.pc(), 0x7d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 010C
        gbc.setState(0x8b21, 0x194c, 0x7490, 0x36c0, 0xaad4, 0x56e3, 0x0, 0x1);
        gbc.writeMem(0x8b21, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x194c);
        EXPECT(gbc.pc(), 0x8b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b21), 0xcb);
        EXPECT(gbc.readMem(0x8b22), 0x60);
        // CB 60 010D
        gbc.setState(0x8d49, 0x2632, 0xc380, 0x971, 0x2137, 0x43e8, 0x0, 0x1);
        gbc.writeMem(0x8d49, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2632);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d49), 0xcb);
        EXPECT(gbc.readMem(0x8d4a), 0x60);
        // CB 60 010E
        gbc.setState(0xcdb5, 0x8447, 0x29c0, 0x3308, 0x2e5a, 0xd2ae, 0x1, 0x0);
        gbc.writeMem(0xcdb5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8447);
        EXPECT(gbc.pc(), 0xcdb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb5), 0xcb);
        EXPECT(gbc.readMem(0xcdb6), 0x60);
        // CB 60 010F
        gbc.setState(0x5be4, 0xc164, 0xb030, 0x7eaa, 0xd2a6, 0x84a, 0x0, 0x0);
        gbc.writeMem(0x5be4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc164);
        EXPECT(gbc.pc(), 0x5be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0110
        gbc.setState(0xe48d, 0xf6dd, 0xeb00, 0xa87f, 0xb38a, 0xe2d9, 0x0, 0x1);
        gbc.writeMem(0xe48d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf6dd);
        EXPECT(gbc.pc(), 0xe48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48d), 0xcb);
        EXPECT(gbc.readMem(0xe48e), 0x60);
        // CB 60 0111
        gbc.setState(0xbc83, 0xae2d, 0x5fb0, 0x38d6, 0x37d, 0x6add, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xae2d);
        EXPECT(gbc.pc(), 0xbc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc83), 0xcb);
        EXPECT(gbc.readMem(0xbc84), 0x60);
        // CB 60 0112
        gbc.setState(0x9c54, 0xa992, 0xd940, 0x8785, 0x5a27, 0x3c79, 0x0, 0x1);
        gbc.writeMem(0x9c54, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0x9c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c54), 0xcb);
        EXPECT(gbc.readMem(0x9c55), 0x60);
        // CB 60 0113
        gbc.setState(0x77dc, 0x6bae, 0xe3e0, 0x4433, 0xc38e, 0x476b, 0x0, 0x0);
        gbc.writeMem(0x77dc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6bae);
        EXPECT(gbc.pc(), 0x77de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0114
        gbc.setState(0x9fd4, 0x878b, 0xcd20, 0x5761, 0x6ce8, 0x5469, 0x0, 0x0);
        gbc.writeMem(0x9fd4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x878b);
        EXPECT(gbc.pc(), 0x9fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd4), 0xcb);
        EXPECT(gbc.readMem(0x9fd5), 0x60);
        // CB 60 0115
        gbc.setState(0x2c66, 0x10b8, 0x1fb0, 0x3b55, 0x3b30, 0xd622, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x10b8);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0116
        gbc.setState(0x52d9, 0xd4ce, 0x7650, 0x53cc, 0xce28, 0x3983, 0x1, 0x1);
        gbc.writeMem(0x52d9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd4ce);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0118
        gbc.setState(0x5de3, 0xcbfa, 0xf370, 0xb8c, 0x1269, 0xc5fc, 0x0, 0x0);
        gbc.writeMem(0x5de3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcbfa);
        EXPECT(gbc.pc(), 0x5de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0119
        gbc.setState(0x17f9, 0x898a, 0x7a50, 0xc803, 0x44a1, 0xafab, 0x1, 0x0);
        gbc.writeMem(0x17f9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x898a);
        EXPECT(gbc.pc(), 0x17fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 011A
        gbc.setState(0x135, 0x11a2, 0xcba0, 0xe58c, 0xafb7, 0xd6b7, 0x1, 0x0);
        gbc.writeMem(0x135, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x11a2);
        EXPECT(gbc.pc(), 0x137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 011B
        gbc.setState(0x9b16, 0xb0dd, 0x83b0, 0xb652, 0x54da, 0x48f9, 0x1, 0x1);
        gbc.writeMem(0x9b16, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb0dd);
        EXPECT(gbc.pc(), 0x9b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b16), 0xcb);
        EXPECT(gbc.readMem(0x9b17), 0x60);
        // CB 60 011C
        gbc.setState(0x1e37, 0x5b17, 0xd90, 0xe083, 0x6b20, 0xc0ac, 0x1, 0x1);
        gbc.writeMem(0x1e37, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5b17);
        EXPECT(gbc.pc(), 0x1e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 011D
        gbc.setState(0xd9fd, 0x9865, 0xf4a0, 0x516, 0xef53, 0x9ad5, 0x1, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fd), 0xcb);
        EXPECT(gbc.readMem(0xd9fe), 0x60);
        // CB 60 011E
        gbc.setState(0xc148, 0x1edb, 0x73b0, 0xcecb, 0xa374, 0x68af, 0x1, 0x1);
        gbc.writeMem(0xc148, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1edb);
        EXPECT(gbc.pc(), 0xc14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc148), 0xcb);
        EXPECT(gbc.readMem(0xc149), 0x60);
        // CB 60 011F
        gbc.setState(0xe376, 0xd5df, 0xf3e0, 0x81d, 0x747e, 0xef7, 0x1, 0x0);
        gbc.writeMem(0xe376, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd5df);
        EXPECT(gbc.pc(), 0xe378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe376), 0xcb);
        EXPECT(gbc.readMem(0xe377), 0x60);
        // CB 60 0120
        gbc.setState(0x6812, 0x7096, 0x1ea0, 0x8ed, 0x1308, 0xb1b6, 0x0, 0x1);
        gbc.writeMem(0x6812, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7096);
        EXPECT(gbc.pc(), 0x6814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0121
        gbc.setState(0x3b8d, 0x60fd, 0x8870, 0x4ab, 0x9aaf, 0x2461, 0x1, 0x1);
        gbc.writeMem(0x3b8d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x60fd);
        EXPECT(gbc.pc(), 0x3b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0122
        gbc.setState(0x3c3e, 0xdfd1, 0x61a0, 0x7f05, 0xdb3f, 0xc5ed, 0x0, 0x0);
        gbc.writeMem(0x3c3e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdfd1);
        EXPECT(gbc.pc(), 0x3c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0123
        gbc.setState(0x8b1b, 0xd72, 0xe720, 0xfeb8, 0x4693, 0xcb4e, 0x1, 0x0);
        gbc.writeMem(0x8b1b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd72);
        EXPECT(gbc.pc(), 0x8b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1b), 0xcb);
        EXPECT(gbc.readMem(0x8b1c), 0x60);
        // CB 60 0124
        gbc.setState(0xc9b8, 0x63d4, 0xa950, 0xb044, 0x5700, 0xce59, 0x1, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x63d4);
        EXPECT(gbc.pc(), 0xc9ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b8), 0xcb);
        EXPECT(gbc.readMem(0xc9b9), 0x60);
        // CB 60 0125
        gbc.setState(0x1cbc, 0x5e27, 0x1d90, 0x1a4a, 0x41c2, 0x1eba, 0x0, 0x1);
        gbc.writeMem(0x1cbc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5e27);
        EXPECT(gbc.pc(), 0x1cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0126
        gbc.setState(0x6403, 0x9944, 0x1300, 0x31fa, 0xa802, 0xd531, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9944);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0127
        gbc.setState(0xcaff, 0x2311, 0xe70, 0x443e, 0x1aa0, 0x6170, 0x1, 0x1);
        gbc.writeMem(0xcaff, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2311);
        EXPECT(gbc.pc(), 0xcb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaff), 0xcb);
        EXPECT(gbc.readMem(0xcb00), 0x60);
        // CB 60 0128
        gbc.setState(0x3ee3, 0x942c, 0x3330, 0x417a, 0xab35, 0x6983, 0x1, 0x1);
        gbc.writeMem(0x3ee3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x942c);
        EXPECT(gbc.pc(), 0x3ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0129
        gbc.setState(0xd70c, 0x66e9, 0xb720, 0x3a9, 0xe552, 0xfb9b, 0x0, 0x0);
        gbc.writeMem(0xd70c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x66e9);
        EXPECT(gbc.pc(), 0xd70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70c), 0xcb);
        EXPECT(gbc.readMem(0xd70d), 0x60);
        // CB 60 012A
        gbc.setState(0x56e9, 0xaca, 0x6a0, 0x160c, 0xb072, 0x4805, 0x1, 0x0);
        gbc.writeMem(0x56e9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaca);
        EXPECT(gbc.pc(), 0x56eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 012C
        gbc.setState(0xb10e, 0x53fd, 0xe170, 0x7fba, 0xce73, 0xe911, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x53fd);
        EXPECT(gbc.pc(), 0xb110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10e), 0xcb);
        EXPECT(gbc.readMem(0xb10f), 0x60);
        // CB 60 012D
        gbc.setState(0x166b, 0xc802, 0xa480, 0xc5a2, 0x6c83, 0x4c80, 0x1, 0x1);
        gbc.writeMem(0x166b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc802);
        EXPECT(gbc.pc(), 0x166d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 012E
        gbc.setState(0xd1f1, 0x32da, 0x97b0, 0x8362, 0xd9b0, 0x9cd1, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x32da);
        EXPECT(gbc.pc(), 0xd1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f1), 0xcb);
        EXPECT(gbc.readMem(0xd1f2), 0x60);
        // CB 60 012F
        gbc.setState(0xabb2, 0x7354, 0x5200, 0x1d75, 0xc4f1, 0xaba9, 0x0, 0x0);
        gbc.writeMem(0xabb2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7354);
        EXPECT(gbc.pc(), 0xabb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb2), 0xcb);
        EXPECT(gbc.readMem(0xabb3), 0x60);
        // CB 60 0131
        gbc.setState(0xa4be, 0xe14f, 0x5670, 0x1298, 0xc5c6, 0xc001, 0x0, 0x0);
        gbc.writeMem(0xa4be, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe14f);
        EXPECT(gbc.pc(), 0xa4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4be), 0xcb);
        EXPECT(gbc.readMem(0xa4bf), 0x60);
        // CB 60 0132
        gbc.setState(0xbbfc, 0x7c73, 0xd8c0, 0x6f61, 0xcd07, 0xc581, 0x1, 0x1);
        gbc.writeMem(0xbbfc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7c73);
        EXPECT(gbc.pc(), 0xbbfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfc), 0xcb);
        EXPECT(gbc.readMem(0xbbfd), 0x60);
        // CB 60 0133
        gbc.setState(0x12ce, 0xf668, 0x94a0, 0xf6c, 0xb65b, 0x407c, 0x1, 0x0);
        gbc.writeMem(0x12ce, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf668);
        EXPECT(gbc.pc(), 0x12d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0134
        gbc.setState(0x6daa, 0xce8f, 0x57f0, 0x4929, 0x66d8, 0xd193, 0x0, 0x0);
        gbc.writeMem(0x6daa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xce8f);
        EXPECT(gbc.pc(), 0x6dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0135
        gbc.setState(0x4315, 0x28f7, 0x12e0, 0xdd39, 0x8456, 0x64cd, 0x1, 0x0);
        gbc.writeMem(0x4315, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x28f7);
        EXPECT(gbc.pc(), 0x4317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0137
        gbc.setState(0xe88, 0x8aa3, 0x23c0, 0x27df, 0xcfdc, 0xdc72, 0x0, 0x1);
        gbc.writeMem(0xe88, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8aa3);
        EXPECT(gbc.pc(), 0xe8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0138
        gbc.setState(0x6860, 0xb9b5, 0xcb60, 0xe342, 0x23a4, 0x49e9, 0x0, 0x0);
        gbc.writeMem(0x6860, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb9b5);
        EXPECT(gbc.pc(), 0x6862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0139
        gbc.setState(0xb1e8, 0x5e75, 0x45e0, 0xb618, 0x1ea5, 0x1f7f, 0x1, 0x0);
        gbc.writeMem(0xb1e8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5e75);
        EXPECT(gbc.pc(), 0xb1ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e8), 0xcb);
        EXPECT(gbc.readMem(0xb1e9), 0x60);
        // CB 60 013A
        gbc.setState(0x6409, 0x1943, 0x4e00, 0xe7cd, 0xa2a, 0x992b, 0x1, 0x1);
        gbc.writeMem(0x6409, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1943);
        EXPECT(gbc.pc(), 0x640b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 013B
        gbc.setState(0x8106, 0x6a2c, 0xc230, 0x4d02, 0x66a2, 0xeff4, 0x1, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6a2c);
        EXPECT(gbc.pc(), 0x8108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8106), 0xcb);
        EXPECT(gbc.readMem(0x8107), 0x60);
        // CB 60 013C
        gbc.setState(0xa404, 0x829d, 0x6eb0, 0x109e, 0xa4c4, 0xc0be, 0x1, 0x0);
        gbc.writeMem(0xa404, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x829d);
        EXPECT(gbc.pc(), 0xa406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa404), 0xcb);
        EXPECT(gbc.readMem(0xa405), 0x60);
        // CB 60 013D
        gbc.setState(0xedbc, 0x857f, 0x26b0, 0x3445, 0x2609, 0x3ade, 0x1, 0x1);
        gbc.writeMem(0xedbc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x857f);
        EXPECT(gbc.pc(), 0xedbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbc), 0xcb);
        EXPECT(gbc.readMem(0xedbd), 0x60);
        // CB 60 013E
        gbc.setState(0xe0a2, 0x78c4, 0x3960, 0xc386, 0xe11d, 0xf502, 0x1, 0x1);
        gbc.writeMem(0xe0a2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x78c4);
        EXPECT(gbc.pc(), 0xe0a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a2), 0xcb);
        EXPECT(gbc.readMem(0xe0a3), 0x60);
        // CB 60 013F
        gbc.setState(0xb7c1, 0xf020, 0xe950, 0x1f6e, 0xe26a, 0xd11a, 0x1, 0x1);
        gbc.writeMem(0xb7c1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf020);
        EXPECT(gbc.pc(), 0xb7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c1), 0xcb);
        EXPECT(gbc.readMem(0xb7c2), 0x60);
        // CB 60 0140
        gbc.setState(0xb7e, 0x5905, 0xa690, 0xce13, 0x9e51, 0x6d8f, 0x0, 0x1);
        gbc.writeMem(0xb7e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5905);
        EXPECT(gbc.pc(), 0xb80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0141
        gbc.setState(0xd43e, 0x289f, 0x31f0, 0x5634, 0x4cb, 0xd55f, 0x0, 0x1);
        gbc.writeMem(0xd43e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x289f);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43e), 0xcb);
        EXPECT(gbc.readMem(0xd43f), 0x60);
        // CB 60 0142
        gbc.setState(0xd4b6, 0x2e3b, 0x61e0, 0x4f70, 0xc0e8, 0x5f94, 0x1, 0x1);
        gbc.writeMem(0xd4b6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2e3b);
        EXPECT(gbc.pc(), 0xd4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b6), 0xcb);
        EXPECT(gbc.readMem(0xd4b7), 0x60);
        // CB 60 0143
        gbc.setState(0xc686, 0x2959, 0xf670, 0x80e5, 0x5a9b, 0x6a0f, 0x0, 0x1);
        gbc.writeMem(0xc686, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2959);
        EXPECT(gbc.pc(), 0xc688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc686), 0xcb);
        EXPECT(gbc.readMem(0xc687), 0x60);
        // CB 60 0144
        gbc.setState(0xe36a, 0x2917, 0x2000, 0xc61, 0xd4dd, 0x90da, 0x1, 0x0);
        gbc.writeMem(0xe36a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2917);
        EXPECT(gbc.pc(), 0xe36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36a), 0xcb);
        EXPECT(gbc.readMem(0xe36b), 0x60);
        // CB 60 0145
        gbc.setState(0xdff0, 0x9f89, 0x54d0, 0x3da5, 0x9734, 0x1851, 0x0, 0x1);
        gbc.writeMem(0xdff0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9f89);
        EXPECT(gbc.pc(), 0xdff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff0), 0xcb);
        EXPECT(gbc.readMem(0xdff1), 0x60);
        // CB 60 0146
        gbc.setState(0x1a77, 0xf6df, 0xc9b0, 0x5e76, 0x241a, 0x8c41, 0x1, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf6df);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0147
        gbc.setState(0x743f, 0x68c1, 0x41a0, 0x2cee, 0x5212, 0x41f8, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x68c1);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0148
        gbc.setState(0xcc96, 0x8e1, 0xe2a0, 0x71b2, 0x9c25, 0x750a, 0x1, 0x0);
        gbc.writeMem(0xcc96, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8e1);
        EXPECT(gbc.pc(), 0xcc98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc96), 0xcb);
        EXPECT(gbc.readMem(0xcc97), 0x60);
        // CB 60 0149
        gbc.setState(0xd488, 0xf069, 0x5c40, 0x948b, 0xb5a1, 0x2e47, 0x0, 0x1);
        gbc.writeMem(0xd488, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf069);
        EXPECT(gbc.pc(), 0xd48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd488), 0xcb);
        EXPECT(gbc.readMem(0xd489), 0x60);
        // CB 60 014A
        gbc.setState(0xde2a, 0x247d, 0x2a20, 0x533a, 0x3370, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0xde2a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x247d);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2a), 0xcb);
        EXPECT(gbc.readMem(0xde2b), 0x60);
        // CB 60 014B
        gbc.setState(0xd854, 0x9297, 0x86d0, 0x2717, 0x4836, 0xc89, 0x0, 0x0);
        gbc.writeMem(0xd854, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9297);
        EXPECT(gbc.pc(), 0xd856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd854), 0xcb);
        EXPECT(gbc.readMem(0xd855), 0x60);
        // CB 60 014C
        gbc.setState(0x6463, 0xf7b5, 0xe810, 0x8020, 0x5a43, 0x364b, 0x1, 0x0);
        gbc.writeMem(0x6463, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf7b5);
        EXPECT(gbc.pc(), 0x6465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 014D
        gbc.setState(0x6476, 0xe75f, 0x4b10, 0x28c2, 0xacb6, 0x196e, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe75f);
        EXPECT(gbc.pc(), 0x6478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 014F
        gbc.setState(0xce10, 0x41e2, 0xf580, 0xbdd, 0x9f6f, 0xf397, 0x1, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x41e2);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce10), 0xcb);
        EXPECT(gbc.readMem(0xce11), 0x60);
        // CB 60 0150
        gbc.setState(0x9083, 0xb448, 0x3b90, 0xb83, 0x6a1, 0x37f0, 0x1, 0x1);
        gbc.writeMem(0x9083, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb448);
        EXPECT(gbc.pc(), 0x9085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9083), 0xcb);
        EXPECT(gbc.readMem(0x9084), 0x60);
        // CB 60 0151
        gbc.setState(0x838c, 0xa93a, 0x9420, 0x91b2, 0x6255, 0xc9cd, 0x1, 0x1);
        gbc.writeMem(0x838c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa93a);
        EXPECT(gbc.pc(), 0x838e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838c), 0xcb);
        EXPECT(gbc.readMem(0x838d), 0x60);
        // CB 60 0152
        gbc.setState(0x1305, 0xb80c, 0x1590, 0xb6, 0xe2e8, 0xe852, 0x0, 0x1);
        gbc.writeMem(0x1305, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb80c);
        EXPECT(gbc.pc(), 0x1307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0153
        gbc.setState(0x43ac, 0xaba5, 0x3940, 0x1d1d, 0x472a, 0x582, 0x0, 0x0);
        gbc.writeMem(0x43ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0x43ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0154
        gbc.setState(0x642f, 0x3054, 0xd1a0, 0x6b42, 0x6e8b, 0x3986, 0x0, 0x0);
        gbc.writeMem(0x642f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3054);
        EXPECT(gbc.pc(), 0x6431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0155
        gbc.setState(0x25c3, 0xc58d, 0x38e0, 0xfe03, 0xfeac, 0xc030, 0x0, 0x0);
        gbc.writeMem(0x25c3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc58d);
        EXPECT(gbc.pc(), 0x25c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0157
        gbc.setState(0x74a1, 0xd2b4, 0x8e10, 0x15e0, 0x1cd5, 0x3b7, 0x0, 0x0);
        gbc.writeMem(0x74a1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd2b4);
        EXPECT(gbc.pc(), 0x74a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0158
        gbc.setState(0x99e8, 0xd13d, 0xca40, 0x5614, 0x7d42, 0x7310, 0x1, 0x1);
        gbc.writeMem(0x99e8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd13d);
        EXPECT(gbc.pc(), 0x99ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e8), 0xcb);
        EXPECT(gbc.readMem(0x99e9), 0x60);
        // CB 60 0159
        gbc.setState(0x8d6f, 0x6bb7, 0x2c60, 0x98fa, 0xff31, 0x137, 0x1, 0x1);
        gbc.writeMem(0x8d6f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6bb7);
        EXPECT(gbc.pc(), 0x8d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6f), 0xcb);
        EXPECT(gbc.readMem(0x8d70), 0x60);
        // CB 60 015A
        gbc.setState(0x43ac, 0x4b86, 0x3f50, 0x9745, 0x82fb, 0x2509, 0x1, 0x0);
        gbc.writeMem(0x43ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4b86);
        EXPECT(gbc.pc(), 0x43ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 015B
        gbc.setState(0x2c12, 0x4fdc, 0x8a50, 0xfa49, 0x450f, 0xf41d, 0x1, 0x0);
        gbc.writeMem(0x2c12, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4fdc);
        EXPECT(gbc.pc(), 0x2c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 015C
        gbc.setState(0x3a24, 0x9c1a, 0x3090, 0x7ff1, 0x862f, 0x7dc6, 0x1, 0x0);
        gbc.writeMem(0x3a24, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9c1a);
        EXPECT(gbc.pc(), 0x3a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 015D
        gbc.setState(0x93a, 0xed9b, 0xba30, 0x987, 0x8a95, 0x4465, 0x0, 0x0);
        gbc.writeMem(0x93a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xed9b);
        EXPECT(gbc.pc(), 0x93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 015E
        gbc.setState(0xbe7a, 0x5b19, 0xf270, 0x3cb7, 0x43ca, 0xf5d2, 0x0, 0x0);
        gbc.writeMem(0xbe7a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5b19);
        EXPECT(gbc.pc(), 0xbe7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7a), 0xcb);
        EXPECT(gbc.readMem(0xbe7b), 0x60);
        // CB 60 015F
        gbc.setState(0xa2c0, 0xf5c6, 0xed80, 0x2e83, 0xac67, 0xe5dd, 0x1, 0x1);
        gbc.writeMem(0xa2c0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf5c6);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c0), 0xcb);
        EXPECT(gbc.readMem(0xa2c1), 0x60);
        // CB 60 0160
        gbc.setState(0x50d8, 0x3ca5, 0x7c50, 0x7479, 0x768, 0x152c, 0x0, 0x1);
        gbc.writeMem(0x50d8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3ca5);
        EXPECT(gbc.pc(), 0x50da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0161
        gbc.setState(0x1153, 0xc79b, 0x7330, 0x68ad, 0x8f30, 0x8cf0, 0x0, 0x0);
        gbc.writeMem(0x1153, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc79b);
        EXPECT(gbc.pc(), 0x1155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0162
        gbc.setState(0xcc9f, 0x9925, 0x3300, 0xb390, 0xb02a, 0xc, 0x0, 0x1);
        gbc.writeMem(0xcc9f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9925);
        EXPECT(gbc.pc(), 0xcca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc9f), 0xcb);
        EXPECT(gbc.readMem(0xcca0), 0x60);
        // CB 60 0163
        gbc.setState(0x66cb, 0x5123, 0xe020, 0xfcc3, 0x7e2b, 0xe572, 0x0, 0x0);
        gbc.writeMem(0x66cb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5123);
        EXPECT(gbc.pc(), 0x66cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0164
        gbc.setState(0xcc61, 0x17b0, 0xc7d0, 0x6f1, 0x91f4, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0xcc61, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x17b0);
        EXPECT(gbc.pc(), 0xcc63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc61), 0xcb);
        EXPECT(gbc.readMem(0xcc62), 0x60);
        // CB 60 0165
        gbc.setState(0x68c2, 0x7c0a, 0xf670, 0x94f6, 0x1fbb, 0x31f5, 0x1, 0x0);
        gbc.writeMem(0x68c2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7c0a);
        EXPECT(gbc.pc(), 0x68c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0166
        gbc.setState(0x9595, 0xb953, 0x23d0, 0xbc16, 0xf127, 0xfcfc, 0x0, 0x1);
        gbc.writeMem(0x9595, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb953);
        EXPECT(gbc.pc(), 0x9597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9595), 0xcb);
        EXPECT(gbc.readMem(0x9596), 0x60);
        // CB 60 0167
        gbc.setState(0x6342, 0x1f5e, 0x38a0, 0x9bc9, 0x1e14, 0xe34a, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1f5e);
        EXPECT(gbc.pc(), 0x6344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0168
        gbc.setState(0x8a36, 0x477b, 0xd830, 0xa09d, 0xe343, 0x7c70, 0x0, 0x1);
        gbc.writeMem(0x8a36, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x477b);
        EXPECT(gbc.pc(), 0x8a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a36), 0xcb);
        EXPECT(gbc.readMem(0x8a37), 0x60);
        // CB 60 0169
        gbc.setState(0x7b35, 0x6608, 0xd030, 0x1910, 0xc336, 0xe620, 0x1, 0x0);
        gbc.writeMem(0x7b35, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6608);
        EXPECT(gbc.pc(), 0x7b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 016A
        gbc.setState(0x2e3e, 0x62ac, 0xcf10, 0xd5b8, 0x58be, 0xe2d4, 0x0, 0x1);
        gbc.writeMem(0x2e3e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x62ac);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 016B
        gbc.setState(0x2e41, 0x2d4a, 0xb440, 0xa484, 0x5023, 0xb2ef, 0x1, 0x0);
        gbc.writeMem(0x2e41, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2d4a);
        EXPECT(gbc.pc(), 0x2e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 016C
        gbc.setState(0x4e09, 0xd425, 0xc2f0, 0x8e72, 0x98b, 0x79f, 0x1, 0x0);
        gbc.writeMem(0x4e09, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd425);
        EXPECT(gbc.pc(), 0x4e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 016D
        gbc.setState(0xa176, 0xc322, 0xee90, 0x5d02, 0x3802, 0x8804, 0x1, 0x0);
        gbc.writeMem(0xa176, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc322);
        EXPECT(gbc.pc(), 0xa178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa176), 0xcb);
        EXPECT(gbc.readMem(0xa177), 0x60);
        // CB 60 016E
        gbc.setState(0xc4d0, 0x606b, 0x6720, 0x3f38, 0xbe52, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0xc4d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0xc4d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d0), 0xcb);
        EXPECT(gbc.readMem(0xc4d1), 0x60);
        // CB 60 016F
        gbc.setState(0xa0bb, 0x1c78, 0xe1e0, 0xc9e1, 0xc583, 0xea4e, 0x0, 0x0);
        gbc.writeMem(0xa0bb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1c78);
        EXPECT(gbc.pc(), 0xa0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bb), 0xcb);
        EXPECT(gbc.readMem(0xa0bc), 0x60);
        // CB 60 0170
        gbc.setState(0x3a7d, 0xcea7, 0xa010, 0x8ac9, 0x7129, 0x8d50, 0x0, 0x1);
        gbc.writeMem(0x3a7d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcea7);
        EXPECT(gbc.pc(), 0x3a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0171
        gbc.setState(0xc6a5, 0xeadf, 0xb500, 0xac08, 0x795d, 0x728, 0x1, 0x0);
        gbc.writeMem(0xc6a5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xeadf);
        EXPECT(gbc.pc(), 0xc6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a5), 0xcb);
        EXPECT(gbc.readMem(0xc6a6), 0x60);
        // CB 60 0172
        gbc.setState(0xeec, 0xba3, 0x9bc0, 0x3b4b, 0x4a37, 0xce52, 0x1, 0x0);
        gbc.writeMem(0xeec, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xba3);
        EXPECT(gbc.pc(), 0xeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0173
        gbc.setState(0xcb6, 0xacee, 0x1a0, 0x2893, 0xa6da, 0xb946, 0x0, 0x1);
        gbc.writeMem(0xcb6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0xcb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0174
        gbc.setState(0xccf6, 0x4b5f, 0x7880, 0x928e, 0x1692, 0x7c86, 0x0, 0x1);
        gbc.writeMem(0xccf6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4b5f);
        EXPECT(gbc.pc(), 0xccf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf6), 0xcb);
        EXPECT(gbc.readMem(0xccf7), 0x60);
        // CB 60 0175
        gbc.setState(0x9279, 0x965, 0x3f60, 0xebbf, 0xf131, 0x811f, 0x0, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x965);
        EXPECT(gbc.pc(), 0x927b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9279), 0xcb);
        EXPECT(gbc.readMem(0x927a), 0x60);
        // CB 60 0176
        gbc.setState(0x49a5, 0x3815, 0xeee0, 0x9e01, 0x2d97, 0xb97c, 0x0, 0x0);
        gbc.writeMem(0x49a5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3815);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0177
        gbc.setState(0x7ad4, 0x8e78, 0x1b20, 0xb871, 0xd089, 0x7d54, 0x1, 0x1);
        gbc.writeMem(0x7ad4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8e78);
        EXPECT(gbc.pc(), 0x7ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0178
        gbc.setState(0xe300, 0xd595, 0xf9b0, 0xbd5c, 0x8339, 0x272b, 0x0, 0x0);
        gbc.writeMem(0xe300, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd595);
        EXPECT(gbc.pc(), 0xe302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0xcb);
        EXPECT(gbc.readMem(0xe301), 0x60);
        // CB 60 0179
        gbc.setState(0xe845, 0x9b7e, 0x6e80, 0x25da, 0x184b, 0x2462, 0x1, 0x0);
        gbc.writeMem(0xe845, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9b7e);
        EXPECT(gbc.pc(), 0xe847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe845), 0xcb);
        EXPECT(gbc.readMem(0xe846), 0x60);
        // CB 60 017A
        gbc.setState(0xd8e5, 0xd240, 0xc230, 0x20af, 0x1b83, 0xba6b, 0x1, 0x0);
        gbc.writeMem(0xd8e5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd240);
        EXPECT(gbc.pc(), 0xd8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e5), 0xcb);
        EXPECT(gbc.readMem(0xd8e6), 0x60);
        // CB 60 017C
        gbc.setState(0x3e3b, 0xf3f7, 0x1310, 0x3ce1, 0xea08, 0xbe71, 0x0, 0x1);
        gbc.writeMem(0x3e3b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf3f7);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 017E
        gbc.setState(0xc34b, 0x4e3f, 0xa5f0, 0x6901, 0xdf5d, 0xe558, 0x0, 0x0);
        gbc.writeMem(0xc34b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4e3f);
        EXPECT(gbc.pc(), 0xc34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34b), 0xcb);
        EXPECT(gbc.readMem(0xc34c), 0x60);
        // CB 60 017F
        gbc.setState(0xe058, 0x99da, 0xa180, 0x37d4, 0x7ad8, 0xee44, 0x0, 0x1);
        gbc.writeMem(0xe058, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x99da);
        EXPECT(gbc.pc(), 0xe05a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe058), 0xcb);
        EXPECT(gbc.readMem(0xe059), 0x60);
        // CB 60 0180
        gbc.setState(0x7450, 0x384d, 0x6ab0, 0x9757, 0x6322, 0xb937, 0x0, 0x1);
        gbc.writeMem(0x7450, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x384d);
        EXPECT(gbc.pc(), 0x7452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0181
        gbc.setState(0x20ac, 0x12d3, 0xd3b0, 0x8a78, 0x6acb, 0xf3ed, 0x0, 0x1);
        gbc.writeMem(0x20ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x12d3);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0182
        gbc.setState(0x7019, 0x13b1, 0x4610, 0x6517, 0x45c8, 0x5de6, 0x1, 0x1);
        gbc.writeMem(0x7019, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x13b1);
        EXPECT(gbc.pc(), 0x701b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0183
        gbc.setState(0x89a1, 0xc063, 0xa920, 0xcc60, 0xbc6e, 0xb5b6, 0x1, 0x1);
        gbc.writeMem(0x89a1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc063);
        EXPECT(gbc.pc(), 0x89a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a1), 0xcb);
        EXPECT(gbc.readMem(0x89a2), 0x60);
        // CB 60 0184
        gbc.setState(0x17c2, 0x7adf, 0x4a90, 0x936d, 0x7c1f, 0x8333, 0x0, 0x1);
        gbc.writeMem(0x17c2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7adf);
        EXPECT(gbc.pc(), 0x17c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0185
        gbc.setState(0x16b7, 0xc6bf, 0xedf0, 0xe46b, 0x5004, 0x2d70, 0x1, 0x0);
        gbc.writeMem(0x16b7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0x16b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0186
        gbc.setState(0xd2ca, 0x5113, 0x790, 0x4049, 0x6232, 0x929e, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5113);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ca), 0xcb);
        EXPECT(gbc.readMem(0xd2cb), 0x60);
        // CB 60 0187
        gbc.setState(0x362f, 0x44c6, 0xc7d0, 0x92aa, 0xc257, 0x4e9b, 0x1, 0x0);
        gbc.writeMem(0x362f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0x3631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0188
        gbc.setState(0x2a36, 0x37fc, 0xd960, 0x5a7d, 0x156c, 0xc138, 0x1, 0x0);
        gbc.writeMem(0x2a36, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x37fc);
        EXPECT(gbc.pc(), 0x2a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0189
        gbc.setState(0x3ae0, 0x1a6e, 0x2d0, 0x61dc, 0xc2b6, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x3ae0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1a6e);
        EXPECT(gbc.pc(), 0x3ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 018A
        gbc.setState(0x795c, 0x593, 0xb610, 0x7cfd, 0x35, 0x860b, 0x0, 0x1);
        gbc.writeMem(0x795c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x593);
        EXPECT(gbc.pc(), 0x795e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 018B
        gbc.setState(0xc9a3, 0x8e5f, 0x32c0, 0x8231, 0xe099, 0x766b, 0x1, 0x0);
        gbc.writeMem(0xc9a3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8e5f);
        EXPECT(gbc.pc(), 0xc9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a3), 0xcb);
        EXPECT(gbc.readMem(0xc9a4), 0x60);
        // CB 60 018C
        gbc.setState(0x4adf, 0x67f1, 0xe780, 0x4a1f, 0x8cc2, 0xdafe, 0x1, 0x1);
        gbc.writeMem(0x4adf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x67f1);
        EXPECT(gbc.pc(), 0x4ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 018D
        gbc.setState(0x597b, 0x8dd4, 0xa590, 0x438e, 0xcbb1, 0x6f1e, 0x1, 0x0);
        gbc.writeMem(0x597b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8dd4);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 018E
        gbc.setState(0x4df0, 0x94c1, 0x8990, 0xd182, 0xcaba, 0x8b64, 0x0, 0x0);
        gbc.writeMem(0x4df0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94c1);
        EXPECT(gbc.pc(), 0x4df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 018F
        gbc.setState(0x7b32, 0x86b8, 0xeb70, 0x456f, 0x137c, 0xc9de, 0x1, 0x1);
        gbc.writeMem(0x7b32, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x86b8);
        EXPECT(gbc.pc(), 0x7b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0190
        gbc.setState(0xccae, 0xd53e, 0x4200, 0xa269, 0x7752, 0x7da, 0x0, 0x0);
        gbc.writeMem(0xccae, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd53e);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccae), 0xcb);
        EXPECT(gbc.readMem(0xccaf), 0x60);
        // CB 60 0191
        gbc.setState(0xa39a, 0xf0a3, 0x4ec0, 0x9282, 0xd1b2, 0xa651, 0x0, 0x0);
        gbc.writeMem(0xa39a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf0a3);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x60);
        // CB 60 0192
        gbc.setState(0xe6e, 0xc524, 0x8a80, 0xe2fd, 0xbef8, 0xe7c6, 0x0, 0x1);
        gbc.writeMem(0xe6e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc524);
        EXPECT(gbc.pc(), 0xe70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0193
        gbc.setState(0xac00, 0xf8bb, 0x4760, 0x551, 0x1b6c, 0x62a1, 0x1, 0x1);
        gbc.writeMem(0xac00, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf8bb);
        EXPECT(gbc.pc(), 0xac02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac00), 0xcb);
        EXPECT(gbc.readMem(0xac01), 0x60);
        // CB 60 0194
        gbc.setState(0x4a58, 0x108a, 0x8720, 0xe0a5, 0x7d2c, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0x4a58, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x108a);
        EXPECT(gbc.pc(), 0x4a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0195
        gbc.setState(0x9036, 0x9196, 0x9590, 0x4f23, 0xe12e, 0xe50f, 0x0, 0x0);
        gbc.writeMem(0x9036, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9196);
        EXPECT(gbc.pc(), 0x9038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9036), 0xcb);
        EXPECT(gbc.readMem(0x9037), 0x60);
        // CB 60 0196
        gbc.setState(0x153e, 0x44c9, 0x1050, 0x35a0, 0xf623, 0xb069, 0x1, 0x1);
        gbc.writeMem(0x153e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x44c9);
        EXPECT(gbc.pc(), 0x1540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0197
        gbc.setState(0x16f4, 0xaabb, 0x5300, 0xc68e, 0xfa2d, 0xeae1, 0x1, 0x0);
        gbc.writeMem(0x16f4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x16f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0198
        gbc.setState(0x7f44, 0x1f78, 0x3d70, 0x1468, 0x1158, 0xa5cc, 0x0, 0x0);
        gbc.writeMem(0x7f44, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1f78);
        EXPECT(gbc.pc(), 0x7f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0199
        gbc.setState(0x1670, 0x94, 0xc6b0, 0xff69, 0x4269, 0xcb54, 0x0, 0x1);
        gbc.writeMem(0x1670, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x94);
        EXPECT(gbc.pc(), 0x1672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 019A
        gbc.setState(0x92c3, 0x2258, 0x3030, 0xbb0d, 0x89fa, 0x3d72, 0x1, 0x1);
        gbc.writeMem(0x92c3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2258);
        EXPECT(gbc.pc(), 0x92c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c3), 0xcb);
        EXPECT(gbc.readMem(0x92c4), 0x60);
        // CB 60 019B
        gbc.setState(0xd7c2, 0x486e, 0xc660, 0x9664, 0xac39, 0x1899, 0x0, 0x1);
        gbc.writeMem(0xd7c2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x486e);
        EXPECT(gbc.pc(), 0xd7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c2), 0xcb);
        EXPECT(gbc.readMem(0xd7c3), 0x60);
        // CB 60 019C
        gbc.setState(0xc94a, 0x5023, 0xefe0, 0x5ff1, 0xb593, 0xa5d, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5023);
        EXPECT(gbc.pc(), 0xc94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94a), 0xcb);
        EXPECT(gbc.readMem(0xc94b), 0x60);
        // CB 60 019D
        gbc.setState(0x7f30, 0x857a, 0x2380, 0xa5af, 0x12f1, 0xbb0f, 0x1, 0x1);
        gbc.writeMem(0x7f30, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x857a);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 019E
        gbc.setState(0x1913, 0x73f7, 0x3f0, 0x1e6, 0x40da, 0x9bd7, 0x1, 0x0);
        gbc.writeMem(0x1913, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x73f7);
        EXPECT(gbc.pc(), 0x1915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 019F
        gbc.setState(0xe762, 0xcdfe, 0xeac0, 0x4a9d, 0x9e31, 0x2311, 0x0, 0x1);
        gbc.writeMem(0xe762, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcdfe);
        EXPECT(gbc.pc(), 0xe764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe762), 0xcb);
        EXPECT(gbc.readMem(0xe763), 0x60);
        // CB 60 01A0
        gbc.setState(0x2c7e, 0x23f2, 0x5e20, 0x2f75, 0x892e, 0xc12f, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x23f2);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01A1
        gbc.setState(0x3fd6, 0x6a1a, 0x5ba0, 0x34d4, 0xf0ac, 0x6a5f, 0x1, 0x0);
        gbc.writeMem(0x3fd6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6a1a);
        EXPECT(gbc.pc(), 0x3fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01A2
        gbc.setState(0x9c64, 0x6b63, 0xcda0, 0xe5d8, 0xd37, 0xb9f6, 0x1, 0x0);
        gbc.writeMem(0x9c64, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6b63);
        EXPECT(gbc.pc(), 0x9c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c64), 0xcb);
        EXPECT(gbc.readMem(0x9c65), 0x60);
        // CB 60 01A3
        gbc.setState(0xd0e4, 0x6ef4, 0x2a50, 0x3a3c, 0xee9d, 0x349b, 0x1, 0x1);
        gbc.writeMem(0xd0e4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6ef4);
        EXPECT(gbc.pc(), 0xd0e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e4), 0xcb);
        EXPECT(gbc.readMem(0xd0e5), 0x60);
        // CB 60 01A4
        gbc.setState(0x2b8c, 0x144b, 0x6b10, 0x423, 0x76f1, 0xc0b1, 0x1, 0x0);
        gbc.writeMem(0x2b8c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x144b);
        EXPECT(gbc.pc(), 0x2b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01A5
        gbc.setState(0x9a1f, 0x388c, 0xd2d0, 0x4384, 0xf956, 0xdb17, 0x0, 0x1);
        gbc.writeMem(0x9a1f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x388c);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1f), 0xcb);
        EXPECT(gbc.readMem(0x9a20), 0x60);
        // CB 60 01A6
        gbc.setState(0x8bfe, 0x9cf2, 0x60b0, 0x5af9, 0xf473, 0xdf88, 0x0, 0x1);
        gbc.writeMem(0x8bfe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9cf2);
        EXPECT(gbc.pc(), 0x8c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfe), 0xcb);
        EXPECT(gbc.readMem(0x8bff), 0x60);
        // CB 60 01A7
        gbc.setState(0x3628, 0xb3ea, 0xd430, 0x2c83, 0xedc8, 0xb4e8, 0x0, 0x0);
        gbc.writeMem(0x3628, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb3ea);
        EXPECT(gbc.pc(), 0x362a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01A8
        gbc.setState(0xc2c5, 0x2e4, 0x2c0, 0x14a, 0xbab, 0x3ae4, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2e4);
        EXPECT(gbc.pc(), 0xc2c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c5), 0xcb);
        EXPECT(gbc.readMem(0xc2c6), 0x60);
        // CB 60 01A9
        gbc.setState(0xeb2, 0x6932, 0x8b40, 0x6e28, 0xf73d, 0xe05d, 0x0, 0x0);
        gbc.writeMem(0xeb2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6932);
        EXPECT(gbc.pc(), 0xeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01AA
        gbc.setState(0x3cfd, 0x929b, 0x34f0, 0x8539, 0xfd9b, 0x7dcf, 0x1, 0x1);
        gbc.writeMem(0x3cfd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x929b);
        EXPECT(gbc.pc(), 0x3cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01AB
        gbc.setState(0xd796, 0xf509, 0x6680, 0x611e, 0x99cd, 0xaf4d, 0x0, 0x0);
        gbc.writeMem(0xd796, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf509);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd796), 0xcb);
        EXPECT(gbc.readMem(0xd797), 0x60);
        // CB 60 01AC
        gbc.setState(0x916c, 0xae06, 0x24a0, 0x870f, 0xa021, 0xc1f5, 0x0, 0x1);
        gbc.writeMem(0x916c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xae06);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916c), 0xcb);
        EXPECT(gbc.readMem(0x916d), 0x60);
        // CB 60 01AD
        gbc.setState(0x4f8, 0xa59f, 0xf3d0, 0xb0b4, 0x8f85, 0x4472, 0x0, 0x0);
        gbc.writeMem(0x4f8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa59f);
        EXPECT(gbc.pc(), 0x4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01AE
        gbc.setState(0x95d0, 0x437f, 0xfb50, 0x4654, 0xd53, 0xd3a2, 0x0, 0x1);
        gbc.writeMem(0x95d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x95d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d0), 0xcb);
        EXPECT(gbc.readMem(0x95d1), 0x60);
        // CB 60 01AF
        gbc.setState(0x7e99, 0x68f, 0xe380, 0xd0f0, 0x74a8, 0x29f5, 0x0, 0x0);
        gbc.writeMem(0x7e99, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x68f);
        EXPECT(gbc.pc(), 0x7e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01B0
        gbc.setState(0x4aed, 0xbd64, 0xd390, 0xbdf7, 0x30d4, 0xe41a, 0x1, 0x1);
        gbc.writeMem(0x4aed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0x4aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01B1
        gbc.setState(0x836b, 0x2eff, 0x94f0, 0x3351, 0xefe9, 0xe2a5, 0x1, 0x1);
        gbc.writeMem(0x836b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2eff);
        EXPECT(gbc.pc(), 0x836d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836b), 0xcb);
        EXPECT(gbc.readMem(0x836c), 0x60);
        // CB 60 01B2
        gbc.setState(0x742e, 0x6531, 0xc340, 0xdca3, 0x6f00, 0x29b, 0x0, 0x1);
        gbc.writeMem(0x742e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6531);
        EXPECT(gbc.pc(), 0x7430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01B3
        gbc.setState(0x2062, 0x2ccd, 0x2bc0, 0x2c37, 0x719f, 0x373b, 0x1, 0x0);
        gbc.writeMem(0x2062, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2ccd);
        EXPECT(gbc.pc(), 0x2064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01B4
        gbc.setState(0x176, 0x54ad, 0x92d0, 0x7c5b, 0xb501, 0xa04, 0x1, 0x1);
        gbc.writeMem(0x176, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x54ad);
        EXPECT(gbc.pc(), 0x178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01B5
        gbc.setState(0x965a, 0x9e89, 0x47d0, 0x9d2f, 0x8225, 0x83d, 0x0, 0x1);
        gbc.writeMem(0x965a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9e89);
        EXPECT(gbc.pc(), 0x965c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965a), 0xcb);
        EXPECT(gbc.readMem(0x965b), 0x60);
        // CB 60 01B6
        gbc.setState(0x8314, 0xbcc9, 0xf880, 0xf985, 0xdbf, 0xa510, 0x1, 0x0);
        gbc.writeMem(0x8314, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbcc9);
        EXPECT(gbc.pc(), 0x8316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8314), 0xcb);
        EXPECT(gbc.readMem(0x8315), 0x60);
        // CB 60 01B7
        gbc.setState(0x4fd5, 0xc896, 0x2080, 0x4b51, 0x92f0, 0x34f6, 0x0, 0x1);
        gbc.writeMem(0x4fd5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc896);
        EXPECT(gbc.pc(), 0x4fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01B8
        gbc.setState(0x6694, 0xa2fa, 0x2520, 0x5848, 0xfa5f, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0x6694, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa2fa);
        EXPECT(gbc.pc(), 0x6696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01B9
        gbc.setState(0xbd56, 0x1982, 0x1080, 0xc29c, 0x3f2c, 0x7272, 0x0, 0x0);
        gbc.writeMem(0xbd56, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1982);
        EXPECT(gbc.pc(), 0xbd58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd56), 0xcb);
        EXPECT(gbc.readMem(0xbd57), 0x60);
        // CB 60 01BA
        gbc.setState(0xd28c, 0xbf1e, 0xfcc0, 0xca33, 0x8024, 0x7e0b, 0x0, 0x0);
        gbc.writeMem(0xd28c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbf1e);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28c), 0xcb);
        EXPECT(gbc.readMem(0xd28d), 0x60);
        // CB 60 01BB
        gbc.setState(0xbede, 0x31ca, 0xf540, 0x2249, 0x1ac1, 0x6d2c, 0x0, 0x1);
        gbc.writeMem(0xbede, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x31ca);
        EXPECT(gbc.pc(), 0xbee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbede), 0xcb);
        EXPECT(gbc.readMem(0xbedf), 0x60);
        // CB 60 01BC
        gbc.setState(0x824, 0xbae3, 0x9ee0, 0x55b7, 0xe623, 0x4fb2, 0x1, 0x0);
        gbc.writeMem(0x824, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbae3);
        EXPECT(gbc.pc(), 0x826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01BD
        gbc.setState(0x974, 0x1c4a, 0xa500, 0xf5b4, 0x1f4d, 0xc040, 0x1, 0x0);
        gbc.writeMem(0x974, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1c4a);
        EXPECT(gbc.pc(), 0x976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01BE
        gbc.setState(0x1e2e, 0x4bde, 0x4d00, 0x8a30, 0x32e, 0x6fed, 0x1, 0x0);
        gbc.writeMem(0x1e2e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4bde);
        EXPECT(gbc.pc(), 0x1e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01BF
        gbc.setState(0x7b22, 0x65ce, 0x4bd0, 0x61fa, 0x84c6, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0x7b22, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x65ce);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01C0
        gbc.setState(0x1390, 0xc28f, 0x38b0, 0x484b, 0xe501, 0xffb6, 0x1, 0x1);
        gbc.writeMem(0x1390, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc28f);
        EXPECT(gbc.pc(), 0x1392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01C1
        gbc.setState(0xc74b, 0xb52f, 0xa80, 0xb3fe, 0x8480, 0xbb07, 0x0, 0x1);
        gbc.writeMem(0xc74b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb52f);
        EXPECT(gbc.pc(), 0xc74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74b), 0xcb);
        EXPECT(gbc.readMem(0xc74c), 0x60);
        // CB 60 01C2
        gbc.setState(0x19e3, 0xf369, 0x6900, 0xd7e7, 0x225, 0xa6ea, 0x0, 0x1);
        gbc.writeMem(0x19e3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf369);
        EXPECT(gbc.pc(), 0x19e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01C4
        gbc.setState(0x4a80, 0x5f74, 0x7be0, 0x69b8, 0xbe73, 0x68d1, 0x0, 0x0);
        gbc.writeMem(0x4a80, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5f74);
        EXPECT(gbc.pc(), 0x4a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01C5
        gbc.setState(0x1581, 0x5656, 0xdbf0, 0x560, 0x80f, 0x4a84, 0x1, 0x0);
        gbc.writeMem(0x1581, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5656);
        EXPECT(gbc.pc(), 0x1583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01C7
        gbc.setState(0x5f0, 0x85eb, 0x2980, 0x2358, 0xb843, 0xd818, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x85eb);
        EXPECT(gbc.pc(), 0x5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01C8
        gbc.setState(0xe8ea, 0xa8bc, 0x7b30, 0xcba9, 0x143e, 0x23fb, 0x0, 0x1);
        gbc.writeMem(0xe8ea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa8bc);
        EXPECT(gbc.pc(), 0xe8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ea), 0xcb);
        EXPECT(gbc.readMem(0xe8eb), 0x60);
        // CB 60 01C9
        gbc.setState(0x35b, 0x1fba, 0x4a30, 0xd8b1, 0x8e2f, 0x246f, 0x1, 0x1);
        gbc.writeMem(0x35b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1fba);
        EXPECT(gbc.pc(), 0x35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01CA
        gbc.setState(0xd1e4, 0x69b9, 0x4cb0, 0x991a, 0x8d75, 0xc231, 0x1, 0x1);
        gbc.writeMem(0xd1e4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x69b9);
        EXPECT(gbc.pc(), 0xd1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e4), 0xcb);
        EXPECT(gbc.readMem(0xd1e5), 0x60);
        // CB 60 01CB
        gbc.setState(0x80c8, 0x2b78, 0x7eb0, 0xc186, 0x6574, 0x6e8c, 0x1, 0x0);
        gbc.writeMem(0x80c8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2b78);
        EXPECT(gbc.pc(), 0x80ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c8), 0xcb);
        EXPECT(gbc.readMem(0x80c9), 0x60);
        // CB 60 01CC
        gbc.setState(0x380b, 0xf308, 0x190, 0x31e6, 0x123f, 0x8943, 0x0, 0x0);
        gbc.writeMem(0x380b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf308);
        EXPECT(gbc.pc(), 0x380d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01CD
        gbc.setState(0x4a0, 0x46ec, 0xe6e0, 0xd354, 0x3fe4, 0xf94b, 0x0, 0x1);
        gbc.writeMem(0x4a0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x46ec);
        EXPECT(gbc.pc(), 0x4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01CE
        gbc.setState(0x3d98, 0x3d2d, 0x94b0, 0x8593, 0xae68, 0xdcdd, 0x1, 0x1);
        gbc.writeMem(0x3d98, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3d2d);
        EXPECT(gbc.pc(), 0x3d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01CF
        gbc.setState(0xd690, 0x9d57, 0x2640, 0x3665, 0x45ce, 0x8b85, 0x1, 0x1);
        gbc.writeMem(0xd690, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9d57);
        EXPECT(gbc.pc(), 0xd692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd690), 0xcb);
        EXPECT(gbc.readMem(0xd691), 0x60);
        // CB 60 01D0
        gbc.setState(0x5861, 0x5a21, 0x230, 0x723, 0x5184, 0x1062, 0x1, 0x0);
        gbc.writeMem(0x5861, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5a21);
        EXPECT(gbc.pc(), 0x5863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01D1
        gbc.setState(0xcc7f, 0xc992, 0xce90, 0x51ba, 0xc952, 0xb348, 0x0, 0x0);
        gbc.writeMem(0xcc7f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc992);
        EXPECT(gbc.pc(), 0xcc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7f), 0xcb);
        EXPECT(gbc.readMem(0xcc80), 0x60);
        // CB 60 01D2
        gbc.setState(0xef2a, 0x47a2, 0x8c10, 0x9be1, 0x5d6b, 0x8377, 0x1, 0x1);
        gbc.writeMem(0xef2a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0xef2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2a), 0xcb);
        EXPECT(gbc.readMem(0xef2b), 0x60);
        // CB 60 01D3
        gbc.setState(0xe4af, 0x6ad3, 0x61c0, 0xdf43, 0xea3b, 0xc231, 0x0, 0x1);
        gbc.writeMem(0xe4af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6ad3);
        EXPECT(gbc.pc(), 0xe4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4af), 0xcb);
        EXPECT(gbc.readMem(0xe4b0), 0x60);
        // CB 60 01D5
        gbc.setState(0x4a83, 0x7034, 0xb610, 0x7440, 0x699d, 0x18ce, 0x1, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7034);
        EXPECT(gbc.pc(), 0x4a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01D6
        gbc.setState(0xdb8b, 0x4e5c, 0x6040, 0x5ea8, 0x3ed5, 0x2bb9, 0x0, 0x1);
        gbc.writeMem(0xdb8b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4e5c);
        EXPECT(gbc.pc(), 0xdb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8b), 0xcb);
        EXPECT(gbc.readMem(0xdb8c), 0x60);
        // CB 60 01D7
        gbc.setState(0x2ad, 0xb2d4, 0x97d0, 0x96e2, 0x1752, 0xe0c1, 0x1, 0x1);
        gbc.writeMem(0x2ad, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb2d4);
        EXPECT(gbc.pc(), 0x2af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01D9
        gbc.setState(0x285f, 0x30d, 0x81f0, 0x9236, 0xcc56, 0x86f7, 0x1, 0x0);
        gbc.writeMem(0x285f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x30d);
        EXPECT(gbc.pc(), 0x2861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01DA
        gbc.setState(0xd884, 0x5f36, 0x8f00, 0x81bf, 0x1cc7, 0x74f9, 0x0, 0x0);
        gbc.writeMem(0xd884, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0xd886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd884), 0xcb);
        EXPECT(gbc.readMem(0xd885), 0x60);
        // CB 60 01DB
        gbc.setState(0x3189, 0x4ee3, 0x8290, 0xf1ac, 0x31f7, 0x8f99, 0x1, 0x0);
        gbc.writeMem(0x3189, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4ee3);
        EXPECT(gbc.pc(), 0x318b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01DC
        gbc.setState(0x6443, 0x311, 0xdee0, 0x2606, 0x25e7, 0x60d5, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x311);
        EXPECT(gbc.pc(), 0x6445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01DD
        gbc.setState(0x92d2, 0xf35b, 0x1f50, 0xd7ce, 0x576e, 0xdc5e, 0x0, 0x1);
        gbc.writeMem(0x92d2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf35b);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d2), 0xcb);
        EXPECT(gbc.readMem(0x92d3), 0x60);
        // CB 60 01DE
        gbc.setState(0xe005, 0x921d, 0xe5d0, 0x127c, 0xd062, 0xa353, 0x0, 0x1);
        gbc.writeMem(0xe005, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0xe007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe005), 0xcb);
        EXPECT(gbc.readMem(0xe006), 0x60);
        // CB 60 01DF
        gbc.setState(0xb6ec, 0x2949, 0xe430, 0x959d, 0x2210, 0xed9e, 0x0, 0x1);
        gbc.writeMem(0xb6ec, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2949);
        EXPECT(gbc.pc(), 0xb6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ec), 0xcb);
        EXPECT(gbc.readMem(0xb6ed), 0x60);
        // CB 60 01E0
        gbc.setState(0xb801, 0x11b2, 0x8260, 0xadea, 0xe9f9, 0x839f, 0x0, 0x0);
        gbc.writeMem(0xb801, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x11b2);
        EXPECT(gbc.pc(), 0xb803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb801), 0xcb);
        EXPECT(gbc.readMem(0xb802), 0x60);
        // CB 60 01E1
        gbc.setState(0x61d3, 0xe16a, 0xcdd0, 0x9d3e, 0x84cd, 0x66fa, 0x0, 0x0);
        gbc.writeMem(0x61d3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe16a);
        EXPECT(gbc.pc(), 0x61d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01E2
        gbc.setState(0xb3f, 0xd4c0, 0xbc40, 0xdb23, 0x9a96, 0x5eb7, 0x1, 0x1);
        gbc.writeMem(0xb3f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0xb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01E3
        gbc.setState(0x526d, 0xb039, 0xe370, 0xcd2d, 0xace5, 0xd452, 0x0, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb039);
        EXPECT(gbc.pc(), 0x526f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01E4
        gbc.setState(0x614b, 0x2da9, 0x8d90, 0x57ed, 0x8150, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0x614b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2da9);
        EXPECT(gbc.pc(), 0x614d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01E5
        gbc.setState(0xa142, 0x62c1, 0x5b50, 0x1ce8, 0x80e2, 0x1fe, 0x1, 0x1);
        gbc.writeMem(0xa142, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x62c1);
        EXPECT(gbc.pc(), 0xa144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa142), 0xcb);
        EXPECT(gbc.readMem(0xa143), 0x60);
        // CB 60 01E6
        gbc.setState(0xe1ad, 0x4b5e, 0x7650, 0x9ed7, 0x811b, 0x8f03, 0x1, 0x1);
        gbc.writeMem(0xe1ad, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4b5e);
        EXPECT(gbc.pc(), 0xe1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ad), 0xcb);
        EXPECT(gbc.readMem(0xe1ae), 0x60);
        // CB 60 01E7
        gbc.setState(0x4b00, 0x2587, 0x83e0, 0xfe2e, 0xeb57, 0xab83, 0x1, 0x1);
        gbc.writeMem(0x4b00, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2587);
        EXPECT(gbc.pc(), 0x4b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01E8
        gbc.setState(0x1b31, 0x7427, 0x9240, 0x5cc2, 0x1eb2, 0x304a, 0x0, 0x0);
        gbc.writeMem(0x1b31, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7427);
        EXPECT(gbc.pc(), 0x1b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01E9
        gbc.setState(0x4c38, 0x6a2b, 0x3b0, 0x7855, 0x6c34, 0xf4cf, 0x1, 0x0);
        gbc.writeMem(0x4c38, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6a2b);
        EXPECT(gbc.pc(), 0x4c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01EA
        gbc.setState(0x76de, 0x3fba, 0xfda0, 0xe5dc, 0x42ab, 0x93b7, 0x0, 0x0);
        gbc.writeMem(0x76de, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3fba);
        EXPECT(gbc.pc(), 0x76e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01EB
        gbc.setState(0x5180, 0xd5a5, 0x59f0, 0xc333, 0x7d4a, 0x966c, 0x1, 0x1);
        gbc.writeMem(0x5180, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd5a5);
        EXPECT(gbc.pc(), 0x5182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01EC
        gbc.setState(0xeca4, 0xa1d3, 0xee0, 0x9c68, 0xd57b, 0x6dd2, 0x0, 0x1);
        gbc.writeMem(0xeca4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa1d3);
        EXPECT(gbc.pc(), 0xeca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca4), 0xcb);
        EXPECT(gbc.readMem(0xeca5), 0x60);
        // CB 60 01ED
        gbc.setState(0xd2e1, 0xe823, 0xeaf0, 0xc073, 0xcc84, 0x9628, 0x0, 0x0);
        gbc.writeMem(0xd2e1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe823);
        EXPECT(gbc.pc(), 0xd2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e1), 0xcb);
        EXPECT(gbc.readMem(0xd2e2), 0x60);
        // CB 60 01EE
        gbc.setState(0x8ed7, 0x8047, 0x5440, 0x72ae, 0xa150, 0xa769, 0x0, 0x0);
        gbc.writeMem(0x8ed7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8047);
        EXPECT(gbc.pc(), 0x8ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed7), 0xcb);
        EXPECT(gbc.readMem(0x8ed8), 0x60);
        // CB 60 01EF
        gbc.setState(0x1eca, 0xd671, 0x9070, 0x19e2, 0xffd6, 0x73ef, 0x0, 0x0);
        gbc.writeMem(0x1eca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd671);
        EXPECT(gbc.pc(), 0x1ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01F0
        gbc.setState(0x62af, 0x4c5b, 0xa310, 0x871b, 0x2d49, 0xaa16, 0x1, 0x0);
        gbc.writeMem(0x62af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4c5b);
        EXPECT(gbc.pc(), 0x62b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01F2
        gbc.setState(0xd089, 0x309, 0xad70, 0x3032, 0xb839, 0x8be7, 0x0, 0x0);
        gbc.writeMem(0xd089, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x309);
        EXPECT(gbc.pc(), 0xd08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd089), 0xcb);
        EXPECT(gbc.readMem(0xd08a), 0x60);
        // CB 60 01F3
        gbc.setState(0x2b2d, 0x3666, 0x3140, 0x64ce, 0x67d8, 0xb03a, 0x0, 0x0);
        gbc.writeMem(0x2b2d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3666);
        EXPECT(gbc.pc(), 0x2b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01F4
        gbc.setState(0x8095, 0xb25d, 0x6a30, 0x2392, 0x1c49, 0x3069, 0x1, 0x0);
        gbc.writeMem(0x8095, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb25d);
        EXPECT(gbc.pc(), 0x8097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8095), 0xcb);
        EXPECT(gbc.readMem(0x8096), 0x60);
        // CB 60 01F5
        gbc.setState(0xe06a, 0xdf01, 0x9f40, 0x8e36, 0x44eb, 0x4887, 0x0, 0x0);
        gbc.writeMem(0xe06a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdf01);
        EXPECT(gbc.pc(), 0xe06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06a), 0xcb);
        EXPECT(gbc.readMem(0xe06b), 0x60);
        // CB 60 01F6
        gbc.setState(0x6023, 0x6852, 0x6ad0, 0x4bef, 0xf3cc, 0x2a4, 0x1, 0x0);
        gbc.writeMem(0x6023, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6852);
        EXPECT(gbc.pc(), 0x6025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01F7
        gbc.setState(0x1c29, 0xaf07, 0x6020, 0x49f1, 0x15ef, 0xb98c, 0x1, 0x1);
        gbc.writeMem(0x1c29, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaf07);
        EXPECT(gbc.pc(), 0x1c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01F8
        gbc.setState(0x3e86, 0xb214, 0x8040, 0xf7d4, 0x54c3, 0x3c62, 0x1, 0x1);
        gbc.writeMem(0x3e86, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb214);
        EXPECT(gbc.pc(), 0x3e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01F9
        gbc.setState(0x6ebd, 0xf458, 0x67d0, 0x3f28, 0xbeed, 0xf12d, 0x0, 0x1);
        gbc.writeMem(0x6ebd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf458);
        EXPECT(gbc.pc(), 0x6ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01FA
        gbc.setState(0x9cf4, 0x7aa7, 0x1580, 0xf7bf, 0x4313, 0xfea5, 0x0, 0x1);
        gbc.writeMem(0x9cf4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7aa7);
        EXPECT(gbc.pc(), 0x9cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf4), 0xcb);
        EXPECT(gbc.readMem(0x9cf5), 0x60);
        // CB 60 01FB
        gbc.setState(0x63d3, 0xf75c, 0x2620, 0xac67, 0x7cd0, 0x79, 0x1, 0x0);
        gbc.writeMem(0x63d3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf75c);
        EXPECT(gbc.pc(), 0x63d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01FC
        gbc.setState(0x28c0, 0x25d4, 0x72a0, 0x9213, 0xe805, 0xc438, 0x0, 0x0);
        gbc.writeMem(0x28c0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x25d4);
        EXPECT(gbc.pc(), 0x28c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 01FD
        gbc.setState(0xef7a, 0x6575, 0x25e0, 0x86e, 0x9e14, 0xd561, 0x1, 0x0);
        gbc.writeMem(0xef7a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6575);
        EXPECT(gbc.pc(), 0xef7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7a), 0xcb);
        EXPECT(gbc.readMem(0xef7b), 0x60);
        // CB 60 01FE
        gbc.setState(0x780b, 0x1863, 0xc4f0, 0x7a8d, 0x943d, 0x748d, 0x1, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1863);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 01FF
        gbc.setState(0x4347, 0xa623, 0xd3d0, 0x8bf4, 0x968f, 0xb80, 0x0, 0x0);
        gbc.writeMem(0x4347, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa623);
        EXPECT(gbc.pc(), 0x4349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0200
        gbc.setState(0xd896, 0xbb76, 0xb2d0, 0x822c, 0x8158, 0x9f6, 0x0, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd896), 0xcb);
        EXPECT(gbc.readMem(0xd897), 0x60);
        // CB 60 0201
        gbc.setState(0xafa2, 0x71c1, 0xcb0, 0xaa45, 0xdfcf, 0x7134, 0x1, 0x1);
        gbc.writeMem(0xafa2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x71c1);
        EXPECT(gbc.pc(), 0xafa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa2), 0xcb);
        EXPECT(gbc.readMem(0xafa3), 0x60);
        // CB 60 0202
        gbc.setState(0xa41b, 0xe37e, 0x7a40, 0xc3a4, 0xcb7a, 0xb222, 0x0, 0x1);
        gbc.writeMem(0xa41b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe37e);
        EXPECT(gbc.pc(), 0xa41d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41b), 0xcb);
        EXPECT(gbc.readMem(0xa41c), 0x60);
        // CB 60 0203
        gbc.setState(0x375a, 0x810f, 0x8a30, 0xe590, 0x61d6, 0xf09, 0x0, 0x0);
        gbc.writeMem(0x375a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x810f);
        EXPECT(gbc.pc(), 0x375c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0205
        gbc.setState(0x6d83, 0xabc8, 0x5d0, 0xdc5, 0x338e, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0x6d83, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xabc8);
        EXPECT(gbc.pc(), 0x6d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0206
        gbc.setState(0xdeb0, 0x9307, 0x6aa0, 0x7e28, 0xb19a, 0x1962, 0x1, 0x1);
        gbc.writeMem(0xdeb0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9307);
        EXPECT(gbc.pc(), 0xdeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb0), 0xcb);
        EXPECT(gbc.readMem(0xdeb1), 0x60);
        // CB 60 0207
        gbc.setState(0x461d, 0xcd44, 0x1a00, 0x248, 0x8bbe, 0x4db7, 0x0, 0x0);
        gbc.writeMem(0x461d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcd44);
        EXPECT(gbc.pc(), 0x461f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0208
        gbc.setState(0x9f38, 0x77a5, 0xfdd0, 0xd543, 0xc503, 0x13d7, 0x0, 0x0);
        gbc.writeMem(0x9f38, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x77a5);
        EXPECT(gbc.pc(), 0x9f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f38), 0xcb);
        EXPECT(gbc.readMem(0x9f39), 0x60);
        // CB 60 0209
        gbc.setState(0x4958, 0xd2be, 0x9690, 0xf193, 0x4661, 0xf52e, 0x0, 0x1);
        gbc.writeMem(0x4958, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd2be);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 020A
        gbc.setState(0x5a, 0x7466, 0x7670, 0xb031, 0x57d4, 0x7540, 0x0, 0x1);
        gbc.writeMem(0x5a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 020B
        gbc.setState(0x22, 0x507d, 0x650, 0xae0c, 0x8018, 0x43b0, 0x1, 0x1);
        gbc.writeMem(0x22, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x507d);
        EXPECT(gbc.pc(), 0x24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 020C
        gbc.setState(0xc58e, 0xf9d2, 0x23e0, 0xc239, 0xf6f3, 0x8344, 0x1, 0x1);
        gbc.writeMem(0xc58e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf9d2);
        EXPECT(gbc.pc(), 0xc590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58e), 0xcb);
        EXPECT(gbc.readMem(0xc58f), 0x60);
        // CB 60 020D
        gbc.setState(0xba04, 0x4bbb, 0x1120, 0xd4b9, 0x192d, 0xb3e4, 0x1, 0x0);
        gbc.writeMem(0xba04, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4bbb);
        EXPECT(gbc.pc(), 0xba06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba04), 0xcb);
        EXPECT(gbc.readMem(0xba05), 0x60);
        // CB 60 020E
        gbc.setState(0xca4, 0xcde0, 0x3120, 0x71f1, 0x7fee, 0x5ef5, 0x1, 0x0);
        gbc.writeMem(0xca4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0xca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 020F
        gbc.setState(0xb265, 0x2b88, 0x3c30, 0x890a, 0x4758, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0xb265, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2b88);
        EXPECT(gbc.pc(), 0xb267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb265), 0xcb);
        EXPECT(gbc.readMem(0xb266), 0x60);
        // CB 60 0210
        gbc.setState(0xdc98, 0x8a57, 0x3b50, 0x2f34, 0x9435, 0xf0a, 0x1, 0x0);
        gbc.writeMem(0xdc98, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8a57);
        EXPECT(gbc.pc(), 0xdc9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc98), 0xcb);
        EXPECT(gbc.readMem(0xdc99), 0x60);
        // CB 60 0211
        gbc.setState(0xd479, 0x1fa, 0x5dd0, 0xb794, 0x587c, 0x2c1a, 0x1, 0x0);
        gbc.writeMem(0xd479, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1fa);
        EXPECT(gbc.pc(), 0xd47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd479), 0xcb);
        EXPECT(gbc.readMem(0xd47a), 0x60);
        // CB 60 0212
        gbc.setState(0xd3c5, 0xcce, 0x1120, 0xb7a9, 0x80c1, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0xd3c5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0xd3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c5), 0xcb);
        EXPECT(gbc.readMem(0xd3c6), 0x60);
        // CB 60 0213
        gbc.setState(0xea26, 0xa607, 0xf490, 0x518a, 0x7ade, 0x6669, 0x0, 0x0);
        gbc.writeMem(0xea26, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa607);
        EXPECT(gbc.pc(), 0xea28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea26), 0xcb);
        EXPECT(gbc.readMem(0xea27), 0x60);
        // CB 60 0214
        gbc.setState(0x3158, 0x629a, 0x2840, 0x4525, 0x7b29, 0xec75, 0x1, 0x0);
        gbc.writeMem(0x3158, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x629a);
        EXPECT(gbc.pc(), 0x315a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0215
        gbc.setState(0x430d, 0xcc1e, 0x53c0, 0x3aa, 0x21a2, 0x9f4a, 0x1, 0x1);
        gbc.writeMem(0x430d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcc1e);
        EXPECT(gbc.pc(), 0x430f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0216
        gbc.setState(0x43b8, 0x28a2, 0xd7f0, 0xdadb, 0xf5eb, 0x3cfe, 0x0, 0x1);
        gbc.writeMem(0x43b8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x28a2);
        EXPECT(gbc.pc(), 0x43ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0217
        gbc.setState(0xe27f, 0xb8cc, 0x57f0, 0xb1f5, 0x2f29, 0x5644, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb8cc);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe27f), 0xcb);
        EXPECT(gbc.readMem(0xe280), 0x60);
        // CB 60 0218
        gbc.setState(0x1228, 0x7eee, 0x4020, 0xd37c, 0x7585, 0x78ab, 0x1, 0x1);
        gbc.writeMem(0x1228, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0x122a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0219
        gbc.setState(0x32f, 0x6c48, 0x2010, 0x7e1a, 0x5df7, 0xf24b, 0x1, 0x0);
        gbc.writeMem(0x32f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6c48);
        EXPECT(gbc.pc(), 0x331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 021A
        gbc.setState(0xc403, 0x4cf1, 0x8040, 0xfa17, 0x78ea, 0xb51d, 0x1, 0x1);
        gbc.writeMem(0xc403, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4cf1);
        EXPECT(gbc.pc(), 0xc405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc403), 0xcb);
        EXPECT(gbc.readMem(0xc404), 0x60);
        // CB 60 021B
        gbc.setState(0x91dd, 0xd142, 0xf200, 0xd3e, 0x9410, 0xfd31, 0x0, 0x1);
        gbc.writeMem(0x91dd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd142);
        EXPECT(gbc.pc(), 0x91df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91dd), 0xcb);
        EXPECT(gbc.readMem(0x91de), 0x60);
        // CB 60 021D
        gbc.setState(0xc676, 0xafc9, 0x5870, 0x4fa4, 0x91b9, 0x1550, 0x0, 0x0);
        gbc.writeMem(0xc676, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xafc9);
        EXPECT(gbc.pc(), 0xc678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc676), 0xcb);
        EXPECT(gbc.readMem(0xc677), 0x60);
        // CB 60 021E
        gbc.setState(0xbc24, 0xf339, 0x6090, 0x7bdd, 0x351e, 0x189e, 0x0, 0x0);
        gbc.writeMem(0xbc24, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf339);
        EXPECT(gbc.pc(), 0xbc26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc24), 0xcb);
        EXPECT(gbc.readMem(0xbc25), 0x60);
        // CB 60 021F
        gbc.setState(0x7ccd, 0x19bc, 0x4ac0, 0x9e32, 0x7a59, 0x65e7, 0x1, 0x1);
        gbc.writeMem(0x7ccd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x19bc);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0220
        gbc.setState(0x272d, 0xab09, 0x3410, 0xf7d8, 0xe59b, 0x50df, 0x0, 0x1);
        gbc.writeMem(0x272d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xab09);
        EXPECT(gbc.pc(), 0x272f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0221
        gbc.setState(0x8f56, 0xdd74, 0x8370, 0xd6ff, 0xb72c, 0xd26, 0x0, 0x1);
        gbc.writeMem(0x8f56, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdd74);
        EXPECT(gbc.pc(), 0x8f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f56), 0xcb);
        EXPECT(gbc.readMem(0x8f57), 0x60);
        // CB 60 0222
        gbc.setState(0xe516, 0xd570, 0xed60, 0x9ee7, 0xead, 0xaa2a, 0x1, 0x1);
        gbc.writeMem(0xe516, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd570);
        EXPECT(gbc.pc(), 0xe518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe516), 0xcb);
        EXPECT(gbc.readMem(0xe517), 0x60);
        // CB 60 0223
        gbc.setState(0x30e6, 0xf7c6, 0x6870, 0x9f6a, 0x3062, 0x96f6, 0x1, 0x1);
        gbc.writeMem(0x30e6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf7c6);
        EXPECT(gbc.pc(), 0x30e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0224
        gbc.setState(0xd54c, 0xd237, 0x81c0, 0x6a0, 0xfb85, 0xbacf, 0x0, 0x1);
        gbc.writeMem(0xd54c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd237);
        EXPECT(gbc.pc(), 0xd54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54c), 0xcb);
        EXPECT(gbc.readMem(0xd54d), 0x60);
        // CB 60 0225
        gbc.setState(0xb880, 0xaefb, 0x5030, 0x703e, 0x3f47, 0x692b, 0x1, 0x0);
        gbc.writeMem(0xb880, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaefb);
        EXPECT(gbc.pc(), 0xb882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb880), 0xcb);
        EXPECT(gbc.readMem(0xb881), 0x60);
        // CB 60 0226
        gbc.setState(0xe45e, 0xbd78, 0x9b80, 0xade4, 0x53a0, 0x6831, 0x1, 0x0);
        gbc.writeMem(0xe45e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbd78);
        EXPECT(gbc.pc(), 0xe460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45e), 0xcb);
        EXPECT(gbc.readMem(0xe45f), 0x60);
        // CB 60 0227
        gbc.setState(0xb326, 0x8569, 0xfa00, 0xa0c5, 0x4dce, 0xc158, 0x0, 0x1);
        gbc.writeMem(0xb326, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8569);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb326), 0xcb);
        EXPECT(gbc.readMem(0xb327), 0x60);
        // CB 60 0228
        gbc.setState(0x75ac, 0x9db1, 0x4a40, 0x57c6, 0x6b60, 0x50f2, 0x1, 0x0);
        gbc.writeMem(0x75ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9db1);
        EXPECT(gbc.pc(), 0x75ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0229
        gbc.setState(0x91fb, 0xdc38, 0x3480, 0xe2ea, 0x2e08, 0x7bfd, 0x1, 0x1);
        gbc.writeMem(0x91fb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdc38);
        EXPECT(gbc.pc(), 0x91fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91fb), 0xcb);
        EXPECT(gbc.readMem(0x91fc), 0x60);
        // CB 60 022A
        gbc.setState(0x169f, 0xffd8, 0xfd0, 0x2181, 0xe70b, 0x2aee, 0x1, 0x0);
        gbc.writeMem(0x169f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xffd8);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 022B
        gbc.setState(0xd5f9, 0xd206, 0x57f0, 0x5a89, 0x2fea, 0xeb95, 0x0, 0x0);
        gbc.writeMem(0xd5f9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0xd5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f9), 0xcb);
        EXPECT(gbc.readMem(0xd5fa), 0x60);
        // CB 60 022C
        gbc.setState(0x3b7, 0xad14, 0x4250, 0x3975, 0xe5c9, 0x54f, 0x0, 0x0);
        gbc.writeMem(0x3b7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xad14);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 022D
        gbc.setState(0x4e37, 0x43d0, 0x5140, 0x3a6f, 0xf24, 0xc6c1, 0x0, 0x1);
        gbc.writeMem(0x4e37, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x43d0);
        EXPECT(gbc.pc(), 0x4e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 022E
        gbc.setState(0x1a90, 0xcc2e, 0x39c0, 0xb128, 0x81fa, 0x15b7, 0x1, 0x1);
        gbc.writeMem(0x1a90, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcc2e);
        EXPECT(gbc.pc(), 0x1a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 022F
        gbc.setState(0xa331, 0x8848, 0x52d0, 0x2f48, 0x2644, 0xd380, 0x0, 0x0);
        gbc.writeMem(0xa331, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8848);
        EXPECT(gbc.pc(), 0xa333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa331), 0xcb);
        EXPECT(gbc.readMem(0xa332), 0x60);
        // CB 60 0230
        gbc.setState(0xd3af, 0xc2b9, 0xa320, 0x9420, 0xba2f, 0x6892, 0x0, 0x0);
        gbc.writeMem(0xd3af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc2b9);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3af), 0xcb);
        EXPECT(gbc.readMem(0xd3b0), 0x60);
        // CB 60 0231
        gbc.setState(0xb548, 0xdb6c, 0x54d0, 0x6d58, 0xf111, 0xc43, 0x1, 0x1);
        gbc.writeMem(0xb548, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdb6c);
        EXPECT(gbc.pc(), 0xb54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb548), 0xcb);
        EXPECT(gbc.readMem(0xb549), 0x60);
        // CB 60 0232
        gbc.setState(0x6527, 0xa5a5, 0x7c10, 0x9b23, 0xc41e, 0x9ac6, 0x1, 0x0);
        gbc.writeMem(0x6527, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa5a5);
        EXPECT(gbc.pc(), 0x6529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0233
        gbc.setState(0x221a, 0x400f, 0xfdc0, 0x3785, 0x7b62, 0x7014, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x400f);
        EXPECT(gbc.pc(), 0x221c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0234
        gbc.setState(0x4e6c, 0x1bf4, 0x7ae0, 0xe9b1, 0xf9d0, 0xe9ce, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1bf4);
        EXPECT(gbc.pc(), 0x4e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0235
        gbc.setState(0x7112, 0xa50f, 0xf100, 0xcf1a, 0x732b, 0xba26, 0x0, 0x1);
        gbc.writeMem(0x7112, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa50f);
        EXPECT(gbc.pc(), 0x7114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0236
        gbc.setState(0xc325, 0xb12b, 0x9b70, 0x7c9, 0x555e, 0x649e, 0x1, 0x0);
        gbc.writeMem(0xc325, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb12b);
        EXPECT(gbc.pc(), 0xc327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc325), 0xcb);
        EXPECT(gbc.readMem(0xc326), 0x60);
        // CB 60 0237
        gbc.setState(0xdc69, 0x5983, 0xbd70, 0xa349, 0xbc20, 0x3564, 0x1, 0x1);
        gbc.writeMem(0xdc69, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5983);
        EXPECT(gbc.pc(), 0xdc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc69), 0xcb);
        EXPECT(gbc.readMem(0xdc6a), 0x60);
        // CB 60 0238
        gbc.setState(0x4d31, 0x9bca, 0xdf50, 0xe311, 0x51f6, 0x5381, 0x1, 0x0);
        gbc.writeMem(0x4d31, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9bca);
        EXPECT(gbc.pc(), 0x4d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0239
        gbc.setState(0x5332, 0xc5fe, 0x22d0, 0xe6f1, 0x22f4, 0x49bb, 0x1, 0x1);
        gbc.writeMem(0x5332, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc5fe);
        EXPECT(gbc.pc(), 0x5334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 023A
        gbc.setState(0x4b41, 0xf593, 0xcdc0, 0x59e7, 0xb96c, 0x75aa, 0x1, 0x0);
        gbc.writeMem(0x4b41, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf593);
        EXPECT(gbc.pc(), 0x4b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 023B
        gbc.setState(0x9578, 0xbabc, 0x7fd0, 0x615c, 0x4e5, 0xc301, 0x1, 0x0);
        gbc.writeMem(0x9578, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbabc);
        EXPECT(gbc.pc(), 0x957a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9578), 0xcb);
        EXPECT(gbc.readMem(0x9579), 0x60);
        // CB 60 023C
        gbc.setState(0xb619, 0x836b, 0x9300, 0x7fa5, 0x47c7, 0x3af6, 0x0, 0x0);
        gbc.writeMem(0xb619, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb619), 0xcb);
        EXPECT(gbc.readMem(0xb61a), 0x60);
        // CB 60 023D
        gbc.setState(0xaef5, 0x1da4, 0xd8b0, 0x28e, 0xa35, 0xbe9e, 0x1, 0x1);
        gbc.writeMem(0xaef5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0xaef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef5), 0xcb);
        EXPECT(gbc.readMem(0xaef6), 0x60);
        // CB 60 023E
        gbc.setState(0x2f54, 0x95d, 0x8340, 0xe228, 0xf70e, 0xcc5d, 0x0, 0x1);
        gbc.writeMem(0x2f54, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x95d);
        EXPECT(gbc.pc(), 0x2f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 023F
        gbc.setState(0x3666, 0xbb8d, 0xfd40, 0x44d1, 0xda6f, 0xd51b, 0x0, 0x0);
        gbc.writeMem(0x3666, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbb8d);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0240
        gbc.setState(0xc787, 0x3ef9, 0xe050, 0xea7c, 0x8e99, 0xfcb8, 0x1, 0x1);
        gbc.writeMem(0xc787, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3ef9);
        EXPECT(gbc.pc(), 0xc789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc787), 0xcb);
        EXPECT(gbc.readMem(0xc788), 0x60);
        // CB 60 0241
        gbc.setState(0x198b, 0xb2d9, 0x480, 0xaf76, 0xea8e, 0x1207, 0x0, 0x1);
        gbc.writeMem(0x198b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb2d9);
        EXPECT(gbc.pc(), 0x198d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0242
        gbc.setState(0x1ac0, 0xbd4, 0xa270, 0x3b0c, 0x2ecb, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x1ac0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x1ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0243
        gbc.setState(0x8aa1, 0x199c, 0x5040, 0x6696, 0x6d67, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0x8aa1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0x8aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa1), 0xcb);
        EXPECT(gbc.readMem(0x8aa2), 0x60);
        // CB 60 0244
        gbc.setState(0x5e22, 0x6eca, 0x31b0, 0xa1fa, 0x27fc, 0xb7ab, 0x0, 0x1);
        gbc.writeMem(0x5e22, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6eca);
        EXPECT(gbc.pc(), 0x5e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0245
        gbc.setState(0xc5bb, 0x6c9a, 0xa320, 0x7426, 0x5a4d, 0xfafd, 0x1, 0x1);
        gbc.writeMem(0xc5bb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6c9a);
        EXPECT(gbc.pc(), 0xc5bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bb), 0xcb);
        EXPECT(gbc.readMem(0xc5bc), 0x60);
        // CB 60 0246
        gbc.setState(0xbb44, 0x5c86, 0x1b10, 0x837a, 0x874, 0x8121, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5c86);
        EXPECT(gbc.pc(), 0xbb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb44), 0xcb);
        EXPECT(gbc.readMem(0xbb45), 0x60);
        // CB 60 0247
        gbc.setState(0xbca6, 0x2b6b, 0xcaa0, 0x5750, 0x63e8, 0xce26, 0x0, 0x0);
        gbc.writeMem(0xbca6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2b6b);
        EXPECT(gbc.pc(), 0xbca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca6), 0xcb);
        EXPECT(gbc.readMem(0xbca7), 0x60);
        // CB 60 0248
        gbc.setState(0x972f, 0xa9ad, 0xacf0, 0xd267, 0x9c66, 0x15a4, 0x0, 0x0);
        gbc.writeMem(0x972f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa9ad);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0x60);
        // CB 60 0249
        gbc.setState(0x9c6c, 0x12c6, 0x3ac0, 0x5717, 0xec4e, 0x63bc, 0x1, 0x1);
        gbc.writeMem(0x9c6c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0x9c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6c), 0xcb);
        EXPECT(gbc.readMem(0x9c6d), 0x60);
        // CB 60 024A
        gbc.setState(0x6545, 0x3a90, 0x1d30, 0xa104, 0x8c7f, 0x56c0, 0x1, 0x1);
        gbc.writeMem(0x6545, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3a90);
        EXPECT(gbc.pc(), 0x6547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 024B
        gbc.setState(0x282f, 0x4746, 0xa2b0, 0xc050, 0x97b8, 0xfce4, 0x0, 0x0);
        gbc.writeMem(0x282f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4746);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 024C
        gbc.setState(0xa238, 0xdc3c, 0x8640, 0xef81, 0x9a1, 0xb5e0, 0x0, 0x1);
        gbc.writeMem(0xa238, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdc3c);
        EXPECT(gbc.pc(), 0xa23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa238), 0xcb);
        EXPECT(gbc.readMem(0xa239), 0x60);
        // CB 60 024D
        gbc.setState(0xccb2, 0xbf04, 0x64a0, 0x2347, 0x82f9, 0xa5aa, 0x0, 0x1);
        gbc.writeMem(0xccb2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbf04);
        EXPECT(gbc.pc(), 0xccb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb2), 0xcb);
        EXPECT(gbc.readMem(0xccb3), 0x60);
        // CB 60 024E
        gbc.setState(0x8ea7, 0x76fc, 0xd530, 0xdd58, 0x5306, 0x2b9c, 0x0, 0x1);
        gbc.writeMem(0x8ea7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x76fc);
        EXPECT(gbc.pc(), 0x8ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea7), 0xcb);
        EXPECT(gbc.readMem(0x8ea8), 0x60);
        // CB 60 024F
        gbc.setState(0xbc69, 0xfb4e, 0xb710, 0xcca4, 0x874c, 0xe032, 0x1, 0x1);
        gbc.writeMem(0xbc69, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0xbc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc69), 0xcb);
        EXPECT(gbc.readMem(0xbc6a), 0x60);
        // CB 60 0250
        gbc.setState(0xcd8f, 0x6e20, 0xdf80, 0x7b36, 0x5666, 0xf141, 0x1, 0x1);
        gbc.writeMem(0xcd8f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0xcd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8f), 0xcb);
        EXPECT(gbc.readMem(0xcd90), 0x60);
        // CB 60 0251
        gbc.setState(0xb4c4, 0x938f, 0x7fb0, 0x9902, 0x7f40, 0xc9ef, 0x0, 0x1);
        gbc.writeMem(0xb4c4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x938f);
        EXPECT(gbc.pc(), 0xb4c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c4), 0xcb);
        EXPECT(gbc.readMem(0xb4c5), 0x60);
        // CB 60 0252
        gbc.setState(0xefe9, 0x32e9, 0x2940, 0xe701, 0x2fb3, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0xefe9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x32e9);
        EXPECT(gbc.pc(), 0xefeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe9), 0xcb);
        EXPECT(gbc.readMem(0xefea), 0x60);
        // CB 60 0253
        gbc.setState(0xcef8, 0x8142, 0xd2f0, 0x7d29, 0x80bb, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0xcef8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8142);
        EXPECT(gbc.pc(), 0xcefa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef8), 0xcb);
        EXPECT(gbc.readMem(0xcef9), 0x60);
        // CB 60 0254
        gbc.setState(0xb92d, 0xcb82, 0xdf00, 0x52f4, 0x378b, 0xd48b, 0x0, 0x1);
        gbc.writeMem(0xb92d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0xb92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb92d), 0xcb);
        EXPECT(gbc.readMem(0xb92e), 0x60);
        // CB 60 0255
        gbc.setState(0x45da, 0xb30, 0xcd0, 0x2ad6, 0x1477, 0xff69, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb30);
        EXPECT(gbc.pc(), 0x45dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0256
        gbc.setState(0xade6, 0x32ff, 0x90, 0xc11c, 0x958c, 0x459, 0x1, 0x0);
        gbc.writeMem(0xade6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x32ff);
        EXPECT(gbc.pc(), 0xade8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade6), 0xcb);
        EXPECT(gbc.readMem(0xade7), 0x60);
        // CB 60 0257
        gbc.setState(0xde74, 0x5c21, 0x3e70, 0x3d50, 0xebb0, 0xdf3d, 0x1, 0x0);
        gbc.writeMem(0xde74, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5c21);
        EXPECT(gbc.pc(), 0xde76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde74), 0xcb);
        EXPECT(gbc.readMem(0xde75), 0x60);
        // CB 60 0258
        gbc.setState(0x8b00, 0x1071, 0x4c30, 0x55bd, 0xf16c, 0x1ae7, 0x1, 0x0);
        gbc.writeMem(0x8b00, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1071);
        EXPECT(gbc.pc(), 0x8b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b00), 0xcb);
        EXPECT(gbc.readMem(0x8b01), 0x60);
        // CB 60 0259
        gbc.setState(0x3cc, 0x2716, 0xbb30, 0xb992, 0xb9ed, 0x31ee, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2716);
        EXPECT(gbc.pc(), 0x3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 025A
        gbc.setState(0x2d80, 0xe637, 0xcf20, 0xe7de, 0xb945, 0x7b0c, 0x1, 0x0);
        gbc.writeMem(0x2d80, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe637);
        EXPECT(gbc.pc(), 0x2d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 025B
        gbc.setState(0xe245, 0xfde6, 0x2f90, 0x93df, 0xc347, 0x8add, 0x0, 0x0);
        gbc.writeMem(0xe245, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfde6);
        EXPECT(gbc.pc(), 0xe247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe245), 0xcb);
        EXPECT(gbc.readMem(0xe246), 0x60);
        // CB 60 025C
        gbc.setState(0x9de5, 0x3612, 0x7ab0, 0x5a97, 0xcc9, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0x9de5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3612);
        EXPECT(gbc.pc(), 0x9de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de5), 0xcb);
        EXPECT(gbc.readMem(0x9de6), 0x60);
        // CB 60 025D
        gbc.setState(0x23ec, 0xb1a, 0x24d0, 0x8b59, 0x63a9, 0x134c, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb1a);
        EXPECT(gbc.pc(), 0x23ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 025E
        gbc.setState(0x3e3a, 0x82ea, 0x21c0, 0xd93a, 0xb7b0, 0xbef6, 0x0, 0x1);
        gbc.writeMem(0x3e3a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x82ea);
        EXPECT(gbc.pc(), 0x3e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 025F
        gbc.setState(0x8b4a, 0x1653, 0x5a80, 0xe0ae, 0xbbac, 0xdb77, 0x0, 0x1);
        gbc.writeMem(0x8b4a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1653);
        EXPECT(gbc.pc(), 0x8b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4a), 0xcb);
        EXPECT(gbc.readMem(0x8b4b), 0x60);
        // CB 60 0260
        gbc.setState(0x4b99, 0xcf6d, 0xf6a0, 0x1850, 0x6604, 0xe411, 0x0, 0x1);
        gbc.writeMem(0x4b99, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcf6d);
        EXPECT(gbc.pc(), 0x4b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0261
        gbc.setState(0xef06, 0x2430, 0x1930, 0x9bcf, 0x8040, 0x5446, 0x0, 0x0);
        gbc.writeMem(0xef06, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0xef08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef06), 0xcb);
        EXPECT(gbc.readMem(0xef07), 0x60);
        // CB 60 0262
        gbc.setState(0x6008, 0xe460, 0xc260, 0x8607, 0x2fc5, 0xe6e4, 0x0, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0x600a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0263
        gbc.setState(0x391f, 0x6ed, 0xeb60, 0xb5c6, 0x5c5b, 0x72a1, 0x0, 0x0);
        gbc.writeMem(0x391f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6ed);
        EXPECT(gbc.pc(), 0x3921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0264
        gbc.setState(0x4ca4, 0xf1a7, 0x4af0, 0x6550, 0xfcaa, 0xce5c, 0x0, 0x1);
        gbc.writeMem(0x4ca4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf1a7);
        EXPECT(gbc.pc(), 0x4ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0265
        gbc.setState(0x300f, 0xb6b4, 0xdf50, 0x681b, 0x39b2, 0x91f1, 0x1, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb6b4);
        EXPECT(gbc.pc(), 0x3011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0266
        gbc.setState(0x8491, 0xce0e, 0x7340, 0xc33f, 0xa1d0, 0xea1, 0x0, 0x1);
        gbc.writeMem(0x8491, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xce0e);
        EXPECT(gbc.pc(), 0x8493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8491), 0xcb);
        EXPECT(gbc.readMem(0x8492), 0x60);
        // CB 60 0267
        gbc.setState(0x1ec9, 0x4b84, 0xb980, 0xe48c, 0x997d, 0x4e15, 0x1, 0x1);
        gbc.writeMem(0x1ec9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4b84);
        EXPECT(gbc.pc(), 0x1ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0268
        gbc.setState(0x5729, 0xed07, 0xb0f0, 0x2bbd, 0x24e7, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0x5729, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xed07);
        EXPECT(gbc.pc(), 0x572b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0269
        gbc.setState(0x31fe, 0x42c0, 0x5df0, 0xfaeb, 0x3cb7, 0xf566, 0x1, 0x1);
        gbc.writeMem(0x31fe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x42c0);
        EXPECT(gbc.pc(), 0x3200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 026A
        gbc.setState(0x69ca, 0x3e9c, 0x4d70, 0xc4df, 0xef8d, 0xac64, 0x0, 0x1);
        gbc.writeMem(0x69ca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3e9c);
        EXPECT(gbc.pc(), 0x69cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 026B
        gbc.setState(0xcb48, 0xc5e7, 0x56a0, 0x3e17, 0xc76b, 0x2342, 0x0, 0x0);
        gbc.writeMem(0xcb48, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc5e7);
        EXPECT(gbc.pc(), 0xcb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb48), 0xcb);
        EXPECT(gbc.readMem(0xcb49), 0x60);
        // CB 60 026C
        gbc.setState(0x25bd, 0x7e81, 0xb8a0, 0x569e, 0x54f5, 0x515c, 0x0, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7e81);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 026D
        gbc.setState(0x2ba6, 0x6aa6, 0x35c0, 0xd2e0, 0x6ad7, 0xea22, 0x1, 0x0);
        gbc.writeMem(0x2ba6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6aa6);
        EXPECT(gbc.pc(), 0x2ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 026E
        gbc.setState(0x10ac, 0x4a27, 0xc10, 0xe9f6, 0xff3e, 0x8b6b, 0x1, 0x1);
        gbc.writeMem(0x10ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4a27);
        EXPECT(gbc.pc(), 0x10ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 026F
        gbc.setState(0x392f, 0x2707, 0xdd80, 0x2fe2, 0x12d1, 0xd4d1, 0x1, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2707);
        EXPECT(gbc.pc(), 0x3931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0270
        gbc.setState(0x1e18, 0x474b, 0x2d10, 0xc2de, 0x96c7, 0xb7e1, 0x1, 0x0);
        gbc.writeMem(0x1e18, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x474b);
        EXPECT(gbc.pc(), 0x1e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0271
        gbc.setState(0xe58f, 0xe0cf, 0x9080, 0xd82f, 0xac35, 0x5596, 0x0, 0x1);
        gbc.writeMem(0xe58f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe0cf);
        EXPECT(gbc.pc(), 0xe591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58f), 0xcb);
        EXPECT(gbc.readMem(0xe590), 0x60);
        // CB 60 0272
        gbc.setState(0x2785, 0x4450, 0x57a0, 0x9da5, 0x49fe, 0x5f5d, 0x1, 0x1);
        gbc.writeMem(0x2785, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4450);
        EXPECT(gbc.pc(), 0x2787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0273
        gbc.setState(0xb95b, 0xf4e1, 0xa580, 0x60b, 0x643a, 0x809b, 0x1, 0x1);
        gbc.writeMem(0xb95b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0xb95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95b), 0xcb);
        EXPECT(gbc.readMem(0xb95c), 0x60);
        // CB 60 0274
        gbc.setState(0xa44f, 0x7fab, 0x9a60, 0xea92, 0xf372, 0x4ef8, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7fab);
        EXPECT(gbc.pc(), 0xa451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44f), 0xcb);
        EXPECT(gbc.readMem(0xa450), 0x60);
        // CB 60 0275
        gbc.setState(0x50cc, 0x9c7a, 0x3110, 0xd9be, 0x742c, 0x1d6e, 0x1, 0x0);
        gbc.writeMem(0x50cc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x50ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0276
        gbc.setState(0xc89f, 0xc10a, 0x27a0, 0x5d87, 0xbe5f, 0xb45b, 0x1, 0x1);
        gbc.writeMem(0xc89f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0xc8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89f), 0xcb);
        EXPECT(gbc.readMem(0xc8a0), 0x60);
        // CB 60 0277
        gbc.setState(0x91b0, 0xc864, 0xcca0, 0xc2, 0xf157, 0x9470, 0x0, 0x0);
        gbc.writeMem(0x91b0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc864);
        EXPECT(gbc.pc(), 0x91b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b0), 0xcb);
        EXPECT(gbc.readMem(0x91b1), 0x60);
        // CB 60 0278
        gbc.setState(0x3dbd, 0x6ea5, 0xdd00, 0x3f2e, 0x7143, 0xc636, 0x0, 0x1);
        gbc.writeMem(0x3dbd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6ea5);
        EXPECT(gbc.pc(), 0x3dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0279
        gbc.setState(0x4e04, 0x834f, 0xdeb0, 0x1ff8, 0x3ecb, 0xa534, 0x1, 0x0);
        gbc.writeMem(0x4e04, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x834f);
        EXPECT(gbc.pc(), 0x4e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 027A
        gbc.setState(0x9be0, 0x1dd, 0x3930, 0xd8f0, 0xe545, 0x6f30, 0x0, 0x1);
        gbc.writeMem(0x9be0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1dd);
        EXPECT(gbc.pc(), 0x9be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be0), 0xcb);
        EXPECT(gbc.readMem(0x9be1), 0x60);
        // CB 60 027B
        gbc.setState(0x621e, 0xba3e, 0x11b0, 0xa7a2, 0x7d88, 0x6a, 0x1, 0x0);
        gbc.writeMem(0x621e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xba3e);
        EXPECT(gbc.pc(), 0x6220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 027C
        gbc.setState(0xb316, 0x9bd0, 0xb280, 0x1db8, 0x81ab, 0xa38c, 0x1, 0x0);
        gbc.writeMem(0xb316, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9bd0);
        EXPECT(gbc.pc(), 0xb318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb316), 0xcb);
        EXPECT(gbc.readMem(0xb317), 0x60);
        // CB 60 027D
        gbc.setState(0x3e02, 0x9cc7, 0x8940, 0x7569, 0x11f5, 0x4f56, 0x0, 0x1);
        gbc.writeMem(0x3e02, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9cc7);
        EXPECT(gbc.pc(), 0x3e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 027E
        gbc.setState(0x11af, 0x4cc1, 0x21d0, 0xc5de, 0xdbd2, 0xe8d8, 0x0, 0x1);
        gbc.writeMem(0x11af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4cc1);
        EXPECT(gbc.pc(), 0x11b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 027F
        gbc.setState(0x2ee8, 0x79b2, 0x26c0, 0x75c0, 0x7a84, 0x6e5e, 0x0, 0x0);
        gbc.writeMem(0x2ee8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x79b2);
        EXPECT(gbc.pc(), 0x2eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0280
        gbc.setState(0x1d5c, 0x39d, 0x4f70, 0xbe43, 0xa6e3, 0xe70c, 0x1, 0x0);
        gbc.writeMem(0x1d5c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x39d);
        EXPECT(gbc.pc(), 0x1d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0281
        gbc.setState(0x7e54, 0x9e60, 0xabc0, 0x1bf5, 0x1c59, 0x292, 0x0, 0x0);
        gbc.writeMem(0x7e54, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9e60);
        EXPECT(gbc.pc(), 0x7e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0282
        gbc.setState(0xd867, 0x69a4, 0x9fe0, 0x168c, 0xa6e2, 0x23f6, 0x1, 0x1);
        gbc.writeMem(0xd867, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x69a4);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd867), 0xcb);
        EXPECT(gbc.readMem(0xd868), 0x60);
        // CB 60 0283
        gbc.setState(0x6c4d, 0x1d94, 0x2ac0, 0x429c, 0x690a, 0x7999, 0x0, 0x0);
        gbc.writeMem(0x6c4d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1d94);
        EXPECT(gbc.pc(), 0x6c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0284
        gbc.setState(0x766c, 0xa822, 0xa770, 0x97a9, 0x40f5, 0x5a7f, 0x0, 0x1);
        gbc.writeMem(0x766c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa822);
        EXPECT(gbc.pc(), 0x766e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0285
        gbc.setState(0x58eb, 0xb149, 0x6950, 0xc499, 0xb37c, 0x20db, 0x1, 0x0);
        gbc.writeMem(0x58eb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb149);
        EXPECT(gbc.pc(), 0x58ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0287
        gbc.setState(0xbfac, 0xa5fd, 0xc100, 0xdc, 0x4668, 0xc4d8, 0x0, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa5fd);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfac), 0xcb);
        EXPECT(gbc.readMem(0xbfad), 0x60);
        // CB 60 0288
        gbc.setState(0x9b46, 0x875c, 0x3340, 0x5de5, 0xe9c6, 0x8605, 0x0, 0x1);
        gbc.writeMem(0x9b46, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x875c);
        EXPECT(gbc.pc(), 0x9b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b46), 0xcb);
        EXPECT(gbc.readMem(0x9b47), 0x60);
        // CB 60 0289
        gbc.setState(0xdfc7, 0xa7cc, 0x6ba0, 0x15b, 0x3bb8, 0x55d0, 0x0, 0x0);
        gbc.writeMem(0xdfc7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa7cc);
        EXPECT(gbc.pc(), 0xdfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc7), 0xcb);
        EXPECT(gbc.readMem(0xdfc8), 0x60);
        // CB 60 028A
        gbc.setState(0x2b57, 0x4828, 0xe440, 0xb1ab, 0xb2a7, 0x6d65, 0x0, 0x0);
        gbc.writeMem(0x2b57, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4828);
        EXPECT(gbc.pc(), 0x2b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 028B
        gbc.setState(0xc8d1, 0xd5b, 0x73b0, 0x1b9c, 0x4769, 0x88ca, 0x0, 0x1);
        gbc.writeMem(0xc8d1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd5b);
        EXPECT(gbc.pc(), 0xc8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d1), 0xcb);
        EXPECT(gbc.readMem(0xc8d2), 0x60);
        // CB 60 028C
        gbc.setState(0x2d04, 0x720, 0xe140, 0x7bd9, 0x2dac, 0xb93b, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x720);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 028D
        gbc.setState(0xc027, 0x4549, 0x7920, 0x5312, 0xc1ef, 0xefef, 0x0, 0x1);
        gbc.writeMem(0xc027, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4549);
        EXPECT(gbc.pc(), 0xc029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc027), 0xcb);
        EXPECT(gbc.readMem(0xc028), 0x60);
        // CB 60 028E
        gbc.setState(0xd728, 0x6611, 0x7600, 0xa5db, 0x4dc3, 0x4c1f, 0x1, 0x1);
        gbc.writeMem(0xd728, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6611);
        EXPECT(gbc.pc(), 0xd72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd728), 0xcb);
        EXPECT(gbc.readMem(0xd729), 0x60);
        // CB 60 028F
        gbc.setState(0x92ed, 0x6adf, 0x6a0, 0xa8ec, 0xadb6, 0x3b68, 0x0, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6adf);
        EXPECT(gbc.pc(), 0x92ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ed), 0xcb);
        EXPECT(gbc.readMem(0x92ee), 0x60);
        // CB 60 0290
        gbc.setState(0x18e0, 0x99f9, 0xddd0, 0x21a1, 0x8e71, 0xc267, 0x0, 0x0);
        gbc.writeMem(0x18e0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x99f9);
        EXPECT(gbc.pc(), 0x18e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0291
        gbc.setState(0x38e, 0x4179, 0xcc60, 0x67ff, 0x84a4, 0x4580, 0x1, 0x0);
        gbc.writeMem(0x38e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4179);
        EXPECT(gbc.pc(), 0x390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0292
        gbc.setState(0x4408, 0xa766, 0x85b0, 0xc141, 0x721b, 0x5662, 0x1, 0x1);
        gbc.writeMem(0x4408, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa766);
        EXPECT(gbc.pc(), 0x440a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0293
        gbc.setState(0x4577, 0x5c8, 0x1590, 0xd0a1, 0xe903, 0xff6f, 0x1, 0x1);
        gbc.writeMem(0x4577, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5c8);
        EXPECT(gbc.pc(), 0x4579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0294
        gbc.setState(0x66a, 0x61e4, 0x5bb0, 0xc0d1, 0x6d60, 0xe28b, 0x0, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x61e4);
        EXPECT(gbc.pc(), 0x66c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0295
        gbc.setState(0x738f, 0xaa65, 0x2fc0, 0x1285, 0x66bb, 0xdbd4, 0x1, 0x1);
        gbc.writeMem(0x738f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaa65);
        EXPECT(gbc.pc(), 0x7391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0296
        gbc.setState(0x8af8, 0xd830, 0x6e00, 0xf8fd, 0x1429, 0x372a, 0x1, 0x0);
        gbc.writeMem(0x8af8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd830);
        EXPECT(gbc.pc(), 0x8afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af8), 0xcb);
        EXPECT(gbc.readMem(0x8af9), 0x60);
        // CB 60 0297
        gbc.setState(0x6dee, 0xf11b, 0x8470, 0x47cc, 0x838c, 0x815c, 0x1, 0x1);
        gbc.writeMem(0x6dee, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf11b);
        EXPECT(gbc.pc(), 0x6df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0298
        gbc.setState(0x2de3, 0x6379, 0xb220, 0x227f, 0x4934, 0x8968, 0x0, 0x0);
        gbc.writeMem(0x2de3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6379);
        EXPECT(gbc.pc(), 0x2de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0299
        gbc.setState(0x22c0, 0x7b2d, 0xa130, 0xc367, 0xbdbb, 0x2c36, 0x1, 0x0);
        gbc.writeMem(0x22c0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7b2d);
        EXPECT(gbc.pc(), 0x22c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 029A
        gbc.setState(0x6a09, 0x734e, 0x23a0, 0x9f24, 0x1ea8, 0x415f, 0x1, 0x1);
        gbc.writeMem(0x6a09, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x734e);
        EXPECT(gbc.pc(), 0x6a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 029B
        gbc.setState(0x8e5a, 0x769d, 0xb40, 0xb655, 0xd959, 0x54be, 0x1, 0x1);
        gbc.writeMem(0x8e5a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x769d);
        EXPECT(gbc.pc(), 0x8e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e5a), 0xcb);
        EXPECT(gbc.readMem(0x8e5b), 0x60);
        // CB 60 029C
        gbc.setState(0x58ce, 0x95b7, 0xbd10, 0xe02e, 0xbf77, 0x8b95, 0x1, 0x0);
        gbc.writeMem(0x58ce, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x95b7);
        EXPECT(gbc.pc(), 0x58d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 029D
        gbc.setState(0xc0b2, 0x5fa, 0x1b70, 0x9e3, 0xad5e, 0x2dd8, 0x1, 0x0);
        gbc.writeMem(0xc0b2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0xc0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b2), 0xcb);
        EXPECT(gbc.readMem(0xc0b3), 0x60);
        // CB 60 029E
        gbc.setState(0xe64c, 0xc142, 0xeb90, 0x89b9, 0xf496, 0xc049, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc142);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0x60);
        // CB 60 029F
        gbc.setState(0x6cf, 0x5dd7, 0xf990, 0x1ce7, 0x4fc8, 0x10b0, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5dd7);
        EXPECT(gbc.pc(), 0x6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02A0
        gbc.setState(0xb917, 0x4af3, 0xe8e0, 0x2b0, 0x4719, 0x25c5, 0x0, 0x1);
        gbc.writeMem(0xb917, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4af3);
        EXPECT(gbc.pc(), 0xb919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb917), 0xcb);
        EXPECT(gbc.readMem(0xb918), 0x60);
        // CB 60 02A1
        gbc.setState(0x837f, 0xd88c, 0x2e10, 0xd3be, 0x5141, 0x8633, 0x1, 0x0);
        gbc.writeMem(0x837f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd88c);
        EXPECT(gbc.pc(), 0x8381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837f), 0xcb);
        EXPECT(gbc.readMem(0x8380), 0x60);
        // CB 60 02A2
        gbc.setState(0x24, 0xdb6, 0xa300, 0x48aa, 0xacc8, 0x4447, 0x1, 0x0);
        gbc.writeMem(0x24, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdb6);
        EXPECT(gbc.pc(), 0x26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02A3
        gbc.setState(0x4184, 0x267, 0x8880, 0xa211, 0x5e16, 0xe2fd, 0x0, 0x0);
        gbc.writeMem(0x4184, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0x4186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02A4
        gbc.setState(0xb59a, 0xdb8a, 0xfbb0, 0x8f27, 0x40c4, 0xf620, 0x1, 0x1);
        gbc.writeMem(0xb59a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdb8a);
        EXPECT(gbc.pc(), 0xb59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59a), 0xcb);
        EXPECT(gbc.readMem(0xb59b), 0x60);
        // CB 60 02A5
        gbc.setState(0xb822, 0x2764, 0x79b0, 0xf817, 0x7917, 0x2bc4, 0x1, 0x1);
        gbc.writeMem(0xb822, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0xb824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb822), 0xcb);
        EXPECT(gbc.readMem(0xb823), 0x60);
        // CB 60 02A6
        gbc.setState(0xe3bb, 0xa234, 0x1ad0, 0x5dfb, 0x934b, 0xe5a5, 0x1, 0x1);
        gbc.writeMem(0xe3bb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa234);
        EXPECT(gbc.pc(), 0xe3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bb), 0xcb);
        EXPECT(gbc.readMem(0xe3bc), 0x60);
        // CB 60 02A7
        gbc.setState(0xc387, 0x34b1, 0x8210, 0xa791, 0x22a6, 0x83f1, 0x1, 0x0);
        gbc.writeMem(0xc387, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x34b1);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0xcb);
        EXPECT(gbc.readMem(0xc388), 0x60);
        // CB 60 02A8
        gbc.setState(0xe41a, 0xfca9, 0x16e0, 0xfe71, 0xe61f, 0xbc62, 0x1, 0x1);
        gbc.writeMem(0xe41a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfca9);
        EXPECT(gbc.pc(), 0xe41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41a), 0xcb);
        EXPECT(gbc.readMem(0xe41b), 0x60);
        // CB 60 02AA
        gbc.setState(0x7ed3, 0x718a, 0xa5b0, 0x8618, 0x2fbb, 0x43b7, 0x1, 0x0);
        gbc.writeMem(0x7ed3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x718a);
        EXPECT(gbc.pc(), 0x7ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02AB
        gbc.setState(0xaf91, 0xfe02, 0xf650, 0xa524, 0xbee, 0x9a8a, 0x1, 0x0);
        gbc.writeMem(0xaf91, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfe02);
        EXPECT(gbc.pc(), 0xaf93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf91), 0xcb);
        EXPECT(gbc.readMem(0xaf92), 0x60);
        // CB 60 02AC
        gbc.setState(0x6bd, 0xf122, 0x8cf0, 0x166a, 0x2dc3, 0x53fe, 0x0, 0x1);
        gbc.writeMem(0x6bd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf122);
        EXPECT(gbc.pc(), 0x6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02AD
        gbc.setState(0xec15, 0xbd9e, 0x1cf0, 0x60d1, 0x82fc, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0xec15, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbd9e);
        EXPECT(gbc.pc(), 0xec17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec15), 0xcb);
        EXPECT(gbc.readMem(0xec16), 0x60);
        // CB 60 02AE
        gbc.setState(0x669a, 0x275a, 0x31f0, 0xe111, 0xe276, 0x9ebd, 0x1, 0x1);
        gbc.writeMem(0x669a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x275a);
        EXPECT(gbc.pc(), 0x669c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02AF
        gbc.setState(0xda0c, 0xd51f, 0x2de0, 0x29f3, 0xe9ab, 0x3ace, 0x1, 0x0);
        gbc.writeMem(0xda0c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd51f);
        EXPECT(gbc.pc(), 0xda0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0c), 0xcb);
        EXPECT(gbc.readMem(0xda0d), 0x60);
        // CB 60 02B0
        gbc.setState(0x8457, 0xb368, 0x8070, 0x880b, 0x5d35, 0x5cee, 0x1, 0x0);
        gbc.writeMem(0x8457, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb368);
        EXPECT(gbc.pc(), 0x8459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8457), 0xcb);
        EXPECT(gbc.readMem(0x8458), 0x60);
        // CB 60 02B1
        gbc.setState(0x4255, 0xfff2, 0xc350, 0xa023, 0x4cdf, 0x2599, 0x1, 0x0);
        gbc.writeMem(0x4255, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfff2);
        EXPECT(gbc.pc(), 0x4257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02B2
        gbc.setState(0x66d2, 0x4e48, 0xa720, 0xea32, 0x1ccb, 0x63ce, 0x0, 0x1);
        gbc.writeMem(0x66d2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4e48);
        EXPECT(gbc.pc(), 0x66d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02B3
        gbc.setState(0x7ec, 0x8e8f, 0x55c0, 0x6c0a, 0xfde3, 0xedbf, 0x1, 0x1);
        gbc.writeMem(0x7ec, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8e8f);
        EXPECT(gbc.pc(), 0x7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02B4
        gbc.setState(0x1d33, 0x880, 0x88f0, 0x4633, 0xe9a9, 0x4e22, 0x1, 0x0);
        gbc.writeMem(0x1d33, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x880);
        EXPECT(gbc.pc(), 0x1d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02B5
        gbc.setState(0x6453, 0x8999, 0xe7e0, 0xcd7c, 0x6f8f, 0xce10, 0x1, 0x1);
        gbc.writeMem(0x6453, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0x6455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02B6
        gbc.setState(0xb8f3, 0x1276, 0x3670, 0xe48e, 0x5a37, 0x70db, 0x0, 0x1);
        gbc.writeMem(0xb8f3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1276);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f3), 0xcb);
        EXPECT(gbc.readMem(0xb8f4), 0x60);
        // CB 60 02B7
        gbc.setState(0x2ac9, 0xff2c, 0x29d0, 0x3d68, 0xc7, 0x4500, 0x1, 0x0);
        gbc.writeMem(0x2ac9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0x2acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02B8
        gbc.setState(0xb0e6, 0x2adf, 0x950, 0x10cf, 0x2350, 0x5559, 0x0, 0x0);
        gbc.writeMem(0xb0e6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2adf);
        EXPECT(gbc.pc(), 0xb0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e6), 0xcb);
        EXPECT(gbc.readMem(0xb0e7), 0x60);
        // CB 60 02B9
        gbc.setState(0xd8ce, 0x15a, 0xfb40, 0x9fc, 0x4cd0, 0x48e3, 0x1, 0x1);
        gbc.writeMem(0xd8ce, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x15a);
        EXPECT(gbc.pc(), 0xd8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ce), 0xcb);
        EXPECT(gbc.readMem(0xd8cf), 0x60);
        // CB 60 02BA
        gbc.setState(0xd801, 0x5fee, 0x2c20, 0x6c7, 0x5e04, 0xd907, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5fee);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd801), 0xcb);
        EXPECT(gbc.readMem(0xd802), 0x60);
        // CB 60 02BC
        gbc.setState(0xd6cb, 0xf5c4, 0x7270, 0xe418, 0x87ca, 0x8cda, 0x0, 0x0);
        gbc.writeMem(0xd6cb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf5c4);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cb), 0xcb);
        EXPECT(gbc.readMem(0xd6cc), 0x60);
        // CB 60 02BD
        gbc.setState(0x53a9, 0x6ac9, 0x7bf0, 0x5ba, 0x7820, 0x2549, 0x1, 0x1);
        gbc.writeMem(0x53a9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0x53ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02BE
        gbc.setState(0xd83a, 0x458f, 0xaf80, 0xdeb, 0xf88e, 0x52ee, 0x1, 0x0);
        gbc.writeMem(0xd83a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x458f);
        EXPECT(gbc.pc(), 0xd83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83a), 0xcb);
        EXPECT(gbc.readMem(0xd83b), 0x60);
        // CB 60 02BF
        gbc.setState(0x429, 0xdb09, 0x140, 0x30e2, 0xcaf9, 0xe629, 0x1, 0x0);
        gbc.writeMem(0x429, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdb09);
        EXPECT(gbc.pc(), 0x42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02C0
        gbc.setState(0xb358, 0x4aeb, 0xe6b0, 0x2dc5, 0xe761, 0xcf8f, 0x1, 0x0);
        gbc.writeMem(0xb358, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4aeb);
        EXPECT(gbc.pc(), 0xb35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb358), 0xcb);
        EXPECT(gbc.readMem(0xb359), 0x60);
        // CB 60 02C1
        gbc.setState(0x739, 0xd98d, 0xa2a0, 0x1dab, 0x157d, 0x101, 0x1, 0x0);
        gbc.writeMem(0x739, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd98d);
        EXPECT(gbc.pc(), 0x73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02C2
        gbc.setState(0x8ee6, 0xfec1, 0x6e20, 0xdaac, 0x29b0, 0x57c, 0x1, 0x1);
        gbc.writeMem(0x8ee6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfec1);
        EXPECT(gbc.pc(), 0x8ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee6), 0xcb);
        EXPECT(gbc.readMem(0x8ee7), 0x60);
        // CB 60 02C3
        gbc.setState(0xd7ae, 0x9aa5, 0x1b70, 0xf62, 0xe3b5, 0x8f36, 0x0, 0x1);
        gbc.writeMem(0xd7ae, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9aa5);
        EXPECT(gbc.pc(), 0xd7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ae), 0xcb);
        EXPECT(gbc.readMem(0xd7af), 0x60);
        // CB 60 02C5
        gbc.setState(0xaa9b, 0xf5e9, 0x52b0, 0x25f, 0xb6df, 0x28a5, 0x0, 0x1);
        gbc.writeMem(0xaa9b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf5e9);
        EXPECT(gbc.pc(), 0xaa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9b), 0xcb);
        EXPECT(gbc.readMem(0xaa9c), 0x60);
        // CB 60 02C6
        gbc.setState(0x5ae4, 0x30b5, 0x1fa0, 0x4de4, 0x150c, 0x2041, 0x1, 0x1);
        gbc.writeMem(0x5ae4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x5ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02C7
        gbc.setState(0x3fd5, 0xeffb, 0x7b0, 0xed9e, 0xd2a0, 0xc38f, 0x1, 0x0);
        gbc.writeMem(0x3fd5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeffb);
        EXPECT(gbc.pc(), 0x3fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02C8
        gbc.setState(0x67a0, 0x4d5a, 0xbe10, 0x11ee, 0x4d5a, 0xc10f, 0x1, 0x0);
        gbc.writeMem(0x67a0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4d5a);
        EXPECT(gbc.pc(), 0x67a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02C9
        gbc.setState(0x563b, 0x77b, 0x5900, 0xfe21, 0x7ee6, 0xae29, 0x0, 0x0);
        gbc.writeMem(0x563b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x77b);
        EXPECT(gbc.pc(), 0x563d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02CA
        gbc.setState(0x4bf4, 0x69c8, 0x2760, 0x88a2, 0x862c, 0x641b, 0x0, 0x0);
        gbc.writeMem(0x4bf4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x69c8);
        EXPECT(gbc.pc(), 0x4bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02CB
        gbc.setState(0xdba1, 0x5c8c, 0xf7a0, 0x8fd, 0x2a0, 0xf0e9, 0x0, 0x0);
        gbc.writeMem(0xdba1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5c8c);
        EXPECT(gbc.pc(), 0xdba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba1), 0xcb);
        EXPECT(gbc.readMem(0xdba2), 0x60);
        // CB 60 02CC
        gbc.setState(0x38ca, 0x5c79, 0x4230, 0x81f6, 0x5b8a, 0x7edd, 0x1, 0x1);
        gbc.writeMem(0x38ca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0x38cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02CD
        gbc.setState(0xcd00, 0xfcf0, 0x5110, 0x61dd, 0x9ee, 0x3359, 0x1, 0x0);
        gbc.writeMem(0xcd00, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0xcd02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd00), 0xcb);
        EXPECT(gbc.readMem(0xcd01), 0x60);
        // CB 60 02CE
        gbc.setState(0x30f0, 0xeac7, 0xa8d0, 0x15cb, 0xcf46, 0x792, 0x0, 0x1);
        gbc.writeMem(0x30f0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0x30f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02CF
        gbc.setState(0x2fe8, 0xc6b4, 0xb810, 0xd4ee, 0x60e8, 0x2516, 0x0, 0x0);
        gbc.writeMem(0x2fe8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc6b4);
        EXPECT(gbc.pc(), 0x2fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02D0
        gbc.setState(0x757b, 0x85c0, 0xb0b0, 0x73a7, 0x79a7, 0x8ccc, 0x0, 0x0);
        gbc.writeMem(0x757b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x85c0);
        EXPECT(gbc.pc(), 0x757d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02D1
        gbc.setState(0x48ea, 0xdd06, 0x1330, 0xff06, 0x2f80, 0x1bd6, 0x0, 0x0);
        gbc.writeMem(0x48ea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdd06);
        EXPECT(gbc.pc(), 0x48ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02D2
        gbc.setState(0xa81e, 0x6ed9, 0x580, 0x13a4, 0xb956, 0xf949, 0x1, 0x0);
        gbc.writeMem(0xa81e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81e), 0xcb);
        EXPECT(gbc.readMem(0xa81f), 0x60);
        // CB 60 02D3
        gbc.setState(0xe588, 0xddcf, 0x8030, 0x768f, 0x9776, 0x8049, 0x1, 0x1);
        gbc.writeMem(0xe588, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xddcf);
        EXPECT(gbc.pc(), 0xe58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe588), 0xcb);
        EXPECT(gbc.readMem(0xe589), 0x60);
        // CB 60 02D4
        gbc.setState(0xb7dc, 0xf129, 0xf2e0, 0x88f3, 0x8541, 0x1f06, 0x1, 0x1);
        gbc.writeMem(0xb7dc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0xb7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0xcb);
        EXPECT(gbc.readMem(0xb7dd), 0x60);
        // CB 60 02D5
        gbc.setState(0x75b, 0xc4a4, 0xb8c0, 0xc5ee, 0xe914, 0x136, 0x0, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc4a4);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02D6
        gbc.setState(0x40d, 0x13e6, 0x3450, 0x9313, 0xc20f, 0x4e9c, 0x1, 0x0);
        gbc.writeMem(0x40d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x13e6);
        EXPECT(gbc.pc(), 0x40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02D7
        gbc.setState(0xdc48, 0x88a9, 0x6540, 0x5ba1, 0x494a, 0x7644, 0x1, 0x0);
        gbc.writeMem(0xdc48, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x88a9);
        EXPECT(gbc.pc(), 0xdc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc48), 0xcb);
        EXPECT(gbc.readMem(0xdc49), 0x60);
        // CB 60 02D8
        gbc.setState(0x87ac, 0x6978, 0x730, 0x8a5e, 0x4e9, 0x3a99, 0x0, 0x0);
        gbc.writeMem(0x87ac, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6978);
        EXPECT(gbc.pc(), 0x87ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ac), 0xcb);
        EXPECT(gbc.readMem(0x87ad), 0x60);
        // CB 60 02D9
        gbc.setState(0xa7b1, 0x2ddf, 0xd870, 0x4757, 0x3d3b, 0xae7, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2ddf);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0x60);
        // CB 60 02DA
        gbc.setState(0x4ab7, 0x5d67, 0xd80, 0x7c5e, 0xf977, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0x4ab7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5d67);
        EXPECT(gbc.pc(), 0x4ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02DB
        gbc.setState(0xd8f9, 0xc770, 0xdbb0, 0x45e2, 0x4e0d, 0xd380, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc770);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0x60);
        // CB 60 02DC
        gbc.setState(0x81de, 0xfa90, 0xa910, 0x5517, 0xe0c0, 0x5399, 0x1, 0x0);
        gbc.writeMem(0x81de, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfa90);
        EXPECT(gbc.pc(), 0x81e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81de), 0xcb);
        EXPECT(gbc.readMem(0x81df), 0x60);
        // CB 60 02DD
        gbc.setState(0x233a, 0xfabf, 0x4c50, 0xb3ec, 0xb921, 0x8a0d, 0x1, 0x0);
        gbc.writeMem(0x233a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfabf);
        EXPECT(gbc.pc(), 0x233c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02DE
        gbc.setState(0x8822, 0x6a15, 0xf0f0, 0x313b, 0x3831, 0x737, 0x1, 0x1);
        gbc.writeMem(0x8822, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6a15);
        EXPECT(gbc.pc(), 0x8824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8822), 0xcb);
        EXPECT(gbc.readMem(0x8823), 0x60);
        // CB 60 02DF
        gbc.setState(0x91c9, 0xae52, 0x17d0, 0xa940, 0x1fd0, 0x6547, 0x1, 0x1);
        gbc.writeMem(0x91c9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xae52);
        EXPECT(gbc.pc(), 0x91cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c9), 0xcb);
        EXPECT(gbc.readMem(0x91ca), 0x60);
        // CB 60 02E0
        gbc.setState(0xd48a, 0x2684, 0x3000, 0x6f9c, 0x3512, 0xcf9f, 0x1, 0x1);
        gbc.writeMem(0xd48a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2684);
        EXPECT(gbc.pc(), 0xd48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48a), 0xcb);
        EXPECT(gbc.readMem(0xd48b), 0x60);
        // CB 60 02E1
        gbc.setState(0xe2a8, 0x82e0, 0xb420, 0x64b4, 0x129c, 0x407, 0x0, 0x1);
        gbc.writeMem(0xe2a8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x82e0);
        EXPECT(gbc.pc(), 0xe2aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a8), 0xcb);
        EXPECT(gbc.readMem(0xe2a9), 0x60);
        // CB 60 02E2
        gbc.setState(0x29a6, 0x250, 0x7cc0, 0x8d11, 0x53df, 0x1f5a, 0x0, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x250);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02E3
        gbc.setState(0xeb73, 0x183c, 0x84d0, 0x42c, 0xcea9, 0x9c0d, 0x1, 0x1);
        gbc.writeMem(0xeb73, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x183c);
        EXPECT(gbc.pc(), 0xeb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb73), 0xcb);
        EXPECT(gbc.readMem(0xeb74), 0x60);
        // CB 60 02E4
        gbc.setState(0x3a4b, 0xb229, 0x6d80, 0xfb1d, 0x21c4, 0xcc2d, 0x1, 0x1);
        gbc.writeMem(0x3a4b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb229);
        EXPECT(gbc.pc(), 0x3a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02E5
        gbc.setState(0xd6f3, 0xe35, 0x32f0, 0x4ba4, 0xb186, 0x345c, 0x0, 0x1);
        gbc.writeMem(0xd6f3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe35);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0x60);
        // CB 60 02E6
        gbc.setState(0x9109, 0x419e, 0xc1b0, 0x4239, 0x4ff6, 0xca84, 0x1, 0x1);
        gbc.writeMem(0x9109, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x419e);
        EXPECT(gbc.pc(), 0x910b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9109), 0xcb);
        EXPECT(gbc.readMem(0x910a), 0x60);
        // CB 60 02E7
        gbc.setState(0x232f, 0x727b, 0x27b0, 0x29b6, 0x4586, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0x232f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0x2331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02E8
        gbc.setState(0x4c36, 0xf819, 0x4a10, 0x5d70, 0xcdf2, 0x696e, 0x1, 0x0);
        gbc.writeMem(0x4c36, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf819);
        EXPECT(gbc.pc(), 0x4c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02E9
        gbc.setState(0x31a9, 0xb230, 0x57b0, 0x2ec7, 0x55b0, 0x38cc, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb230);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02EA
        gbc.setState(0x7655, 0x6f56, 0x6540, 0xdb96, 0x8d1b, 0x88ed, 0x1, 0x0);
        gbc.writeMem(0x7655, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6f56);
        EXPECT(gbc.pc(), 0x7657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02EB
        gbc.setState(0xd894, 0x6d88, 0x7a80, 0x19f3, 0xd062, 0x10c0, 0x0, 0x1);
        gbc.writeMem(0xd894, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6d88);
        EXPECT(gbc.pc(), 0xd896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd894), 0xcb);
        EXPECT(gbc.readMem(0xd895), 0x60);
        // CB 60 02EC
        gbc.setState(0x9638, 0x41c5, 0x8920, 0x2dae, 0x6881, 0x487b, 0x0, 0x0);
        gbc.writeMem(0x9638, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x41c5);
        EXPECT(gbc.pc(), 0x963a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9638), 0xcb);
        EXPECT(gbc.readMem(0x9639), 0x60);
        // CB 60 02ED
        gbc.setState(0x3e38, 0x93c0, 0x1280, 0x5319, 0xce5a, 0x837f, 0x0, 0x1);
        gbc.writeMem(0x3e38, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x93c0);
        EXPECT(gbc.pc(), 0x3e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02EE
        gbc.setState(0x7b47, 0x4ede, 0x67a0, 0x8d80, 0x2cd0, 0x4e54, 0x1, 0x1);
        gbc.writeMem(0x7b47, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4ede);
        EXPECT(gbc.pc(), 0x7b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02EF
        gbc.setState(0xddd6, 0x994a, 0x1be0, 0x87ec, 0x8e4d, 0x23e7, 0x0, 0x1);
        gbc.writeMem(0xddd6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x994a);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd6), 0xcb);
        EXPECT(gbc.readMem(0xddd7), 0x60);
        // CB 60 02F0
        gbc.setState(0x9384, 0x33a8, 0xff10, 0xbdfd, 0x3ef4, 0x6ffd, 0x1, 0x0);
        gbc.writeMem(0x9384, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x33a8);
        EXPECT(gbc.pc(), 0x9386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9384), 0xcb);
        EXPECT(gbc.readMem(0x9385), 0x60);
        // CB 60 02F1
        gbc.setState(0xd284, 0xa5a5, 0x760, 0x571c, 0x400e, 0x797b, 0x1, 0x0);
        gbc.writeMem(0xd284, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa5a5);
        EXPECT(gbc.pc(), 0xd286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd284), 0xcb);
        EXPECT(gbc.readMem(0xd285), 0x60);
        // CB 60 02F4
        gbc.setState(0xed3b, 0x361a, 0xc940, 0x565f, 0x7ce7, 0xc894, 0x1, 0x1);
        gbc.writeMem(0xed3b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x361a);
        EXPECT(gbc.pc(), 0xed3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3b), 0xcb);
        EXPECT(gbc.readMem(0xed3c), 0x60);
        // CB 60 02F5
        gbc.setState(0x73c9, 0x238, 0x1d0, 0x7b3, 0x8156, 0x1c29, 0x1, 0x0);
        gbc.writeMem(0x73c9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x238);
        EXPECT(gbc.pc(), 0x73cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 02F7
        gbc.setState(0x5c85, 0xb5bc, 0x8ac0, 0x426e, 0x9034, 0x76a3, 0x1, 0x1);
        gbc.writeMem(0x5c85, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb5bc);
        EXPECT(gbc.pc(), 0x5c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02F8
        gbc.setState(0x71d, 0x2f63, 0x2380, 0x6d22, 0x3e38, 0x590d, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2f63);
        EXPECT(gbc.pc(), 0x71f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02F9
        gbc.setState(0xdfe6, 0xd626, 0xd480, 0xcd2e, 0x5bf4, 0x150, 0x0, 0x0);
        gbc.writeMem(0xdfe6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd626);
        EXPECT(gbc.pc(), 0xdfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe6), 0xcb);
        EXPECT(gbc.readMem(0xdfe7), 0x60);
        // CB 60 02FA
        gbc.setState(0x73e3, 0x66be, 0x9a0, 0x84c9, 0xee7f, 0x536e, 0x1, 0x0);
        gbc.writeMem(0x73e3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x66be);
        EXPECT(gbc.pc(), 0x73e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02FB
        gbc.setState(0x2d80, 0xbd1a, 0xe40, 0xc82f, 0x545d, 0x3835, 0x0, 0x0);
        gbc.writeMem(0x2d80, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbd1a);
        EXPECT(gbc.pc(), 0x2d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 02FC
        gbc.setState(0x912a, 0x99c7, 0x4a50, 0xce8f, 0xe799, 0x6a61, 0x0, 0x0);
        gbc.writeMem(0x912a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x99c7);
        EXPECT(gbc.pc(), 0x912c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912a), 0xcb);
        EXPECT(gbc.readMem(0x912b), 0x60);
        // CB 60 02FD
        gbc.setState(0xdce3, 0x25a0, 0x50c0, 0x4fbc, 0x768d, 0x8964, 0x1, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0xdce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce3), 0xcb);
        EXPECT(gbc.readMem(0xdce4), 0x60);
        // CB 60 02FE
        gbc.setState(0x82a8, 0xca78, 0x210, 0xf1ab, 0x8187, 0xeb8d, 0x1, 0x0);
        gbc.writeMem(0x82a8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xca78);
        EXPECT(gbc.pc(), 0x82aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a8), 0xcb);
        EXPECT(gbc.readMem(0x82a9), 0x60);
        // CB 60 02FF
        gbc.setState(0x7b67, 0xfcd2, 0x5240, 0xc76a, 0x3cdf, 0xc722, 0x0, 0x0);
        gbc.writeMem(0x7b67, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfcd2);
        EXPECT(gbc.pc(), 0x7b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0300
        gbc.setState(0x23da, 0x3a4d, 0xe0d0, 0x2539, 0x87c0, 0x16e3, 0x1, 0x0);
        gbc.writeMem(0x23da, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3a4d);
        EXPECT(gbc.pc(), 0x23dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0302
        gbc.setState(0x8120, 0xdc48, 0xcd20, 0xb316, 0xf8f5, 0x77b9, 0x1, 0x0);
        gbc.writeMem(0x8120, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdc48);
        EXPECT(gbc.pc(), 0x8122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8120), 0xcb);
        EXPECT(gbc.readMem(0x8121), 0x60);
        // CB 60 0303
        gbc.setState(0x71f9, 0x76f3, 0x3e90, 0xe8a9, 0xabea, 0x9e7a, 0x1, 0x1);
        gbc.writeMem(0x71f9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x76f3);
        EXPECT(gbc.pc(), 0x71fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0304
        gbc.setState(0x7950, 0x8bcf, 0x4e60, 0xc390, 0xf7b2, 0x1735, 0x0, 0x1);
        gbc.writeMem(0x7950, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8bcf);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0305
        gbc.setState(0x9fe2, 0xffab, 0x7830, 0xfaa4, 0x5bbc, 0x56b8, 0x1, 0x1);
        gbc.writeMem(0x9fe2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xffab);
        EXPECT(gbc.pc(), 0x9fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe2), 0xcb);
        EXPECT(gbc.readMem(0x9fe3), 0x60);
        // CB 60 0306
        gbc.setState(0xc49b, 0xbe63, 0xcf80, 0x90f5, 0xaa0c, 0xc899, 0x1, 0x1);
        gbc.writeMem(0xc49b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbe63);
        EXPECT(gbc.pc(), 0xc49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc49b), 0xcb);
        EXPECT(gbc.readMem(0xc49c), 0x60);
        // CB 60 0307
        gbc.setState(0x58a8, 0x5d59, 0x92b0, 0x138b, 0x7142, 0xac28, 0x0, 0x0);
        gbc.writeMem(0x58a8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5d59);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0308
        gbc.setState(0x68e0, 0x1fd, 0x5520, 0xe0d6, 0xcc3d, 0xc730, 0x0, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1fd);
        EXPECT(gbc.pc(), 0x68e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0309
        gbc.setState(0xeb5f, 0x1d8b, 0x31c0, 0x8b11, 0xd33d, 0x6cff, 0x1, 0x0);
        gbc.writeMem(0xeb5f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1d8b);
        EXPECT(gbc.pc(), 0xeb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5f), 0xcb);
        EXPECT(gbc.readMem(0xeb60), 0x60);
        // CB 60 030A
        gbc.setState(0x6cc7, 0xd98a, 0xc500, 0x717f, 0x4fc7, 0xeb4, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x6cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 030B
        gbc.setState(0x51bc, 0x8e0a, 0x9a50, 0xdaee, 0xd6c1, 0xf247, 0x1, 0x0);
        gbc.writeMem(0x51bc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8e0a);
        EXPECT(gbc.pc(), 0x51be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 030C
        gbc.setState(0x25f0, 0x25ad, 0x3790, 0x5461, 0x597b, 0xbeb4, 0x1, 0x0);
        gbc.writeMem(0x25f0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x25ad);
        EXPECT(gbc.pc(), 0x25f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 030D
        gbc.setState(0xa08f, 0xf21f, 0xcf0, 0x500c, 0x55e0, 0x453f, 0x0, 0x1);
        gbc.writeMem(0xa08f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa08f), 0xcb);
        EXPECT(gbc.readMem(0xa090), 0x60);
        // CB 60 030E
        gbc.setState(0x6d53, 0x4a2c, 0x8740, 0x62fc, 0x7676, 0xb489, 0x1, 0x1);
        gbc.writeMem(0x6d53, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4a2c);
        EXPECT(gbc.pc(), 0x6d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 030F
        gbc.setState(0xce1f, 0xf70d, 0x78a0, 0x2987, 0xbf1d, 0x1739, 0x0, 0x1);
        gbc.writeMem(0xce1f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf70d);
        EXPECT(gbc.pc(), 0xce21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1f), 0xcb);
        EXPECT(gbc.readMem(0xce20), 0x60);
        // CB 60 0310
        gbc.setState(0x2951, 0xb23a, 0x99b0, 0xac57, 0x12b7, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0x2951, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb23a);
        EXPECT(gbc.pc(), 0x2953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0311
        gbc.setState(0xdcd9, 0x6c90, 0xd50, 0xf956, 0x5f65, 0x2572, 0x1, 0x0);
        gbc.writeMem(0xdcd9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6c90);
        EXPECT(gbc.pc(), 0xdcdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd9), 0xcb);
        EXPECT(gbc.readMem(0xdcda), 0x60);
        // CB 60 0312
        gbc.setState(0x4212, 0x3901, 0xbce0, 0xb31d, 0x9d29, 0x1209, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3901);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0313
        gbc.setState(0xddfe, 0xfd54, 0xe690, 0x3783, 0x1443, 0x9a6, 0x0, 0x0);
        gbc.writeMem(0xddfe, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfd54);
        EXPECT(gbc.pc(), 0xde00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfe), 0xcb);
        EXPECT(gbc.readMem(0xddff), 0x60);
        // CB 60 0314
        gbc.setState(0x33b9, 0xc4ba, 0x6710, 0x9284, 0x2d23, 0xbce7, 0x0, 0x0);
        gbc.writeMem(0x33b9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc4ba);
        EXPECT(gbc.pc(), 0x33bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0315
        gbc.setState(0x1a1b, 0x8ec0, 0xe6c0, 0xd192, 0xa13, 0xf41d, 0x1, 0x1);
        gbc.writeMem(0x1a1b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x1a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0316
        gbc.setState(0x30a9, 0xb220, 0xe1b0, 0x4630, 0x1896, 0x22d1, 0x1, 0x1);
        gbc.writeMem(0x30a9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb220);
        EXPECT(gbc.pc(), 0x30ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0318
        gbc.setState(0x8f75, 0xfac2, 0xedf0, 0xd0f3, 0x7eaa, 0x3719, 0x0, 0x0);
        gbc.writeMem(0x8f75, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0x8f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f75), 0xcb);
        EXPECT(gbc.readMem(0x8f76), 0x60);
        // CB 60 0319
        gbc.setState(0x4e92, 0x61b1, 0x5b50, 0xe317, 0xe18f, 0xbd48, 0x1, 0x1);
        gbc.writeMem(0x4e92, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x61b1);
        EXPECT(gbc.pc(), 0x4e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 031A
        gbc.setState(0xae90, 0x307f, 0x150, 0xb059, 0xc43c, 0x9efb, 0x1, 0x0);
        gbc.writeMem(0xae90, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x307f);
        EXPECT(gbc.pc(), 0xae92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae90), 0xcb);
        EXPECT(gbc.readMem(0xae91), 0x60);
        // CB 60 031B
        gbc.setState(0x6367, 0xe985, 0x7210, 0x91e5, 0xc97e, 0xd7a6, 0x1, 0x1);
        gbc.writeMem(0x6367, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe985);
        EXPECT(gbc.pc(), 0x6369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 031C
        gbc.setState(0xdbc1, 0xc4d7, 0x20b0, 0x61eb, 0xe466, 0x713d, 0x1, 0x1);
        gbc.writeMem(0xdbc1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc4d7);
        EXPECT(gbc.pc(), 0xdbc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc1), 0xcb);
        EXPECT(gbc.readMem(0xdbc2), 0x60);
        // CB 60 031D
        gbc.setState(0x3620, 0x2b37, 0xcfb0, 0x5968, 0xcff2, 0xc980, 0x1, 0x1);
        gbc.writeMem(0x3620, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2b37);
        EXPECT(gbc.pc(), 0x3622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 031E
        gbc.setState(0x8a6c, 0x391c, 0x9f50, 0xc7e8, 0xa26a, 0x69df, 0x0, 0x1);
        gbc.writeMem(0x8a6c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x391c);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6c), 0xcb);
        EXPECT(gbc.readMem(0x8a6d), 0x60);
        // CB 60 031F
        gbc.setState(0x3876, 0x6c57, 0xb1f0, 0x4cf, 0xc3b6, 0x44ad, 0x0, 0x1);
        gbc.writeMem(0x3876, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6c57);
        EXPECT(gbc.pc(), 0x3878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0320
        gbc.setState(0x66f4, 0x4ba9, 0x8770, 0xf37, 0xf9fe, 0xc33b, 0x1, 0x0);
        gbc.writeMem(0x66f4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4ba9);
        EXPECT(gbc.pc(), 0x66f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0321
        gbc.setState(0x7725, 0x9190, 0x9a90, 0x640a, 0xcbf0, 0x7ce8, 0x1, 0x1);
        gbc.writeMem(0x7725, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9190);
        EXPECT(gbc.pc(), 0x7727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0322
        gbc.setState(0x76e1, 0x5b0b, 0xd0d0, 0xe73b, 0xb6fc, 0x6797, 0x1, 0x1);
        gbc.writeMem(0x76e1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5b0b);
        EXPECT(gbc.pc(), 0x76e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0323
        gbc.setState(0xbf63, 0x5c5d, 0x21e0, 0x6ac3, 0xa348, 0x8d15, 0x0, 0x0);
        gbc.writeMem(0xbf63, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5c5d);
        EXPECT(gbc.pc(), 0xbf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf63), 0xcb);
        EXPECT(gbc.readMem(0xbf64), 0x60);
        // CB 60 0324
        gbc.setState(0x6f94, 0xae64, 0x7d0, 0xbbe9, 0x7ead, 0x7928, 0x1, 0x1);
        gbc.writeMem(0x6f94, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xae64);
        EXPECT(gbc.pc(), 0x6f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0325
        gbc.setState(0x34cc, 0x593e, 0xda40, 0x32ab, 0x173c, 0x65e6, 0x0, 0x1);
        gbc.writeMem(0x34cc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x593e);
        EXPECT(gbc.pc(), 0x34ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0326
        gbc.setState(0x7c4d, 0x1aea, 0x7fc0, 0x8b2e, 0xe6b7, 0xfcb3, 0x0, 0x1);
        gbc.writeMem(0x7c4d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1aea);
        EXPECT(gbc.pc(), 0x7c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0327
        gbc.setState(0x33ee, 0xe6c4, 0x63f0, 0x6660, 0xd8d4, 0xdbe, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe6c4);
        EXPECT(gbc.pc(), 0x33f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0329
        gbc.setState(0xe8b6, 0x6f4, 0xc710, 0xcd27, 0x52ba, 0x2fcd, 0x1, 0x0);
        gbc.writeMem(0xe8b6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0xe8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b6), 0xcb);
        EXPECT(gbc.readMem(0xe8b7), 0x60);
        // CB 60 032A
        gbc.setState(0xdc4, 0x869, 0x8a40, 0x7018, 0x468b, 0x5a89, 0x0, 0x1);
        gbc.writeMem(0xdc4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x869);
        EXPECT(gbc.pc(), 0xdc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 032B
        gbc.setState(0x4689, 0x37c2, 0x3320, 0xa26b, 0x645a, 0x60ad, 0x1, 0x0);
        gbc.writeMem(0x4689, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x37c2);
        EXPECT(gbc.pc(), 0x468b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 032C
        gbc.setState(0x8ae6, 0x10a6, 0x5f20, 0x68fd, 0xdafd, 0xef78, 0x1, 0x1);
        gbc.writeMem(0x8ae6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x10a6);
        EXPECT(gbc.pc(), 0x8ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae6), 0xcb);
        EXPECT(gbc.readMem(0x8ae7), 0x60);
        // CB 60 032D
        gbc.setState(0x353f, 0xc8c9, 0xd660, 0xc38e, 0x47ad, 0x8a2d, 0x1, 0x0);
        gbc.writeMem(0x353f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc8c9);
        EXPECT(gbc.pc(), 0x3541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 032E
        gbc.setState(0x16e7, 0x71af, 0x1cc0, 0x8f6, 0x6051, 0x26a5, 0x1, 0x1);
        gbc.writeMem(0x16e7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0x16e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 032F
        gbc.setState(0x5e5a, 0x5992, 0x5c80, 0x2cad, 0xda63, 0xccb3, 0x1, 0x0);
        gbc.writeMem(0x5e5a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5992);
        EXPECT(gbc.pc(), 0x5e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0330
        gbc.setState(0x16f6, 0x9dad, 0xed70, 0xfc5, 0xffe0, 0x143f, 0x1, 0x0);
        gbc.writeMem(0x16f6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0x16f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0331
        gbc.setState(0x41b0, 0x80e7, 0x7ab0, 0x8504, 0x20d6, 0x638, 0x0, 0x1);
        gbc.writeMem(0x41b0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0x41b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0332
        gbc.setState(0xabdd, 0x97aa, 0x5c70, 0xb3e6, 0xee3a, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0xabdd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x97aa);
        EXPECT(gbc.pc(), 0xabdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdd), 0xcb);
        EXPECT(gbc.readMem(0xabde), 0x60);
        // CB 60 0333
        gbc.setState(0xbd73, 0xb0b7, 0x5f40, 0x5e46, 0xfb99, 0x6ec3, 0x0, 0x1);
        gbc.writeMem(0xbd73, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb0b7);
        EXPECT(gbc.pc(), 0xbd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd73), 0xcb);
        EXPECT(gbc.readMem(0xbd74), 0x60);
        // CB 60 0334
        gbc.setState(0x7b7a, 0xd932, 0x5a90, 0xb1e6, 0x85a8, 0x2bed, 0x1, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd932);
        EXPECT(gbc.pc(), 0x7b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0335
        gbc.setState(0x7179, 0x68d1, 0xbbc0, 0x3d78, 0xc147, 0xcfac, 0x1, 0x1);
        gbc.writeMem(0x7179, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x68d1);
        EXPECT(gbc.pc(), 0x717b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0336
        gbc.setState(0x769a, 0x3c0e, 0x8030, 0x3d85, 0xbd3f, 0xd, 0x1, 0x1);
        gbc.writeMem(0x769a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3c0e);
        EXPECT(gbc.pc(), 0x769c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0337
        gbc.setState(0x6ab6, 0x593b, 0x4ee0, 0xce6f, 0xd3ce, 0x809, 0x1, 0x0);
        gbc.writeMem(0x6ab6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x593b);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0338
        gbc.setState(0xb9c5, 0xfbb, 0x34b0, 0xf332, 0x2a3d, 0xd445, 0x0, 0x1);
        gbc.writeMem(0xb9c5, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfbb);
        EXPECT(gbc.pc(), 0xb9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c5), 0xcb);
        EXPECT(gbc.readMem(0xb9c6), 0x60);
        // CB 60 0339
        gbc.setState(0xa430, 0x75f7, 0x5460, 0xa610, 0x12b1, 0xe973, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x75f7);
        EXPECT(gbc.pc(), 0xa432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa430), 0xcb);
        EXPECT(gbc.readMem(0xa431), 0x60);
        // CB 60 033A
        gbc.setState(0x64f6, 0xefe8, 0xdea0, 0x1a78, 0x742f, 0x27ff, 0x1, 0x0);
        gbc.writeMem(0x64f6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xefe8);
        EXPECT(gbc.pc(), 0x64f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 033B
        gbc.setState(0x5181, 0x5c22, 0xf840, 0xd628, 0xc0fb, 0xbc10, 0x0, 0x0);
        gbc.writeMem(0x5181, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5c22);
        EXPECT(gbc.pc(), 0x5183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 033C
        gbc.setState(0x44e3, 0x4a1f, 0x4050, 0xf4ae, 0x5624, 0xb9d7, 0x1, 0x1);
        gbc.writeMem(0x44e3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0x44e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 033D
        gbc.setState(0x42ca, 0x4052, 0x3b90, 0x5545, 0xcefc, 0xc96b, 0x1, 0x0);
        gbc.writeMem(0x42ca, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4052);
        EXPECT(gbc.pc(), 0x42cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 033E
        gbc.setState(0x18ed, 0x8c5d, 0xe2d0, 0xcb7e, 0x6f34, 0xd672, 0x1, 0x1);
        gbc.writeMem(0x18ed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8c5d);
        EXPECT(gbc.pc(), 0x18ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 033F
        gbc.setState(0xa87b, 0x86ee, 0xd960, 0x65ea, 0xea49, 0x3d6a, 0x0, 0x0);
        gbc.writeMem(0xa87b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x86ee);
        EXPECT(gbc.pc(), 0xa87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87b), 0xcb);
        EXPECT(gbc.readMem(0xa87c), 0x60);
        // CB 60 0340
        gbc.setState(0xbdbc, 0x4c9f, 0x9e50, 0x7ed9, 0xdb2a, 0x6eeb, 0x0, 0x1);
        gbc.writeMem(0xbdbc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4c9f);
        EXPECT(gbc.pc(), 0xbdbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbc), 0xcb);
        EXPECT(gbc.readMem(0xbdbd), 0x60);
        // CB 60 0341
        gbc.setState(0x43d2, 0xcbef, 0xa110, 0xabfc, 0x2196, 0xdd5a, 0x1, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcbef);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0342
        gbc.setState(0xdf1f, 0xef5c, 0xe410, 0xe8b2, 0xf74e, 0xde55, 0x0, 0x0);
        gbc.writeMem(0xdf1f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xef5c);
        EXPECT(gbc.pc(), 0xdf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf1f), 0xcb);
        EXPECT(gbc.readMem(0xdf20), 0x60);
        // CB 60 0343
        gbc.setState(0x758, 0xfb1f, 0xb1b0, 0x45bb, 0x3d6b, 0x890f, 0x0, 0x0);
        gbc.writeMem(0x758, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0344
        gbc.setState(0x5d34, 0xadb, 0x9ad0, 0xfbd, 0x5b2c, 0xad3a, 0x1, 0x1);
        gbc.writeMem(0x5d34, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xadb);
        EXPECT(gbc.pc(), 0x5d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0345
        gbc.setState(0x8dc, 0x37eb, 0xfdb0, 0xdf9b, 0x213b, 0x5493, 0x1, 0x1);
        gbc.writeMem(0x8dc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x37eb);
        EXPECT(gbc.pc(), 0x8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0346
        gbc.setState(0x429a, 0x90c5, 0x9200, 0xe6ce, 0xc729, 0xe17e, 0x1, 0x0);
        gbc.writeMem(0x429a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x90c5);
        EXPECT(gbc.pc(), 0x429c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0347
        gbc.setState(0xd9bf, 0xb45e, 0x3980, 0xd7bd, 0xebc9, 0xecd9, 0x0, 0x1);
        gbc.writeMem(0xd9bf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0xd9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bf), 0xcb);
        EXPECT(gbc.readMem(0xd9c0), 0x60);
        // CB 60 0348
        gbc.setState(0x96eb, 0xc492, 0x86d0, 0xcdb, 0x7eb9, 0x4c54, 0x1, 0x1);
        gbc.writeMem(0x96eb, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc492);
        EXPECT(gbc.pc(), 0x96ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96eb), 0xcb);
        EXPECT(gbc.readMem(0x96ec), 0x60);
        // CB 60 0349
        gbc.setState(0x245, 0x1e4d, 0x35f0, 0xabe7, 0xdd64, 0xbea1, 0x1, 0x1);
        gbc.writeMem(0x245, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1e4d);
        EXPECT(gbc.pc(), 0x247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 034A
        gbc.setState(0xe166, 0x160d, 0x4e90, 0xfe15, 0xd809, 0x5eeb, 0x0, 0x0);
        gbc.writeMem(0xe166, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x160d);
        EXPECT(gbc.pc(), 0xe168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe166), 0xcb);
        EXPECT(gbc.readMem(0xe167), 0x60);
        // CB 60 034B
        gbc.setState(0xd45c, 0xc7b3, 0xcc50, 0xeafa, 0x38a, 0x39c6, 0x0, 0x1);
        gbc.writeMem(0xd45c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc7b3);
        EXPECT(gbc.pc(), 0xd45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45c), 0xcb);
        EXPECT(gbc.readMem(0xd45d), 0x60);
        // CB 60 034C
        gbc.setState(0xee3c, 0x94c2, 0x1940, 0x6756, 0x9f11, 0xf440, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x94c2);
        EXPECT(gbc.pc(), 0xee3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3c), 0xcb);
        EXPECT(gbc.readMem(0xee3d), 0x60);
        // CB 60 034D
        gbc.setState(0x20af, 0x544a, 0xf390, 0xa97a, 0xfbce, 0xb363, 0x0, 0x0);
        gbc.writeMem(0x20af, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x544a);
        EXPECT(gbc.pc(), 0x20b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 034E
        gbc.setState(0x9f4a, 0xb97b, 0x2470, 0xc8bd, 0x7326, 0x2eb1, 0x1, 0x0);
        gbc.writeMem(0x9f4a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb97b);
        EXPECT(gbc.pc(), 0x9f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4a), 0xcb);
        EXPECT(gbc.readMem(0x9f4b), 0x60);
        // CB 60 034F
        gbc.setState(0x204e, 0xfd35, 0x8c40, 0x927, 0xdd65, 0x137, 0x0, 0x1);
        gbc.writeMem(0x204e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfd35);
        EXPECT(gbc.pc(), 0x2050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0350
        gbc.setState(0x5f9f, 0x95e0, 0xa380, 0xce37, 0xcda8, 0x8911, 0x0, 0x0);
        gbc.writeMem(0x5f9f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x95e0);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0351
        gbc.setState(0xbe49, 0x1103, 0x79b0, 0x26bc, 0x2cc7, 0x4476, 0x0, 0x0);
        gbc.writeMem(0xbe49, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1103);
        EXPECT(gbc.pc(), 0xbe4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe49), 0xcb);
        EXPECT(gbc.readMem(0xbe4a), 0x60);
        // CB 60 0352
        gbc.setState(0x74d1, 0xc04e, 0xb160, 0xb124, 0xb2cf, 0xb79f, 0x0, 0x0);
        gbc.writeMem(0x74d1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc04e);
        EXPECT(gbc.pc(), 0x74d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0353
        gbc.setState(0x2692, 0x236f, 0x7bd0, 0x9434, 0x3407, 0x72b3, 0x0, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0x2694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0355
        gbc.setState(0xe578, 0x262f, 0x7a0, 0xc19c, 0x9bc1, 0xd93d, 0x0, 0x0);
        gbc.writeMem(0xe578, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x262f);
        EXPECT(gbc.pc(), 0xe57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe578), 0xcb);
        EXPECT(gbc.readMem(0xe579), 0x60);
        // CB 60 0356
        gbc.setState(0x99ff, 0x2172, 0xd060, 0xc2ca, 0x248e, 0x6897, 0x0, 0x1);
        gbc.writeMem(0x99ff, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2172);
        EXPECT(gbc.pc(), 0x9a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ff), 0xcb);
        EXPECT(gbc.readMem(0x9a00), 0x60);
        // CB 60 0357
        gbc.setState(0xd4ed, 0x25f, 0x6d60, 0x53a0, 0x5344, 0x4505, 0x1, 0x1);
        gbc.writeMem(0xd4ed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x25f);
        EXPECT(gbc.pc(), 0xd4ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ed), 0xcb);
        EXPECT(gbc.readMem(0xd4ee), 0x60);
        // CB 60 0358
        gbc.setState(0x8979, 0xf5b0, 0xa0e0, 0xb412, 0x1b90, 0x1e11, 0x0, 0x0);
        gbc.writeMem(0x8979, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf5b0);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8979), 0xcb);
        EXPECT(gbc.readMem(0x897a), 0x60);
        // CB 60 0359
        gbc.setState(0x6763, 0x888e, 0xd770, 0x6e0a, 0xcfd5, 0x3529, 0x0, 0x1);
        gbc.writeMem(0x6763, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x888e);
        EXPECT(gbc.pc(), 0x6765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 035A
        gbc.setState(0x6bbc, 0x25a0, 0xf720, 0xc5c2, 0x6ac1, 0x4634, 0x1, 0x0);
        gbc.writeMem(0x6bbc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 035B
        gbc.setState(0x96e0, 0xa0a1, 0xfc20, 0x971f, 0xb299, 0xb21e, 0x0, 0x0);
        gbc.writeMem(0x96e0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0x96e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e0), 0xcb);
        EXPECT(gbc.readMem(0x96e1), 0x60);
        // CB 60 035C
        gbc.setState(0xa0fd, 0x689c, 0xe240, 0x6bc7, 0xc3c, 0xa4fa, 0x0, 0x1);
        gbc.writeMem(0xa0fd, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x689c);
        EXPECT(gbc.pc(), 0xa0ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fd), 0xcb);
        EXPECT(gbc.readMem(0xa0fe), 0x60);
        // CB 60 035E
        gbc.setState(0x80c, 0x2f0d, 0x7aa0, 0x3cb9, 0xea34, 0x903e, 0x0, 0x0);
        gbc.writeMem(0x80c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2f0d);
        EXPECT(gbc.pc(), 0x80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 035F
        gbc.setState(0x263a, 0x1f1d, 0xc100, 0x87b8, 0xb457, 0xc4de, 0x0, 0x1);
        gbc.writeMem(0x263a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1f1d);
        EXPECT(gbc.pc(), 0x263c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0361
        gbc.setState(0xd1d8, 0xf899, 0x5650, 0x6506, 0x3f97, 0x5843, 0x0, 0x0);
        gbc.writeMem(0xd1d8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf899);
        EXPECT(gbc.pc(), 0xd1da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d8), 0xcb);
        EXPECT(gbc.readMem(0xd1d9), 0x60);
        // CB 60 0362
        gbc.setState(0x6237, 0x8441, 0x2e40, 0x2c88, 0xdbdd, 0x79e9, 0x0, 0x0);
        gbc.writeMem(0x6237, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8441);
        EXPECT(gbc.pc(), 0x6239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0363
        gbc.setState(0x9c7d, 0xc82a, 0x34c0, 0x5681, 0x5cd8, 0x1c00, 0x0, 0x0);
        gbc.writeMem(0x9c7d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc82a);
        EXPECT(gbc.pc(), 0x9c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7d), 0xcb);
        EXPECT(gbc.readMem(0x9c7e), 0x60);
        // CB 60 0364
        gbc.setState(0xecea, 0xefe5, 0x4260, 0x5c8b, 0x10de, 0xc484, 0x0, 0x1);
        gbc.writeMem(0xecea, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xefe5);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0x60);
        // CB 60 0365
        gbc.setState(0xdcd1, 0xe61e, 0x2990, 0x3bd0, 0x48db, 0xd501, 0x1, 0x0);
        gbc.writeMem(0xdcd1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0xdcd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd1), 0xcb);
        EXPECT(gbc.readMem(0xdcd2), 0x60);
        // CB 60 0366
        gbc.setState(0x3d2b, 0x539f, 0x5a40, 0xf582, 0x825e, 0x830, 0x0, 0x0);
        gbc.writeMem(0x3d2b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0367
        gbc.setState(0xe1f6, 0x3ebe, 0x3d40, 0x9fd0, 0x66ea, 0xde8, 0x0, 0x1);
        gbc.writeMem(0xe1f6, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3ebe);
        EXPECT(gbc.pc(), 0xe1f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f6), 0xcb);
        EXPECT(gbc.readMem(0xe1f7), 0x60);
        // CB 60 0368
        gbc.setState(0xce1e, 0x6d2c, 0xeab0, 0x23c4, 0xc76, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0xce1e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6d2c);
        EXPECT(gbc.pc(), 0xce20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1e), 0xcb);
        EXPECT(gbc.readMem(0xce1f), 0x60);
        // CB 60 0369
        gbc.setState(0x236f, 0xaccb, 0xfa10, 0x7bf4, 0x4a86, 0x5920, 0x1, 0x1);
        gbc.writeMem(0x236f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaccb);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 036A
        gbc.setState(0xcbdf, 0x789a, 0xbb40, 0xe4b1, 0x7b5e, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0xcbdf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x789a);
        EXPECT(gbc.pc(), 0xcbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbdf), 0xcb);
        EXPECT(gbc.readMem(0xcbe0), 0x60);
        // CB 60 036B
        gbc.setState(0xca79, 0x91de, 0x1980, 0x4d32, 0xac5, 0x291f, 0x0, 0x1);
        gbc.writeMem(0xca79, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x91de);
        EXPECT(gbc.pc(), 0xca7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca79), 0xcb);
        EXPECT(gbc.readMem(0xca7a), 0x60);
        // CB 60 036C
        gbc.setState(0x2d67, 0x7877, 0xc1a0, 0xe8f2, 0xad5e, 0x657b, 0x0, 0x0);
        gbc.writeMem(0x2d67, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7877);
        EXPECT(gbc.pc(), 0x2d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 036D
        gbc.setState(0xbbbf, 0xf72e, 0xf0b0, 0x3dfa, 0x93bb, 0xd34a, 0x0, 0x1);
        gbc.writeMem(0xbbbf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf72e);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbf), 0xcb);
        EXPECT(gbc.readMem(0xbbc0), 0x60);
        // CB 60 036E
        gbc.setState(0x2ccc, 0x281d, 0x3f00, 0x39f6, 0x9ef5, 0xacbf, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x281d);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 036F
        gbc.setState(0xd25d, 0x8b7f, 0x9e0, 0xd3de, 0x246b, 0xa20d, 0x0, 0x1);
        gbc.writeMem(0xd25d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8b7f);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0x60);
        // CB 60 0370
        gbc.setState(0x4cfa, 0x7d5e, 0x2880, 0x8680, 0x9454, 0x87a7, 0x0, 0x1);
        gbc.writeMem(0x4cfa, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7d5e);
        EXPECT(gbc.pc(), 0x4cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0371
        gbc.setState(0x8033, 0xaa83, 0x2140, 0x3d93, 0x2f68, 0x219, 0x0, 0x0);
        gbc.writeMem(0x8033, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xaa83);
        EXPECT(gbc.pc(), 0x8035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8033), 0xcb);
        EXPECT(gbc.readMem(0x8034), 0x60);
        // CB 60 0372
        gbc.setState(0x6c3e, 0xcc9d, 0x4b20, 0xac8d, 0xc55a, 0x9a95, 0x1, 0x1);
        gbc.writeMem(0x6c3e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xcc9d);
        EXPECT(gbc.pc(), 0x6c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0373
        gbc.setState(0x436c, 0x10c1, 0x1460, 0x3b11, 0x1143, 0xf0d3, 0x0, 0x0);
        gbc.writeMem(0x436c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x10c1);
        EXPECT(gbc.pc(), 0x436e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0374
        gbc.setState(0xdf7c, 0x3b56, 0xf060, 0x7d89, 0xed2e, 0xcb4f, 0x1, 0x0);
        gbc.writeMem(0xdf7c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3b56);
        EXPECT(gbc.pc(), 0xdf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7c), 0xcb);
        EXPECT(gbc.readMem(0xdf7d), 0x60);
        // CB 60 0375
        gbc.setState(0x7268, 0x5f0f, 0x1840, 0x7f40, 0xb639, 0x5853, 0x0, 0x1);
        gbc.writeMem(0x7268, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5f0f);
        EXPECT(gbc.pc(), 0x726a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0376
        gbc.setState(0x107c, 0xb416, 0x6c00, 0x2675, 0x2ff4, 0x45fd, 0x0, 0x1);
        gbc.writeMem(0x107c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb416);
        EXPECT(gbc.pc(), 0x107e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0377
        gbc.setState(0xa942, 0x1d0, 0x9580, 0x8beb, 0x295a, 0x1b8, 0x0, 0x0);
        gbc.writeMem(0xa942, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1d0);
        EXPECT(gbc.pc(), 0xa944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa942), 0xcb);
        EXPECT(gbc.readMem(0xa943), 0x60);
        // CB 60 0378
        gbc.setState(0xc66, 0xb0dc, 0xcf30, 0x6b7d, 0x71dd, 0xeabf, 0x0, 0x1);
        gbc.writeMem(0xc66, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0xc68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0379
        gbc.setState(0x33, 0x80c6, 0x6860, 0xc08c, 0xbde8, 0xc6bc, 0x1, 0x1);
        gbc.writeMem(0x33, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x80c6);
        EXPECT(gbc.pc(), 0x35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 037A
        gbc.setState(0x4219, 0x8881, 0xc2d0, 0xe023, 0xd1a3, 0xf14b, 0x1, 0x0);
        gbc.writeMem(0x4219, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8881);
        EXPECT(gbc.pc(), 0x421b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 037B
        gbc.setState(0x15a3, 0xc01b, 0x5270, 0x58f0, 0x81a2, 0x7baa, 0x0, 0x1);
        gbc.writeMem(0x15a3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc01b);
        EXPECT(gbc.pc(), 0x15a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 037C
        gbc.setState(0x89de, 0x77bc, 0xfe20, 0xe827, 0xb9aa, 0x9b68, 0x1, 0x0);
        gbc.writeMem(0x89de, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x77bc);
        EXPECT(gbc.pc(), 0x89e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89de), 0xcb);
        EXPECT(gbc.readMem(0x89df), 0x60);
        // CB 60 037D
        gbc.setState(0xc3e2, 0xbe8d, 0xb790, 0x4bb, 0x336f, 0xf12d, 0x0, 0x0);
        gbc.writeMem(0xc3e2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbe8d);
        EXPECT(gbc.pc(), 0xc3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e2), 0xcb);
        EXPECT(gbc.readMem(0xc3e3), 0x60);
        // CB 60 037E
        gbc.setState(0x2020, 0x7c98, 0xf0f0, 0x794a, 0xfe9b, 0xe101, 0x0, 0x0);
        gbc.writeMem(0x2020, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0x2022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 037F
        gbc.setState(0x4d4e, 0xee2, 0x69e0, 0xa009, 0xf3e1, 0x8f62, 0x0, 0x0);
        gbc.writeMem(0x4d4e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xee2);
        EXPECT(gbc.pc(), 0x4d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0380
        gbc.setState(0x65ff, 0x24f5, 0x69c0, 0x3725, 0xd575, 0x3bfb, 0x0, 0x0);
        gbc.writeMem(0x65ff, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x24f5);
        EXPECT(gbc.pc(), 0x6601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0381
        gbc.setState(0x697f, 0xc5b4, 0x71b0, 0xd997, 0x1aaf, 0x8637, 0x0, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc5b4);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0382
        gbc.setState(0x1151, 0xe200, 0x6930, 0xa1fd, 0x265d, 0xae18, 0x0, 0x1);
        gbc.writeMem(0x1151, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe200);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0383
        gbc.setState(0x6cc7, 0xc57f, 0x5320, 0xc8ab, 0xab4c, 0xda98, 0x0, 0x0);
        gbc.writeMem(0x6cc7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc57f);
        EXPECT(gbc.pc(), 0x6cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0384
        gbc.setState(0xd3d0, 0xa78d, 0xa030, 0xc17a, 0x7795, 0x30b7, 0x1, 0x1);
        gbc.writeMem(0xd3d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa78d);
        EXPECT(gbc.pc(), 0xd3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d0), 0xcb);
        EXPECT(gbc.readMem(0xd3d1), 0x60);
        // CB 60 0385
        gbc.setState(0x9c86, 0xd757, 0xcd30, 0x9f47, 0x7a34, 0x5019, 0x0, 0x0);
        gbc.writeMem(0x9c86, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd757);
        EXPECT(gbc.pc(), 0x9c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c86), 0xcb);
        EXPECT(gbc.readMem(0x9c87), 0x60);
        // CB 60 0386
        gbc.setState(0xea6e, 0xbde2, 0x9e50, 0x3c74, 0x9f09, 0x2277, 0x1, 0x0);
        gbc.writeMem(0xea6e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbde2);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6e), 0xcb);
        EXPECT(gbc.readMem(0xea6f), 0x60);
        // CB 60 0387
        gbc.setState(0xb7e7, 0xbb96, 0x43f0, 0xb068, 0x1b54, 0xba91, 0x0, 0x0);
        gbc.writeMem(0xb7e7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0xb7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e7), 0xcb);
        EXPECT(gbc.readMem(0xb7e8), 0x60);
        // CB 60 0388
        gbc.setState(0x587f, 0xdad2, 0xe900, 0x69c2, 0x2727, 0xe928, 0x0, 0x1);
        gbc.writeMem(0x587f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdad2);
        EXPECT(gbc.pc(), 0x5881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0389
        gbc.setState(0x40d3, 0xe29c, 0x5680, 0x7c33, 0x3ef4, 0x3e3e, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe29c);
        EXPECT(gbc.pc(), 0x40d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 038A
        gbc.setState(0x1da3, 0x8275, 0x86d0, 0xfdb5, 0x5d6c, 0xb02e, 0x1, 0x1);
        gbc.writeMem(0x1da3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8275);
        EXPECT(gbc.pc(), 0x1da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 038B
        gbc.setState(0xcef3, 0xaaf, 0xb980, 0x40d2, 0x6569, 0xf6a3, 0x0, 0x0);
        gbc.writeMem(0xcef3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaaf);
        EXPECT(gbc.pc(), 0xcef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef3), 0xcb);
        EXPECT(gbc.readMem(0xcef4), 0x60);
        // CB 60 038C
        gbc.setState(0x2aae, 0x71b1, 0x2570, 0x6c32, 0xb07f, 0x3753, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x71b1);
        EXPECT(gbc.pc(), 0x2ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 038D
        gbc.setState(0x3e77, 0xa88a, 0xd860, 0x3a6e, 0x3409, 0x14e2, 0x0, 0x0);
        gbc.writeMem(0x3e77, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa88a);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 038E
        gbc.setState(0xd750, 0x7888, 0xc620, 0x40c6, 0x205e, 0x5b1, 0x1, 0x0);
        gbc.writeMem(0xd750, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7888);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd750), 0xcb);
        EXPECT(gbc.readMem(0xd751), 0x60);
        // CB 60 038F
        gbc.setState(0x2767, 0x1395, 0x9200, 0x2748, 0x85a6, 0x8615, 0x0, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1395);
        EXPECT(gbc.pc(), 0x2769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0390
        gbc.setState(0x8c39, 0x4f00, 0xc100, 0x71eb, 0x5b2c, 0xae7c, 0x0, 0x1);
        gbc.writeMem(0x8c39, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4f00);
        EXPECT(gbc.pc(), 0x8c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c39), 0xcb);
        EXPECT(gbc.readMem(0x8c3a), 0x60);
        // CB 60 0391
        gbc.setState(0x8509, 0x31d, 0x2280, 0x375d, 0xf974, 0x6275, 0x0, 0x0);
        gbc.writeMem(0x8509, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x31d);
        EXPECT(gbc.pc(), 0x850b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8509), 0xcb);
        EXPECT(gbc.readMem(0x850a), 0x60);
        // CB 60 0392
        gbc.setState(0xdcb7, 0xced9, 0x7f10, 0x4c98, 0x9b5, 0x1eed, 0x0, 0x0);
        gbc.writeMem(0xdcb7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xced9);
        EXPECT(gbc.pc(), 0xdcb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb7), 0xcb);
        EXPECT(gbc.readMem(0xdcb8), 0x60);
        // CB 60 0393
        gbc.setState(0x18db, 0x8715, 0x5bd0, 0x4552, 0x16d9, 0x6ce2, 0x0, 0x0);
        gbc.writeMem(0x18db, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0x18dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0394
        gbc.setState(0x5dc, 0x82b9, 0xbd00, 0x65a0, 0x5c24, 0x1e2b, 0x1, 0x1);
        gbc.writeMem(0x5dc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x82b9);
        EXPECT(gbc.pc(), 0x5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0395
        gbc.setState(0x372f, 0xd289, 0x7ac0, 0x9a11, 0x1309, 0x6390, 0x0, 0x1);
        gbc.writeMem(0x372f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd289);
        EXPECT(gbc.pc(), 0x3731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0396
        gbc.setState(0x58db, 0xb877, 0x1e60, 0x97bf, 0xe766, 0x67c6, 0x0, 0x1);
        gbc.writeMem(0x58db, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb877);
        EXPECT(gbc.pc(), 0x58dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 0397
        gbc.setState(0x9496, 0x228a, 0xb330, 0x3975, 0x2daf, 0xdf9c, 0x1, 0x0);
        gbc.writeMem(0x9496, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x228a);
        EXPECT(gbc.pc(), 0x9498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9496), 0xcb);
        EXPECT(gbc.readMem(0x9497), 0x60);
        // CB 60 0398
        gbc.setState(0x1a, 0x2ee0, 0xd4f0, 0x577c, 0xb44d, 0x9a9f, 0x0, 0x1);
        gbc.writeMem(0x1a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2ee0);
        EXPECT(gbc.pc(), 0x1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 0399
        gbc.setState(0xd4cc, 0xeca9, 0x2280, 0x96e2, 0x3d77, 0x56d7, 0x0, 0x0);
        gbc.writeMem(0xd4cc, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xeca9);
        EXPECT(gbc.pc(), 0xd4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cc), 0xcb);
        EXPECT(gbc.readMem(0xd4cd), 0x60);
        // CB 60 039A
        gbc.setState(0x8b25, 0xe958, 0x2200, 0x76fe, 0x9971, 0xf13f, 0x1, 0x0);
        gbc.writeMem(0x8b25, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe958);
        EXPECT(gbc.pc(), 0x8b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b25), 0xcb);
        EXPECT(gbc.readMem(0x8b26), 0x60);
        // CB 60 039B
        gbc.setState(0x74d1, 0xf39a, 0x2580, 0xd7ad, 0xdffa, 0x50fe, 0x0, 0x1);
        gbc.writeMem(0x74d1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf39a);
        EXPECT(gbc.pc(), 0x74d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 039C
        gbc.setState(0xcc64, 0x1a2e, 0x5c20, 0xf0ba, 0xeae2, 0x39d, 0x0, 0x1);
        gbc.writeMem(0xcc64, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1a2e);
        EXPECT(gbc.pc(), 0xcc66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc64), 0xcb);
        EXPECT(gbc.readMem(0xcc65), 0x60);
        // CB 60 039D
        gbc.setState(0xdac4, 0x93e6, 0x9c20, 0x1d80, 0x5619, 0x158e, 0x1, 0x1);
        gbc.writeMem(0xdac4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0xdac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac4), 0xcb);
        EXPECT(gbc.readMem(0xdac5), 0x60);
        // CB 60 039E
        gbc.setState(0xef08, 0x6b84, 0xbaf0, 0xced, 0x77c, 0x7fe9, 0x0, 0x0);
        gbc.writeMem(0xef08, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6b84);
        EXPECT(gbc.pc(), 0xef0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef08), 0xcb);
        EXPECT(gbc.readMem(0xef09), 0x60);
        // CB 60 039F
        gbc.setState(0x4418, 0x42a1, 0x4450, 0xfed0, 0xc4d2, 0x724f, 0x0, 0x0);
        gbc.writeMem(0x4418, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x42a1);
        EXPECT(gbc.pc(), 0x441a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03A0
        gbc.setState(0x4798, 0xf857, 0x5440, 0xf077, 0xddae, 0x51da, 0x0, 0x1);
        gbc.writeMem(0x4798, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf857);
        EXPECT(gbc.pc(), 0x479a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03A1
        gbc.setState(0x9b08, 0x57dc, 0xefd0, 0x84aa, 0x397f, 0xe852, 0x1, 0x0);
        gbc.writeMem(0x9b08, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x57dc);
        EXPECT(gbc.pc(), 0x9b0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b08), 0xcb);
        EXPECT(gbc.readMem(0x9b09), 0x60);
        // CB 60 03A2
        gbc.setState(0x94df, 0x4eff, 0x23f0, 0x3195, 0x7ac1, 0x2d6e, 0x0, 0x1);
        gbc.writeMem(0x94df, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4eff);
        EXPECT(gbc.pc(), 0x94e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0xcb);
        EXPECT(gbc.readMem(0x94e0), 0x60);
        // CB 60 03A3
        gbc.setState(0x5c9d, 0x7779, 0xe3d0, 0x2b2a, 0xf77, 0xc63e, 0x0, 0x1);
        gbc.writeMem(0x5c9d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7779);
        EXPECT(gbc.pc(), 0x5c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03A4
        gbc.setState(0xb35b, 0x96c2, 0x4450, 0xd3df, 0xbe34, 0x835c, 0x1, 0x1);
        gbc.writeMem(0xb35b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x96c2);
        EXPECT(gbc.pc(), 0xb35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35b), 0xcb);
        EXPECT(gbc.readMem(0xb35c), 0x60);
        // CB 60 03A5
        gbc.setState(0x545f, 0xf50b, 0x55e0, 0x1fdc, 0x17cf, 0x2b32, 0x1, 0x1);
        gbc.writeMem(0x545f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0x5461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03A6
        gbc.setState(0xb51e, 0xf2fe, 0x8e60, 0x749c, 0x624d, 0xf3ad, 0x0, 0x1);
        gbc.writeMem(0xb51e, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf2fe);
        EXPECT(gbc.pc(), 0xb520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb51e), 0xcb);
        EXPECT(gbc.readMem(0xb51f), 0x60);
        // CB 60 03A7
        gbc.setState(0xc4b9, 0xf74d, 0x1f20, 0xc278, 0x74db, 0xb6c, 0x1, 0x0);
        gbc.writeMem(0xc4b9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf74d);
        EXPECT(gbc.pc(), 0xc4bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b9), 0xcb);
        EXPECT(gbc.readMem(0xc4ba), 0x60);
        // CB 60 03A8
        gbc.setState(0xc2ed, 0x2d23, 0xeab0, 0xb1da, 0x78ef, 0xc889, 0x0, 0x1);
        gbc.writeMem(0xc2ed, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2d23);
        EXPECT(gbc.pc(), 0xc2ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ed), 0xcb);
        EXPECT(gbc.readMem(0xc2ee), 0x60);
        // CB 60 03A9
        gbc.setState(0xec34, 0xb299, 0x5a50, 0xc901, 0xabf8, 0x3d74, 0x0, 0x1);
        gbc.writeMem(0xec34, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb299);
        EXPECT(gbc.pc(), 0xec36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec34), 0xcb);
        EXPECT(gbc.readMem(0xec35), 0x60);
        // CB 60 03AA
        gbc.setState(0xc327, 0xc98, 0x2a80, 0x1bba, 0x8c22, 0x2978, 0x0, 0x0);
        gbc.writeMem(0xc327, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc98);
        EXPECT(gbc.pc(), 0xc329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc327), 0xcb);
        EXPECT(gbc.readMem(0xc328), 0x60);
        // CB 60 03AB
        gbc.setState(0xcd66, 0x8413, 0x1d50, 0x900, 0x33ca, 0x1445, 0x0, 0x1);
        gbc.writeMem(0xcd66, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8413);
        EXPECT(gbc.pc(), 0xcd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd66), 0xcb);
        EXPECT(gbc.readMem(0xcd67), 0x60);
        // CB 60 03AC
        gbc.setState(0xd67b, 0x45a0, 0xa6d0, 0x8054, 0xfff2, 0x8816, 0x0, 0x0);
        gbc.writeMem(0xd67b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x45a0);
        EXPECT(gbc.pc(), 0xd67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67b), 0xcb);
        EXPECT(gbc.readMem(0xd67c), 0x60);
        // CB 60 03AD
        gbc.setState(0xd6ef, 0x8d55, 0x9180, 0x39b0, 0x248f, 0x2463, 0x1, 0x0);
        gbc.writeMem(0xd6ef, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8d55);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x60);
        // CB 60 03AE
        gbc.setState(0x44be, 0xc4b7, 0x3f60, 0xfe49, 0xd5c3, 0xe7, 0x1, 0x0);
        gbc.writeMem(0x44be, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc4b7);
        EXPECT(gbc.pc(), 0x44c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03AF
        gbc.setState(0x7779, 0xabfb, 0x3b0, 0x1c82, 0x8b4b, 0x2b1f, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xabfb);
        EXPECT(gbc.pc(), 0x777b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03B0
        gbc.setState(0x1230, 0x27b1, 0xf120, 0xc30a, 0x6fd4, 0xdcbf, 0x1, 0x1);
        gbc.writeMem(0x1230, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x27b1);
        EXPECT(gbc.pc(), 0x1232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03B1
        gbc.setState(0x3f0c, 0xf01e, 0xc70, 0x4223, 0xd9f3, 0x5ed, 0x1, 0x0);
        gbc.writeMem(0x3f0c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf01e);
        EXPECT(gbc.pc(), 0x3f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03B2
        gbc.setState(0x5b2, 0xa43e, 0xd510, 0x6d4c, 0x40dc, 0x9c85, 0x1, 0x1);
        gbc.writeMem(0x5b2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa43e);
        EXPECT(gbc.pc(), 0x5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03B3
        gbc.setState(0xca1f, 0xffca, 0x9760, 0xd9b1, 0xe147, 0x423e, 0x0, 0x1);
        gbc.writeMem(0xca1f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xffca);
        EXPECT(gbc.pc(), 0xca21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1f), 0xcb);
        EXPECT(gbc.readMem(0xca20), 0x60);
        // CB 60 03B4
        gbc.setState(0xd729, 0xf8ad, 0x5a40, 0x6e39, 0x5c8e, 0x3693, 0x1, 0x0);
        gbc.writeMem(0xd729, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf8ad);
        EXPECT(gbc.pc(), 0xd72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd729), 0xcb);
        EXPECT(gbc.readMem(0xd72a), 0x60);
        // CB 60 03B5
        gbc.setState(0x16d9, 0xb9f0, 0xa320, 0x4653, 0x674a, 0xb38f, 0x1, 0x1);
        gbc.writeMem(0x16d9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb9f0);
        EXPECT(gbc.pc(), 0x16db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03B6
        gbc.setState(0xfc2, 0x241, 0x9c20, 0x73ba, 0xb3b1, 0x500f, 0x0, 0x1);
        gbc.writeMem(0xfc2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x241);
        EXPECT(gbc.pc(), 0xfc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03B7
        gbc.setState(0x3fb7, 0x758d, 0x7970, 0x3920, 0xf75d, 0xf401, 0x1, 0x0);
        gbc.writeMem(0x3fb7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x758d);
        EXPECT(gbc.pc(), 0x3fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03B8
        gbc.setState(0x9f68, 0x4f55, 0xafd0, 0xa6a7, 0x3e03, 0x4e9b, 0x1, 0x0);
        gbc.writeMem(0x9f68, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4f55);
        EXPECT(gbc.pc(), 0x9f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f68), 0xcb);
        EXPECT(gbc.readMem(0x9f69), 0x60);
        // CB 60 03B9
        gbc.setState(0x75d2, 0xea74, 0xdbc0, 0x8393, 0x1d1e, 0x3672, 0x1, 0x0);
        gbc.writeMem(0x75d2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xea74);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03BA
        gbc.setState(0x3cbf, 0x498e, 0xfa20, 0xa6ca, 0xc0e7, 0x884f, 0x0, 0x0);
        gbc.writeMem(0x3cbf, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x498e);
        EXPECT(gbc.pc(), 0x3cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03BC
        gbc.setState(0x3218, 0x606e, 0x6030, 0x41cb, 0xf52c, 0x31c4, 0x0, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x606e);
        EXPECT(gbc.pc(), 0x321a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03BD
        gbc.setState(0x70e4, 0x97e2, 0x2620, 0xa4ef, 0xc6b2, 0x1c7e, 0x1, 0x0);
        gbc.writeMem(0x70e4, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x97e2);
        EXPECT(gbc.pc(), 0x70e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03BE
        gbc.setState(0xa8f3, 0x5dba, 0x45c0, 0x1951, 0x6b, 0xe4f1, 0x0, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f3), 0xcb);
        EXPECT(gbc.readMem(0xa8f4), 0x60);
        // CB 60 03BF
        gbc.setState(0x2719, 0x3391, 0x83a0, 0x7a84, 0xd322, 0x7439, 0x1, 0x1);
        gbc.writeMem(0x2719, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3391);
        EXPECT(gbc.pc(), 0x271b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03C0
        gbc.setState(0x4a11, 0x6d3f, 0x82d0, 0xfe2c, 0x420b, 0xa71f, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6d3f);
        EXPECT(gbc.pc(), 0x4a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03C1
        gbc.setState(0x8cda, 0x2cd4, 0xf5d0, 0xa1a5, 0x5fed, 0x37c4, 0x0, 0x1);
        gbc.writeMem(0x8cda, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2cd4);
        EXPECT(gbc.pc(), 0x8cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cda), 0xcb);
        EXPECT(gbc.readMem(0x8cdb), 0x60);
        // CB 60 03C2
        gbc.setState(0x9474, 0x605d, 0xe600, 0x9c97, 0xa23d, 0xeeaa, 0x0, 0x1);
        gbc.writeMem(0x9474, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0x9476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9474), 0xcb);
        EXPECT(gbc.readMem(0x9475), 0x60);
        // CB 60 03C3
        gbc.setState(0x4a77, 0x2928, 0x2240, 0x4e1c, 0xcec9, 0x75ec, 0x0, 0x1);
        gbc.writeMem(0x4a77, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2928);
        EXPECT(gbc.pc(), 0x4a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03C4
        gbc.setState(0x81ee, 0xbbeb, 0x8840, 0x803a, 0x76d9, 0x8124, 0x1, 0x0);
        gbc.writeMem(0x81ee, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbbeb);
        EXPECT(gbc.pc(), 0x81f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ee), 0xcb);
        EXPECT(gbc.readMem(0x81ef), 0x60);
        // CB 60 03C5
        gbc.setState(0x1519, 0x9df9, 0x41f0, 0x93a0, 0x40d1, 0xa9bf, 0x1, 0x1);
        gbc.writeMem(0x1519, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9df9);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03C6
        gbc.setState(0x67c, 0x95e4, 0xdea0, 0xff41, 0xeb49, 0x4aec, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x95e4);
        EXPECT(gbc.pc(), 0x67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03C7
        gbc.setState(0xaed7, 0xfa36, 0x61f0, 0xb359, 0x878c, 0xb51c, 0x0, 0x1);
        gbc.writeMem(0xaed7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfa36);
        EXPECT(gbc.pc(), 0xaed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed7), 0xcb);
        EXPECT(gbc.readMem(0xaed8), 0x60);
        // CB 60 03C8
        gbc.setState(0x13df, 0x4f14, 0x53d0, 0x2def, 0xffd1, 0x14e, 0x0, 0x0);
        gbc.writeMem(0x13df, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4f14);
        EXPECT(gbc.pc(), 0x13e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03C9
        gbc.setState(0xb7f2, 0xa00, 0x3880, 0xeace, 0xb240, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0xb7f2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa00);
        EXPECT(gbc.pc(), 0xb7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f2), 0xcb);
        EXPECT(gbc.readMem(0xb7f3), 0x60);
        // CB 60 03CA
        gbc.setState(0x436b, 0x5932, 0xe3f0, 0xb62a, 0x4b22, 0x361f, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5932);
        EXPECT(gbc.pc(), 0x436d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03CB
        gbc.setState(0x394d, 0xa64b, 0x1470, 0xf32f, 0xeaf0, 0xc184, 0x0, 0x1);
        gbc.writeMem(0x394d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa64b);
        EXPECT(gbc.pc(), 0x394f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03CD
        gbc.setState(0x5fe7, 0x5312, 0x5940, 0xfa6f, 0xd9ef, 0x17d7, 0x0, 0x0);
        gbc.writeMem(0x5fe7, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5312);
        EXPECT(gbc.pc(), 0x5fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03CE
        gbc.setState(0x5651, 0x2fa0, 0x5d10, 0xdbd3, 0x6c97, 0xc9d4, 0x1, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2fa0);
        EXPECT(gbc.pc(), 0x5653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03CF
        gbc.setState(0xf4f, 0x5fb4, 0xdd10, 0xdb9c, 0x324d, 0x680, 0x1, 0x0);
        gbc.writeMem(0xf4f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5fb4);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03D0
        gbc.setState(0xb22d, 0xec93, 0x7fb0, 0x6b1c, 0xfc42, 0xb5b0, 0x1, 0x0);
        gbc.writeMem(0xb22d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xec93);
        EXPECT(gbc.pc(), 0xb22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb22d), 0xcb);
        EXPECT(gbc.readMem(0xb22e), 0x60);
        // CB 60 03D1
        gbc.setState(0x78e2, 0x89c1, 0x7810, 0xaa9d, 0x8fdc, 0xc710, 0x1, 0x1);
        gbc.writeMem(0x78e2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0x78e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03D3
        gbc.setState(0x44f1, 0xfb4d, 0x6a00, 0xcf5f, 0x372b, 0xf111, 0x1, 0x0);
        gbc.writeMem(0x44f1, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfb4d);
        EXPECT(gbc.pc(), 0x44f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03D4
        gbc.setState(0x2649, 0x7970, 0xaa10, 0x7f3b, 0x6cb6, 0x983d, 0x1, 0x1);
        gbc.writeMem(0x2649, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7970);
        EXPECT(gbc.pc(), 0x264b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03D5
        gbc.setState(0x1e28, 0xc1d, 0x4040, 0x150a, 0x4dd0, 0xe938, 0x1, 0x0);
        gbc.writeMem(0x1e28, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc1d);
        EXPECT(gbc.pc(), 0x1e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03D6
        gbc.setState(0xb77a, 0x8cb3, 0xddd0, 0xb784, 0x7f18, 0x20a5, 0x0, 0x0);
        gbc.writeMem(0xb77a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8cb3);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77a), 0xcb);
        EXPECT(gbc.readMem(0xb77b), 0x60);
        // CB 60 03D7
        gbc.setState(0xaf24, 0xff7b, 0x8740, 0x57f9, 0x67ad, 0xa77f, 0x1, 0x0);
        gbc.writeMem(0xaf24, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xff7b);
        EXPECT(gbc.pc(), 0xaf26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf24), 0xcb);
        EXPECT(gbc.readMem(0xaf25), 0x60);
        // CB 60 03D8
        gbc.setState(0x324, 0x117a, 0x400, 0xcbd, 0x83cd, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x117a);
        EXPECT(gbc.pc(), 0x326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03D9
        gbc.setState(0x76d0, 0x10ff, 0xf120, 0xaaa6, 0xf6a1, 0x1a07, 0x1, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x10ff);
        EXPECT(gbc.pc(), 0x76d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03DA
        gbc.setState(0x5435, 0xf737, 0x7800, 0x2b7b, 0x64b8, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0x5435, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf737);
        EXPECT(gbc.pc(), 0x5437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03DB
        gbc.setState(0x375a, 0xfc3, 0x4500, 0x57, 0xfcdf, 0x5a37, 0x1, 0x0);
        gbc.writeMem(0x375a, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfc3);
        EXPECT(gbc.pc(), 0x375c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03DC
        gbc.setState(0xb59d, 0x97b, 0xddd0, 0xec13, 0x7863, 0x57df, 0x0, 0x0);
        gbc.writeMem(0xb59d, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x97b);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59d), 0xcb);
        EXPECT(gbc.readMem(0xb59e), 0x60);
        // CB 60 03DD
        gbc.setState(0x475f, 0x2f67, 0xd4e0, 0xd6d5, 0x4851, 0xae55, 0x0, 0x0);
        gbc.writeMem(0x475f, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2f67);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03DE
        gbc.setState(0x6601, 0x544e, 0x73b0, 0x8a3c, 0x2a87, 0xaf65, 0x0, 0x1);
        gbc.writeMem(0x6601, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x544e);
        EXPECT(gbc.pc(), 0x6603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03DF
        gbc.setState(0x19ff, 0xc467, 0x31c0, 0xed7b, 0x7780, 0x9b12, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc467);
        EXPECT(gbc.pc(), 0x1a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03E0
        gbc.setState(0xc959, 0x9a57, 0xdfc0, 0xa5bb, 0x291c, 0xb868, 0x0, 0x0);
        gbc.writeMem(0xc959, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9a57);
        EXPECT(gbc.pc(), 0xc95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc959), 0xcb);
        EXPECT(gbc.readMem(0xc95a), 0x60);
        // CB 60 03E1
        gbc.setState(0x41d8, 0xc28f, 0xb8d0, 0x43de, 0xd5b5, 0xc238, 0x0, 0x1);
        gbc.writeMem(0x41d8, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc28f);
        EXPECT(gbc.pc(), 0x41da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03E2
        gbc.setState(0x3ed3, 0xdcf7, 0xae60, 0x21f9, 0xf6e3, 0x4955, 0x0, 0x1);
        gbc.writeMem(0x3ed3, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0x3ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03E3
        gbc.setState(0x7669, 0x2ddf, 0x2c60, 0xbdb2, 0x3c54, 0xea1e, 0x0, 0x0);
        gbc.writeMem(0x7669, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2ddf);
        EXPECT(gbc.pc(), 0x766b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 60 03E4
        gbc.setState(0x623c, 0x3cea, 0x3d0, 0xabc8, 0xb3cf, 0xab80, 0x0, 0x1);
        gbc.writeMem(0x623c, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3cea);
        EXPECT(gbc.pc(), 0x623e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03E5
        gbc.setState(0xe377, 0x18b7, 0x77b0, 0x5f43, 0x8949, 0x3097, 0x1, 0x1);
        gbc.writeMem(0xe377, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0xe379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe377), 0xcb);
        EXPECT(gbc.readMem(0xe378), 0x60);
        // CB 60 03E6
        gbc.setState(0x3ce2, 0x5627, 0x7150, 0xa391, 0x17a6, 0xd5e4, 0x1, 0x1);
        gbc.writeMem(0x3ce2, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5627);
        EXPECT(gbc.pc(), 0x3ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 60 03E7
        gbc.setState(0x36d9, 0x5f67, 0x2d20, 0xf539, 0x60a1, 0x639e, 0x0, 0x0);
        gbc.writeMem(0x36d9, { 0xcb, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5f67);
        EXPECT(gbc.pc(), 0x36db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
