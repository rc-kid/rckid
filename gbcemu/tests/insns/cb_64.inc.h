    TEST(gbcemu, opcode_cb_64) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 64 0000
        gbc.setState(0x343d, 0xa4b1, 0x5a0, 0xc6da, 0x7f02, 0xd105, 0x0, 0x0);
        gbc.writeMem(0x343d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0x343f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0001
        gbc.setState(0x77c7, 0x9977, 0x53f0, 0x5682, 0xb769, 0xe056, 0x0, 0x0);
        gbc.writeMem(0x77c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9977, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0002
        gbc.setState(0x5b4, 0x655, 0x4d0, 0x6532, 0x55ce, 0xf910, 0x0, 0x0);
        gbc.writeMem(0x5b4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x655, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0003
        gbc.setState(0x93a3, 0xab22, 0x1d40, 0x555f, 0xf10d, 0x7876, 0x0, 0x0);
        gbc.writeMem(0x93a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0x93a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a3));
        EXPECT(0x64, gbc.readMem(0x93a4));
        // CB 64 0004
        gbc.setState(0xf9b, 0xa412, 0xabf0, 0x981b, 0x6417, 0x4825, 0x1, 0x1);
        gbc.writeMem(0xf9b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0xf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0005
        gbc.setState(0x8d82, 0xad21, 0x8060, 0x376e, 0x5873, 0xb293, 0x0, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xad21, gbc.sp());
        EXPECT(0x8d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d82));
        EXPECT(0x64, gbc.readMem(0x8d83));
        // CB 64 0006
        gbc.setState(0x3e6b, 0xda65, 0xaf20, 0x1d1e, 0xf2cb, 0xd66f, 0x1, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xda65, gbc.sp());
        EXPECT(0x3e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0007
        gbc.setState(0x722e, 0x7200, 0xbed0, 0xa5de, 0xfb3f, 0x4f23, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7200, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0008
        gbc.setState(0xe894, 0xe6b, 0x5ef0, 0xa72a, 0xea80, 0x571b, 0x0, 0x1);
        gbc.writeMem(0xe894, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe6b, gbc.sp());
        EXPECT(0xe896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe894));
        EXPECT(0x64, gbc.readMem(0xe895));
        // CB 64 0009
        gbc.setState(0xa923, 0x62ef, 0x5210, 0xe63b, 0x1a04, 0x6da6, 0x1, 0x1);
        gbc.writeMem(0xa923, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xa925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa923));
        EXPECT(0x64, gbc.readMem(0xa924));
        // CB 64 000A
        gbc.setState(0x6250, 0x98ee, 0x5ce0, 0xefe7, 0x7f1, 0x741a, 0x0, 0x1);
        gbc.writeMem(0x6250, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x98ee, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 000B
        gbc.setState(0x47d6, 0x781c, 0x440, 0xbcb, 0xcb48, 0xdf83, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x781c, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 000C
        gbc.setState(0x38e0, 0x9ff1, 0xc580, 0x9bdb, 0x49d2, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9ff1, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 000D
        gbc.setState(0x34ad, 0xaa94, 0x5e70, 0xb36, 0xf39a, 0x839b, 0x0, 0x1);
        gbc.writeMem(0x34ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaa94, gbc.sp());
        EXPECT(0x34af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 000E
        gbc.setState(0x2d4d, 0x13d3, 0x2440, 0xf5bc, 0xc83f, 0x30fb, 0x0, 0x0);
        gbc.writeMem(0x2d4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x13d3, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 000F
        gbc.setState(0x78ee, 0x9912, 0xcd0, 0xca44, 0xf317, 0x79b2, 0x1, 0x0);
        gbc.writeMem(0x78ee, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9912, gbc.sp());
        EXPECT(0x78f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0010
        gbc.setState(0x1a19, 0x80ea, 0x1c20, 0x673, 0x54eb, 0xd377, 0x1, 0x1);
        gbc.writeMem(0x1a19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x80ea, gbc.sp());
        EXPECT(0x1a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0011
        gbc.setState(0x5608, 0x9d1c, 0xbef0, 0x9a6, 0x2c30, 0x8440, 0x0, 0x1);
        gbc.writeMem(0x5608, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9d1c, gbc.sp());
        EXPECT(0x560a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0012
        gbc.setState(0x1baf, 0xfead, 0x8b20, 0x9911, 0x9762, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0x1baf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfead, gbc.sp());
        EXPECT(0x1bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0013
        gbc.setState(0x232e, 0x736e, 0x3040, 0x3f59, 0xb417, 0x7d87, 0x1, 0x1);
        gbc.writeMem(0x232e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x736e, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0016
        gbc.setState(0x6a6e, 0x9da9, 0x5ba0, 0xbb15, 0xc0e4, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0x6a6e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9da9, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0017
        gbc.setState(0xb17c, 0x2277, 0x6ba0, 0x545f, 0xce3, 0xa067, 0x0, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2277, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0x64, gbc.readMem(0xb17d));
        // CB 64 0018
        gbc.setState(0xef4, 0xfdbe, 0x50b0, 0x62fb, 0x9c49, 0x52f9, 0x0, 0x1);
        gbc.writeMem(0xef4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0xef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0019
        gbc.setState(0x345b, 0x645b, 0x8720, 0xdec8, 0xebd6, 0xa8cb, 0x0, 0x0);
        gbc.writeMem(0x345b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x645b, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 001A
        gbc.setState(0xc96d, 0xd455, 0x4010, 0xde42, 0xfe5e, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0xc96d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0xc96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96d));
        EXPECT(0x64, gbc.readMem(0xc96e));
        // CB 64 001B
        gbc.setState(0xb3fe, 0x61e3, 0xf9f0, 0x74b8, 0x7cf2, 0x5278, 0x0, 0x1);
        gbc.writeMem(0xb3fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fe));
        EXPECT(0x64, gbc.readMem(0xb3ff));
        // CB 64 001C
        gbc.setState(0x18d8, 0xfb93, 0x5ec0, 0x6b32, 0xab29, 0x1447, 0x0, 0x1);
        gbc.writeMem(0x18d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfb93, gbc.sp());
        EXPECT(0x18da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 001D
        gbc.setState(0x9f8a, 0x5bff, 0x13b0, 0x378a, 0xe8ce, 0x5bf6, 0x0, 0x1);
        gbc.writeMem(0x9f8a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5bff, gbc.sp());
        EXPECT(0x9f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8a));
        EXPECT(0x64, gbc.readMem(0x9f8b));
        // CB 64 001E
        gbc.setState(0x275e, 0x8d06, 0x2d50, 0x97a3, 0x84bd, 0x785a, 0x0, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0x2760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 001F
        gbc.setState(0xa005, 0x148f, 0x9be0, 0x19c3, 0xd1df, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0xa005, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x148f, gbc.sp());
        EXPECT(0xa007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa005));
        EXPECT(0x64, gbc.readMem(0xa006));
        // CB 64 0021
        gbc.setState(0x5b21, 0x588f, 0x7330, 0xb655, 0x7c69, 0x81fd, 0x0, 0x0);
        gbc.writeMem(0x5b21, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x588f, gbc.sp());
        EXPECT(0x5b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0022
        gbc.setState(0xa408, 0xec50, 0x8380, 0xd232, 0xfaf9, 0x2820, 0x0, 0x1);
        gbc.writeMem(0xa408, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xec50, gbc.sp());
        EXPECT(0xa40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa408));
        EXPECT(0x64, gbc.readMem(0xa409));
        // CB 64 0023
        gbc.setState(0x7a8f, 0x7d9a, 0x5890, 0x708a, 0xb247, 0x4545, 0x1, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0x7a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0024
        gbc.setState(0x1566, 0x2773, 0x3020, 0x1c19, 0x9844, 0xfd18, 0x1, 0x0);
        gbc.writeMem(0x1566, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2773, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0025
        gbc.setState(0x3e81, 0xcdb8, 0x8030, 0x431b, 0x4321, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x3e81, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0026
        gbc.setState(0x4a5c, 0x48db, 0xac60, 0xe9c0, 0xdec9, 0x745a, 0x0, 0x1);
        gbc.writeMem(0x4a5c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x48db, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0027
        gbc.setState(0xdb28, 0x62db, 0xe1f0, 0xea55, 0x486a, 0xd969, 0x1, 0x0);
        gbc.writeMem(0xdb28, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x62db, gbc.sp());
        EXPECT(0xdb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb28));
        EXPECT(0x64, gbc.readMem(0xdb29));
        // CB 64 0028
        gbc.setState(0x1d47, 0x3d45, 0x3350, 0x9d62, 0xc4a6, 0x17ef, 0x0, 0x0);
        gbc.writeMem(0x1d47, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3d45, gbc.sp());
        EXPECT(0x1d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0029
        gbc.setState(0x18d, 0x37ec, 0xc6a0, 0xa527, 0x7de8, 0xb14d, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x37ec, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 002A
        gbc.setState(0xb266, 0xab3a, 0xf460, 0xa1a0, 0x1344, 0x9dc9, 0x1, 0x1);
        gbc.writeMem(0xb266, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xab3a, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb266));
        EXPECT(0x64, gbc.readMem(0xb267));
        // CB 64 002B
        gbc.setState(0xe07c, 0xe013, 0x4310, 0x664c, 0x9e75, 0xb899, 0x0, 0x1);
        gbc.writeMem(0xe07c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0xe07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07c));
        EXPECT(0x64, gbc.readMem(0xe07d));
        // CB 64 002C
        gbc.setState(0xa1cd, 0x54fb, 0x4b60, 0x10f3, 0x699f, 0xdeac, 0x0, 0x0);
        gbc.writeMem(0xa1cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x54fb, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1cd));
        EXPECT(0x64, gbc.readMem(0xa1ce));
        // CB 64 002D
        gbc.setState(0xcf74, 0x3134, 0x5210, 0xbb05, 0x11ef, 0xc0b9, 0x0, 0x0);
        gbc.writeMem(0xcf74, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3134, gbc.sp());
        EXPECT(0xcf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf74));
        EXPECT(0x64, gbc.readMem(0xcf75));
        // CB 64 002E
        gbc.setState(0xd043, 0x3370, 0xcb30, 0xcdd3, 0x13bb, 0xad79, 0x1, 0x0);
        gbc.writeMem(0xd043, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd043));
        EXPECT(0x64, gbc.readMem(0xd044));
        // CB 64 002F
        gbc.setState(0xb9e5, 0x94f4, 0x72e0, 0xc16c, 0x3969, 0xe579, 0x0, 0x1);
        gbc.writeMem(0xb9e5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e5));
        EXPECT(0x64, gbc.readMem(0xb9e6));
        // CB 64 0030
        gbc.setState(0x9525, 0xed3a, 0xa2f0, 0x8fd7, 0x59e4, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0x9525, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x9527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9525));
        EXPECT(0x64, gbc.readMem(0x9526));
        // CB 64 0031
        gbc.setState(0x86ef, 0x3816, 0x4e80, 0x749e, 0xdee9, 0x4d5d, 0x1, 0x0);
        gbc.writeMem(0x86ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ef));
        EXPECT(0x64, gbc.readMem(0x86f0));
        // CB 64 0032
        gbc.setState(0x89a1, 0xa4ae, 0x5590, 0x3f4f, 0xa541, 0x32b9, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa4ae, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a1));
        EXPECT(0x64, gbc.readMem(0x89a2));
        // CB 64 0033
        gbc.setState(0x98d7, 0x8620, 0x8e50, 0x1932, 0x2fbb, 0x9d9a, 0x1, 0x1);
        gbc.writeMem(0x98d7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8620, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d7));
        EXPECT(0x64, gbc.readMem(0x98d8));
        // CB 64 0034
        gbc.setState(0xb032, 0xdff4, 0xea70, 0x9bd8, 0x3e31, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0xb032, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdff4, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb032));
        EXPECT(0x64, gbc.readMem(0xb033));
        // CB 64 0035
        gbc.setState(0x1d64, 0xa854, 0x6d30, 0xa0eb, 0x413a, 0xd0d1, 0x0, 0x0);
        gbc.writeMem(0x1d64, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0036
        gbc.setState(0x6f8f, 0x6d8b, 0x93f0, 0xce48, 0x5f96, 0xba2c, 0x0, 0x0);
        gbc.writeMem(0x6f8f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6d8b, gbc.sp());
        EXPECT(0x6f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0037
        gbc.setState(0xed19, 0x7f37, 0x980, 0xa93a, 0x32c2, 0x8427, 0x0, 0x0);
        gbc.writeMem(0xed19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7f37, gbc.sp());
        EXPECT(0xed1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed19));
        EXPECT(0x64, gbc.readMem(0xed1a));
        // CB 64 0038
        gbc.setState(0xb305, 0x33d2, 0xd10, 0x1305, 0x468b, 0x84e7, 0x0, 0x0);
        gbc.writeMem(0xb305, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x33d2, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb305));
        EXPECT(0x64, gbc.readMem(0xb306));
        // CB 64 0039
        gbc.setState(0x596d, 0x2803, 0xf080, 0x6dd5, 0xb434, 0x7cfc, 0x1, 0x0);
        gbc.writeMem(0x596d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2803, gbc.sp());
        EXPECT(0x596f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 003A
        gbc.setState(0x94aa, 0xc8d7, 0xa3a0, 0x6038, 0x155b, 0xac2f, 0x0, 0x0);
        gbc.writeMem(0x94aa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc8d7, gbc.sp());
        EXPECT(0x94ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94aa));
        EXPECT(0x64, gbc.readMem(0x94ab));
        // CB 64 003B
        gbc.setState(0x7777, 0x9aaa, 0x14d0, 0x2f1f, 0x3b5f, 0x9875, 0x1, 0x0);
        gbc.writeMem(0x7777, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x7779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 003D
        gbc.setState(0xd74f, 0xb4e9, 0x2de0, 0xbaa1, 0x6ed8, 0x6f08, 0x1, 0x1);
        gbc.writeMem(0xd74f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb4e9, gbc.sp());
        EXPECT(0xd751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74f));
        EXPECT(0x64, gbc.readMem(0xd750));
        // CB 64 003E
        gbc.setState(0xb1d0, 0xb8d2, 0x9150, 0xfe3b, 0x4d1b, 0x67af, 0x1, 0x0);
        gbc.writeMem(0xb1d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0xb1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d0));
        EXPECT(0x64, gbc.readMem(0xb1d1));
        // CB 64 003F
        gbc.setState(0x83c8, 0x6499, 0x6030, 0x38e0, 0xe11a, 0x7d75, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6499, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c8));
        EXPECT(0x64, gbc.readMem(0x83c9));
        // CB 64 0040
        gbc.setState(0x4d0e, 0x654e, 0xcfe0, 0x9d2c, 0x3e65, 0x1074, 0x0, 0x1);
        gbc.writeMem(0x4d0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x4d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0041
        gbc.setState(0x8b83, 0x3f71, 0x5d20, 0x6e28, 0xae89, 0xc44e, 0x1, 0x1);
        gbc.writeMem(0x8b83, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x8b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b83));
        EXPECT(0x64, gbc.readMem(0x8b84));
        // CB 64 0042
        gbc.setState(0xced, 0x55c1, 0x6df0, 0x5ddd, 0x8b45, 0xe909, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0043
        gbc.setState(0xd898, 0xe204, 0x57b0, 0x3f8d, 0x8fd8, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0xd898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe204, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd898));
        EXPECT(0x64, gbc.readMem(0xd899));
        // CB 64 0044
        gbc.setState(0x82fe, 0x7c3d, 0x1440, 0x35a0, 0x8fde, 0xfe21, 0x0, 0x0);
        gbc.writeMem(0x82fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c3d, gbc.sp());
        EXPECT(0x8300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fe));
        EXPECT(0x64, gbc.readMem(0x82ff));
        // CB 64 0045
        gbc.setState(0x4212, 0x10fa, 0xac90, 0xf91, 0xbc51, 0x5bcc, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0046
        gbc.setState(0xc064, 0x598e, 0xecd0, 0xfcc2, 0x1d46, 0xe2e0, 0x1, 0x0);
        gbc.writeMem(0xc064, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0xc066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc064));
        EXPECT(0x64, gbc.readMem(0xc065));
        // CB 64 0047
        gbc.setState(0xc8c9, 0x36d4, 0xb90, 0xbb8f, 0xa3fb, 0x40d8, 0x1, 0x1);
        gbc.writeMem(0xc8c9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x36d4, gbc.sp());
        EXPECT(0xc8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c9));
        EXPECT(0x64, gbc.readMem(0xc8ca));
        // CB 64 0048
        gbc.setState(0xcc0f, 0xfe9d, 0xcee0, 0xa197, 0x78c8, 0xbb46, 0x0, 0x1);
        gbc.writeMem(0xcc0f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0xcc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0f));
        EXPECT(0x64, gbc.readMem(0xcc10));
        // CB 64 0049
        gbc.setState(0x30f5, 0x461d, 0xa090, 0xf4b7, 0xc321, 0x43ea, 0x0, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x30f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 004A
        gbc.setState(0x178b, 0x7715, 0xb930, 0x4418, 0xfeea, 0x295b, 0x0, 0x1);
        gbc.writeMem(0x178b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 004B
        gbc.setState(0x7e39, 0xa94a, 0xb430, 0xec40, 0x5768, 0x321a, 0x1, 0x1);
        gbc.writeMem(0x7e39, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0x7e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 004C
        gbc.setState(0xe288, 0xf829, 0xdb80, 0xf40f, 0xbeaa, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xe288, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0xe28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe288));
        EXPECT(0x64, gbc.readMem(0xe289));
        // CB 64 004D
        gbc.setState(0xc149, 0xa4c, 0x38b0, 0xa216, 0xe065, 0x3c41, 0x0, 0x1);
        gbc.writeMem(0xc149, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa4c, gbc.sp());
        EXPECT(0xc14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc149));
        EXPECT(0x64, gbc.readMem(0xc14a));
        // CB 64 004F
        gbc.setState(0xacd6, 0x8299, 0xde90, 0x75bf, 0xec84, 0x878c, 0x0, 0x1);
        gbc.writeMem(0xacd6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0xacd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd6));
        EXPECT(0x64, gbc.readMem(0xacd7));
        // CB 64 0050
        gbc.setState(0xde3f, 0x86aa, 0x1be0, 0x8782, 0x946d, 0x35f8, 0x0, 0x1);
        gbc.writeMem(0xde3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0xde41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3f));
        EXPECT(0x64, gbc.readMem(0xde40));
        // CB 64 0051
        gbc.setState(0x2bc4, 0x4737, 0x9dc0, 0x7966, 0xc4c2, 0x3c5c, 0x1, 0x1);
        gbc.writeMem(0x2bc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4737, gbc.sp());
        EXPECT(0x2bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0052
        gbc.setState(0x88b, 0x2c43, 0xbf90, 0x2b2c, 0x6333, 0x398, 0x0, 0x0);
        gbc.writeMem(0x88b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0x88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0053
        gbc.setState(0x3a0b, 0xb6a4, 0xfdc0, 0xa648, 0x88f7, 0xd5dc, 0x0, 0x0);
        gbc.writeMem(0x3a0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb6a4, gbc.sp());
        EXPECT(0x3a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0054
        gbc.setState(0xd6db, 0xa9fb, 0x8e70, 0x2df6, 0x190b, 0x95eb, 0x1, 0x1);
        gbc.writeMem(0xd6db, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa9fb, gbc.sp());
        EXPECT(0xd6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6db));
        EXPECT(0x64, gbc.readMem(0xd6dc));
        // CB 64 0055
        gbc.setState(0x1417, 0xf367, 0x13d0, 0x4a8e, 0x2055, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x1417, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf367, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0056
        gbc.setState(0x1acf, 0xa2a2, 0xec10, 0x15c7, 0x150e, 0xf21c, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0057
        gbc.setState(0x5c2b, 0x238f, 0xb7b0, 0x49b9, 0x8ebe, 0xbd, 0x0, 0x0);
        gbc.writeMem(0x5c2b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x238f, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0058
        gbc.setState(0x97b7, 0x7394, 0xdc70, 0x569f, 0xd8ed, 0x2a40, 0x0, 0x1);
        gbc.writeMem(0x97b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7394, gbc.sp());
        EXPECT(0x97b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b7));
        EXPECT(0x64, gbc.readMem(0x97b8));
        // CB 64 0059
        gbc.setState(0x5f8c, 0xdd18, 0x1e90, 0x59f7, 0x8302, 0xc54b, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd18, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 005B
        gbc.setState(0x94bb, 0xed1e, 0x1b70, 0x6eea, 0xbea6, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0x94bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed1e, gbc.sp());
        EXPECT(0x94bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bb));
        EXPECT(0x64, gbc.readMem(0x94bc));
        // CB 64 005C
        gbc.setState(0x8a97, 0xb6b, 0x2e10, 0x898, 0x277, 0x98b4, 0x1, 0x0);
        gbc.writeMem(0x8a97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb6b, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a97));
        EXPECT(0x64, gbc.readMem(0x8a98));
        // CB 64 005D
        gbc.setState(0xc02f, 0x9777, 0x7700, 0x8d7c, 0x5d6a, 0x8bc4, 0x0, 0x0);
        gbc.writeMem(0xc02f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9777, gbc.sp());
        EXPECT(0xc031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02f));
        EXPECT(0x64, gbc.readMem(0xc030));
        // CB 64 005E
        gbc.setState(0x43e6, 0x7c7a, 0x1bf0, 0xfa9d, 0x7772, 0x7153, 0x1, 0x1);
        gbc.writeMem(0x43e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0x43e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 005F
        gbc.setState(0xd722, 0xfd07, 0xc3e0, 0x947a, 0x266, 0xda9c, 0x0, 0x0);
        gbc.writeMem(0xd722, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfd07, gbc.sp());
        EXPECT(0xd724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd722));
        EXPECT(0x64, gbc.readMem(0xd723));
        // CB 64 0060
        gbc.setState(0x98f3, 0x62a, 0x5870, 0x3e8d, 0xeb2a, 0x8692, 0x0, 0x1);
        gbc.writeMem(0x98f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f3));
        EXPECT(0x64, gbc.readMem(0x98f4));
        // CB 64 0061
        gbc.setState(0xb151, 0x9fb5, 0xa200, 0x991a, 0x1af7, 0x3e4e, 0x1, 0x0);
        gbc.writeMem(0xb151, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb151));
        EXPECT(0x64, gbc.readMem(0xb152));
        // CB 64 0062
        gbc.setState(0xc7b5, 0x6190, 0x6b00, 0xee71, 0xb3e3, 0xaf5d, 0x1, 0x1);
        gbc.writeMem(0xc7b5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0xc7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b5));
        EXPECT(0x64, gbc.readMem(0xc7b6));
        // CB 64 0063
        gbc.setState(0x726, 0xadc1, 0x83e0, 0x77f2, 0xa000, 0x8cb6, 0x0, 0x1);
        gbc.writeMem(0x726, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0x728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0064
        gbc.setState(0x4c3e, 0x30b0, 0x7ea0, 0x64a8, 0x6498, 0x59b7, 0x0, 0x0);
        gbc.writeMem(0x4c3e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0x4c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0065
        gbc.setState(0x8a5, 0x5e2a, 0x4580, 0xde1c, 0xd59e, 0xb9ae, 0x0, 0x0);
        gbc.writeMem(0x8a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0066
        gbc.setState(0xc3a4, 0x1904, 0xdc70, 0x8e2c, 0x4cef, 0x4f96, 0x0, 0x1);
        gbc.writeMem(0xc3a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1904, gbc.sp());
        EXPECT(0xc3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a4));
        EXPECT(0x64, gbc.readMem(0xc3a5));
        // CB 64 0067
        gbc.setState(0xd663, 0x443d, 0xc620, 0x41fa, 0x548a, 0xb9ca, 0x0, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0xd665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd663));
        EXPECT(0x64, gbc.readMem(0xd664));
        // CB 64 0068
        gbc.setState(0x93cf, 0x6f68, 0xac00, 0x69aa, 0xd9d3, 0x22b1, 0x0, 0x0);
        gbc.writeMem(0x93cf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0x93d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cf));
        EXPECT(0x64, gbc.readMem(0x93d0));
        // CB 64 0069
        gbc.setState(0xba4a, 0x6379, 0x27d0, 0xd42, 0x2de0, 0xf601, 0x0, 0x0);
        gbc.writeMem(0xba4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6379, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0x64, gbc.readMem(0xba4b));
        // CB 64 006A
        gbc.setState(0xed54, 0x2510, 0xadf0, 0x1507, 0xca7e, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0xed54, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0xed56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed54));
        EXPECT(0x64, gbc.readMem(0xed55));
        // CB 64 006B
        gbc.setState(0x8771, 0x147e, 0xff20, 0x7db8, 0xe40b, 0xcc38, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0x8773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8771));
        EXPECT(0x64, gbc.readMem(0x8772));
        // CB 64 006C
        gbc.setState(0xe47d, 0x4fdf, 0xc820, 0xa8b3, 0x9856, 0xe41b, 0x1, 0x1);
        gbc.writeMem(0xe47d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4fdf, gbc.sp());
        EXPECT(0xe47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47d));
        EXPECT(0x64, gbc.readMem(0xe47e));
        // CB 64 006D
        gbc.setState(0x464f, 0xa296, 0x45d0, 0x3686, 0x1764, 0x6e62, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa296, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 006E
        gbc.setState(0x7835, 0x617b, 0x8220, 0xe814, 0x198, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x7835, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x7837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 006F
        gbc.setState(0x72c7, 0xecdf, 0xd690, 0x353d, 0x6d08, 0x9e57, 0x0, 0x0);
        gbc.writeMem(0x72c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0070
        gbc.setState(0xd2bf, 0x55fe, 0x9680, 0x5b3b, 0x4d8, 0xe31c, 0x0, 0x0);
        gbc.writeMem(0xd2bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0xd2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bf));
        EXPECT(0x64, gbc.readMem(0xd2c0));
        // CB 64 0071
        gbc.setState(0x7b95, 0xfac9, 0x2c00, 0x20e8, 0x528e, 0xc442, 0x0, 0x0);
        gbc.writeMem(0x7b95, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0x7b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0072
        gbc.setState(0xedb1, 0x6511, 0xd210, 0x643a, 0x9f25, 0xc24b, 0x1, 0x1);
        gbc.writeMem(0xedb1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0xedb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb1));
        EXPECT(0x64, gbc.readMem(0xedb2));
        // CB 64 0073
        gbc.setState(0x5692, 0xff2c, 0x5a10, 0x6769, 0x15b9, 0xbc18, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0074
        gbc.setState(0x5123, 0xee31, 0xf610, 0xdb79, 0x1846, 0xa4be, 0x0, 0x1);
        gbc.writeMem(0x5123, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0x5125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0075
        gbc.setState(0xe734, 0xe605, 0x90f0, 0x6ab2, 0x1616, 0x762f, 0x0, 0x0);
        gbc.writeMem(0xe734, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe605, gbc.sp());
        EXPECT(0xe736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe734));
        EXPECT(0x64, gbc.readMem(0xe735));
        // CB 64 0076
        gbc.setState(0xbb84, 0x3d43, 0x8aa0, 0x2158, 0x6bed, 0x6ed0, 0x1, 0x0);
        gbc.writeMem(0xbb84, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb84));
        EXPECT(0x64, gbc.readMem(0xbb85));
        // CB 64 0078
        gbc.setState(0x594b, 0x4fb8, 0xef50, 0x8dec, 0x4788, 0x69e1, 0x1, 0x0);
        gbc.writeMem(0x594b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0079
        gbc.setState(0x12a4, 0x1a0, 0x5930, 0x291f, 0x183d, 0xe23, 0x0, 0x1);
        gbc.writeMem(0x12a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x12a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 007A
        gbc.setState(0xafac, 0xe2a0, 0x8f90, 0xb987, 0x2e18, 0x3221, 0x0, 0x0);
        gbc.writeMem(0xafac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafac));
        EXPECT(0x64, gbc.readMem(0xafad));
        // CB 64 007B
        gbc.setState(0xd462, 0x8dfa, 0x7df0, 0xe8f9, 0xf673, 0x7fca, 0x0, 0x0);
        gbc.writeMem(0xd462, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8dfa, gbc.sp());
        EXPECT(0xd464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd462));
        EXPECT(0x64, gbc.readMem(0xd463));
        // CB 64 007C
        gbc.setState(0x5a2c, 0x7ad6, 0x97c0, 0xd631, 0x3f07, 0x1605, 0x1, 0x1);
        gbc.writeMem(0x5a2c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7ad6, gbc.sp());
        EXPECT(0x5a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 007D
        gbc.setState(0xbe3c, 0x83dc, 0xe370, 0xee70, 0x268a, 0x38a1, 0x1, 0x1);
        gbc.writeMem(0xbe3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x83dc, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3c));
        EXPECT(0x64, gbc.readMem(0xbe3d));
        // CB 64 007E
        gbc.setState(0xe26f, 0xfcca, 0x5870, 0x80d6, 0x45c3, 0xc935, 0x1, 0x0);
        gbc.writeMem(0xe26f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfcca, gbc.sp());
        EXPECT(0xe271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26f));
        EXPECT(0x64, gbc.readMem(0xe270));
        // CB 64 0080
        gbc.setState(0xa744, 0x5236, 0x56c0, 0xa416, 0xb8be, 0x843a, 0x1, 0x1);
        gbc.writeMem(0xa744, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa744));
        EXPECT(0x64, gbc.readMem(0xa745));
        // CB 64 0081
        gbc.setState(0xc7a7, 0xed, 0x9f60, 0xf682, 0xb0af, 0x9826, 0x1, 0x1);
        gbc.writeMem(0xc7a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xed, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x64, gbc.readMem(0xc7a8));
        // CB 64 0082
        gbc.setState(0xaa39, 0xb017, 0x84d0, 0xe2a4, 0xd9a6, 0xaea8, 0x0, 0x1);
        gbc.writeMem(0xaa39, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb017, gbc.sp());
        EXPECT(0xaa3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa39));
        EXPECT(0x64, gbc.readMem(0xaa3a));
        // CB 64 0083
        gbc.setState(0xb02f, 0x6a1a, 0xfd00, 0x1a36, 0xae03, 0xe29, 0x1, 0x0);
        gbc.writeMem(0xb02f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0xb031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02f));
        EXPECT(0x64, gbc.readMem(0xb030));
        // CB 64 0084
        gbc.setState(0x79b8, 0x968b, 0x42c0, 0x47ce, 0x2778, 0x3d15, 0x1, 0x1);
        gbc.writeMem(0x79b8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x968b, gbc.sp());
        EXPECT(0x79ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0085
        gbc.setState(0xb11d, 0xd08c, 0x8150, 0xb603, 0xaf1d, 0x6ed7, 0x1, 0x0);
        gbc.writeMem(0xb11d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11d));
        EXPECT(0x64, gbc.readMem(0xb11e));
        // CB 64 0086
        gbc.setState(0xa67d, 0x5a30, 0xea50, 0x3ee, 0xb8dd, 0x9bb, 0x1, 0x1);
        gbc.writeMem(0xa67d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5a30, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67d));
        EXPECT(0x64, gbc.readMem(0xa67e));
        // CB 64 0087
        gbc.setState(0xc6dd, 0x8d5d, 0x7f20, 0x708c, 0xf156, 0xa887, 0x0, 0x0);
        gbc.writeMem(0xc6dd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8d5d, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dd));
        EXPECT(0x64, gbc.readMem(0xc6de));
        // CB 64 0088
        gbc.setState(0x220a, 0xa176, 0xa520, 0x5be4, 0x765a, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x220a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa176, gbc.sp());
        EXPECT(0x220c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0089
        gbc.setState(0x88bf, 0xa63e, 0xb850, 0x3d77, 0x1dd1, 0x496b, 0x0, 0x1);
        gbc.writeMem(0x88bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa63e, gbc.sp());
        EXPECT(0x88c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bf));
        EXPECT(0x64, gbc.readMem(0x88c0));
        // CB 64 008B
        gbc.setState(0xbbb3, 0x1558, 0x9270, 0x498c, 0x3637, 0x607e, 0x1, 0x0);
        gbc.writeMem(0xbbb3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0xbbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb3));
        EXPECT(0x64, gbc.readMem(0xbbb4));
        // CB 64 008C
        gbc.setState(0xdc97, 0x1175, 0x66d0, 0x8e25, 0xae06, 0xb74e, 0x0, 0x1);
        gbc.writeMem(0xdc97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0xdc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc97));
        EXPECT(0x64, gbc.readMem(0xdc98));
        // CB 64 008E
        gbc.setState(0x7afb, 0x5aeb, 0x4000, 0x6317, 0xb1e9, 0xdd0b, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5aeb, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 008F
        gbc.setState(0x67ca, 0x7a02, 0x7870, 0x835d, 0xdb00, 0xcfc2, 0x0, 0x1);
        gbc.writeMem(0x67ca, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0x67cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0090
        gbc.setState(0x14de, 0xebc6, 0x1f30, 0xf6ac, 0x5468, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x14de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xebc6, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0091
        gbc.setState(0xb1ee, 0x78b0, 0x4920, 0x6ec8, 0xbafd, 0xff64, 0x1, 0x0);
        gbc.writeMem(0xb1ee, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0xb1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ee));
        EXPECT(0x64, gbc.readMem(0xb1ef));
        // CB 64 0093
        gbc.setState(0x526c, 0x4058, 0xf330, 0x4ea4, 0xb148, 0x5b38, 0x1, 0x1);
        gbc.writeMem(0x526c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0x526e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0094
        gbc.setState(0x3612, 0xeacf, 0x1220, 0xac68, 0x2148, 0xfaab, 0x1, 0x1);
        gbc.writeMem(0x3612, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0x3614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0095
        gbc.setState(0x6227, 0x1c74, 0xf4b0, 0xb52, 0xf9fd, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1c74, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0096
        gbc.setState(0x9b72, 0xdb38, 0x6fb0, 0xe01e, 0x385d, 0x7101, 0x0, 0x1);
        gbc.writeMem(0x9b72, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdb38, gbc.sp());
        EXPECT(0x9b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b72));
        EXPECT(0x64, gbc.readMem(0x9b73));
        // CB 64 0097
        gbc.setState(0x8480, 0x47a8, 0x9e80, 0x588, 0x7b35, 0xa6d, 0x0, 0x1);
        gbc.writeMem(0x8480, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x47a8, gbc.sp());
        EXPECT(0x8482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8480));
        EXPECT(0x64, gbc.readMem(0x8481));
        // CB 64 0098
        gbc.setState(0x11fb, 0xc5ea, 0x57d0, 0xb608, 0xd3a2, 0xc76e, 0x0, 0x1);
        gbc.writeMem(0x11fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc5ea, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0099
        gbc.setState(0x80de, 0x54e7, 0xc30, 0x15ff, 0xfef8, 0xc3a2, 0x1, 0x0);
        gbc.writeMem(0x80de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x80e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80de));
        EXPECT(0x64, gbc.readMem(0x80df));
        // CB 64 009A
        gbc.setState(0x6126, 0x2ca9, 0xc3f0, 0xc217, 0xcbc7, 0x9ae4, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2ca9, gbc.sp());
        EXPECT(0x6128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 009B
        gbc.setState(0xd65f, 0xab59, 0xeee0, 0xf73c, 0xe036, 0x1a54, 0x1, 0x0);
        gbc.writeMem(0xd65f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0xd661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65f));
        EXPECT(0x64, gbc.readMem(0xd660));
        // CB 64 009C
        gbc.setState(0xab77, 0xc674, 0xc1d0, 0xb177, 0xbca1, 0x5c92, 0x1, 0x1);
        gbc.writeMem(0xab77, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc674, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0x64, gbc.readMem(0xab78));
        // CB 64 009D
        gbc.setState(0x6bc4, 0x9e49, 0xf7a0, 0x1600, 0x40ba, 0x2f94, 0x0, 0x0);
        gbc.writeMem(0x6bc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0x6bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 009E
        gbc.setState(0xb4f7, 0xde31, 0x43a0, 0x153b, 0xea04, 0xd266, 0x1, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xde31, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f7));
        EXPECT(0x64, gbc.readMem(0xb4f8));
        // CB 64 009F
        gbc.setState(0xe2eb, 0xa6fc, 0xe990, 0xc748, 0xf9f2, 0x6f02, 0x1, 0x0);
        gbc.writeMem(0xe2eb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xe2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2eb));
        EXPECT(0x64, gbc.readMem(0xe2ec));
        // CB 64 00A0
        gbc.setState(0xa30c, 0xd412, 0xbaa0, 0x799f, 0xa517, 0x84f3, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30c));
        EXPECT(0x64, gbc.readMem(0xa30d));
        // CB 64 00A1
        gbc.setState(0x4f1e, 0xf175, 0x6be0, 0xb7f1, 0x3b18, 0x442e, 0x0, 0x1);
        gbc.writeMem(0x4f1e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf175, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00A2
        gbc.setState(0xa9ac, 0x72cb, 0x5d60, 0x4134, 0x5fef, 0x2a74, 0x0, 0x1);
        gbc.writeMem(0xa9ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ac));
        EXPECT(0x64, gbc.readMem(0xa9ad));
        // CB 64 00A3
        gbc.setState(0x2083, 0x8882, 0xa7b0, 0x8356, 0xae67, 0x55f2, 0x1, 0x1);
        gbc.writeMem(0x2083, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8882, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00A4
        gbc.setState(0xd988, 0xc7ca, 0x64a0, 0x499d, 0x7df4, 0xfea9, 0x0, 0x0);
        gbc.writeMem(0xd988, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0x64, gbc.readMem(0xd989));
        // CB 64 00A5
        gbc.setState(0xb545, 0x3c2f, 0x230, 0xd54c, 0x2e1f, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0xb545, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c2f, gbc.sp());
        EXPECT(0xb547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb545));
        EXPECT(0x64, gbc.readMem(0xb546));
        // CB 64 00A6
        gbc.setState(0xec37, 0xc99d, 0x7fc0, 0xf2e6, 0x8306, 0xf3cd, 0x0, 0x0);
        gbc.writeMem(0xec37, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0xec39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec37));
        EXPECT(0x64, gbc.readMem(0xec38));
        // CB 64 00A7
        gbc.setState(0xe8c4, 0x7195, 0xb980, 0x5466, 0x4cab, 0xcdb1, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7195, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c4));
        EXPECT(0x64, gbc.readMem(0xe8c5));
        // CB 64 00A8
        gbc.setState(0x6c29, 0xd5b7, 0x97d0, 0x1bf3, 0xd528, 0x1225, 0x0, 0x0);
        gbc.writeMem(0x6c29, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0x6c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00A9
        gbc.setState(0x1853, 0x3809, 0xa70, 0x3c4c, 0x7cbf, 0x19bc, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3809, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00AA
        gbc.setState(0xed00, 0xf331, 0x7470, 0xa819, 0xb2c8, 0xb6c7, 0x1, 0x1);
        gbc.writeMem(0xed00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0xed02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed00));
        EXPECT(0x64, gbc.readMem(0xed01));
        // CB 64 00AB
        gbc.setState(0xade1, 0x7846, 0x75c0, 0x2970, 0x4aec, 0x52b3, 0x1, 0x1);
        gbc.writeMem(0xade1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0xade3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade1));
        EXPECT(0x64, gbc.readMem(0xade2));
        // CB 64 00AC
        gbc.setState(0x6a70, 0x2195, 0xbea0, 0x212f, 0xc94a, 0xf7af, 0x1, 0x0);
        gbc.writeMem(0x6a70, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0x6a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00AE
        gbc.setState(0xb370, 0x7630, 0x5fa0, 0x1c7a, 0x47f7, 0xd33f, 0x0, 0x1);
        gbc.writeMem(0xb370, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0xb372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb370));
        EXPECT(0x64, gbc.readMem(0xb371));
        // CB 64 00AF
        gbc.setState(0xe30d, 0x104a, 0x6530, 0x6e4d, 0x93b6, 0x30eb, 0x0, 0x0);
        gbc.writeMem(0xe30d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x104a, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30d));
        EXPECT(0x64, gbc.readMem(0xe30e));
        // CB 64 00B0
        gbc.setState(0xc83d, 0x43f9, 0x44c0, 0x5b6a, 0xe506, 0x3364, 0x0, 0x1);
        gbc.writeMem(0xc83d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x43f9, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83d));
        EXPECT(0x64, gbc.readMem(0xc83e));
        // CB 64 00B1
        gbc.setState(0xfb1, 0x1665, 0x2bb0, 0x56de, 0xdc75, 0x33c, 0x1, 0x1);
        gbc.writeMem(0xfb1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0xfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00B2
        gbc.setState(0x14ac, 0x53c3, 0xb010, 0x9a91, 0xd7a5, 0xaa9d, 0x1, 0x1);
        gbc.writeMem(0x14ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00B3
        gbc.setState(0x3d30, 0x887e, 0x7cc0, 0xce3b, 0x38e3, 0x3506, 0x0, 0x1);
        gbc.writeMem(0x3d30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0x3d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00B4
        gbc.setState(0x44ad, 0x9c44, 0xb8a0, 0x1175, 0x1e21, 0x8781, 0x1, 0x1);
        gbc.writeMem(0x44ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c44, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00B5
        gbc.setState(0x26d1, 0x5ef0, 0xd4e0, 0xded5, 0x1a30, 0xec41, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0x26d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00B6
        gbc.setState(0x65f2, 0x9b0e, 0x38b0, 0x158c, 0x9d9e, 0xc882, 0x1, 0x0);
        gbc.writeMem(0x65f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0x65f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00B7
        gbc.setState(0x4735, 0x5748, 0x58f0, 0x9c4e, 0xa697, 0x9b97, 0x1, 0x0);
        gbc.writeMem(0x4735, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0x4737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00B8
        gbc.setState(0x33fa, 0x7d0b, 0xb640, 0x3539, 0x2226, 0x141d, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7d0b, gbc.sp());
        EXPECT(0x33fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00B9
        gbc.setState(0x6d35, 0x4959, 0x94a0, 0xadd, 0x1858, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x6d35, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4959, gbc.sp());
        EXPECT(0x6d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00BA
        gbc.setState(0x5701, 0xa5e6, 0x1770, 0x438f, 0x805e, 0x9b1d, 0x1, 0x0);
        gbc.writeMem(0x5701, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5e6, gbc.sp());
        EXPECT(0x5703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00BB
        gbc.setState(0x47eb, 0x411e, 0xb770, 0xa360, 0xc41e, 0x3050, 0x0, 0x0);
        gbc.writeMem(0x47eb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00BC
        gbc.setState(0x6a18, 0x3b2e, 0x290, 0xb1f2, 0x6e76, 0xdfe5, 0x1, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b2e, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00BD
        gbc.setState(0x8373, 0xbb56, 0x5fd0, 0x4680, 0x9132, 0xfec4, 0x0, 0x0);
        gbc.writeMem(0x8373, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbb56, gbc.sp());
        EXPECT(0x8375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8373));
        EXPECT(0x64, gbc.readMem(0x8374));
        // CB 64 00BE
        gbc.setState(0x6222, 0xb45b, 0x3c50, 0x1e37, 0xacc8, 0x5b6, 0x1, 0x1);
        gbc.writeMem(0x6222, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x6224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00BF
        gbc.setState(0xc325, 0x45e4, 0x2240, 0xd2cc, 0x292b, 0x9d09, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x45e4, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc325));
        EXPECT(0x64, gbc.readMem(0xc326));
        // CB 64 00C0
        gbc.setState(0x4661, 0x834e, 0xa990, 0xac3f, 0xc4ac, 0x4b36, 0x1, 0x0);
        gbc.writeMem(0x4661, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x834e, gbc.sp());
        EXPECT(0x4663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00C1
        gbc.setState(0xb29c, 0xebe4, 0x6540, 0x6ad, 0x5ebf, 0xee4c, 0x0, 0x0);
        gbc.writeMem(0xb29c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xebe4, gbc.sp());
        EXPECT(0xb29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29c));
        EXPECT(0x64, gbc.readMem(0xb29d));
        // CB 64 00C2
        gbc.setState(0x1c9e, 0x96f7, 0x930, 0xaf24, 0x2be6, 0x8700, 0x0, 0x0);
        gbc.writeMem(0x1c9e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x96f7, gbc.sp());
        EXPECT(0x1ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00C3
        gbc.setState(0x6afc, 0x8dc7, 0x1a00, 0x9937, 0xccf0, 0x737b, 0x0, 0x0);
        gbc.writeMem(0x6afc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00C4
        gbc.setState(0xed, 0x600e, 0xf750, 0x2498, 0x830b, 0x3584, 0x1, 0x0);
        gbc.writeMem(0xed, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x600e, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00C5
        gbc.setState(0xb67e, 0x7b6c, 0x1fc0, 0x2afe, 0xd6a0, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xb67e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7b6c, gbc.sp());
        EXPECT(0xb680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb67e));
        EXPECT(0x64, gbc.readMem(0xb67f));
        // CB 64 00C6
        gbc.setState(0xacdd, 0x8a43, 0x6e90, 0xa40f, 0x154f, 0x5624, 0x1, 0x0);
        gbc.writeMem(0xacdd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8a43, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdd));
        EXPECT(0x64, gbc.readMem(0xacde));
        // CB 64 00C7
        gbc.setState(0xee3c, 0x7ba6, 0x29c0, 0xc859, 0xcffd, 0x3158, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0xee3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3c));
        EXPECT(0x64, gbc.readMem(0xee3d));
        // CB 64 00C8
        gbc.setState(0x6d26, 0x849c, 0xccf0, 0x1cde, 0x9ae1, 0xa04f, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x849c, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00C9
        gbc.setState(0xdf77, 0xe395, 0x62c0, 0xd48, 0x7ab6, 0xd869, 0x1, 0x0);
        gbc.writeMem(0xdf77, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0xdf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf77));
        EXPECT(0x64, gbc.readMem(0xdf78));
        // CB 64 00CA
        gbc.setState(0xa84e, 0x7626, 0xec70, 0xeaf0, 0xe93a, 0x8c26, 0x0, 0x1);
        gbc.writeMem(0xa84e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7626, gbc.sp());
        EXPECT(0xa850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84e));
        EXPECT(0x64, gbc.readMem(0xa84f));
        // CB 64 00CB
        gbc.setState(0x3532, 0x7d5c, 0x3210, 0x329d, 0xfb1f, 0x221, 0x1, 0x0);
        gbc.writeMem(0x3532, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00CC
        gbc.setState(0xb379, 0x793a, 0x6480, 0xf4e, 0xcb61, 0x1b43, 0x1, 0x0);
        gbc.writeMem(0xb379, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb379));
        EXPECT(0x64, gbc.readMem(0xb37a));
        // CB 64 00CD
        gbc.setState(0x17e, 0xb4f2, 0x15e0, 0xfafc, 0x7201, 0xdba4, 0x1, 0x0);
        gbc.writeMem(0x17e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb4f2, gbc.sp());
        EXPECT(0x180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00D0
        gbc.setState(0xe5, 0xced2, 0x8910, 0x422e, 0xbb88, 0x320c, 0x1, 0x1);
        gbc.writeMem(0xe5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0xe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00D1
        gbc.setState(0xc6f4, 0x68bc, 0x3110, 0x75ad, 0xea7c, 0x33bd, 0x1, 0x1);
        gbc.writeMem(0xc6f4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68bc, gbc.sp());
        EXPECT(0xc6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f4));
        EXPECT(0x64, gbc.readMem(0xc6f5));
        // CB 64 00D2
        gbc.setState(0xa6fa, 0x6d73, 0x4d00, 0x7846, 0x5c1a, 0x482e, 0x1, 0x0);
        gbc.writeMem(0xa6fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6d73, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fa));
        EXPECT(0x64, gbc.readMem(0xa6fb));
        // CB 64 00D3
        gbc.setState(0x6a00, 0x73be, 0x5090, 0xefe2, 0x844, 0x3319, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0x6a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00D4
        gbc.setState(0x6137, 0x801c, 0x4070, 0xd647, 0x9608, 0xe8d0, 0x0, 0x0);
        gbc.writeMem(0x6137, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00D5
        gbc.setState(0x7d33, 0xe9ed, 0x3560, 0x920c, 0x219a, 0xcbd1, 0x0, 0x1);
        gbc.writeMem(0x7d33, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe9ed, gbc.sp());
        EXPECT(0x7d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00D6
        gbc.setState(0xb4ba, 0xc1ce, 0x7e60, 0x69b1, 0xb1bb, 0x7fcc, 0x1, 0x1);
        gbc.writeMem(0xb4ba, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0xb4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ba));
        EXPECT(0x64, gbc.readMem(0xb4bb));
        // CB 64 00D7
        gbc.setState(0x3f9, 0x41b6, 0xede0, 0x1577, 0x8917, 0xab0e, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00D9
        gbc.setState(0xa094, 0x76d0, 0x7590, 0x4d73, 0x3b9e, 0x3e5d, 0x0, 0x1);
        gbc.writeMem(0xa094, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x76d0, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa094));
        EXPECT(0x64, gbc.readMem(0xa095));
        // CB 64 00DA
        gbc.setState(0xcb0a, 0x3a50, 0x6d00, 0x550e, 0x7fd7, 0xff12, 0x0, 0x0);
        gbc.writeMem(0xcb0a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0xcb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0a));
        EXPECT(0x64, gbc.readMem(0xcb0b));
        // CB 64 00DB
        gbc.setState(0xad03, 0x3be0, 0x7dd0, 0xd054, 0x2725, 0x6083, 0x1, 0x0);
        gbc.writeMem(0xad03, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0xad05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad03));
        EXPECT(0x64, gbc.readMem(0xad04));
        // CB 64 00DC
        gbc.setState(0xe53c, 0x36c4, 0xe90, 0xabac, 0x7a59, 0x5c46, 0x0, 0x0);
        gbc.writeMem(0xe53c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x36c4, gbc.sp());
        EXPECT(0xe53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53c));
        EXPECT(0x64, gbc.readMem(0xe53d));
        // CB 64 00DD
        gbc.setState(0x672d, 0xd21b, 0x8e90, 0xc86c, 0x134, 0x3356, 0x0, 0x0);
        gbc.writeMem(0x672d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd21b, gbc.sp());
        EXPECT(0x672f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00DE
        gbc.setState(0xace3, 0xb111, 0x6920, 0xd92c, 0xb51b, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0xace3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb111, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace3));
        EXPECT(0x64, gbc.readMem(0xace4));
        // CB 64 00DF
        gbc.setState(0xacce, 0x8764, 0xaaa0, 0xb4d, 0xcba1, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0xacce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0xacd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacce));
        EXPECT(0x64, gbc.readMem(0xaccf));
        // CB 64 00E0
        gbc.setState(0xd014, 0xb8b1, 0x55e0, 0xd796, 0xb07c, 0x884a, 0x1, 0x0);
        gbc.writeMem(0xd014, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd014));
        EXPECT(0x64, gbc.readMem(0xd015));
        // CB 64 00E1
        gbc.setState(0xa671, 0xe3a0, 0xab0, 0x6894, 0x5a9, 0xbc5b, 0x1, 0x1);
        gbc.writeMem(0xa671, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe3a0, gbc.sp());
        EXPECT(0xa673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa671));
        EXPECT(0x64, gbc.readMem(0xa672));
        // CB 64 00E2
        gbc.setState(0x56f0, 0x7e52, 0x4910, 0x4a61, 0x6c8, 0x669f, 0x1, 0x1);
        gbc.writeMem(0x56f0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00E3
        gbc.setState(0xa6a7, 0x1ea9, 0xcd00, 0x5dd7, 0xd207, 0xa5a7, 0x1, 0x1);
        gbc.writeMem(0xa6a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0xa6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a7));
        EXPECT(0x64, gbc.readMem(0xa6a8));
        // CB 64 00E5
        gbc.setState(0xd0cd, 0x39a2, 0x7b0, 0xebd, 0xed61, 0x85fb, 0x0, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x39a2, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cd));
        EXPECT(0x64, gbc.readMem(0xd0ce));
        // CB 64 00E6
        gbc.setState(0x3422, 0xa4d, 0x8e70, 0xc9f4, 0xdbda, 0xcc8e, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0x3424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00E7
        gbc.setState(0x96f3, 0x3967, 0x3080, 0xbc7c, 0x89e, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x96f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3967, gbc.sp());
        EXPECT(0x96f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f3));
        EXPECT(0x64, gbc.readMem(0x96f4));
        // CB 64 00E8
        gbc.setState(0x3d3f, 0xbb15, 0x7460, 0xd4d7, 0xe1f3, 0x81d4, 0x1, 0x1);
        gbc.writeMem(0x3d3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x3d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00E9
        gbc.setState(0xed4d, 0x1e58, 0xa940, 0xc2c9, 0xc0b2, 0x5fe7, 0x1, 0x1);
        gbc.writeMem(0xed4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1e58, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4d));
        EXPECT(0x64, gbc.readMem(0xed4e));
        // CB 64 00EA
        gbc.setState(0x3650, 0x6b2c, 0x8990, 0x2331, 0x29b3, 0x4af8, 0x0, 0x1);
        gbc.writeMem(0x3650, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6b2c, gbc.sp());
        EXPECT(0x3652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00EB
        gbc.setState(0x70c0, 0x1918, 0xa360, 0x16e3, 0x12aa, 0x5db6, 0x0, 0x1);
        gbc.writeMem(0x70c0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0x70c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00EC
        gbc.setState(0xdb5a, 0x9a7b, 0x45e0, 0xdcb8, 0xde71, 0xc046, 0x0, 0x0);
        gbc.writeMem(0xdb5a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0xdb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5a));
        EXPECT(0x64, gbc.readMem(0xdb5b));
        // CB 64 00ED
        gbc.setState(0x7e85, 0x4ccd, 0x8150, 0xa4e2, 0xec89, 0x605a, 0x0, 0x0);
        gbc.writeMem(0x7e85, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0x7e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00EE
        gbc.setState(0x311, 0x6d38, 0xfba0, 0x7900, 0x73b9, 0x27c2, 0x1, 0x0);
        gbc.writeMem(0x311, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00EF
        gbc.setState(0x9332, 0x80eb, 0xe260, 0x1775, 0x6bed, 0x1389, 0x0, 0x0);
        gbc.writeMem(0x9332, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x80eb, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9332));
        EXPECT(0x64, gbc.readMem(0x9333));
        // CB 64 00F0
        gbc.setState(0x4089, 0xa590, 0x82b0, 0x325c, 0x4682, 0x4013, 0x1, 0x0);
        gbc.writeMem(0x4089, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa590, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F2
        gbc.setState(0x3945, 0xc18c, 0x9710, 0x9aa0, 0xc4d3, 0xb2bd, 0x0, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F3
        gbc.setState(0x2628, 0x86aa, 0x30, 0xf338, 0x1280, 0xa610, 0x1, 0x0);
        gbc.writeMem(0x2628, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0x262a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F4
        gbc.setState(0xa2, 0x2527, 0x8e0, 0xfdd1, 0xb012, 0xbcd2, 0x0, 0x0);
        gbc.writeMem(0xa2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2527, gbc.sp());
        EXPECT(0xa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00F5
        gbc.setState(0x5925, 0x7aee, 0xb670, 0x48, 0xa06d, 0x7013, 0x1, 0x0);
        gbc.writeMem(0x5925, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7aee, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F6
        gbc.setState(0x2c1c, 0x3248, 0x9410, 0x4bfc, 0x8813, 0x83cb, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0x2c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F7
        gbc.setState(0x3c89, 0x4888, 0xe6d0, 0x26c9, 0x3aaf, 0xa54c, 0x0, 0x0);
        gbc.writeMem(0x3c89, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4888, gbc.sp());
        EXPECT(0x3c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00F8
        gbc.setState(0x1044, 0xc3ed, 0x7960, 0x2ff3, 0x6ca9, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0x1044, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3ed, gbc.sp());
        EXPECT(0x1046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00F9
        gbc.setState(0x79f1, 0x46c0, 0xa040, 0xe5ee, 0xf16f, 0x9ed4, 0x0, 0x1);
        gbc.writeMem(0x79f1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x46c0, gbc.sp());
        EXPECT(0x79f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 00FA
        gbc.setState(0x7fed, 0xd4c6, 0x6630, 0xb236, 0x4421, 0x284c, 0x1, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd4c6, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00FB
        gbc.setState(0xdeb5, 0x3931, 0xdbf0, 0xabca, 0x9bc0, 0x2189, 0x1, 0x1);
        gbc.writeMem(0xdeb5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0xdeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb5));
        EXPECT(0x64, gbc.readMem(0xdeb6));
        // CB 64 00FC
        gbc.setState(0x70ae, 0x56a1, 0x3390, 0x37b9, 0x61de, 0xbb0d, 0x0, 0x1);
        gbc.writeMem(0x70ae, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x56a1, gbc.sp());
        EXPECT(0x70b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00FD
        gbc.setState(0x2567, 0x184a, 0x4a50, 0x3f33, 0xcb7e, 0xa0c2, 0x1, 0x0);
        gbc.writeMem(0x2567, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x2569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 00FE
        gbc.setState(0xea34, 0x4432, 0xab0, 0x27f1, 0x1eb5, 0x35f6, 0x1, 0x0);
        gbc.writeMem(0xea34, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4432, gbc.sp());
        EXPECT(0xea36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea34));
        EXPECT(0x64, gbc.readMem(0xea35));
        // CB 64 00FF
        gbc.setState(0xe512, 0x3de6, 0x980, 0x47e8, 0x42e2, 0xc6a3, 0x0, 0x0);
        gbc.writeMem(0xe512, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3de6, gbc.sp());
        EXPECT(0xe514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe512));
        EXPECT(0x64, gbc.readMem(0xe513));
        // CB 64 0100
        gbc.setState(0x288e, 0xffbb, 0x6910, 0x311a, 0x7742, 0xa10b, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0101
        gbc.setState(0xdcf2, 0x3de, 0x2a30, 0x198d, 0x2cb5, 0x8389, 0x1, 0x1);
        gbc.writeMem(0xdcf2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0xdcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf2));
        EXPECT(0x64, gbc.readMem(0xdcf3));
        // CB 64 0102
        gbc.setState(0xb6a6, 0x2ba2, 0xe770, 0x8e1c, 0x7127, 0x18bd, 0x0, 0x0);
        gbc.writeMem(0xb6a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a6));
        EXPECT(0x64, gbc.readMem(0xb6a7));
        // CB 64 0103
        gbc.setState(0x1363, 0x949, 0x28b0, 0xac41, 0x7f94, 0xa4a7, 0x1, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0x1365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0104
        gbc.setState(0x687f, 0x10fb, 0x7320, 0x1459, 0x6718, 0x1f, 0x1, 0x0);
        gbc.writeMem(0x687f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x6881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0105
        gbc.setState(0xb77d, 0xc722, 0x54b0, 0x94fc, 0x1272, 0xd91c, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0xb77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77d));
        EXPECT(0x64, gbc.readMem(0xb77e));
        // CB 64 0106
        gbc.setState(0x8e93, 0xc721, 0xeba0, 0x1bc3, 0xb82e, 0x533a, 0x0, 0x0);
        gbc.writeMem(0x8e93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc721, gbc.sp());
        EXPECT(0x8e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e93));
        EXPECT(0x64, gbc.readMem(0x8e94));
        // CB 64 0107
        gbc.setState(0xb79a, 0x65e5, 0x1730, 0x375b, 0x8145, 0xf3f2, 0x1, 0x1);
        gbc.writeMem(0xb79a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x65e5, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0x64, gbc.readMem(0xb79b));
        // CB 64 0108
        gbc.setState(0xb7ac, 0xdcb7, 0x98c0, 0xfc1d, 0x3e98, 0x2291, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0xb7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ac));
        EXPECT(0x64, gbc.readMem(0xb7ad));
        // CB 64 0109
        gbc.setState(0x3c05, 0xd363, 0x3eb0, 0x505, 0xc6e2, 0x40f, 0x1, 0x0);
        gbc.writeMem(0x3c05, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd363, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 010A
        gbc.setState(0x2d98, 0x22b4, 0x5940, 0x663d, 0x4be1, 0x24e7, 0x1, 0x1);
        gbc.writeMem(0x2d98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 010B
        gbc.setState(0xa1e7, 0x5c97, 0x78a0, 0xaede, 0x2bdf, 0xe0d0, 0x1, 0x0);
        gbc.writeMem(0xa1e7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5c97, gbc.sp());
        EXPECT(0xa1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e7));
        EXPECT(0x64, gbc.readMem(0xa1e8));
        // CB 64 010C
        gbc.setState(0x9061, 0x3b13, 0xf1c0, 0x2a73, 0x6daa, 0x3238, 0x1, 0x1);
        gbc.writeMem(0x9061, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3b13, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9061));
        EXPECT(0x64, gbc.readMem(0x9062));
        // CB 64 010D
        gbc.setState(0x8590, 0xa3e, 0xcbc0, 0xa41b, 0x14d1, 0xc2d3, 0x1, 0x1);
        gbc.writeMem(0x8590, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x8592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8590));
        EXPECT(0x64, gbc.readMem(0x8591));
        // CB 64 010E
        gbc.setState(0x6879, 0xcf87, 0x66a0, 0xbefb, 0x9e6d, 0x6157, 0x1, 0x1);
        gbc.writeMem(0x6879, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcf87, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 010F
        gbc.setState(0xd903, 0xfc1f, 0xa490, 0xfc4b, 0xe887, 0xd6d4, 0x1, 0x0);
        gbc.writeMem(0xd903, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfc1f, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd903));
        EXPECT(0x64, gbc.readMem(0xd904));
        // CB 64 0111
        gbc.setState(0xd331, 0xc245, 0x2230, 0xd892, 0x713b, 0x564b, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x64, gbc.readMem(0xd332));
        // CB 64 0112
        gbc.setState(0x6e90, 0x795f, 0x84d0, 0xaa27, 0xed06, 0xd31a, 0x0, 0x0);
        gbc.writeMem(0x6e90, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x6e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0113
        gbc.setState(0x7b92, 0xf892, 0x67d0, 0xa568, 0x8e78, 0x10c7, 0x1, 0x0);
        gbc.writeMem(0x7b92, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf892, gbc.sp());
        EXPECT(0x7b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0114
        gbc.setState(0xd429, 0x8517, 0x7630, 0xc366, 0x55b7, 0x7d94, 0x0, 0x0);
        gbc.writeMem(0xd429, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8517, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd429));
        EXPECT(0x64, gbc.readMem(0xd42a));
        // CB 64 0115
        gbc.setState(0xa911, 0xc95a, 0x1ae0, 0xf7f0, 0x2df, 0x58c5, 0x1, 0x0);
        gbc.writeMem(0xa911, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0xa913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa911));
        EXPECT(0x64, gbc.readMem(0xa912));
        // CB 64 0116
        gbc.setState(0x4d15, 0xf628, 0xa290, 0x2f84, 0x3ff1, 0xa93b, 0x0, 0x1);
        gbc.writeMem(0x4d15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0117
        gbc.setState(0xd2f6, 0x1540, 0x97d0, 0x52b7, 0x3074, 0x4689, 0x1, 0x1);
        gbc.writeMem(0xd2f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f6));
        EXPECT(0x64, gbc.readMem(0xd2f7));
        // CB 64 0118
        gbc.setState(0x3a7f, 0x6c70, 0xcf30, 0x605e, 0x1b5c, 0xc6c7, 0x0, 0x1);
        gbc.writeMem(0x3a7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6c70, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0119
        gbc.setState(0xe6e8, 0x337d, 0x1d30, 0x6568, 0xf0b0, 0xa3c0, 0x1, 0x0);
        gbc.writeMem(0xe6e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e8));
        EXPECT(0x64, gbc.readMem(0xe6e9));
        // CB 64 011A
        gbc.setState(0x865b, 0x246b, 0xb5c0, 0xc9e0, 0xf31c, 0xb59e, 0x0, 0x1);
        gbc.writeMem(0x865b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x246b, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865b));
        EXPECT(0x64, gbc.readMem(0x865c));
        // CB 64 011B
        gbc.setState(0x5ebd, 0xd4e2, 0xf860, 0x7d1d, 0x4158, 0x7661, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd4e2, gbc.sp());
        EXPECT(0x5ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 011C
        gbc.setState(0xa099, 0x22af, 0xea60, 0xdaa1, 0x3300, 0xc6b6, 0x1, 0x0);
        gbc.writeMem(0xa099, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x22af, gbc.sp());
        EXPECT(0xa09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa099));
        EXPECT(0x64, gbc.readMem(0xa09a));
        // CB 64 011D
        gbc.setState(0x8501, 0x900e, 0x96b0, 0x370f, 0x541f, 0x9ca8, 0x1, 0x0);
        gbc.writeMem(0x8501, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0x8503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8501));
        EXPECT(0x64, gbc.readMem(0x8502));
        // CB 64 011E
        gbc.setState(0xb7ef, 0x21f2, 0x7150, 0x664d, 0xe4f1, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0xb7ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x21f2, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ef));
        EXPECT(0x64, gbc.readMem(0xb7f0));
        // CB 64 011F
        gbc.setState(0x1fd9, 0x9a78, 0xe640, 0x9130, 0x1d06, 0xee51, 0x1, 0x1);
        gbc.writeMem(0x1fd9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9a78, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0120
        gbc.setState(0xa866, 0x6ace, 0x9e60, 0xbdf8, 0x410d, 0xd5c2, 0x0, 0x1);
        gbc.writeMem(0xa866, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6ace, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa866));
        EXPECT(0x64, gbc.readMem(0xa867));
        // CB 64 0121
        gbc.setState(0x24c1, 0xa5fb, 0x7180, 0x796d, 0xa62e, 0x381e, 0x0, 0x1);
        gbc.writeMem(0x24c1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa5fb, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0122
        gbc.setState(0x84fc, 0x6838, 0x80d0, 0xa61, 0x785, 0x1916, 0x1, 0x0);
        gbc.writeMem(0x84fc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6838, gbc.sp());
        EXPECT(0x84fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fc));
        EXPECT(0x64, gbc.readMem(0x84fd));
        // CB 64 0123
        gbc.setState(0x706e, 0xc66f, 0xc2a0, 0xec97, 0x6dc3, 0xcce6, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0124
        gbc.setState(0xc6e4, 0x59de, 0x1c0, 0x106b, 0xa11c, 0xd999, 0x1, 0x1);
        gbc.writeMem(0xc6e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x59de, gbc.sp());
        EXPECT(0xc6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e4));
        EXPECT(0x64, gbc.readMem(0xc6e5));
        // CB 64 0125
        gbc.setState(0x3b10, 0xdf8a, 0xce0, 0xa572, 0x4c1e, 0xa749, 0x0, 0x0);
        gbc.writeMem(0x3b10, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdf8a, gbc.sp());
        EXPECT(0x3b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0126
        gbc.setState(0xdc7f, 0x4977, 0x1a50, 0x4d45, 0xda09, 0x1765, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4977, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x64, gbc.readMem(0xdc80));
        // CB 64 0127
        gbc.setState(0xb78f, 0x8551, 0xec70, 0x2379, 0x5c40, 0xb62b, 0x0, 0x0);
        gbc.writeMem(0xb78f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0xb791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78f));
        EXPECT(0x64, gbc.readMem(0xb790));
        // CB 64 0128
        gbc.setState(0xc0e6, 0xdd7b, 0xdd90, 0x9c79, 0x56e4, 0xe4bf, 0x1, 0x1);
        gbc.writeMem(0xc0e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdd7b, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e6));
        EXPECT(0x64, gbc.readMem(0xc0e7));
        // CB 64 0129
        gbc.setState(0xe81c, 0x3b57, 0xb050, 0x9fda, 0x3635, 0xdf96, 0x1, 0x1);
        gbc.writeMem(0xe81c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3b57, gbc.sp());
        EXPECT(0xe81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81c));
        EXPECT(0x64, gbc.readMem(0xe81d));
        // CB 64 012A
        gbc.setState(0x4cda, 0x6c4e, 0xc660, 0xe27c, 0x453b, 0xd9e4, 0x0, 0x1);
        gbc.writeMem(0x4cda, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6c4e, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 012B
        gbc.setState(0x4fea, 0x252b, 0x5730, 0x916e, 0xe266, 0x429, 0x1, 0x1);
        gbc.writeMem(0x4fea, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x252b, gbc.sp());
        EXPECT(0x4fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 012C
        gbc.setState(0x62bb, 0x458c, 0x3050, 0x133b, 0xabb1, 0xfef7, 0x0, 0x0);
        gbc.writeMem(0x62bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0x62bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 012D
        gbc.setState(0x950, 0x7cbb, 0x3e90, 0x6869, 0xdf7f, 0xba60, 0x1, 0x1);
        gbc.writeMem(0x950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7cbb, gbc.sp());
        EXPECT(0x952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 012E
        gbc.setState(0x79, 0x7543, 0xb6a0, 0xa4dc, 0x1c47, 0xb8f6, 0x1, 0x0);
        gbc.writeMem(0x79, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0x7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 012F
        gbc.setState(0x75a6, 0x8b99, 0xc430, 0xa72d, 0xac4c, 0x2517, 0x0, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8b99, gbc.sp());
        EXPECT(0x75a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0130
        gbc.setState(0xb9d4, 0xfb27, 0x71b0, 0xa10, 0xe2c8, 0x6866, 0x1, 0x0);
        gbc.writeMem(0xb9d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0xb9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d4));
        EXPECT(0x64, gbc.readMem(0xb9d5));
        // CB 64 0131
        gbc.setState(0x118c, 0xd0b8, 0x7040, 0x9097, 0x23ec, 0xd90e, 0x1, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0132
        gbc.setState(0x269, 0x1483, 0x2f40, 0x15f9, 0x9017, 0xe81c, 0x0, 0x0);
        gbc.writeMem(0x269, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1483, gbc.sp());
        EXPECT(0x26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0134
        gbc.setState(0x1e93, 0xc1c, 0x53b0, 0x5ae1, 0xb74c, 0xbc3, 0x0, 0x0);
        gbc.writeMem(0x1e93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc1c, gbc.sp());
        EXPECT(0x1e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0135
        gbc.setState(0x1c45, 0xa45c, 0x2b70, 0xc42f, 0xda19, 0xddcf, 0x1, 0x0);
        gbc.writeMem(0x1c45, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0136
        gbc.setState(0x2027, 0x94f1, 0x29a0, 0x1d0f, 0x87b7, 0xba43, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x94f1, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0137
        gbc.setState(0x901b, 0x694c, 0x2a40, 0xea00, 0xa2b1, 0x4873, 0x1, 0x1);
        gbc.writeMem(0x901b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x901d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901b));
        EXPECT(0x64, gbc.readMem(0x901c));
        // CB 64 0138
        gbc.setState(0xe641, 0x68c6, 0xdef0, 0x58e2, 0x5edf, 0x1012, 0x0, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x68c6, gbc.sp());
        EXPECT(0xe643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe641));
        EXPECT(0x64, gbc.readMem(0xe642));
        // CB 64 0139
        gbc.setState(0x85c4, 0xdebd, 0xc7d0, 0xae3f, 0x5b2d, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x85c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdebd, gbc.sp());
        EXPECT(0x85c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c4));
        EXPECT(0x64, gbc.readMem(0x85c5));
        // CB 64 013A
        gbc.setState(0x78e7, 0xf6a2, 0x84f0, 0xa71, 0xd87a, 0xe23, 0x1, 0x0);
        gbc.writeMem(0x78e7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0x78e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 013C
        gbc.setState(0x84bf, 0xf34d, 0x1b10, 0x4fed, 0x82d2, 0x945b, 0x0, 0x1);
        gbc.writeMem(0x84bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf34d, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bf));
        EXPECT(0x64, gbc.readMem(0x84c0));
        // CB 64 013D
        gbc.setState(0x8d51, 0xc6dd, 0x9f40, 0x58f2, 0x1d06, 0x1058, 0x1, 0x0);
        gbc.writeMem(0x8d51, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc6dd, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0x64, gbc.readMem(0x8d52));
        // CB 64 013E
        gbc.setState(0x6db0, 0x3ee, 0x4890, 0xc3fd, 0xf642, 0xd730, 0x0, 0x1);
        gbc.writeMem(0x6db0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3ee, gbc.sp());
        EXPECT(0x6db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 013F
        gbc.setState(0x2575, 0xca62, 0xe5b0, 0xb48a, 0xba43, 0x9997, 0x1, 0x1);
        gbc.writeMem(0x2575, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x2577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0140
        gbc.setState(0x8d1c, 0x8413, 0xcca0, 0x6cb9, 0x3fd4, 0xa69d, 0x1, 0x0);
        gbc.writeMem(0x8d1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8413, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1c));
        EXPECT(0x64, gbc.readMem(0x8d1d));
        // CB 64 0142
        gbc.setState(0x9d83, 0x61f7, 0xa260, 0x24a1, 0xcd8c, 0x1f25, 0x1, 0x1);
        gbc.writeMem(0x9d83, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x61f7, gbc.sp());
        EXPECT(0x9d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d83));
        EXPECT(0x64, gbc.readMem(0x9d84));
        // CB 64 0143
        gbc.setState(0x91da, 0xa91e, 0x8c10, 0xb35e, 0x8e2f, 0x4009, 0x0, 0x1);
        gbc.writeMem(0x91da, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa91e, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0x64, gbc.readMem(0x91db));
        // CB 64 0144
        gbc.setState(0xd44, 0xb97b, 0x2be0, 0x3717, 0x301c, 0x2c69, 0x0, 0x0);
        gbc.writeMem(0xd44, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb97b, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0145
        gbc.setState(0x1f48, 0x66e, 0xd190, 0x4e20, 0x47f6, 0x8e9f, 0x1, 0x0);
        gbc.writeMem(0x1f48, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x66e, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0146
        gbc.setState(0xe6e6, 0xf348, 0xc6a0, 0x20b9, 0x1ee, 0xf621, 0x0, 0x0);
        gbc.writeMem(0xe6e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e6));
        EXPECT(0x64, gbc.readMem(0xe6e7));
        // CB 64 0147
        gbc.setState(0xc712, 0x70da, 0xd320, 0xf91f, 0x113c, 0xb9f, 0x0, 0x0);
        gbc.writeMem(0xc712, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x70da, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc712));
        EXPECT(0x64, gbc.readMem(0xc713));
        // CB 64 0148
        gbc.setState(0x4b42, 0xba2d, 0x1230, 0x66df, 0xbca6, 0xa69f, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xba2d, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0149
        gbc.setState(0x4eb8, 0x3ef5, 0x8360, 0xe14a, 0x56d5, 0x71ce, 0x0, 0x0);
        gbc.writeMem(0x4eb8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3ef5, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 014A
        gbc.setState(0x62b6, 0xa8dd, 0xf0b0, 0x8e80, 0xca85, 0x76b1, 0x0, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa8dd, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 014B
        gbc.setState(0x238d, 0x4d6c, 0x9e70, 0x5eaf, 0xe622, 0xe236, 0x1, 0x0);
        gbc.writeMem(0x238d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4d6c, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 014C
        gbc.setState(0xe3b1, 0x33e, 0xa8f0, 0x3105, 0x1480, 0xf9a, 0x0, 0x0);
        gbc.writeMem(0xe3b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x33e, gbc.sp());
        EXPECT(0xe3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b1));
        EXPECT(0x64, gbc.readMem(0xe3b2));
        // CB 64 014D
        gbc.setState(0xef2e, 0xb053, 0xcf50, 0x80e5, 0x654, 0xa93, 0x0, 0x0);
        gbc.writeMem(0xef2e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0xef30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2e));
        EXPECT(0x64, gbc.readMem(0xef2f));
        // CB 64 014E
        gbc.setState(0xa57, 0xf46b, 0xecf0, 0x38e7, 0x3d73, 0xf5bf, 0x1, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 014F
        gbc.setState(0x811, 0x5159, 0xfb80, 0x14ba, 0x47e7, 0xd2d3, 0x1, 0x1);
        gbc.writeMem(0x811, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0x813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0150
        gbc.setState(0x84b0, 0x196b, 0xc270, 0x2ed6, 0xe343, 0x5723, 0x1, 0x1);
        gbc.writeMem(0x84b0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b0));
        EXPECT(0x64, gbc.readMem(0x84b1));
        // CB 64 0151
        gbc.setState(0x292, 0x5370, 0xfb00, 0x55d0, 0xdbde, 0x5e18, 0x0, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5370, gbc.sp());
        EXPECT(0x294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0152
        gbc.setState(0x5e05, 0x226a, 0x95c0, 0xbd69, 0x293d, 0x78f3, 0x1, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0153
        gbc.setState(0xe8d5, 0x5ce1, 0x53a0, 0xd211, 0x797c, 0x8d92, 0x0, 0x1);
        gbc.writeMem(0xe8d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0xe8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d5));
        EXPECT(0x64, gbc.readMem(0xe8d6));
        // CB 64 0154
        gbc.setState(0x51c4, 0x8667, 0x34c0, 0x4dcf, 0xe7b, 0xc81, 0x1, 0x0);
        gbc.writeMem(0x51c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8667, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0155
        gbc.setState(0xee50, 0xbef8, 0xd2e0, 0xcd83, 0x7a1, 0xd032, 0x1, 0x0);
        gbc.writeMem(0xee50, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee50));
        EXPECT(0x64, gbc.readMem(0xee51));
        // CB 64 0157
        gbc.setState(0x75b, 0xfc88, 0xf5f0, 0x7682, 0x4e0e, 0xa394, 0x0, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0158
        gbc.setState(0x2b9d, 0xb5ac, 0xeca0, 0x6cb8, 0x472e, 0x347f, 0x1, 0x1);
        gbc.writeMem(0x2b9d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb5ac, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0159
        gbc.setState(0x9a8a, 0x704a, 0xe2e0, 0xac9f, 0xc51a, 0xd74a, 0x1, 0x1);
        gbc.writeMem(0x9a8a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0x9a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8a));
        EXPECT(0x64, gbc.readMem(0x9a8b));
        // CB 64 015B
        gbc.setState(0x525, 0x2c22, 0x9920, 0x6a05, 0xac72, 0x59a1, 0x0, 0x0);
        gbc.writeMem(0x525, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2c22, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 015C
        gbc.setState(0xb886, 0xd014, 0x2050, 0xbceb, 0x400a, 0x67ac, 0x1, 0x1);
        gbc.writeMem(0xb886, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0xb888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb886));
        EXPECT(0x64, gbc.readMem(0xb887));
        // CB 64 015D
        gbc.setState(0x227, 0x3ff9, 0x1950, 0x75f1, 0x8330, 0x7b7, 0x1, 0x1);
        gbc.writeMem(0x227, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 015E
        gbc.setState(0xb2a4, 0xd700, 0xe0a0, 0x8bcb, 0x1c7b, 0xc5fe, 0x1, 0x0);
        gbc.writeMem(0xb2a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd700, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a4));
        EXPECT(0x64, gbc.readMem(0xb2a5));
        // CB 64 015F
        gbc.setState(0x8da9, 0x2c52, 0x7930, 0xaa63, 0xbb44, 0x6564, 0x1, 0x0);
        gbc.writeMem(0x8da9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0x8dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da9));
        EXPECT(0x64, gbc.readMem(0x8daa));
        // CB 64 0160
        gbc.setState(0xfc0, 0xb267, 0xc630, 0xbc1, 0xb700, 0x2326, 0x0, 0x0);
        gbc.writeMem(0xfc0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb267, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0161
        gbc.setState(0x83d7, 0x1976, 0x2190, 0x4198, 0x2f68, 0xf802, 0x1, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d7));
        EXPECT(0x64, gbc.readMem(0x83d8));
        // CB 64 0162
        gbc.setState(0x63a6, 0x9725, 0xed00, 0x8006, 0x441a, 0xae92, 0x1, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9725, gbc.sp());
        EXPECT(0x63a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0163
        gbc.setState(0x576f, 0xbaac, 0x45f0, 0x62e6, 0x6a6b, 0xa764, 0x1, 0x0);
        gbc.writeMem(0x576f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0164
        gbc.setState(0x256, 0xcaaf, 0xbcc0, 0x7099, 0x46af, 0x95c4, 0x1, 0x1);
        gbc.writeMem(0x256, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0165
        gbc.setState(0x285e, 0x28d4, 0x4ce0, 0x9fdc, 0xa44a, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0x285e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0166
        gbc.setState(0xa5bb, 0x9210, 0xeaf0, 0x4da5, 0x115d, 0x3af2, 0x0, 0x1);
        gbc.writeMem(0xa5bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9210, gbc.sp());
        EXPECT(0xa5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bb));
        EXPECT(0x64, gbc.readMem(0xa5bc));
        // CB 64 0167
        gbc.setState(0xc7e8, 0xdd3f, 0x8b10, 0xabce, 0x29c4, 0x10c0, 0x0, 0x1);
        gbc.writeMem(0xc7e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0xc7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e8));
        EXPECT(0x64, gbc.readMem(0xc7e9));
        // CB 64 0168
        gbc.setState(0xa44e, 0x4bdc, 0x6d50, 0xb507, 0x14f2, 0xff12, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4bdc, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44e));
        EXPECT(0x64, gbc.readMem(0xa44f));
        // CB 64 0169
        gbc.setState(0xa423, 0x6541, 0xd170, 0xcc77, 0x6a6a, 0x31f2, 0x0, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0x64, gbc.readMem(0xa424));
        // CB 64 016A
        gbc.setState(0x5af6, 0x2dcf, 0xf2a0, 0xc215, 0x6838, 0x72, 0x1, 0x1);
        gbc.writeMem(0x5af6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 016B
        gbc.setState(0x8f74, 0x6047, 0xa0a0, 0xc72d, 0x4772, 0x1e6c, 0x1, 0x0);
        gbc.writeMem(0x8f74, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6047, gbc.sp());
        EXPECT(0x8f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f74));
        EXPECT(0x64, gbc.readMem(0x8f75));
        // CB 64 016C
        gbc.setState(0xd436, 0x27ed, 0xc920, 0xd9d7, 0x4972, 0xe669, 0x0, 0x1);
        gbc.writeMem(0xd436, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x27ed, gbc.sp());
        EXPECT(0xd438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd436));
        EXPECT(0x64, gbc.readMem(0xd437));
        // CB 64 016D
        gbc.setState(0x38cd, 0xb911, 0x10f0, 0xc74, 0xd38, 0x9ef0, 0x0, 0x1);
        gbc.writeMem(0x38cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb911, gbc.sp());
        EXPECT(0x38cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 016E
        gbc.setState(0xc03d, 0x77e4, 0xefe0, 0x97a0, 0x7731, 0x522c, 0x1, 0x0);
        gbc.writeMem(0xc03d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x77e4, gbc.sp());
        EXPECT(0xc03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03d));
        EXPECT(0x64, gbc.readMem(0xc03e));
        // CB 64 0170
        gbc.setState(0x30df, 0x3915, 0x3410, 0xe1da, 0xe81b, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0x30df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3915, gbc.sp());
        EXPECT(0x30e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0171
        gbc.setState(0xa233, 0x7523, 0x86c0, 0x584, 0x6e6e, 0xf557, 0x0, 0x0);
        gbc.writeMem(0xa233, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0x64, gbc.readMem(0xa234));
        // CB 64 0172
        gbc.setState(0x9467, 0xb1d3, 0xe9b0, 0xb819, 0xa179, 0x64dd, 0x1, 0x1);
        gbc.writeMem(0x9467, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9467));
        EXPECT(0x64, gbc.readMem(0x9468));
        // CB 64 0173
        gbc.setState(0xcd73, 0x5770, 0xe180, 0x717e, 0x6888, 0xc0af, 0x1, 0x0);
        gbc.writeMem(0xcd73, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd73));
        EXPECT(0x64, gbc.readMem(0xcd74));
        // CB 64 0174
        gbc.setState(0x99fb, 0x1ecf, 0xf110, 0xba23, 0x69ee, 0x5bae, 0x0, 0x1);
        gbc.writeMem(0x99fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fb));
        EXPECT(0x64, gbc.readMem(0x99fc));
        // CB 64 0175
        gbc.setState(0x440e, 0x15f8, 0x4970, 0x2b89, 0x2afc, 0xec66, 0x1, 0x0);
        gbc.writeMem(0x440e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15f8, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0176
        gbc.setState(0xa86c, 0xb72, 0x70a0, 0x4f1c, 0xd0f2, 0x7e4b, 0x0, 0x1);
        gbc.writeMem(0xa86c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb72, gbc.sp());
        EXPECT(0xa86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86c));
        EXPECT(0x64, gbc.readMem(0xa86d));
        // CB 64 0177
        gbc.setState(0x39ba, 0xcb8, 0xc2f0, 0x319c, 0x3bc2, 0xa91e, 0x0, 0x0);
        gbc.writeMem(0x39ba, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0x39bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0178
        gbc.setState(0x54b, 0xa30e, 0xe4b0, 0xe1f6, 0xbc59, 0x1d83, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0x54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0179
        gbc.setState(0x1a45, 0xcf10, 0x3720, 0xfb68, 0x8f02, 0x821f, 0x0, 0x0);
        gbc.writeMem(0x1a45, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcf10, gbc.sp());
        EXPECT(0x1a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 017A
        gbc.setState(0x34a3, 0xb083, 0xe6f0, 0x5d63, 0x30b3, 0x36a4, 0x0, 0x0);
        gbc.writeMem(0x34a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb083, gbc.sp());
        EXPECT(0x34a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 017B
        gbc.setState(0x4e9, 0x8455, 0xc010, 0x7e22, 0x8b32, 0x58ad, 0x0, 0x0);
        gbc.writeMem(0x4e9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8455, gbc.sp());
        EXPECT(0x4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 017C
        gbc.setState(0x21fd, 0x478, 0x4350, 0x24c2, 0xb81f, 0x1ad9, 0x1, 0x1);
        gbc.writeMem(0x21fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 017D
        gbc.setState(0x650f, 0xd155, 0x4dc0, 0xdbf3, 0x98af, 0xa240, 0x1, 0x1);
        gbc.writeMem(0x650f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd155, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 017E
        gbc.setState(0xcbe, 0x7549, 0x8140, 0x88b9, 0x3662, 0x688, 0x0, 0x0);
        gbc.writeMem(0xcbe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 017F
        gbc.setState(0x14e8, 0x829a, 0x2420, 0xb7f9, 0xbd02, 0xc178, 0x1, 0x1);
        gbc.writeMem(0x14e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0x14ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0180
        gbc.setState(0x6ddf, 0x28bd, 0x54a0, 0x56f9, 0x42e3, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0x6ddf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x28bd, gbc.sp());
        EXPECT(0x6de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0181
        gbc.setState(0x62f5, 0x1af8, 0x3f80, 0xd52e, 0x98f1, 0xe2e8, 0x0, 0x0);
        gbc.writeMem(0x62f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0182
        gbc.setState(0xa99e, 0xb8fe, 0xd9a0, 0x2ece, 0x8715, 0xd9da, 0x1, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb8fe, gbc.sp());
        EXPECT(0xa9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99e));
        EXPECT(0x64, gbc.readMem(0xa99f));
        // CB 64 0183
        gbc.setState(0x9021, 0xc5c2, 0x9f90, 0xb51d, 0x8af1, 0xbb39, 0x0, 0x1);
        gbc.writeMem(0x9021, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0x9023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9021));
        EXPECT(0x64, gbc.readMem(0x9022));
        // CB 64 0184
        gbc.setState(0x40e3, 0x7328, 0x5850, 0xf109, 0x5e30, 0xc295, 0x0, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0185
        gbc.setState(0x3df4, 0xa230, 0xaab0, 0xce1b, 0x99fc, 0xeb4f, 0x0, 0x1);
        gbc.writeMem(0x3df4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa230, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0187
        gbc.setState(0x5d5a, 0xe32c, 0x7590, 0x78dc, 0x8287, 0x6ab, 0x0, 0x0);
        gbc.writeMem(0x5d5a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe32c, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0188
        gbc.setState(0x985b, 0x8b1c, 0x4890, 0x5b64, 0x303, 0x179a, 0x1, 0x0);
        gbc.writeMem(0x985b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x985d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985b));
        EXPECT(0x64, gbc.readMem(0x985c));
        // CB 64 0189
        gbc.setState(0xb80c, 0xdbce, 0x980, 0xaf2, 0x1401, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0xb80c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0xb80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80c));
        EXPECT(0x64, gbc.readMem(0xb80d));
        // CB 64 018B
        gbc.setState(0xeaa6, 0x9ec3, 0x3f70, 0x710a, 0x80f8, 0x8b3, 0x1, 0x0);
        gbc.writeMem(0xeaa6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ec3, gbc.sp());
        EXPECT(0xeaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa6));
        EXPECT(0x64, gbc.readMem(0xeaa7));
        // CB 64 018C
        gbc.setState(0xe3f6, 0xbb1c, 0xd340, 0xc7e5, 0x4a80, 0xab18, 0x1, 0x0);
        gbc.writeMem(0xe3f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0xe3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f6));
        EXPECT(0x64, gbc.readMem(0xe3f7));
        // CB 64 018D
        gbc.setState(0xd3df, 0xd7b, 0x21f0, 0x61ff, 0xec19, 0xd33f, 0x0, 0x1);
        gbc.writeMem(0xd3df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0xd3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3df));
        EXPECT(0x64, gbc.readMem(0xd3e0));
        // CB 64 018E
        gbc.setState(0xb39f, 0xc5df, 0x6a20, 0x3e92, 0x7eb7, 0x86b2, 0x0, 0x0);
        gbc.writeMem(0xb39f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc5df, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39f));
        EXPECT(0x64, gbc.readMem(0xb3a0));
        // CB 64 018F
        gbc.setState(0xb088, 0xdb3, 0x6b30, 0x97da, 0x38d, 0xe569, 0x1, 0x0);
        gbc.writeMem(0xb088, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdb3, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb088));
        EXPECT(0x64, gbc.readMem(0xb089));
        // CB 64 0190
        gbc.setState(0xcf65, 0xca7b, 0x98b0, 0xe397, 0xa067, 0x1453, 0x1, 0x1);
        gbc.writeMem(0xcf65, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0xcf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf65));
        EXPECT(0x64, gbc.readMem(0xcf66));
        // CB 64 0191
        gbc.setState(0x7b23, 0xb4ab, 0xa960, 0xc7b3, 0x79f9, 0x4d74, 0x0, 0x0);
        gbc.writeMem(0x7b23, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb4ab, gbc.sp());
        EXPECT(0x7b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0192
        gbc.setState(0x80e, 0xea0b, 0xfd30, 0xebd0, 0x126a, 0xe45f, 0x0, 0x1);
        gbc.writeMem(0x80e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0193
        gbc.setState(0x1ad6, 0xebfc, 0xd0c0, 0x1a98, 0xa167, 0x8d98, 0x1, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xebfc, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0194
        gbc.setState(0x2fb4, 0x202f, 0xa940, 0x9cec, 0xb2fb, 0x8237, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x202f, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0195
        gbc.setState(0x358a, 0xa6d3, 0x7110, 0xccd4, 0x125c, 0x88eb, 0x1, 0x1);
        gbc.writeMem(0x358a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0x358c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0196
        gbc.setState(0xdc1, 0xf3e2, 0x3ff0, 0xada7, 0xeff9, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xdc1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0197
        gbc.setState(0xd1a9, 0xd357, 0x860, 0x6bc6, 0x826f, 0x66ce, 0x0, 0x1);
        gbc.writeMem(0xd1a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd357, gbc.sp());
        EXPECT(0xd1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a9));
        EXPECT(0x64, gbc.readMem(0xd1aa));
        // CB 64 0198
        gbc.setState(0xc6aa, 0xbc79, 0xe9f0, 0x6d7a, 0xf66, 0x8b43, 0x0, 0x0);
        gbc.writeMem(0xc6aa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbc79, gbc.sp());
        EXPECT(0xc6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6aa));
        EXPECT(0x64, gbc.readMem(0xc6ab));
        // CB 64 0199
        gbc.setState(0xe735, 0x1d02, 0x59d0, 0xf97e, 0xe91f, 0xec6b, 0x0, 0x0);
        gbc.writeMem(0xe735, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1d02, gbc.sp());
        EXPECT(0xe737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe735));
        EXPECT(0x64, gbc.readMem(0xe736));
        // CB 64 019B
        gbc.setState(0xaf88, 0x464c, 0x50c0, 0x721b, 0x7a5a, 0x4534, 0x1, 0x1);
        gbc.writeMem(0xaf88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x464c, gbc.sp());
        EXPECT(0xaf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf88));
        EXPECT(0x64, gbc.readMem(0xaf89));
        // CB 64 019C
        gbc.setState(0xe0d8, 0x7813, 0x1950, 0x37a7, 0x3571, 0xd881, 0x1, 0x1);
        gbc.writeMem(0xe0d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0xe0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d8));
        EXPECT(0x64, gbc.readMem(0xe0d9));
        // CB 64 019D
        gbc.setState(0x3675, 0x3c30, 0x77c0, 0xb6db, 0xe6e1, 0x8b8a, 0x0, 0x1);
        gbc.writeMem(0x3675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 019E
        gbc.setState(0x9a41, 0x9d2a, 0xf360, 0x8148, 0xdfa9, 0x936f, 0x1, 0x1);
        gbc.writeMem(0x9a41, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a41));
        EXPECT(0x64, gbc.readMem(0x9a42));
        // CB 64 019F
        gbc.setState(0x4136, 0x5ce1, 0xaa00, 0x3e60, 0xb146, 0x8de0, 0x0, 0x0);
        gbc.writeMem(0x4136, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0x4138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01A0
        gbc.setState(0xd492, 0xcd5e, 0x92e0, 0x5f36, 0xe248, 0x2548, 0x1, 0x1);
        gbc.writeMem(0xd492, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcd5e, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd492));
        EXPECT(0x64, gbc.readMem(0xd493));
        // CB 64 01A1
        gbc.setState(0xc59, 0xd70d, 0x3ec0, 0xf13d, 0xd2c5, 0x7330, 0x0, 0x0);
        gbc.writeMem(0xc59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01A2
        gbc.setState(0xd540, 0x4e1e, 0x42a0, 0x7a76, 0x1e03, 0x6ea8, 0x0, 0x0);
        gbc.writeMem(0xd540, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4e1e, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd540));
        EXPECT(0x64, gbc.readMem(0xd541));
        // CB 64 01A3
        gbc.setState(0x7c15, 0xf24c, 0xb860, 0xa7af, 0xd302, 0x2ec, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf24c, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01A4
        gbc.setState(0xdfb3, 0xb4f7, 0x4120, 0x39c1, 0xbe91, 0x952d, 0x0, 0x1);
        gbc.writeMem(0xdfb3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb4f7, gbc.sp());
        EXPECT(0xdfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb3));
        EXPECT(0x64, gbc.readMem(0xdfb4));
        // CB 64 01A5
        gbc.setState(0xa142, 0x757b, 0x8cb0, 0xbbc2, 0xff74, 0xf76b, 0x0, 0x0);
        gbc.writeMem(0xa142, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x757b, gbc.sp());
        EXPECT(0xa144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa142));
        EXPECT(0x64, gbc.readMem(0xa143));
        // CB 64 01A6
        gbc.setState(0x9705, 0xaaf0, 0x2120, 0x13ce, 0xb7ba, 0xbb60, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaaf0, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9705));
        EXPECT(0x64, gbc.readMem(0x9706));
        // CB 64 01A7
        gbc.setState(0x9b0e, 0xc99d, 0xd280, 0x7e4e, 0xbd14, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x9b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0e));
        EXPECT(0x64, gbc.readMem(0x9b0f));
        // CB 64 01A8
        gbc.setState(0x2071, 0xae99, 0x2d60, 0x58f9, 0x6aab, 0x7c1e, 0x0, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01A9
        gbc.setState(0x5369, 0x28bb, 0xe770, 0x73d8, 0xe783, 0x1888, 0x1, 0x1);
        gbc.writeMem(0x5369, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x28bb, gbc.sp());
        EXPECT(0x536b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01AA
        gbc.setState(0x4900, 0xa9f2, 0x41e0, 0x2caa, 0xde8, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa9f2, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01AB
        gbc.setState(0x8b78, 0xaddf, 0xfcb0, 0x9e8c, 0x92d3, 0xe53e, 0x1, 0x1);
        gbc.writeMem(0x8b78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaddf, gbc.sp());
        EXPECT(0x8b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b78));
        EXPECT(0x64, gbc.readMem(0x8b79));
        // CB 64 01AC
        gbc.setState(0xceef, 0x6606, 0xab10, 0x22ad, 0xdcc5, 0x6e6, 0x1, 0x0);
        gbc.writeMem(0xceef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6606, gbc.sp());
        EXPECT(0xcef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceef));
        EXPECT(0x64, gbc.readMem(0xcef0));
        // CB 64 01AD
        gbc.setState(0x48d8, 0xc583, 0x5380, 0xa7dc, 0x1e18, 0x9d71, 0x1, 0x0);
        gbc.writeMem(0x48d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01AE
        gbc.setState(0x6115, 0xbaf7, 0x4e90, 0xf9dd, 0xb32, 0x704b, 0x1, 0x0);
        gbc.writeMem(0x6115, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x6117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01B1
        gbc.setState(0xdb5b, 0x30b8, 0x23b0, 0x6dc1, 0x7edd, 0xb7c6, 0x0, 0x1);
        gbc.writeMem(0xdb5b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0xdb5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5b));
        EXPECT(0x64, gbc.readMem(0xdb5c));
        // CB 64 01B2
        gbc.setState(0x399b, 0x1cbf, 0xc800, 0x872c, 0x4c51, 0xc1ea, 0x0, 0x1);
        gbc.writeMem(0x399b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0x399d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01B3
        gbc.setState(0xd93e, 0x4aa0, 0xfdf0, 0xd186, 0xa99c, 0xd960, 0x1, 0x0);
        gbc.writeMem(0xd93e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0xd940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93e));
        EXPECT(0x64, gbc.readMem(0xd93f));
        // CB 64 01B4
        gbc.setState(0x6835, 0x3d4f, 0x2080, 0x851d, 0x276c, 0x145d, 0x0, 0x0);
        gbc.writeMem(0x6835, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3d4f, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01B5
        gbc.setState(0x3ea1, 0xc196, 0x42c0, 0x8e4b, 0xe49a, 0xc4, 0x1, 0x1);
        gbc.writeMem(0x3ea1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc196, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01B6
        gbc.setState(0x67fa, 0x9833, 0x6880, 0x3ed0, 0x5eb5, 0x8fd0, 0x1, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9833, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01B7
        gbc.setState(0xe6e8, 0xd70, 0xa4b0, 0x4986, 0xc959, 0x577a, 0x1, 0x1);
        gbc.writeMem(0xe6e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e8));
        EXPECT(0x64, gbc.readMem(0xe6e9));
        // CB 64 01B8
        gbc.setState(0x3c31, 0xdcdc, 0xffc0, 0x7cd8, 0xabc6, 0x1f0b, 0x1, 0x1);
        gbc.writeMem(0x3c31, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdcdc, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01B9
        gbc.setState(0x4318, 0x4baa, 0xec00, 0x11a, 0x6da7, 0xdc2c, 0x1, 0x1);
        gbc.writeMem(0x4318, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4baa, gbc.sp());
        EXPECT(0x431a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01BB
        gbc.setState(0x3b85, 0x39a1, 0x5290, 0xccd2, 0xe9e2, 0x8488, 0x1, 0x0);
        gbc.writeMem(0x3b85, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0x3b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01BC
        gbc.setState(0xb46e, 0x4335, 0x340, 0xc2e8, 0x6581, 0xbbd6, 0x0, 0x1);
        gbc.writeMem(0xb46e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0xb470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46e));
        EXPECT(0x64, gbc.readMem(0xb46f));
        // CB 64 01BD
        gbc.setState(0x3b41, 0xc6ee, 0xffd0, 0xafa1, 0x8de8, 0x1796, 0x0, 0x1);
        gbc.writeMem(0x3b41, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01BE
        gbc.setState(0xbffa, 0xd78a, 0x3e00, 0xe65e, 0xbccd, 0x4ed4, 0x0, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd78a, gbc.sp());
        EXPECT(0xbffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffa));
        EXPECT(0x64, gbc.readMem(0xbffb));
        // CB 64 01BF
        gbc.setState(0x8932, 0x5f16, 0x4b0, 0x7f7b, 0xe77d, 0x5852, 0x1, 0x0);
        gbc.writeMem(0x8932, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0x8934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8932));
        EXPECT(0x64, gbc.readMem(0x8933));
        // CB 64 01C0
        gbc.setState(0x4bc6, 0xa27, 0xc3c0, 0x1058, 0x9a49, 0xa0b7, 0x1, 0x0);
        gbc.writeMem(0x4bc6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa27, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01C1
        gbc.setState(0xcff2, 0xa6c7, 0x68a0, 0x31d3, 0xe61a, 0xa75e, 0x0, 0x1);
        gbc.writeMem(0xcff2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff2));
        EXPECT(0x64, gbc.readMem(0xcff3));
        // CB 64 01C2
        gbc.setState(0x92bb, 0x503, 0x1de0, 0xdf13, 0x34d4, 0xe6f9, 0x1, 0x1);
        gbc.writeMem(0x92bb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0x64, gbc.readMem(0x92bc));
        // CB 64 01C3
        gbc.setState(0x5f62, 0x158e, 0xbbe0, 0x6247, 0x9290, 0x8001, 0x0, 0x1);
        gbc.writeMem(0x5f62, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x158e, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01C4
        gbc.setState(0x88b1, 0xff93, 0x72e0, 0xd214, 0xd086, 0x227, 0x1, 0x1);
        gbc.writeMem(0x88b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0x88b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b1));
        EXPECT(0x64, gbc.readMem(0x88b2));
        // CB 64 01C5
        gbc.setState(0x1311, 0xdb96, 0x1ac0, 0x9773, 0xf6a6, 0x59d5, 0x0, 0x1);
        gbc.writeMem(0x1311, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdb96, gbc.sp());
        EXPECT(0x1313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01C6
        gbc.setState(0x103f, 0x5bd1, 0xa0d0, 0x6345, 0x3ca7, 0x8b83, 0x0, 0x0);
        gbc.writeMem(0x103f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01C7
        gbc.setState(0x3dc5, 0x2e92, 0x2aa0, 0x4fb3, 0x32f4, 0x3bf9, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01C8
        gbc.setState(0x6d52, 0xfc7e, 0x730, 0x74bd, 0xc178, 0xf539, 0x1, 0x0);
        gbc.writeMem(0x6d52, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfc7e, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01C9
        gbc.setState(0xc83b, 0x345c, 0xfc90, 0x42a8, 0x9aaa, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0xc83b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x345c, gbc.sp());
        EXPECT(0xc83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83b));
        EXPECT(0x64, gbc.readMem(0xc83c));
        // CB 64 01CA
        gbc.setState(0x935, 0x2983, 0x5c90, 0x4fd, 0x629a, 0xa73f, 0x1, 0x1);
        gbc.writeMem(0x935, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01CB
        gbc.setState(0xd0c4, 0x34a0, 0x54b0, 0x84eb, 0xe4ee, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0xd0c4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x34a0, gbc.sp());
        EXPECT(0xd0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c4));
        EXPECT(0x64, gbc.readMem(0xd0c5));
        // CB 64 01CC
        gbc.setState(0xc04, 0x9677, 0x5740, 0x7995, 0xce01, 0x42d9, 0x0, 0x0);
        gbc.writeMem(0xc04, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01CD
        gbc.setState(0xb221, 0x2921, 0x9e40, 0x7260, 0xb121, 0x7d7e, 0x0, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0x64, gbc.readMem(0xb222));
        // CB 64 01CE
        gbc.setState(0xb159, 0xfd43, 0x9220, 0x137e, 0x48d7, 0x7b64, 0x1, 0x1);
        gbc.writeMem(0xb159, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0xb15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb159));
        EXPECT(0x64, gbc.readMem(0xb15a));
        // CB 64 01CF
        gbc.setState(0x7528, 0xfd88, 0x9c30, 0x1804, 0x84f, 0xc45c, 0x1, 0x1);
        gbc.writeMem(0x7528, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x752a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01D0
        gbc.setState(0xdc4a, 0x28db, 0xd790, 0xb11, 0x814f, 0xfe36, 0x1, 0x1);
        gbc.writeMem(0xdc4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0xdc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4a));
        EXPECT(0x64, gbc.readMem(0xdc4b));
        // CB 64 01D1
        gbc.setState(0xe321, 0x60aa, 0x5be0, 0x3f5, 0x275, 0x4fb1, 0x0, 0x1);
        gbc.writeMem(0xe321, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x60aa, gbc.sp());
        EXPECT(0xe323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe321));
        EXPECT(0x64, gbc.readMem(0xe322));
        // CB 64 01D2
        gbc.setState(0xa58b, 0x20b3, 0xde30, 0xb197, 0x4763, 0x2c4e, 0x1, 0x1);
        gbc.writeMem(0xa58b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x20b3, gbc.sp());
        EXPECT(0xa58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58b));
        EXPECT(0x64, gbc.readMem(0xa58c));
        // CB 64 01D3
        gbc.setState(0xd170, 0x386f, 0x2e60, 0x5db5, 0x2f0d, 0x7a17, 0x0, 0x0);
        gbc.writeMem(0xd170, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd170));
        EXPECT(0x64, gbc.readMem(0xd171));
        // CB 64 01D4
        gbc.setState(0xe0a8, 0x2206, 0x18f0, 0x3c79, 0xcf66, 0xdaf3, 0x0, 0x0);
        gbc.writeMem(0xe0a8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a8));
        EXPECT(0x64, gbc.readMem(0xe0a9));
        // CB 64 01D5
        gbc.setState(0xce2b, 0x3bee, 0x95e0, 0x631c, 0xac8, 0x9a1, 0x1, 0x0);
        gbc.writeMem(0xce2b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3bee, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2b));
        EXPECT(0x64, gbc.readMem(0xce2c));
        // CB 64 01D6
        gbc.setState(0xc31f, 0x68df, 0xb2e0, 0xefb9, 0x5ebe, 0x7ed3, 0x0, 0x1);
        gbc.writeMem(0xc31f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0xc321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31f));
        EXPECT(0x64, gbc.readMem(0xc320));
        // CB 64 01D7
        gbc.setState(0x6f42, 0xc470, 0x7b30, 0x5f09, 0x88b4, 0xb866, 0x1, 0x0);
        gbc.writeMem(0x6f42, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc470, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01D8
        gbc.setState(0x2401, 0xc1b9, 0xd4f0, 0xe894, 0x8952, 0x6db7, 0x0, 0x1);
        gbc.writeMem(0x2401, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc1b9, gbc.sp());
        EXPECT(0x2403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01D9
        gbc.setState(0xefcd, 0xafb7, 0x42e0, 0x789f, 0xe0f3, 0x84b5, 0x1, 0x0);
        gbc.writeMem(0xefcd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xafb7, gbc.sp());
        EXPECT(0xefcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcd));
        EXPECT(0x64, gbc.readMem(0xefce));
        // CB 64 01DA
        gbc.setState(0x38d4, 0xcbf1, 0x4520, 0x6838, 0x8410, 0xf3b7, 0x0, 0x1);
        gbc.writeMem(0x38d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0x38d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01DB
        gbc.setState(0x4474, 0x4145, 0x2c30, 0x7f97, 0xab7, 0xdaf3, 0x1, 0x1);
        gbc.writeMem(0x4474, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4145, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01DC
        gbc.setState(0xde6a, 0x3849, 0x4150, 0x2c98, 0xc19d, 0x6799, 0x0, 0x0);
        gbc.writeMem(0xde6a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0xde6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6a));
        EXPECT(0x64, gbc.readMem(0xde6b));
        // CB 64 01DD
        gbc.setState(0xb45c, 0xa9f3, 0x51f0, 0xb66c, 0x36a5, 0x7436, 0x0, 0x1);
        gbc.writeMem(0xb45c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa9f3, gbc.sp());
        EXPECT(0xb45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45c));
        EXPECT(0x64, gbc.readMem(0xb45d));
        // CB 64 01DE
        gbc.setState(0x9938, 0x7ada, 0x23a0, 0xd083, 0xbf7f, 0x7799, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7ada, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9938));
        EXPECT(0x64, gbc.readMem(0x9939));
        // CB 64 01DF
        gbc.setState(0x9053, 0xd41, 0x22d0, 0x4fd9, 0xd1fc, 0x98b7, 0x0, 0x0);
        gbc.writeMem(0x9053, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd41, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9053));
        EXPECT(0x64, gbc.readMem(0x9054));
        // CB 64 01E0
        gbc.setState(0x7d11, 0x8efe, 0x11e0, 0x6c07, 0x32de, 0xc864, 0x0, 0x1);
        gbc.writeMem(0x7d11, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0x7d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01E1
        gbc.setState(0xac20, 0x4657, 0x9740, 0x366f, 0x7a40, 0x57e7, 0x0, 0x1);
        gbc.writeMem(0xac20, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0xac22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac20));
        EXPECT(0x64, gbc.readMem(0xac21));
        // CB 64 01E2
        gbc.setState(0x2663, 0xb732, 0x3220, 0x2214, 0x2af3, 0xd4c6, 0x1, 0x0);
        gbc.writeMem(0x2663, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb732, gbc.sp());
        EXPECT(0x2665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01E3
        gbc.setState(0x61dc, 0x2472, 0xe80, 0x1097, 0x1584, 0x1d5c, 0x0, 0x1);
        gbc.writeMem(0x61dc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0x61de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01E4
        gbc.setState(0x295d, 0xb186, 0xf930, 0xec82, 0x41dc, 0xf92f, 0x0, 0x0);
        gbc.writeMem(0x295d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb186, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01E5
        gbc.setState(0x9bff, 0x2820, 0x12d0, 0x2a35, 0xb2a9, 0xc7bc, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2820, gbc.sp());
        EXPECT(0x9c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bff));
        EXPECT(0x64, gbc.readMem(0x9c00));
        // CB 64 01E6
        gbc.setState(0x38f6, 0x32, 0xe6b0, 0x8c9b, 0xcd5d, 0xe0fb, 0x0, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x32, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01E8
        gbc.setState(0xdb5d, 0xf56c, 0x5600, 0xe465, 0xb1e7, 0x7910, 0x0, 0x0);
        gbc.writeMem(0xdb5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0xdb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5d));
        EXPECT(0x64, gbc.readMem(0xdb5e));
        // CB 64 01E9
        gbc.setState(0x25a0, 0xf2dd, 0x5690, 0x5f38, 0x8843, 0xabbe, 0x0, 0x0);
        gbc.writeMem(0x25a0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x25a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01EA
        gbc.setState(0x58a8, 0x3f7c, 0x7900, 0xefe9, 0x897, 0x22c7, 0x1, 0x1);
        gbc.writeMem(0x58a8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0x58aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01EB
        gbc.setState(0x62d6, 0x81b6, 0x5f10, 0x8453, 0x2d6a, 0x4925, 0x0, 0x0);
        gbc.writeMem(0x62d6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x62d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01EC
        gbc.setState(0xaa73, 0x650a, 0x4a90, 0x7a3f, 0x9b93, 0xecb, 0x1, 0x0);
        gbc.writeMem(0xaa73, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x650a, gbc.sp());
        EXPECT(0xaa75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa73));
        EXPECT(0x64, gbc.readMem(0xaa74));
        // CB 64 01ED
        gbc.setState(0x82f7, 0xeaa7, 0x9c90, 0xdaa7, 0xbc0a, 0xbe3c, 0x0, 0x1);
        gbc.writeMem(0x82f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0x82f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f7));
        EXPECT(0x64, gbc.readMem(0x82f8));
        // CB 64 01EE
        gbc.setState(0xb50e, 0x7ad2, 0xbaf0, 0xe9e7, 0xd398, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7ad2, gbc.sp());
        EXPECT(0xb510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50e));
        EXPECT(0x64, gbc.readMem(0xb50f));
        // CB 64 01EF
        gbc.setState(0xb235, 0x6bfc, 0x2a20, 0x63ab, 0xa170, 0xaa9f, 0x0, 0x1);
        gbc.writeMem(0xb235, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6bfc, gbc.sp());
        EXPECT(0xb237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb235));
        EXPECT(0x64, gbc.readMem(0xb236));
        // CB 64 01F0
        gbc.setState(0xe060, 0x9860, 0x8800, 0x522b, 0xe5e1, 0x2e1f, 0x1, 0x0);
        gbc.writeMem(0xe060, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9860, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe060));
        EXPECT(0x64, gbc.readMem(0xe061));
        // CB 64 01F1
        gbc.setState(0xdbb9, 0x1fad, 0x81c0, 0x5fe6, 0x6fb9, 0x71bf, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb9));
        EXPECT(0x64, gbc.readMem(0xdbba));
        // CB 64 01F2
        gbc.setState(0xe00f, 0xaae0, 0x3400, 0x8e9e, 0x5eda, 0x5b45, 0x0, 0x0);
        gbc.writeMem(0xe00f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaae0, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00f));
        EXPECT(0x64, gbc.readMem(0xe010));
        // CB 64 01F4
        gbc.setState(0xea02, 0x7e96, 0x6ee0, 0xcc16, 0x38b7, 0xe855, 0x1, 0x0);
        gbc.writeMem(0xea02, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea02));
        EXPECT(0x64, gbc.readMem(0xea03));
        // CB 64 01F5
        gbc.setState(0x51a3, 0xf8d1, 0x4990, 0x8538, 0xc515, 0xef9f, 0x0, 0x0);
        gbc.writeMem(0x51a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0x51a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01F6
        gbc.setState(0xba1d, 0xd02b, 0x4210, 0xd932, 0xc6da, 0x140f, 0x0, 0x0);
        gbc.writeMem(0xba1d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd02b, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0x64, gbc.readMem(0xba1e));
        // CB 64 01F7
        gbc.setState(0xcac4, 0x9d57, 0x3e70, 0xa876, 0x451, 0x9cb4, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0xcac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac4));
        EXPECT(0x64, gbc.readMem(0xcac5));
        // CB 64 01F8
        gbc.setState(0xa7ce, 0xa2e6, 0x7e30, 0x9398, 0xac62, 0xa7ae, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ce));
        EXPECT(0x64, gbc.readMem(0xa7cf));
        // CB 64 01F9
        gbc.setState(0x7b5c, 0x9b48, 0x3390, 0xa8bd, 0xb8bd, 0xe63a, 0x1, 0x1);
        gbc.writeMem(0x7b5c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9b48, gbc.sp());
        EXPECT(0x7b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01FA
        gbc.setState(0x5476, 0x69af, 0x7d30, 0x5ead, 0x9887, 0x6146, 0x0, 0x1);
        gbc.writeMem(0x5476, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x69af, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 01FB
        gbc.setState(0xa9ac, 0x79db, 0x7d80, 0xf082, 0x1b8e, 0x3754, 0x0, 0x1);
        gbc.writeMem(0xa9ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x79db, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ac));
        EXPECT(0x64, gbc.readMem(0xa9ad));
        // CB 64 01FC
        gbc.setState(0xceaa, 0xd7d3, 0x5d60, 0xaa87, 0x83ca, 0x8e6a, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd7d3, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x64, gbc.readMem(0xceab));
        // CB 64 01FD
        gbc.setState(0x50b5, 0x6df2, 0xcf40, 0x9351, 0x1796, 0x7c1f, 0x0, 0x0);
        gbc.writeMem(0x50b5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6df2, gbc.sp());
        EXPECT(0x50b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01FE
        gbc.setState(0x53fb, 0x52a9, 0xadc0, 0xee48, 0xc24a, 0x68c9, 0x0, 0x1);
        gbc.writeMem(0x53fb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x52a9, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 01FF
        gbc.setState(0x2aaf, 0x4c18, 0xd590, 0x5fe8, 0xda5b, 0x3cae, 0x0, 0x1);
        gbc.writeMem(0x2aaf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0200
        gbc.setState(0x2e16, 0xea0e, 0xa1e0, 0x8a80, 0x2425, 0xe792, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0201
        gbc.setState(0xe7e5, 0x2365, 0x300, 0x161b, 0x8c74, 0xe563, 0x0, 0x0);
        gbc.writeMem(0xe7e5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0xe7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e5));
        EXPECT(0x64, gbc.readMem(0xe7e6));
        // CB 64 0203
        gbc.setState(0xb710, 0x2def, 0x2ec0, 0x296e, 0xb67e, 0xafed, 0x0, 0x0);
        gbc.writeMem(0xb710, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2def, gbc.sp());
        EXPECT(0xb712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb710));
        EXPECT(0x64, gbc.readMem(0xb711));
        // CB 64 0204
        gbc.setState(0xd8d8, 0x28ed, 0x10, 0xa9ed, 0x5679, 0x6903, 0x1, 0x0);
        gbc.writeMem(0xd8d8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0xd8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d8));
        EXPECT(0x64, gbc.readMem(0xd8d9));
        // CB 64 0205
        gbc.setState(0xc45c, 0xb83d, 0xb60, 0xc854, 0xf71b, 0xa26b, 0x0, 0x1);
        gbc.writeMem(0xc45c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45c));
        EXPECT(0x64, gbc.readMem(0xc45d));
        // CB 64 0206
        gbc.setState(0x77c3, 0xe7f8, 0x3ea0, 0x3576, 0x37bc, 0xe182, 0x1, 0x1);
        gbc.writeMem(0x77c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0207
        gbc.setState(0x6b9e, 0xa2e4, 0x2470, 0x8afb, 0x3dd9, 0x96f, 0x1, 0x0);
        gbc.writeMem(0x6b9e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2e4, gbc.sp());
        EXPECT(0x6ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0208
        gbc.setState(0xdfb7, 0x6d77, 0x7020, 0xeb2a, 0xd5d, 0xd93b, 0x1, 0x1);
        gbc.writeMem(0xdfb7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6d77, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb7));
        EXPECT(0x64, gbc.readMem(0xdfb8));
        // CB 64 0209
        gbc.setState(0xd633, 0xc0d, 0x1770, 0x96b3, 0x41d8, 0xf7e6, 0x1, 0x0);
        gbc.writeMem(0xd633, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc0d, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd633));
        EXPECT(0x64, gbc.readMem(0xd634));
        // CB 64 020A
        gbc.setState(0xc98f, 0x75d, 0x3e70, 0x21fb, 0x110, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x75d, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98f));
        EXPECT(0x64, gbc.readMem(0xc990));
        // CB 64 020B
        gbc.setState(0x65ef, 0x5ae2, 0x4270, 0xd12b, 0x59cc, 0xe2dd, 0x0, 0x1);
        gbc.writeMem(0x65ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5ae2, gbc.sp());
        EXPECT(0x65f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 020C
        gbc.setState(0x4bf7, 0xecb, 0xf0e0, 0x9d58, 0x93ba, 0xb51b, 0x0, 0x0);
        gbc.writeMem(0x4bf7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xecb, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 020D
        gbc.setState(0x1b93, 0xd219, 0x6650, 0x8930, 0xe6e6, 0xc713, 0x0, 0x1);
        gbc.writeMem(0x1b93, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd219, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 020E
        gbc.setState(0xa7cb, 0xa995, 0xea80, 0x243, 0x4bf4, 0x4408, 0x1, 0x0);
        gbc.writeMem(0xa7cb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa995, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0x64, gbc.readMem(0xa7cc));
        // CB 64 020F
        gbc.setState(0x3da0, 0x7525, 0x4200, 0xba70, 0x22aa, 0x29e1, 0x1, 0x0);
        gbc.writeMem(0x3da0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7525, gbc.sp());
        EXPECT(0x3da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0211
        gbc.setState(0xbb9f, 0x655d, 0x3e90, 0x5482, 0x85a0, 0xa879, 0x0, 0x0);
        gbc.writeMem(0xbb9f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9f));
        EXPECT(0x64, gbc.readMem(0xbba0));
        // CB 64 0212
        gbc.setState(0x834, 0xb0c1, 0x49f0, 0x9fed, 0x94e4, 0x2326, 0x1, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb0c1, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0213
        gbc.setState(0x8d7b, 0x8979, 0x3560, 0x102c, 0x49b7, 0x5d6c, 0x0, 0x0);
        gbc.writeMem(0x8d7b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8979, gbc.sp());
        EXPECT(0x8d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7b));
        EXPECT(0x64, gbc.readMem(0x8d7c));
        // CB 64 0214
        gbc.setState(0xd81f, 0x992e, 0x3000, 0x94a8, 0x9008, 0x4300, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0x64, gbc.readMem(0xd820));
        // CB 64 0215
        gbc.setState(0x11f3, 0xe2e0, 0x9aa0, 0x7235, 0x55f5, 0x5abb, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0x11f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0216
        gbc.setState(0xc2de, 0xba47, 0x51c0, 0xefe3, 0xe8e1, 0x520f, 0x0, 0x1);
        gbc.writeMem(0xc2de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x64, gbc.readMem(0xc2df));
        // CB 64 0217
        gbc.setState(0x2bf0, 0x9da8, 0x79a0, 0xd663, 0x11e7, 0x9078, 0x0, 0x0);
        gbc.writeMem(0x2bf0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0x2bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0218
        gbc.setState(0x5fdc, 0x1866, 0xc880, 0xdcff, 0x922b, 0xaa72, 0x0, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0x5fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0219
        gbc.setState(0x398b, 0xaaac, 0xbe80, 0x7845, 0xbd22, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x398b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 021A
        gbc.setState(0xab47, 0xb308, 0x32f0, 0xa92c, 0x66b0, 0xa008, 0x1, 0x1);
        gbc.writeMem(0xab47, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb308, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab47));
        EXPECT(0x64, gbc.readMem(0xab48));
        // CB 64 021B
        gbc.setState(0x3b7c, 0x9b2a, 0x8330, 0xb3ff, 0x8d86, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0x3b7c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9b2a, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 021C
        gbc.setState(0xc505, 0xdc23, 0xa410, 0x658f, 0x8762, 0x47b0, 0x1, 0x1);
        gbc.writeMem(0xc505, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdc23, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc505));
        EXPECT(0x64, gbc.readMem(0xc506));
        // CB 64 021D
        gbc.setState(0x49cf, 0x6f46, 0xac50, 0x1820, 0x772b, 0xfc1e, 0x1, 0x0);
        gbc.writeMem(0x49cf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6f46, gbc.sp());
        EXPECT(0x49d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 021E
        gbc.setState(0x2783, 0xa922, 0x98c0, 0x5179, 0xc106, 0x4575, 0x1, 0x0);
        gbc.writeMem(0x2783, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 021F
        gbc.setState(0xd80d, 0xda40, 0x1a00, 0x8554, 0xed1b, 0xd666, 0x0, 0x0);
        gbc.writeMem(0xd80d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0xd80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80d));
        EXPECT(0x64, gbc.readMem(0xd80e));
        // CB 64 0220
        gbc.setState(0xdc97, 0xd21a, 0xdaf0, 0x4132, 0x5814, 0x5b13, 0x1, 0x0);
        gbc.writeMem(0xdc97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd21a, gbc.sp());
        EXPECT(0xdc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc97));
        EXPECT(0x64, gbc.readMem(0xdc98));
        // CB 64 0221
        gbc.setState(0x1b9, 0xe2cc, 0xfc50, 0x162b, 0x784b, 0x41b2, 0x0, 0x1);
        gbc.writeMem(0x1b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe2cc, gbc.sp());
        EXPECT(0x1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0222
        gbc.setState(0x2e5d, 0xaa7b, 0x77c0, 0xd7a8, 0xba78, 0x9247, 0x1, 0x1);
        gbc.writeMem(0x2e5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaa7b, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0223
        gbc.setState(0x8c57, 0xec72, 0x21f0, 0x6b82, 0x5c2a, 0xe0c1, 0x1, 0x0);
        gbc.writeMem(0x8c57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xec72, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0x64, gbc.readMem(0x8c58));
        // CB 64 0224
        gbc.setState(0x5886, 0xad82, 0x83f0, 0x91cb, 0xfc88, 0x12cd, 0x0, 0x1);
        gbc.writeMem(0x5886, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0225
        gbc.setState(0x9845, 0x30e8, 0x7e00, 0x8ae8, 0x84c0, 0x28eb, 0x0, 0x0);
        gbc.writeMem(0x9845, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0x9847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9845));
        EXPECT(0x64, gbc.readMem(0x9846));
        // CB 64 0226
        gbc.setState(0x3d4a, 0x6d81, 0x39a0, 0xf2fc, 0x290e, 0xaee2, 0x1, 0x0);
        gbc.writeMem(0x3d4a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x3d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0227
        gbc.setState(0xea80, 0x99c, 0xc580, 0xe76, 0xc720, 0xd0cf, 0x1, 0x0);
        gbc.writeMem(0xea80, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99c, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea80));
        EXPECT(0x64, gbc.readMem(0xea81));
        // CB 64 0228
        gbc.setState(0x6f19, 0xe258, 0xcc50, 0xfe30, 0x623c, 0x84b2, 0x1, 0x0);
        gbc.writeMem(0x6f19, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe258, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0229
        gbc.setState(0xd147, 0x62de, 0x5d60, 0xb0a4, 0xb6f2, 0x8b1c, 0x1, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd147));
        EXPECT(0x64, gbc.readMem(0xd148));
        // CB 64 022A
        gbc.setState(0xd160, 0xe0a7, 0x9b50, 0x878d, 0x6ac0, 0x7420, 0x1, 0x1);
        gbc.writeMem(0xd160, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe0a7, gbc.sp());
        EXPECT(0xd162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd160));
        EXPECT(0x64, gbc.readMem(0xd161));
        // CB 64 022B
        gbc.setState(0xbfe7, 0x5140, 0xb790, 0x3282, 0x96e7, 0x8658, 0x0, 0x1);
        gbc.writeMem(0xbfe7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5140, gbc.sp());
        EXPECT(0xbfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe7));
        EXPECT(0x64, gbc.readMem(0xbfe8));
        // CB 64 022C
        gbc.setState(0xc072, 0xd16e, 0xdf00, 0x1adc, 0xb79b, 0x2aae, 0x0, 0x0);
        gbc.writeMem(0xc072, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc072));
        EXPECT(0x64, gbc.readMem(0xc073));
        // CB 64 022D
        gbc.setState(0x1602, 0x6726, 0x26b0, 0x8d68, 0x2bb5, 0xab57, 0x0, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x1604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 022E
        gbc.setState(0x7514, 0xad85, 0x8a30, 0x75de, 0xd606, 0x5aaf, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0x7516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 022F
        gbc.setState(0x4357, 0xeda, 0x5aa0, 0x4489, 0x3819, 0x7b31, 0x0, 0x1);
        gbc.writeMem(0x4357, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0x4359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0230
        gbc.setState(0xc4e2, 0x6ad8, 0xbd80, 0x4df3, 0x8ceb, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0xc4e2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6ad8, gbc.sp());
        EXPECT(0xc4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e2));
        EXPECT(0x64, gbc.readMem(0xc4e3));
        // CB 64 0231
        gbc.setState(0xef54, 0x29f6, 0x2e0, 0x7418, 0xabd0, 0x3e8e, 0x1, 0x0);
        gbc.writeMem(0xef54, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x29f6, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef54));
        EXPECT(0x64, gbc.readMem(0xef55));
        // CB 64 0232
        gbc.setState(0x1866, 0x9e2d, 0xdcf0, 0x6700, 0xfde0, 0xb134, 0x1, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0233
        gbc.setState(0xb26, 0xc78c, 0x4df0, 0x1093, 0xb83, 0xf86e, 0x1, 0x0);
        gbc.writeMem(0xb26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0xb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0234
        gbc.setState(0xcd06, 0x677b, 0x2f90, 0x7f23, 0xd3ec, 0xabea, 0x0, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd06));
        EXPECT(0x64, gbc.readMem(0xcd07));
        // CB 64 0235
        gbc.setState(0x146b, 0xc65f, 0xe010, 0x380c, 0x6bad, 0x2cf7, 0x0, 0x1);
        gbc.writeMem(0x146b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc65f, gbc.sp());
        EXPECT(0x146d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0236
        gbc.setState(0x9110, 0xbede, 0x6120, 0xe2ca, 0x4968, 0xc78c, 0x1, 0x0);
        gbc.writeMem(0x9110, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0x9112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9110));
        EXPECT(0x64, gbc.readMem(0x9111));
        // CB 64 0237
        gbc.setState(0x3028, 0xe59d, 0x2c40, 0xd7b5, 0x7c32, 0x54ef, 0x1, 0x1);
        gbc.writeMem(0x3028, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe59d, gbc.sp());
        EXPECT(0x302a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0238
        gbc.setState(0xc2a, 0xbb97, 0xa690, 0x6752, 0xcfcc, 0xc9b, 0x1, 0x0);
        gbc.writeMem(0xc2a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbb97, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0239
        gbc.setState(0xaa57, 0x62ec, 0xe840, 0xb1a6, 0xdf91, 0xf97c, 0x0, 0x1);
        gbc.writeMem(0xaa57, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x62ec, gbc.sp());
        EXPECT(0xaa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa57));
        EXPECT(0x64, gbc.readMem(0xaa58));
        // CB 64 023A
        gbc.setState(0xca08, 0x1974, 0x29a0, 0xa18d, 0x1062, 0x472d, 0x1, 0x1);
        gbc.writeMem(0xca08, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca08));
        EXPECT(0x64, gbc.readMem(0xca09));
        // CB 64 023B
        gbc.setState(0x677f, 0x2cd5, 0xff0, 0x50e8, 0x20ba, 0xe65, 0x0, 0x1);
        gbc.writeMem(0x677f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x6781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 023C
        gbc.setState(0xaa59, 0x8930, 0x88e0, 0xb3bb, 0xde6e, 0xbc56, 0x0, 0x0);
        gbc.writeMem(0xaa59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8930, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa59));
        EXPECT(0x64, gbc.readMem(0xaa5a));
        // CB 64 023D
        gbc.setState(0x7c94, 0xb191, 0xf760, 0x7863, 0x6224, 0x8e3c, 0x1, 0x1);
        gbc.writeMem(0x7c94, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 023E
        gbc.setState(0xb489, 0xf6e1, 0xf4c0, 0xed1d, 0xfd17, 0x8f57, 0x1, 0x1);
        gbc.writeMem(0xb489, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0xb48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb489));
        EXPECT(0x64, gbc.readMem(0xb48a));
        // CB 64 0240
        gbc.setState(0x2844, 0x42ce, 0x7360, 0x16c9, 0xe5d5, 0x385a, 0x0, 0x1);
        gbc.writeMem(0x2844, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x42ce, gbc.sp());
        EXPECT(0x2846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0241
        gbc.setState(0x2625, 0x60dd, 0x2880, 0x36eb, 0xacf7, 0x269f, 0x1, 0x1);
        gbc.writeMem(0x2625, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60dd, gbc.sp());
        EXPECT(0x2627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0242
        gbc.setState(0xa539, 0x97a5, 0x2240, 0x874f, 0xbd24, 0x3877, 0x0, 0x0);
        gbc.writeMem(0xa539, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0xa53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa539));
        EXPECT(0x64, gbc.readMem(0xa53a));
        // CB 64 0243
        gbc.setState(0xcbce, 0xc8b3, 0xe910, 0x5e5d, 0x49bc, 0x92bb, 0x1, 0x1);
        gbc.writeMem(0xcbce, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc8b3, gbc.sp());
        EXPECT(0xcbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbce));
        EXPECT(0x64, gbc.readMem(0xcbcf));
        // CB 64 0244
        gbc.setState(0x7183, 0x1519, 0x950, 0x35c1, 0x8c81, 0x8bb2, 0x1, 0x0);
        gbc.writeMem(0x7183, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x7185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0245
        gbc.setState(0x945f, 0xf572, 0x9fa0, 0x5188, 0x63d6, 0xa25, 0x1, 0x0);
        gbc.writeMem(0x945f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf572, gbc.sp());
        EXPECT(0x9461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945f));
        EXPECT(0x64, gbc.readMem(0x9460));
        // CB 64 0246
        gbc.setState(0x4ff5, 0xf23b, 0xaab0, 0xc447, 0x164e, 0xb29d, 0x0, 0x1);
        gbc.writeMem(0x4ff5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0x4ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0247
        gbc.setState(0x147a, 0x3c3e, 0x5dc0, 0xb52c, 0x313d, 0x4c4a, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3c3e, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0248
        gbc.setState(0x68cb, 0x9f6a, 0x19e0, 0xc4ed, 0x68a8, 0xc350, 0x0, 0x1);
        gbc.writeMem(0x68cb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9f6a, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0249
        gbc.setState(0x35e8, 0xb9e6, 0x4580, 0xa954, 0x60fe, 0x406a, 0x0, 0x1);
        gbc.writeMem(0x35e8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 024A
        gbc.setState(0x529e, 0x61ac, 0xa2a0, 0xcf84, 0xcfcd, 0xe6c5, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x61ac, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 024B
        gbc.setState(0x50d4, 0xbab2, 0x80e0, 0xc8dd, 0xdf73, 0xf92f, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbab2, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 024C
        gbc.setState(0xe03a, 0xe0b2, 0x57e0, 0x7aa, 0xc9be, 0xf162, 0x1, 0x1);
        gbc.writeMem(0xe03a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03a));
        EXPECT(0x64, gbc.readMem(0xe03b));
        // CB 64 024D
        gbc.setState(0xe744, 0x6be3, 0xcb0, 0x5d34, 0x17e, 0x3632, 0x1, 0x1);
        gbc.writeMem(0xe744, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0xe746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe744));
        EXPECT(0x64, gbc.readMem(0xe745));
        // CB 64 024E
        gbc.setState(0xc84c, 0xdb4c, 0xaa70, 0x9743, 0x65df, 0x491e, 0x0, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0x64, gbc.readMem(0xc84d));
        // CB 64 024F
        gbc.setState(0x7f76, 0x455b, 0xeda0, 0xcbea, 0x5e8a, 0xfe2b, 0x1, 0x1);
        gbc.writeMem(0x7f76, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x455b, gbc.sp());
        EXPECT(0x7f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0250
        gbc.setState(0x58b1, 0x5c88, 0x9e90, 0xe46f, 0xd798, 0xe9ae, 0x0, 0x0);
        gbc.writeMem(0x58b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x58b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0251
        gbc.setState(0xe862, 0xf2f1, 0x46e0, 0x511e, 0x6547, 0x6b9d, 0x0, 0x1);
        gbc.writeMem(0xe862, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0xe864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe862));
        EXPECT(0x64, gbc.readMem(0xe863));
        // CB 64 0252
        gbc.setState(0xa0e, 0xf15d, 0xecd0, 0xb959, 0x92d5, 0xb2a2, 0x0, 0x0);
        gbc.writeMem(0xa0e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0xa10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0253
        gbc.setState(0xb77c, 0xf5e5, 0xe4b0, 0xb99b, 0x5e54, 0xc40e, 0x1, 0x1);
        gbc.writeMem(0xb77c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf5e5, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77c));
        EXPECT(0x64, gbc.readMem(0xb77d));
        // CB 64 0255
        gbc.setState(0x5ba7, 0x625d, 0xfc00, 0x211e, 0xd51d, 0x4dee, 0x1, 0x0);
        gbc.writeMem(0x5ba7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x625d, gbc.sp());
        EXPECT(0x5ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0256
        gbc.setState(0x6e8d, 0xb091, 0xca00, 0xf90c, 0x5d1, 0xa3a3, 0x0, 0x1);
        gbc.writeMem(0x6e8d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb091, gbc.sp());
        EXPECT(0x6e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0257
        gbc.setState(0xd071, 0xce9a, 0xd1f0, 0x24ee, 0xf25d, 0x1d8b, 0x0, 0x1);
        gbc.writeMem(0xd071, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xce9a, gbc.sp());
        EXPECT(0xd073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd071));
        EXPECT(0x64, gbc.readMem(0xd072));
        // CB 64 0258
        gbc.setState(0x45ec, 0xbe56, 0x89b0, 0xd46e, 0xf756, 0x707d, 0x0, 0x0);
        gbc.writeMem(0x45ec, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0x45ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0259
        gbc.setState(0x7114, 0x61ae, 0x6260, 0x8a90, 0x8e9b, 0x66ce, 0x0, 0x1);
        gbc.writeMem(0x7114, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x61ae, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 025A
        gbc.setState(0x6607, 0x6f27, 0x92a0, 0x4daa, 0x17ae, 0x271f, 0x1, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 025B
        gbc.setState(0xa74d, 0xcb17, 0x4000, 0x8459, 0xc82c, 0x5a6c, 0x0, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcb17, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0x64, gbc.readMem(0xa74e));
        // CB 64 025C
        gbc.setState(0x285, 0xbe9f, 0x77a0, 0xa3f6, 0x85e5, 0xff2c, 0x1, 0x0);
        gbc.writeMem(0x285, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 025D
        gbc.setState(0x2f30, 0x6e67, 0x8170, 0x1627, 0xd022, 0xe113, 0x0, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6e67, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 025E
        gbc.setState(0x985, 0x8bbe, 0x7ef0, 0xb1b2, 0x1ecb, 0xc32e, 0x1, 0x1);
        gbc.writeMem(0x985, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8bbe, gbc.sp());
        EXPECT(0x987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 025F
        gbc.setState(0x5637, 0xf215, 0x4bd0, 0xeacb, 0x793f, 0xabe2, 0x1, 0x1);
        gbc.writeMem(0x5637, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0x5639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0260
        gbc.setState(0x2689, 0xb135, 0x1d60, 0x8503, 0x919f, 0x321f, 0x0, 0x1);
        gbc.writeMem(0x2689, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb135, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0261
        gbc.setState(0x6628, 0x569a, 0xdd30, 0x2b7, 0xac83, 0x591a, 0x1, 0x0);
        gbc.writeMem(0x6628, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x569a, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0262
        gbc.setState(0xbc67, 0xc6a5, 0xc990, 0x9916, 0x65c7, 0xd27, 0x1, 0x1);
        gbc.writeMem(0xbc67, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0xbc69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc67));
        EXPECT(0x64, gbc.readMem(0xbc68));
        // CB 64 0263
        gbc.setState(0xa805, 0xa322, 0x2ac0, 0xe8a9, 0x8939, 0xa938, 0x1, 0x0);
        gbc.writeMem(0xa805, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa322, gbc.sp());
        EXPECT(0xa807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa805));
        EXPECT(0x64, gbc.readMem(0xa806));
        // CB 64 0264
        gbc.setState(0x1b7c, 0xe728, 0x9d20, 0x5a3d, 0x36d3, 0x3720, 0x1, 0x1);
        gbc.writeMem(0x1b7c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0265
        gbc.setState(0x6d1a, 0x994, 0x62e0, 0x8339, 0xe502, 0xb493, 0x1, 0x0);
        gbc.writeMem(0x6d1a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x994, gbc.sp());
        EXPECT(0x6d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0266
        gbc.setState(0xa2b9, 0x5e32, 0x8000, 0x2704, 0x10e3, 0x1b1e, 0x1, 0x0);
        gbc.writeMem(0xa2b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5e32, gbc.sp());
        EXPECT(0xa2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b9));
        EXPECT(0x64, gbc.readMem(0xa2ba));
        // CB 64 0267
        gbc.setState(0x77c, 0xa6c7, 0xec80, 0xadf5, 0xdf57, 0x7f85, 0x1, 0x0);
        gbc.writeMem(0x77c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa6c7, gbc.sp());
        EXPECT(0x77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0268
        gbc.setState(0x89a5, 0x5058, 0xffe0, 0x1e76, 0xa78e, 0xb882, 0x0, 0x0);
        gbc.writeMem(0x89a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5058, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a5));
        EXPECT(0x64, gbc.readMem(0x89a6));
        // CB 64 0269
        gbc.setState(0xa3ac, 0xf17, 0xbb90, 0xff09, 0xe1b1, 0x4f55, 0x0, 0x1);
        gbc.writeMem(0xa3ac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ac));
        EXPECT(0x64, gbc.readMem(0xa3ad));
        // CB 64 026A
        gbc.setState(0xb094, 0xbcbb, 0x77e0, 0x6e07, 0x9012, 0xd6ff, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0xb096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb094));
        EXPECT(0x64, gbc.readMem(0xb095));
        // CB 64 026B
        gbc.setState(0xb940, 0x67f4, 0xaaf0, 0x6215, 0x4203, 0x9bbb, 0x1, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb940));
        EXPECT(0x64, gbc.readMem(0xb941));
        // CB 64 026C
        gbc.setState(0xbf12, 0xea88, 0xc110, 0x5933, 0xca74, 0x2a98, 0x1, 0x1);
        gbc.writeMem(0xbf12, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xea88, gbc.sp());
        EXPECT(0xbf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf12));
        EXPECT(0x64, gbc.readMem(0xbf13));
        // CB 64 026D
        gbc.setState(0x1a86, 0xd988, 0xac00, 0x286e, 0xbcd6, 0x57c6, 0x0, 0x0);
        gbc.writeMem(0x1a86, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd988, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 026E
        gbc.setState(0xc236, 0xc60a, 0x85a0, 0x867f, 0x85, 0xdf1b, 0x0, 0x1);
        gbc.writeMem(0xc236, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0xc238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc236));
        EXPECT(0x64, gbc.readMem(0xc237));
        // CB 64 026F
        gbc.setState(0x3402, 0x85fb, 0x6150, 0xf635, 0xc982, 0x5ce5, 0x0, 0x0);
        gbc.writeMem(0x3402, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x3404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0270
        gbc.setState(0x4c55, 0x301b, 0xe390, 0xfd85, 0xd0bb, 0x8775, 0x0, 0x1);
        gbc.writeMem(0x4c55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x301b, gbc.sp());
        EXPECT(0x4c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0271
        gbc.setState(0x6814, 0xee41, 0xe3c0, 0xd1ec, 0x47a0, 0xdec2, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xee41, gbc.sp());
        EXPECT(0x6816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0272
        gbc.setState(0xabd9, 0x9448, 0x390, 0x8b20, 0x1a9a, 0xd86e, 0x0, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0xabdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd9));
        EXPECT(0x64, gbc.readMem(0xabda));
        // CB 64 0273
        gbc.setState(0xc2e0, 0x321c, 0x7f40, 0xb126, 0xb968, 0x382d, 0x0, 0x1);
        gbc.writeMem(0xc2e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x321c, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e0));
        EXPECT(0x64, gbc.readMem(0xc2e1));
        // CB 64 0274
        gbc.setState(0x2898, 0xb8ff, 0xe50, 0xb790, 0x98f3, 0x443c, 0x1, 0x1);
        gbc.writeMem(0x2898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb8ff, gbc.sp());
        EXPECT(0x289a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0275
        gbc.setState(0x5149, 0x701f, 0xd680, 0x9be3, 0xbaa0, 0x9266, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0276
        gbc.setState(0x86e, 0xecb2, 0xa8a0, 0x6690, 0x1deb, 0xed73, 0x1, 0x0);
        gbc.writeMem(0x86e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xecb2, gbc.sp());
        EXPECT(0x870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0277
        gbc.setState(0x53db, 0x15de, 0xd680, 0xf8a2, 0x52e, 0x9851, 0x1, 0x1);
        gbc.writeMem(0x53db, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0278
        gbc.setState(0xb417, 0xd085, 0x3c0, 0x9c54, 0x49cf, 0xe01, 0x0, 0x1);
        gbc.writeMem(0xb417, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0xb419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb417));
        EXPECT(0x64, gbc.readMem(0xb418));
        // CB 64 0279
        gbc.setState(0x6327, 0xc2e2, 0x8150, 0x347b, 0x4ca1, 0x3211, 0x0, 0x0);
        gbc.writeMem(0x6327, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 027A
        gbc.setState(0x97, 0xa82, 0x4820, 0x4a35, 0xc7, 0x1f05, 0x0, 0x0);
        gbc.writeMem(0x97, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa82, gbc.sp());
        EXPECT(0x99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 027B
        gbc.setState(0x9cd4, 0x38c, 0xef80, 0xa1b6, 0x6c9a, 0x83d, 0x0, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x38c, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0x64, gbc.readMem(0x9cd5));
        // CB 64 027C
        gbc.setState(0x5c94, 0xa9ff, 0xd290, 0x8f6d, 0x39ec, 0x5eca, 0x1, 0x0);
        gbc.writeMem(0x5c94, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x5c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 027D
        gbc.setState(0xfc, 0x4449, 0xb4e0, 0x1fda, 0x13ad, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0xfc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4449, gbc.sp());
        EXPECT(0xfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 027E
        gbc.setState(0x95f7, 0xdec1, 0x2a70, 0x25d6, 0xe78a, 0x86b7, 0x1, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdec1, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f7));
        EXPECT(0x64, gbc.readMem(0x95f8));
        // CB 64 027F
        gbc.setState(0xb0b7, 0xa714, 0x8cf0, 0x7959, 0x442b, 0xe4c0, 0x0, 0x1);
        gbc.writeMem(0xb0b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0xb0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b7));
        EXPECT(0x64, gbc.readMem(0xb0b8));
        // CB 64 0280
        gbc.setState(0x8d0d, 0xe434, 0xd4e0, 0xa9e2, 0x5df2, 0xefec, 0x0, 0x1);
        gbc.writeMem(0x8d0d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0x8d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0d));
        EXPECT(0x64, gbc.readMem(0x8d0e));
        // CB 64 0282
        gbc.setState(0x4e0, 0xb122, 0xa4b0, 0x2739, 0x2bc0, 0xb6de, 0x1, 0x1);
        gbc.writeMem(0x4e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0283
        gbc.setState(0xe768, 0x7856, 0x1510, 0xcbfd, 0x3435, 0x25f4, 0x1, 0x1);
        gbc.writeMem(0xe768, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7856, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe768));
        EXPECT(0x64, gbc.readMem(0xe769));
        // CB 64 0284
        gbc.setState(0x47a3, 0x6871, 0x95e0, 0xd8b8, 0xf8a1, 0x78f0, 0x0, 0x1);
        gbc.writeMem(0x47a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6871, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0285
        gbc.setState(0x2c7e, 0xbc4b, 0x6700, 0xb02f, 0xc0f0, 0xd421, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0286
        gbc.setState(0xa056, 0x6636, 0x7260, 0xf77e, 0x24fd, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6636, gbc.sp());
        EXPECT(0xa058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa056));
        EXPECT(0x64, gbc.readMem(0xa057));
        // CB 64 0287
        gbc.setState(0x9ee6, 0xfc6c, 0xc140, 0x13b1, 0xa1b8, 0x8d57, 0x0, 0x0);
        gbc.writeMem(0x9ee6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0x9ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee6));
        EXPECT(0x64, gbc.readMem(0x9ee7));
        // CB 64 0288
        gbc.setState(0x7690, 0xbb98, 0xea80, 0x2da6, 0x7e30, 0xd6f4, 0x1, 0x0);
        gbc.writeMem(0x7690, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbb98, gbc.sp());
        EXPECT(0x7692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0289
        gbc.setState(0x78, 0x3246, 0xe520, 0xe192, 0x7e2d, 0x68ad, 0x1, 0x1);
        gbc.writeMem(0x78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3246, gbc.sp());
        EXPECT(0x7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 028A
        gbc.setState(0xcc07, 0x5e15, 0xd9c0, 0xdfc6, 0xab92, 0xbcb2, 0x1, 0x1);
        gbc.writeMem(0xcc07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5e15, gbc.sp());
        EXPECT(0xcc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc07));
        EXPECT(0x64, gbc.readMem(0xcc08));
        // CB 64 028B
        gbc.setState(0xd51e, 0xffb3, 0x8610, 0xe804, 0x179b, 0xba9b, 0x0, 0x1);
        gbc.writeMem(0xd51e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51e));
        EXPECT(0x64, gbc.readMem(0xd51f));
        // CB 64 028C
        gbc.setState(0xdb56, 0x5dff, 0xb30, 0x92f2, 0xb585, 0xd084, 0x1, 0x0);
        gbc.writeMem(0xdb56, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5dff, gbc.sp());
        EXPECT(0xdb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb56));
        EXPECT(0x64, gbc.readMem(0xdb57));
        // CB 64 028D
        gbc.setState(0x30da, 0xe38a, 0x3e00, 0xbdc, 0xafe8, 0xc518, 0x0, 0x0);
        gbc.writeMem(0x30da, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe38a, gbc.sp());
        EXPECT(0x30dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 028E
        gbc.setState(0xc8a9, 0x9644, 0x7ea0, 0x2fc4, 0x8250, 0xed42, 0x1, 0x0);
        gbc.writeMem(0xc8a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9644, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a9));
        EXPECT(0x64, gbc.readMem(0xc8aa));
        // CB 64 028F
        gbc.setState(0xe693, 0xd7e2, 0x6a80, 0xdc43, 0x195, 0x3f21, 0x1, 0x0);
        gbc.writeMem(0xe693, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0xe695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe693));
        EXPECT(0x64, gbc.readMem(0xe694));
        // CB 64 0290
        gbc.setState(0x61c3, 0xc1c4, 0xea30, 0xf879, 0xbe3c, 0x7ef, 0x0, 0x0);
        gbc.writeMem(0x61c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc1c4, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0291
        gbc.setState(0x8f98, 0x8513, 0xece0, 0x49a2, 0x1da9, 0x2925, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8513, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f98));
        EXPECT(0x64, gbc.readMem(0x8f99));
        // CB 64 0292
        gbc.setState(0xdbf7, 0xa564, 0x2090, 0xbeb, 0x3457, 0x294c, 0x1, 0x0);
        gbc.writeMem(0xdbf7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa564, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf7));
        EXPECT(0x64, gbc.readMem(0xdbf8));
        // CB 64 0293
        gbc.setState(0x7dd7, 0xd3d9, 0xe9f0, 0xd5aa, 0x6e86, 0xdbb1, 0x0, 0x0);
        gbc.writeMem(0x7dd7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0x7dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0294
        gbc.setState(0x96f5, 0xbcc8, 0x1fb0, 0x3b8b, 0xb7c1, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x96f5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbcc8, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f5));
        EXPECT(0x64, gbc.readMem(0x96f6));
        // CB 64 0295
        gbc.setState(0x9f0b, 0x56ef, 0x22d0, 0xfe4f, 0x37a2, 0x8e3b, 0x0, 0x0);
        gbc.writeMem(0x9f0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x56ef, gbc.sp());
        EXPECT(0x9f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0b));
        EXPECT(0x64, gbc.readMem(0x9f0c));
        // CB 64 0296
        gbc.setState(0x3ba6, 0x3b02, 0xb250, 0x3db8, 0xba6b, 0x5fd3, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0297
        gbc.setState(0xebbf, 0x9a63, 0x7880, 0xf9c1, 0x15e6, 0x8f81, 0x0, 0x1);
        gbc.writeMem(0xebbf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9a63, gbc.sp());
        EXPECT(0xebc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbf));
        EXPECT(0x64, gbc.readMem(0xebc0));
        // CB 64 0298
        gbc.setState(0xd950, 0x698a, 0xcb30, 0xd791, 0x6b12, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xd950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x698a, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd950));
        EXPECT(0x64, gbc.readMem(0xd951));
        // CB 64 0299
        gbc.setState(0x454d, 0xb038, 0xbf10, 0x9158, 0x82c0, 0xa0c8, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb038, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 029A
        gbc.setState(0x9af9, 0x2695, 0xaf30, 0xf58f, 0xe80a, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0x9af9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2695, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af9));
        EXPECT(0x64, gbc.readMem(0x9afa));
        // CB 64 029C
        gbc.setState(0xe959, 0xac76, 0xbba0, 0x84e, 0x41bc, 0xd90b, 0x0, 0x0);
        gbc.writeMem(0xe959, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe959));
        EXPECT(0x64, gbc.readMem(0xe95a));
        // CB 64 029D
        gbc.setState(0x912b, 0x2710, 0x8540, 0x3865, 0xd70e, 0x2c62, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0x912d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912b));
        EXPECT(0x64, gbc.readMem(0x912c));
        // CB 64 029E
        gbc.setState(0xa598, 0xbf6, 0xefb0, 0x81c3, 0xa61c, 0x5e21, 0x0, 0x1);
        gbc.writeMem(0xa598, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbf6, gbc.sp());
        EXPECT(0xa59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa598));
        EXPECT(0x64, gbc.readMem(0xa599));
        // CB 64 029F
        gbc.setState(0x116b, 0xce60, 0xe950, 0x5ba9, 0xc3dc, 0x4382, 0x1, 0x0);
        gbc.writeMem(0x116b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xce60, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A0
        gbc.setState(0xd332, 0x40b9, 0xb330, 0x9f2f, 0xaeb9, 0x6560, 0x1, 0x1);
        gbc.writeMem(0xd332, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x40b9, gbc.sp());
        EXPECT(0xd334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd332));
        EXPECT(0x64, gbc.readMem(0xd333));
        // CB 64 02A2
        gbc.setState(0x28b9, 0x440e, 0x4710, 0x3a9b, 0x3631, 0xb3e6, 0x0, 0x1);
        gbc.writeMem(0x28b9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x440e, gbc.sp());
        EXPECT(0x28bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A3
        gbc.setState(0x2009, 0xa5d8, 0xc020, 0x8bbe, 0xa53b, 0xbbcd, 0x1, 0x0);
        gbc.writeMem(0x2009, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa5d8, gbc.sp());
        EXPECT(0x200b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02A4
        gbc.setState(0x2cc4, 0x1e34, 0xd810, 0x63e0, 0xe3bc, 0xd2de, 0x0, 0x0);
        gbc.writeMem(0x2cc4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x2cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A5
        gbc.setState(0x505b, 0x6d23, 0x2c00, 0xb313, 0xcbb1, 0xf6ce, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0x505d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02A6
        gbc.setState(0x7831, 0xc0d4, 0xf950, 0x36da, 0xea0d, 0x2b6f, 0x1, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc0d4, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A7
        gbc.setState(0xa4b, 0x6ca1, 0x790, 0xa958, 0x5146, 0x867d, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6ca1, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A8
        gbc.setState(0x589a, 0xa0d1, 0x5e90, 0x550c, 0xfcd9, 0x5af2, 0x1, 0x1);
        gbc.writeMem(0x589a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa0d1, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02A9
        gbc.setState(0xf0d, 0x6396, 0xc240, 0x7902, 0x8052, 0xccbb, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02AA
        gbc.setState(0x4054, 0x9cd0, 0xcf20, 0xec26, 0x416e, 0xdab4, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9cd0, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02AB
        gbc.setState(0x8429, 0x2dc8, 0xb540, 0x4760, 0xb845, 0xf676, 0x1, 0x0);
        gbc.writeMem(0x8429, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2dc8, gbc.sp());
        EXPECT(0x842b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8429));
        EXPECT(0x64, gbc.readMem(0x842a));
        // CB 64 02AC
        gbc.setState(0xae67, 0x8148, 0x3fd0, 0xc6a0, 0x9afd, 0xa328, 0x1, 0x1);
        gbc.writeMem(0xae67, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8148, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae67));
        EXPECT(0x64, gbc.readMem(0xae68));
        // CB 64 02AD
        gbc.setState(0x6950, 0x19ec, 0x2490, 0x2471, 0x117e, 0x71a0, 0x1, 0x0);
        gbc.writeMem(0x6950, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x19ec, gbc.sp());
        EXPECT(0x6952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02AE
        gbc.setState(0xaa24, 0xd9aa, 0x5130, 0xaeca, 0xac93, 0x7515, 0x1, 0x1);
        gbc.writeMem(0xaa24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa24));
        EXPECT(0x64, gbc.readMem(0xaa25));
        // CB 64 02AF
        gbc.setState(0x6bbb, 0x9499, 0x9af0, 0xd506, 0x47a8, 0x6e48, 0x0, 0x1);
        gbc.writeMem(0x6bbb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9499, gbc.sp());
        EXPECT(0x6bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02B0
        gbc.setState(0xd4d, 0xb60b, 0xa6e0, 0x55f2, 0x18ba, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02B1
        gbc.setState(0x1928, 0xb99e, 0x7bc0, 0xf1e2, 0xb824, 0x1472, 0x0, 0x1);
        gbc.writeMem(0x1928, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb99e, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02B2
        gbc.setState(0x4737, 0xfbbb, 0x3430, 0xff4c, 0xb2e6, 0x7605, 0x1, 0x0);
        gbc.writeMem(0x4737, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02B3
        gbc.setState(0x52b8, 0x46ce, 0xbc80, 0x36f2, 0xa30c, 0xd2b6, 0x0, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02B4
        gbc.setState(0x9679, 0xdd77, 0xd170, 0xe8d8, 0x7917, 0xc25a, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0x64, gbc.readMem(0x967a));
        // CB 64 02B5
        gbc.setState(0x7ce2, 0xfe43, 0xdd00, 0x2c0f, 0x7c25, 0xf76d, 0x0, 0x0);
        gbc.writeMem(0x7ce2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0x7ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02B6
        gbc.setState(0x3fa0, 0x7c62, 0x6c70, 0x8ba2, 0xf462, 0xd9b9, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02B7
        gbc.setState(0x9632, 0x3378, 0xdeb0, 0xb16b, 0xdd6f, 0x3f48, 0x0, 0x0);
        gbc.writeMem(0x9632, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3378, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9632));
        EXPECT(0x64, gbc.readMem(0x9633));
        // CB 64 02B8
        gbc.setState(0x4829, 0x865c, 0xc980, 0xd2d, 0xa2aa, 0x7167, 0x0, 0x0);
        gbc.writeMem(0x4829, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x865c, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02B9
        gbc.setState(0x8f3, 0x92e6, 0xc680, 0x61ed, 0x58b3, 0x8c51, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x92e6, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02BA
        gbc.setState(0xe8c3, 0x6b13, 0xe970, 0xf0be, 0x3880, 0x36b7, 0x0, 0x1);
        gbc.writeMem(0xe8c3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6b13, gbc.sp());
        EXPECT(0xe8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c3));
        EXPECT(0x64, gbc.readMem(0xe8c4));
        // CB 64 02BB
        gbc.setState(0xe873, 0x1459, 0x4660, 0x2d5a, 0x4c73, 0x3b41, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe873));
        EXPECT(0x64, gbc.readMem(0xe874));
        // CB 64 02BC
        gbc.setState(0xd737, 0x2c4f, 0x1920, 0x45e4, 0x9f44, 0xfce6, 0x1, 0x0);
        gbc.writeMem(0xd737, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2c4f, gbc.sp());
        EXPECT(0xd739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd737));
        EXPECT(0x64, gbc.readMem(0xd738));
        // CB 64 02BD
        gbc.setState(0x8bc2, 0x2f40, 0x3370, 0xcaed, 0xc2c8, 0x6a6b, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2f40, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x64, gbc.readMem(0x8bc3));
        // CB 64 02BE
        gbc.setState(0x4abe, 0x8b11, 0x6900, 0x39e9, 0xbcb9, 0xddfd, 0x0, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8b11, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02BF
        gbc.setState(0xce24, 0x343d, 0xa070, 0xf4e1, 0x168f, 0xc5a6, 0x0, 0x0);
        gbc.writeMem(0xce24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce24));
        EXPECT(0x64, gbc.readMem(0xce25));
        // CB 64 02C0
        gbc.setState(0xdc8, 0xbf76, 0x1b10, 0xee37, 0xd623, 0x4bab, 0x1, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbf76, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02C2
        gbc.setState(0x8405, 0x5d4f, 0xa30, 0xfb88, 0x165b, 0x468e, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5d4f, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8405));
        EXPECT(0x64, gbc.readMem(0x8406));
        // CB 64 02C3
        gbc.setState(0xd376, 0x8c1b, 0xd780, 0xc0d9, 0xc23, 0xdcb1, 0x1, 0x1);
        gbc.writeMem(0xd376, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0xd378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd376));
        EXPECT(0x64, gbc.readMem(0xd377));
        // CB 64 02C4
        gbc.setState(0xccfa, 0xc248, 0xc880, 0xedd2, 0x5576, 0x5723, 0x1, 0x0);
        gbc.writeMem(0xccfa, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0xccfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfa));
        EXPECT(0x64, gbc.readMem(0xccfb));
        // CB 64 02C5
        gbc.setState(0xed04, 0xe1b1, 0x60b0, 0x35ad, 0x4bf3, 0xd59a, 0x1, 0x0);
        gbc.writeMem(0xed04, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe1b1, gbc.sp());
        EXPECT(0xed06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed04));
        EXPECT(0x64, gbc.readMem(0xed05));
        // CB 64 02C6
        gbc.setState(0xb1a5, 0x66c8, 0x2d00, 0xd650, 0x5962, 0x19c1, 0x0, 0x0);
        gbc.writeMem(0xb1a5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x66c8, gbc.sp());
        EXPECT(0xb1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a5));
        EXPECT(0x64, gbc.readMem(0xb1a6));
        // CB 64 02C7
        gbc.setState(0xcd07, 0x219c, 0x3440, 0x8bd1, 0x6c2b, 0x73ee, 0x0, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x219c, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0x64, gbc.readMem(0xcd08));
        // CB 64 02C8
        gbc.setState(0x592c, 0x71d5, 0xc480, 0x8b2, 0xaab8, 0xdd9, 0x1, 0x0);
        gbc.writeMem(0x592c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x71d5, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02C9
        gbc.setState(0x4654, 0x70d7, 0x2f10, 0x8e9a, 0x22b6, 0x7ace, 0x1, 0x0);
        gbc.writeMem(0x4654, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x70d7, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02CA
        gbc.setState(0x18df, 0x87e9, 0x9660, 0x4b7b, 0x2191, 0x39d7, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02CB
        gbc.setState(0xe621, 0xf98c, 0x8f0, 0x3c, 0x27fb, 0xd840, 0x1, 0x0);
        gbc.writeMem(0xe621, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf98c, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe621));
        EXPECT(0x64, gbc.readMem(0xe622));
        // CB 64 02CC
        gbc.setState(0x373a, 0xa9b2, 0x1140, 0x17a5, 0xbd86, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa9b2, gbc.sp());
        EXPECT(0x373c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02CD
        gbc.setState(0x79d0, 0x10b9, 0x18c0, 0x6fd7, 0x9366, 0xfec1, 0x0, 0x1);
        gbc.writeMem(0x79d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x10b9, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02CE
        gbc.setState(0x54c9, 0x18ae, 0x9fd0, 0xec86, 0xd6c1, 0xa8f2, 0x1, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x18ae, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02CF
        gbc.setState(0x5d95, 0x9f32, 0x2930, 0x8c66, 0x9de4, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0x5d95, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9f32, gbc.sp());
        EXPECT(0x5d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02D0
        gbc.setState(0x2775, 0xf5b1, 0x8980, 0x2a55, 0xf3b3, 0x228, 0x1, 0x0);
        gbc.writeMem(0x2775, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf5b1, gbc.sp());
        EXPECT(0x2777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02D1
        gbc.setState(0x3ff7, 0xf657, 0xcb90, 0xa3fe, 0xd720, 0x3387, 0x0, 0x1);
        gbc.writeMem(0x3ff7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf657, gbc.sp());
        EXPECT(0x3ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02D2
        gbc.setState(0x3d2f, 0xd0b4, 0x74b0, 0x2817, 0x1dbb, 0xe1ed, 0x0, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02D3
        gbc.setState(0x1f5b, 0x1601, 0x400, 0xfbb3, 0x71c1, 0x48f2, 0x1, 0x1);
        gbc.writeMem(0x1f5b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x1f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02D4
        gbc.setState(0x1ec3, 0x5d93, 0xeb70, 0x356, 0x349, 0x24eb, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x1ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02D5
        gbc.setState(0x3996, 0xe98d, 0xba60, 0x1ac5, 0x22c2, 0x113, 0x1, 0x0);
        gbc.writeMem(0x3996, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe98d, gbc.sp());
        EXPECT(0x3998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02D6
        gbc.setState(0xa14d, 0x12ea, 0xd420, 0x8f70, 0x2da3, 0x2ca1, 0x1, 0x0);
        gbc.writeMem(0xa14d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14d));
        EXPECT(0x64, gbc.readMem(0xa14e));
        // CB 64 02D7
        gbc.setState(0x7b6e, 0x69c4, 0x8140, 0x2da2, 0x7606, 0x7b14, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02D8
        gbc.setState(0xb576, 0xf863, 0x8d70, 0xa3cb, 0x8c2e, 0xe78f, 0x0, 0x1);
        gbc.writeMem(0xb576, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf863, gbc.sp());
        EXPECT(0xb578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb576));
        EXPECT(0x64, gbc.readMem(0xb577));
        // CB 64 02D9
        gbc.setState(0xe605, 0xa6, 0x1240, 0xa3c7, 0x4c26, 0x2cc2, 0x0, 0x0);
        gbc.writeMem(0xe605, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa6, gbc.sp());
        EXPECT(0xe607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe605));
        EXPECT(0x64, gbc.readMem(0xe606));
        // CB 64 02DA
        gbc.setState(0x603c, 0x5627, 0x5540, 0x7f64, 0x509e, 0x5a3b, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x603e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02DB
        gbc.setState(0x3a4e, 0x2a3, 0x8400, 0xeb72, 0x5f4a, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x3a4e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2a3, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02DD
        gbc.setState(0x80d2, 0x15d, 0xe3b0, 0xa979, 0xf2e1, 0x674e, 0x1, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0x80d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d2));
        EXPECT(0x64, gbc.readMem(0x80d3));
        // CB 64 02DE
        gbc.setState(0xe3ab, 0xcff2, 0xda00, 0x7fe9, 0xa693, 0x7de, 0x1, 0x0);
        gbc.writeMem(0xe3ab, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcff2, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ab));
        EXPECT(0x64, gbc.readMem(0xe3ac));
        // CB 64 02DF
        gbc.setState(0xb97b, 0xbe17, 0x1ee0, 0x3161, 0x1f40, 0x5111, 0x0, 0x0);
        gbc.writeMem(0xb97b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbe17, gbc.sp());
        EXPECT(0xb97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97b));
        EXPECT(0x64, gbc.readMem(0xb97c));
        // CB 64 02E0
        gbc.setState(0x5903, 0x31b8, 0xeda0, 0xa95e, 0xa72a, 0xcdad, 0x1, 0x1);
        gbc.writeMem(0x5903, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x31b8, gbc.sp());
        EXPECT(0x5905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02E1
        gbc.setState(0x57e0, 0x42e5, 0x6eb0, 0x2eb1, 0x55dd, 0xb0f, 0x0, 0x0);
        gbc.writeMem(0x57e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x42e5, gbc.sp());
        EXPECT(0x57e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02E2
        gbc.setState(0xc499, 0x111e, 0xff20, 0xc856, 0xa4b9, 0xcfcf, 0x0, 0x0);
        gbc.writeMem(0xc499, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0xc49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc499));
        EXPECT(0x64, gbc.readMem(0xc49a));
        // CB 64 02E3
        gbc.setState(0xcbfb, 0x350e, 0x11e0, 0xebae, 0x73c4, 0xfc35, 0x1, 0x1);
        gbc.writeMem(0xcbfb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0xcbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfb));
        EXPECT(0x64, gbc.readMem(0xcbfc));
        // CB 64 02E4
        gbc.setState(0x9c30, 0x9ebf, 0xfd30, 0xdec3, 0xf766, 0x3c83, 0x1, 0x1);
        gbc.writeMem(0x9c30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0x9c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c30));
        EXPECT(0x64, gbc.readMem(0x9c31));
        // CB 64 02E6
        gbc.setState(0x1898, 0xb55e, 0x20e0, 0x2033, 0x8f46, 0x3559, 0x0, 0x0);
        gbc.writeMem(0x1898, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb55e, gbc.sp());
        EXPECT(0x189a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02E7
        gbc.setState(0x5574, 0xfb85, 0x17b0, 0x77b7, 0xdacc, 0x2a7a, 0x0, 0x1);
        gbc.writeMem(0x5574, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfb85, gbc.sp());
        EXPECT(0x5576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02E8
        gbc.setState(0x5cfb, 0x914f, 0x36d0, 0x3ce6, 0xa7bb, 0xb462, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x914f, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02E9
        gbc.setState(0x6267, 0xd973, 0xf70, 0x6e4b, 0x6858, 0x9d72, 0x0, 0x0);
        gbc.writeMem(0x6267, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd973, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02EA
        gbc.setState(0x2675, 0x2f80, 0xc910, 0xb8a5, 0x3314, 0xb41d, 0x1, 0x1);
        gbc.writeMem(0x2675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02EB
        gbc.setState(0xe78c, 0xf747, 0xe690, 0x188, 0x7ba7, 0x708d, 0x0, 0x1);
        gbc.writeMem(0xe78c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0xe78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78c));
        EXPECT(0x64, gbc.readMem(0xe78d));
        // CB 64 02EC
        gbc.setState(0x845a, 0xb26e, 0xe070, 0xb071, 0x4ad8, 0x2048, 0x0, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb26e, gbc.sp());
        EXPECT(0x845c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845a));
        EXPECT(0x64, gbc.readMem(0x845b));
        // CB 64 02ED
        gbc.setState(0x102, 0xfa2e, 0x3f40, 0x2ff3, 0x6ff6, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0x102, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0x104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02EE
        gbc.setState(0x8b14, 0xc4db, 0x6610, 0xb23a, 0x7338, 0xb9c9, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc4db, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b14));
        EXPECT(0x64, gbc.readMem(0x8b15));
        // CB 64 02F2
        gbc.setState(0xbdb7, 0x9000, 0xbde0, 0xffa, 0x3361, 0x8141, 0x0, 0x1);
        gbc.writeMem(0xbdb7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9000, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0x64, gbc.readMem(0xbdb8));
        // CB 64 02F3
        gbc.setState(0xee3f, 0xf09d, 0x1170, 0x6058, 0xddc, 0x8318, 0x0, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf09d, gbc.sp());
        EXPECT(0xee41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3f));
        EXPECT(0x64, gbc.readMem(0xee40));
        // CB 64 02F4
        gbc.setState(0x712a, 0x909b, 0x3770, 0xc54e, 0xc0da, 0x252a, 0x0, 0x1);
        gbc.writeMem(0x712a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x909b, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02F5
        gbc.setState(0x6360, 0xb28d, 0x61c0, 0x4324, 0x8fcb, 0x344b, 0x1, 0x1);
        gbc.writeMem(0x6360, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb28d, gbc.sp());
        EXPECT(0x6362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02F6
        gbc.setState(0x434b, 0x57c8, 0x71c0, 0x9127, 0xa4b2, 0xe281, 0x1, 0x0);
        gbc.writeMem(0x434b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x57c8, gbc.sp());
        EXPECT(0x434d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02F7
        gbc.setState(0x3b07, 0xb7f7, 0x25d0, 0x9297, 0xd758, 0x5b24, 0x1, 0x0);
        gbc.writeMem(0x3b07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0x3b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02F8
        gbc.setState(0xb6ef, 0x72e, 0x7670, 0xe835, 0xf6e3, 0xb1b2, 0x0, 0x1);
        gbc.writeMem(0xb6ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x72e, gbc.sp());
        EXPECT(0xb6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ef));
        EXPECT(0x64, gbc.readMem(0xb6f0));
        // CB 64 02F9
        gbc.setState(0x5c07, 0xecf0, 0x9560, 0x7a0f, 0x5256, 0x8894, 0x0, 0x0);
        gbc.writeMem(0x5c07, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xecf0, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02FA
        gbc.setState(0x870f, 0xa7bc, 0xc930, 0xa511, 0x5220, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x870f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870f));
        EXPECT(0x64, gbc.readMem(0x8710));
        // CB 64 02FB
        gbc.setState(0x1411, 0xc817, 0xd380, 0xa8f7, 0xab04, 0xf4c7, 0x0, 0x1);
        gbc.writeMem(0x1411, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc817, gbc.sp());
        EXPECT(0x1413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02FC
        gbc.setState(0x7fd7, 0x227d, 0xbe20, 0x1ec7, 0x642a, 0xd643, 0x1, 0x0);
        gbc.writeMem(0x7fd7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x227d, gbc.sp());
        EXPECT(0x7fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 02FD
        gbc.setState(0xb934, 0x7f09, 0xb880, 0x9e62, 0x5e79, 0xa77c, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7f09, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0x64, gbc.readMem(0xb935));
        // CB 64 02FE
        gbc.setState(0x7250, 0xf81f, 0x87f0, 0xedb0, 0xb80b, 0xf817, 0x1, 0x0);
        gbc.writeMem(0x7250, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf81f, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 02FF
        gbc.setState(0x2623, 0x1629, 0x2a80, 0x2091, 0x8df3, 0x89fe, 0x0, 0x0);
        gbc.writeMem(0x2623, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1629, gbc.sp());
        EXPECT(0x2625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0300
        gbc.setState(0x8558, 0xa227, 0x42c0, 0xd917, 0x8f8e, 0x4859, 0x0, 0x1);
        gbc.writeMem(0x8558, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa227, gbc.sp());
        EXPECT(0x855a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8558));
        EXPECT(0x64, gbc.readMem(0x8559));
        // CB 64 0301
        gbc.setState(0xa955, 0x263a, 0x9bd0, 0xe4e1, 0x7f35, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0xa955, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa955));
        EXPECT(0x64, gbc.readMem(0xa956));
        // CB 64 0303
        gbc.setState(0x69d4, 0xf98e, 0x4a50, 0x87a1, 0x8954, 0x7e00, 0x1, 0x1);
        gbc.writeMem(0x69d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf98e, gbc.sp());
        EXPECT(0x69d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0304
        gbc.setState(0x4034, 0xb0ed, 0xc1e0, 0x75a1, 0x76c8, 0x8d8c, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0305
        gbc.setState(0x5f40, 0xe7d4, 0x1920, 0x8fb4, 0x3c48, 0x8852, 0x1, 0x1);
        gbc.writeMem(0x5f40, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x5f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0306
        gbc.setState(0x4c6f, 0x45f7, 0x6340, 0xe57e, 0x5cde, 0x24e6, 0x1, 0x0);
        gbc.writeMem(0x4c6f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0x4c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0307
        gbc.setState(0x3a88, 0x19c5, 0xc970, 0xbc05, 0xa304, 0xb593, 0x1, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x19c5, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0308
        gbc.setState(0x636d, 0xa6ee, 0x5b20, 0xb176, 0x66da, 0x9df5, 0x0, 0x0);
        gbc.writeMem(0x636d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa6ee, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0309
        gbc.setState(0xb3a7, 0x6b1b, 0x7340, 0x1bd, 0x890c, 0x4ad6, 0x1, 0x1);
        gbc.writeMem(0xb3a7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6b1b, gbc.sp());
        EXPECT(0xb3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a7));
        EXPECT(0x64, gbc.readMem(0xb3a8));
        // CB 64 030A
        gbc.setState(0x9716, 0xf994, 0x98c0, 0x5a8a, 0xe7d, 0xb289, 0x1, 0x1);
        gbc.writeMem(0x9716, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0x9718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9716));
        EXPECT(0x64, gbc.readMem(0x9717));
        // CB 64 030B
        gbc.setState(0xd2e6, 0xb9d6, 0x6c70, 0x2110, 0xf183, 0x8bf3, 0x0, 0x1);
        gbc.writeMem(0xd2e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e6));
        EXPECT(0x64, gbc.readMem(0xd2e7));
        // CB 64 030C
        gbc.setState(0x2c3a, 0x3301, 0xd960, 0x4cf7, 0x393b, 0x6812, 0x0, 0x1);
        gbc.writeMem(0x2c3a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3301, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 030D
        gbc.setState(0x36ef, 0xcb0, 0xe010, 0xcd17, 0x6178, 0x2bbc, 0x1, 0x1);
        gbc.writeMem(0x36ef, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcb0, gbc.sp());
        EXPECT(0x36f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 030E
        gbc.setState(0x5e29, 0x6c8e, 0x450, 0xc8c0, 0xc1ad, 0x32d1, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6c8e, gbc.sp());
        EXPECT(0x5e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 030F
        gbc.setState(0x80a4, 0x70ac, 0xb950, 0xca20, 0xcc71, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0x80a4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x70ac, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a4));
        EXPECT(0x64, gbc.readMem(0x80a5));
        // CB 64 0310
        gbc.setState(0x4681, 0x91c7, 0x58a0, 0xa947, 0x57cf, 0x898b, 0x1, 0x1);
        gbc.writeMem(0x4681, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x91c7, gbc.sp());
        EXPECT(0x4683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0311
        gbc.setState(0xcd5d, 0xba4b, 0x41d0, 0x4643, 0x2290, 0x2c39, 0x1, 0x0);
        gbc.writeMem(0xcd5d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5d));
        EXPECT(0x64, gbc.readMem(0xcd5e));
        // CB 64 0312
        gbc.setState(0xb8be, 0x896, 0xa590, 0xc558, 0x71ce, 0xe9db, 0x0, 0x1);
        gbc.writeMem(0xb8be, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x896, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8be));
        EXPECT(0x64, gbc.readMem(0xb8bf));
        // CB 64 0313
        gbc.setState(0x5e15, 0xd14f, 0xf930, 0xda66, 0xc3f6, 0x16ea, 0x0, 0x0);
        gbc.writeMem(0x5e15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd14f, gbc.sp());
        EXPECT(0x5e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0314
        gbc.setState(0xe865, 0x6d1b, 0x53a0, 0xf524, 0x3843, 0xbe7b, 0x1, 0x0);
        gbc.writeMem(0xe865, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6d1b, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe865));
        EXPECT(0x64, gbc.readMem(0xe866));
        // CB 64 0315
        gbc.setState(0x4ae9, 0xda0d, 0x46b0, 0x53f5, 0xb38f, 0x606f, 0x1, 0x0);
        gbc.writeMem(0x4ae9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xda0d, gbc.sp());
        EXPECT(0x4aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0316
        gbc.setState(0x4387, 0xd22a, 0xac00, 0x9ca5, 0x60ff, 0x9626, 0x0, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd22a, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0317
        gbc.setState(0x8b15, 0x3456, 0x9760, 0x3bfa, 0xf7b, 0xdb1, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3456, gbc.sp());
        EXPECT(0x8b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b15));
        EXPECT(0x64, gbc.readMem(0x8b16));
        // CB 64 0318
        gbc.setState(0xa02e, 0x21bc, 0xeea0, 0x4af5, 0x6327, 0x510, 0x0, 0x0);
        gbc.writeMem(0xa02e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02e));
        EXPECT(0x64, gbc.readMem(0xa02f));
        // CB 64 031A
        gbc.setState(0x7b65, 0xc0b4, 0xe950, 0x86ec, 0xc88c, 0x33b0, 0x0, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 031B
        gbc.setState(0x384f, 0x1b42, 0x3030, 0xe08, 0x1d1d, 0x58fd, 0x1, 0x1);
        gbc.writeMem(0x384f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1b42, gbc.sp());
        EXPECT(0x3851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 031C
        gbc.setState(0xdba7, 0xe927, 0x4930, 0x6cf1, 0xb98a, 0x1c7c, 0x0, 0x1);
        gbc.writeMem(0xdba7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xdba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba7));
        EXPECT(0x64, gbc.readMem(0xdba8));
        // CB 64 031D
        gbc.setState(0x7943, 0x46cf, 0x63f0, 0x37d9, 0xdef8, 0xc39b, 0x0, 0x0);
        gbc.writeMem(0x7943, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x46cf, gbc.sp());
        EXPECT(0x7945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 031E
        gbc.setState(0x407d, 0xd79f, 0xec80, 0xb894, 0x172b, 0x8c4c, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0x407f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 031F
        gbc.setState(0xbe24, 0xf42b, 0xfb50, 0x5a5c, 0x3c0d, 0xba74, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0x64, gbc.readMem(0xbe25));
        // CB 64 0320
        gbc.setState(0x98d5, 0xde2e, 0x2bd0, 0x4d8d, 0x85f1, 0x1676, 0x0, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xde2e, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0x64, gbc.readMem(0x98d6));
        // CB 64 0321
        gbc.setState(0x5393, 0x5bc, 0xa120, 0xef07, 0x27ad, 0x285e, 0x1, 0x1);
        gbc.writeMem(0x5393, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5bc, gbc.sp());
        EXPECT(0x5395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0322
        gbc.setState(0xa85b, 0x11e3, 0x6f70, 0xb521, 0xe427, 0x9ed1, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85b));
        EXPECT(0x64, gbc.readMem(0xa85c));
        // CB 64 0323
        gbc.setState(0x9f68, 0xc22d, 0x90d0, 0xb3f, 0xe908, 0x259f, 0x1, 0x1);
        gbc.writeMem(0x9f68, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc22d, gbc.sp());
        EXPECT(0x9f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f68));
        EXPECT(0x64, gbc.readMem(0x9f69));
        // CB 64 0324
        gbc.setState(0x7437, 0xbb9a, 0xc7e0, 0xcb72, 0xce6c, 0x7e31, 0x1, 0x1);
        gbc.writeMem(0x7437, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbb9a, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0325
        gbc.setState(0x269b, 0x20e3, 0x32c0, 0xe107, 0x9dd0, 0xf747, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x20e3, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0326
        gbc.setState(0x62e4, 0x7879, 0xe1f0, 0x3d28, 0x2376, 0x4c26, 0x0, 0x0);
        gbc.writeMem(0x62e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7879, gbc.sp());
        EXPECT(0x62e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0327
        gbc.setState(0x43f2, 0xe41c, 0x24f0, 0x84cb, 0x51d9, 0xeed0, 0x1, 0x1);
        gbc.writeMem(0x43f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe41c, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0328
        gbc.setState(0xc602, 0x68f6, 0x300, 0x534b, 0x3b09, 0x44, 0x1, 0x1);
        gbc.writeMem(0xc602, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x68f6, gbc.sp());
        EXPECT(0xc604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc602));
        EXPECT(0x64, gbc.readMem(0xc603));
        // CB 64 0329
        gbc.setState(0x232c, 0x56af, 0xad60, 0xa4f6, 0xd730, 0x3df6, 0x1, 0x0);
        gbc.writeMem(0x232c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x56af, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 032A
        gbc.setState(0x43a3, 0x1804, 0xf560, 0xf9a7, 0xa2ce, 0x703, 0x1, 0x0);
        gbc.writeMem(0x43a3, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 032B
        gbc.setState(0xb783, 0xb75a, 0xd5f0, 0xf035, 0xe848, 0xded4, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb75a, gbc.sp());
        EXPECT(0xb785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb783));
        EXPECT(0x64, gbc.readMem(0xb784));
        // CB 64 032C
        gbc.setState(0x7841, 0x7d29, 0xd790, 0x31d3, 0x713f, 0xabe1, 0x0, 0x0);
        gbc.writeMem(0x7841, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7d29, gbc.sp());
        EXPECT(0x7843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 032D
        gbc.setState(0x13ec, 0x48c1, 0xaf20, 0xf9bb, 0x8bf5, 0xbd12, 0x1, 0x0);
        gbc.writeMem(0x13ec, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 032E
        gbc.setState(0xa243, 0x650d, 0x59d0, 0xda24, 0x848b, 0x4c52, 0x0, 0x0);
        gbc.writeMem(0xa243, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0xa245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa243));
        EXPECT(0x64, gbc.readMem(0xa244));
        // CB 64 032F
        gbc.setState(0xcc58, 0x8f7b, 0x70e0, 0xfd55, 0x4e7, 0x6b7b, 0x0, 0x0);
        gbc.writeMem(0xcc58, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f7b, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc58));
        EXPECT(0x64, gbc.readMem(0xcc59));
        // CB 64 0330
        gbc.setState(0x41ff, 0x955a, 0x4900, 0x2ac9, 0x63c3, 0xe8e3, 0x0, 0x1);
        gbc.writeMem(0x41ff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0x4201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0331
        gbc.setState(0x63f2, 0x52bc, 0x260, 0xd7bf, 0x354, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x63f2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x52bc, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0332
        gbc.setState(0x9ce7, 0xa9c6, 0x8630, 0xfb0e, 0x2e54, 0x7767, 0x0, 0x1);
        gbc.writeMem(0x9ce7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce7));
        EXPECT(0x64, gbc.readMem(0x9ce8));
        // CB 64 0333
        gbc.setState(0xe189, 0xe5ad, 0x2370, 0x754f, 0xf3c6, 0x5983, 0x1, 0x0);
        gbc.writeMem(0xe189, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0xe18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe189));
        EXPECT(0x64, gbc.readMem(0xe18a));
        // CB 64 0335
        gbc.setState(0xbdf, 0xeb40, 0x23e0, 0x23b5, 0xb48d, 0x55e, 0x1, 0x0);
        gbc.writeMem(0xbdf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeb40, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0336
        gbc.setState(0xdeac, 0xc15f, 0xc360, 0x891, 0x7139, 0x2b7e, 0x0, 0x1);
        gbc.writeMem(0xdeac, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0xdeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeac));
        EXPECT(0x64, gbc.readMem(0xdead));
        // CB 64 0337
        gbc.setState(0x27b6, 0x6ac1, 0xa6f0, 0xf92e, 0xf84b, 0x5d6a, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ac1, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0338
        gbc.setState(0xdfe7, 0x4398, 0xbe70, 0x40a5, 0x49a2, 0xe7b8, 0x0, 0x1);
        gbc.writeMem(0xdfe7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0xdfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe7));
        EXPECT(0x64, gbc.readMem(0xdfe8));
        // CB 64 033A
        gbc.setState(0xc1bf, 0x8af, 0x56d0, 0x7bf5, 0xebbb, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0xc1bf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8af, gbc.sp());
        EXPECT(0xc1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bf));
        EXPECT(0x64, gbc.readMem(0xc1c0));
        // CB 64 033B
        gbc.setState(0x3c1b, 0x1aa7, 0xae30, 0xdbc0, 0x3eef, 0xd4bd, 0x0, 0x0);
        gbc.writeMem(0x3c1b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x3c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 033C
        gbc.setState(0xd13, 0xf6e3, 0x8600, 0x7e0c, 0xe226, 0x6fad, 0x0, 0x0);
        gbc.writeMem(0xd13, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0xd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 033D
        gbc.setState(0x31d0, 0xe15c, 0xca30, 0x607b, 0x2d00, 0x578e, 0x1, 0x0);
        gbc.writeMem(0x31d0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe15c, gbc.sp());
        EXPECT(0x31d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 033E
        gbc.setState(0x7c96, 0xcff0, 0xc020, 0xfdf, 0xf9e8, 0xe49e, 0x0, 0x0);
        gbc.writeMem(0x7c96, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcff0, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 033F
        gbc.setState(0x9632, 0x8787, 0xae70, 0xcd47, 0x6c8, 0xba02, 0x1, 0x1);
        gbc.writeMem(0x9632, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9632));
        EXPECT(0x64, gbc.readMem(0x9633));
        // CB 64 0340
        gbc.setState(0x7dc2, 0x9f78, 0x990, 0x7489, 0x9df9, 0xd8d6, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9f78, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0341
        gbc.setState(0x1f02, 0x48f6, 0xdda0, 0x218c, 0x67ba, 0x13c4, 0x0, 0x1);
        gbc.writeMem(0x1f02, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x48f6, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0342
        gbc.setState(0x3d63, 0x53db, 0x3290, 0x62ab, 0x2fe3, 0x826, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0343
        gbc.setState(0x83cc, 0x1bd1, 0xe9a0, 0xa788, 0x54f6, 0x32b5, 0x1, 0x1);
        gbc.writeMem(0x83cc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0x83ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cc));
        EXPECT(0x64, gbc.readMem(0x83cd));
        // CB 64 0344
        gbc.setState(0x5a0f, 0x7a3c, 0xf030, 0x6106, 0xe712, 0xaab7, 0x0, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7a3c, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0345
        gbc.setState(0x18dc, 0x3ca0, 0x85d0, 0x496, 0x4f13, 0x222a, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3ca0, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0346
        gbc.setState(0xd099, 0x9022, 0xf1c0, 0x6945, 0xf25c, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0xd099, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9022, gbc.sp());
        EXPECT(0xd09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd099));
        EXPECT(0x64, gbc.readMem(0xd09a));
        // CB 64 0347
        gbc.setState(0x44fd, 0xb6f0, 0xe7b0, 0xaff1, 0xda27, 0x56ea, 0x0, 0x0);
        gbc.writeMem(0x44fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb6f0, gbc.sp());
        EXPECT(0x44ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0348
        gbc.setState(0xd33f, 0xb56b, 0x9200, 0x1a75, 0x17b1, 0x5415, 0x0, 0x0);
        gbc.writeMem(0xd33f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb56b, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd33f));
        EXPECT(0x64, gbc.readMem(0xd340));
        // CB 64 0349
        gbc.setState(0xb699, 0x84df, 0x7710, 0x909d, 0x1352, 0xce16, 0x1, 0x0);
        gbc.writeMem(0xb699, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb699));
        EXPECT(0x64, gbc.readMem(0xb69a));
        // CB 64 034A
        gbc.setState(0xa5a9, 0x6f96, 0x1b20, 0x4c63, 0x340f, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0xa5a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0xa5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a9));
        EXPECT(0x64, gbc.readMem(0xa5aa));
        // CB 64 034B
        gbc.setState(0xb0b, 0x94df, 0x1660, 0x293b, 0x7f62, 0x4279, 0x1, 0x1);
        gbc.writeMem(0xb0b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0xb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 034C
        gbc.setState(0x4005, 0x4334, 0xfe0, 0xa3d0, 0x5815, 0x26e3, 0x1, 0x0);
        gbc.writeMem(0x4005, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 034D
        gbc.setState(0xa60, 0x5931, 0x790, 0x75f5, 0xe93f, 0x5827, 0x1, 0x1);
        gbc.writeMem(0xa60, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5931, gbc.sp());
        EXPECT(0xa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 034E
        gbc.setState(0xe211, 0x4b3, 0xd600, 0x11d9, 0x6847, 0x9180, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0xe213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe211));
        EXPECT(0x64, gbc.readMem(0xe212));
        // CB 64 034F
        gbc.setState(0x2367, 0xacac, 0x4d90, 0xdf93, 0x1b6b, 0x712b, 0x1, 0x0);
        gbc.writeMem(0x2367, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xacac, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0350
        gbc.setState(0xce3c, 0x13cc, 0x2db0, 0x32c9, 0x877, 0xce6a, 0x1, 0x0);
        gbc.writeMem(0xce3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3c));
        EXPECT(0x64, gbc.readMem(0xce3d));
        // CB 64 0351
        gbc.setState(0x6008, 0x7d1a, 0x87c0, 0xb57e, 0x2545, 0xe30e, 0x1, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0352
        gbc.setState(0x9887, 0xec16, 0xe0e0, 0x91af, 0x2093, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9887));
        EXPECT(0x64, gbc.readMem(0x9888));
        // CB 64 0353
        gbc.setState(0x7dd6, 0xc78d, 0x480, 0x82e, 0x6f0a, 0x538a, 0x1, 0x0);
        gbc.writeMem(0x7dd6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0x7dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0354
        gbc.setState(0xe7d4, 0x27ab, 0xa3e0, 0xa7d8, 0x6a78, 0x9c37, 0x1, 0x0);
        gbc.writeMem(0xe7d4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x27ab, gbc.sp());
        EXPECT(0xe7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d4));
        EXPECT(0x64, gbc.readMem(0xe7d5));
        // CB 64 0355
        gbc.setState(0x4946, 0x60b7, 0x3b10, 0x8fd1, 0x16ef, 0x11db, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0356
        gbc.setState(0x84ff, 0x4e38, 0x4310, 0x7d12, 0x180f, 0xbe34, 0x0, 0x1);
        gbc.writeMem(0x84ff, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e38, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ff));
        EXPECT(0x64, gbc.readMem(0x8500));
        // CB 64 0357
        gbc.setState(0x2124, 0xc195, 0x8a50, 0x2f2a, 0xc65f, 0x73f0, 0x1, 0x1);
        gbc.writeMem(0x2124, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0358
        gbc.setState(0x68cd, 0xa27e, 0xe720, 0xbaea, 0xdfd2, 0x76c, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa27e, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0359
        gbc.setState(0x984c, 0x116d, 0x3440, 0xba85, 0x1370, 0xcc2a, 0x1, 0x1);
        gbc.writeMem(0x984c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x116d, gbc.sp());
        EXPECT(0x984e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984c));
        EXPECT(0x64, gbc.readMem(0x984d));
        // CB 64 035A
        gbc.setState(0x8b61, 0x6e0e, 0xcef0, 0x631c, 0xfa1e, 0x3bea, 0x0, 0x1);
        gbc.writeMem(0x8b61, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x8b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b61));
        EXPECT(0x64, gbc.readMem(0x8b62));
        // CB 64 035B
        gbc.setState(0x1e9, 0xd4cb, 0x2ae0, 0x2661, 0xda23, 0x6bae, 0x0, 0x0);
        gbc.writeMem(0x1e9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4cb, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 035C
        gbc.setState(0x2bda, 0x498b, 0x920, 0x8afa, 0x2fce, 0x7d01, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x498b, gbc.sp());
        EXPECT(0x2bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 035D
        gbc.setState(0x5017, 0xa90a, 0xb710, 0x2c79, 0x661c, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x5017, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa90a, gbc.sp());
        EXPECT(0x5019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 035E
        gbc.setState(0xc58e, 0x552b, 0x9400, 0xc974, 0xfe85, 0x6ef, 0x1, 0x1);
        gbc.writeMem(0xc58e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0xc590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58e));
        EXPECT(0x64, gbc.readMem(0xc58f));
        // CB 64 0360
        gbc.setState(0x7ff0, 0x297b, 0xe290, 0xb893, 0x6abf, 0xe03d, 0x1, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0361
        gbc.setState(0x7a63, 0x20ed, 0x5f50, 0x684, 0x43f0, 0xfdd4, 0x0, 0x1);
        gbc.writeMem(0x7a63, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20ed, gbc.sp());
        EXPECT(0x7a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0362
        gbc.setState(0x7362, 0xa040, 0x1ee0, 0xb1d6, 0x3d47, 0x915, 0x1, 0x1);
        gbc.writeMem(0x7362, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa040, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0364
        gbc.setState(0x7217, 0x9f90, 0xb160, 0x666c, 0x32d9, 0x3b7c, 0x1, 0x0);
        gbc.writeMem(0x7217, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9f90, gbc.sp());
        EXPECT(0x7219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0365
        gbc.setState(0xde7d, 0x1d32, 0x52a0, 0x2e79, 0xbd01, 0x43a, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1d32, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0x64, gbc.readMem(0xde7e));
        // CB 64 0366
        gbc.setState(0x3f2d, 0x292b, 0x8d10, 0xb25c, 0xbd46, 0xb500, 0x1, 0x0);
        gbc.writeMem(0x3f2d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x3f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0368
        gbc.setState(0xcc16, 0x2a70, 0x2e10, 0x9df6, 0x5eb3, 0xaa7f, 0x1, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0x64, gbc.readMem(0xcc17));
        // CB 64 0369
        gbc.setState(0x883e, 0xdcee, 0x5bc0, 0xf59d, 0x3f44, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0x883e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdcee, gbc.sp());
        EXPECT(0x8840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883e));
        EXPECT(0x64, gbc.readMem(0x883f));
        // CB 64 036A
        gbc.setState(0x7905, 0xe81a, 0xabf0, 0x8d4, 0x63b2, 0xd528, 0x0, 0x0);
        gbc.writeMem(0x7905, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 036B
        gbc.setState(0xb909, 0xd094, 0x8cc0, 0x6f37, 0xb967, 0xd273, 0x0, 0x1);
        gbc.writeMem(0xb909, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0xb90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb909));
        EXPECT(0x64, gbc.readMem(0xb90a));
        // CB 64 036C
        gbc.setState(0x4a0a, 0x378c, 0xc510, 0xccba, 0xfbdf, 0xf781, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 036D
        gbc.setState(0xc2de, 0xda4c, 0xa310, 0xb48f, 0xa421, 0xf995, 0x1, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x64, gbc.readMem(0xc2df));
        // CB 64 036E
        gbc.setState(0x9286, 0xb969, 0xb660, 0x8fbd, 0xf978, 0x1cc4, 0x1, 0x0);
        gbc.writeMem(0x9286, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9286));
        EXPECT(0x64, gbc.readMem(0x9287));
        // CB 64 036F
        gbc.setState(0x4a7f, 0xd425, 0x3180, 0x2b63, 0x3d4d, 0xb7cd, 0x0, 0x0);
        gbc.writeMem(0x4a7f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd425, gbc.sp());
        EXPECT(0x4a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0370
        gbc.setState(0x83f7, 0xbc24, 0xfa80, 0xd7d9, 0x64db, 0xaa15, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f7));
        EXPECT(0x64, gbc.readMem(0x83f8));
        // CB 64 0371
        gbc.setState(0x2824, 0x7eaa, 0xfab0, 0xd39, 0x946c, 0x5b6e, 0x1, 0x0);
        gbc.writeMem(0x2824, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x2826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0372
        gbc.setState(0x882b, 0x30ae, 0xd3a0, 0x915c, 0x6cec, 0x1a6d, 0x0, 0x1);
        gbc.writeMem(0x882b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0x882d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882b));
        EXPECT(0x64, gbc.readMem(0x882c));
        // CB 64 0373
        gbc.setState(0x4951, 0x7438, 0x9c20, 0x6fd5, 0xc62c, 0xd3db, 0x1, 0x0);
        gbc.writeMem(0x4951, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7438, gbc.sp());
        EXPECT(0x4953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0374
        gbc.setState(0x3128, 0xff1b, 0x2ba0, 0x13d6, 0x6efc, 0xa68f, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xff1b, gbc.sp());
        EXPECT(0x312a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0375
        gbc.setState(0x74bd, 0x11b5, 0x24a0, 0x6453, 0xc8b8, 0x71e4, 0x1, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x11b5, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0376
        gbc.setState(0x9d3c, 0xb1fa, 0x7af0, 0x712e, 0xc056, 0x72f1, 0x1, 0x0);
        gbc.writeMem(0x9d3c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0x9d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3c));
        EXPECT(0x64, gbc.readMem(0x9d3d));
        // CB 64 0377
        gbc.setState(0x7ba6, 0x7e39, 0x26d0, 0xfd8a, 0x6b9f, 0x6256, 0x0, 0x1);
        gbc.writeMem(0x7ba6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7e39, gbc.sp());
        EXPECT(0x7ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0378
        gbc.setState(0x4c4f, 0x80ef, 0x5770, 0xe114, 0x6bc0, 0x58d9, 0x1, 0x1);
        gbc.writeMem(0x4c4f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x80ef, gbc.sp());
        EXPECT(0x4c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0379
        gbc.setState(0xe71e, 0x216d, 0x48d0, 0xf706, 0xb13a, 0x46ac, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x216d, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0x64, gbc.readMem(0xe71f));
        // CB 64 037A
        gbc.setState(0x851c, 0x801e, 0x54e0, 0x9ca8, 0x9e2d, 0x5df3, 0x1, 0x1);
        gbc.writeMem(0x851c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0x851e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851c));
        EXPECT(0x64, gbc.readMem(0x851d));
        // CB 64 037B
        gbc.setState(0xf62, 0x356d, 0x7ae0, 0xcd16, 0xbbda, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0xf62, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 037C
        gbc.setState(0x4e88, 0x4f8f, 0xebe0, 0x7ca5, 0xda27, 0x119f, 0x0, 0x1);
        gbc.writeMem(0x4e88, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0x4e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 037D
        gbc.setState(0x8c13, 0x8722, 0xd590, 0x4bd9, 0x6943, 0xdf6a, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8722, gbc.sp());
        EXPECT(0x8c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c13));
        EXPECT(0x64, gbc.readMem(0x8c14));
        // CB 64 037E
        gbc.setState(0x10c7, 0x6d6f, 0x5df0, 0x3eb7, 0x3de6, 0xe32b, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0x10c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 037F
        gbc.setState(0x7865, 0xce21, 0x5ed0, 0xc61, 0x884b, 0x3d68, 0x1, 0x1);
        gbc.writeMem(0x7865, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0380
        gbc.setState(0x6675, 0x9a35, 0xa7a0, 0x43b7, 0x5349, 0x568f, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9a35, gbc.sp());
        EXPECT(0x6677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0381
        gbc.setState(0x402, 0x8fd0, 0xb8d0, 0xbc10, 0xbe12, 0xf688, 0x0, 0x1);
        gbc.writeMem(0x402, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0382
        gbc.setState(0xe63a, 0x6ebc, 0x6870, 0x522e, 0x9b89, 0x7e6d, 0x1, 0x1);
        gbc.writeMem(0xe63a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ebc, gbc.sp());
        EXPECT(0xe63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63a));
        EXPECT(0x64, gbc.readMem(0xe63b));
        // CB 64 0383
        gbc.setState(0x47a2, 0x6c4a, 0x2090, 0xebf7, 0xb64b, 0x31f, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6c4a, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0384
        gbc.setState(0x420f, 0x1125, 0x99b0, 0xbaff, 0x694e, 0x15bb, 0x0, 0x1);
        gbc.writeMem(0x420f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1125, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0385
        gbc.setState(0x486b, 0x6efc, 0x7280, 0x2136, 0x9da0, 0xe2fc, 0x0, 0x1);
        gbc.writeMem(0x486b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6efc, gbc.sp());
        EXPECT(0x486d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0386
        gbc.setState(0xcf1c, 0x5e11, 0x8c70, 0xa58f, 0xc7d4, 0x8244, 0x1, 0x1);
        gbc.writeMem(0xcf1c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5e11, gbc.sp());
        EXPECT(0xcf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1c));
        EXPECT(0x64, gbc.readMem(0xcf1d));
        // CB 64 0387
        gbc.setState(0x9919, 0x4998, 0x47f0, 0x595b, 0x8488, 0x964e, 0x0, 0x1);
        gbc.writeMem(0x9919, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4998, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9919));
        EXPECT(0x64, gbc.readMem(0x991a));
        // CB 64 0388
        gbc.setState(0xb28d, 0x3dcb, 0x3a30, 0xba36, 0x5376, 0xc050, 0x1, 0x0);
        gbc.writeMem(0xb28d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3dcb, gbc.sp());
        EXPECT(0xb28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28d));
        EXPECT(0x64, gbc.readMem(0xb28e));
        // CB 64 0389
        gbc.setState(0x47e6, 0xf284, 0x990, 0xfa64, 0xe4e6, 0xc2cd, 0x0, 0x1);
        gbc.writeMem(0x47e6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 038A
        gbc.setState(0xc92, 0xd89d, 0x3950, 0xda9d, 0x4085, 0xaebf, 0x1, 0x1);
        gbc.writeMem(0xc92, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd89d, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 038B
        gbc.setState(0xd467, 0x8157, 0x2c0, 0x9012, 0x5328, 0xe965, 0x0, 0x0);
        gbc.writeMem(0xd467, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd467));
        EXPECT(0x64, gbc.readMem(0xd468));
        // CB 64 038C
        gbc.setState(0xbf55, 0xdd47, 0xc7d0, 0x26a1, 0xab3a, 0xee1d, 0x0, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdd47, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf55));
        EXPECT(0x64, gbc.readMem(0xbf56));
        // CB 64 038E
        gbc.setState(0x9c6c, 0x64a4, 0x3c0, 0x249d, 0x9c41, 0x3322, 0x1, 0x1);
        gbc.writeMem(0x9c6c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6c));
        EXPECT(0x64, gbc.readMem(0x9c6d));
        // CB 64 038F
        gbc.setState(0xa95f, 0x1118, 0x97e0, 0x9a6a, 0xc0e, 0x326a, 0x1, 0x1);
        gbc.writeMem(0xa95f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1118, gbc.sp());
        EXPECT(0xa961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95f));
        EXPECT(0x64, gbc.readMem(0xa960));
        // CB 64 0390
        gbc.setState(0x76f4, 0xb7aa, 0x9f20, 0x27dd, 0x7bbd, 0x4534, 0x1, 0x0);
        gbc.writeMem(0x76f4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb7aa, gbc.sp());
        EXPECT(0x76f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0391
        gbc.setState(0xa04d, 0x787d, 0xce50, 0x2f2c, 0x2799, 0xe788, 0x1, 0x1);
        gbc.writeMem(0xa04d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x787d, gbc.sp());
        EXPECT(0xa04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04d));
        EXPECT(0x64, gbc.readMem(0xa04e));
        // CB 64 0392
        gbc.setState(0xd24a, 0x353, 0x3050, 0x7675, 0x260, 0xbc77, 0x1, 0x1);
        gbc.writeMem(0xd24a, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x353, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24a));
        EXPECT(0x64, gbc.readMem(0xd24b));
        // CB 64 0393
        gbc.setState(0x26d, 0x7b27, 0x2140, 0xdd58, 0xcde7, 0x1e40, 0x1, 0x0);
        gbc.writeMem(0x26d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b27, gbc.sp());
        EXPECT(0x26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0394
        gbc.setState(0x2a2f, 0x27f7, 0x5a0, 0xd8b9, 0x7f43, 0x9d45, 0x0, 0x1);
        gbc.writeMem(0x2a2f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x27f7, gbc.sp());
        EXPECT(0x2a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0395
        gbc.setState(0x3498, 0x3232, 0xb990, 0x7c97, 0xf566, 0x7aab, 0x0, 0x0);
        gbc.writeMem(0x3498, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3232, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0396
        gbc.setState(0x49cd, 0x4294, 0x9360, 0x1607, 0xd88a, 0x2864, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4294, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0397
        gbc.setState(0x542f, 0x32aa, 0xf340, 0x535c, 0x9fec, 0x547b, 0x0, 0x0);
        gbc.writeMem(0x542f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x32aa, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 0398
        gbc.setState(0x6569, 0xe3a2, 0xfe30, 0xebea, 0x6acf, 0x358d, 0x1, 0x0);
        gbc.writeMem(0x6569, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe3a2, gbc.sp());
        EXPECT(0x656b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 0399
        gbc.setState(0x23ea, 0xe0c0, 0xd060, 0xcf45, 0xe85b, 0x87fb, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe0c0, gbc.sp());
        EXPECT(0x23ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 039A
        gbc.setState(0x3763, 0xfb0d, 0x7100, 0xade7, 0xd4e9, 0x25ac, 0x0, 0x0);
        gbc.writeMem(0x3763, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 039C
        gbc.setState(0xdbc0, 0x60d9, 0xb9b0, 0x93ef, 0xd16d, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0xdbc0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc0));
        EXPECT(0x64, gbc.readMem(0xdbc1));
        // CB 64 039D
        gbc.setState(0x450e, 0x67be, 0x90e0, 0xf57d, 0xa457, 0xfac0, 0x1, 0x0);
        gbc.writeMem(0x450e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x4510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 039E
        gbc.setState(0x8f38, 0x9a70, 0xd620, 0x997c, 0x3e7e, 0x1d96, 0x1, 0x1);
        gbc.writeMem(0x8f38, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x8f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f38));
        EXPECT(0x64, gbc.readMem(0x8f39));
        // CB 64 039F
        gbc.setState(0x90d, 0xcb5c, 0xf430, 0xe3a, 0x3e10, 0xe010, 0x0, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcb5c, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03A0
        gbc.setState(0x5764, 0x33a0, 0x9230, 0x9745, 0x2fd8, 0xd4a3, 0x1, 0x0);
        gbc.writeMem(0x5764, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x33a0, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03A1
        gbc.setState(0x9b40, 0x5483, 0xc540, 0xc43d, 0x3944, 0xe964, 0x0, 0x0);
        gbc.writeMem(0x9b40, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x9b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b40));
        EXPECT(0x64, gbc.readMem(0x9b41));
        // CB 64 03A2
        gbc.setState(0x615c, 0x94a8, 0xb100, 0x8fe1, 0x20c5, 0x9737, 0x0, 0x0);
        gbc.writeMem(0x615c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x94a8, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03A3
        gbc.setState(0xc44f, 0xb, 0x8b40, 0x1a7a, 0x7a7b, 0x63b0, 0x1, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44f));
        EXPECT(0x64, gbc.readMem(0xc450));
        // CB 64 03A4
        gbc.setState(0x6797, 0x1b2a, 0x4de0, 0x3406, 0x738, 0xc17d, 0x0, 0x1);
        gbc.writeMem(0x6797, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1b2a, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03A5
        gbc.setState(0x7ebb, 0x42bf, 0x20e0, 0xf27f, 0x4191, 0x16bf, 0x0, 0x1);
        gbc.writeMem(0x7ebb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0x7ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03A6
        gbc.setState(0xcce9, 0xb92c, 0x24e0, 0x6dc9, 0x17d8, 0x4bab, 0x1, 0x1);
        gbc.writeMem(0xcce9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0xcceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce9));
        EXPECT(0x64, gbc.readMem(0xccea));
        // CB 64 03A7
        gbc.setState(0x8025, 0xe0e3, 0x920, 0xb7da, 0xdb23, 0x77b3, 0x1, 0x0);
        gbc.writeMem(0x8025, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe0e3, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8025));
        EXPECT(0x64, gbc.readMem(0x8026));
        // CB 64 03A8
        gbc.setState(0x83ad, 0xb81f, 0x50e0, 0x983c, 0x5ce8, 0xb749, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb81f, gbc.sp());
        EXPECT(0x83af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ad));
        EXPECT(0x64, gbc.readMem(0x83ae));
        // CB 64 03A9
        gbc.setState(0xbd00, 0xa029, 0x91d0, 0x4d9e, 0x7417, 0xe202, 0x1, 0x0);
        gbc.writeMem(0xbd00, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa029, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd00));
        EXPECT(0x64, gbc.readMem(0xbd01));
        // CB 64 03AA
        gbc.setState(0xd178, 0x2d6c, 0x3290, 0xfdf7, 0x3589, 0x920, 0x1, 0x0);
        gbc.writeMem(0xd178, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2d6c, gbc.sp());
        EXPECT(0xd17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd178));
        EXPECT(0x64, gbc.readMem(0xd179));
        // CB 64 03AB
        gbc.setState(0x1559, 0x8ac4, 0x4430, 0xb61c, 0x44c2, 0xb042, 0x1, 0x0);
        gbc.writeMem(0x1559, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8ac4, gbc.sp());
        EXPECT(0x155b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03AC
        gbc.setState(0x62e0, 0xd4ba, 0x470, 0x503a, 0xbeb1, 0xa6d8, 0x0, 0x0);
        gbc.writeMem(0x62e0, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd4ba, gbc.sp());
        EXPECT(0x62e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03AD
        gbc.setState(0x76d5, 0x2c70, 0x6a10, 0x7890, 0x1c2d, 0x4353, 0x1, 0x1);
        gbc.writeMem(0x76d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03AE
        gbc.setState(0x3533, 0xec0a, 0xc2d0, 0xd83f, 0x54e3, 0x675e, 0x1, 0x1);
        gbc.writeMem(0x3533, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xec0a, gbc.sp());
        EXPECT(0x3535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03AF
        gbc.setState(0x107e, 0xaa83, 0x22b0, 0xd507, 0x1d51, 0x3889, 0x1, 0x0);
        gbc.writeMem(0x107e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x1080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03B0
        gbc.setState(0x615, 0x8b87, 0xdf70, 0x1418, 0x67b7, 0xfe93, 0x1, 0x0);
        gbc.writeMem(0x615, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b87, gbc.sp());
        EXPECT(0x617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03B1
        gbc.setState(0xffe, 0x2272, 0x5dc0, 0x85ba, 0x116e, 0x42d3, 0x0, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03B2
        gbc.setState(0x57e4, 0x4d33, 0xcb90, 0x3c54, 0xcd74, 0xd4f3, 0x0, 0x0);
        gbc.writeMem(0x57e4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d33, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03B3
        gbc.setState(0xbd55, 0xabae, 0xdd10, 0x6919, 0xfa98, 0xc239, 0x1, 0x0);
        gbc.writeMem(0xbd55, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xabae, gbc.sp());
        EXPECT(0xbd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd55));
        EXPECT(0x64, gbc.readMem(0xbd56));
        // CB 64 03B4
        gbc.setState(0xb853, 0x702a, 0xd100, 0xe7d8, 0x1e84, 0xac40, 0x0, 0x0);
        gbc.writeMem(0xb853, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0xb855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb853));
        EXPECT(0x64, gbc.readMem(0xb854));
        // CB 64 03B5
        gbc.setState(0x7e4f, 0x2b08, 0xfe50, 0x671e, 0xe0cc, 0xb172, 0x0, 0x0);
        gbc.writeMem(0x7e4f, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03B6
        gbc.setState(0x5be8, 0xfeab, 0xb5b0, 0x4774, 0x27a6, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0x5be8, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x5bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03B7
        gbc.setState(0xad26, 0x5e5f, 0x9b30, 0xa2d4, 0x1303, 0x2d58, 0x1, 0x1);
        gbc.writeMem(0xad26, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad26));
        EXPECT(0x64, gbc.readMem(0xad27));
        // CB 64 03B8
        gbc.setState(0x454d, 0x50ee, 0xaa20, 0x6a99, 0x5571, 0x535e, 0x1, 0x1);
        gbc.writeMem(0x454d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03B9
        gbc.setState(0x4e82, 0x101b, 0xf9f0, 0xb830, 0xa850, 0xbb3c, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03BA
        gbc.setState(0x9830, 0x4bfb, 0xc840, 0x6203, 0xca6c, 0x6ae, 0x0, 0x1);
        gbc.writeMem(0x9830, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4bfb, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9830));
        EXPECT(0x64, gbc.readMem(0x9831));
        // CB 64 03BB
        gbc.setState(0x500b, 0xea70, 0x72f0, 0x8655, 0x3d39, 0x9611, 0x1, 0x1);
        gbc.writeMem(0x500b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xea70, gbc.sp());
        EXPECT(0x500d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03BC
        gbc.setState(0xaddf, 0x28c5, 0x97e0, 0x927, 0x3ce, 0x8103, 0x1, 0x1);
        gbc.writeMem(0xaddf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddf));
        EXPECT(0x64, gbc.readMem(0xade0));
        // CB 64 03BD
        gbc.setState(0x2ca7, 0xc211, 0xd330, 0x50f8, 0xb85a, 0x7335, 0x0, 0x1);
        gbc.writeMem(0x2ca7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc211, gbc.sp());
        EXPECT(0x2ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03BE
        gbc.setState(0x6a2c, 0xdbf0, 0xc990, 0x7162, 0xa3bd, 0x894c, 0x0, 0x1);
        gbc.writeMem(0x6a2c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03BF
        gbc.setState(0xb24c, 0xe3b1, 0xc790, 0x6543, 0x1aa4, 0x6670, 0x1, 0x1);
        gbc.writeMem(0xb24c, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0xb24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24c));
        EXPECT(0x64, gbc.readMem(0xb24d));
        // CB 64 03C0
        gbc.setState(0x1024, 0xfa98, 0x3920, 0x1802, 0xabb5, 0xf05f, 0x1, 0x1);
        gbc.writeMem(0x1024, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfa98, gbc.sp());
        EXPECT(0x1026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03C1
        gbc.setState(0x95fd, 0x2099, 0x8250, 0xf737, 0xbd85, 0x9164, 0x1, 0x0);
        gbc.writeMem(0x95fd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2099, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fd));
        EXPECT(0x64, gbc.readMem(0x95fe));
        // CB 64 03C2
        gbc.setState(0x2307, 0x96fc, 0xf7e0, 0x5cab, 0x12cd, 0xe857, 0x0, 0x0);
        gbc.writeMem(0x2307, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x96fc, gbc.sp());
        EXPECT(0x2309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03C3
        gbc.setState(0x8ff6, 0xdcd1, 0xb0c0, 0x8a45, 0x7087, 0xac00, 0x1, 0x0);
        gbc.writeMem(0x8ff6, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x8ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff6));
        EXPECT(0x64, gbc.readMem(0x8ff7));
        // CB 64 03C4
        gbc.setState(0x9148, 0xac52, 0xa950, 0x4e82, 0x6910, 0x1763, 0x1, 0x0);
        gbc.writeMem(0x9148, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9148));
        EXPECT(0x64, gbc.readMem(0x9149));
        // CB 64 03C5
        gbc.setState(0x1760, 0xfbde, 0x51e0, 0x546e, 0x2b6, 0xf10a, 0x0, 0x0);
        gbc.writeMem(0x1760, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfbde, gbc.sp());
        EXPECT(0x1762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03C6
        gbc.setState(0x29fe, 0x9734, 0xa6a0, 0x81e0, 0x57d5, 0x9a2e, 0x1, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9734, gbc.sp());
        EXPECT(0x2a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03C7
        gbc.setState(0x870d, 0x7ca, 0xe070, 0xa4b8, 0xf789, 0x6adc, 0x0, 0x0);
        gbc.writeMem(0x870d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870d));
        EXPECT(0x64, gbc.readMem(0x870e));
        // CB 64 03C8
        gbc.setState(0xbfdf, 0x9025, 0x58e0, 0xfdc3, 0xec33, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdf));
        EXPECT(0x64, gbc.readMem(0xbfe0));
        // CB 64 03C9
        gbc.setState(0x3f78, 0xc7a8, 0x3120, 0x65cd, 0x9bcd, 0xf79f, 0x0, 0x0);
        gbc.writeMem(0x3f78, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc7a8, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03CA
        gbc.setState(0x2a30, 0xec6f, 0x1ce0, 0x7fa4, 0x276c, 0xe0e9, 0x0, 0x1);
        gbc.writeMem(0x2a30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xec6f, gbc.sp());
        EXPECT(0x2a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03CB
        gbc.setState(0x8536, 0xc8f8, 0x37f0, 0x2ed2, 0xb56a, 0x1381, 0x0, 0x1);
        gbc.writeMem(0x8536, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc8f8, gbc.sp());
        EXPECT(0x8538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8536));
        EXPECT(0x64, gbc.readMem(0x8537));
        // CB 64 03CC
        gbc.setState(0x5a9d, 0xa49c, 0x5540, 0x602e, 0x2856, 0x6bed, 0x0, 0x0);
        gbc.writeMem(0x5a9d, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa49c, gbc.sp());
        EXPECT(0x5a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03CD
        gbc.setState(0x95d5, 0x1e5f, 0xa1b0, 0xdada, 0x23df, 0xff19, 0x0, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0x64, gbc.readMem(0x95d6));
        // CB 64 03CF
        gbc.setState(0xf46, 0xe4f6, 0x8df0, 0x12, 0x597, 0x198e, 0x0, 0x1);
        gbc.writeMem(0xf46, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe4f6, gbc.sp());
        EXPECT(0xf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03D1
        gbc.setState(0x6b49, 0x1161, 0x1a50, 0x77fa, 0x1ae1, 0xca98, 0x1, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03D2
        gbc.setState(0xdd98, 0xbbc9, 0x6370, 0xad46, 0xd3bc, 0x5049, 0x0, 0x1);
        gbc.writeMem(0xdd98, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd98));
        EXPECT(0x64, gbc.readMem(0xdd99));
        // CB 64 03D3
        gbc.setState(0x3afd, 0xd1b4, 0x360, 0xb875, 0xd0ef, 0xfa61, 0x1, 0x0);
        gbc.writeMem(0x3afd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0x3aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03D4
        gbc.setState(0x9f30, 0x2823, 0x4660, 0xaa54, 0xf6a0, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0x9f30, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x9f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f30));
        EXPECT(0x64, gbc.readMem(0x9f31));
        // CB 64 03D5
        gbc.setState(0x860e, 0xf8be, 0xbfb0, 0x6af9, 0x9a02, 0xa366, 0x1, 0x1);
        gbc.writeMem(0x860e, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf8be, gbc.sp());
        EXPECT(0x8610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860e));
        EXPECT(0x64, gbc.readMem(0x860f));
        // CB 64 03D6
        gbc.setState(0xe968, 0x424c, 0xd4a0, 0xec23, 0x572c, 0x12a, 0x0, 0x0);
        gbc.writeMem(0xe968, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe968));
        EXPECT(0x64, gbc.readMem(0xe969));
        // CB 64 03D7
        gbc.setState(0x15de, 0x378c, 0xa0b0, 0xac2d, 0x2c, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0x15de, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0x15e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03D8
        gbc.setState(0xed59, 0xb12b, 0x6880, 0x826, 0xd39e, 0x78fd, 0x1, 0x1);
        gbc.writeMem(0xed59, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb12b, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed59));
        EXPECT(0x64, gbc.readMem(0xed5a));
        // CB 64 03D9
        gbc.setState(0x1c61, 0x1867, 0xf0, 0x5e32, 0xa59e, 0xc906, 0x1, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03DA
        gbc.setState(0xcabd, 0x460b, 0xa240, 0xd918, 0x4f0f, 0xb243, 0x1, 0x1);
        gbc.writeMem(0xcabd, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x460b, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabd));
        EXPECT(0x64, gbc.readMem(0xcabe));
        // CB 64 03DB
        gbc.setState(0xb05b, 0xa409, 0x82b0, 0xf6f, 0x29ed, 0xe6c2, 0x0, 0x0);
        gbc.writeMem(0xb05b, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa409, gbc.sp());
        EXPECT(0xb05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05b));
        EXPECT(0x64, gbc.readMem(0xb05c));
        // CB 64 03DC
        gbc.setState(0x780, 0xbd, 0x7c70, 0x75d9, 0x95b4, 0x6000, 0x0, 0x0);
        gbc.writeMem(0x780, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0x782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03DE
        gbc.setState(0x4bcb, 0x8970, 0x57c0, 0xb35, 0xbda5, 0x875c, 0x0, 0x1);
        gbc.writeMem(0x4bcb, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8970, gbc.sp());
        EXPECT(0x4bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03DF
        gbc.setState(0x8cf4, 0x113a, 0x7990, 0x70d, 0x4f7b, 0xd3f9, 0x1, 0x0);
        gbc.writeMem(0x8cf4, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x113a, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0x64, gbc.readMem(0x8cf5));
        // CB 64 03E2
        gbc.setState(0x6a58, 0x80db, 0x2850, 0x493f, 0x787e, 0x211a, 0x1, 0x0);
        gbc.writeMem(0x6a58, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x80db, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03E4
        gbc.setState(0x66a9, 0xe60, 0x9640, 0x979b, 0xad0f, 0x1b16, 0x0, 0x0);
        gbc.writeMem(0x66a9, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0x66ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 64 03E5
        gbc.setState(0xb8b1, 0xbb12, 0xc0d0, 0x8e81, 0xd875, 0x9ed1, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xb8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b1));
        EXPECT(0x64, gbc.readMem(0xb8b2));
        // CB 64 03E6
        gbc.setState(0x2fb2, 0xc9a4, 0x7f50, 0x9eaa, 0x9e11, 0xb364, 0x1, 0x1);
        gbc.writeMem(0x2fb2, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc9a4, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 64 03E7
        gbc.setState(0x97b7, 0x886b, 0xcb90, 0xc083, 0xa21c, 0xb3fa, 0x0, 0x1);
        gbc.writeMem(0x97b7, { 0xcb, 0x64 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0x97b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b7));
        EXPECT(0x64, gbc.readMem(0x97b8));
    }
