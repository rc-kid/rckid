    TEST(gbcemu, opcode_bd) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BD 0000
        gbc.setState(0x3b6b, 0xa20d, 0x6390, 0xf56f, 0xc8dc, 0x674, 0x1, 0x0);
        gbc.writeMem(0x3b6b, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0x3b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0001
        gbc.setState(0x8ff6, 0x481e, 0x8640, 0x8cfa, 0x412b, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x8ff6, { 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x481e, gbc.sp());
        EXPECT(0x8ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8ff6));
        // BD 0002
        gbc.setState(0xe3c3, 0x96e8, 0xb8d0, 0x8767, 0x1f7b, 0x53ad, 0x1, 0x1);
        gbc.writeMem(0xe3c3, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0xe3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe3c3));
        // BD 0003
        gbc.setState(0xb65d, 0x4e80, 0x2fe0, 0x9119, 0x47dc, 0x770d, 0x1, 0x1);
        gbc.writeMem(0xb65d, { 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0xb65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb65d));
        // BD 0004
        gbc.setState(0xa87e, 0x5a74, 0xc480, 0xdd89, 0xb4f5, 0xc8f5, 0x1, 0x0);
        gbc.writeMem(0xa87e, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0xa87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa87e));
        // BD 0005
        gbc.setState(0xa103, 0x3258, 0x7360, 0x9961, 0xfc0d, 0xa021, 0x1, 0x1);
        gbc.writeMem(0xa103, { 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3258, gbc.sp());
        EXPECT(0xa104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa103));
        // BD 0006
        gbc.setState(0x3674, 0xc54e, 0xe9f0, 0x8198, 0xe8a4, 0xddc9, 0x1, 0x1);
        gbc.writeMem(0x3674, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0007
        gbc.setState(0x3b84, 0xf962, 0x5a80, 0xce89, 0x4bf4, 0x96fa, 0x1, 0x1);
        gbc.writeMem(0x3b84, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0x3b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0008
        gbc.setState(0xa46a, 0x946d, 0x18f0, 0xd304, 0xa491, 0xa043, 0x1, 0x0);
        gbc.writeMem(0xa46a, { 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0xa46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa46a));
        // BD 0009
        gbc.setState(0xa119, 0xace4, 0x78f0, 0x215e, 0xeab0, 0x464e, 0x0, 0x0);
        gbc.writeMem(0xa119, { 0xbd });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0xa11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa119));
        // BD 000B
        gbc.setState(0xca83, 0xaf08, 0xe400, 0x3be6, 0x67c8, 0xa7b3, 0x1, 0x0);
        gbc.writeMem(0xca83, { 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0xca84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xca83));
        // BD 000C
        gbc.setState(0x5e42, 0x50df, 0x9ca0, 0xc422, 0xfc6f, 0xd548, 0x1, 0x0);
        gbc.writeMem(0x5e42, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0x5e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 000D
        gbc.setState(0xccad, 0x6a2, 0x3ca0, 0x7b1d, 0x60a9, 0x49b7, 0x1, 0x0);
        gbc.writeMem(0xccad, { 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6a2, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xccad));
        // BD 000E
        gbc.setState(0xef68, 0x612b, 0x2ab0, 0xaad6, 0x9839, 0xce73, 0x0, 0x0);
        gbc.writeMem(0xef68, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x612b, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xef68));
        // BD 000F
        gbc.setState(0x6964, 0x9bcf, 0x6ef0, 0x345, 0x83f3, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x6964, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x6965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0010
        gbc.setState(0xeeba, 0xa3e3, 0x1f60, 0x9efa, 0xefcb, 0x106, 0x1, 0x0);
        gbc.writeMem(0xeeba, { 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeeba));
        // BD 0011
        gbc.setState(0xb34d, 0xf2a, 0xfc80, 0x6d8, 0xdcf2, 0xa58c, 0x0, 0x1);
        gbc.writeMem(0xb34d, { 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf2a, gbc.sp());
        EXPECT(0xb34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb34d));
        // BD 0013
        gbc.setState(0xa6d8, 0xcc73, 0x6800, 0x53ea, 0xe485, 0x7716, 0x0, 0x1);
        gbc.writeMem(0xa6d8, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcc73, gbc.sp());
        EXPECT(0xa6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa6d8));
        // BD 0014
        gbc.setState(0xb91, 0x9037, 0x5f0, 0xe949, 0xef99, 0x10c3, 0x1, 0x1);
        gbc.writeMem(0xb91, { 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9037, gbc.sp());
        EXPECT(0xb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0015
        gbc.setState(0x87fa, 0xf4df, 0xfa40, 0xad2, 0xe606, 0x1240, 0x1, 0x1);
        gbc.writeMem(0x87fa, { 0xbd });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x87fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x87fa));
        // BD 0017
        gbc.setState(0x73e8, 0x34eb, 0x8e30, 0xaed7, 0x7e2a, 0xd34d, 0x1, 0x1);
        gbc.writeMem(0x73e8, { 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0x73e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0018
        gbc.setState(0x569f, 0xe808, 0x1c20, 0xd4e8, 0x6b91, 0x9a7e, 0x1, 0x0);
        gbc.writeMem(0x569f, { 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe808, gbc.sp());
        EXPECT(0x56a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 001A
        gbc.setState(0x7367, 0x849e, 0xd880, 0xf40, 0xa0ce, 0x97da, 0x0, 0x1);
        gbc.writeMem(0x7367, { 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x849e, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 001B
        gbc.setState(0x2bc9, 0x4b3a, 0x12a0, 0xdc5e, 0xa25e, 0x4af4, 0x0, 0x0);
        gbc.writeMem(0x2bc9, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4b3a, gbc.sp());
        EXPECT(0x2bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 001C
        gbc.setState(0xe482, 0xfcf5, 0x8ff0, 0x37f6, 0x3232, 0xe45, 0x0, 0x0);
        gbc.writeMem(0xe482, { 0xbd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfcf5, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe482));
        // BD 001D
        gbc.setState(0x5430, 0x2ce8, 0x2950, 0x61ba, 0x3e5, 0x8319, 0x1, 0x0);
        gbc.writeMem(0x5430, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ce8, gbc.sp());
        EXPECT(0x5431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 001E
        gbc.setState(0x1f7d, 0x6e23, 0x13b0, 0x4180, 0x31ac, 0xec81, 0x1, 0x0);
        gbc.writeMem(0x1f7d, { 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6e23, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 001F
        gbc.setState(0xec2c, 0xe3cb, 0x8b40, 0xcf7e, 0xba83, 0xf530, 0x0, 0x1);
        gbc.writeMem(0xec2c, { 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe3cb, gbc.sp());
        EXPECT(0xec2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xec2c));
        // BD 0021
        gbc.setState(0xeb27, 0xfcd4, 0xf230, 0xde7e, 0xeeeb, 0xf3a9, 0x1, 0x1);
        gbc.writeMem(0xeb27, { 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfcd4, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeb27));
        // BD 0022
        gbc.setState(0xc834, 0x353d, 0x7910, 0x7d02, 0xc275, 0x6e9b, 0x1, 0x0);
        gbc.writeMem(0xc834, { 0xbd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x353d, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc834));
        // BD 0023
        gbc.setState(0xdad4, 0x758d, 0x90a0, 0xcb1a, 0x19f6, 0xa289, 0x1, 0x1);
        gbc.writeMem(0xdad4, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0xdad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdad4));
        // BD 0024
        gbc.setState(0xda42, 0xcd40, 0xb2a0, 0xe22a, 0x85e8, 0xf0fa, 0x1, 0x0);
        gbc.writeMem(0xda42, { 0xbd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0xda43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda42));
        // BD 0025
        gbc.setState(0xd723, 0x5589, 0xb4a0, 0x24d6, 0x4eb3, 0x1231, 0x1, 0x1);
        gbc.writeMem(0xd723, { 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0xd724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd723));
        // BD 0027
        gbc.setState(0xc6fb, 0xe742, 0xde30, 0xe40a, 0x1267, 0xbade, 0x0, 0x0);
        gbc.writeMem(0xc6fb, { 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc6fb));
        // BD 0028
        gbc.setState(0xd74b, 0xf85c, 0xb7d0, 0xb497, 0xe9da, 0xfeab, 0x0, 0x1);
        gbc.writeMem(0xd74b, { 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd74b));
        // BD 0029
        gbc.setState(0xe387, 0x5aa7, 0xf410, 0x74b0, 0xbef7, 0x64b9, 0x1, 0x0);
        gbc.writeMem(0xe387, { 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5aa7, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe387));
        // BD 002A
        gbc.setState(0xe8ff, 0x8abf, 0xe900, 0x2264, 0xfb27, 0x33d, 0x1, 0x1);
        gbc.writeMem(0xe8ff, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0xe900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe8ff));
        // BD 002B
        gbc.setState(0x227d, 0xdcda, 0x2ce0, 0x935d, 0xb73a, 0x5950, 0x0, 0x1);
        gbc.writeMem(0x227d, { 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdcda, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 002C
        gbc.setState(0xb6af, 0x150d, 0xa5a0, 0x4864, 0x595d, 0xe62b, 0x1, 0x1);
        gbc.writeMem(0xb6af, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x150d, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6af));
        // BD 002D
        gbc.setState(0x76eb, 0xe192, 0xcd00, 0x6ab9, 0x3596, 0x8861, 0x0, 0x0);
        gbc.writeMem(0x76eb, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe192, gbc.sp());
        EXPECT(0x76ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 002E
        gbc.setState(0x2fb1, 0x9f72, 0xa790, 0x8d5c, 0xd691, 0x68e9, 0x0, 0x1);
        gbc.writeMem(0x2fb1, { 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f72, gbc.sp());
        EXPECT(0x2fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 002F
        gbc.setState(0xd01b, 0xbe5f, 0x1fb0, 0x8b64, 0xc388, 0xc7eb, 0x1, 0x1);
        gbc.writeMem(0xd01b, { 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbe5f, gbc.sp());
        EXPECT(0xd01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd01b));
        // BD 0030
        gbc.setState(0xaeb4, 0x47f6, 0xa960, 0x3799, 0x2699, 0x56ef, 0x0, 0x0);
        gbc.writeMem(0xaeb4, { 0xbd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x47f6, gbc.sp());
        EXPECT(0xaeb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaeb4));
        // BD 0032
        gbc.setState(0xef78, 0xb811, 0x76d0, 0x4d6e, 0x763a, 0x9cb0, 0x0, 0x0);
        gbc.writeMem(0xef78, { 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb811, gbc.sp());
        EXPECT(0xef79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xef78));
        // BD 0033
        gbc.setState(0xa5e4, 0xdce5, 0x6cf0, 0xd1c8, 0x3250, 0x48a9, 0x0, 0x0);
        gbc.writeMem(0xa5e4, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdce5, gbc.sp());
        EXPECT(0xa5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa5e4));
        // BD 0034
        gbc.setState(0x7b78, 0x1102, 0x4db0, 0x78aa, 0x827d, 0x5996, 0x1, 0x1);
        gbc.writeMem(0x7b78, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1102, gbc.sp());
        EXPECT(0x7b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0035
        gbc.setState(0xb86f, 0xae5, 0x9cf0, 0xc3e6, 0x14c8, 0x1238, 0x1, 0x1);
        gbc.writeMem(0xb86f, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xae5, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb86f));
        // BD 0036
        gbc.setState(0xbf47, 0x8b3a, 0xc4d0, 0x1e42, 0x4cf2, 0xb193, 0x1, 0x1);
        gbc.writeMem(0xbf47, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbf47));
        // BD 0037
        gbc.setState(0xacc8, 0xbcfe, 0x4910, 0xd373, 0x81f4, 0x18e7, 0x0, 0x0);
        gbc.writeMem(0xacc8, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbcfe, gbc.sp());
        EXPECT(0xacc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xacc8));
        // BD 0038
        gbc.setState(0xa464, 0xbef1, 0xf540, 0xcac3, 0x5c38, 0x76c, 0x1, 0x0);
        gbc.writeMem(0xa464, { 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbef1, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa464));
        // BD 0039
        gbc.setState(0x7c2c, 0xacd5, 0xb210, 0x2dd, 0x146f, 0xbf7e, 0x1, 0x1);
        gbc.writeMem(0x7c2c, { 0xbd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 003A
        gbc.setState(0x5281, 0x5107, 0xa450, 0x4f4a, 0x8c28, 0xf2e1, 0x1, 0x0);
        gbc.writeMem(0x5281, { 0xbd });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5107, gbc.sp());
        EXPECT(0x5282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 003B
        gbc.setState(0xe27f, 0x7a25, 0xee0, 0xc289, 0xd658, 0xe001, 0x0, 0x0);
        gbc.writeMem(0xe27f, { 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7a25, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe27f));
        // BD 003C
        gbc.setState(0x25db, 0xc6db, 0x7b20, 0x3875, 0x7a35, 0xe66c, 0x1, 0x0);
        gbc.writeMem(0x25db, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc6db, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 003D
        gbc.setState(0x9dcf, 0x3715, 0x66e0, 0xdb8b, 0x6e37, 0x4280, 0x1, 0x0);
        gbc.writeMem(0x9dcf, { 0xbd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3715, gbc.sp());
        EXPECT(0x9dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9dcf));
        // BD 003E
        gbc.setState(0x8fb4, 0xe10d, 0xebb0, 0x492, 0x6075, 0x464a, 0x0, 0x1);
        gbc.writeMem(0x8fb4, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0x8fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8fb4));
        // BD 003F
        gbc.setState(0x634f, 0x190d, 0x6240, 0x379b, 0x1c2, 0xe631, 0x1, 0x1);
        gbc.writeMem(0x634f, { 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x190d, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0040
        gbc.setState(0xc47, 0xb6c7, 0x7170, 0x55f7, 0xe460, 0x8611, 0x1, 0x1);
        gbc.writeMem(0xc47, { 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0xc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0041
        gbc.setState(0xa712, 0x2dcb, 0xd260, 0x5f57, 0xd856, 0x9409, 0x0, 0x1);
        gbc.writeMem(0xa712, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0xa713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa712));
        // BD 0043
        gbc.setState(0x52ed, 0x7e7d, 0x120, 0x1d41, 0x7dd2, 0x5b93, 0x1, 0x1);
        gbc.writeMem(0x52ed, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7e7d, gbc.sp());
        EXPECT(0x52ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0044
        gbc.setState(0x5213, 0x103f, 0xc620, 0x473e, 0x7b3, 0xb79, 0x0, 0x0);
        gbc.writeMem(0x5213, { 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0x5214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0045
        gbc.setState(0x824e, 0x3e91, 0xbcc0, 0xd598, 0xa704, 0xc5e7, 0x0, 0x1);
        gbc.writeMem(0x824e, { 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3e91, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x824e));
        // BD 0046
        gbc.setState(0x87de, 0x7bdb, 0x5ad0, 0xbf7d, 0x40c, 0xb8f1, 0x0, 0x0);
        gbc.writeMem(0x87de, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7bdb, gbc.sp());
        EXPECT(0x87df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x87de));
        // BD 0047
        gbc.setState(0xe568, 0x67d4, 0x7060, 0x8ba3, 0x690c, 0xcd15, 0x1, 0x0);
        gbc.writeMem(0xe568, { 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe568));
        // BD 0048
        gbc.setState(0xaaf0, 0x2f82, 0xc7b0, 0xd11e, 0x9985, 0x7a80, 0x1, 0x1);
        gbc.writeMem(0xaaf0, { 0xbd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2f82, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaaf0));
        // BD 0049
        gbc.setState(0xdcaf, 0x4b7b, 0xb00, 0xc45a, 0xe844, 0x26c1, 0x0, 0x0);
        gbc.writeMem(0xdcaf, { 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b7b, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdcaf));
        // BD 004B
        gbc.setState(0xa8cb, 0x4f85, 0x5100, 0x7b61, 0xd71d, 0x4b36, 0x0, 0x1);
        gbc.writeMem(0xa8cb, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4f85, gbc.sp());
        EXPECT(0xa8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa8cb));
        // BD 004C
        gbc.setState(0x61f0, 0xa1fd, 0x1dc0, 0x5f82, 0x74ce, 0x60de, 0x1, 0x1);
        gbc.writeMem(0x61f0, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa1fd, gbc.sp());
        EXPECT(0x61f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 004D
        gbc.setState(0xb782, 0x67ae, 0xc260, 0x5423, 0x9c54, 0xc479, 0x0, 0x0);
        gbc.writeMem(0xb782, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x67ae, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb782));
        // BD 004E
        gbc.setState(0xe6d4, 0x2bd8, 0x1070, 0x574, 0x5a47, 0x6bfe, 0x0, 0x1);
        gbc.writeMem(0xe6d4, { 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe6d4));
        // BD 004F
        gbc.setState(0xd68, 0x446d, 0x7ce0, 0xdd6b, 0x961f, 0x4636, 0x0, 0x1);
        gbc.writeMem(0xd68, { 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x446d, gbc.sp());
        EXPECT(0xd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0051
        gbc.setState(0xceb2, 0xc2c2, 0xbc30, 0x63b5, 0x3a8d, 0x9fa3, 0x0, 0x1);
        gbc.writeMem(0xceb2, { 0xbd });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc2c2, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xceb2));
        // BD 0052
        gbc.setState(0x72bc, 0x4f8, 0xcd40, 0xc866, 0x314a, 0x150, 0x0, 0x1);
        gbc.writeMem(0x72bc, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4f8, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0053
        gbc.setState(0xe2b2, 0x4756, 0xb270, 0x237b, 0x2319, 0x8234, 0x0, 0x0);
        gbc.writeMem(0xe2b2, { 0xbd });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0xe2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe2b2));
        // BD 0054
        gbc.setState(0xe479, 0x169a, 0x2470, 0x6131, 0xe85b, 0x2770, 0x1, 0x0);
        gbc.writeMem(0xe479, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe479));
        // BD 0055
        gbc.setState(0xcad0, 0x3cce, 0x2ca0, 0xc272, 0x13b1, 0x2d9, 0x1, 0x0);
        gbc.writeMem(0xcad0, { 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3cce, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcad0));
        // BD 0056
        gbc.setState(0x7739, 0x63c2, 0x3c40, 0xd623, 0xced0, 0x46a5, 0x0, 0x0);
        gbc.writeMem(0x7739, { 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x63c2, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0057
        gbc.setState(0x7a8d, 0x9291, 0xf60, 0xb8af, 0xaac5, 0xe488, 0x0, 0x0);
        gbc.writeMem(0x7a8d, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0x7a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0058
        gbc.setState(0x807d, 0xd14e, 0x4aa0, 0x123d, 0xc048, 0xdcc2, 0x1, 0x0);
        gbc.writeMem(0x807d, { 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x807d));
        // BD 0059
        gbc.setState(0x5ee3, 0xc1d1, 0xf8e0, 0x418, 0x4f23, 0x4d5e, 0x1, 0x0);
        gbc.writeMem(0x5ee3, { 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x5ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 005A
        gbc.setState(0xe852, 0x9779, 0x49d0, 0xf71e, 0x1958, 0x289b, 0x1, 0x1);
        gbc.writeMem(0xe852, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe852));
        // BD 005B
        gbc.setState(0x8f7d, 0x6aa7, 0x3fe0, 0x225d, 0x1b5c, 0x4e2f, 0x1, 0x0);
        gbc.writeMem(0x8f7d, { 0xbd });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6aa7, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8f7d));
        // BD 005C
        gbc.setState(0xe421, 0x75a9, 0x8470, 0xd765, 0xf389, 0x7b80, 0x0, 0x1);
        gbc.writeMem(0xe421, { 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe421));
        // BD 005D
        gbc.setState(0x441d, 0x22b5, 0x23f0, 0x1315, 0xc86d, 0xbe8c, 0x0, 0x1);
        gbc.writeMem(0x441d, { 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0x441e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 005E
        gbc.setState(0x3831, 0x4d7e, 0x1d20, 0xe2a3, 0x3ae3, 0xd96b, 0x1, 0x0);
        gbc.writeMem(0x3831, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4d7e, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 005F
        gbc.setState(0xa310, 0x7b4a, 0xc3c0, 0x9195, 0xc086, 0x223f, 0x1, 0x0);
        gbc.writeMem(0xa310, { 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0xa311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa310));
        // BD 0060
        gbc.setState(0x505, 0x6854, 0x6bc0, 0x97ef, 0xf01, 0xc9de, 0x1, 0x0);
        gbc.writeMem(0x505, { 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6854, gbc.sp());
        EXPECT(0x506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0061
        gbc.setState(0x8006, 0x9538, 0xcd90, 0x9f1c, 0x4509, 0x2cc, 0x0, 0x0);
        gbc.writeMem(0x8006, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8006));
        // BD 0062
        gbc.setState(0xd4d8, 0x69b6, 0x14c0, 0x1df9, 0xcd4d, 0xe18d, 0x1, 0x0);
        gbc.writeMem(0xd4d8, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x69b6, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd4d8));
        // BD 0064
        gbc.setState(0xde0e, 0xccf0, 0x1750, 0x2dc2, 0x1f39, 0x4b09, 0x0, 0x0);
        gbc.writeMem(0xde0e, { 0xbd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0xde0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xde0e));
        // BD 0065
        gbc.setState(0x2038, 0x8d0, 0x1910, 0xb597, 0x25cb, 0xf0ee, 0x0, 0x1);
        gbc.writeMem(0x2038, { 0xbd });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0066
        gbc.setState(0xbb1c, 0xd79a, 0x5bf0, 0x633f, 0x7a31, 0xffc4, 0x1, 0x1);
        gbc.writeMem(0xbb1c, { 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd79a, gbc.sp());
        EXPECT(0xbb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbb1c));
        // BD 0067
        gbc.setState(0x8e41, 0xaa83, 0x8a60, 0xbcb9, 0xd86e, 0x7fa2, 0x1, 0x1);
        gbc.writeMem(0x8e41, { 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x8e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8e41));
        // BD 0068
        gbc.setState(0xc053, 0xe9c0, 0x7100, 0xda8f, 0xe613, 0x1dd6, 0x0, 0x0);
        gbc.writeMem(0xc053, { 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe9c0, gbc.sp());
        EXPECT(0xc054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc053));
        // BD 0069
        gbc.setState(0x6c31, 0xa623, 0x1020, 0x1da9, 0xe4c2, 0x7eca, 0x1, 0x1);
        gbc.writeMem(0x6c31, { 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa623, gbc.sp());
        EXPECT(0x6c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 006A
        gbc.setState(0xe079, 0x5784, 0xea00, 0x5370, 0x2a6, 0xc7d8, 0x1, 0x0);
        gbc.writeMem(0xe079, { 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe079));
        // BD 006B
        gbc.setState(0xc9f4, 0x87c6, 0xf160, 0x1059, 0xc8d7, 0x2719, 0x0, 0x0);
        gbc.writeMem(0xc9f4, { 0xbd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0xc9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc9f4));
        // BD 006C
        gbc.setState(0x5134, 0x38c3, 0x3e50, 0x9e5d, 0xae76, 0x29a2, 0x0, 0x1);
        gbc.writeMem(0x5134, { 0xbd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 006D
        gbc.setState(0x8830, 0xf0c8, 0xbb60, 0xd997, 0xdcca, 0x6553, 0x1, 0x1);
        gbc.writeMem(0x8830, { 0xbd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0x8831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8830));
        // BD 006E
        gbc.setState(0x1d9, 0xe771, 0x7c80, 0x7c89, 0xc5c9, 0x9f89, 0x1, 0x0);
        gbc.writeMem(0x1d9, { 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe771, gbc.sp());
        EXPECT(0x1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 006F
        gbc.setState(0x2e5, 0xd0b, 0x5060, 0x4ec0, 0x17ad, 0x9cc6, 0x0, 0x0);
        gbc.writeMem(0x2e5, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd0b, gbc.sp());
        EXPECT(0x2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0070
        gbc.setState(0x5678, 0xa3ff, 0x5bf0, 0x38f1, 0xd717, 0x6c57, 0x1, 0x0);
        gbc.writeMem(0x5678, { 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0071
        gbc.setState(0xaade, 0x1d78, 0x7c90, 0xf69f, 0xea91, 0x4c30, 0x1, 0x0);
        gbc.writeMem(0xaade, { 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d78, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaade));
        // BD 0072
        gbc.setState(0xc126, 0xaec9, 0x8720, 0x426, 0xfc9e, 0x6815, 0x0, 0x1);
        gbc.writeMem(0xc126, { 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaec9, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc126));
        // BD 0073
        gbc.setState(0x71eb, 0x85bf, 0xf6f0, 0xa256, 0x7de6, 0xf443, 0x0, 0x1);
        gbc.writeMem(0x71eb, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x85bf, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0074
        gbc.setState(0x59f1, 0xae23, 0x72b0, 0x1dc3, 0x2d53, 0x1d8e, 0x1, 0x0);
        gbc.writeMem(0x59f1, { 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x59f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0075
        gbc.setState(0xbbe2, 0xddf2, 0x6990, 0x4f5, 0xc9eb, 0x2135, 0x1, 0x1);
        gbc.writeMem(0xbbe2, { 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xddf2, gbc.sp());
        EXPECT(0xbbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbbe2));
        // BD 0076
        gbc.setState(0xda12, 0x42c5, 0x9f10, 0xeb01, 0x323a, 0xa3ff, 0x1, 0x0);
        gbc.writeMem(0xda12, { 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x42c5, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda12));
        // BD 0077
        gbc.setState(0x97fb, 0xac58, 0x1c50, 0x1101, 0x8c00, 0x152d, 0x1, 0x1);
        gbc.writeMem(0x97fb, { 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xac58, gbc.sp());
        EXPECT(0x97fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x97fb));
        // BD 0078
        gbc.setState(0xd0a5, 0xd186, 0x2850, 0x553d, 0xb611, 0x4956, 0x1, 0x0);
        gbc.writeMem(0xd0a5, { 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd186, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd0a5));
        // BD 0079
        gbc.setState(0x5f72, 0x8fa4, 0xb4b0, 0x8ca1, 0x7d1f, 0x450, 0x0, 0x1);
        gbc.writeMem(0x5f72, { 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x5f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 007A
        gbc.setState(0x68b2, 0xef6d, 0x22c0, 0x87c7, 0x66dc, 0x6548, 0x0, 0x0);
        gbc.writeMem(0x68b2, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0x68b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 007B
        gbc.setState(0x379d, 0xf02d, 0x24f0, 0xa6af, 0x7df7, 0xea9e, 0x0, 0x0);
        gbc.writeMem(0x379d, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0x379e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 007C
        gbc.setState(0xd3d6, 0x47fa, 0x2060, 0x71df, 0x37b4, 0x6ab8, 0x1, 0x0);
        gbc.writeMem(0xd3d6, { 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x47fa, gbc.sp());
        EXPECT(0xd3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd3d6));
        // BD 007D
        gbc.setState(0x345, 0x31b4, 0x6570, 0x6ffa, 0x7d64, 0xc1a3, 0x1, 0x1);
        gbc.writeMem(0x345, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0x346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 007E
        gbc.setState(0x83c4, 0x4759, 0x920, 0xb674, 0x6474, 0x7174, 0x1, 0x1);
        gbc.writeMem(0x83c4, { 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x83c4));
        // BD 007F
        gbc.setState(0x39f2, 0xd0f7, 0x54c0, 0x491d, 0x2f53, 0xac, 0x0, 0x0);
        gbc.writeMem(0x39f2, { 0xbd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd0f7, gbc.sp());
        EXPECT(0x39f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0080
        gbc.setState(0x6c51, 0x5a77, 0x3c70, 0xc6eb, 0xf16e, 0x41ce, 0x1, 0x0);
        gbc.writeMem(0x6c51, { 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0081
        gbc.setState(0x72f7, 0x8703, 0x34e0, 0xa2ca, 0x2d00, 0xd94b, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0083
        gbc.setState(0xee6d, 0x279, 0x1580, 0x6024, 0xf9f5, 0xc4c9, 0x0, 0x1);
        gbc.writeMem(0xee6d, { 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x279, gbc.sp());
        EXPECT(0xee6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xee6d));
        // BD 0084
        gbc.setState(0xe291, 0xe66, 0xe380, 0x8d05, 0x7953, 0xfabd, 0x0, 0x1);
        gbc.writeMem(0xe291, { 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe66, gbc.sp());
        EXPECT(0xe292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe291));
        // BD 0085
        gbc.setState(0xc918, 0x7226, 0x970, 0x7cb1, 0xd369, 0xbec4, 0x1, 0x0);
        gbc.writeMem(0xc918, { 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7226, gbc.sp());
        EXPECT(0xc919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc918));
        // BD 0086
        gbc.setState(0xc377, 0xf946, 0x86c0, 0xaecf, 0xb37d, 0x331f, 0x1, 0x1);
        gbc.writeMem(0xc377, { 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0xc378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc377));
        // BD 0087
        gbc.setState(0xa257, 0x39ad, 0x50, 0x2742, 0xdc0d, 0x4fba, 0x1, 0x1);
        gbc.writeMem(0xa257, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x39ad, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa257));
        // BD 0088
        gbc.setState(0x66c7, 0x2f3, 0xca0, 0xef20, 0xba3b, 0x6477, 0x1, 0x0);
        gbc.writeMem(0x66c7, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2f3, gbc.sp());
        EXPECT(0x66c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0089
        gbc.setState(0x4476, 0xe41f, 0x180, 0x4398, 0xb417, 0xbb33, 0x1, 0x0);
        gbc.writeMem(0x4476, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe41f, gbc.sp());
        EXPECT(0x4477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 008A
        gbc.setState(0xbaa1, 0x972c, 0xfcd0, 0xfd0b, 0xc73, 0x32f9, 0x1, 0x1);
        gbc.writeMem(0xbaa1, { 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xbaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbaa1));
        // BD 008B
        gbc.setState(0x61b9, 0x6f4f, 0x9ab0, 0x19d6, 0x865e, 0x5cb1, 0x1, 0x1);
        gbc.writeMem(0x61b9, { 0xbd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f4f, gbc.sp());
        EXPECT(0x61ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 008C
        gbc.setState(0x941a, 0xe8ae, 0x7ae0, 0x7d93, 0x48bc, 0x273a, 0x1, 0x1);
        gbc.writeMem(0x941a, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe8ae, gbc.sp());
        EXPECT(0x941b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x941a));
        // BD 008D
        gbc.setState(0x634a, 0x246, 0xfd20, 0x9066, 0xce7b, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0x634a, { 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x246, gbc.sp());
        EXPECT(0x634b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 008E
        gbc.setState(0xd4d7, 0x6d87, 0xcd10, 0x474, 0x7081, 0xbe18, 0x0, 0x0);
        gbc.writeMem(0xd4d7, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0xd4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd4d7));
        // BD 008F
        gbc.setState(0x6f6c, 0x796c, 0xeb00, 0xb5e8, 0xb589, 0x84a1, 0x0, 0x0);
        gbc.writeMem(0x6f6c, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x796c, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0090
        gbc.setState(0x349a, 0xed9d, 0xa350, 0xb9e1, 0x2544, 0xc901, 0x1, 0x0);
        gbc.writeMem(0x349a, { 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed9d, gbc.sp());
        EXPECT(0x349b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0091
        gbc.setState(0x417c, 0x711f, 0xcbb0, 0x9158, 0xff1, 0x1aa6, 0x1, 0x0);
        gbc.writeMem(0x417c, { 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x711f, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0092
        gbc.setState(0xd427, 0x5598, 0x9830, 0xf5bf, 0x17c, 0x3737, 0x1, 0x0);
        gbc.writeMem(0xd427, { 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0xd428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd427));
        // BD 0093
        gbc.setState(0x9402, 0xeb56, 0xf4a0, 0xcf13, 0xabd3, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0x9402, { 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xeb56, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9402));
        // BD 0094
        gbc.setState(0x4993, 0xc3f1, 0xb8f0, 0xc492, 0xe8a0, 0xbcd, 0x0, 0x1);
        gbc.writeMem(0x4993, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc3f1, gbc.sp());
        EXPECT(0x4994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0095
        gbc.setState(0x116b, 0xccc8, 0x48b0, 0xc113, 0x5775, 0xe92, 0x1, 0x0);
        gbc.writeMem(0x116b, { 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xccc8, gbc.sp());
        EXPECT(0x116c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0096
        gbc.setState(0x35bf, 0x9e7c, 0xa460, 0xc230, 0x9072, 0x20b1, 0x1, 0x1);
        gbc.writeMem(0x35bf, { 0xbd });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9e7c, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0097
        gbc.setState(0xd337, 0xefd6, 0xcf40, 0x2a79, 0x80da, 0xfb85, 0x0, 0x0);
        gbc.writeMem(0xd337, { 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xefd6, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd337));
        // BD 0098
        gbc.setState(0x1b2e, 0x3ecf, 0x91c0, 0x1b36, 0x6868, 0x6622, 0x1, 0x0);
        gbc.writeMem(0x1b2e, { 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0x1b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0099
        gbc.setState(0x6a08, 0x3366, 0xfc0, 0xe2e6, 0xddee, 0xc173, 0x0, 0x1);
        gbc.writeMem(0x6a08, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3366, gbc.sp());
        EXPECT(0x6a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 009A
        gbc.setState(0x7898, 0x925a, 0x9900, 0x42e1, 0x63fd, 0xb451, 0x1, 0x1);
        gbc.writeMem(0x7898, { 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x925a, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 009B
        gbc.setState(0x1d7a, 0x3078, 0x8d20, 0x887a, 0xbd8a, 0x657d, 0x0, 0x1);
        gbc.writeMem(0x1d7a, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3078, gbc.sp());
        EXPECT(0x1d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 009C
        gbc.setState(0x7023, 0xc13b, 0xe9d0, 0xd350, 0x2ac3, 0x1792, 0x0, 0x0);
        gbc.writeMem(0x7023, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc13b, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 009D
        gbc.setState(0xbf27, 0xba21, 0xa620, 0x15cf, 0x6bdc, 0x634b, 0x0, 0x0);
        gbc.writeMem(0xbf27, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0xbf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbf27));
        // BD 009E
        gbc.setState(0x28e6, 0x1477, 0xfe20, 0x83bf, 0xf08c, 0xc7ac, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 009F
        gbc.setState(0x78e0, 0xeec2, 0xc20, 0xb122, 0xb5e5, 0xda79, 0x0, 0x1);
        gbc.writeMem(0x78e0, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00A0
        gbc.setState(0x1280, 0xcd42, 0x41f0, 0x5ff, 0xe431, 0x8233, 0x1, 0x0);
        gbc.writeMem(0x1280, { 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcd42, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00A1
        gbc.setState(0x5dfd, 0xdef1, 0x4050, 0x5916, 0xf77c, 0x76ab, 0x1, 0x1);
        gbc.writeMem(0x5dfd, { 0xbd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdef1, gbc.sp());
        EXPECT(0x5dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00A2
        gbc.setState(0xcb4e, 0xeb2, 0x27a0, 0x1cfb, 0x86e5, 0x12c2, 0x1, 0x1);
        gbc.writeMem(0xcb4e, { 0xbd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeb2, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcb4e));
        // BD 00A3
        gbc.setState(0xc5ce, 0x975f, 0x4160, 0x8ffe, 0xf104, 0xa304, 0x1, 0x1);
        gbc.writeMem(0xc5ce, { 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x975f, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc5ce));
        // BD 00A4
        gbc.setState(0xa27d, 0xc9c0, 0x5ad0, 0xa109, 0xa274, 0x26ca, 0x0, 0x0);
        gbc.writeMem(0xa27d, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc9c0, gbc.sp());
        EXPECT(0xa27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa27d));
        // BD 00A5
        gbc.setState(0x55a9, 0xd593, 0xd360, 0x3011, 0x70af, 0x4f04, 0x0, 0x1);
        gbc.writeMem(0x55a9, { 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd593, gbc.sp());
        EXPECT(0x55aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00A6
        gbc.setState(0xbb54, 0x9c86, 0x5890, 0x8f28, 0xc8dc, 0x2843, 0x1, 0x1);
        gbc.writeMem(0xbb54, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9c86, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbb54));
        // BD 00A7
        gbc.setState(0x115e, 0x6755, 0xc160, 0xffa5, 0x5d5f, 0xf4ac, 0x1, 0x1);
        gbc.writeMem(0x115e, { 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00A8
        gbc.setState(0x51db, 0x6fbd, 0x6380, 0x89e0, 0x77d2, 0x358c, 0x0, 0x0);
        gbc.writeMem(0x51db, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6fbd, gbc.sp());
        EXPECT(0x51dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00A9
        gbc.setState(0x2887, 0x29d9, 0x3500, 0x3845, 0x10b4, 0xcc99, 0x1, 0x1);
        gbc.writeMem(0x2887, { 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00AA
        gbc.setState(0x817e, 0xe6da, 0x1840, 0x5b8f, 0x95b, 0xad4, 0x0, 0x0);
        gbc.writeMem(0x817e, { 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe6da, gbc.sp());
        EXPECT(0x817f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x817e));
        // BD 00AB
        gbc.setState(0x9225, 0x6e32, 0x85b0, 0xc57d, 0xfb98, 0x98ac, 0x1, 0x0);
        gbc.writeMem(0x9225, { 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6e32, gbc.sp());
        EXPECT(0x9226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9225));
        // BD 00AC
        gbc.setState(0x2c5f, 0xf233, 0xf6d0, 0x6360, 0x8fb5, 0x4d57, 0x0, 0x0);
        gbc.writeMem(0x2c5f, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00AD
        gbc.setState(0x4cc2, 0xccc, 0xe870, 0x93dc, 0x742b, 0xddfa, 0x0, 0x1);
        gbc.writeMem(0x4cc2, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xccc, gbc.sp());
        EXPECT(0x4cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00AE
        gbc.setState(0xd7a5, 0x3621, 0xe010, 0x4771, 0x202, 0xb858, 0x1, 0x0);
        gbc.writeMem(0xd7a5, { 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3621, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd7a5));
        // BD 00AF
        gbc.setState(0xdee5, 0xe96b, 0xeb70, 0xe2fd, 0xe1bd, 0xafda, 0x0, 0x0);
        gbc.writeMem(0xdee5, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe96b, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdee5));
        // BD 00B0
        gbc.setState(0x6ab2, 0xa2e6, 0x2800, 0x32d4, 0x5262, 0xa066, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00B1
        gbc.setState(0x6486, 0x9c27, 0xd550, 0xa95f, 0x39f5, 0xad2f, 0x1, 0x1);
        gbc.writeMem(0x6486, { 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00B2
        gbc.setState(0x6f31, 0xa6e1, 0x2730, 0x5c2b, 0x7420, 0x35d2, 0x0, 0x1);
        gbc.writeMem(0x6f31, { 0xbd });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00B3
        gbc.setState(0xa615, 0x17c2, 0x4f00, 0xa194, 0x98c5, 0x2b6a, 0x0, 0x0);
        gbc.writeMem(0xa615, { 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x17c2, gbc.sp());
        EXPECT(0xa616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa615));
        // BD 00B4
        gbc.setState(0xab6d, 0x36e0, 0xde0, 0x9189, 0xa01, 0x95ea, 0x1, 0x0);
        gbc.writeMem(0xab6d, { 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x36e0, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab6d));
        // BD 00B5
        gbc.setState(0x9f8, 0x30f, 0xe8b0, 0x41aa, 0x6d4b, 0x661, 0x0, 0x0);
        gbc.writeMem(0x9f8, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x30f, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00B6
        gbc.setState(0xde69, 0x8914, 0xa660, 0xd74c, 0x1336, 0x8af0, 0x0, 0x0);
        gbc.writeMem(0xde69, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8914, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xde69));
        // BD 00B7
        gbc.setState(0x8ceb, 0xddd3, 0x95a0, 0x6f62, 0x7950, 0x190e, 0x0, 0x1);
        gbc.writeMem(0x8ceb, { 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8ceb));
        // BD 00B8
        gbc.setState(0xb18, 0x4084, 0x4e40, 0x68e8, 0x68c5, 0xdf62, 0x0, 0x0);
        gbc.writeMem(0xb18, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4084, gbc.sp());
        EXPECT(0xb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00B9
        gbc.setState(0xb884, 0x4fff, 0xd980, 0xde5e, 0xd17f, 0x57b0, 0x1, 0x1);
        gbc.writeMem(0xb884, { 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0xb885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb884));
        // BD 00BB
        gbc.setState(0xa744, 0xd269, 0xf840, 0xd739, 0xadcd, 0x5b64, 0x1, 0x0);
        gbc.writeMem(0xa744, { 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa744));
        // BD 00BC
        gbc.setState(0x66ab, 0x7449, 0xcf0, 0x6724, 0x900b, 0x431e, 0x0, 0x1);
        gbc.writeMem(0x66ab, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0x66ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00BD
        gbc.setState(0xcdd6, 0x2713, 0x9eb0, 0x35a2, 0x74ee, 0x5969, 0x0, 0x0);
        gbc.writeMem(0xcdd6, { 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2713, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcdd6));
        // BD 00BE
        gbc.setState(0xb0b9, 0x3def, 0xe0f0, 0x42a8, 0x6e44, 0x84d6, 0x0, 0x1);
        gbc.writeMem(0xb0b9, { 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3def, gbc.sp());
        EXPECT(0xb0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb0b9));
        // BD 00BF
        gbc.setState(0x4f65, 0x420f, 0xc950, 0x825d, 0x6a83, 0x7a0f, 0x1, 0x0);
        gbc.writeMem(0x4f65, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0x4f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00C0
        gbc.setState(0x9fcd, 0x145b, 0x9f0, 0x3597, 0xead0, 0xa902, 0x0, 0x1);
        gbc.writeMem(0x9fcd, { 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0x9fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9fcd));
        // BD 00C1
        gbc.setState(0x902b, 0x3442, 0x8090, 0x17ce, 0x916d, 0xd45b, 0x1, 0x0);
        gbc.writeMem(0x902b, { 0xbd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3442, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x902b));
        // BD 00C2
        gbc.setState(0x2914, 0xa5f5, 0x8eb0, 0x3b7f, 0x39a7, 0x75f0, 0x0, 0x0);
        gbc.writeMem(0x2914, { 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa5f5, gbc.sp());
        EXPECT(0x2915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00C3
        gbc.setState(0xe079, 0xb358, 0xdbb0, 0xfd27, 0x28bb, 0x7930, 0x1, 0x1);
        gbc.writeMem(0xe079, { 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe079));
        // BD 00C4
        gbc.setState(0xd837, 0x332b, 0xd040, 0xaedf, 0xf80f, 0xda30, 0x1, 0x0);
        gbc.writeMem(0xd837, { 0xbd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x332b, gbc.sp());
        EXPECT(0xd838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd837));
        // BD 00C5
        gbc.setState(0x1f53, 0xd118, 0xd7a0, 0x9588, 0x6c15, 0x5641, 0x1, 0x1);
        gbc.writeMem(0x1f53, { 0xbd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd118, gbc.sp());
        EXPECT(0x1f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00C6
        gbc.setState(0x96c7, 0xd446, 0xe070, 0x83df, 0x4c61, 0xc14f, 0x0, 0x1);
        gbc.writeMem(0x96c7, { 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x96c7));
        // BD 00C7
        gbc.setState(0x7c0, 0x888d, 0xb020, 0x36c5, 0xd399, 0x982d, 0x0, 0x0);
        gbc.writeMem(0x7c0, { 0xbd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x888d, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00C8
        gbc.setState(0x18a4, 0x71da, 0x3bd0, 0xe47, 0x1b3c, 0xa7e5, 0x1, 0x1);
        gbc.writeMem(0x18a4, { 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x71da, gbc.sp());
        EXPECT(0x18a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00C9
        gbc.setState(0x1db, 0xe7d3, 0xc080, 0x45b2, 0xcb58, 0xa3fb, 0x1, 0x1);
        gbc.writeMem(0x1db, { 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7d3, gbc.sp());
        EXPECT(0x1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00CA
        gbc.setState(0x182b, 0x857c, 0x7fc0, 0x3bc3, 0x685, 0x73d6, 0x1, 0x1);
        gbc.writeMem(0x182b, { 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00CC
        gbc.setState(0x82ec, 0x3cb1, 0xa190, 0xd665, 0x3371, 0x52ca, 0x0, 0x1);
        gbc.writeMem(0x82ec, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x82ec));
        // BD 00CD
        gbc.setState(0x67f3, 0xdeeb, 0xacc0, 0x531f, 0x5691, 0x97d5, 0x0, 0x1);
        gbc.writeMem(0x67f3, { 0xbd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdeeb, gbc.sp());
        EXPECT(0x67f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00CE
        gbc.setState(0xd0ba, 0x23c7, 0xc0f0, 0x88a0, 0xb63b, 0xefdd, 0x1, 0x1);
        gbc.writeMem(0xd0ba, { 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x23c7, gbc.sp());
        EXPECT(0xd0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd0ba));
        // BD 00CF
        gbc.setState(0x286c, 0xd4ea, 0x8e00, 0xe2f1, 0x481a, 0x2c3c, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd4ea, gbc.sp());
        EXPECT(0x286d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00D0
        gbc.setState(0xb0f, 0x9057, 0xb960, 0x2b34, 0x2a35, 0xb4e1, 0x0, 0x1);
        gbc.writeMem(0xb0f, { 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9057, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00D1
        gbc.setState(0x2014, 0x370b, 0x72a0, 0xcab3, 0x1252, 0x2cf8, 0x0, 0x0);
        gbc.writeMem(0x2014, { 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0x2015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00D2
        gbc.setState(0x888, 0xb42d, 0x2d40, 0x53c3, 0x7b93, 0x9fdd, 0x1, 0x0);
        gbc.writeMem(0x888, { 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0x889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00D3
        gbc.setState(0xa1f6, 0xc1c1, 0x22a0, 0x4171, 0x7cc8, 0xd88f, 0x1, 0x1);
        gbc.writeMem(0xa1f6, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa1f6));
        // BD 00D4
        gbc.setState(0x32a0, 0x537e, 0x8870, 0x71a6, 0x93c4, 0xb229, 0x1, 0x0);
        gbc.writeMem(0x32a0, { 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00D5
        gbc.setState(0x5d22, 0x38fa, 0x8fb0, 0x80ff, 0xb40f, 0x9b03, 0x1, 0x0);
        gbc.writeMem(0x5d22, { 0xbd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x38fa, gbc.sp());
        EXPECT(0x5d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00D6
        gbc.setState(0x56cb, 0xe4fa, 0x6a70, 0x21f2, 0x6c7, 0x141d, 0x0, 0x1);
        gbc.writeMem(0x56cb, { 0xbd });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00D7
        gbc.setState(0x32aa, 0xb7b, 0x9c30, 0x80a9, 0x6e8b, 0xec7c, 0x0, 0x1);
        gbc.writeMem(0x32aa, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00D8
        gbc.setState(0xed89, 0xb705, 0x4bc0, 0x8d01, 0x5fb, 0xdeee, 0x1, 0x1);
        gbc.writeMem(0xed89, { 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xed89));
        // BD 00D9
        gbc.setState(0x3829, 0xbf1d, 0x8720, 0xbbdd, 0xe6fd, 0x7786, 0x1, 0x0);
        gbc.writeMem(0x3829, { 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbf1d, gbc.sp());
        EXPECT(0x382a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00DA
        gbc.setState(0x7b76, 0xcd12, 0x3d90, 0x31e7, 0x9c70, 0x5be4, 0x0, 0x0);
        gbc.writeMem(0x7b76, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00DB
        gbc.setState(0xce85, 0x75c3, 0x2230, 0xecd2, 0x2748, 0x449, 0x1, 0x1);
        gbc.writeMem(0xce85, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x75c3, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xce85));
        // BD 00DC
        gbc.setState(0x84b5, 0x1a1a, 0x7070, 0x374, 0xd7cf, 0x87db, 0x1, 0x1);
        gbc.writeMem(0x84b5, { 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1a1a, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x84b5));
        // BD 00DD
        gbc.setState(0xb837, 0x430, 0x4210, 0x410e, 0xab0a, 0xf062, 0x0, 0x0);
        gbc.writeMem(0xb837, { 0xbd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0xb838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb837));
        // BD 00DE
        gbc.setState(0xe39b, 0x9f24, 0x8080, 0x5b6e, 0x9b61, 0xb6bb, 0x1, 0x0);
        gbc.writeMem(0xe39b, { 0xbd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0xe39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe39b));
        // BD 00DF
        gbc.setState(0xb7d6, 0x2c94, 0x29c0, 0x3533, 0xef07, 0x8bc8, 0x0, 0x0);
        gbc.writeMem(0xb7d6, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb7d6));
        // BD 00E0
        gbc.setState(0xcad0, 0x6bd5, 0x1810, 0xed68, 0x327e, 0xb84b, 0x1, 0x0);
        gbc.writeMem(0xcad0, { 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6bd5, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcad0));
        // BD 00E1
        gbc.setState(0xa369, 0x60a1, 0x4c50, 0xc25a, 0xcbb3, 0x19d8, 0x1, 0x1);
        gbc.writeMem(0xa369, { 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x60a1, gbc.sp());
        EXPECT(0xa36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa369));
        // BD 00E2
        gbc.setState(0x29e5, 0xcd98, 0x5aa0, 0x605d, 0xeb34, 0x12e5, 0x1, 0x0);
        gbc.writeMem(0x29e5, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x29e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00E3
        gbc.setState(0xeb32, 0x46a4, 0x33c0, 0x5a41, 0x8cc2, 0xe2d8, 0x0, 0x0);
        gbc.writeMem(0xeb32, { 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0xeb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeb32));
        // BD 00E4
        gbc.setState(0xb9c8, 0x66a9, 0xd420, 0x4790, 0x985b, 0xee9d, 0x1, 0x0);
        gbc.writeMem(0xb9c8, { 0xbd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x66a9, gbc.sp());
        EXPECT(0xb9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb9c8));
        // BD 00E5
        gbc.setState(0xace8, 0xdcd8, 0xa030, 0xc652, 0x6f60, 0x97b5, 0x0, 0x0);
        gbc.writeMem(0xace8, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdcd8, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xace8));
        // BD 00E6
        gbc.setState(0xbff1, 0xd403, 0xf030, 0x3c0c, 0x9e12, 0xdd2b, 0x0, 0x0);
        gbc.writeMem(0xbff1, { 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd403, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbff1));
        // BD 00E7
        gbc.setState(0x39, 0xac10, 0x9430, 0x3b5f, 0xc817, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x39, { 0xbd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0x3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00E8
        gbc.setState(0x40c6, 0xe6a0, 0x65f0, 0xac9e, 0x40, 0x9aec, 0x0, 0x0);
        gbc.writeMem(0x40c6, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe6a0, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00E9
        gbc.setState(0x9d31, 0xd96f, 0xb430, 0x44e4, 0x8346, 0xf729, 0x1, 0x1);
        gbc.writeMem(0x9d31, { 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9d31));
        // BD 00EA
        gbc.setState(0x3cc6, 0x9e8a, 0x1d60, 0x9e97, 0x8d78, 0xe7ec, 0x1, 0x0);
        gbc.writeMem(0x3cc6, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9e8a, gbc.sp());
        EXPECT(0x3cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00EB
        gbc.setState(0x8f07, 0x568a, 0x6780, 0x94ff, 0xd888, 0x937, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x568a, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8f07));
        // BD 00EC
        gbc.setState(0x816a, 0xa9e4, 0xe60, 0x8ef0, 0x70cd, 0x3ce3, 0x0, 0x0);
        gbc.writeMem(0x816a, { 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa9e4, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x816a));
        // BD 00ED
        gbc.setState(0x3e4d, 0xd461, 0xd330, 0xa387, 0x9c8c, 0xc377, 0x0, 0x0);
        gbc.writeMem(0x3e4d, { 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd461, gbc.sp());
        EXPECT(0x3e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00EE
        gbc.setState(0x4367, 0x3151, 0xd370, 0xaedd, 0x50a4, 0x1da0, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3151, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00EF
        gbc.setState(0xdb51, 0x1f40, 0x4300, 0x7c1c, 0x4c91, 0x5c4d, 0x0, 0x1);
        gbc.writeMem(0xdb51, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdb51));
        // BD 00F0
        gbc.setState(0x9ee8, 0xcd6d, 0x3290, 0x5f07, 0x49a7, 0xd057, 0x1, 0x0);
        gbc.writeMem(0x9ee8, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd6d, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ee8));
        // BD 00F1
        gbc.setState(0x85f1, 0x5f7b, 0x30b0, 0x8955, 0xec5c, 0x9442, 0x1, 0x0);
        gbc.writeMem(0x85f1, { 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0x85f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x85f1));
        // BD 00F2
        gbc.setState(0xd085, 0xf746, 0x7e20, 0x619f, 0x6bb0, 0xcf9e, 0x0, 0x0);
        gbc.writeMem(0xd085, { 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf746, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd085));
        // BD 00F3
        gbc.setState(0x551e, 0xf173, 0x7f30, 0x2bd0, 0x50da, 0x6087, 0x1, 0x0);
        gbc.writeMem(0x551e, { 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0x551f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00F4
        gbc.setState(0x992f, 0x8719, 0x3380, 0x6e38, 0x5936, 0xb19f, 0x1, 0x0);
        gbc.writeMem(0x992f, { 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x9930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x992f));
        // BD 00F5
        gbc.setState(0xa0a6, 0x7a79, 0xa6c0, 0x8476, 0xea89, 0xe836, 0x1, 0x1);
        gbc.writeMem(0xa0a6, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7a79, gbc.sp());
        EXPECT(0xa0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa0a6));
        // BD 00F6
        gbc.setState(0x80b8, 0x7851, 0x4a50, 0xdb8c, 0x68d3, 0xb46a, 0x1, 0x1);
        gbc.writeMem(0x80b8, { 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7851, gbc.sp());
        EXPECT(0x80b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x80b8));
        // BD 00F7
        gbc.setState(0x6ed8, 0x726b, 0xc640, 0x6116, 0xe0a1, 0xe8ef, 0x0, 0x1);
        gbc.writeMem(0x6ed8, { 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x6ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00F8
        gbc.setState(0x922, 0x9b56, 0xb630, 0x5e05, 0x63e8, 0xaea0, 0x0, 0x1);
        gbc.writeMem(0x922, { 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9b56, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00F9
        gbc.setState(0x311e, 0x325a, 0xa670, 0xd221, 0xddac, 0xcb0c, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x325a, gbc.sp());
        EXPECT(0x311f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00FA
        gbc.setState(0xf22, 0x1772, 0x4d30, 0x7ecf, 0x2670, 0xb669, 0x0, 0x1);
        gbc.writeMem(0xf22, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1772, gbc.sp());
        EXPECT(0xf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00FB
        gbc.setState(0x7b1f, 0x9770, 0x2ac0, 0xd23f, 0x5310, 0x7584, 0x0, 0x0);
        gbc.writeMem(0x7b1f, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9770, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 00FC
        gbc.setState(0x122b, 0x1696, 0x8110, 0x40e6, 0x86e6, 0x9608, 0x0, 0x0);
        gbc.writeMem(0x122b, { 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1696, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00FD
        gbc.setState(0x1b18, 0x6b12, 0x6ca0, 0x61e7, 0x3ebc, 0x440c, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 00FE
        gbc.setState(0xe364, 0xfbe0, 0x60e0, 0xc20e, 0x1534, 0x91e0, 0x1, 0x0);
        gbc.writeMem(0xe364, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0xe365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe364));
        // BD 00FF
        gbc.setState(0x80c8, 0x9e6, 0xce0, 0xd337, 0x6ecc, 0x6ba3, 0x0, 0x1);
        gbc.writeMem(0x80c8, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x80c8));
        // BD 0100
        gbc.setState(0xae21, 0xa285, 0x3d20, 0x28b7, 0x4fe5, 0x6c17, 0x0, 0x1);
        gbc.writeMem(0xae21, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0xae22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xae21));
        // BD 0101
        gbc.setState(0x73d4, 0x5b40, 0xe750, 0x56d2, 0x1ed9, 0x31bc, 0x0, 0x1);
        gbc.writeMem(0x73d4, { 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x73d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0102
        gbc.setState(0xede8, 0x387e, 0xf910, 0x9bf, 0xa04d, 0x4954, 0x0, 0x0);
        gbc.writeMem(0xede8, { 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0xede9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xede8));
        // BD 0103
        gbc.setState(0x8bb7, 0xc9e5, 0x7bd0, 0xccc5, 0xf33e, 0xc356, 0x0, 0x1);
        gbc.writeMem(0x8bb7, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8bb7));
        // BD 0104
        gbc.setState(0x3af1, 0x52fb, 0x4870, 0x79fc, 0x103a, 0x5576, 0x1, 0x0);
        gbc.writeMem(0x3af1, { 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x52fb, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0105
        gbc.setState(0x7af7, 0xab2e, 0x2b0, 0xf746, 0x91fe, 0xda8a, 0x0, 0x1);
        gbc.writeMem(0x7af7, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0106
        gbc.setState(0xce68, 0x2fe6, 0x58d0, 0x8ad2, 0x1226, 0x5c9b, 0x0, 0x0);
        gbc.writeMem(0xce68, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2fe6, gbc.sp());
        EXPECT(0xce69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xce68));
        // BD 0107
        gbc.setState(0x2fcf, 0x1518, 0x4600, 0xbaf4, 0xb3e, 0x9f3d, 0x0, 0x0);
        gbc.writeMem(0x2fcf, { 0xbd });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0108
        gbc.setState(0x261, 0x2131, 0x74c0, 0xc013, 0x7ca4, 0xda9c, 0x0, 0x1);
        gbc.writeMem(0x261, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2131, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0109
        gbc.setState(0xd4b5, 0x72df, 0xeb70, 0x208, 0x6d23, 0xa612, 0x0, 0x1);
        gbc.writeMem(0xd4b5, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x72df, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd4b5));
        // BD 010A
        gbc.setState(0x6262, 0x603d, 0x6380, 0xf252, 0xa5a7, 0xab24, 0x1, 0x1);
        gbc.writeMem(0x6262, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 010B
        gbc.setState(0xcfa4, 0xa341, 0x5860, 0x1a8d, 0x2152, 0x1811, 0x0, 0x1);
        gbc.writeMem(0xcfa4, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa341, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcfa4));
        // BD 010C
        gbc.setState(0x9287, 0x1abf, 0x5300, 0x2403, 0x3a35, 0x9fa1, 0x0, 0x1);
        gbc.writeMem(0x9287, { 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1abf, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9287));
        // BD 010D
        gbc.setState(0x4de8, 0xb2de, 0x55e0, 0x2c5, 0x47b3, 0xa65a, 0x1, 0x0);
        gbc.writeMem(0x4de8, { 0xbd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0x4de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 010E
        gbc.setState(0x9b47, 0x3d12, 0xc390, 0x97cf, 0x194, 0x8f76, 0x1, 0x1);
        gbc.writeMem(0x9b47, { 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9b47));
        // BD 010F
        gbc.setState(0x7e2c, 0xc10b, 0x67a0, 0xd45, 0xb433, 0xd8c1, 0x0, 0x1);
        gbc.writeMem(0x7e2c, { 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x7e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0110
        gbc.setState(0xedc5, 0xcb06, 0xfd00, 0xc55c, 0xaf11, 0xac43, 0x1, 0x0);
        gbc.writeMem(0xedc5, { 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb06, gbc.sp());
        EXPECT(0xedc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xedc5));
        // BD 0111
        gbc.setState(0xe148, 0x3473, 0x32f0, 0xd8c3, 0x7b7c, 0x404c, 0x1, 0x0);
        gbc.writeMem(0xe148, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0xe149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe148));
        // BD 0112
        gbc.setState(0x2e11, 0x658b, 0x95e0, 0xd0b, 0x1a5, 0x6bc5, 0x0, 0x0);
        gbc.writeMem(0x2e11, { 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x658b, gbc.sp());
        EXPECT(0x2e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0113
        gbc.setState(0xd294, 0xe013, 0xf7f0, 0x47c2, 0xa503, 0x5b3e, 0x1, 0x0);
        gbc.writeMem(0xd294, { 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd294));
        // BD 0114
        gbc.setState(0x2575, 0x2fa2, 0x9070, 0x86af, 0x7cc8, 0x2e52, 0x0, 0x0);
        gbc.writeMem(0x2575, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0115
        gbc.setState(0x4b97, 0xdc42, 0xcde0, 0x1e1b, 0xb71, 0xcf17, 0x0, 0x1);
        gbc.writeMem(0x4b97, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0x4b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0116
        gbc.setState(0x8445, 0x1538, 0x60e0, 0x629c, 0xab05, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x8445, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1538, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8445));
        // BD 0117
        gbc.setState(0x6dfb, 0xf64d, 0x3d10, 0xb8e0, 0x8c0c, 0x2d73, 0x0, 0x0);
        gbc.writeMem(0x6dfb, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0118
        gbc.setState(0xed86, 0xe22a, 0x4c70, 0xfd7f, 0x12a2, 0xc8bb, 0x0, 0x0);
        gbc.writeMem(0xed86, { 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe22a, gbc.sp());
        EXPECT(0xed87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xed86));
        // BD 0119
        gbc.setState(0x76e9, 0xa065, 0xe630, 0x8ed8, 0x8d9b, 0xa005, 0x0, 0x0);
        gbc.writeMem(0x76e9, { 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa065, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 011A
        gbc.setState(0xee9f, 0x89f9, 0x6e80, 0x446e, 0x3cb9, 0x4f05, 0x0, 0x0);
        gbc.writeMem(0xee9f, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xee9f));
        // BD 011B
        gbc.setState(0x3e28, 0x57c3, 0x3b60, 0x3852, 0x399d, 0x6957, 0x1, 0x0);
        gbc.writeMem(0x3e28, { 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x57c3, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 011C
        gbc.setState(0x8869, 0xa23, 0xc4a0, 0x205, 0xcdeb, 0xb13d, 0x1, 0x0);
        gbc.writeMem(0x8869, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa23, gbc.sp());
        EXPECT(0x886a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8869));
        // BD 011D
        gbc.setState(0x51b6, 0x2f89, 0xbaa0, 0x2e1e, 0xed68, 0x35f0, 0x0, 0x1);
        gbc.writeMem(0x51b6, { 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0x51b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 011E
        gbc.setState(0x43bc, 0xf424, 0x7720, 0xaa12, 0xff46, 0x4367, 0x0, 0x0);
        gbc.writeMem(0x43bc, { 0xbd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf424, gbc.sp());
        EXPECT(0x43bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 011F
        gbc.setState(0x7078, 0x82e9, 0x1490, 0x1760, 0x50d9, 0xf911, 0x0, 0x1);
        gbc.writeMem(0x7078, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0x7079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0120
        gbc.setState(0x336b, 0x6171, 0x5240, 0x9949, 0x3414, 0xf864, 0x1, 0x0);
        gbc.writeMem(0x336b, { 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6171, gbc.sp());
        EXPECT(0x336c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0121
        gbc.setState(0x7fb5, 0xd448, 0xe70, 0xd2ac, 0x986f, 0xce41, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0122
        gbc.setState(0xeec6, 0x43fa, 0x21b0, 0x5741, 0xe103, 0xcd40, 0x0, 0x0);
        gbc.writeMem(0xeec6, { 0xbd });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0xeec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeec6));
        // BD 0123
        gbc.setState(0x6326, 0x4def, 0xf530, 0x400a, 0xe35e, 0x6d03, 0x1, 0x0);
        gbc.writeMem(0x6326, { 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4def, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0124
        gbc.setState(0xaa0e, 0xfdae, 0xd230, 0xc0dc, 0x9bc4, 0xa407, 0x1, 0x1);
        gbc.writeMem(0xaa0e, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfdae, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaa0e));
        // BD 0125
        gbc.setState(0x9410, 0x21a0, 0x5c0, 0x6096, 0x7254, 0x8004, 0x0, 0x0);
        gbc.writeMem(0x9410, { 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x21a0, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9410));
        // BD 0126
        gbc.setState(0xc709, 0x8ba1, 0x5750, 0x11d2, 0xac0f, 0x484d, 0x1, 0x0);
        gbc.writeMem(0xc709, { 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8ba1, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc709));
        // BD 0127
        gbc.setState(0xea76, 0xc5c7, 0xf760, 0x5df8, 0xbf83, 0xecf6, 0x1, 0x1);
        gbc.writeMem(0xea76, { 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc5c7, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xea76));
        // BD 0129
        gbc.setState(0x2027, 0xb62f, 0xcc50, 0x7993, 0xffef, 0x7fcd, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb62f, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 012A
        gbc.setState(0x10f8, 0x3858, 0x7260, 0xbe66, 0xfcfe, 0x610f, 0x0, 0x0);
        gbc.writeMem(0x10f8, { 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3858, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 012B
        gbc.setState(0x155e, 0x75de, 0x4e20, 0x1d04, 0xe51a, 0x5e12, 0x0, 0x0);
        gbc.writeMem(0x155e, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0x155f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 012C
        gbc.setState(0xaa79, 0x4d67, 0xc5e0, 0x38df, 0x57e9, 0x5571, 0x1, 0x0);
        gbc.writeMem(0xaa79, { 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaa79));
        // BD 012D
        gbc.setState(0x3deb, 0x7a47, 0x29b0, 0x39b1, 0xb544, 0x11a9, 0x1, 0x1);
        gbc.writeMem(0x3deb, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 012E
        gbc.setState(0xe5df, 0x8b01, 0xc460, 0xd3e, 0xda0d, 0x6efc, 0x1, 0x0);
        gbc.writeMem(0xe5df, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8b01, gbc.sp());
        EXPECT(0xe5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe5df));
        // BD 012F
        gbc.setState(0xdb15, 0x1d1b, 0x4930, 0x4396, 0x7f2b, 0x5330, 0x0, 0x0);
        gbc.writeMem(0xdb15, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d1b, gbc.sp());
        EXPECT(0xdb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdb15));
        // BD 0130
        gbc.setState(0xdebf, 0x43f, 0x1e10, 0xc537, 0x306a, 0xc22e, 0x1, 0x1);
        gbc.writeMem(0xdebf, { 0xbd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0xdec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdebf));
        // BD 0131
        gbc.setState(0x40dd, 0xf329, 0x2230, 0xfb0d, 0x908b, 0x9774, 0x1, 0x0);
        gbc.writeMem(0x40dd, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0x40de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0132
        gbc.setState(0x2936, 0x8376, 0x7af0, 0x651b, 0x5175, 0x3d0a, 0x1, 0x0);
        gbc.writeMem(0x2936, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0x2937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0133
        gbc.setState(0xba1b, 0xc2a5, 0x2840, 0x9338, 0x39f4, 0xc4bb, 0x1, 0x0);
        gbc.writeMem(0xba1b, { 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc2a5, gbc.sp());
        EXPECT(0xba1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xba1b));
        // BD 0134
        gbc.setState(0x52f0, 0xf7a4, 0xf3a0, 0xedd2, 0xd065, 0xf9e, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf7a4, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0135
        gbc.setState(0xb6e0, 0x143f, 0x5270, 0x61b0, 0xbed4, 0xe5b6, 0x0, 0x0);
        gbc.writeMem(0xb6e0, { 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x143f, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6e0));
        // BD 0136
        gbc.setState(0x6508, 0xa542, 0x7c30, 0xa3d0, 0xe7df, 0xcff0, 0x0, 0x0);
        gbc.writeMem(0x6508, { 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0137
        gbc.setState(0xbe32, 0xdf0d, 0xc590, 0x142e, 0x3b68, 0xcd69, 0x1, 0x1);
        gbc.writeMem(0xbe32, { 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbe32));
        // BD 0138
        gbc.setState(0x8207, 0xadd9, 0xcbe0, 0x3980, 0xa799, 0x41a0, 0x1, 0x0);
        gbc.writeMem(0x8207, { 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xadd9, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8207));
        // BD 013A
        gbc.setState(0xc6d, 0x6112, 0xc2c0, 0x519c, 0xc6bc, 0x36b5, 0x0, 0x0);
        gbc.writeMem(0xc6d, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0xc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 013B
        gbc.setState(0xcb85, 0x2876, 0xcaa0, 0x9775, 0xaa5a, 0x5a6d, 0x1, 0x0);
        gbc.writeMem(0xcb85, { 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2876, gbc.sp());
        EXPECT(0xcb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcb85));
        // BD 013C
        gbc.setState(0x2c14, 0x29ff, 0x81c0, 0x739e, 0x2165, 0x7d8e, 0x0, 0x0);
        gbc.writeMem(0x2c14, { 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x29ff, gbc.sp());
        EXPECT(0x2c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 013D
        gbc.setState(0xe8c4, 0xd5df, 0xb5f0, 0x3ee7, 0xa064, 0x900, 0x1, 0x0);
        gbc.writeMem(0xe8c4, { 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd5df, gbc.sp());
        EXPECT(0xe8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe8c4));
        // BD 013E
        gbc.setState(0xdbbf, 0x9f1d, 0x8d40, 0x7470, 0xfd57, 0x8885, 0x1, 0x0);
        gbc.writeMem(0xdbbf, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9f1d, gbc.sp());
        EXPECT(0xdbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdbbf));
        // BD 013F
        gbc.setState(0x3235, 0xda48, 0x5c40, 0xaab2, 0x17af, 0x5a5, 0x1, 0x0);
        gbc.writeMem(0x3235, { 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda48, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0140
        gbc.setState(0xb16a, 0xaf5, 0x2e80, 0x68fc, 0xf910, 0x3784, 0x1, 0x1);
        gbc.writeMem(0xb16a, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaf5, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb16a));
        // BD 0141
        gbc.setState(0xdd33, 0x8c2f, 0x3080, 0x5828, 0x714c, 0xffc6, 0x1, 0x1);
        gbc.writeMem(0xdd33, { 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8c2f, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdd33));
        // BD 0142
        gbc.setState(0x1370, 0x5559, 0x68a0, 0x4a31, 0xa952, 0xcd20, 0x1, 0x1);
        gbc.writeMem(0x1370, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5559, gbc.sp());
        EXPECT(0x1371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0143
        gbc.setState(0x3ccb, 0xe514, 0x31a0, 0x2343, 0x2426, 0x5a67, 0x0, 0x1);
        gbc.writeMem(0x3ccb, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe514, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0144
        gbc.setState(0xbcad, 0x452, 0xb8d0, 0x1f6b, 0xdf37, 0x93e2, 0x1, 0x1);
        gbc.writeMem(0xbcad, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbcad));
        // BD 0146
        gbc.setState(0x524e, 0xcf96, 0xf730, 0x92a, 0x2970, 0x15a8, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcf96, gbc.sp());
        EXPECT(0x524f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0147
        gbc.setState(0xd654, 0x90c8, 0xa270, 0xfbd7, 0x3d55, 0xc018, 0x0, 0x0);
        gbc.writeMem(0xd654, { 0xbd });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd654));
        // BD 0148
        gbc.setState(0x93ef, 0x9012, 0x1a50, 0xe9c5, 0xe70e, 0xf3c9, 0x0, 0x1);
        gbc.writeMem(0x93ef, { 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x93ef));
        // BD 0149
        gbc.setState(0x4b78, 0xc447, 0x5010, 0xc68c, 0x8ee8, 0x753c, 0x0, 0x0);
        gbc.writeMem(0x4b78, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc447, gbc.sp());
        EXPECT(0x4b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 014A
        gbc.setState(0x912a, 0x1334, 0x98e0, 0x723b, 0x8620, 0x3bc1, 0x1, 0x1);
        gbc.writeMem(0x912a, { 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1334, gbc.sp());
        EXPECT(0x912b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x912a));
        // BD 014B
        gbc.setState(0xd11b, 0x257f, 0x4460, 0xe422, 0xa1c, 0x3735, 0x0, 0x1);
        gbc.writeMem(0xd11b, { 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd11b));
        // BD 014C
        gbc.setState(0x81bc, 0x393e, 0x65d0, 0x16ad, 0x93bd, 0xb2d9, 0x0, 0x0);
        gbc.writeMem(0x81bc, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x81bc));
        // BD 014D
        gbc.setState(0x20ea, 0xe3c, 0x6ff0, 0xda12, 0xd99c, 0x60cc, 0x1, 0x0);
        gbc.writeMem(0x20ea, { 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x20eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 014E
        gbc.setState(0x87e5, 0xcbfb, 0xdd10, 0xd624, 0x12bb, 0xc3d6, 0x1, 0x1);
        gbc.writeMem(0x87e5, { 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcbfb, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x87e5));
        // BD 014F
        gbc.setState(0x2e84, 0x3e65, 0xb6a0, 0xccf0, 0x17cd, 0x1607, 0x0, 0x1);
        gbc.writeMem(0x2e84, { 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x2e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0151
        gbc.setState(0x79e7, 0x34b7, 0x7280, 0x9945, 0x8fb1, 0xfb1b, 0x1, 0x1);
        gbc.writeMem(0x79e7, { 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x34b7, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0152
        gbc.setState(0x7573, 0x396e, 0x3630, 0xf3e2, 0x2f85, 0x6ae9, 0x1, 0x1);
        gbc.writeMem(0x7573, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x396e, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0153
        gbc.setState(0x2b89, 0xe9ac, 0x4780, 0xf432, 0xb651, 0x3435, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe9ac, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0154
        gbc.setState(0x402, 0x1450, 0xbd40, 0x99d0, 0x11fd, 0xacc8, 0x0, 0x1);
        gbc.writeMem(0x402, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0155
        gbc.setState(0x587f, 0x2510, 0xc990, 0x1ba1, 0x85ab, 0x526a, 0x0, 0x1);
        gbc.writeMem(0x587f, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0x5880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0156
        gbc.setState(0x304f, 0x8b45, 0xfef0, 0xb910, 0x59c, 0xf98f, 0x0, 0x1);
        gbc.writeMem(0x304f, { 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8b45, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0157
        gbc.setState(0xc22d, 0x2e69, 0xec00, 0x6331, 0x198d, 0x3c71, 0x0, 0x1);
        gbc.writeMem(0xc22d, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2e69, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc22d));
        // BD 0158
        gbc.setState(0x9b9, 0x1963, 0xd840, 0x5cb7, 0x5331, 0x66e, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1963, gbc.sp());
        EXPECT(0x9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 015A
        gbc.setState(0x613a, 0x2828, 0xd7f0, 0x676c, 0xe405, 0xea55, 0x0, 0x0);
        gbc.writeMem(0x613a, { 0xbd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x613b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 015B
        gbc.setState(0x6fab, 0x6ae4, 0xf450, 0x632b, 0xf396, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0x6fab, { 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 015C
        gbc.setState(0x967f, 0x8b3c, 0x6fd0, 0x4648, 0x85fc, 0xdafd, 0x0, 0x0);
        gbc.writeMem(0x967f, { 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x967f));
        // BD 015D
        gbc.setState(0x326a, 0x23e3, 0x8290, 0x2dbd, 0x2631, 0x21b2, 0x0, 0x0);
        gbc.writeMem(0x326a, { 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0x326b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 015E
        gbc.setState(0xb6f4, 0x5846, 0xce50, 0x8ea7, 0x892b, 0x83a9, 0x0, 0x0);
        gbc.writeMem(0xb6f4, { 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6f4));
        // BD 015F
        gbc.setState(0x37dc, 0x3e86, 0x8da0, 0x2852, 0xafa8, 0x95a2, 0x1, 0x1);
        gbc.writeMem(0x37dc, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0160
        gbc.setState(0x6434, 0x4f64, 0x7ae0, 0xda97, 0xd3cb, 0x34e5, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4f64, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0161
        gbc.setState(0xd226, 0xfe5b, 0x88c0, 0x3ad4, 0x461a, 0xe18a, 0x0, 0x0);
        gbc.writeMem(0xd226, { 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd226));
        // BD 0162
        gbc.setState(0xcc2c, 0xa631, 0x5860, 0x4691, 0xb615, 0x977e, 0x1, 0x0);
        gbc.writeMem(0xcc2c, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa631, gbc.sp());
        EXPECT(0xcc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcc2c));
        // BD 0163
        gbc.setState(0x6418, 0x5c5a, 0x6da0, 0x24f0, 0xa3b0, 0x22a7, 0x0, 0x1);
        gbc.writeMem(0x6418, { 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5c5a, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0164
        gbc.setState(0x63a1, 0x112, 0x7bd0, 0x74bb, 0x3e10, 0xcd17, 0x0, 0x1);
        gbc.writeMem(0x63a1, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x112, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0165
        gbc.setState(0x2e7c, 0x882b, 0xae00, 0x238e, 0x4e9f, 0xdd24, 0x0, 0x1);
        gbc.writeMem(0x2e7c, { 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0166
        gbc.setState(0x70ec, 0xd481, 0xf640, 0x276d, 0x3230, 0x9020, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd481, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0167
        gbc.setState(0x7436, 0x4798, 0x6320, 0xb0da, 0xc0e3, 0x9d00, 0x0, 0x0);
        gbc.writeMem(0x7436, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0x7437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0168
        gbc.setState(0x917a, 0x32ac, 0xf230, 0x2fae, 0x2eeb, 0x573d, 0x0, 0x0);
        gbc.writeMem(0x917a, { 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x917a));
        // BD 0169
        gbc.setState(0xd56d, 0xddd3, 0x5e70, 0x2912, 0x61f6, 0x7356, 0x1, 0x0);
        gbc.writeMem(0xd56d, { 0xbd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xddd3, gbc.sp());
        EXPECT(0xd56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd56d));
        // BD 016A
        gbc.setState(0x6594, 0xb46a, 0xf60, 0xeca, 0x82ea, 0x956a, 0x1, 0x1);
        gbc.writeMem(0x6594, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb46a, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 016B
        gbc.setState(0x48f7, 0xb983, 0x1490, 0x46cb, 0xcb17, 0x6538, 0x1, 0x1);
        gbc.writeMem(0x48f7, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb983, gbc.sp());
        EXPECT(0x48f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 016C
        gbc.setState(0x65b, 0xb8e2, 0x1020, 0xd7da, 0xdf6d, 0xaaac, 0x1, 0x1);
        gbc.writeMem(0x65b, { 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0x65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 016D
        gbc.setState(0xe573, 0xd91a, 0x32f0, 0x4d4e, 0x5ae7, 0xd9c6, 0x1, 0x1);
        gbc.writeMem(0xe573, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd91a, gbc.sp());
        EXPECT(0xe574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe573));
        // BD 016E
        gbc.setState(0x946a, 0x3e70, 0xd60, 0x7e90, 0x315, 0xe1ae, 0x0, 0x0);
        gbc.writeMem(0x946a, { 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3e70, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x946a));
        // BD 016F
        gbc.setState(0x9df4, 0x2738, 0xb7d0, 0xbf69, 0x71f8, 0x47af, 0x0, 0x1);
        gbc.writeMem(0x9df4, { 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2738, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9df4));
        // BD 0170
        gbc.setState(0xe1f2, 0x77d8, 0x5e80, 0x4da4, 0x40ab, 0xcd1, 0x0, 0x0);
        gbc.writeMem(0xe1f2, { 0xbd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0xe1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe1f2));
        // BD 0171
        gbc.setState(0xd15e, 0x67b0, 0xa910, 0x3e19, 0x1799, 0xb776, 0x1, 0x0);
        gbc.writeMem(0xd15e, { 0xbd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x67b0, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd15e));
        // BD 0172
        gbc.setState(0x391d, 0x6a8e, 0xfbf0, 0x6e8c, 0xfb03, 0x8084, 0x0, 0x0);
        gbc.writeMem(0x391d, { 0xbd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6a8e, gbc.sp());
        EXPECT(0x391e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0173
        gbc.setState(0x10c9, 0x1acc, 0x9f50, 0x190a, 0x19ed, 0x817c, 0x1, 0x1);
        gbc.writeMem(0x10c9, { 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1acc, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0174
        gbc.setState(0xb03e, 0xf3f7, 0xdf20, 0x869e, 0xae4a, 0xfa88, 0x0, 0x0);
        gbc.writeMem(0xb03e, { 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf3f7, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb03e));
        // BD 0175
        gbc.setState(0xa85b, 0x13ba, 0x5190, 0x5cac, 0x1575, 0x39c5, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x13ba, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa85b));
        // BD 0176
        gbc.setState(0x318, 0xfc74, 0xd5b0, 0x8f3c, 0x15f6, 0xd519, 0x1, 0x0);
        gbc.writeMem(0x318, { 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfc74, gbc.sp());
        EXPECT(0x319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0178
        gbc.setState(0x18ea, 0x2986, 0xc20, 0x14e5, 0x27e, 0x309b, 0x0, 0x0);
        gbc.writeMem(0x18ea, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0x18eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0179
        gbc.setState(0x9457, 0xef2, 0xdf90, 0x1789, 0x7ac0, 0xd6f3, 0x0, 0x0);
        gbc.writeMem(0x9457, { 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xef2, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9457));
        // BD 017A
        gbc.setState(0xd695, 0xc6f3, 0x74e0, 0x9726, 0xf06f, 0xe1bd, 0x0, 0x0);
        gbc.writeMem(0xd695, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0xd696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd695));
        // BD 017B
        gbc.setState(0x4e3d, 0x88f6, 0xe5b0, 0xff8a, 0x6e22, 0x7b8, 0x0, 0x0);
        gbc.writeMem(0x4e3d, { 0xbd });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 017D
        gbc.setState(0x7312, 0x2fdd, 0x5040, 0x4dd0, 0xb4f6, 0x268a, 0x1, 0x1);
        gbc.writeMem(0x7312, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 017E
        gbc.setState(0xb757, 0x3ac5, 0xc2e0, 0x6975, 0xbeca, 0x6cd5, 0x1, 0x1);
        gbc.writeMem(0xb757, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0xb758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb757));
        // BD 017F
        gbc.setState(0x4ee2, 0x8fb, 0x7a90, 0xe216, 0x3957, 0x9495, 0x1, 0x1);
        gbc.writeMem(0x4ee2, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0180
        gbc.setState(0x6596, 0xeaf2, 0x6b0, 0x8455, 0xbdaa, 0x5718, 0x1, 0x1);
        gbc.writeMem(0x6596, { 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0x6597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0181
        gbc.setState(0x6c1c, 0x47ed, 0xf240, 0x8437, 0x7287, 0x9b8c, 0x0, 0x0);
        gbc.writeMem(0x6c1c, { 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0182
        gbc.setState(0xb8c2, 0x931c, 0x7b10, 0x9578, 0x901d, 0x7458, 0x1, 0x1);
        gbc.writeMem(0xb8c2, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x931c, gbc.sp());
        EXPECT(0xb8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb8c2));
        // BD 0183
        gbc.setState(0x251a, 0xa1e8, 0x1820, 0x3886, 0xb62c, 0xec61, 0x1, 0x1);
        gbc.writeMem(0x251a, { 0xbd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa1e8, gbc.sp());
        EXPECT(0x251b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0184
        gbc.setState(0x1995, 0x27b8, 0x7e80, 0xd969, 0x5f38, 0x4295, 0x1, 0x1);
        gbc.writeMem(0x1995, { 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0185
        gbc.setState(0xb430, 0x869b, 0xa10, 0x7968, 0xa629, 0x6e42, 0x1, 0x0);
        gbc.writeMem(0xb430, { 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x869b, gbc.sp());
        EXPECT(0xb431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb430));
        // BD 0186
        gbc.setState(0xa7bf, 0xe78a, 0x8790, 0xb0fd, 0x575f, 0xf7f0, 0x1, 0x1);
        gbc.writeMem(0xa7bf, { 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe78a, gbc.sp());
        EXPECT(0xa7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa7bf));
        // BD 0187
        gbc.setState(0xacbc, 0x6901, 0x4310, 0x7273, 0x4efb, 0xdbf6, 0x1, 0x1);
        gbc.writeMem(0xacbc, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xacbc));
        // BD 0188
        gbc.setState(0xd4d4, 0xf29b, 0x73b0, 0xb4db, 0x47a7, 0x1daf, 0x0, 0x1);
        gbc.writeMem(0xd4d4, { 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf29b, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd4d4));
        // BD 0189
        gbc.setState(0x75c8, 0x859e, 0xd1f0, 0x6ca6, 0x370f, 0x6580, 0x0, 0x1);
        gbc.writeMem(0x75c8, { 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x75c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 018A
        gbc.setState(0xb3aa, 0x5d8a, 0xb6d0, 0x19bb, 0xab83, 0x8006, 0x0, 0x0);
        gbc.writeMem(0xb3aa, { 0xbd });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0xb3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb3aa));
        // BD 018B
        gbc.setState(0xe2f1, 0x46c3, 0xc820, 0x6c7f, 0xb910, 0xd6a6, 0x1, 0x0);
        gbc.writeMem(0xe2f1, { 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x46c3, gbc.sp());
        EXPECT(0xe2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe2f1));
        // BD 018C
        gbc.setState(0xb115, 0x6b02, 0x4f70, 0x7074, 0xcdd3, 0xc9f2, 0x0, 0x0);
        gbc.writeMem(0xb115, { 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6b02, gbc.sp());
        EXPECT(0xb116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb115));
        // BD 018D
        gbc.setState(0xab52, 0x54b8, 0x68e0, 0x51bb, 0x69a5, 0xc5a0, 0x1, 0x1);
        gbc.writeMem(0xab52, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab52));
        // BD 018E
        gbc.setState(0xc82a, 0x26c0, 0x5290, 0x73d1, 0x6097, 0x3b3e, 0x1, 0x1);
        gbc.writeMem(0xc82a, { 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x26c0, gbc.sp());
        EXPECT(0xc82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc82a));
        // BD 018F
        gbc.setState(0x3542, 0xa2ef, 0xdd00, 0xfd47, 0x6872, 0xcaf5, 0x0, 0x1);
        gbc.writeMem(0x3542, { 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0190
        gbc.setState(0xd8bd, 0xe2b6, 0xbe20, 0xe6a1, 0xc132, 0x3600, 0x1, 0x1);
        gbc.writeMem(0xd8bd, { 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd8bd));
        // BD 0191
        gbc.setState(0xd64e, 0x7515, 0x8a00, 0x96db, 0xd286, 0xd443, 0x0, 0x0);
        gbc.writeMem(0xd64e, { 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7515, gbc.sp());
        EXPECT(0xd64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd64e));
        // BD 0192
        gbc.setState(0x9e4a, 0xb1e3, 0xe760, 0x4846, 0xf0c7, 0xfa08, 0x1, 0x1);
        gbc.writeMem(0x9e4a, { 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb1e3, gbc.sp());
        EXPECT(0x9e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9e4a));
        // BD 0193
        gbc.setState(0xec33, 0xf2ea, 0x9730, 0xabfe, 0x1645, 0xbf28, 0x0, 0x1);
        gbc.writeMem(0xec33, { 0xbd });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf2ea, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xec33));
        // BD 0194
        gbc.setState(0x17d9, 0x28e0, 0x6590, 0xf71d, 0x4876, 0xd8ef, 0x0, 0x0);
        gbc.writeMem(0x17d9, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0x17da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0195
        gbc.setState(0x1d1e, 0xdfc6, 0x56e0, 0x3f98, 0x59d4, 0x69b, 0x0, 0x1);
        gbc.writeMem(0x1d1e, { 0xbd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x1d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0196
        gbc.setState(0x4c23, 0x45d0, 0x36f0, 0x9cd5, 0xd429, 0xead6, 0x0, 0x1);
        gbc.writeMem(0x4c23, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0x4c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0197
        gbc.setState(0xd2, 0x109e, 0x7b40, 0x42c7, 0xcde8, 0x79f0, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0xd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0198
        gbc.setState(0xc3e4, 0x3b37, 0x5950, 0xed0, 0x4f98, 0xac1a, 0x0, 0x0);
        gbc.writeMem(0xc3e4, { 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3b37, gbc.sp());
        EXPECT(0xc3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc3e4));
        // BD 0199
        gbc.setState(0x901b, 0x7456, 0x6960, 0x8191, 0x7748, 0x64fe, 0x0, 0x1);
        gbc.writeMem(0x901b, { 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7456, gbc.sp());
        EXPECT(0x901c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x901b));
        // BD 019A
        gbc.setState(0x84a9, 0x11fa, 0x43a0, 0x73d6, 0xa231, 0x6cfc, 0x1, 0x0);
        gbc.writeMem(0x84a9, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x11fa, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x84a9));
        // BD 019B
        gbc.setState(0xe9fe, 0x7023, 0xdb10, 0xfea5, 0xa3d3, 0x7093, 0x0, 0x0);
        gbc.writeMem(0xe9fe, { 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0xe9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe9fe));
        // BD 019C
        gbc.setState(0xc437, 0x28e1, 0x4380, 0xe96, 0x54fd, 0xa96, 0x1, 0x1);
        gbc.writeMem(0xc437, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x28e1, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc437));
        // BD 019D
        gbc.setState(0x409c, 0xaaa5, 0x2a10, 0xe727, 0x2bed, 0x1a16, 0x0, 0x1);
        gbc.writeMem(0x409c, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0x409d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 019E
        gbc.setState(0xe664, 0x1954, 0x1c50, 0xf635, 0x7c90, 0xd6c6, 0x1, 0x1);
        gbc.writeMem(0xe664, { 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1954, gbc.sp());
        EXPECT(0xe665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe664));
        // BD 019F
        gbc.setState(0x4729, 0x28c9, 0x2450, 0x258a, 0xe6b3, 0xbddd, 0x1, 0x1);
        gbc.writeMem(0x4729, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x28c9, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01A0
        gbc.setState(0x982e, 0x459d, 0x4cf0, 0xa0d5, 0xf0f4, 0x7b60, 0x1, 0x0);
        gbc.writeMem(0x982e, { 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x982f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x982e));
        // BD 01A1
        gbc.setState(0x67e, 0x8d5d, 0xdd60, 0x6408, 0x17b8, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0x67e, { 0xbd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8d5d, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01A2
        gbc.setState(0x6ec2, 0x50b6, 0x1680, 0x20a, 0xb561, 0x3bf7, 0x0, 0x1);
        gbc.writeMem(0x6ec2, { 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x50b6, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01A3
        gbc.setState(0x4c7f, 0x1c98, 0x70c0, 0x90d3, 0x2643, 0xf08b, 0x1, 0x0);
        gbc.writeMem(0x4c7f, { 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01A4
        gbc.setState(0x25f, 0x90e9, 0x8e40, 0x92bb, 0xb698, 0xaabb, 0x1, 0x0);
        gbc.writeMem(0x25f, { 0xbd });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x90e9, gbc.sp());
        EXPECT(0x260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01A5
        gbc.setState(0xb006, 0xe3c2, 0x58c0, 0xe94f, 0x29b8, 0xcaae, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb006));
        // BD 01A6
        gbc.setState(0xe1d3, 0xa903, 0x3100, 0x4f0f, 0x65c6, 0x21f7, 0x1, 0x0);
        gbc.writeMem(0xe1d3, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa903, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe1d3));
        // BD 01A7
        gbc.setState(0x3f6e, 0xb422, 0xec90, 0x57c8, 0xe4d1, 0x775f, 0x0, 0x1);
        gbc.writeMem(0x3f6e, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0x3f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01A8
        gbc.setState(0x3666, 0xddc7, 0x3e30, 0x20a5, 0xcef5, 0x7316, 0x1, 0x1);
        gbc.writeMem(0x3666, { 0xbd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0x3667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01A9
        gbc.setState(0xa8d2, 0x835f, 0x1600, 0x1f61, 0x65d9, 0x4bc, 0x0, 0x0);
        gbc.writeMem(0xa8d2, { 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x835f, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa8d2));
        // BD 01AA
        gbc.setState(0x3128, 0x8b72, 0xc430, 0xbec9, 0x7bb8, 0x183d, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0x3129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01AB
        gbc.setState(0x2dda, 0xb25f, 0x1470, 0xe965, 0xfce0, 0xeb3, 0x0, 0x1);
        gbc.writeMem(0x2dda, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01AC
        gbc.setState(0xc2c, 0xc738, 0x2e10, 0x6042, 0xcba3, 0x7b27, 0x0, 0x0);
        gbc.writeMem(0xc2c, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc738, gbc.sp());
        EXPECT(0xc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01AD
        gbc.setState(0x4d, 0xece9, 0x3570, 0xce3b, 0xaabc, 0x1739, 0x1, 0x1);
        gbc.writeMem(0x4d, { 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0x4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01AE
        gbc.setState(0x73a0, 0x5825, 0xa190, 0xab2f, 0xcfba, 0x5511, 0x1, 0x1);
        gbc.writeMem(0x73a0, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x73a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01AF
        gbc.setState(0x272, 0x43f, 0xe1e0, 0xcd1c, 0x10fe, 0x1d2c, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xbd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01B0
        gbc.setState(0xd702, 0xc112, 0x6e00, 0x80cb, 0x894c, 0xf4c9, 0x1, 0x1);
        gbc.writeMem(0xd702, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc112, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd702));
        // BD 01B1
        gbc.setState(0x8636, 0x1f, 0x1cb0, 0x6d52, 0x6ebb, 0x7390, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1f, gbc.sp());
        EXPECT(0x8637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8636));
        // BD 01B2
        gbc.setState(0x2942, 0x221b, 0x9ae0, 0x75b2, 0xa116, 0x36fd, 0x1, 0x1);
        gbc.writeMem(0x2942, { 0xbd });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01B3
        gbc.setState(0x8637, 0x725d, 0x7a30, 0x58c7, 0x371b, 0xc151, 0x1, 0x1);
        gbc.writeMem(0x8637, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0x8638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8637));
        // BD 01B4
        gbc.setState(0xb239, 0xe4b8, 0x5dc0, 0x7ebf, 0x4ad0, 0x80d7, 0x0, 0x0);
        gbc.writeMem(0xb239, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe4b8, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb239));
        // BD 01B5
        gbc.setState(0x33, 0xaeb0, 0xd050, 0x6406, 0x9655, 0x5011, 0x0, 0x0);
        gbc.writeMem(0x33, { 0xbd });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaeb0, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01B6
        gbc.setState(0x776d, 0x9d7, 0xd180, 0xfac9, 0xec81, 0xb26a, 0x1, 0x1);
        gbc.writeMem(0x776d, { 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0x776e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01B7
        gbc.setState(0x566d, 0xffea, 0xab0, 0x770b, 0x5e48, 0xaa5c, 0x0, 0x0);
        gbc.writeMem(0x566d, { 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffea, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01B8
        gbc.setState(0xb43, 0xd19e, 0x4420, 0xaac1, 0xf9e5, 0xe319, 0x0, 0x0);
        gbc.writeMem(0xb43, { 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0xb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01B9
        gbc.setState(0xe2f0, 0x65f0, 0x29e0, 0x8428, 0xc827, 0xe597, 0x0, 0x1);
        gbc.writeMem(0xe2f0, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe2f0));
        // BD 01BA
        gbc.setState(0x1e88, 0xc0bc, 0x7780, 0xe3ba, 0x7314, 0x7597, 0x1, 0x0);
        gbc.writeMem(0x1e88, { 0xbd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0x1e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01BC
        gbc.setState(0x8ea7, 0xfcb5, 0xe830, 0xee94, 0xbb94, 0xfc97, 0x0, 0x1);
        gbc.writeMem(0x8ea7, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfcb5, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8ea7));
        // BD 01BE
        gbc.setState(0xb7db, 0xb6cd, 0xc910, 0xeb5, 0xadd2, 0x11f0, 0x1, 0x0);
        gbc.writeMem(0xb7db, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0xb7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb7db));
        // BD 01BF
        gbc.setState(0xb728, 0x9ddf, 0x7660, 0x84c3, 0xa4e0, 0xdac0, 0x0, 0x0);
        gbc.writeMem(0xb728, { 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0xb729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb728));
        // BD 01C0
        gbc.setState(0xd28e, 0x7c82, 0x1b40, 0xc1f7, 0xddf3, 0xf041, 0x0, 0x0);
        gbc.writeMem(0xd28e, { 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7c82, gbc.sp());
        EXPECT(0xd28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd28e));
        // BD 01C1
        gbc.setState(0x19b9, 0x42e0, 0x8c20, 0xae8a, 0x55ca, 0x9bb1, 0x1, 0x1);
        gbc.writeMem(0x19b9, { 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01C2
        gbc.setState(0x7ba7, 0xd775, 0x8d50, 0x8fc0, 0x798e, 0xb544, 0x1, 0x0);
        gbc.writeMem(0x7ba7, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd775, gbc.sp());
        EXPECT(0x7ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01C3
        gbc.setState(0x7f42, 0x4537, 0xc020, 0x1f4, 0xfbad, 0x8708, 0x0, 0x1);
        gbc.writeMem(0x7f42, { 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4537, gbc.sp());
        EXPECT(0x7f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01C4
        gbc.setState(0xd96e, 0x8aa, 0x2fa0, 0x1e4d, 0x1d41, 0x2502, 0x1, 0x0);
        gbc.writeMem(0xd96e, { 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8aa, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd96e));
        // BD 01C5
        gbc.setState(0x435f, 0xe5d4, 0xafb0, 0x82ad, 0xb07c, 0xca26, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe5d4, gbc.sp());
        EXPECT(0x4360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01C6
        gbc.setState(0xe639, 0x72a5, 0xc9d0, 0xe4fb, 0x53dc, 0x975b, 0x1, 0x1);
        gbc.writeMem(0xe639, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe639));
        // BD 01C7
        gbc.setState(0x7e5d, 0x7724, 0x420, 0xaed, 0xf022, 0x1402, 0x1, 0x0);
        gbc.writeMem(0x7e5d, { 0xbd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0x7e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01C8
        gbc.setState(0xe545, 0x3c91, 0xa5c0, 0xde76, 0x24b, 0xad97, 0x1, 0x1);
        gbc.writeMem(0xe545, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0xe546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe545));
        // BD 01C9
        gbc.setState(0x60cc, 0x8088, 0xf30, 0x61c9, 0xa77a, 0x1401, 0x1, 0x1);
        gbc.writeMem(0x60cc, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8088, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01CA
        gbc.setState(0xc9cf, 0x35ea, 0x5160, 0xa7fd, 0xe61b, 0x1b87, 0x1, 0x1);
        gbc.writeMem(0xc9cf, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x35ea, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc9cf));
        // BD 01CB
        gbc.setState(0x1daa, 0xeb3b, 0x2930, 0x635b, 0x6581, 0x16cb, 0x0, 0x0);
        gbc.writeMem(0x1daa, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeb3b, gbc.sp());
        EXPECT(0x1dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01CC
        gbc.setState(0x4202, 0xd642, 0xd600, 0x83c9, 0x1386, 0xe532, 0x1, 0x1);
        gbc.writeMem(0x4202, { 0xbd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x4203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01CD
        gbc.setState(0xced9, 0xc4de, 0x60d0, 0xf4f3, 0x158d, 0x3ce0, 0x0, 0x1);
        gbc.writeMem(0xced9, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xced9));
        // BD 01CE
        gbc.setState(0x6d60, 0x4828, 0x48b0, 0x2d8c, 0x2ec, 0x1586, 0x0, 0x1);
        gbc.writeMem(0x6d60, { 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x6d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01CF
        gbc.setState(0x6ab1, 0x1c1c, 0x4550, 0xaf57, 0x8ab3, 0xce99, 0x0, 0x1);
        gbc.writeMem(0x6ab1, { 0xbd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01D1
        gbc.setState(0x80cd, 0xea49, 0x8a70, 0xdc77, 0xfebd, 0x33e9, 0x1, 0x0);
        gbc.writeMem(0x80cd, { 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x80ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x80cd));
        // BD 01D2
        gbc.setState(0x8a2c, 0x3662, 0x3a20, 0x37bd, 0xc42b, 0x2324, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3662, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8a2c));
        // BD 01D3
        gbc.setState(0xa0c, 0x1981, 0x8580, 0x9818, 0x43e1, 0x7407, 0x1, 0x1);
        gbc.writeMem(0xa0c, { 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0xa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01D4
        gbc.setState(0x3651, 0xf0a8, 0xf1e0, 0x52cb, 0xd0e8, 0xd3d, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xbd });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0x3652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01D5
        gbc.setState(0x7ea, 0xb200, 0x2510, 0x18f2, 0xa829, 0xffd3, 0x1, 0x1);
        gbc.writeMem(0x7ea, { 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01D6
        gbc.setState(0xd2de, 0xc09f, 0x76c0, 0x3326, 0x4ee9, 0xc047, 0x1, 0x0);
        gbc.writeMem(0xd2de, { 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd2de));
        // BD 01D7
        gbc.setState(0x10b8, 0x758d, 0x2230, 0x1b72, 0xbe5, 0xed42, 0x0, 0x1);
        gbc.writeMem(0x10b8, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01D8
        gbc.setState(0x5dac, 0x5d1d, 0xc8f0, 0x7d68, 0x3188, 0x8a9b, 0x0, 0x0);
        gbc.writeMem(0x5dac, { 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5d1d, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01D9
        gbc.setState(0xd102, 0x5d4f, 0x29e0, 0xceb2, 0xaca4, 0x9e52, 0x0, 0x1);
        gbc.writeMem(0xd102, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5d4f, gbc.sp());
        EXPECT(0xd103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd102));
        // BD 01DA
        gbc.setState(0x8c92, 0xae06, 0x5220, 0xbc1f, 0x2819, 0x7ca7, 0x0, 0x1);
        gbc.writeMem(0x8c92, { 0xbd });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xae06, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8c92));
        // BD 01DB
        gbc.setState(0xc4c1, 0x4722, 0x100, 0x5ac8, 0x3cc9, 0x435e, 0x0, 0x0);
        gbc.writeMem(0xc4c1, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4722, gbc.sp());
        EXPECT(0xc4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc4c1));
        // BD 01DE
        gbc.setState(0xd805, 0xa2ed, 0xc310, 0x8f85, 0x7a50, 0xcf04, 0x1, 0x0);
        gbc.writeMem(0xd805, { 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd805));
        // BD 01DF
        gbc.setState(0x7c10, 0xefdc, 0x43b0, 0x731a, 0xd36c, 0x5d9e, 0x1, 0x1);
        gbc.writeMem(0x7c10, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xefdc, gbc.sp());
        EXPECT(0x7c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01E0
        gbc.setState(0x5e14, 0x132b, 0xc3a0, 0xffe8, 0x236d, 0x3136, 0x1, 0x1);
        gbc.writeMem(0x5e14, { 0xbd });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x132b, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01E1
        gbc.setState(0xdb2, 0x21c2, 0xe6c0, 0xf7ff, 0x1827, 0xdad5, 0x1, 0x1);
        gbc.writeMem(0xdb2, { 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01E2
        gbc.setState(0x534b, 0x8ca3, 0x2c70, 0xa04f, 0xbed0, 0xbe9e, 0x1, 0x0);
        gbc.writeMem(0x534b, { 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8ca3, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01E3
        gbc.setState(0x54c4, 0xfb3c, 0x4870, 0x33d, 0x3a38, 0x5894, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01E4
        gbc.setState(0x5695, 0x6cfc, 0xecd0, 0x9aaf, 0x42ee, 0xa388, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01E5
        gbc.setState(0x8603, 0x9535, 0x5bb0, 0xf075, 0xdeaf, 0xa724, 0x1, 0x0);
        gbc.writeMem(0x8603, { 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8603));
        // BD 01E6
        gbc.setState(0xc082, 0xafb0, 0x6420, 0xc5f7, 0x1505, 0x545f, 0x1, 0x0);
        gbc.writeMem(0xc082, { 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xafb0, gbc.sp());
        EXPECT(0xc083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc082));
        // BD 01E7
        gbc.setState(0xe68d, 0x4da9, 0xd910, 0xf53a, 0xc279, 0x9538, 0x0, 0x0);
        gbc.writeMem(0xe68d, { 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0xe68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe68d));
        // BD 01E8
        gbc.setState(0x2883, 0xe43f, 0xe3c0, 0x94c9, 0xd531, 0xfd87, 0x0, 0x0);
        gbc.writeMem(0x2883, { 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x2884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01EA
        gbc.setState(0x77a, 0x3de9, 0xcdb0, 0xb8aa, 0x7b6d, 0xeb3e, 0x0, 0x0);
        gbc.writeMem(0x77a, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0x77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01EC
        gbc.setState(0x996d, 0x7243, 0xd980, 0xa1f, 0x726a, 0xa13c, 0x0, 0x1);
        gbc.writeMem(0x996d, { 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7243, gbc.sp());
        EXPECT(0x996e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x996d));
        // BD 01ED
        gbc.setState(0x604, 0x78f6, 0xa1d0, 0xd09d, 0x40e5, 0xb1db, 0x0, 0x0);
        gbc.writeMem(0x604, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0x605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01EE
        gbc.setState(0x844e, 0xf77c, 0x95a0, 0x9317, 0xca2b, 0xc082, 0x0, 0x0);
        gbc.writeMem(0x844e, { 0xbd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf77c, gbc.sp());
        EXPECT(0x844f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x844e));
        // BD 01EF
        gbc.setState(0x5efb, 0x414c, 0x13a0, 0x3813, 0xb9b, 0x5916, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x414c, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01F0
        gbc.setState(0xeaab, 0x35db, 0xdca0, 0xd880, 0x3f2d, 0x6014, 0x0, 0x0);
        gbc.writeMem(0xeaab, { 0xbd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xeaab));
        // BD 01F1
        gbc.setState(0x931a, 0x3659, 0x7380, 0xe144, 0x61b1, 0xadc8, 0x0, 0x0);
        gbc.writeMem(0x931a, { 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x931a));
        // BD 01F2
        gbc.setState(0x537c, 0xdf4, 0x72b0, 0x6140, 0xccfc, 0x57fb, 0x1, 0x0);
        gbc.writeMem(0x537c, { 0xbd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01F3
        gbc.setState(0x8165, 0xb741, 0x9350, 0xf130, 0x506e, 0x6c47, 0x1, 0x0);
        gbc.writeMem(0x8165, { 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb741, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8165));
        // BD 01F4
        gbc.setState(0x41fb, 0x9799, 0x1110, 0xa710, 0x40c0, 0x6682, 0x1, 0x1);
        gbc.writeMem(0x41fb, { 0xbd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9799, gbc.sp());
        EXPECT(0x41fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01F5
        gbc.setState(0x2d55, 0x459b, 0x8b80, 0x612c, 0xe0ca, 0xb83a, 0x0, 0x1);
        gbc.writeMem(0x2d55, { 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01F6
        gbc.setState(0x9767, 0x134a, 0xb9e0, 0x99f2, 0x47f7, 0xad89, 0x1, 0x1);
        gbc.writeMem(0x9767, { 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x134a, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9767));
        // BD 01F7
        gbc.setState(0x50fa, 0x3d44, 0x260, 0x8e4e, 0xac1c, 0xdd6d, 0x1, 0x1);
        gbc.writeMem(0x50fa, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0x50fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 01F8
        gbc.setState(0x6b34, 0x2ec, 0xd5b0, 0x350f, 0xc219, 0xb1d, 0x0, 0x0);
        gbc.writeMem(0x6b34, { 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 01F9
        gbc.setState(0xed40, 0x49d7, 0xf920, 0xe77, 0x2791, 0xed10, 0x1, 0x0);
        gbc.writeMem(0xed40, { 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x49d7, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xed40));
        // BD 01FA
        gbc.setState(0xe1a0, 0x2609, 0xc280, 0xd05b, 0x2faa, 0xd2e1, 0x0, 0x1);
        gbc.writeMem(0xe1a0, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe1a0));
        // BD 01FB
        gbc.setState(0xe5ca, 0x1cf4, 0x9930, 0x9142, 0x279a, 0x7053, 0x1, 0x1);
        gbc.writeMem(0xe5ca, { 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1cf4, gbc.sp());
        EXPECT(0xe5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe5ca));
        // BD 01FC
        gbc.setState(0xb08c, 0x4009, 0x2680, 0xf7a, 0xaf1a, 0xda30, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0xb08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb08c));
        // BD 01FD
        gbc.setState(0x90a2, 0x2a66, 0xc890, 0x9134, 0x9744, 0x968b, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2a66, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x90a2));
        // BD 01FE
        gbc.setState(0xa2bb, 0x133d, 0xc290, 0xb0cb, 0x713e, 0x9150, 0x0, 0x0);
        gbc.writeMem(0xa2bb, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x133d, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa2bb));
        // BD 01FF
        gbc.setState(0xd804, 0xb380, 0x6580, 0x1dc6, 0x9869, 0xfeb0, 0x0, 0x0);
        gbc.writeMem(0xd804, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0xd805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd804));
        // BD 0200
        gbc.setState(0x8f26, 0xb21f, 0x2600, 0x74ab, 0x7a72, 0xad56, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0x8f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8f26));
        // BD 0201
        gbc.setState(0x9c78, 0xdab, 0xc260, 0xce6a, 0x44c2, 0x944, 0x0, 0x1);
        gbc.writeMem(0x9c78, { 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9c78));
        // BD 0202
        gbc.setState(0xc731, 0x4b93, 0x9060, 0xd827, 0x8e87, 0x6a13, 0x0, 0x0);
        gbc.writeMem(0xc731, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0xc732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc731));
        // BD 0203
        gbc.setState(0x5304, 0xbbd9, 0x9220, 0x6cef, 0x6ef4, 0xf4a6, 0x1, 0x0);
        gbc.writeMem(0x5304, { 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbbd9, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0204
        gbc.setState(0x1f6, 0x8812, 0x9920, 0xa377, 0x4f13, 0x83a0, 0x0, 0x1);
        gbc.writeMem(0x1f6, { 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0x1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0205
        gbc.setState(0x9712, 0x6025, 0x4310, 0x6996, 0x4f92, 0x7348, 0x1, 0x0);
        gbc.writeMem(0x9712, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6025, gbc.sp());
        EXPECT(0x9713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9712));
        // BD 0206
        gbc.setState(0x6f95, 0x8259, 0xce50, 0xed, 0xe2fe, 0x3f12, 0x0, 0x0);
        gbc.writeMem(0x6f95, { 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8259, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0207
        gbc.setState(0x3c5a, 0x787d, 0x90e0, 0x5ec1, 0xdc0b, 0x54b5, 0x0, 0x0);
        gbc.writeMem(0x3c5a, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x787d, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0208
        gbc.setState(0x674c, 0x599, 0xa9f0, 0xfa12, 0x9037, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0x674c, { 0xbd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x599, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0209
        gbc.setState(0x892, 0xe475, 0x8240, 0xad0d, 0x36ec, 0x9105, 0x1, 0x0);
        gbc.writeMem(0x892, { 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 020A
        gbc.setState(0x9e37, 0x2dce, 0x3dd0, 0x3fc7, 0xd548, 0xbbba, 0x0, 0x0);
        gbc.writeMem(0x9e37, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x9e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9e37));
        // BD 020B
        gbc.setState(0x6ff3, 0x40a5, 0x9b00, 0xc392, 0xeb75, 0xf71a, 0x1, 0x0);
        gbc.writeMem(0x6ff3, { 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x40a5, gbc.sp());
        EXPECT(0x6ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 020C
        gbc.setState(0x8665, 0xbc3b, 0xe8b0, 0x79a8, 0x1b25, 0x2d85, 0x0, 0x1);
        gbc.writeMem(0x8665, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x8666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8665));
        // BD 020D
        gbc.setState(0xe0e5, 0x6bcd, 0xa330, 0x2e59, 0xe66f, 0xda21, 0x0, 0x1);
        gbc.writeMem(0xe0e5, { 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6bcd, gbc.sp());
        EXPECT(0xe0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe0e5));
        // BD 020E
        gbc.setState(0x6b79, 0x7076, 0x79d0, 0x7390, 0x8d4e, 0x5be, 0x1, 0x0);
        gbc.writeMem(0x6b79, { 0xbd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 020F
        gbc.setState(0xa3fe, 0x223a, 0x790, 0xfbdb, 0x63af, 0x7678, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0xbd });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x223a, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa3fe));
        // BD 0210
        gbc.setState(0x9c1f, 0xdb18, 0xba60, 0xbb2f, 0x6472, 0x60dc, 0x1, 0x1);
        gbc.writeMem(0x9c1f, { 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0x9c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9c1f));
        // BD 0211
        gbc.setState(0x3a14, 0xb6c5, 0x2fb0, 0x553b, 0xb59, 0xe83e, 0x1, 0x1);
        gbc.writeMem(0x3a14, { 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb6c5, gbc.sp());
        EXPECT(0x3a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0212
        gbc.setState(0x6a1b, 0x992e, 0xc430, 0x4051, 0x9b65, 0xa788, 0x1, 0x1);
        gbc.writeMem(0x6a1b, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0213
        gbc.setState(0xa012, 0xffcc, 0x6fd0, 0xea5a, 0x5a54, 0x7a3, 0x0, 0x1);
        gbc.writeMem(0xa012, { 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xffcc, gbc.sp());
        EXPECT(0xa013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa012));
        // BD 0214
        gbc.setState(0xce72, 0x590b, 0xe720, 0x2516, 0xc75f, 0x6348, 0x0, 0x0);
        gbc.writeMem(0xce72, { 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x590b, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xce72));
        // BD 0215
        gbc.setState(0xd3b0, 0x14b, 0xe8e0, 0xb87f, 0xd924, 0xa8b8, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14b, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd3b0));
        // BD 0216
        gbc.setState(0x4ad7, 0xd885, 0xf600, 0x1d3b, 0x5487, 0x4f44, 0x1, 0x0);
        gbc.writeMem(0x4ad7, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd885, gbc.sp());
        EXPECT(0x4ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0217
        gbc.setState(0x94db, 0xfb0b, 0x1d50, 0x8f73, 0x7174, 0xc002, 0x1, 0x0);
        gbc.writeMem(0x94db, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfb0b, gbc.sp());
        EXPECT(0x94dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x94db));
        // BD 0218
        gbc.setState(0x7410, 0x8ad5, 0x4f00, 0x6d6c, 0x9ea2, 0x4ed3, 0x0, 0x1);
        gbc.writeMem(0x7410, { 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8ad5, gbc.sp());
        EXPECT(0x7411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0219
        gbc.setState(0x284a, 0x7f54, 0x630, 0xdcd7, 0x843a, 0x69dc, 0x1, 0x1);
        gbc.writeMem(0x284a, { 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 021A
        gbc.setState(0xea12, 0xa6de, 0x30e0, 0x9933, 0xa1e9, 0x2dd8, 0x1, 0x0);
        gbc.writeMem(0xea12, { 0xbd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0xea13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xea12));
        // BD 021B
        gbc.setState(0x503b, 0xe77, 0x4dd0, 0x517c, 0x3615, 0x79f8, 0x1, 0x0);
        gbc.writeMem(0x503b, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe77, gbc.sp());
        EXPECT(0x503c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 021C
        gbc.setState(0xc25d, 0x65a4, 0x7b20, 0x1afe, 0xa279, 0x782b, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc25d));
        // BD 021D
        gbc.setState(0x94e3, 0x60b3, 0x2220, 0x14dd, 0xced, 0x2d97, 0x1, 0x0);
        gbc.writeMem(0x94e3, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60b3, gbc.sp());
        EXPECT(0x94e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x94e3));
        // BD 021F
        gbc.setState(0x598, 0x527f, 0xe360, 0xb008, 0xbcf6, 0xccf6, 0x1, 0x1);
        gbc.writeMem(0x598, { 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x527f, gbc.sp());
        EXPECT(0x599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0220
        gbc.setState(0xd787, 0x287c, 0x20e0, 0xb13f, 0xb9d8, 0xa8c1, 0x0, 0x1);
        gbc.writeMem(0xd787, { 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd787));
        // BD 0221
        gbc.setState(0xc3f2, 0x4cb3, 0xe470, 0xd15f, 0x1601, 0x57d5, 0x1, 0x0);
        gbc.writeMem(0xc3f2, { 0xbd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xc3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc3f2));
        // BD 0222
        gbc.setState(0x2761, 0x2d21, 0x2280, 0x7fd8, 0xafe8, 0x727a, 0x1, 0x1);
        gbc.writeMem(0x2761, { 0xbd });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2d21, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0223
        gbc.setState(0x6836, 0x31ac, 0x4e00, 0xd4bc, 0x88f0, 0xda52, 0x1, 0x1);
        gbc.writeMem(0x6836, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x31ac, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0224
        gbc.setState(0xde1, 0xd0b6, 0xf870, 0xd9b1, 0xcd70, 0x76c, 0x1, 0x0);
        gbc.writeMem(0xde1, { 0xbd });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0225
        gbc.setState(0xb414, 0x31e2, 0xcc70, 0x259d, 0x2028, 0xbf7a, 0x1, 0x1);
        gbc.writeMem(0xb414, { 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x31e2, gbc.sp());
        EXPECT(0xb415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb414));
        // BD 0226
        gbc.setState(0x11e7, 0x98dd, 0xb7d0, 0x7ce1, 0xd89, 0xc265, 0x1, 0x0);
        gbc.writeMem(0x11e7, { 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x98dd, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0227
        gbc.setState(0x2c7, 0x970, 0x2940, 0x1437, 0xd149, 0x1947, 0x0, 0x1);
        gbc.writeMem(0x2c7, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0x2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0228
        gbc.setState(0x84cf, 0xab02, 0x2560, 0x1961, 0x3d66, 0x84fe, 0x0, 0x1);
        gbc.writeMem(0x84cf, { 0xbd });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x84cf));
        // BD 0229
        gbc.setState(0x15c4, 0x278f, 0x6580, 0x4ec5, 0x618f, 0x1206, 0x0, 0x0);
        gbc.writeMem(0x15c4, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x278f, gbc.sp());
        EXPECT(0x15c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 022A
        gbc.setState(0x60e3, 0x77f0, 0x2e10, 0x64e8, 0xdc45, 0xdc4d, 0x1, 0x0);
        gbc.writeMem(0x60e3, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x77f0, gbc.sp());
        EXPECT(0x60e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 022B
        gbc.setState(0x2050, 0x9665, 0x88b0, 0x4877, 0xad25, 0x3e38, 0x1, 0x0);
        gbc.writeMem(0x2050, { 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 022C
        gbc.setState(0x4b41, 0x673, 0xd240, 0x562d, 0xccbc, 0xecab, 0x0, 0x0);
        gbc.writeMem(0x4b41, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0x4b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 022D
        gbc.setState(0x9d07, 0x5269, 0xac60, 0x8735, 0xd162, 0x6a7, 0x0, 0x1);
        gbc.writeMem(0x9d07, { 0xbd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9d07));
        // BD 022E
        gbc.setState(0x6669, 0xa611, 0x9e60, 0x8711, 0x2b77, 0x7a98, 0x1, 0x1);
        gbc.writeMem(0x6669, { 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa611, gbc.sp());
        EXPECT(0x666a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 022F
        gbc.setState(0x9aab, 0x3c30, 0x2d50, 0xf1de, 0x1610, 0xd8e1, 0x0, 0x0);
        gbc.writeMem(0x9aab, { 0xbd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0x9aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9aab));
        // BD 0230
        gbc.setState(0x22e3, 0x1013, 0x8d00, 0x2d93, 0x2404, 0xd968, 0x0, 0x1);
        gbc.writeMem(0x22e3, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0x22e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0231
        gbc.setState(0x427b, 0xb5a, 0xfdf0, 0xca90, 0x5431, 0xfbb8, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb5a, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0232
        gbc.setState(0x5c5e, 0x7b5d, 0xb5e0, 0x42a7, 0xe78e, 0x8521, 0x0, 0x1);
        gbc.writeMem(0x5c5e, { 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0x5c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0233
        gbc.setState(0x6fa9, 0x95f5, 0x8d90, 0xafdf, 0x24ee, 0x5b38, 0x1, 0x1);
        gbc.writeMem(0x6fa9, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x95f5, gbc.sp());
        EXPECT(0x6faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0234
        gbc.setState(0x1caa, 0xd76e, 0xab10, 0x95e7, 0x75ad, 0x4233, 0x0, 0x1);
        gbc.writeMem(0x1caa, { 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x1cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0235
        gbc.setState(0x6fec, 0x1273, 0x5d30, 0xeb15, 0x78a, 0x6b67, 0x0, 0x0);
        gbc.writeMem(0x6fec, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0236
        gbc.setState(0x154, 0xba82, 0x1d60, 0xe65f, 0x9f6b, 0x53f8, 0x1, 0x0);
        gbc.writeMem(0x154, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xba82, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0237
        gbc.setState(0x1cd, 0x14b3, 0x1300, 0x3721, 0xc44b, 0x5bcc, 0x0, 0x0);
        gbc.writeMem(0x1cd, { 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0x1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0238
        gbc.setState(0x45f4, 0x1674, 0xc660, 0x64ed, 0x1aba, 0xfd90, 0x1, 0x1);
        gbc.writeMem(0x45f4, { 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1674, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0239
        gbc.setState(0xaaf6, 0x2dec, 0x2400, 0x8db9, 0xea13, 0x499b, 0x1, 0x0);
        gbc.writeMem(0xaaf6, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2dec, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaaf6));
        // BD 023A
        gbc.setState(0x66cd, 0x296, 0x53b0, 0xd202, 0xde9b, 0x7ba7, 0x1, 0x1);
        gbc.writeMem(0x66cd, { 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x296, gbc.sp());
        EXPECT(0x66ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 023B
        gbc.setState(0x8c60, 0x136, 0xcc00, 0x127c, 0x4acc, 0xd568, 0x0, 0x0);
        gbc.writeMem(0x8c60, { 0xbd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0x8c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8c60));
        // BD 023D
        gbc.setState(0xd215, 0xdf5f, 0x1720, 0xc31d, 0xc8eb, 0x7664, 0x0, 0x0);
        gbc.writeMem(0xd215, { 0xbd });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdf5f, gbc.sp());
        EXPECT(0xd216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd215));
        // BD 023E
        gbc.setState(0xa391, 0x91c4, 0xbf70, 0xc745, 0x8c15, 0x4cb6, 0x1, 0x1);
        gbc.writeMem(0xa391, { 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x91c4, gbc.sp());
        EXPECT(0xa392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa391));
        // BD 0240
        gbc.setState(0x189, 0x3ef2, 0x4010, 0x11d9, 0x6f2f, 0x172b, 0x0, 0x0);
        gbc.writeMem(0x189, { 0xbd });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3ef2, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0241
        gbc.setState(0xda6b, 0xaf32, 0x6b80, 0x87ba, 0x3bf3, 0x8ff7, 0x1, 0x0);
        gbc.writeMem(0xda6b, { 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf32, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda6b));
        // BD 0242
        gbc.setState(0xa99e, 0xafc2, 0xa5d0, 0xb203, 0xad41, 0xacc2, 0x1, 0x1);
        gbc.writeMem(0xa99e, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0xa99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa99e));
        // BD 0243
        gbc.setState(0x699e, 0xbd1a, 0x31c0, 0x329, 0xabe2, 0xd5cd, 0x0, 0x1);
        gbc.writeMem(0x699e, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd1a, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0244
        gbc.setState(0x13b9, 0xc153, 0xe280, 0x76b6, 0x67dd, 0x1de7, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xbd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc153, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0246
        gbc.setState(0xdaa3, 0xfbd4, 0x4a40, 0x80b4, 0x410e, 0x5632, 0x0, 0x0);
        gbc.writeMem(0xdaa3, { 0xbd });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0xdaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdaa3));
        // BD 0247
        gbc.setState(0x1a0d, 0xee7d, 0x5100, 0x65f0, 0x54be, 0x450b, 0x0, 0x1);
        gbc.writeMem(0x1a0d, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0x1a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0248
        gbc.setState(0x7e54, 0x438e, 0x490, 0x1f8a, 0x198c, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0x7e54, { 0xbd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0249
        gbc.setState(0x8422, 0x6c1c, 0xa560, 0x6494, 0x1c45, 0x57dd, 0x0, 0x1);
        gbc.writeMem(0x8422, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0x8423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8422));
        // BD 024B
        gbc.setState(0x908a, 0x1f8a, 0xfcb0, 0xd092, 0xcba1, 0x6dd7, 0x0, 0x0);
        gbc.writeMem(0x908a, { 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1f8a, gbc.sp());
        EXPECT(0x908b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x908a));
        // BD 024C
        gbc.setState(0x6a17, 0x9422, 0x2eb0, 0x8426, 0x82e4, 0xb0e7, 0x0, 0x1);
        gbc.writeMem(0x6a17, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 024D
        gbc.setState(0x47ec, 0xa043, 0x9230, 0xbd80, 0xc791, 0xff00, 0x1, 0x1);
        gbc.writeMem(0x47ec, { 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa043, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 024E
        gbc.setState(0x4012, 0xdc33, 0x3d40, 0xdf3a, 0x3d37, 0x685f, 0x1, 0x0);
        gbc.writeMem(0x4012, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc33, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 024F
        gbc.setState(0x2d2b, 0xce4b, 0x8580, 0x89a4, 0x7788, 0xc0f8, 0x1, 0x0);
        gbc.writeMem(0x2d2b, { 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xce4b, gbc.sp());
        EXPECT(0x2d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0250
        gbc.setState(0xe76d, 0xc853, 0x55e0, 0x5f76, 0x6e2b, 0xea01, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0xbd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc853, gbc.sp());
        EXPECT(0xe76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe76d));
        // BD 0251
        gbc.setState(0xdbac, 0xa47f, 0x9180, 0x1437, 0xc951, 0xf2a6, 0x0, 0x1);
        gbc.writeMem(0xdbac, { 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdbac));
        // BD 0252
        gbc.setState(0x4182, 0x97b9, 0xb530, 0xb7c3, 0x7d91, 0x3638, 0x1, 0x0);
        gbc.writeMem(0x4182, { 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x97b9, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0253
        gbc.setState(0x9546, 0xbaaa, 0x1b40, 0xf971, 0xa4dd, 0x11fd, 0x0, 0x1);
        gbc.writeMem(0x9546, { 0xbd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbaaa, gbc.sp());
        EXPECT(0x9547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9546));
        // BD 0255
        gbc.setState(0xdefc, 0x9b34, 0x3c60, 0x22c0, 0x3a63, 0xbcf3, 0x1, 0x0);
        gbc.writeMem(0xdefc, { 0xbd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xdefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdefc));
        // BD 0256
        gbc.setState(0x63b0, 0xd11f, 0xe90, 0x186, 0xeaf0, 0x477f, 0x1, 0x0);
        gbc.writeMem(0x63b0, { 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd11f, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0257
        gbc.setState(0x7295, 0xcc7e, 0xf3b0, 0x6437, 0xb815, 0x4ac0, 0x1, 0x0);
        gbc.writeMem(0x7295, { 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcc7e, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0258
        gbc.setState(0x47ba, 0xf0fa, 0x9e50, 0x7942, 0xd0ab, 0x7630, 0x0, 0x1);
        gbc.writeMem(0x47ba, { 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf0fa, gbc.sp());
        EXPECT(0x47bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0259
        gbc.setState(0x1939, 0x50d, 0x2950, 0xaaca, 0x1ee1, 0x491d, 0x1, 0x0);
        gbc.writeMem(0x1939, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0x193a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 025A
        gbc.setState(0x677c, 0x1e0a, 0x9c40, 0x4c87, 0x3304, 0xe054, 0x1, 0x0);
        gbc.writeMem(0x677c, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1e0a, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 025B
        gbc.setState(0xe8a0, 0x51c6, 0x2b30, 0x2c23, 0xe9a, 0x5952, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x51c6, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe8a0));
        // BD 025C
        gbc.setState(0x387d, 0x7f04, 0xb970, 0x253b, 0x9c60, 0x6c1, 0x0, 0x1);
        gbc.writeMem(0x387d, { 0xbd });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0x387e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 025D
        gbc.setState(0xb2d6, 0x8fc7, 0xd280, 0xb8b, 0xcd71, 0x54ee, 0x1, 0x1);
        gbc.writeMem(0xb2d6, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8fc7, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb2d6));
        // BD 025F
        gbc.setState(0xe6f8, 0x1026, 0x5060, 0x150e, 0x4d42, 0x57f2, 0x1, 0x1);
        gbc.writeMem(0xe6f8, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0xe6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe6f8));
        // BD 0260
        gbc.setState(0x86e6, 0xcc94, 0xd380, 0xed, 0x44c0, 0xe91f, 0x1, 0x1);
        gbc.writeMem(0x86e6, { 0xbd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x86e6));
        // BD 0261
        gbc.setState(0x5d5, 0x242a, 0xb1d0, 0xeaf9, 0x1456, 0xa7fa, 0x1, 0x0);
        gbc.writeMem(0x5d5, { 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x242a, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0262
        gbc.setState(0xa05d, 0xfcc, 0x6420, 0xc465, 0xf1d4, 0xda20, 0x0, 0x0);
        gbc.writeMem(0xa05d, { 0xbd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa05d));
        // BD 0263
        gbc.setState(0xc000, 0x4f4d, 0x3560, 0x2af4, 0x1be3, 0x2df, 0x0, 0x1);
        gbc.writeMem(0xc000, { 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4f4d, gbc.sp());
        EXPECT(0xc001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc000));
        // BD 0264
        gbc.setState(0x7d55, 0xa37d, 0xfb20, 0xe23c, 0xf104, 0x7c17, 0x0, 0x1);
        gbc.writeMem(0x7d55, { 0xbd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa37d, gbc.sp());
        EXPECT(0x7d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0265
        gbc.setState(0xa014, 0x16ac, 0xf7e0, 0xeae2, 0x8baf, 0x2120, 0x0, 0x0);
        gbc.writeMem(0xa014, { 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x16ac, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa014));
        // BD 0266
        gbc.setState(0x2ca7, 0xfd89, 0x8190, 0x99b9, 0xc83e, 0xcfa5, 0x1, 0x0);
        gbc.writeMem(0x2ca7, { 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfd89, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0267
        gbc.setState(0x8761, 0x7eff, 0x86a0, 0x3cb8, 0xb96, 0x68ca, 0x0, 0x0);
        gbc.writeMem(0x8761, { 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7eff, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8761));
        // BD 0269
        gbc.setState(0xda21, 0x66ff, 0xefb0, 0x770f, 0x6f42, 0xd4a5, 0x1, 0x0);
        gbc.writeMem(0xda21, { 0xbd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x66ff, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda21));
        // BD 026A
        gbc.setState(0xe1b7, 0x66f3, 0xc010, 0x3094, 0x4cc, 0x4d76, 0x0, 0x1);
        gbc.writeMem(0xe1b7, { 0xbd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x66f3, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe1b7));
        // BD 026C
        gbc.setState(0x5c9c, 0x72c9, 0x7350, 0xc274, 0x1c76, 0x45ef, 0x0, 0x1);
        gbc.writeMem(0x5c9c, { 0xbd });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x72c9, gbc.sp());
        EXPECT(0x5c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 026D
        gbc.setState(0x706e, 0x7fcf, 0xa060, 0xa5f0, 0x586, 0xd632, 0x0, 0x0);
        gbc.writeMem(0x706e, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7fcf, gbc.sp());
        EXPECT(0x706f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 026E
        gbc.setState(0xefe2, 0x510e, 0xa5e0, 0x510d, 0xe510, 0x57fd, 0x1, 0x0);
        gbc.writeMem(0xefe2, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xefe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xefe2));
        // BD 026F
        gbc.setState(0x3980, 0x3814, 0xb590, 0x5c96, 0x5db8, 0x51b6, 0x0, 0x0);
        gbc.writeMem(0x3980, { 0xbd });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3814, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0270
        gbc.setState(0xc3e9, 0x8597, 0xd890, 0xc331, 0xbb96, 0x1bd, 0x0, 0x0);
        gbc.writeMem(0xc3e9, { 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8597, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc3e9));
        // BD 0271
        gbc.setState(0xb94a, 0x91b8, 0x2960, 0xa1d3, 0xf2b4, 0x37ac, 0x1, 0x1);
        gbc.writeMem(0xb94a, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x91b8, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb94a));
        // BD 0272
        gbc.setState(0x4623, 0xb364, 0xb440, 0x1e2e, 0xdbcb, 0xab9e, 0x1, 0x0);
        gbc.writeMem(0x4623, { 0xbd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb364, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0273
        gbc.setState(0xcc40, 0x77ba, 0x28f0, 0x63c1, 0xcb37, 0xa320, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0xcc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcc40));
        // BD 0274
        gbc.setState(0xab09, 0x7b17, 0x5dd0, 0x36d3, 0x808c, 0xa87c, 0x0, 0x0);
        gbc.writeMem(0xab09, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0xab0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab09));
        // BD 0275
        gbc.setState(0x1f74, 0xfa53, 0x4f60, 0xf9d9, 0x995f, 0x3a87, 0x0, 0x1);
        gbc.writeMem(0x1f74, { 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0x1f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0276
        gbc.setState(0xcb25, 0x74b0, 0xe9c0, 0xbae, 0x5ed6, 0x966a, 0x1, 0x0);
        gbc.writeMem(0xcb25, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x74b0, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcb25));
        // BD 0277
        gbc.setState(0xb3c2, 0x8e34, 0x2be0, 0xaec8, 0xbca7, 0x97a8, 0x0, 0x0);
        gbc.writeMem(0xb3c2, { 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0xb3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb3c2));
        // BD 0278
        gbc.setState(0x9abd, 0xab3d, 0xec00, 0xefe3, 0x3a04, 0xda70, 0x0, 0x0);
        gbc.writeMem(0x9abd, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xab3d, gbc.sp());
        EXPECT(0x9abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9abd));
        // BD 0279
        gbc.setState(0xbd24, 0x34bc, 0x6f40, 0xeec, 0x8d5e, 0xf232, 0x0, 0x1);
        gbc.writeMem(0xbd24, { 0xbd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbd24));
        // BD 027A
        gbc.setState(0xe57b, 0x4461, 0x7c80, 0xf908, 0x6a21, 0x5b6b, 0x1, 0x0);
        gbc.writeMem(0xe57b, { 0xbd });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4461, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe57b));
        // BD 027B
        gbc.setState(0x75fe, 0xd3ab, 0xf0b0, 0x1a65, 0x23d1, 0x63ca, 0x1, 0x0);
        gbc.writeMem(0x75fe, { 0xbd });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0x75ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 027C
        gbc.setState(0x301c, 0xc2d7, 0xcd80, 0x75af, 0xeef9, 0xe47d, 0x1, 0x0);
        gbc.writeMem(0x301c, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc2d7, gbc.sp());
        EXPECT(0x301d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 027D
        gbc.setState(0x7d5f, 0xacf7, 0xdf20, 0xc965, 0xb230, 0xd1a2, 0x0, 0x1);
        gbc.writeMem(0x7d5f, { 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 027E
        gbc.setState(0x6df8, 0x1b0c, 0xa570, 0x99f7, 0x16bb, 0x84ff, 0x0, 0x1);
        gbc.writeMem(0x6df8, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b0c, gbc.sp());
        EXPECT(0x6df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 027F
        gbc.setState(0x97ed, 0xc09f, 0x6330, 0xcf4c, 0xf000, 0x6ec0, 0x1, 0x1);
        gbc.writeMem(0x97ed, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc09f, gbc.sp());
        EXPECT(0x97ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x97ed));
        // BD 0280
        gbc.setState(0xd4fc, 0xc54f, 0xb110, 0xe247, 0x7b60, 0x106c, 0x0, 0x0);
        gbc.writeMem(0xd4fc, { 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd4fc));
        // BD 0281
        gbc.setState(0xccb4, 0xb86a, 0x3200, 0xed90, 0xcf3c, 0x8c1a, 0x0, 0x1);
        gbc.writeMem(0xccb4, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xccb4));
        // BD 0282
        gbc.setState(0x8fc9, 0xaed7, 0x4230, 0xdc7a, 0x2714, 0x40e8, 0x0, 0x1);
        gbc.writeMem(0x8fc9, { 0xbd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0x8fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8fc9));
        // BD 0283
        gbc.setState(0x1fe3, 0x8160, 0xa5b0, 0x3b8d, 0x8a, 0x76a7, 0x0, 0x0);
        gbc.writeMem(0x1fe3, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x1fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0284
        gbc.setState(0x3e6c, 0x9d4, 0x6530, 0x501e, 0xe9dc, 0xd21d, 0x1, 0x1);
        gbc.writeMem(0x3e6c, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9d4, gbc.sp());
        EXPECT(0x3e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0285
        gbc.setState(0xe26e, 0x376c, 0xf460, 0x1592, 0x2e30, 0x54cf, 0x1, 0x1);
        gbc.writeMem(0xe26e, { 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0xe26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe26e));
        // BD 0286
        gbc.setState(0xc16, 0x8e28, 0x6550, 0x7ce8, 0x43c0, 0xca36, 0x0, 0x0);
        gbc.writeMem(0xc16, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8e28, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0287
        gbc.setState(0xea7f, 0xef87, 0xc1a0, 0x68de, 0x6287, 0x4911, 0x1, 0x0);
        gbc.writeMem(0xea7f, { 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xea7f));
        // BD 0288
        gbc.setState(0xc555, 0x6429, 0x1250, 0x919d, 0x72e4, 0x6f5, 0x0, 0x1);
        gbc.writeMem(0xc555, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0xc556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc555));
        // BD 0289
        gbc.setState(0x75c8, 0xd1ce, 0x6b70, 0x4b52, 0xc443, 0x3d31, 0x1, 0x0);
        gbc.writeMem(0x75c8, { 0xbd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd1ce, gbc.sp());
        EXPECT(0x75c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 028A
        gbc.setState(0xebe2, 0xfe78, 0x1140, 0x1b66, 0xb5f8, 0x5192, 0x0, 0x0);
        gbc.writeMem(0xebe2, { 0xbd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfe78, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xebe2));
        // BD 028B
        gbc.setState(0xdff6, 0xaa1, 0xcf80, 0x2a42, 0xd443, 0x4895, 0x0, 0x0);
        gbc.writeMem(0xdff6, { 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaa1, gbc.sp());
        EXPECT(0xdff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdff6));
        // BD 028C
        gbc.setState(0x5d3e, 0x6ccd, 0xd4f0, 0x2364, 0xabcf, 0x1a57, 0x0, 0x0);
        gbc.writeMem(0x5d3e, { 0xbd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6ccd, gbc.sp());
        EXPECT(0x5d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 028D
        gbc.setState(0x43aa, 0x103b, 0xca0, 0xcb36, 0x7de8, 0x6af2, 0x0, 0x0);
        gbc.writeMem(0x43aa, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0x43ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 028E
        gbc.setState(0x8d18, 0x7203, 0xd190, 0xbb45, 0xb5e1, 0xedff, 0x0, 0x0);
        gbc.writeMem(0x8d18, { 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7203, gbc.sp());
        EXPECT(0x8d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8d18));
        // BD 028F
        gbc.setState(0x5beb, 0x2caf, 0x6c20, 0xdc28, 0xeeb0, 0x72d7, 0x1, 0x0);
        gbc.writeMem(0x5beb, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2caf, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0290
        gbc.setState(0xecbd, 0xa91f, 0x5320, 0xe5bd, 0xb511, 0xcd08, 0x1, 0x0);
        gbc.writeMem(0xecbd, { 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0xecbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xecbd));
        // BD 0291
        gbc.setState(0xaf7a, 0x4187, 0xcb50, 0xbc2e, 0x7964, 0x9111, 0x0, 0x0);
        gbc.writeMem(0xaf7a, { 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaf7a));
        // BD 0292
        gbc.setState(0xdde, 0x1a90, 0xcfa0, 0x7131, 0xdc4c, 0xa2f1, 0x1, 0x1);
        gbc.writeMem(0xdde, { 0xbd });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0293
        gbc.setState(0x477c, 0x8f9c, 0xb130, 0x3f9d, 0xf8b5, 0x9476, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0xbd });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8f9c, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0294
        gbc.setState(0xa96e, 0x6073, 0x68d0, 0xc3ef, 0x5b41, 0xce1, 0x0, 0x1);
        gbc.writeMem(0xa96e, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6073, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa96e));
        // BD 0295
        gbc.setState(0x7121, 0xd804, 0x6e30, 0xb1b2, 0xf286, 0x562b, 0x1, 0x0);
        gbc.writeMem(0x7121, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd804, gbc.sp());
        EXPECT(0x7122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0296
        gbc.setState(0xa678, 0xe5a4, 0x3130, 0xb245, 0x2188, 0x7bbb, 0x0, 0x0);
        gbc.writeMem(0xa678, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0xa679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa678));
        // BD 0297
        gbc.setState(0x32e5, 0x44f9, 0x4f20, 0xe6fc, 0x23b3, 0xb156, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0xbd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x44f9, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0298
        gbc.setState(0x1da3, 0xbad2, 0xee00, 0xa552, 0xaf93, 0xc94c, 0x0, 0x1);
        gbc.writeMem(0x1da3, { 0xbd });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0299
        gbc.setState(0x284f, 0x8eb3, 0x4590, 0xd8d9, 0x81c9, 0x8ce7, 0x0, 0x1);
        gbc.writeMem(0x284f, { 0xbd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 029A
        gbc.setState(0xc2ef, 0xfa91, 0x7650, 0xddab, 0x2ae8, 0x3129, 0x1, 0x0);
        gbc.writeMem(0xc2ef, { 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfa91, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc2ef));
        // BD 029B
        gbc.setState(0xb6c5, 0x7602, 0x6ed0, 0xaf3f, 0xec4a, 0x7132, 0x0, 0x0);
        gbc.writeMem(0xb6c5, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7602, gbc.sp());
        EXPECT(0xb6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6c5));
        // BD 029C
        gbc.setState(0xa71c, 0xa432, 0x1280, 0x19a3, 0x179a, 0x28ae, 0x0, 0x1);
        gbc.writeMem(0xa71c, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0xa71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa71c));
        // BD 029D
        gbc.setState(0xce8d, 0x717d, 0xae60, 0x7bc, 0x17ee, 0xa978, 0x1, 0x0);
        gbc.writeMem(0xce8d, { 0xbd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xce8d));
        // BD 029E
        gbc.setState(0xa367, 0x991c, 0x7b90, 0x8ae4, 0x404, 0xaec2, 0x0, 0x0);
        gbc.writeMem(0xa367, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa367));
        // BD 029F
        gbc.setState(0xdadb, 0xf409, 0xbe10, 0x6e89, 0xc6d3, 0xe04a, 0x0, 0x1);
        gbc.writeMem(0xdadb, { 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdadb));
        // BD 02A0
        gbc.setState(0x1b0b, 0xd692, 0x51a0, 0x25b6, 0x8862, 0x8a15, 0x0, 0x1);
        gbc.writeMem(0x1b0b, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02A1
        gbc.setState(0xd1a, 0x92ee, 0xdea0, 0x8eba, 0xf6a8, 0xb5f7, 0x0, 0x1);
        gbc.writeMem(0xd1a, { 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x92ee, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02A2
        gbc.setState(0x7be, 0xac32, 0x960, 0xbbc8, 0x6f7d, 0x6ed2, 0x1, 0x0);
        gbc.writeMem(0x7be, { 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02A3
        gbc.setState(0x3ff, 0xd153, 0xa8e0, 0x2211, 0x493c, 0x3d4c, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd153, gbc.sp());
        EXPECT(0x400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02A4
        gbc.setState(0x8c51, 0x8e1c, 0x90b0, 0xb5ab, 0xa1c6, 0xdef8, 0x0, 0x0);
        gbc.writeMem(0x8c51, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8c51));
        // BD 02A5
        gbc.setState(0x35ee, 0x325a, 0xfd80, 0xea86, 0xd2bb, 0xedb0, 0x0, 0x1);
        gbc.writeMem(0x35ee, { 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x325a, gbc.sp());
        EXPECT(0x35ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02A7
        gbc.setState(0x5986, 0xfce0, 0xc940, 0x7643, 0x709c, 0x7e3e, 0x0, 0x1);
        gbc.writeMem(0x5986, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02A8
        gbc.setState(0xd69e, 0x8c57, 0xd640, 0x6bc0, 0x74a8, 0x84a8, 0x0, 0x1);
        gbc.writeMem(0xd69e, { 0xbd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8c57, gbc.sp());
        EXPECT(0xd69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd69e));
        // BD 02A9
        gbc.setState(0x2c68, 0x4baf, 0x89a0, 0xbd1e, 0x794c, 0xd450, 0x1, 0x0);
        gbc.writeMem(0x2c68, { 0xbd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x2c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02AA
        gbc.setState(0xadd0, 0xbb58, 0x63a0, 0xa9e0, 0xa58d, 0x172a, 0x1, 0x1);
        gbc.writeMem(0xadd0, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbb58, gbc.sp());
        EXPECT(0xadd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xadd0));
        // BD 02AB
        gbc.setState(0x2848, 0x8b7b, 0x270, 0xcb9, 0x1be4, 0x9737, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8b7b, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02AC
        gbc.setState(0x4d5a, 0x3c5, 0xea0, 0xd55a, 0x6c69, 0xb045, 0x0, 0x1);
        gbc.writeMem(0x4d5a, { 0xbd });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0x4d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02AD
        gbc.setState(0xc40d, 0x73a3, 0x990, 0xd3e6, 0x8528, 0x2466, 0x1, 0x1);
        gbc.writeMem(0xc40d, { 0xbd });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x73a3, gbc.sp());
        EXPECT(0xc40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc40d));
        // BD 02AE
        gbc.setState(0x10e5, 0x3160, 0x6b0, 0x2433, 0x3c54, 0x6841, 0x0, 0x0);
        gbc.writeMem(0x10e5, { 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3160, gbc.sp());
        EXPECT(0x10e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02AF
        gbc.setState(0x7fce, 0x3c6f, 0x50, 0x2e26, 0xb7a4, 0xf459, 0x0, 0x0);
        gbc.writeMem(0x7fce, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3c6f, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02B0
        gbc.setState(0xd50b, 0xef5, 0x76e0, 0xf76, 0x2cb0, 0x403a, 0x0, 0x0);
        gbc.writeMem(0xd50b, { 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0xd50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd50b));
        // BD 02B1
        gbc.setState(0x42a1, 0x9f84, 0x8ce0, 0x61e, 0x6fba, 0xab58, 0x0, 0x0);
        gbc.writeMem(0x42a1, { 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9f84, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B2
        gbc.setState(0x1bcc, 0x45ec, 0x87e0, 0x5ab3, 0xfaea, 0x1785, 0x1, 0x0);
        gbc.writeMem(0x1bcc, { 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x45ec, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B3
        gbc.setState(0xe28a, 0x9f7e, 0x60c0, 0xfa45, 0x21c4, 0x8535, 0x0, 0x1);
        gbc.writeMem(0xe28a, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9f7e, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe28a));
        // BD 02B4
        gbc.setState(0x7282, 0x8b53, 0xd560, 0xecf9, 0x8855, 0xb976, 0x0, 0x1);
        gbc.writeMem(0x7282, { 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0x7283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B5
        gbc.setState(0x31c7, 0x68a5, 0x7ea0, 0x4665, 0x8ce9, 0x67c1, 0x0, 0x1);
        gbc.writeMem(0x31c7, { 0xbd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x68a5, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02B6
        gbc.setState(0x399b, 0x2aa1, 0x98a0, 0xa48, 0x2ab1, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0x399b, { 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2aa1, gbc.sp());
        EXPECT(0x399c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B7
        gbc.setState(0x52a2, 0x41cf, 0xc100, 0x42a9, 0xec38, 0xbf33, 0x0, 0x1);
        gbc.writeMem(0x52a2, { 0xbd });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x41cf, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B8
        gbc.setState(0x4f7e, 0x40f6, 0xd240, 0x41ed, 0x91b4, 0xcc, 0x0, 0x1);
        gbc.writeMem(0x4f7e, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x40f6, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02B9
        gbc.setState(0x5023, 0x259e, 0x4460, 0x5cf, 0x28fb, 0xba45, 0x1, 0x1);
        gbc.writeMem(0x5023, { 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0x5024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02BA
        gbc.setState(0x6d02, 0x1e00, 0x63d0, 0xae3, 0x5d1f, 0x4224, 0x0, 0x0);
        gbc.writeMem(0x6d02, { 0xbd });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1e00, gbc.sp());
        EXPECT(0x6d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02BB
        gbc.setState(0x63eb, 0x6e58, 0x1510, 0xca07, 0x94eb, 0x1591, 0x0, 0x1);
        gbc.writeMem(0x63eb, { 0xbd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e58, gbc.sp());
        EXPECT(0x63ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02BC
        gbc.setState(0xe0f5, 0x3489, 0x90, 0x223, 0xbf87, 0xe1b5, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3489, gbc.sp());
        EXPECT(0xe0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe0f5));
        // BD 02BD
        gbc.setState(0x532c, 0x43a8, 0x8130, 0x268e, 0x1b09, 0x8fb8, 0x0, 0x1);
        gbc.writeMem(0x532c, { 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02BE
        gbc.setState(0xaac7, 0x6d4e, 0x86e0, 0x6688, 0xd955, 0xc43, 0x1, 0x0);
        gbc.writeMem(0xaac7, { 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0xaac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xaac7));
        // BD 02BF
        gbc.setState(0x1826, 0x4e8c, 0xca40, 0x4fc1, 0x9e25, 0xee6a, 0x1, 0x1);
        gbc.writeMem(0x1826, { 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e8c, gbc.sp());
        EXPECT(0x1827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02C0
        gbc.setState(0x3c62, 0x3cd0, 0x3420, 0x75a6, 0x7de5, 0x498a, 0x1, 0x0);
        gbc.writeMem(0x3c62, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3cd0, gbc.sp());
        EXPECT(0x3c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02C1
        gbc.setState(0xbeb1, 0x3fdf, 0xec70, 0x5465, 0x6c30, 0x87c7, 0x0, 0x0);
        gbc.writeMem(0xbeb1, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3fdf, gbc.sp());
        EXPECT(0xbeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbeb1));
        // BD 02C2
        gbc.setState(0xe7d2, 0x63db, 0x16f0, 0xf92, 0x10d2, 0xc811, 0x1, 0x0);
        gbc.writeMem(0xe7d2, { 0xbd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x63db, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe7d2));
        // BD 02C3
        gbc.setState(0xb6bb, 0xec7d, 0xfe30, 0x5ca5, 0x90c7, 0xd6b4, 0x0, 0x0);
        gbc.writeMem(0xb6bb, { 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xec7d, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6bb));
        // BD 02C4
        gbc.setState(0xa1d1, 0x538, 0xa640, 0x7511, 0xa2d5, 0x9593, 0x1, 0x1);
        gbc.writeMem(0xa1d1, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x538, gbc.sp());
        EXPECT(0xa1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa1d1));
        // BD 02C5
        gbc.setState(0x9d4d, 0xbdfc, 0xf2c0, 0x1829, 0x117c, 0x3ae9, 0x1, 0x1);
        gbc.writeMem(0x9d4d, { 0xbd });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0x9d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9d4d));
        // BD 02C6
        gbc.setState(0x1265, 0xc074, 0x5a60, 0xce85, 0xd568, 0xa5be, 0x0, 0x0);
        gbc.writeMem(0x1265, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0x1266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02C7
        gbc.setState(0x78d4, 0x69db, 0xa1d0, 0x42e4, 0x9b75, 0xf835, 0x1, 0x0);
        gbc.writeMem(0x78d4, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x69db, gbc.sp());
        EXPECT(0x78d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02C8
        gbc.setState(0xb8f2, 0x4c03, 0x180, 0x1eb3, 0x148e, 0x7034, 0x1, 0x0);
        gbc.writeMem(0xb8f2, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4c03, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb8f2));
        // BD 02C9
        gbc.setState(0x590e, 0x2233, 0x26d0, 0xc4ea, 0x3afc, 0xa233, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0x590f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02CA
        gbc.setState(0x47c2, 0x5adc, 0x2aa0, 0xf8e8, 0x45fa, 0xa23e, 0x1, 0x1);
        gbc.writeMem(0x47c2, { 0xbd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0x47c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02CB
        gbc.setState(0xd9b8, 0x6113, 0x4d90, 0x3e8b, 0x375e, 0xbbda, 0x1, 0x1);
        gbc.writeMem(0xd9b8, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6113, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd9b8));
        // BD 02CC
        gbc.setState(0x1d1a, 0x4604, 0x7a50, 0x5c0d, 0x86fc, 0xe810, 0x0, 0x1);
        gbc.writeMem(0x1d1a, { 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4604, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02CD
        gbc.setState(0x88c4, 0x765e, 0x2470, 0x7836, 0x3857, 0xcce8, 0x1, 0x1);
        gbc.writeMem(0x88c4, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0x88c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x88c4));
        // BD 02CE
        gbc.setState(0xbed1, 0xe70b, 0xdf20, 0xfd3c, 0x3e2d, 0x8e17, 0x0, 0x1);
        gbc.writeMem(0xbed1, { 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe70b, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbed1));
        // BD 02CF
        gbc.setState(0x4bce, 0xeffe, 0x3660, 0x70fb, 0xb419, 0xe3c, 0x1, 0x0);
        gbc.writeMem(0x4bce, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeffe, gbc.sp());
        EXPECT(0x4bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02D0
        gbc.setState(0xadfe, 0xbc4f, 0x9400, 0xa5a2, 0xe99a, 0x68f6, 0x1, 0x0);
        gbc.writeMem(0xadfe, { 0xbd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0xadff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xadfe));
        // BD 02D1
        gbc.setState(0x386f, 0x9ea, 0x71a0, 0xcaec, 0x41c0, 0x4f11, 0x1, 0x1);
        gbc.writeMem(0x386f, { 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0x3870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02D2
        gbc.setState(0x5344, 0x6c48, 0x2c80, 0xa207, 0x50d7, 0x4b18, 0x0, 0x1);
        gbc.writeMem(0x5344, { 0xbd });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c48, gbc.sp());
        EXPECT(0x5345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02D3
        gbc.setState(0xb90d, 0x1f04, 0x41a0, 0x800, 0xe2d4, 0x4969, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb90d));
        // BD 02D4
        gbc.setState(0x8350, 0x3f14, 0xbe70, 0xa01b, 0x4364, 0x6a76, 0x1, 0x1);
        gbc.writeMem(0x8350, { 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3f14, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8350));
        // BD 02D5
        gbc.setState(0x5fb0, 0xd19b, 0x6960, 0x1c9c, 0x8af9, 0xa067, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0x5fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02D6
        gbc.setState(0x8844, 0xae73, 0xb820, 0x2cac, 0x7320, 0x4dc7, 0x1, 0x1);
        gbc.writeMem(0x8844, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xae73, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8844));
        // BD 02D7
        gbc.setState(0xda40, 0xf888, 0xbf50, 0x31a3, 0xc296, 0x4d9f, 0x1, 0x0);
        gbc.writeMem(0xda40, { 0xbd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xda40));
        // BD 02D8
        gbc.setState(0x86d8, 0xa603, 0x32d0, 0x1724, 0x9297, 0xb90c, 0x0, 0x1);
        gbc.writeMem(0x86d8, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa603, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x86d8));
        // BD 02D9
        gbc.setState(0x4d3a, 0x9823, 0x5790, 0x9f2b, 0x570c, 0xb5f5, 0x0, 0x0);
        gbc.writeMem(0x4d3a, { 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02DA
        gbc.setState(0x72c1, 0x47c2, 0xa520, 0x5afe, 0x175, 0x1b57, 0x0, 0x1);
        gbc.writeMem(0x72c1, { 0xbd });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0x72c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02DB
        gbc.setState(0x794c, 0xc889, 0x49b0, 0xfbc9, 0xea8a, 0x162e, 0x0, 0x0);
        gbc.writeMem(0x794c, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc889, gbc.sp());
        EXPECT(0x794d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02DC
        gbc.setState(0x2512, 0xf05f, 0x3350, 0x327d, 0x4a70, 0xc053, 0x1, 0x0);
        gbc.writeMem(0x2512, { 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0x2513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02DE
        gbc.setState(0xe237, 0xf1d9, 0x86d0, 0x4185, 0xdfd2, 0xa406, 0x0, 0x1);
        gbc.writeMem(0xe237, { 0xbd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf1d9, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe237));
        // BD 02E0
        gbc.setState(0x7cc8, 0xe60a, 0x9880, 0x7119, 0x1210, 0xc937, 0x1, 0x0);
        gbc.writeMem(0x7cc8, { 0xbd });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0x7cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02E1
        gbc.setState(0xab6a, 0x200c, 0x32a0, 0xeaa6, 0x7ee6, 0xf5f0, 0x0, 0x0);
        gbc.writeMem(0xab6a, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x200c, gbc.sp());
        EXPECT(0xab6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab6a));
        // BD 02E2
        gbc.setState(0xa4f7, 0xac37, 0xa030, 0xe7a0, 0x7d48, 0xa592, 0x0, 0x1);
        gbc.writeMem(0xa4f7, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa4f7));
        // BD 02E3
        gbc.setState(0xb5fb, 0xba68, 0x36a0, 0xb7f7, 0x3d7e, 0xf888, 0x1, 0x1);
        gbc.writeMem(0xb5fb, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb5fb));
        // BD 02E4
        gbc.setState(0x93a8, 0xe4a1, 0xb0, 0x4ecc, 0xba92, 0xe4a8, 0x0, 0x1);
        gbc.writeMem(0x93a8, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe4a1, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x93a8));
        // BD 02E5
        gbc.setState(0x6798, 0xfe2d, 0x7fb0, 0xccb5, 0x20c7, 0x7bbd, 0x0, 0x1);
        gbc.writeMem(0x6798, { 0xbd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0x6799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02E6
        gbc.setState(0x2c39, 0x3648, 0x8c40, 0x5f97, 0xe11b, 0xa83e, 0x0, 0x1);
        gbc.writeMem(0x2c39, { 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3648, gbc.sp());
        EXPECT(0x2c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02E7
        gbc.setState(0xe79b, 0xdfe2, 0x9cd0, 0xd8e8, 0x60bd, 0x71ce, 0x0, 0x1);
        gbc.writeMem(0xe79b, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdfe2, gbc.sp());
        EXPECT(0xe79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe79b));
        // BD 02E8
        gbc.setState(0x88e5, 0xb314, 0x2330, 0x4b38, 0x7ad3, 0x1f87, 0x0, 0x1);
        gbc.writeMem(0x88e5, { 0xbd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb314, gbc.sp());
        EXPECT(0x88e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x88e5));
        // BD 02E9
        gbc.setState(0x360c, 0xd698, 0x8df0, 0x6663, 0x3f0f, 0x1f22, 0x1, 0x1);
        gbc.writeMem(0x360c, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02EA
        gbc.setState(0xc911, 0x7ef2, 0x4270, 0x9e96, 0x19ef, 0x92e7, 0x0, 0x0);
        gbc.writeMem(0xc911, { 0xbd });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7ef2, gbc.sp());
        EXPECT(0xc912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc911));
        // BD 02EB
        gbc.setState(0xa98e, 0xba51, 0x5880, 0x87e2, 0xe8c3, 0xa763, 0x0, 0x1);
        gbc.writeMem(0xa98e, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xba51, gbc.sp());
        EXPECT(0xa98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa98e));
        // BD 02EC
        gbc.setState(0x2eda, 0x2bec, 0x2b90, 0xd2b5, 0x5e7b, 0xd465, 0x1, 0x0);
        gbc.writeMem(0x2eda, { 0xbd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0x2edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02EE
        gbc.setState(0x2784, 0x345, 0x24e0, 0xc381, 0x19bf, 0xe26d, 0x1, 0x1);
        gbc.writeMem(0x2784, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02EF
        gbc.setState(0x848c, 0x2b89, 0x7420, 0x58a, 0xe91, 0x6f89, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0x848d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x848c));
        // BD 02F0
        gbc.setState(0x598f, 0xc702, 0xcac0, 0x8129, 0x23bc, 0xf57e, 0x1, 0x0);
        gbc.writeMem(0x598f, { 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0x5990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02F1
        gbc.setState(0x3139, 0xa25, 0x6e80, 0x9ef2, 0xba7c, 0xd163, 0x0, 0x0);
        gbc.writeMem(0x3139, { 0xbd });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x313a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02F2
        gbc.setState(0x1739, 0xfd01, 0x4eb0, 0xae2d, 0x4b02, 0x6742, 0x0, 0x0);
        gbc.writeMem(0x1739, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfd01, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02F3
        gbc.setState(0xdf5a, 0x672d, 0x5060, 0xa972, 0xdf93, 0xff7a, 0x0, 0x0);
        gbc.writeMem(0xdf5a, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x672d, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdf5a));
        // BD 02F4
        gbc.setState(0x26d9, 0xad60, 0x4150, 0x30ed, 0xf93b, 0x8381, 0x0, 0x0);
        gbc.writeMem(0x26d9, { 0xbd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xad60, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02F5
        gbc.setState(0x1a0f, 0x9d4e, 0xcdc0, 0xd006, 0x836a, 0x4f14, 0x1, 0x0);
        gbc.writeMem(0x1a0f, { 0xbd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9d4e, gbc.sp());
        EXPECT(0x1a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02F6
        gbc.setState(0xa8f1, 0x1477, 0xd970, 0xb82e, 0xf211, 0xafb0, 0x1, 0x1);
        gbc.writeMem(0xa8f1, { 0xbd });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa8f1));
        // BD 02F7
        gbc.setState(0x7796, 0xbd49, 0xd190, 0x77f5, 0x4755, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0x7796, { 0xbd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0x7797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 02F8
        gbc.setState(0xe5d6, 0xfe8a, 0x3250, 0xf77a, 0x5fb9, 0xf77, 0x0, 0x0);
        gbc.writeMem(0xe5d6, { 0xbd });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfe8a, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe5d6));
        // BD 02F9
        gbc.setState(0xe15f, 0xbebc, 0x9e80, 0x4a1d, 0xbc14, 0x24a7, 0x0, 0x0);
        gbc.writeMem(0xe15f, { 0xbd });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbebc, gbc.sp());
        EXPECT(0xe160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe15f));
        // BD 02FA
        gbc.setState(0xd07f, 0x49f7, 0xf910, 0xd83f, 0x6604, 0x5afe, 0x0, 0x1);
        gbc.writeMem(0xd07f, { 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x49f7, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd07f));
        // BD 02FB
        gbc.setState(0x4499, 0xe454, 0x6c20, 0xc716, 0x6c87, 0x54a6, 0x1, 0x1);
        gbc.writeMem(0x4499, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe454, gbc.sp());
        EXPECT(0x449a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 02FC
        gbc.setState(0x8095, 0xd10a, 0x110, 0xfca4, 0xcb5b, 0xbc8c, 0x1, 0x0);
        gbc.writeMem(0x8095, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd10a, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8095));
        // BD 02FD
        gbc.setState(0x9e59, 0x719, 0xc30, 0x9265, 0xb243, 0xc55a, 0x0, 0x1);
        gbc.writeMem(0x9e59, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x9e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9e59));
        // BD 02FE
        gbc.setState(0xba9e, 0x2334, 0x99c0, 0x1da5, 0x7e5b, 0xad91, 0x1, 0x0);
        gbc.writeMem(0xba9e, { 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0xba9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xba9e));
        // BD 02FF
        gbc.setState(0xa772, 0x757f, 0x5d60, 0x1aad, 0x9ed2, 0x5d47, 0x1, 0x0);
        gbc.writeMem(0xa772, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa772));
        // BD 0300
        gbc.setState(0x69c1, 0xd951, 0xa170, 0x6263, 0x3e, 0xd798, 0x1, 0x0);
        gbc.writeMem(0x69c1, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd951, gbc.sp());
        EXPECT(0x69c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0301
        gbc.setState(0x62eb, 0x3a47, 0x31f0, 0xe5fa, 0xc642, 0x20a0, 0x0, 0x0);
        gbc.writeMem(0x62eb, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3a47, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0302
        gbc.setState(0x4f3, 0x851e, 0x24b0, 0x4a00, 0x877e, 0x371, 0x0, 0x0);
        gbc.writeMem(0x4f3, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0303
        gbc.setState(0x2fcf, 0xd902, 0x9db0, 0x2ea9, 0xbddf, 0xbedd, 0x0, 0x0);
        gbc.writeMem(0x2fcf, { 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd902, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0305
        gbc.setState(0x348f, 0x2f59, 0x60d0, 0x6c99, 0xd03f, 0x1ba3, 0x0, 0x1);
        gbc.writeMem(0x348f, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2f59, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0306
        gbc.setState(0x8707, 0xf614, 0x5cf0, 0xc62, 0x5881, 0x3b65, 0x1, 0x1);
        gbc.writeMem(0x8707, { 0xbd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8707));
        // BD 0307
        gbc.setState(0x17bd, 0x683c, 0xbed0, 0x929c, 0xf9ec, 0x5335, 0x1, 0x1);
        gbc.writeMem(0x17bd, { 0xbd });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0308
        gbc.setState(0x769e, 0x4545, 0x4780, 0xee11, 0xec06, 0x4a2b, 0x1, 0x1);
        gbc.writeMem(0x769e, { 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4545, gbc.sp());
        EXPECT(0x769f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0309
        gbc.setState(0x5978, 0xbd22, 0x2b0, 0x2e48, 0x8a09, 0x968f, 0x1, 0x1);
        gbc.writeMem(0x5978, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbd22, gbc.sp());
        EXPECT(0x5979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 030A
        gbc.setState(0xab8b, 0x43b9, 0xea00, 0xdcd4, 0x3c60, 0xeea2, 0x1, 0x1);
        gbc.writeMem(0xab8b, { 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab8b));
        // BD 030B
        gbc.setState(0x6dbd, 0xe557, 0xe640, 0x5e41, 0x8495, 0x651b, 0x0, 0x0);
        gbc.writeMem(0x6dbd, { 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 030C
        gbc.setState(0xa0e, 0x9563, 0x8410, 0x36fc, 0x1994, 0xded9, 0x1, 0x1);
        gbc.writeMem(0xa0e, { 0xbd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 030D
        gbc.setState(0x5d27, 0x6ed5, 0xe840, 0x2872, 0x88f7, 0xb314, 0x0, 0x1);
        gbc.writeMem(0x5d27, { 0xbd });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6ed5, gbc.sp());
        EXPECT(0x5d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 030E
        gbc.setState(0x9ccc, 0xc869, 0x3400, 0x828, 0x68a2, 0x96b7, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ccc));
        // BD 030F
        gbc.setState(0x15f6, 0xf176, 0x2870, 0xf688, 0xad1c, 0xac44, 0x0, 0x1);
        gbc.writeMem(0x15f6, { 0xbd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0x15f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0310
        gbc.setState(0x78ea, 0x523b, 0x1ef0, 0xb7c, 0xa6a5, 0xad3b, 0x1, 0x1);
        gbc.writeMem(0x78ea, { 0xbd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x523b, gbc.sp());
        EXPECT(0x78eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0311
        gbc.setState(0x26eb, 0xa26e, 0x81c0, 0x2957, 0xce28, 0x9e1d, 0x0, 0x1);
        gbc.writeMem(0x26eb, { 0xbd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa26e, gbc.sp());
        EXPECT(0x26ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0312
        gbc.setState(0x13e4, 0x1a47, 0x51d0, 0xf7ef, 0xd328, 0x8d15, 0x1, 0x0);
        gbc.writeMem(0x13e4, { 0xbd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a47, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0313
        gbc.setState(0x5fa6, 0xee23, 0x82a0, 0x59d6, 0x172, 0x1aff, 0x0, 0x0);
        gbc.writeMem(0x5fa6, { 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0x5fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0314
        gbc.setState(0xb4b8, 0x7d5c, 0x58a0, 0x64dc, 0x6d09, 0x685e, 0x1, 0x0);
        gbc.writeMem(0xb4b8, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb4b8));
        // BD 0315
        gbc.setState(0x4d68, 0x6c21, 0x6cc0, 0xc413, 0xcf27, 0x41ae, 0x1, 0x1);
        gbc.writeMem(0x4d68, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x4d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0316
        gbc.setState(0x4256, 0xa89d, 0x7180, 0xcf52, 0xb1be, 0x903f, 0x0, 0x1);
        gbc.writeMem(0x4256, { 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x4257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0317
        gbc.setState(0xb24e, 0x889, 0x430, 0xff06, 0x2a7a, 0x79e7, 0x0, 0x1);
        gbc.writeMem(0xb24e, { 0xbd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x889, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb24e));
        // BD 0318
        gbc.setState(0x6c49, 0x4ddd, 0x4b10, 0xeee8, 0xd5ab, 0x2d08, 0x1, 0x1);
        gbc.writeMem(0x6c49, { 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ddd, gbc.sp());
        EXPECT(0x6c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0319
        gbc.setState(0x972, 0x46be, 0x1460, 0x6fcd, 0x353e, 0xe36a, 0x0, 0x1);
        gbc.writeMem(0x972, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 031A
        gbc.setState(0xca31, 0xbe44, 0x6800, 0xb910, 0x962c, 0xea68, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xca31));
        // BD 031B
        gbc.setState(0x64ff, 0xe7ef, 0x4d70, 0x56c, 0x157a, 0x6eae, 0x1, 0x0);
        gbc.writeMem(0x64ff, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 031D
        gbc.setState(0x7634, 0x6833, 0xc470, 0xcaf1, 0x1b89, 0x4da9, 0x0, 0x1);
        gbc.writeMem(0x7634, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 031E
        gbc.setState(0x3ab5, 0x5318, 0xa00, 0x67a8, 0x64fb, 0x37fd, 0x0, 0x0);
        gbc.writeMem(0x3ab5, { 0xbd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0x3ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 031F
        gbc.setState(0x7036, 0x5763, 0x7030, 0x38e2, 0x591a, 0x1d1e, 0x0, 0x0);
        gbc.writeMem(0x7036, { 0xbd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0x7037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0320
        gbc.setState(0x5fc1, 0x39d0, 0x1210, 0x140a, 0xfb20, 0x7da8, 0x0, 0x1);
        gbc.writeMem(0x5fc1, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0321
        gbc.setState(0x817b, 0x2e56, 0x5040, 0x8366, 0x86e3, 0x79f7, 0x0, 0x1);
        gbc.writeMem(0x817b, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2e56, gbc.sp());
        EXPECT(0x817c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x817b));
        // BD 0322
        gbc.setState(0x839c, 0xb101, 0x40, 0x787e, 0xb8f3, 0x7fe5, 0x0, 0x1);
        gbc.writeMem(0x839c, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x839c));
        // BD 0323
        gbc.setState(0xc942, 0x7ed1, 0xf70, 0x270b, 0xd37f, 0xd02f, 0x0, 0x1);
        gbc.writeMem(0xc942, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7ed1, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc942));
        // BD 0324
        gbc.setState(0xca5, 0xab09, 0x9d50, 0xc072, 0x8a7d, 0x2a13, 0x0, 0x1);
        gbc.writeMem(0xca5, { 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab09, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0326
        gbc.setState(0x21ff, 0xc15f, 0x2070, 0x377e, 0xa4ae, 0x7385, 0x0, 0x0);
        gbc.writeMem(0x21ff, { 0xbd });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0x2200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0327
        gbc.setState(0x6b0c, 0x72bc, 0x4830, 0x5654, 0xa5fd, 0x5764, 0x0, 0x0);
        gbc.writeMem(0x6b0c, { 0xbd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x72bc, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0328
        gbc.setState(0x79ae, 0x1b8d, 0x5bf0, 0x287e, 0xc8aa, 0xdab0, 0x0, 0x0);
        gbc.writeMem(0x79ae, { 0xbd });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0329
        gbc.setState(0x30d6, 0xb4d5, 0x6950, 0x9b2b, 0x79b3, 0x8721, 0x1, 0x1);
        gbc.writeMem(0x30d6, { 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb4d5, gbc.sp());
        EXPECT(0x30d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 032A
        gbc.setState(0xc9ee, 0x294, 0xeb50, 0xe6ec, 0x19e7, 0x9652, 0x0, 0x0);
        gbc.writeMem(0xc9ee, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x294, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc9ee));
        // BD 032B
        gbc.setState(0x5b16, 0x7daf, 0x600, 0x188f, 0x3f10, 0xac97, 0x1, 0x1);
        gbc.writeMem(0x5b16, { 0xbd });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7daf, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 032C
        gbc.setState(0xbffe, 0x5e61, 0xb80, 0xed79, 0x9d74, 0x6802, 0x1, 0x0);
        gbc.writeMem(0xbffe, { 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5e61, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbffe));
        // BD 032D
        gbc.setState(0x6af0, 0xcf85, 0xdca0, 0x37bd, 0xe633, 0xc133, 0x1, 0x0);
        gbc.writeMem(0x6af0, { 0xbd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcf85, gbc.sp());
        EXPECT(0x6af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 032E
        gbc.setState(0x9a5, 0xe8c4, 0x6710, 0x54d4, 0x34f9, 0xa1ca, 0x1, 0x1);
        gbc.writeMem(0x9a5, { 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe8c4, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 032F
        gbc.setState(0x7f66, 0xd80a, 0x2440, 0x2d57, 0x3de0, 0xbfbc, 0x0, 0x1);
        gbc.writeMem(0x7f66, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd80a, gbc.sp());
        EXPECT(0x7f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0330
        gbc.setState(0x2621, 0xd59d, 0x3ba0, 0x8786, 0x65a9, 0xdc7e, 0x1, 0x1);
        gbc.writeMem(0x2621, { 0xbd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0x2622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0331
        gbc.setState(0x7492, 0x4fb4, 0x6870, 0xfa8a, 0x6834, 0xcf2c, 0x1, 0x1);
        gbc.writeMem(0x7492, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4fb4, gbc.sp());
        EXPECT(0x7493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0332
        gbc.setState(0x5be, 0xbfc0, 0x5a10, 0x7043, 0xea24, 0x5096, 0x1, 0x0);
        gbc.writeMem(0x5be, { 0xbd });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbfc0, gbc.sp());
        EXPECT(0x5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0333
        gbc.setState(0x66a2, 0xe766, 0xa0c0, 0x7808, 0x333b, 0x16a9, 0x1, 0x0);
        gbc.writeMem(0x66a2, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe766, gbc.sp());
        EXPECT(0x66a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0334
        gbc.setState(0xa5f9, 0xedac, 0xea40, 0x157a, 0x7cbf, 0x86bc, 0x1, 0x1);
        gbc.writeMem(0xa5f9, { 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0xa5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa5f9));
        // BD 0335
        gbc.setState(0x36cf, 0x99b0, 0x4740, 0x6fd4, 0xccbd, 0xe717, 0x0, 0x0);
        gbc.writeMem(0x36cf, { 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0x36d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0336
        gbc.setState(0x7d8f, 0xa27d, 0xa020, 0xa4, 0xb541, 0xbca9, 0x0, 0x0);
        gbc.writeMem(0x7d8f, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa27d, gbc.sp());
        EXPECT(0x7d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0337
        gbc.setState(0x6519, 0x116b, 0x8a0, 0x670d, 0x41f2, 0x19b6, 0x1, 0x0);
        gbc.writeMem(0x6519, { 0xbd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x116b, gbc.sp());
        EXPECT(0x651a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0338
        gbc.setState(0x65b5, 0x6e03, 0xe970, 0xa246, 0x9ad1, 0x3dc9, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6e03, gbc.sp());
        EXPECT(0x65b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0339
        gbc.setState(0xc004, 0x12b4, 0xa720, 0xc191, 0xf136, 0xb1f4, 0x0, 0x0);
        gbc.writeMem(0xc004, { 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x12b4, gbc.sp());
        EXPECT(0xc005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc004));
        // BD 033A
        gbc.setState(0x370, 0x62ac, 0x14d0, 0xeb64, 0xa7a8, 0x6c3c, 0x1, 0x0);
        gbc.writeMem(0x370, { 0xbd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0x371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 033C
        gbc.setState(0xc16c, 0x6dbe, 0x6d70, 0xeeac, 0x300, 0x7d37, 0x1, 0x0);
        gbc.writeMem(0xc16c, { 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6dbe, gbc.sp());
        EXPECT(0xc16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc16c));
        // BD 033D
        gbc.setState(0x37c8, 0x162c, 0x65f0, 0x113e, 0x99a7, 0xfe03, 0x1, 0x1);
        gbc.writeMem(0x37c8, { 0xbd });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x162c, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 033E
        gbc.setState(0xb34b, 0x1b61, 0x6db0, 0x8b7a, 0xb80b, 0x7f8e, 0x0, 0x0);
        gbc.writeMem(0xb34b, { 0xbd });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb34b));
        // BD 033F
        gbc.setState(0x7d76, 0xb3d1, 0xd8f0, 0xb1c2, 0xd241, 0xa6ba, 0x0, 0x0);
        gbc.writeMem(0x7d76, { 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0340
        gbc.setState(0xb6d4, 0x96f2, 0x57a0, 0x10a2, 0x3401, 0x2a5b, 0x0, 0x0);
        gbc.writeMem(0xb6d4, { 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0xb6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6d4));
        // BD 0341
        gbc.setState(0xc599, 0xf95, 0xb890, 0xb61f, 0x96e1, 0x32d3, 0x0, 0x1);
        gbc.writeMem(0xc599, { 0xbd });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf95, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc599));
        // BD 0342
        gbc.setState(0xdb76, 0x32cc, 0x1a90, 0xce2c, 0xb9df, 0xd0c9, 0x0, 0x0);
        gbc.writeMem(0xdb76, { 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0xdb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdb76));
        // BD 0343
        gbc.setState(0x5e7d, 0xd52, 0xdb70, 0xb13b, 0xbe8f, 0x6ebe, 0x0, 0x0);
        gbc.writeMem(0x5e7d, { 0xbd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0344
        gbc.setState(0x7508, 0x3d70, 0x39d0, 0x80bc, 0x7eda, 0xc205, 0x0, 0x1);
        gbc.writeMem(0x7508, { 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0x7509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0345
        gbc.setState(0x4492, 0xa85, 0x6860, 0xbb69, 0xc8fb, 0xcbf, 0x1, 0x1);
        gbc.writeMem(0x4492, { 0xbd });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa85, gbc.sp());
        EXPECT(0x4493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0346
        gbc.setState(0x68, 0x358e, 0x3480, 0xf01b, 0x653, 0x639e, 0x0, 0x0);
        gbc.writeMem(0x68, { 0xbd });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x358e, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0347
        gbc.setState(0xe90, 0x2831, 0x4b30, 0xf9a1, 0xe9a, 0x5847, 0x1, 0x1);
        gbc.writeMem(0xe90, { 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0348
        gbc.setState(0x4da4, 0x9e56, 0x36f0, 0x4290, 0xe798, 0x34a9, 0x0, 0x1);
        gbc.writeMem(0x4da4, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9e56, gbc.sp());
        EXPECT(0x4da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0349
        gbc.setState(0x4dc3, 0x9026, 0x8330, 0x341e, 0x23ac, 0x2163, 0x1, 0x0);
        gbc.writeMem(0x4dc3, { 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9026, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 034A
        gbc.setState(0x196d, 0xd67c, 0x7b30, 0xd99f, 0x71ae, 0xa0f2, 0x1, 0x0);
        gbc.writeMem(0x196d, { 0xbd });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x196e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 034B
        gbc.setState(0xb88, 0x795b, 0xf740, 0x62c5, 0x866c, 0xb0bb, 0x1, 0x1);
        gbc.writeMem(0xb88, { 0xbd });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x795b, gbc.sp());
        EXPECT(0xb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 034C
        gbc.setState(0x3269, 0x9300, 0xeae0, 0x47d5, 0xe3aa, 0x37ce, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0x326a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 034D
        gbc.setState(0x85fd, 0x3314, 0xf390, 0x5d8e, 0xb916, 0xe533, 0x0, 0x0);
        gbc.writeMem(0x85fd, { 0xbd });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x85fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x85fd));
        // BD 034E
        gbc.setState(0xac5d, 0x8d7d, 0x9000, 0x328, 0x87a8, 0x4788, 0x1, 0x0);
        gbc.writeMem(0xac5d, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8d7d, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xac5d));
        // BD 034F
        gbc.setState(0x1462, 0x8da, 0x8750, 0x531, 0xa6b8, 0x70cb, 0x0, 0x1);
        gbc.writeMem(0x1462, { 0xbd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0x1463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0350
        gbc.setState(0xb6ee, 0xcbc6, 0xd20, 0x6735, 0x8825, 0x9150, 0x0, 0x0);
        gbc.writeMem(0xb6ee, { 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcbc6, gbc.sp());
        EXPECT(0xb6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb6ee));
        // BD 0351
        gbc.setState(0x82a0, 0xe7a6, 0xa1d0, 0xb41c, 0x4758, 0xe4d, 0x1, 0x0);
        gbc.writeMem(0x82a0, { 0xbd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe7a6, gbc.sp());
        EXPECT(0x82a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x82a0));
        // BD 0352
        gbc.setState(0x4174, 0x825b, 0xf590, 0x19e5, 0xc03b, 0x10c2, 0x0, 0x0);
        gbc.writeMem(0x4174, { 0xbd });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0353
        gbc.setState(0x3c4d, 0x3800, 0x5da0, 0xc199, 0xae0d, 0x9394, 0x1, 0x0);
        gbc.writeMem(0x3c4d, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3800, gbc.sp());
        EXPECT(0x3c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0354
        gbc.setState(0xc42f, 0x9ebf, 0x3540, 0xf9c8, 0xacda, 0x1a1c, 0x1, 0x1);
        gbc.writeMem(0xc42f, { 0xbd });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc42f));
        // BD 0355
        gbc.setState(0xe350, 0xcc51, 0xff70, 0x1b11, 0x2af3, 0x113d, 0x0, 0x1);
        gbc.writeMem(0xe350, { 0xbd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc51, gbc.sp());
        EXPECT(0xe351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe350));
        // BD 0356
        gbc.setState(0xd121, 0x1bed, 0xfa70, 0x79ac, 0xdf9f, 0x52cd, 0x0, 0x0);
        gbc.writeMem(0xd121, { 0xbd });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1bed, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd121));
        // BD 0357
        gbc.setState(0x2fdd, 0xb3fc, 0x90d0, 0x3dc8, 0x18a1, 0x56ac, 0x0, 0x0);
        gbc.writeMem(0x2fdd, { 0xbd });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0358
        gbc.setState(0x95a8, 0xa226, 0xd580, 0x6423, 0xe595, 0xc4cf, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0xbd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa226, gbc.sp());
        EXPECT(0x95a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x95a8));
        // BD 0359
        gbc.setState(0x8667, 0xd561, 0x2620, 0x8e8f, 0x4ce8, 0x3ee6, 0x0, 0x1);
        gbc.writeMem(0x8667, { 0xbd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd561, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8667));
        // BD 035A
        gbc.setState(0x4c62, 0xc829, 0x4300, 0xa732, 0x72fc, 0xae10, 0x0, 0x0);
        gbc.writeMem(0x4c62, { 0xbd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc829, gbc.sp());
        EXPECT(0x4c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 035B
        gbc.setState(0xa3d4, 0x5ac9, 0x9160, 0x75f3, 0xce91, 0x3079, 0x0, 0x1);
        gbc.writeMem(0xa3d4, { 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0xa3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa3d4));
        // BD 035C
        gbc.setState(0x440c, 0x3aff, 0xea10, 0xe38a, 0x3d65, 0xa580, 0x1, 0x0);
        gbc.writeMem(0x440c, { 0xbd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3aff, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 035E
        gbc.setState(0xe3cf, 0x16ed, 0x1f70, 0x6ca6, 0xed03, 0xf043, 0x0, 0x0);
        gbc.writeMem(0xe3cf, { 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe3cf));
        // BD 035F
        gbc.setState(0x699e, 0x4864, 0x1220, 0x8d02, 0x43cf, 0x626b, 0x0, 0x1);
        gbc.writeMem(0x699e, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4864, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0360
        gbc.setState(0x318c, 0x7986, 0x4760, 0x21fb, 0x3a, 0xbb4c, 0x0, 0x0);
        gbc.writeMem(0x318c, { 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x318d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0361
        gbc.setState(0x5660, 0x41b4, 0x10f0, 0x73, 0x4cb6, 0xadcf, 0x1, 0x0);
        gbc.writeMem(0x5660, { 0xbd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x41b4, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0362
        gbc.setState(0xcdea, 0xb6bc, 0x2ec0, 0xd57, 0xfe7a, 0xfd1e, 0x1, 0x1);
        gbc.writeMem(0xcdea, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb6bc, gbc.sp());
        EXPECT(0xcdeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcdea));
        // BD 0363
        gbc.setState(0x1369, 0x552a, 0x8580, 0x2ea3, 0xab5d, 0x1879, 0x0, 0x1);
        gbc.writeMem(0x1369, { 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x552a, gbc.sp());
        EXPECT(0x136a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0364
        gbc.setState(0xbcda, 0x1d2d, 0x2e90, 0x159c, 0xd254, 0xdc16, 0x0, 0x1);
        gbc.writeMem(0xbcda, { 0xbd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1d2d, gbc.sp());
        EXPECT(0xbcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbcda));
        // BD 0365
        gbc.setState(0xa73, 0x7ccb, 0xced0, 0x57f, 0x506, 0xbf03, 0x1, 0x1);
        gbc.writeMem(0xa73, { 0xbd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7ccb, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0366
        gbc.setState(0x672a, 0xfa8c, 0xbe0, 0x8795, 0xe89a, 0xc12c, 0x0, 0x0);
        gbc.writeMem(0x672a, { 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfa8c, gbc.sp());
        EXPECT(0x672b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0367
        gbc.setState(0x222a, 0xa5b4, 0xb40, 0xac17, 0x750a, 0xcf4a, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0xbd });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa5b4, gbc.sp());
        EXPECT(0x222b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0368
        gbc.setState(0x22a3, 0x76b5, 0x8510, 0x5819, 0x32b3, 0xfded, 0x1, 0x1);
        gbc.writeMem(0x22a3, { 0xbd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x76b5, gbc.sp());
        EXPECT(0x22a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0369
        gbc.setState(0xc88c, 0x8dd1, 0x4ce0, 0x68b0, 0xe62e, 0x5789, 0x0, 0x0);
        gbc.writeMem(0xc88c, { 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0xc88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc88c));
        // BD 036A
        gbc.setState(0xe48d, 0xedf5, 0xbdb0, 0xed87, 0x574a, 0x5a12, 0x0, 0x1);
        gbc.writeMem(0xe48d, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe48d));
        // BD 036B
        gbc.setState(0x2254, 0x4be4, 0xe980, 0x63e7, 0x1e83, 0xe436, 0x1, 0x1);
        gbc.writeMem(0x2254, { 0xbd });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 036C
        gbc.setState(0xa771, 0x3299, 0x1ad0, 0xa576, 0x36c4, 0x5c3b, 0x1, 0x1);
        gbc.writeMem(0xa771, { 0xbd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3299, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa771));
        // BD 036D
        gbc.setState(0xd655, 0xd040, 0xc530, 0x9f18, 0x28a3, 0xdc01, 0x1, 0x0);
        gbc.writeMem(0xd655, { 0xbd });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd040, gbc.sp());
        EXPECT(0xd656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd655));
        // BD 036E
        gbc.setState(0x3d69, 0xc0a6, 0xca60, 0x1bbd, 0x5d6b, 0xd505, 0x1, 0x1);
        gbc.writeMem(0x3d69, { 0xbd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc0a6, gbc.sp());
        EXPECT(0x3d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 036F
        gbc.setState(0xef7e, 0x9b73, 0xfbc0, 0x7a7e, 0xb6a9, 0xed12, 0x1, 0x1);
        gbc.writeMem(0xef7e, { 0xbd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9b73, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xef7e));
        // BD 0370
        gbc.setState(0xdbba, 0xe8c2, 0xf630, 0xcb8f, 0x293c, 0xb169, 0x0, 0x0);
        gbc.writeMem(0xdbba, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdbba));
        // BD 0371
        gbc.setState(0x8aa7, 0x12fb, 0x5f20, 0x4f04, 0xab89, 0x24fc, 0x1, 0x0);
        gbc.writeMem(0x8aa7, { 0xbd });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x12fb, gbc.sp());
        EXPECT(0x8aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8aa7));
        // BD 0372
        gbc.setState(0x56a3, 0xa9c7, 0x8cd0, 0x15ad, 0x985b, 0x32f7, 0x1, 0x1);
        gbc.writeMem(0x56a3, { 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0x56a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0373
        gbc.setState(0xecee, 0xcf2, 0xc990, 0x570d, 0x482c, 0x336b, 0x1, 0x1);
        gbc.writeMem(0xecee, { 0xbd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcf2, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xecee));
        // BD 0374
        gbc.setState(0xd570, 0xe7ed, 0x5970, 0x294, 0x1ec3, 0xa579, 0x0, 0x0);
        gbc.writeMem(0xd570, { 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe7ed, gbc.sp());
        EXPECT(0xd571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd570));
        // BD 0376
        gbc.setState(0x5832, 0xba10, 0xeba0, 0xbd5, 0xd23, 0x1128, 0x0, 0x0);
        gbc.writeMem(0x5832, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xba10, gbc.sp());
        EXPECT(0x5833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0377
        gbc.setState(0x9dc6, 0xd353, 0x9c40, 0xe19e, 0x45cd, 0x8fee, 0x1, 0x1);
        gbc.writeMem(0x9dc6, { 0xbd });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0x9dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9dc6));
        // BD 0378
        gbc.setState(0xc2ec, 0x5224, 0x4b60, 0x9007, 0x7290, 0x2981, 0x1, 0x0);
        gbc.writeMem(0xc2ec, { 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5224, gbc.sp());
        EXPECT(0xc2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc2ec));
        // BD 0379
        gbc.setState(0x203b, 0x63f, 0x2480, 0x4d4a, 0xf3f9, 0x7577, 0x0, 0x0);
        gbc.writeMem(0x203b, { 0xbd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x63f, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 037A
        gbc.setState(0xd22b, 0x938, 0x5730, 0x57b9, 0x2f38, 0xda83, 0x1, 0x1);
        gbc.writeMem(0xd22b, { 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0xd22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd22b));
        // BD 037B
        gbc.setState(0x2ff, 0xac8a, 0x8890, 0xa558, 0x5db3, 0x5aa3, 0x0, 0x0);
        gbc.writeMem(0x2ff, { 0xbd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xac8a, gbc.sp());
        EXPECT(0x300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 037C
        gbc.setState(0x4d42, 0x42e0, 0xfc30, 0xbcac, 0x6159, 0x5695, 0x1, 0x0);
        gbc.writeMem(0x4d42, { 0xbd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 037E
        gbc.setState(0x7c46, 0x82e9, 0xf6d0, 0x8ad7, 0x24aa, 0x6f4, 0x0, 0x1);
        gbc.writeMem(0x7c46, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0x7c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 037F
        gbc.setState(0x210a, 0xe0f3, 0xeb30, 0xf4e8, 0xa0f6, 0x6511, 0x1, 0x1);
        gbc.writeMem(0x210a, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0x210b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0380
        gbc.setState(0x203f, 0xd22, 0x4950, 0xbcb7, 0x39d7, 0xd139, 0x1, 0x1);
        gbc.writeMem(0x203f, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0381
        gbc.setState(0x70a8, 0xae8b, 0x5320, 0x1e21, 0xa21e, 0x21b7, 0x1, 0x0);
        gbc.writeMem(0x70a8, { 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xae8b, gbc.sp());
        EXPECT(0x70a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0382
        gbc.setState(0x8d7d, 0xa8cd, 0xe6c0, 0x91df, 0x1500, 0x122b, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa8cd, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8d7d));
        // BD 0383
        gbc.setState(0x430a, 0x9528, 0x69f0, 0x9dac, 0x8b0e, 0x1625, 0x0, 0x0);
        gbc.writeMem(0x430a, { 0xbd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9528, gbc.sp());
        EXPECT(0x430b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0384
        gbc.setState(0x9cf8, 0x688b, 0x7d40, 0x92cb, 0xc4a5, 0x8429, 0x0, 0x1);
        gbc.writeMem(0x9cf8, { 0xbd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x688b, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9cf8));
        // BD 0386
        gbc.setState(0xdc47, 0xb3fe, 0xf610, 0x201b, 0x1c58, 0xd317, 0x1, 0x0);
        gbc.writeMem(0xdc47, { 0xbd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0xdc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdc47));
        // BD 0387
        gbc.setState(0x4097, 0x3822, 0x2920, 0xf344, 0xb600, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0x4097, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0x4098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0388
        gbc.setState(0xd232, 0xac1c, 0x7170, 0xe099, 0x4084, 0xd7bd, 0x0, 0x0);
        gbc.writeMem(0xd232, { 0xbd });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xac1c, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd232));
        // BD 0389
        gbc.setState(0x9ee4, 0x92a2, 0x6020, 0xc68f, 0xb9d3, 0x50bc, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0xbd });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x92a2, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ee4));
        // BD 038B
        gbc.setState(0x4bee, 0xe84d, 0xb740, 0x6cd, 0x6012, 0x6ea3, 0x1, 0x1);
        gbc.writeMem(0x4bee, { 0xbd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe84d, gbc.sp());
        EXPECT(0x4bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 038C
        gbc.setState(0x3bea, 0x76e0, 0xd690, 0x6e8e, 0x6d51, 0xaf80, 0x1, 0x1);
        gbc.writeMem(0x3bea, { 0xbd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x76e0, gbc.sp());
        EXPECT(0x3beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 038D
        gbc.setState(0x5d9f, 0x90a2, 0x36c0, 0x28d0, 0xa3d9, 0x6df7, 0x0, 0x1);
        gbc.writeMem(0x5d9f, { 0xbd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 038E
        gbc.setState(0x48ad, 0xc619, 0xa0, 0x29ac, 0x87, 0xaf34, 0x1, 0x1);
        gbc.writeMem(0x48ad, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0x48ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0390
        gbc.setState(0xd16e, 0x76a, 0x33b0, 0x9834, 0xd445, 0x8ce5, 0x1, 0x1);
        gbc.writeMem(0xd16e, { 0xbd });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0xd16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd16e));
        // BD 0391
        gbc.setState(0x401b, 0x713, 0x9470, 0x9043, 0x178f, 0x90ad, 0x1, 0x1);
        gbc.writeMem(0x401b, { 0xbd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0x401c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0392
        gbc.setState(0x3c45, 0x51a0, 0xf990, 0xcfd1, 0xf3b0, 0xef89, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0393
        gbc.setState(0xd35, 0x5308, 0x4b20, 0xe2b6, 0xff3b, 0x3dc, 0x1, 0x1);
        gbc.writeMem(0xd35, { 0xbd });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0xd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0394
        gbc.setState(0x7e3b, 0x8e27, 0x8c50, 0xa6a0, 0x2926, 0x1614, 0x1, 0x0);
        gbc.writeMem(0x7e3b, { 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8e27, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 0395
        gbc.setState(0x8b54, 0x4fdc, 0x3d60, 0xf161, 0x7681, 0x32a8, 0x1, 0x1);
        gbc.writeMem(0x8b54, { 0xbd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4fdc, gbc.sp());
        EXPECT(0x8b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8b54));
        // BD 0396
        gbc.setState(0x254, 0xebdc, 0x3100, 0x4852, 0x100c, 0x3876, 0x1, 0x0);
        gbc.writeMem(0x254, { 0xbd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xebdc, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 0397
        gbc.setState(0xc41e, 0x654b, 0xeb00, 0x4417, 0x5ecf, 0xfccf, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xbd });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x654b, gbc.sp());
        EXPECT(0xc41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc41e));
        // BD 0398
        gbc.setState(0x89e8, 0xa999, 0xf10, 0xa0d1, 0x167f, 0x1154, 0x0, 0x1);
        gbc.writeMem(0x89e8, { 0xbd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x89e8));
        // BD 0399
        gbc.setState(0x232d, 0xc143, 0x50c0, 0xd1eb, 0xb316, 0xd76a, 0x0, 0x1);
        gbc.writeMem(0x232d, { 0xbd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 039A
        gbc.setState(0x672b, 0x3ba9, 0xb0, 0x95c4, 0xc360, 0x266a, 0x1, 0x0);
        gbc.writeMem(0x672b, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0x672c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 039C
        gbc.setState(0x3d11, 0x6ffd, 0x83f0, 0x89af, 0x566c, 0x9e64, 0x1, 0x0);
        gbc.writeMem(0x3d11, { 0xbd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0x3d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 039D
        gbc.setState(0xa6d7, 0x96c1, 0xb3b0, 0x1b77, 0x3c1b, 0x792d, 0x0, 0x1);
        gbc.writeMem(0xa6d7, { 0xbd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x96c1, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa6d7));
        // BD 039E
        gbc.setState(0x27cd, 0x35f2, 0x2fd0, 0x5e40, 0x4d98, 0x4f66, 0x1, 0x1);
        gbc.writeMem(0x27cd, { 0xbd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x35f2, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03A0
        gbc.setState(0xe6d7, 0x3314, 0xd230, 0xd64e, 0xf759, 0xb795, 0x1, 0x1);
        gbc.writeMem(0xe6d7, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe6d7));
        // BD 03A1
        gbc.setState(0x34b6, 0x1daf, 0x29c0, 0x69a3, 0x3ed1, 0xe472, 0x1, 0x0);
        gbc.writeMem(0x34b6, { 0xbd });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1daf, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03A2
        gbc.setState(0x6f8b, 0x5803, 0x44c0, 0x8af2, 0x3ad1, 0x4e4f, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0xbd });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0x6f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03A3
        gbc.setState(0x23ed, 0x7916, 0xc820, 0x20f0, 0xe407, 0x546, 0x1, 0x1);
        gbc.writeMem(0x23ed, { 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03A4
        gbc.setState(0x1151, 0xaa7e, 0xbd00, 0x9b17, 0x5d4b, 0xa678, 0x0, 0x0);
        gbc.writeMem(0x1151, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xaa7e, gbc.sp());
        EXPECT(0x1152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03A5
        gbc.setState(0x7e9c, 0x83de, 0x9140, 0x1525, 0x2137, 0x9811, 0x1, 0x0);
        gbc.writeMem(0x7e9c, { 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03A6
        gbc.setState(0x6138, 0x47e4, 0x8d10, 0x1ee6, 0x8e86, 0xf35c, 0x0, 0x0);
        gbc.writeMem(0x6138, { 0xbd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03A7
        gbc.setState(0x8e6, 0x526d, 0xa320, 0x1f36, 0x1c66, 0xb1f6, 0x0, 0x0);
        gbc.writeMem(0x8e6, { 0xbd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x526d, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03A8
        gbc.setState(0x7a35, 0x602f, 0x7420, 0x1a20, 0xbff3, 0x1eaa, 0x0, 0x0);
        gbc.writeMem(0x7a35, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x602f, gbc.sp());
        EXPECT(0x7a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03A9
        gbc.setState(0x3606, 0x2222, 0x4eb0, 0x6a6c, 0x329d, 0x7c99, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0xbd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2222, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03AA
        gbc.setState(0xdb9f, 0x5ffd, 0xd8b0, 0x2ea8, 0x7cef, 0xbacd, 0x0, 0x1);
        gbc.writeMem(0xdb9f, { 0xbd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdb9f));
        // BD 03AB
        gbc.setState(0x6a41, 0xa753, 0x4c90, 0x57c2, 0x9152, 0xa6bf, 0x1, 0x1);
        gbc.writeMem(0x6a41, { 0xbd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa753, gbc.sp());
        EXPECT(0x6a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03AC
        gbc.setState(0x6569, 0xf9d4, 0xf460, 0x4472, 0x287d, 0x7706, 0x1, 0x0);
        gbc.writeMem(0x6569, { 0xbd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0x656a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03AD
        gbc.setState(0x9a8c, 0x161b, 0x77d0, 0x79e2, 0x537e, 0x5e6f, 0x1, 0x0);
        gbc.writeMem(0x9a8c, { 0xbd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x161b, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9a8c));
        // BD 03AE
        gbc.setState(0xdce7, 0x8a45, 0x30, 0x3c7c, 0x53d1, 0x463f, 0x1, 0x1);
        gbc.writeMem(0xdce7, { 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0xdce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdce7));
        // BD 03AF
        gbc.setState(0xcda5, 0x22e1, 0x5840, 0x4e16, 0x1ebb, 0x9985, 0x0, 0x1);
        gbc.writeMem(0xcda5, { 0xbd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x22e1, gbc.sp());
        EXPECT(0xcda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcda5));
        // BD 03B0
        gbc.setState(0xc6eb, 0xc24b, 0x5dc0, 0x96cb, 0x26c1, 0x948d, 0x1, 0x1);
        gbc.writeMem(0xc6eb, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc24b, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc6eb));
        // BD 03B1
        gbc.setState(0xa79a, 0x9d7c, 0xab50, 0xbf08, 0x6487, 0xf0c0, 0x0, 0x0);
        gbc.writeMem(0xa79a, { 0xbd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9d7c, gbc.sp());
        EXPECT(0xa79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa79a));
        // BD 03B2
        gbc.setState(0x9d30, 0x69b1, 0x190, 0x8ad0, 0x5f1e, 0xd423, 0x1, 0x1);
        gbc.writeMem(0x9d30, { 0xbd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x69b1, gbc.sp());
        EXPECT(0x9d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9d30));
        // BD 03B3
        gbc.setState(0x850c, 0xfbbc, 0xe3a0, 0x503e, 0x2085, 0xfb0d, 0x1, 0x0);
        gbc.writeMem(0x850c, { 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfbbc, gbc.sp());
        EXPECT(0x850d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x850c));
        // BD 03B4
        gbc.setState(0x3718, 0x178e, 0xc8c0, 0xd6df, 0x9cd6, 0xe23a, 0x1, 0x0);
        gbc.writeMem(0x3718, { 0xbd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03B6
        gbc.setState(0x6360, 0x94e, 0x8220, 0xed74, 0xac97, 0xee12, 0x1, 0x1);
        gbc.writeMem(0x6360, { 0xbd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03B8
        gbc.setState(0x7c13, 0x590e, 0x4d40, 0x7d2e, 0x3d4f, 0xf177, 0x0, 0x0);
        gbc.writeMem(0x7c13, { 0xbd });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x7c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03B9
        gbc.setState(0xafb1, 0xa4c0, 0x1c40, 0x29b, 0x6eff, 0xef86, 0x0, 0x1);
        gbc.writeMem(0xafb1, { 0xbd });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0xafb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xafb1));
        // BD 03BA
        gbc.setState(0x6d3b, 0xd29b, 0x7430, 0xdf0a, 0x8619, 0xab5d, 0x1, 0x0);
        gbc.writeMem(0x6d3b, { 0xbd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd29b, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03BB
        gbc.setState(0x3404, 0xddb, 0x3a30, 0x68e5, 0x1ed8, 0x982e, 0x1, 0x0);
        gbc.writeMem(0x3404, { 0xbd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03BC
        gbc.setState(0x4e0c, 0x45f3, 0xcb60, 0xce79, 0x4452, 0xdff7, 0x0, 0x0);
        gbc.writeMem(0x4e0c, { 0xbd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x45f3, gbc.sp());
        EXPECT(0x4e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03BD
        gbc.setState(0x7df3, 0xc399, 0xe2f0, 0x8ad0, 0x461d, 0x3bb5, 0x0, 0x1);
        gbc.writeMem(0x7df3, { 0xbd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03BE
        gbc.setState(0xe046, 0x1936, 0xe360, 0xf1f6, 0xe310, 0x6934, 0x1, 0x0);
        gbc.writeMem(0xe046, { 0xbd });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0xe047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe046));
        // BD 03C0
        gbc.setState(0x7982, 0xcd7b, 0xb330, 0x6635, 0xe26f, 0xd89e, 0x1, 0x1);
        gbc.writeMem(0x7982, { 0xbd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcd7b, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03C1
        gbc.setState(0x37ca, 0xa6b3, 0xc440, 0xe51, 0x51ef, 0x9639, 0x0, 0x0);
        gbc.writeMem(0x37ca, { 0xbd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x37cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03C2
        gbc.setState(0xb86d, 0x3f32, 0xc610, 0xffef, 0x5a62, 0x1435, 0x0, 0x1);
        gbc.writeMem(0xb86d, { 0xbd });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3f32, gbc.sp());
        EXPECT(0xb86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb86d));
        // BD 03C3
        gbc.setState(0x9be3, 0xfdf6, 0xe080, 0xd03f, 0x234f, 0xc9b, 0x0, 0x0);
        gbc.writeMem(0x9be3, { 0xbd });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x9be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9be3));
        // BD 03C4
        gbc.setState(0xad33, 0x841b, 0xcb0, 0x416a, 0xadab, 0x9e31, 0x1, 0x1);
        gbc.writeMem(0xad33, { 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0xad34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xad33));
        // BD 03C5
        gbc.setState(0x966a, 0xc01e, 0xec90, 0xbd8a, 0x7f9d, 0x3459, 0x0, 0x0);
        gbc.writeMem(0x966a, { 0xbd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x966a));
        // BD 03C6
        gbc.setState(0x4089, 0x2088, 0x99a0, 0x49e3, 0x926c, 0x351a, 0x1, 0x1);
        gbc.writeMem(0x4089, { 0xbd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03C7
        gbc.setState(0x99ce, 0xc082, 0x5900, 0x3d2b, 0x3267, 0x928d, 0x0, 0x1);
        gbc.writeMem(0x99ce, { 0xbd });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc082, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x99ce));
        // BD 03C8
        gbc.setState(0xc4e, 0xbc0f, 0x7790, 0x91d8, 0xbdaf, 0x5241, 0x1, 0x1);
        gbc.writeMem(0xc4e, { 0xbd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03C9
        gbc.setState(0x9ec0, 0x7021, 0x6c80, 0xb0c5, 0x98a9, 0xf814, 0x1, 0x1);
        gbc.writeMem(0x9ec0, { 0xbd });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7021, gbc.sp());
        EXPECT(0x9ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ec0));
        // BD 03CA
        gbc.setState(0x90b7, 0xa98e, 0x13e0, 0xbbdd, 0x5d89, 0xf543, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa98e, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x90b7));
        // BD 03CB
        gbc.setState(0x25a7, 0xdbb7, 0xe1d0, 0x4b46, 0xa31e, 0x8cc5, 0x0, 0x1);
        gbc.writeMem(0x25a7, { 0xbd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0x25a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03CC
        gbc.setState(0xf83, 0x2f45, 0xf930, 0x9720, 0xb4b0, 0x4c04, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03CD
        gbc.setState(0x3026, 0x5e94, 0x9270, 0xa26a, 0x6de5, 0x84d0, 0x0, 0x1);
        gbc.writeMem(0x3026, { 0xbd });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5e94, gbc.sp());
        EXPECT(0x3027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03CE
        gbc.setState(0x71c1, 0x196b, 0x8ac0, 0x8bf8, 0x5808, 0xa1d4, 0x0, 0x1);
        gbc.writeMem(0x71c1, { 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0x71c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03D0
        gbc.setState(0x8cd6, 0x84f1, 0xa620, 0x860a, 0xf956, 0x33aa, 0x0, 0x1);
        gbc.writeMem(0x8cd6, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x84f1, gbc.sp());
        EXPECT(0x8cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8cd6));
        // BD 03D1
        gbc.setState(0x65a1, 0xab52, 0xafd0, 0xca9a, 0x2316, 0x90cc, 0x0, 0x0);
        gbc.writeMem(0x65a1, { 0xbd });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xab52, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03D2
        gbc.setState(0xbcf2, 0x4e4d, 0xfe80, 0x8654, 0xf38d, 0x5401, 0x0, 0x1);
        gbc.writeMem(0xbcf2, { 0xbd });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e4d, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbcf2));
        // BD 03D3
        gbc.setState(0x7bea, 0xbb93, 0x61d0, 0x7790, 0xffd7, 0xb516, 0x1, 0x1);
        gbc.writeMem(0x7bea, { 0xbd });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbb93, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03D4
        gbc.setState(0x2bbb, 0x1541, 0x9fd0, 0xb986, 0xb154, 0x4798, 0x0, 0x0);
        gbc.writeMem(0x2bbb, { 0xbd });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0x2bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03D5
        gbc.setState(0xc074, 0xe72b, 0x8b40, 0x9632, 0x8443, 0xfc1e, 0x0, 0x1);
        gbc.writeMem(0xc074, { 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe72b, gbc.sp());
        EXPECT(0xc075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc074));
        // BD 03D6
        gbc.setState(0xe86d, 0x93ad, 0x5e40, 0x9d5, 0xff58, 0xd515, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xbd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x93ad, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe86d));
        // BD 03D7
        gbc.setState(0x4ad3, 0xea26, 0x3930, 0x8cbf, 0x27a5, 0xd8f0, 0x0, 0x0);
        gbc.writeMem(0x4ad3, { 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0x4ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03D9
        gbc.setState(0xde23, 0x50c3, 0x67b0, 0x661d, 0xb718, 0x1aea, 0x0, 0x1);
        gbc.writeMem(0xde23, { 0xbd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xde23));
        // BD 03DB
        gbc.setState(0xcb4a, 0xf403, 0x39c0, 0x41b2, 0x77f3, 0xbabb, 0x1, 0x1);
        gbc.writeMem(0xcb4a, { 0xbd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf403, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcb4a));
        // BD 03DD
        gbc.setState(0x9edf, 0xac22, 0x5560, 0xb4c7, 0x6031, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x9edf, { 0xbd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xac22, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9edf));
        // BD 03DE
        gbc.setState(0xcd73, 0x7e1e, 0x5d30, 0x2a5, 0xd5f2, 0x8702, 0x1, 0x0);
        gbc.writeMem(0xcd73, { 0xbd });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7e1e, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcd73));
        // BD 03DF
        gbc.setState(0xc5a, 0xfe45, 0x8b70, 0x1b5c, 0x64e7, 0x50a, 0x1, 0x1);
        gbc.writeMem(0xc5a, { 0xbd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfe45, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03E0
        gbc.setState(0x653f, 0x7cee, 0xe6b0, 0x7531, 0x15cf, 0x8e47, 0x0, 0x0);
        gbc.writeMem(0x653f, { 0xbd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03E1
        gbc.setState(0x72ce, 0xba89, 0x5780, 0x7f6, 0xcfcc, 0xeb87, 0x1, 0x1);
        gbc.writeMem(0x72ce, { 0xbd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xba89, gbc.sp());
        EXPECT(0x72cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BD 03E3
        gbc.setState(0x9ab7, 0x37c2, 0x4f0, 0x5de6, 0x3c6a, 0x6a1c, 0x0, 0x1);
        gbc.writeMem(0x9ab7, { 0xbd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37c2, gbc.sp());
        EXPECT(0x9ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9ab7));
        // BD 03E5
        gbc.setState(0x419e, 0x4c8e, 0x9d50, 0x1992, 0xd9d3, 0x9b9b, 0x0, 0x0);
        gbc.writeMem(0x419e, { 0xbd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4c8e, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BD 03E7
        gbc.setState(0x3b8b, 0x239e, 0xa820, 0x53b3, 0xab3d, 0x8253, 0x0, 0x0);
        gbc.writeMem(0x3b8b, { 0xbd });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x239e, gbc.sp());
        EXPECT(0x3b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
