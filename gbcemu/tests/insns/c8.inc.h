    TEST(gbcemu, opcode_c8) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C8 0000
        gbc.setState(0xcd0b, 0xf0d, 0x3240, 0xc5e, 0x8b8b, 0x49f0, 0x1, 0x1);
        gbc.writeMem(0xcd0b, { 0xc8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf0d, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcd0b));
        // C8 0001
        gbc.setState(0x40dd, 0x9c5d, 0x4b00, 0x730c, 0xa769, 0x8db1, 0x0, 0x1);
        gbc.writeMem(0x40dd, { 0xc8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9c5d, gbc.sp());
        EXPECT(0x40de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0002
        gbc.setState(0x4d39, 0x94b5, 0x5cc0, 0x1102, 0xe93e, 0xbf65, 0x1, 0x1);
        gbc.writeMem(0x4d39, { 0xc8 });
        gbc.writeMem(0x94b5, { 0x4f, 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x94b7, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x94b5));
        EXPECT(0x91, gbc.readMem(0x94b6));
        // C8 0003
        gbc.setState(0x8957, 0x53f5, 0x6a30, 0x2ca6, 0x861f, 0x3ff5, 0x1, 0x1);
        gbc.writeMem(0x8957, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x53f5, gbc.sp());
        EXPECT(0x8958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8957));
        // C8 0005
        gbc.setState(0x897c, 0x3b0b, 0x2c10, 0xac83, 0xbd61, 0x6477, 0x0, 0x0);
        gbc.writeMem(0x897c, { 0xc8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3b0b, gbc.sp());
        EXPECT(0x897d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x897c));
        // C8 0006
        gbc.setState(0x4f01, 0xfcc7, 0x1d40, 0xb2d1, 0x73fc, 0x7a49, 0x1, 0x1);
        gbc.writeMem(0x4f01, { 0xc8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0x4f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0007
        gbc.setState(0xcfb7, 0xd385, 0x380, 0x7e2e, 0x7ed4, 0xa954, 0x1, 0x0);
        gbc.writeMem(0xcfb7, { 0xc8 });
        gbc.writeMem(0xd385, { 0xb3, 0x65 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcfb7));
        EXPECT(0xb3, gbc.readMem(0xd385));
        EXPECT(0x65, gbc.readMem(0xd386));
        // C8 0008
        gbc.setState(0xd0c4, 0xa315, 0x49c0, 0x8ca7, 0xc343, 0xfb65, 0x1, 0x1);
        gbc.writeMem(0xa315, { 0xb0, 0x97 });
        gbc.writeMem(0xd0c4, { 0xc8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa315));
        EXPECT(0x97, gbc.readMem(0xa316));
        EXPECT(0xc8, gbc.readMem(0xd0c4));
        // C8 000A
        gbc.setState(0xda4a, 0x1ed1, 0xb190, 0xfef9, 0x75cd, 0x537a, 0x0, 0x0);
        gbc.writeMem(0x1ed1, { 0xa3, 0xbf });
        gbc.writeMem(0xda4a, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1ed3, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xda4a));
        // C8 000C
        gbc.setState(0x2c96, 0x690d, 0x550, 0x6e9d, 0xacae, 0xc935, 0x1, 0x1);
        gbc.writeMem(0x2c96, { 0xc8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x690d, gbc.sp());
        EXPECT(0x2c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 000E
        gbc.setState(0x476e, 0x220c, 0xeae0, 0x7ae5, 0x9c2e, 0xd8bd, 0x0, 0x0);
        gbc.writeMem(0x220c, { 0xf7, 0x98 });
        gbc.writeMem(0x476e, { 0xc8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x220e, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 000F
        gbc.setState(0x6354, 0x356b, 0xf940, 0x4083, 0xa8cc, 0xa2a4, 0x1, 0x0);
        gbc.writeMem(0x6354, { 0xc8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x356b, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0010
        gbc.setState(0xcd45, 0x4a4e, 0xc740, 0xf56b, 0x6b1e, 0xd645, 0x1, 0x1);
        gbc.writeMem(0xcd45, { 0xc8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4a4e, gbc.sp());
        EXPECT(0xcd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcd45));
        // C8 0011
        gbc.setState(0x92c4, 0x1b3, 0x1390, 0x1cd9, 0x979f, 0x267b, 0x1, 0x0);
        gbc.writeMem(0x1b3, { 0xc2, 0x56 });
        gbc.writeMem(0x92c4, { 0xc8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1b5, gbc.sp());
        EXPECT(0x56c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92c4));
        // C8 0012
        gbc.setState(0x2969, 0xaf6d, 0x8ac0, 0x38c4, 0xaf4e, 0x8ab2, 0x1, 0x1);
        gbc.writeMem(0x2969, { 0xc8 });
        gbc.writeMem(0xaf6d, { 0x74, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0xf274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xaf6d));
        EXPECT(0xf2, gbc.readMem(0xaf6e));
        // C8 0013
        gbc.setState(0x8504, 0x146d, 0xafa0, 0x270b, 0x7c59, 0x24f9, 0x0, 0x0);
        gbc.writeMem(0x146d, { 0x16, 0x1e });
        gbc.writeMem(0x8504, { 0xc8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8504));
        // C8 0014
        gbc.setState(0xd6df, 0x5a6e, 0x5060, 0x8d02, 0xce3, 0x4cc2, 0x1, 0x0);
        gbc.writeMem(0xd6df, { 0xc8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd6df));
        // C8 0015
        gbc.setState(0xd5a, 0x893d, 0x6590, 0x5aad, 0x862b, 0x20a, 0x1, 0x1);
        gbc.writeMem(0xd5a, { 0xc8 });
        gbc.writeMem(0x893d, { 0x3d, 0xfa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0xfa3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x893d));
        EXPECT(0xfa, gbc.readMem(0x893e));
        // C8 0016
        gbc.setState(0x4647, 0x9a42, 0x320, 0x795a, 0x6274, 0x7a76, 0x0, 0x1);
        gbc.writeMem(0x4647, { 0xc8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0017
        gbc.setState(0x7e1, 0x1cc0, 0xcb0, 0x985c, 0x6508, 0x9123, 0x1, 0x1);
        gbc.writeMem(0x7e1, { 0xc8 });
        gbc.writeMem(0x1cc0, { 0x5b, 0x22 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x225b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0018
        gbc.setState(0xa6d6, 0xcab6, 0xfa30, 0x7e3a, 0xac25, 0x8821, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xc8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa6d6));
        // C8 0019
        gbc.setState(0x88b4, 0xfab1, 0x7af0, 0x4dde, 0xf0b3, 0xa1c1, 0x1, 0x1);
        gbc.writeMem(0x88b4, { 0xc8 });
        gbc.writeMem(0xfab1, { 0xc5, 0xa3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfab3, gbc.sp());
        EXPECT(0xa3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x88b4));
        EXPECT(0xc5, gbc.readMem(0xfab1));
        EXPECT(0xa3, gbc.readMem(0xfab2));
        // C8 001A
        gbc.setState(0x5a71, 0x3e6c, 0xe480, 0x5e12, 0x19a5, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0x3e6c, { 0xf6, 0x4 });
        gbc.writeMem(0x5a71, { 0xc8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3e6e, gbc.sp());
        EXPECT(0x4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 001B
        gbc.setState(0x7a08, 0x18b, 0x2310, 0x94b5, 0x8269, 0x46a7, 0x0, 0x1);
        gbc.writeMem(0x7a08, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x18b, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 001C
        gbc.setState(0x49ac, 0xc3ed, 0xf220, 0x7995, 0xceb0, 0xf2ed, 0x0, 0x0);
        gbc.writeMem(0x49ac, { 0xc8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc3ed, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 001D
        gbc.setState(0x21e4, 0xccae, 0x6ce0, 0x2f19, 0x5dd3, 0xa6c7, 0x0, 0x1);
        gbc.writeMem(0x21e4, { 0xc8 });
        gbc.writeMem(0xccae, { 0x8e, 0x26 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xccb0, gbc.sp());
        EXPECT(0x268e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xccae));
        EXPECT(0x26, gbc.readMem(0xccaf));
        // C8 001E
        gbc.setState(0x1e08, 0x375d, 0xc660, 0xa747, 0x1fb2, 0xd57, 0x0, 0x1);
        gbc.writeMem(0x1e08, { 0xc8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x375d, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 001F
        gbc.setState(0x891b, 0x48fe, 0x2d90, 0x8abc, 0xff2, 0x74ea, 0x0, 0x1);
        gbc.writeMem(0x48fe, { 0xb8, 0x6 });
        gbc.writeMem(0x891b, { 0xc8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0x6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x891b));
        // C8 0020
        gbc.setState(0x8f3a, 0xbc91, 0xec80, 0x2438, 0xfde2, 0xa2ab, 0x0, 0x0);
        gbc.writeMem(0x8f3a, { 0xc8 });
        gbc.writeMem(0xbc91, { 0x71, 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbc93, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8f3a));
        EXPECT(0x71, gbc.readMem(0xbc91));
        EXPECT(0xb0, gbc.readMem(0xbc92));
        // C8 0021
        gbc.setState(0x6be5, 0x2c04, 0x3ab0, 0x85fb, 0xdbba, 0xf2a, 0x1, 0x0);
        gbc.writeMem(0x2c04, { 0xac, 0x6f });
        gbc.writeMem(0x6be5, { 0xc8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2c06, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0022
        gbc.setState(0x6dda, 0xfabf, 0xb660, 0x5edd, 0x91a4, 0x42d5, 0x1, 0x1);
        gbc.writeMem(0x6dda, { 0xc8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0x6ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0023
        gbc.setState(0xef22, 0xb86f, 0x5e50, 0x28ee, 0x8cfa, 0x27ef, 0x0, 0x0);
        gbc.writeMem(0xef22, { 0xc8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0xef23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef22));
        // C8 0024
        gbc.setState(0xa24f, 0x5f83, 0xa600, 0x3bda, 0x65ef, 0x18b4, 0x0, 0x0);
        gbc.writeMem(0xa24f, { 0xc8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0xa250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa24f));
        // C8 0025
        gbc.setState(0x71b, 0xf731, 0x4cb0, 0xfce0, 0xf68e, 0x20c4, 0x1, 0x0);
        gbc.writeMem(0x71b, { 0xc8 });
        gbc.writeMem(0xf731, { 0xb3, 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf733, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xf731));
        EXPECT(0x1a, gbc.readMem(0xf732));
        // C8 0026
        gbc.setState(0x51e1, 0x8cc7, 0xcd20, 0xda54, 0xc7b4, 0xb4ef, 0x1, 0x0);
        gbc.writeMem(0x51e1, { 0xc8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8cc7, gbc.sp());
        EXPECT(0x51e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0027
        gbc.setState(0xc38a, 0x934b, 0x5900, 0x5cf8, 0xd760, 0x9b16, 0x0, 0x0);
        gbc.writeMem(0xc38a, { 0xc8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0xc38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc38a));
        // C8 0028
        gbc.setState(0xebbe, 0x6c18, 0xac30, 0xb682, 0x8cd4, 0x36b3, 0x0, 0x0);
        gbc.writeMem(0xebbe, { 0xc8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0xebbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xebbe));
        // C8 0029
        gbc.setState(0x8ac7, 0x88d3, 0xd4f0, 0xee99, 0xde50, 0xc8fd, 0x1, 0x1);
        gbc.writeMem(0x88d3, { 0xd, 0x21 });
        gbc.writeMem(0x8ac7, { 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0x210d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x88d3));
        EXPECT(0x21, gbc.readMem(0x88d4));
        EXPECT(0xc8, gbc.readMem(0x8ac7));
        // C8 002A
        gbc.setState(0xd3e3, 0xc6b3, 0x9eb0, 0x3c3a, 0x7c8a, 0xb392, 0x1, 0x1);
        gbc.writeMem(0xc6b3, { 0x14, 0x27 });
        gbc.writeMem(0xd3e3, { 0xc8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0x2714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc6b3));
        EXPECT(0x27, gbc.readMem(0xc6b4));
        EXPECT(0xc8, gbc.readMem(0xd3e3));
        // C8 002B
        gbc.setState(0xe28a, 0x77f6, 0xed70, 0xe3d7, 0x138e, 0xbef6, 0x1, 0x0);
        gbc.writeMem(0xe28a, { 0xc8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe28a));
        // C8 002C
        gbc.setState(0x48a7, 0x916d, 0x8d30, 0xcdf7, 0x2380, 0x8f3, 0x1, 0x0);
        gbc.writeMem(0x48a7, { 0xc8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x916d, gbc.sp());
        EXPECT(0x48a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 002D
        gbc.setState(0x84a6, 0x7f5b, 0x59a0, 0x5936, 0x9844, 0x7f53, 0x0, 0x0);
        gbc.writeMem(0x7f5b, { 0xf5, 0x81 });
        gbc.writeMem(0x84a6, { 0xc8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7f5d, gbc.sp());
        EXPECT(0x81f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x84a6));
        // C8 002E
        gbc.setState(0x4612, 0xeea3, 0xf2d0, 0xec99, 0xaa5f, 0x799f, 0x0, 0x0);
        gbc.writeMem(0x4612, { 0xc8 });
        gbc.writeMem(0xeea3, { 0x81, 0x23 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xeea5, gbc.sp());
        EXPECT(0x2381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeea3));
        EXPECT(0x23, gbc.readMem(0xeea4));
        // C8 002F
        gbc.setState(0xdeaa, 0xe28e, 0xc20, 0x5d2a, 0x24bd, 0x2412, 0x0, 0x0);
        gbc.writeMem(0xdeaa, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe28e, gbc.sp());
        EXPECT(0xdeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdeaa));
        // C8 0030
        gbc.setState(0x9213, 0x621a, 0x3d60, 0xac92, 0xb388, 0x8506, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xc8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x621a, gbc.sp());
        EXPECT(0x9214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9213));
        // C8 0031
        gbc.setState(0x7a89, 0x510a, 0xf870, 0x7692, 0x94, 0x85c4, 0x0, 0x0);
        gbc.writeMem(0x7a89, { 0xc8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x510a, gbc.sp());
        EXPECT(0x7a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0032
        gbc.setState(0x6a28, 0x3e44, 0xa4b0, 0x8c7, 0xa697, 0xb8a6, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0x34, 0x1f });
        gbc.writeMem(0x6a28, { 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3e46, gbc.sp());
        EXPECT(0x1f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0033
        gbc.setState(0x6646, 0x3d1a, 0xa850, 0x7bcb, 0x9093, 0xbf3b, 0x1, 0x1);
        gbc.writeMem(0x6646, { 0xc8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0034
        gbc.setState(0x45e9, 0xb6d7, 0xb6c0, 0x3a88, 0xe771, 0xf209, 0x1, 0x1);
        gbc.writeMem(0x45e9, { 0xc8 });
        gbc.writeMem(0xb6d7, { 0x2e, 0x93 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0x932e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb6d7));
        EXPECT(0x93, gbc.readMem(0xb6d8));
        // C8 0035
        gbc.setState(0x4507, 0xabf2, 0xeb30, 0x9bf1, 0x1609, 0xd46f, 0x0, 0x1);
        gbc.writeMem(0x4507, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x4508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0036
        gbc.setState(0x548b, 0xff3b, 0x1200, 0xd83e, 0xdb86, 0xdc36, 0x1, 0x1);
        gbc.writeMem(0x548b, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xff3b, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0037
        gbc.setState(0xbc33, 0xdcb7, 0xe3d0, 0xf6fe, 0xd5e4, 0xdd73, 0x0, 0x0);
        gbc.writeMem(0xbc33, { 0xc8 });
        gbc.writeMem(0xdcb7, { 0x3d, 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbc33));
        EXPECT(0x3d, gbc.readMem(0xdcb7));
        EXPECT(0x3c, gbc.readMem(0xdcb8));
        // C8 0038
        gbc.setState(0xff8, 0x9946, 0x2dd0, 0x6b99, 0xeb39, 0xa2b5, 0x0, 0x0);
        gbc.writeMem(0xff8, { 0xc8 });
        gbc.writeMem(0x9946, { 0x2e, 0xb8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9948, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9946));
        EXPECT(0xb8, gbc.readMem(0x9947));
        // C8 0039
        gbc.setState(0x754b, 0x3fd5, 0xaa20, 0x9da0, 0xd23d, 0x9101, 0x0, 0x0);
        gbc.writeMem(0x754b, { 0xc8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 003C
        gbc.setState(0xc75e, 0x9872, 0xc9c0, 0xd2c, 0xadef, 0xfb1d, 0x0, 0x1);
        gbc.writeMem(0x9872, { 0xf1, 0xc4 });
        gbc.writeMem(0xc75e, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9874, gbc.sp());
        EXPECT(0xc4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9872));
        EXPECT(0xc4, gbc.readMem(0x9873));
        EXPECT(0xc8, gbc.readMem(0xc75e));
        // C8 003E
        gbc.setState(0xef3e, 0x226a, 0x1830, 0x5a4a, 0x14bd, 0xcc1, 0x1, 0x1);
        gbc.writeMem(0xef3e, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0xef3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef3e));
        // C8 003F
        gbc.setState(0x412c, 0x9540, 0xe630, 0x11da, 0xf93e, 0x6cf1, 0x0, 0x1);
        gbc.writeMem(0x412c, { 0xc8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9540, gbc.sp());
        EXPECT(0x412d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0040
        gbc.setState(0x49e7, 0xa6e7, 0x2d30, 0x36b7, 0xa659, 0x2c55, 0x1, 0x1);
        gbc.writeMem(0x49e7, { 0xc8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa6e7, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0041
        gbc.setState(0xe21f, 0x7f30, 0x89f0, 0x1363, 0xd14d, 0xdbab, 0x1, 0x0);
        gbc.writeMem(0x7f30, { 0xd1, 0x49 });
        gbc.writeMem(0xe21f, { 0xc8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x49d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe21f));
        // C8 0042
        gbc.setState(0x8aac, 0xf14f, 0x4eb0, 0x7e46, 0x302d, 0x73dc, 0x1, 0x0);
        gbc.writeMem(0x8aac, { 0xc8 });
        gbc.writeMem(0xf14f, { 0xd5, 0x99 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf151, gbc.sp());
        EXPECT(0x99d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8aac));
        EXPECT(0xd5, gbc.readMem(0xf14f));
        EXPECT(0x99, gbc.readMem(0xf150));
        // C8 0043
        gbc.setState(0x5e43, 0x91a8, 0xac40, 0x68ac, 0x8bfd, 0xe3eb, 0x0, 0x0);
        gbc.writeMem(0x5e43, { 0xc8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0044
        gbc.setState(0x8246, 0x3786, 0xff00, 0x26d0, 0x4c8b, 0xfdd0, 0x0, 0x1);
        gbc.writeMem(0x8246, { 0xc8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8246));
        // C8 0045
        gbc.setState(0xba5d, 0xf31e, 0xdaf0, 0xef6e, 0x5a19, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0xba5d, { 0xc8 });
        gbc.writeMem(0xf31e, { 0xe7, 0xd9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf320, gbc.sp());
        EXPECT(0xd9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xba5d));
        EXPECT(0xe7, gbc.readMem(0xf31e));
        EXPECT(0xd9, gbc.readMem(0xf31f));
        // C8 0046
        gbc.setState(0x533e, 0x6de6, 0x6360, 0xa764, 0x4500, 0xa906, 0x0, 0x1);
        gbc.writeMem(0x533e, { 0xc8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6de6, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0047
        gbc.setState(0x92e8, 0xdd71, 0x30e0, 0x576f, 0xbb16, 0x860f, 0x0, 0x1);
        gbc.writeMem(0x92e8, { 0xc8 });
        gbc.writeMem(0xdd71, { 0x65, 0x57 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdd73, gbc.sp());
        EXPECT(0x5765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92e8));
        EXPECT(0x65, gbc.readMem(0xdd71));
        EXPECT(0x57, gbc.readMem(0xdd72));
        // C8 0048
        gbc.setState(0x3bc3, 0xec4e, 0x1500, 0x87cc, 0xe6d7, 0xd21b, 0x1, 0x0);
        gbc.writeMem(0x3bc3, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0x3bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0049
        gbc.setState(0xed68, 0x5d9, 0x37f0, 0x56f7, 0x2fdd, 0xce9, 0x1, 0x1);
        gbc.writeMem(0x5d9, { 0x8c, 0xad });
        gbc.writeMem(0xed68, { 0xc8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0xad8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xed68));
        // C8 004A
        gbc.setState(0xba5e, 0xc0cd, 0xd0e0, 0x1fd9, 0xd749, 0xec44, 0x1, 0x0);
        gbc.writeMem(0xba5e, { 0xc8 });
        gbc.writeMem(0xc0cd, { 0x88, 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x5288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xba5e));
        EXPECT(0x88, gbc.readMem(0xc0cd));
        EXPECT(0x52, gbc.readMem(0xc0ce));
        // C8 004C
        gbc.setState(0x494c, 0x41ea, 0x3730, 0x657b, 0xe3d4, 0x366f, 0x0, 0x0);
        gbc.writeMem(0x494c, { 0xc8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 004D
        gbc.setState(0x5525, 0xf56, 0xf5d0, 0x26ca, 0xfd90, 0x58a4, 0x0, 0x1);
        gbc.writeMem(0xf56, { 0xc4, 0x4d });
        gbc.writeMem(0x5525, { 0xc8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 004E
        gbc.setState(0xe526, 0x414b, 0x60e0, 0xa04c, 0xac28, 0xd61, 0x1, 0x1);
        gbc.writeMem(0x414b, { 0xbb, 0x43 });
        gbc.writeMem(0xe526, { 0xc8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x414d, gbc.sp());
        EXPECT(0x43bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe526));
        // C8 004F
        gbc.setState(0x8c7c, 0x1a66, 0xfba0, 0xe541, 0xf091, 0x5b09, 0x1, 0x0);
        gbc.writeMem(0x1a66, { 0x27, 0x76 });
        gbc.writeMem(0x8c7c, { 0xc8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8c7c));
        // C8 0050
        gbc.setState(0x7a0f, 0x3a9c, 0x4120, 0xed99, 0xc134, 0x15d8, 0x1, 0x1);
        gbc.writeMem(0x7a0f, { 0xc8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a9c, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0051
        gbc.setState(0x7e9d, 0x74fa, 0x18d0, 0x2755, 0x8a27, 0xd32b, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0x65, 0x5a });
        gbc.writeMem(0x7e9d, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x74fc, gbc.sp());
        EXPECT(0x5a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0052
        gbc.setState(0x4991, 0x6801, 0x9510, 0x5b96, 0x9634, 0xd6c8, 0x1, 0x0);
        gbc.writeMem(0x4991, { 0xc8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6801, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0053
        gbc.setState(0x5dcb, 0xa404, 0x9730, 0x2dcc, 0x53f2, 0x3f3c, 0x1, 0x1);
        gbc.writeMem(0x5dcb, { 0xc8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa404, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0054
        gbc.setState(0x7b3d, 0xc0a8, 0x8d80, 0x1421, 0x508b, 0x9080, 0x1, 0x1);
        gbc.writeMem(0x7b3d, { 0xc8 });
        gbc.writeMem(0xc0a8, { 0x78, 0x18 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x1878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0a8));
        EXPECT(0x18, gbc.readMem(0xc0a9));
        // C8 0055
        gbc.setState(0xbaf7, 0x9f92, 0x3280, 0x59bd, 0xb66d, 0x46f, 0x1, 0x0);
        gbc.writeMem(0x9f92, { 0xce, 0x65 });
        gbc.writeMem(0xbaf7, { 0xc8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9f92));
        EXPECT(0x65, gbc.readMem(0x9f93));
        EXPECT(0xc8, gbc.readMem(0xbaf7));
        // C8 0057
        gbc.setState(0xdfdb, 0x1ed, 0x5500, 0xd92e, 0x51e3, 0xe09, 0x0, 0x1);
        gbc.writeMem(0xdfdb, { 0xc8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1ed, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdfdb));
        // C8 0058
        gbc.setState(0x8a7b, 0xd325, 0xe820, 0x6e19, 0x6fc7, 0x5408, 0x1, 0x1);
        gbc.writeMem(0x8a7b, { 0xc8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd325, gbc.sp());
        EXPECT(0x8a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8a7b));
        // C8 0059
        gbc.setState(0x3675, 0xd084, 0x7c70, 0xeb3c, 0xefdd, 0x89ae, 0x1, 0x0);
        gbc.writeMem(0x3675, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd084, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 005A
        gbc.setState(0x5bf6, 0xaae3, 0x4d0, 0x862f, 0x20a4, 0x812c, 0x1, 0x0);
        gbc.writeMem(0x5bf6, { 0xc8 });
        gbc.writeMem(0xaae3, { 0x16, 0xb5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaae5, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaae3));
        EXPECT(0xb5, gbc.readMem(0xaae4));
        // C8 005B
        gbc.setState(0x6b18, 0xfc95, 0xe040, 0x2cce, 0xf3a4, 0x7d59, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 005C
        gbc.setState(0x1e3e, 0xa3d3, 0xbaa0, 0x5bb6, 0xfe1f, 0xaade, 0x0, 0x1);
        gbc.writeMem(0x1e3e, { 0xc8 });
        gbc.writeMem(0xa3d3, { 0xb8, 0xbd });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa3d5, gbc.sp());
        EXPECT(0xbdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa3d3));
        EXPECT(0xbd, gbc.readMem(0xa3d4));
        // C8 005D
        gbc.setState(0x6e28, 0x3951, 0x190, 0x2b0b, 0xe09c, 0xfe56, 0x0, 0x1);
        gbc.writeMem(0x3951, { 0x72, 0x92 });
        gbc.writeMem(0x6e28, { 0xc8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 005E
        gbc.setState(0x55c7, 0x21b2, 0x34e0, 0x922b, 0x7120, 0xc3d, 0x1, 0x0);
        gbc.writeMem(0x21b2, { 0xd2, 0xd9 });
        gbc.writeMem(0x55c7, { 0xc8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x21b4, gbc.sp());
        EXPECT(0xd9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 005F
        gbc.setState(0x9cd, 0x7c49, 0xb380, 0x3949, 0x11da, 0x1b1a, 0x1, 0x1);
        gbc.writeMem(0x9cd, { 0xc8 });
        gbc.writeMem(0x7c49, { 0x8f, 0x16 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0x168f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0060
        gbc.setState(0x4fa1, 0xea89, 0xfc80, 0xdd8e, 0x6f64, 0x70f7, 0x1, 0x0);
        gbc.writeMem(0x4fa1, { 0xc8 });
        gbc.writeMem(0xea89, { 0xa9, 0x1b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xea89));
        EXPECT(0x1b, gbc.readMem(0xea8a));
        // C8 0061
        gbc.setState(0xb07e, 0x1413, 0x3610, 0xcd0a, 0xed77, 0x3f94, 0x0, 0x1);
        gbc.writeMem(0xb07e, { 0xc8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1413, gbc.sp());
        EXPECT(0xb07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb07e));
        // C8 0062
        gbc.setState(0xc192, 0x1bbd, 0xb7f0, 0xebc0, 0x442f, 0xc46d, 0x1, 0x0);
        gbc.writeMem(0x1bbd, { 0x68, 0x6c });
        gbc.writeMem(0xc192, { 0xc8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1bbf, gbc.sp());
        EXPECT(0x6c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc192));
        // C8 0063
        gbc.setState(0x9731, 0x2f24, 0x22f0, 0xdfa5, 0x9e29, 0x6cb3, 0x1, 0x0);
        gbc.writeMem(0x2f24, { 0x33, 0xbb });
        gbc.writeMem(0x9731, { 0xc8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0xbb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9731));
        // C8 0064
        gbc.setState(0x78c2, 0x844a, 0x9010, 0x79a8, 0xde01, 0xb59e, 0x1, 0x1);
        gbc.writeMem(0x78c2, { 0xc8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0065
        gbc.setState(0xee1e, 0xac4b, 0x36b0, 0xb093, 0x2f8c, 0xf3cd, 0x0, 0x1);
        gbc.writeMem(0xac4b, { 0xb2, 0x7b });
        gbc.writeMem(0xee1e, { 0xc8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0x7bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xac4b));
        EXPECT(0x7b, gbc.readMem(0xac4c));
        EXPECT(0xc8, gbc.readMem(0xee1e));
        // C8 0066
        gbc.setState(0x9d8e, 0x1448, 0xac20, 0xa52e, 0xcf52, 0x93cb, 0x0, 0x1);
        gbc.writeMem(0x9d8e, { 0xc8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0x9d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9d8e));
        // C8 0067
        gbc.setState(0x3a33, 0xe9fe, 0x83b0, 0x8ff4, 0x7048, 0xbdb1, 0x0, 0x1);
        gbc.writeMem(0x3a33, { 0xc8 });
        gbc.writeMem(0xe9fe, { 0xbb, 0x78 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea00, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe9fe));
        EXPECT(0x78, gbc.readMem(0xe9ff));
        // C8 0068
        gbc.setState(0xe2fb, 0x8e02, 0xde50, 0xebc, 0x795a, 0x9694, 0x1, 0x0);
        gbc.writeMem(0xe2fb, { 0xc8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8e02, gbc.sp());
        EXPECT(0xe2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe2fb));
        // C8 0069
        gbc.setState(0xecfa, 0x5e8, 0x1050, 0xc23f, 0x939, 0x8d77, 0x1, 0x0);
        gbc.writeMem(0xecfa, { 0xc8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0xecfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xecfa));
        // C8 006A
        gbc.setState(0x8baf, 0xe0dc, 0x9b40, 0x2cad, 0xf849, 0x4c2d, 0x1, 0x0);
        gbc.writeMem(0x8baf, { 0xc8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0dc, gbc.sp());
        EXPECT(0x8bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8baf));
        // C8 006B
        gbc.setState(0xab1b, 0x884f, 0x52b0, 0x4d29, 0x379, 0x96ec, 0x0, 0x0);
        gbc.writeMem(0x884f, { 0x25, 0xc4 });
        gbc.writeMem(0xab1b, { 0xc8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8851, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x884f));
        EXPECT(0xc4, gbc.readMem(0x8850));
        EXPECT(0xc8, gbc.readMem(0xab1b));
        // C8 006C
        gbc.setState(0x72fc, 0xfa16, 0xab0, 0xbcf9, 0x82c7, 0xe7d6, 0x0, 0x0);
        gbc.writeMem(0x72fc, { 0xc8 });
        gbc.writeMem(0xfa16, { 0x0, 0xfc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa18, gbc.sp());
        EXPECT(0xfc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xfa16));
        EXPECT(0xfc, gbc.readMem(0xfa17));
        // C8 006E
        gbc.setState(0x88ce, 0x25f4, 0xd210, 0xa3bf, 0x3e0e, 0x78c2, 0x0, 0x1);
        gbc.writeMem(0x88ce, { 0xc8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x25f4, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x88ce));
        // C8 006F
        gbc.setState(0x6099, 0x6ca9, 0xa8a0, 0x892, 0x4816, 0x5c78, 0x0, 0x1);
        gbc.writeMem(0x6099, { 0xc8 });
        gbc.writeMem(0x6ca9, { 0x88, 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6cab, gbc.sp());
        EXPECT(0x4688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0070
        gbc.setState(0x4db3, 0xdfc9, 0x73d0, 0xa901, 0xf6cb, 0x44ca, 0x1, 0x1);
        gbc.writeMem(0x4db3, { 0xc8 });
        gbc.writeMem(0xdfc9, { 0x89, 0x47 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdfcb, gbc.sp());
        EXPECT(0x4789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdfc9));
        EXPECT(0x47, gbc.readMem(0xdfca));
        // C8 0071
        gbc.setState(0xb93e, 0x693d, 0xa2f0, 0x9e68, 0x5149, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x693d, { 0x19, 0x1 });
        gbc.writeMem(0xb93e, { 0xc8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb93e));
        // C8 0072
        gbc.setState(0x900b, 0xc091, 0x8750, 0xf54d, 0x49c6, 0x8980, 0x1, 0x0);
        gbc.writeMem(0x900b, { 0xc8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc091, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x900b));
        // C8 0073
        gbc.setState(0x7f22, 0x8f28, 0xfbe0, 0x9d65, 0x1ebc, 0x7a79, 0x0, 0x1);
        gbc.writeMem(0x7f22, { 0xc8 });
        gbc.writeMem(0x8f28, { 0xec, 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8f28));
        EXPECT(0x61, gbc.readMem(0x8f29));
        // C8 0074
        gbc.setState(0x46ff, 0xbb70, 0xeed0, 0xb306, 0xe0f6, 0x8764, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xc8 });
        gbc.writeMem(0xbb70, { 0x86, 0xeb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbb72, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbb70));
        EXPECT(0xeb, gbc.readMem(0xbb71));
        // C8 0075
        gbc.setState(0x2047, 0x2011, 0xdfa0, 0xae4e, 0xb2df, 0x2e42, 0x1, 0x0);
        gbc.writeMem(0x2011, { 0x34, 0x63 });
        gbc.writeMem(0x2047, { 0xc8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0x6334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0076
        gbc.setState(0xd906, 0xf152, 0xef70, 0xd1c4, 0x3201, 0xf05b, 0x0, 0x0);
        gbc.writeMem(0xd906, { 0xc8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf152, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd906));
        // C8 0077
        gbc.setState(0x72c3, 0x3767, 0xa980, 0x487a, 0x3fe, 0x8f6a, 0x1, 0x1);
        gbc.writeMem(0x3767, { 0xed, 0xae });
        gbc.writeMem(0x72c3, { 0xc8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0078
        gbc.setState(0xc8a, 0x943b, 0x3a60, 0x332b, 0x6ef0, 0x3cb, 0x0, 0x1);
        gbc.writeMem(0xc8a, { 0xc8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0xc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 007A
        gbc.setState(0x5296, 0xc7fb, 0x31d0, 0x2228, 0xe360, 0x49df, 0x0, 0x0);
        gbc.writeMem(0x5296, { 0xc8 });
        gbc.writeMem(0xc7fb, { 0x5c, 0xbb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0xbb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc7fb));
        EXPECT(0xbb, gbc.readMem(0xc7fc));
        // C8 007B
        gbc.setState(0x5e14, 0x63c9, 0x77e0, 0xf233, 0x3f9b, 0x9b9d, 0x1, 0x1);
        gbc.writeMem(0x5e14, { 0xc8 });
        gbc.writeMem(0x63c9, { 0x6e, 0xf8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x63cb, gbc.sp());
        EXPECT(0xf86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 007C
        gbc.setState(0x92fa, 0x4b4d, 0xe5d0, 0x1dae, 0xd487, 0x9e33, 0x0, 0x0);
        gbc.writeMem(0x4b4d, { 0x8c, 0x86 });
        gbc.writeMem(0x92fa, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b4f, gbc.sp());
        EXPECT(0x868c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92fa));
        // C8 007D
        gbc.setState(0x8931, 0xa100, 0xbaa0, 0x3275, 0x6f99, 0x6b4d, 0x1, 0x0);
        gbc.writeMem(0x8931, { 0xc8 });
        gbc.writeMem(0xa100, { 0x94, 0x8c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x8c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8931));
        EXPECT(0x94, gbc.readMem(0xa100));
        EXPECT(0x8c, gbc.readMem(0xa101));
        // C8 007E
        gbc.setState(0x18f5, 0x8781, 0xe5d0, 0xd3e7, 0x390c, 0xa80f, 0x1, 0x1);
        gbc.writeMem(0x18f5, { 0xc8 });
        gbc.writeMem(0x8781, { 0x6d, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8783, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8781));
        EXPECT(0xa4, gbc.readMem(0x8782));
        // C8 007F
        gbc.setState(0xb3ae, 0xcfb0, 0x4d60, 0x9ea9, 0xdbe9, 0xe990, 0x1, 0x1);
        gbc.writeMem(0xb3ae, { 0xc8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0xb3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb3ae));
        // C8 0080
        gbc.setState(0xe379, 0xf825, 0x1460, 0x369d, 0x5ef5, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0xe379, { 0xc8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf825, gbc.sp());
        EXPECT(0xe37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe379));
        // C8 0081
        gbc.setState(0xcb0d, 0xc061, 0x3800, 0x5cd3, 0x9553, 0x910b, 0x1, 0x0);
        gbc.writeMem(0xcb0d, { 0xc8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0xcb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcb0d));
        // C8 0082
        gbc.setState(0x437d, 0x82d1, 0xc960, 0x82fd, 0x53da, 0xa659, 0x1, 0x0);
        gbc.writeMem(0x437d, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x82d1, gbc.sp());
        EXPECT(0x437e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0084
        gbc.setState(0x7af9, 0x6d83, 0x4140, 0x8c28, 0xde0d, 0xe2e4, 0x1, 0x1);
        gbc.writeMem(0x7af9, { 0xc8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d83, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0085
        gbc.setState(0x4b04, 0x631a, 0xca50, 0xf27, 0xd775, 0x7752, 0x0, 0x1);
        gbc.writeMem(0x4b04, { 0xc8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x631a, gbc.sp());
        EXPECT(0x4b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0086
        gbc.setState(0x5c14, 0x88e7, 0xb1a0, 0xaba9, 0x51dd, 0xc30f, 0x1, 0x1);
        gbc.writeMem(0x5c14, { 0xc8 });
        gbc.writeMem(0x88e7, { 0xd0, 0xd7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x88e7));
        EXPECT(0xd7, gbc.readMem(0x88e8));
        // C8 0088
        gbc.setState(0x5173, 0xa6ae, 0x6250, 0xef71, 0x4c6, 0x417f, 0x1, 0x1);
        gbc.writeMem(0x5173, { 0xc8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa6ae, gbc.sp());
        EXPECT(0x5174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0089
        gbc.setState(0x35f8, 0x28c1, 0xb180, 0xcf8c, 0xf893, 0x2d71, 0x0, 0x0);
        gbc.writeMem(0x28c1, { 0x75, 0x84 });
        gbc.writeMem(0x35f8, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0x8475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 008A
        gbc.setState(0x4f58, 0x570b, 0xdd50, 0xcbc, 0x5d2f, 0xada, 0x0, 0x1);
        gbc.writeMem(0x4f58, { 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x4f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 008B
        gbc.setState(0xdd0e, 0x945d, 0x8930, 0x7e43, 0x3ce3, 0xcbd3, 0x0, 0x1);
        gbc.writeMem(0xdd0e, { 0xc8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x945d, gbc.sp());
        EXPECT(0xdd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdd0e));
        // C8 008C
        gbc.setState(0xad7d, 0x3381, 0x3a30, 0x30af, 0xfa3, 0xe23b, 0x0, 0x0);
        gbc.writeMem(0xad7d, { 0xc8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3381, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xad7d));
        // C8 008D
        gbc.setState(0x5e0, 0xb2b5, 0x8f00, 0xd97d, 0xe809, 0xcdcc, 0x0, 0x0);
        gbc.writeMem(0x5e0, { 0xc8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0x5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 008E
        gbc.setState(0x90fc, 0xf055, 0x4870, 0xd0b9, 0x6d4e, 0x7ae6, 0x0, 0x0);
        gbc.writeMem(0x90fc, { 0xc8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0x90fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x90fc));
        // C8 008F
        gbc.setState(0x5cec, 0x8c3, 0x72a0, 0xbc7f, 0x1609, 0xce03, 0x0, 0x0);
        gbc.writeMem(0x8c3, { 0xe0, 0x38 });
        gbc.writeMem(0x5cec, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8c5, gbc.sp());
        EXPECT(0x38e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0090
        gbc.setState(0x9c62, 0x10f4, 0x7840, 0x24ed, 0x10d6, 0xcc4b, 0x0, 0x1);
        gbc.writeMem(0x9c62, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x10f4, gbc.sp());
        EXPECT(0x9c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9c62));
        // C8 0091
        gbc.setState(0x8ead, 0x23c3, 0x62e0, 0xa9aa, 0x4251, 0x7046, 0x1, 0x1);
        gbc.writeMem(0x23c3, { 0x46, 0x6e });
        gbc.writeMem(0x8ead, { 0xc8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8ead));
        // C8 0092
        gbc.setState(0x8649, 0x5cba, 0xe450, 0x2feb, 0xe3c9, 0xe7ae, 0x1, 0x0);
        gbc.writeMem(0x8649, { 0xc8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8649));
        // C8 0093
        gbc.setState(0x7ec6, 0xab65, 0x9e20, 0x8fcb, 0x8ac9, 0x2bce, 0x0, 0x0);
        gbc.writeMem(0x7ec6, { 0xc8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xab65, gbc.sp());
        EXPECT(0x7ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0094
        gbc.setState(0xc4d3, 0x7759, 0x8080, 0x7810, 0x4a65, 0xd21a, 0x0, 0x1);
        gbc.writeMem(0x7759, { 0x23, 0xa4 });
        gbc.writeMem(0xc4d3, { 0xc8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0xa423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc4d3));
        // C8 0095
        gbc.setState(0xddbd, 0x9967, 0x4240, 0x7d33, 0x437f, 0x5ea2, 0x1, 0x1);
        gbc.writeMem(0xddbd, { 0xc8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0xddbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xddbd));
        // C8 0096
        gbc.setState(0x4dd1, 0xe810, 0x73e0, 0x4712, 0xb400, 0x81f5, 0x1, 0x1);
        gbc.writeMem(0x4dd1, { 0xc8 });
        gbc.writeMem(0xe810, { 0x4, 0xb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe812, gbc.sp());
        EXPECT(0xb04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe810));
        EXPECT(0xb, gbc.readMem(0xe811));
        // C8 0098
        gbc.setState(0xc12d, 0x5199, 0x72e0, 0x2096, 0x9a9a, 0x4b02, 0x0, 0x1);
        gbc.writeMem(0x5199, { 0x10, 0x72 });
        gbc.writeMem(0xc12d, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x519b, gbc.sp());
        EXPECT(0x7210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc12d));
        // C8 0099
        gbc.setState(0x6191, 0xca57, 0x6560, 0x1782, 0x28a6, 0x420a, 0x1, 0x1);
        gbc.writeMem(0x6191, { 0xc8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xca57, gbc.sp());
        EXPECT(0x6192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 009A
        gbc.setState(0xdcbd, 0x195, 0xd8a0, 0x63ce, 0x4e25, 0x616d, 0x1, 0x1);
        gbc.writeMem(0x195, { 0x4d, 0xc1 });
        gbc.writeMem(0xdcbd, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0xc14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdcbd));
        // C8 009C
        gbc.setState(0x9529, 0x4261, 0x640, 0x99ba, 0x7291, 0x1c8b, 0x1, 0x1);
        gbc.writeMem(0x9529, { 0xc8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4261, gbc.sp());
        EXPECT(0x952a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9529));
        // C8 009D
        gbc.setState(0xa956, 0xc495, 0x50e0, 0x93c5, 0x1ce1, 0xb951, 0x1, 0x1);
        gbc.writeMem(0xa956, { 0xc8 });
        gbc.writeMem(0xc495, { 0xdf, 0x7e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa956));
        EXPECT(0xdf, gbc.readMem(0xc495));
        EXPECT(0x7e, gbc.readMem(0xc496));
        // C8 009E
        gbc.setState(0x804e, 0xfdae, 0xdbf0, 0x2e42, 0xc218, 0x9753, 0x1, 0x0);
        gbc.writeMem(0x804e, { 0xc8 });
        gbc.writeMem(0xfdae, { 0x9c, 0x41 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfdb0, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x804e));
        EXPECT(0x9c, gbc.readMem(0xfdae));
        EXPECT(0x41, gbc.readMem(0xfdaf));
        // C8 009F
        gbc.setState(0x435c, 0x6143, 0x61b0, 0xf213, 0xb1a4, 0x1352, 0x0, 0x0);
        gbc.writeMem(0x435c, { 0xc8 });
        gbc.writeMem(0x6143, { 0x4b, 0x19 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x194b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00A0
        gbc.setState(0x299d, 0x6395, 0x1040, 0x9885, 0x7c7, 0xbb03, 0x1, 0x0);
        gbc.writeMem(0x299d, { 0xc8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6395, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00A1
        gbc.setState(0xe511, 0xaecc, 0x56f0, 0xdcaf, 0xefc, 0x31d8, 0x0, 0x1);
        gbc.writeMem(0xaecc, { 0xfa, 0x12 });
        gbc.writeMem(0xe511, { 0xc8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xaece, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xaecc));
        EXPECT(0x12, gbc.readMem(0xaecd));
        EXPECT(0xc8, gbc.readMem(0xe511));
        // C8 00A2
        gbc.setState(0xd1ec, 0xe3d4, 0x5e0, 0x8e28, 0xf226, 0x5557, 0x0, 0x1);
        gbc.writeMem(0xd1ec, { 0xc8 });
        gbc.writeMem(0xe3d4, { 0xf6, 0xb8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe3d6, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd1ec));
        EXPECT(0xf6, gbc.readMem(0xe3d4));
        EXPECT(0xb8, gbc.readMem(0xe3d5));
        // C8 00A3
        gbc.setState(0x958d, 0xdce9, 0x99a0, 0x2acf, 0xa4e5, 0x53a4, 0x0, 0x0);
        gbc.writeMem(0x958d, { 0xc8 });
        gbc.writeMem(0xdce9, { 0x6d, 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdceb, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x958d));
        EXPECT(0x6d, gbc.readMem(0xdce9));
        EXPECT(0x7a, gbc.readMem(0xdcea));
        // C8 00A4
        gbc.setState(0x7e17, 0x723c, 0xb740, 0x8a94, 0x3df3, 0x677c, 0x0, 0x1);
        gbc.writeMem(0x7e17, { 0xc8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x723c, gbc.sp());
        EXPECT(0x7e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00A5
        gbc.setState(0xb5d, 0x4cd6, 0x2f90, 0x1ceb, 0x9845, 0x896d, 0x1, 0x1);
        gbc.writeMem(0xb5d, { 0xc8 });
        gbc.writeMem(0x4cd6, { 0xa, 0x40 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0x400a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00A6
        gbc.setState(0x633c, 0xea84, 0xd430, 0x3a95, 0x637, 0x476d, 0x0, 0x1);
        gbc.writeMem(0x633c, { 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xea84, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00A7
        gbc.setState(0x4a7b, 0x4adf, 0xfbc0, 0x7f41, 0xfa57, 0xcff5, 0x0, 0x0);
        gbc.writeMem(0x4a7b, { 0xc8 });
        gbc.writeMem(0x4adf, { 0x5f, 0xfd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4ae1, gbc.sp());
        EXPECT(0xfd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00A8
        gbc.setState(0x6e25, 0xdcf, 0x9340, 0x3459, 0xbbdd, 0xf0b6, 0x1, 0x1);
        gbc.writeMem(0x6e25, { 0xc8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdcf, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00AA
        gbc.setState(0x7eb7, 0xd0a4, 0x2390, 0xb92d, 0xf12f, 0xe489, 0x1, 0x1);
        gbc.writeMem(0x7eb7, { 0xc8 });
        gbc.writeMem(0xd0a4, { 0xf7, 0x4e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd0a4));
        EXPECT(0x4e, gbc.readMem(0xd0a5));
        // C8 00AB
        gbc.setState(0xc747, 0xdcbc, 0x6110, 0x2227, 0x1a2f, 0x7032, 0x0, 0x1);
        gbc.writeMem(0xc747, { 0xc8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdcbc, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc747));
        // C8 00AC
        gbc.setState(0xcde3, 0xc114, 0xb900, 0x2385, 0x8b1d, 0xa1f7, 0x0, 0x1);
        gbc.writeMem(0xcde3, { 0xc8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc114, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcde3));
        // C8 00AD
        gbc.setState(0x65f8, 0x3875, 0xe140, 0x85e3, 0x195c, 0xa791, 0x0, 0x0);
        gbc.writeMem(0x65f8, { 0xc8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3875, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00AE
        gbc.setState(0xbaf0, 0x117c, 0x3d40, 0x4091, 0x44fe, 0x9144, 0x0, 0x0);
        gbc.writeMem(0xbaf0, { 0xc8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x117c, gbc.sp());
        EXPECT(0xbaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbaf0));
        // C8 00AF
        gbc.setState(0xefb4, 0xe1e3, 0xc1b0, 0x9960, 0x35d7, 0xb1e2, 0x1, 0x0);
        gbc.writeMem(0xe1e3, { 0xe8, 0xee });
        gbc.writeMem(0xefb4, { 0xc8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe1e5, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xe1e3));
        EXPECT(0xee, gbc.readMem(0xe1e4));
        EXPECT(0xc8, gbc.readMem(0xefb4));
        // C8 00B0
        gbc.setState(0x4630, 0xb143, 0x6db0, 0x120a, 0xf26f, 0x6f1a, 0x1, 0x0);
        gbc.writeMem(0x4630, { 0xc8 });
        gbc.writeMem(0xb143, { 0xd7, 0x90 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb143));
        EXPECT(0x90, gbc.readMem(0xb144));
        // C8 00B1
        gbc.setState(0xa0a2, 0x657b, 0xb170, 0x2efd, 0xd040, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0xa0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa0a2));
        // C8 00B2
        gbc.setState(0x509c, 0xdfe5, 0xc4a0, 0x6fee, 0x352f, 0x4cbd, 0x0, 0x1);
        gbc.writeMem(0x509c, { 0xc8 });
        gbc.writeMem(0xdfe5, { 0xbf, 0x5f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdfe5));
        EXPECT(0x5f, gbc.readMem(0xdfe6));
        // C8 00B3
        gbc.setState(0xca12, 0x8492, 0x4220, 0xb4d, 0x3bf7, 0x6be3, 0x1, 0x0);
        gbc.writeMem(0xca12, { 0xc8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xca12));
        // C8 00B4
        gbc.setState(0x5c77, 0x853, 0x7a50, 0xc69c, 0x7538, 0xd32, 0x0, 0x0);
        gbc.writeMem(0x5c77, { 0xc8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0x5c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00B5
        gbc.setState(0x4f7, 0x87e7, 0xee90, 0x1dae, 0x4c96, 0x136a, 0x1, 0x0);
        gbc.writeMem(0x4f7, { 0xc8 });
        gbc.writeMem(0x87e7, { 0xf9, 0xc4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x87e7));
        EXPECT(0xc4, gbc.readMem(0x87e8));
        // C8 00B6
        gbc.setState(0xc49f, 0xc4d2, 0x45d0, 0x3fff, 0x543d, 0xf8d2, 0x1, 0x0);
        gbc.writeMem(0xc49f, { 0xc8 });
        gbc.writeMem(0xc4d2, { 0x46, 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc49f));
        EXPECT(0x46, gbc.readMem(0xc4d2));
        EXPECT(0xc, gbc.readMem(0xc4d3));
        // C8 00B7
        gbc.setState(0x1a1c, 0x6ad4, 0x8030, 0x7367, 0xd987, 0x3406, 0x0, 0x0);
        gbc.writeMem(0x1a1c, { 0xc8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6ad4, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00B8
        gbc.setState(0xcc0, 0x9f02, 0x1e70, 0xcad2, 0x6b8b, 0x7622, 0x1, 0x0);
        gbc.writeMem(0xcc0, { 0xc8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00B9
        gbc.setState(0xc605, 0xe4c9, 0xeb70, 0xb4dc, 0xd2f5, 0x2735, 0x0, 0x1);
        gbc.writeMem(0xc605, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe4c9, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc605));
        // C8 00BA
        gbc.setState(0x7b4e, 0x4be0, 0xfc10, 0x2b06, 0x9221, 0x7c71, 0x1, 0x0);
        gbc.writeMem(0x7b4e, { 0xc8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4be0, gbc.sp());
        EXPECT(0x7b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00BB
        gbc.setState(0xeb89, 0xf57d, 0xfa60, 0xf123, 0x9cde, 0x3de0, 0x0, 0x0);
        gbc.writeMem(0xeb89, { 0xc8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xeb89));
        // C8 00BC
        gbc.setState(0x3eff, 0xa776, 0x1560, 0x2a15, 0x15e, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00BD
        gbc.setState(0x2526, 0xac76, 0xdb50, 0xe41e, 0xce76, 0xadb1, 0x0, 0x1);
        gbc.writeMem(0x2526, { 0xc8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x2527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00BE
        gbc.setState(0xbc4e, 0xe883, 0xc10, 0x9dd5, 0xafce, 0x7993, 0x0, 0x0);
        gbc.writeMem(0xbc4e, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe883, gbc.sp());
        EXPECT(0xbc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbc4e));
        // C8 00BF
        gbc.setState(0x5876, 0xc8ba, 0xcc90, 0x8277, 0x610b, 0xb3ea, 0x1, 0x0);
        gbc.writeMem(0x5876, { 0xc8 });
        gbc.writeMem(0xc8ba, { 0xa1, 0x90 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc8bc, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8ba));
        EXPECT(0x90, gbc.readMem(0xc8bb));
        // C8 00C0
        gbc.setState(0x127d, 0xe01f, 0xab90, 0xea16, 0x3720, 0x153f, 0x1, 0x1);
        gbc.writeMem(0x127d, { 0xc8 });
        gbc.writeMem(0xe01f, { 0xb5, 0x5a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x5ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe01f));
        EXPECT(0x5a, gbc.readMem(0xe020));
        // C8 00C1
        gbc.setState(0xb29c, 0xfd1d, 0x8cf0, 0x9526, 0x9dab, 0xd97b, 0x1, 0x1);
        gbc.writeMem(0xb29c, { 0xc8 });
        gbc.writeMem(0xfd1d, { 0x25, 0xca });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb29c));
        EXPECT(0x25, gbc.readMem(0xfd1d));
        EXPECT(0xca, gbc.readMem(0xfd1e));
        // C8 00C4
        gbc.setState(0xed14, 0x1b6b, 0x5650, 0x3697, 0xf68a, 0xf52b, 0x0, 0x0);
        gbc.writeMem(0xed14, { 0xc8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1b6b, gbc.sp());
        EXPECT(0xed15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xed14));
        // C8 00C5
        gbc.setState(0xcfa7, 0x68d3, 0x2300, 0xd07f, 0x9e91, 0x184c, 0x0, 0x1);
        gbc.writeMem(0xcfa7, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x68d3, gbc.sp());
        EXPECT(0xcfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcfa7));
        // C8 00C6
        gbc.setState(0xd9c8, 0xa451, 0xc00, 0x6cbf, 0x2fad, 0xf57f, 0x0, 0x0);
        gbc.writeMem(0xd9c8, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa451, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd9c8));
        // C8 00C7
        gbc.setState(0x5cfb, 0x7ecb, 0xc450, 0x66c0, 0x9d4, 0x1986, 0x1, 0x1);
        gbc.writeMem(0x5cfb, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x5cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00C8
        gbc.setState(0xc6f3, 0x76a5, 0xec40, 0xc7ff, 0x715d, 0x5667, 0x1, 0x1);
        gbc.writeMem(0xc6f3, { 0xc8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x76a5, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc6f3));
        // C8 00C9
        gbc.setState(0x600b, 0x85f5, 0xbf20, 0x4b79, 0xe30d, 0x9613, 0x0, 0x0);
        gbc.writeMem(0x600b, { 0xc8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00CA
        gbc.setState(0xdc00, 0x52d2, 0x3430, 0xf3d8, 0x6bb6, 0x403f, 0x0, 0x0);
        gbc.writeMem(0xdc00, { 0xc8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdc00));
        // C8 00CB
        gbc.setState(0xcce6, 0xab26, 0xc330, 0x4f9b, 0x610a, 0x18df, 0x0, 0x0);
        gbc.writeMem(0xcce6, { 0xc8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xab26, gbc.sp());
        EXPECT(0xcce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcce6));
        // C8 00CC
        gbc.setState(0x65ac, 0xab0c, 0x43c0, 0x8a97, 0x390e, 0x2222, 0x0, 0x0);
        gbc.writeMem(0x65ac, { 0xc8 });
        gbc.writeMem(0xab0c, { 0xf8, 0x99 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xab0c));
        EXPECT(0x99, gbc.readMem(0xab0d));
        // C8 00CE
        gbc.setState(0xe052, 0xa3a3, 0x8ff0, 0xc779, 0x7413, 0xadf8, 0x0, 0x0);
        gbc.writeMem(0xa3a3, { 0x5, 0x55 });
        gbc.writeMem(0xe052, { 0xc8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa3a5, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xa3a3));
        EXPECT(0x55, gbc.readMem(0xa3a4));
        EXPECT(0xc8, gbc.readMem(0xe052));
        // C8 00CF
        gbc.setState(0x97f9, 0x2168, 0x44e0, 0xf952, 0x1692, 0xc143, 0x0, 0x0);
        gbc.writeMem(0x2168, { 0x65, 0xf3 });
        gbc.writeMem(0x97f9, { 0xc8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0xf365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x97f9));
        // C8 00D0
        gbc.setState(0x1e7d, 0xe09d, 0xb3a0, 0x5e6b, 0xb01, 0x2378, 0x1, 0x1);
        gbc.writeMem(0x1e7d, { 0xc8 });
        gbc.writeMem(0xe09d, { 0xc9, 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe09d));
        EXPECT(0x3c, gbc.readMem(0xe09e));
        // C8 00D1
        gbc.setState(0xda90, 0x889d, 0xd920, 0xa3ff, 0xd237, 0x3f72, 0x1, 0x0);
        gbc.writeMem(0xda90, { 0xc8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x889d, gbc.sp());
        EXPECT(0xda91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xda90));
        // C8 00D2
        gbc.setState(0x5074, 0x70, 0xb220, 0x7750, 0xb68e, 0x857f, 0x1, 0x0);
        gbc.writeMem(0x5074, { 0xc8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x5075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00D3
        gbc.setState(0xe7d0, 0xcc11, 0xb70, 0xb490, 0x43ca, 0x8ff5, 0x0, 0x1);
        gbc.writeMem(0xe7d0, { 0xc8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0xe7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe7d0));
        // C8 00D5
        gbc.setState(0x2d27, 0xca2f, 0x3580, 0xfc50, 0x9d06, 0x3797, 0x1, 0x0);
        gbc.writeMem(0x2d27, { 0xc8 });
        gbc.writeMem(0xca2f, { 0x8a, 0x79 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0x798a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xca2f));
        EXPECT(0x79, gbc.readMem(0xca30));
        // C8 00D6
        gbc.setState(0xae6a, 0x18e8, 0x6dd0, 0x9e5b, 0xebb2, 0x62a3, 0x1, 0x1);
        gbc.writeMem(0x18e8, { 0xf4, 0xba });
        gbc.writeMem(0xae6a, { 0xc8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x18ea, gbc.sp());
        EXPECT(0xbaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xae6a));
        // C8 00D7
        gbc.setState(0x52cf, 0x593c, 0x8620, 0x88f8, 0x2625, 0x5e53, 0x0, 0x0);
        gbc.writeMem(0x52cf, { 0xc8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x593c, gbc.sp());
        EXPECT(0x52d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00D8
        gbc.setState(0x63b2, 0x6682, 0x9430, 0x8a20, 0x41e5, 0xcb08, 0x1, 0x1);
        gbc.writeMem(0x63b2, { 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0x63b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00D9
        gbc.setState(0x61bb, 0xf5b2, 0xc320, 0xfd3f, 0xed6f, 0x6baa, 0x1, 0x0);
        gbc.writeMem(0x61bb, { 0xc8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf5b2, gbc.sp());
        EXPECT(0x61bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00DA
        gbc.setState(0xea3d, 0xf43e, 0x9d40, 0x260e, 0x21ff, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0xea3d, { 0xc8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf43e, gbc.sp());
        EXPECT(0xea3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xea3d));
        // C8 00DB
        gbc.setState(0x1305, 0x1412, 0xcec0, 0x785c, 0xbc97, 0x7c9a, 0x0, 0x1);
        gbc.writeMem(0x1305, { 0xc8 });
        gbc.writeMem(0x1412, { 0xe6, 0x1e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1414, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00DC
        gbc.setState(0x1423, 0xe87f, 0x10, 0x43b4, 0xa810, 0xa409, 0x0, 0x0);
        gbc.writeMem(0x1423, { 0xc8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe87f, gbc.sp());
        EXPECT(0x1424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00DD
        gbc.setState(0xc81, 0x6086, 0xa790, 0xd239, 0x7bb, 0xa6d5, 0x0, 0x0);
        gbc.writeMem(0xc81, { 0xc8 });
        gbc.writeMem(0x6086, { 0x8d, 0xd9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6088, gbc.sp());
        EXPECT(0xd98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00DE
        gbc.setState(0xe01f, 0xe68, 0xe550, 0x9642, 0x275e, 0xecce, 0x0, 0x0);
        gbc.writeMem(0xe01f, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0xe020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe01f));
        // C8 00DF
        gbc.setState(0xef9f, 0x1a5, 0xa450, 0x65ff, 0xa2ef, 0x9a64, 0x0, 0x0);
        gbc.writeMem(0xef9f, { 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0xefa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef9f));
        // C8 00E0
        gbc.setState(0x886f, 0xd3a4, 0x1840, 0x231f, 0xf1b5, 0xfe7c, 0x1, 0x0);
        gbc.writeMem(0x886f, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x8870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x886f));
        // C8 00E1
        gbc.setState(0x1d16, 0xc045, 0xe9d0, 0xc6f8, 0x75c3, 0x6375, 0x1, 0x1);
        gbc.writeMem(0x1d16, { 0xc8 });
        gbc.writeMem(0xc045, { 0x82, 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0x7d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc045));
        EXPECT(0x7d, gbc.readMem(0xc046));
        // C8 00E2
        gbc.setState(0xa453, 0xb159, 0x1120, 0x6d88, 0xd4b8, 0x8a84, 0x1, 0x1);
        gbc.writeMem(0xa453, { 0xc8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb159, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa453));
        // C8 00E3
        gbc.setState(0x2b2d, 0xbede, 0x990, 0xbef4, 0x5a72, 0x7713, 0x0, 0x1);
        gbc.writeMem(0x2b2d, { 0xc8 });
        gbc.writeMem(0xbede, { 0x5f, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xb15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbede));
        EXPECT(0xb1, gbc.readMem(0xbedf));
        // C8 00E4
        gbc.setState(0x6ddb, 0xc880, 0x2480, 0xc2d2, 0x5d55, 0x9d95, 0x0, 0x0);
        gbc.writeMem(0x6ddb, { 0xc8 });
        gbc.writeMem(0xc880, { 0xae, 0x1f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc882, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc880));
        EXPECT(0x1f, gbc.readMem(0xc881));
        // C8 00E6
        gbc.setState(0xa44c, 0xd6cc, 0xd180, 0xc881, 0x6f25, 0x6ae7, 0x0, 0x1);
        gbc.writeMem(0xa44c, { 0xc8 });
        gbc.writeMem(0xd6cc, { 0xb0, 0x67 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd6ce, gbc.sp());
        EXPECT(0x67b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa44c));
        EXPECT(0xb0, gbc.readMem(0xd6cc));
        EXPECT(0x67, gbc.readMem(0xd6cd));
        // C8 00E7
        gbc.setState(0x6e13, 0x2628, 0xc790, 0x753e, 0xd83f, 0xc331, 0x1, 0x1);
        gbc.writeMem(0x2628, { 0x38, 0x5f });
        gbc.writeMem(0x6e13, { 0xc8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x262a, gbc.sp());
        EXPECT(0x5f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00E8
        gbc.setState(0xb4c6, 0xe34f, 0x1890, 0xcc5c, 0x1bc1, 0x3779, 0x1, 0x0);
        gbc.writeMem(0xb4c6, { 0xc8 });
        gbc.writeMem(0xe34f, { 0x2f, 0xd5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe351, gbc.sp());
        EXPECT(0xd52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb4c6));
        EXPECT(0x2f, gbc.readMem(0xe34f));
        EXPECT(0xd5, gbc.readMem(0xe350));
        // C8 00E9
        gbc.setState(0x5550, 0xf186, 0x8ab0, 0xac5, 0x70b3, 0xf638, 0x0, 0x1);
        gbc.writeMem(0x5550, { 0xc8 });
        gbc.writeMem(0xf186, { 0x37, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0x3937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xf186));
        EXPECT(0x39, gbc.readMem(0xf187));
        // C8 00EA
        gbc.setState(0x5a74, 0x6e62, 0xead0, 0x4495, 0x63b8, 0x8028, 0x0, 0x0);
        gbc.writeMem(0x5a74, { 0xc8 });
        gbc.writeMem(0x6e62, { 0x7c, 0x51 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6e64, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00EB
        gbc.setState(0x2de6, 0x409f, 0xeb90, 0x2dd5, 0x4ea2, 0xfeec, 0x1, 0x1);
        gbc.writeMem(0x2de6, { 0xc8 });
        gbc.writeMem(0x409f, { 0x36, 0xed });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x40a1, gbc.sp());
        EXPECT(0xed36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00EC
        gbc.setState(0x2ccb, 0x79bc, 0x3e0, 0x4dfe, 0xeeea, 0xdbf2, 0x1, 0x0);
        gbc.writeMem(0x2ccb, { 0xc8 });
        gbc.writeMem(0x79bc, { 0xb, 0xee });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00ED
        gbc.setState(0xaeb, 0xa5c3, 0x65c0, 0x2ee6, 0x6314, 0x8024, 0x0, 0x0);
        gbc.writeMem(0xaeb, { 0xc8 });
        gbc.writeMem(0xa5c3, { 0x3d, 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa5c5, gbc.sp());
        EXPECT(0xb23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa5c3));
        EXPECT(0xb2, gbc.readMem(0xa5c4));
        // C8 00EE
        gbc.setState(0x5482, 0x398f, 0x7650, 0x740f, 0x2eb2, 0xc971, 0x1, 0x1);
        gbc.writeMem(0x5482, { 0xc8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x398f, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00EF
        gbc.setState(0x1bb7, 0xb68d, 0x5f0, 0xc71c, 0xaa1b, 0x9eb, 0x1, 0x0);
        gbc.writeMem(0x1bb7, { 0xc8 });
        gbc.writeMem(0xb68d, { 0xe0, 0xc1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb68f, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb68d));
        EXPECT(0xc1, gbc.readMem(0xb68e));
        // C8 00F0
        gbc.setState(0xe7f0, 0xd3c0, 0xf340, 0x9acf, 0x8c54, 0xbbe5, 0x0, 0x0);
        gbc.writeMem(0xe7f0, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0xe7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe7f0));
        // C8 00F2
        gbc.setState(0xe351, 0x96ff, 0x9860, 0x2202, 0x64f1, 0x7dff, 0x0, 0x0);
        gbc.writeMem(0xe351, { 0xc8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x96ff, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe351));
        // C8 00F3
        gbc.setState(0xad4, 0xda63, 0x9a0, 0xe4c4, 0x99d9, 0x3d61, 0x0, 0x0);
        gbc.writeMem(0xad4, { 0xc8 });
        gbc.writeMem(0xda63, { 0xf2, 0x64 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xda65, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xda63));
        EXPECT(0x64, gbc.readMem(0xda64));
        // C8 00F4
        gbc.setState(0x9741, 0xc746, 0xa490, 0xd0da, 0xce69, 0x6fcd, 0x0, 0x1);
        gbc.writeMem(0x9741, { 0xc8 });
        gbc.writeMem(0xc746, { 0xb, 0x4f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0x4f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9741));
        EXPECT(0xb, gbc.readMem(0xc746));
        EXPECT(0x4f, gbc.readMem(0xc747));
        // C8 00F5
        gbc.setState(0x163, 0x56ac, 0xa0a0, 0x4986, 0x613e, 0x23a7, 0x0, 0x0);
        gbc.writeMem(0x163, { 0xc8 });
        gbc.writeMem(0x56ac, { 0x47, 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00F6
        gbc.setState(0xad79, 0xcb9e, 0x6eb0, 0x6d16, 0x8dc6, 0xb978, 0x0, 0x1);
        gbc.writeMem(0xad79, { 0xc8 });
        gbc.writeMem(0xcb9e, { 0xb4, 0xc9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcba0, gbc.sp());
        EXPECT(0xc9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xad79));
        EXPECT(0xb4, gbc.readMem(0xcb9e));
        EXPECT(0xc9, gbc.readMem(0xcb9f));
        // C8 00F7
        gbc.setState(0xe512, 0xf8b9, 0x3930, 0x471, 0xfdc6, 0x4f37, 0x1, 0x0);
        gbc.writeMem(0xe512, { 0xc8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe512));
        // C8 00F9
        gbc.setState(0x8806, 0xee63, 0x9b40, 0xac2f, 0x685c, 0x175d, 0x0, 0x1);
        gbc.writeMem(0x8806, { 0xc8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee63, gbc.sp());
        EXPECT(0x8807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8806));
        // C8 00FA
        gbc.setState(0x7954, 0xa046, 0x2710, 0xe25a, 0x753e, 0xb046, 0x0, 0x0);
        gbc.writeMem(0x7954, { 0xc8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa046, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 00FB
        gbc.setState(0x13d3, 0x2bbb, 0x7820, 0xaa7, 0xe42d, 0x24da, 0x0, 0x0);
        gbc.writeMem(0x13d3, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 00FC
        gbc.setState(0xb95e, 0x849, 0x1220, 0x610e, 0x9ccd, 0xa111, 0x1, 0x1);
        gbc.writeMem(0xb95e, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb95e));
        // C8 00FD
        gbc.setState(0x8ffa, 0x1975, 0x81a0, 0x30e2, 0xb41a, 0x9adc, 0x0, 0x1);
        gbc.writeMem(0x1975, { 0xdc, 0x16 });
        gbc.writeMem(0x8ffa, { 0xc8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0x16dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8ffa));
        // C8 00FE
        gbc.setState(0x8335, 0x49fd, 0x7da0, 0x66ef, 0xcdd4, 0xfae9, 0x0, 0x0);
        gbc.writeMem(0x49fd, { 0x6d, 0xdf });
        gbc.writeMem(0x8335, { 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8335));
        // C8 00FF
        gbc.setState(0xbee0, 0x2dc0, 0x2360, 0x5583, 0x4608, 0xdd34, 0x1, 0x1);
        gbc.writeMem(0xbee0, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2dc0, gbc.sp());
        EXPECT(0xbee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbee0));
        // C8 0100
        gbc.setState(0x1494, 0x181, 0x4240, 0x3345, 0xe9d7, 0xffd1, 0x1, 0x0);
        gbc.writeMem(0x1494, { 0xc8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x181, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0101
        gbc.setState(0x5480, 0xa1f6, 0xbd60, 0xb72a, 0x3845, 0x4df6, 0x1, 0x0);
        gbc.writeMem(0x5480, { 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0102
        gbc.setState(0x4419, 0x7973, 0xbbc0, 0xe0d7, 0xc6b8, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x4419, { 0xc8 });
        gbc.writeMem(0x7973, { 0xa1, 0x6c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0103
        gbc.setState(0xeaf9, 0x52dd, 0xc7f0, 0x1ed2, 0x4565, 0x3521, 0x1, 0x1);
        gbc.writeMem(0x52dd, { 0xb6, 0xc0 });
        gbc.writeMem(0xeaf9, { 0xc8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x52df, gbc.sp());
        EXPECT(0xc0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xeaf9));
        // C8 0104
        gbc.setState(0xc73f, 0x7dd5, 0x16c0, 0x32f9, 0x213f, 0xb453, 0x0, 0x1);
        gbc.writeMem(0x7dd5, { 0x4e, 0x61 });
        gbc.writeMem(0xc73f, { 0xc8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7dd7, gbc.sp());
        EXPECT(0x614e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc73f));
        // C8 0105
        gbc.setState(0x4e4a, 0xf245, 0x6c20, 0xa7c9, 0x5329, 0x37f4, 0x1, 0x0);
        gbc.writeMem(0x4e4a, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0x4e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0106
        gbc.setState(0x289a, 0x1fb3, 0x7d80, 0x5179, 0x7589, 0xa913, 0x1, 0x1);
        gbc.writeMem(0x1fb3, { 0x5d, 0x29 });
        gbc.writeMem(0x289a, { 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1fb5, gbc.sp());
        EXPECT(0x295d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0107
        gbc.setState(0x41d8, 0x811, 0xe500, 0x71e2, 0x3589, 0x7b68, 0x1, 0x0);
        gbc.writeMem(0x41d8, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x811, gbc.sp());
        EXPECT(0x41d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0108
        gbc.setState(0xd214, 0x947a, 0x2570, 0x1408, 0x6d40, 0x58cf, 0x0, 0x0);
        gbc.writeMem(0xd214, { 0xc8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x947a, gbc.sp());
        EXPECT(0xd215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd214));
        // C8 0109
        gbc.setState(0xd472, 0xcfd8, 0xff40, 0xe695, 0x1fba, 0xe282, 0x1, 0x1);
        gbc.writeMem(0xd472, { 0xc8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd472));
        // C8 010A
        gbc.setState(0xe776, 0x19a2, 0xf150, 0x4a27, 0x3368, 0x3463, 0x0, 0x1);
        gbc.writeMem(0xe776, { 0xc8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x19a2, gbc.sp());
        EXPECT(0xe777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe776));
        // C8 010B
        gbc.setState(0xba32, 0xae8e, 0x6320, 0xf6d8, 0xdd96, 0x5bf9, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xc8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xae8e, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xba32));
        // C8 010C
        gbc.setState(0xc6fd, 0xebf8, 0x53e0, 0xcb4, 0x4c90, 0x7484, 0x1, 0x1);
        gbc.writeMem(0xc6fd, { 0xc8 });
        gbc.writeMem(0xebf8, { 0x5d, 0xfc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0xfc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc6fd));
        EXPECT(0x5d, gbc.readMem(0xebf8));
        EXPECT(0xfc, gbc.readMem(0xebf9));
        // C8 010D
        gbc.setState(0x8031, 0x184a, 0xc940, 0xd00f, 0x90c6, 0xa827, 0x0, 0x1);
        gbc.writeMem(0x8031, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x184a, gbc.sp());
        EXPECT(0x8032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8031));
        // C8 010E
        gbc.setState(0x4245, 0xf575, 0xd310, 0xc009, 0xb53f, 0x85f7, 0x0, 0x0);
        gbc.writeMem(0x4245, { 0xc8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0x4246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 010F
        gbc.setState(0x2b45, 0x3cca, 0x31b0, 0x5850, 0xad94, 0xf434, 0x1, 0x1);
        gbc.writeMem(0x2b45, { 0xc8 });
        gbc.writeMem(0x3cca, { 0xab, 0x5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3ccc, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0110
        gbc.setState(0x5a18, 0x4d1f, 0x60c0, 0x317d, 0x6a17, 0xcdb, 0x0, 0x1);
        gbc.writeMem(0x4d1f, { 0xeb, 0x7 });
        gbc.writeMem(0x5a18, { 0xc8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0111
        gbc.setState(0x6376, 0x65e0, 0x6920, 0x7ded, 0xd1ba, 0xbdf4, 0x0, 0x0);
        gbc.writeMem(0x6376, { 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x65e0, gbc.sp());
        EXPECT(0x6377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0112
        gbc.setState(0xc22f, 0x9d65, 0xea50, 0x9dc5, 0x1c95, 0x3f88, 0x0, 0x1);
        gbc.writeMem(0xc22f, { 0xc8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9d65, gbc.sp());
        EXPECT(0xc230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc22f));
        // C8 0113
        gbc.setState(0x673f, 0xf1e1, 0x1670, 0xf3b4, 0x9066, 0xb0db, 0x1, 0x0);
        gbc.writeMem(0x673f, { 0xc8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf1e1, gbc.sp());
        EXPECT(0x6740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0115
        gbc.setState(0x4ce5, 0xd97e, 0x2610, 0x2faa, 0xdafc, 0x2e5f, 0x1, 0x0);
        gbc.writeMem(0x4ce5, { 0xc8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd97e, gbc.sp());
        EXPECT(0x4ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0116
        gbc.setState(0x6d85, 0x6e50, 0x8400, 0x20be, 0x563d, 0xe10a, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xc8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x6d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0117
        gbc.setState(0x7ab7, 0xfae5, 0x6de0, 0xac6e, 0xe648, 0x3c98, 0x1, 0x0);
        gbc.writeMem(0x7ab7, { 0xc8 });
        gbc.writeMem(0xfae5, { 0xba, 0xe6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfae7, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfae5));
        EXPECT(0xe6, gbc.readMem(0xfae6));
        // C8 0118
        gbc.setState(0x1b55, 0x32, 0x2250, 0x507b, 0xf8ba, 0x6870, 0x0, 0x1);
        gbc.writeMem(0x1b55, { 0xc8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x32, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0119
        gbc.setState(0x5e90, 0xf2db, 0x81c0, 0x7655, 0xfc12, 0x8e8e, 0x1, 0x0);
        gbc.writeMem(0x5e90, { 0xc8 });
        gbc.writeMem(0xf2db, { 0xc2, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x9fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf2db));
        EXPECT(0x9f, gbc.readMem(0xf2dc));
        // C8 011A
        gbc.setState(0x568e, 0xa8ee, 0x6880, 0xabab, 0x859d, 0x6402, 0x1, 0x1);
        gbc.writeMem(0x568e, { 0xc8 });
        gbc.writeMem(0xa8ee, { 0x1, 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0xb901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa8ee));
        EXPECT(0xb9, gbc.readMem(0xa8ef));
        // C8 011B
        gbc.setState(0x2424, 0x5b49, 0xdc30, 0x63a1, 0x98c7, 0x2c3d, 0x1, 0x0);
        gbc.writeMem(0x2424, { 0xc8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5b49, gbc.sp());
        EXPECT(0x2425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 011C
        gbc.setState(0xcbf4, 0x87c9, 0x8a90, 0x3528, 0x30c5, 0x398d, 0x1, 0x1);
        gbc.writeMem(0x87c9, { 0xb9, 0x83 });
        gbc.writeMem(0xcbf4, { 0xc8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x83b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x87c9));
        EXPECT(0x83, gbc.readMem(0x87ca));
        EXPECT(0xc8, gbc.readMem(0xcbf4));
        // C8 011D
        gbc.setState(0x83a3, 0xf74d, 0x4680, 0xa12b, 0xe9ae, 0xc874, 0x1, 0x1);
        gbc.writeMem(0x83a3, { 0xc8 });
        gbc.writeMem(0xf74d, { 0x47, 0x18 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf74f, gbc.sp());
        EXPECT(0x1847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x83a3));
        EXPECT(0x47, gbc.readMem(0xf74d));
        EXPECT(0x18, gbc.readMem(0xf74e));
        // C8 011E
        gbc.setState(0x75c2, 0x8f68, 0xa0c0, 0xe2f7, 0x4e70, 0x61bb, 0x0, 0x0);
        gbc.writeMem(0x75c2, { 0xc8 });
        gbc.writeMem(0x8f68, { 0x7a, 0x9e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8f68));
        EXPECT(0x9e, gbc.readMem(0x8f69));
        // C8 011F
        gbc.setState(0xb14b, 0x9c1a, 0x7220, 0x69ef, 0xa827, 0xf657, 0x1, 0x0);
        gbc.writeMem(0xb14b, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9c1a, gbc.sp());
        EXPECT(0xb14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb14b));
        // C8 0120
        gbc.setState(0xbf5f, 0x7cec, 0x6920, 0x469a, 0x6f7a, 0x3db4, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbf5f));
        // C8 0121
        gbc.setState(0xeee1, 0x2192, 0xd8d0, 0x79bb, 0x8b68, 0xe92e, 0x1, 0x1);
        gbc.writeMem(0x2192, { 0xa5, 0x55 });
        gbc.writeMem(0xeee1, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xeee1));
        // C8 0122
        gbc.setState(0x91e7, 0xbaed, 0xf760, 0xe03d, 0x7817, 0x402, 0x1, 0x0);
        gbc.writeMem(0x91e7, { 0xc8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0x91e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x91e7));
        // C8 0123
        gbc.setState(0xe6c0, 0xfe30, 0x21b0, 0x680, 0xbdef, 0xfffb, 0x0, 0x0);
        gbc.writeMem(0xe6c0, { 0xc8 });
        gbc.writeMem(0xfe30, { 0x6c, 0x8d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfe32, gbc.sp());
        EXPECT(0x8d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe6c0));
        EXPECT(0x6c, gbc.readMem(0xfe30));
        EXPECT(0x8d, gbc.readMem(0xfe31));
        // C8 0125
        gbc.setState(0x628c, 0x877, 0x7240, 0x3e89, 0x943b, 0xae4, 0x0, 0x0);
        gbc.writeMem(0x628c, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x877, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0126
        gbc.setState(0x1ae5, 0x6881, 0xf8b0, 0xfc95, 0x6bee, 0x3c6c, 0x1, 0x0);
        gbc.writeMem(0x1ae5, { 0xc8 });
        gbc.writeMem(0x6881, { 0x5e, 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0x7e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0128
        gbc.setState(0x6358, 0xc00f, 0xd980, 0x69af, 0x9a62, 0x6889, 0x0, 0x0);
        gbc.writeMem(0x6358, { 0xc8 });
        gbc.writeMem(0xc00f, { 0xa6, 0x1e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc011, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc00f));
        EXPECT(0x1e, gbc.readMem(0xc010));
        // C8 0129
        gbc.setState(0xd242, 0xfd09, 0x5eb0, 0x3499, 0x3334, 0xed1a, 0x1, 0x1);
        gbc.writeMem(0xd242, { 0xc8 });
        gbc.writeMem(0xfd09, { 0xb6, 0xe8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfd0b, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd242));
        EXPECT(0xb6, gbc.readMem(0xfd09));
        EXPECT(0xe8, gbc.readMem(0xfd0a));
        // C8 012B
        gbc.setState(0x93b, 0xc24d, 0xe8c0, 0xef7d, 0x4010, 0x3379, 0x1, 0x1);
        gbc.writeMem(0x93b, { 0xc8 });
        gbc.writeMem(0xc24d, { 0x57, 0x12 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc24f, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc24d));
        EXPECT(0x12, gbc.readMem(0xc24e));
        // C8 012C
        gbc.setState(0x8c43, 0x426d, 0x3810, 0x5ae4, 0xdfc1, 0xb8b6, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0xc8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x426d, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8c43));
        // C8 012D
        gbc.setState(0x9d91, 0x98bf, 0x5720, 0x9f84, 0x2311, 0xa70e, 0x0, 0x1);
        gbc.writeMem(0x9d91, { 0xc8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x98bf, gbc.sp());
        EXPECT(0x9d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9d91));
        // C8 012E
        gbc.setState(0x6bc5, 0x1b79, 0x2f0, 0x62d1, 0xabad, 0x506f, 0x0, 0x0);
        gbc.writeMem(0x1b79, { 0xb1, 0x98 });
        gbc.writeMem(0x6bc5, { 0xc8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0x98b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 012F
        gbc.setState(0xd66a, 0xa6df, 0xf600, 0xdaa7, 0xf049, 0x2d71, 0x1, 0x1);
        gbc.writeMem(0xd66a, { 0xc8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd66a));
        // C8 0130
        gbc.setState(0x8194, 0xdcbc, 0x76e0, 0x6c15, 0x8def, 0xb91a, 0x1, 0x0);
        gbc.writeMem(0x8194, { 0xc8 });
        gbc.writeMem(0xdcbc, { 0xf7, 0x3f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdcbe, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8194));
        EXPECT(0xf7, gbc.readMem(0xdcbc));
        EXPECT(0x3f, gbc.readMem(0xdcbd));
        // C8 0131
        gbc.setState(0xc4da, 0xf254, 0xe190, 0x6bee, 0x4d98, 0x4e4c, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0xc8 });
        gbc.writeMem(0xf254, { 0x7, 0x26 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf256, gbc.sp());
        EXPECT(0x2607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc4da));
        EXPECT(0x7, gbc.readMem(0xf254));
        EXPECT(0x26, gbc.readMem(0xf255));
        // C8 0132
        gbc.setState(0xcdac, 0x765, 0xfdd0, 0x7b5c, 0x5846, 0x41c4, 0x1, 0x1);
        gbc.writeMem(0x765, { 0x44, 0x84 });
        gbc.writeMem(0xcdac, { 0xc8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0x8444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcdac));
        // C8 0133
        gbc.setState(0xd739, 0xc0bd, 0xd760, 0x3859, 0x7d6, 0x6910, 0x1, 0x1);
        gbc.writeMem(0xd739, { 0xc8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0xd73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd739));
        // C8 0134
        gbc.setState(0x80bc, 0x26e, 0x7a00, 0x1708, 0xebbb, 0xdc91, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0xc8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x26e, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80bc));
        // C8 0135
        gbc.setState(0xe0a0, 0x681c, 0xf0e0, 0xd62d, 0x8209, 0xb3a4, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0xad, 0x3e });
        gbc.writeMem(0xe0a0, { 0xc8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe0a0));
        // C8 0136
        gbc.setState(0xe360, 0x74cc, 0xc6e0, 0x720b, 0xd5, 0x4749, 0x0, 0x0);
        gbc.writeMem(0x74cc, { 0xdb, 0xef });
        gbc.writeMem(0xe360, { 0xc8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x74ce, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe360));
        // C8 0137
        gbc.setState(0xd508, 0xe3c3, 0x9760, 0xa847, 0x92f1, 0xb81b, 0x0, 0x1);
        gbc.writeMem(0xd508, { 0xc8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe3c3, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd508));
        // C8 0138
        gbc.setState(0x3bfa, 0x4d68, 0x9ca0, 0x2882, 0x2ef6, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0x3bfa, { 0xc8 });
        gbc.writeMem(0x4d68, { 0xa9, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0xf5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0139
        gbc.setState(0xc43b, 0xcd9f, 0xd500, 0x8529, 0xa42d, 0xbe2, 0x0, 0x0);
        gbc.writeMem(0xc43b, { 0xc8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcd9f, gbc.sp());
        EXPECT(0xc43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc43b));
        // C8 013A
        gbc.setState(0x81c5, 0xe411, 0x4d70, 0xd250, 0x3936, 0x4ffd, 0x1, 0x0);
        gbc.writeMem(0x81c5, { 0xc8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe411, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x81c5));
        // C8 013B
        gbc.setState(0x2f12, 0xb32d, 0x6d50, 0x9303, 0xd067, 0x456a, 0x0, 0x1);
        gbc.writeMem(0x2f12, { 0xc8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 013C
        gbc.setState(0x6e1, 0xad3b, 0x4f40, 0x3389, 0x6faf, 0xae4d, 0x0, 0x0);
        gbc.writeMem(0x6e1, { 0xc8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0x6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 013D
        gbc.setState(0x15ad, 0x7a65, 0x3510, 0x8505, 0x8777, 0x883d, 0x1, 0x0);
        gbc.writeMem(0x15ad, { 0xc8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a65, gbc.sp());
        EXPECT(0x15ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 013E
        gbc.setState(0x8619, 0xe26d, 0x4310, 0x71d5, 0xd120, 0x4c38, 0x1, 0x0);
        gbc.writeMem(0x8619, { 0xc8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe26d, gbc.sp());
        EXPECT(0x861a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8619));
        // C8 013F
        gbc.setState(0xad3d, 0x50a2, 0xd8e0, 0x20fc, 0x82c5, 0xe76e, 0x1, 0x0);
        gbc.writeMem(0x50a2, { 0x82, 0x74 });
        gbc.writeMem(0xad3d, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x50a4, gbc.sp());
        EXPECT(0x7482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xad3d));
        // C8 0140
        gbc.setState(0x7ab6, 0xf890, 0xd970, 0x84ca, 0xaf47, 0xbda9, 0x0, 0x0);
        gbc.writeMem(0x7ab6, { 0xc8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0x7ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0141
        gbc.setState(0xb43d, 0x9af2, 0xf1d0, 0x7f90, 0xe30b, 0x7898, 0x1, 0x0);
        gbc.writeMem(0x9af2, { 0x7a, 0x2 });
        gbc.writeMem(0xb43d, { 0xc8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9af2));
        EXPECT(0x2, gbc.readMem(0x9af3));
        EXPECT(0xc8, gbc.readMem(0xb43d));
        // C8 0142
        gbc.setState(0xd535, 0xd19f, 0xa6d0, 0xb495, 0x4240, 0x6e1b, 0x0, 0x0);
        gbc.writeMem(0xd19f, { 0x45, 0x0 });
        gbc.writeMem(0xd535, { 0xc8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd1a1, gbc.sp());
        EXPECT(0x45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xd19f));
        EXPECT(0x0, gbc.readMem(0xd1a0));
        EXPECT(0xc8, gbc.readMem(0xd535));
        // C8 0143
        gbc.setState(0x487d, 0x4a70, 0xb120, 0x1eb9, 0x1988, 0xc1e5, 0x1, 0x1);
        gbc.writeMem(0x487d, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0x487e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0144
        gbc.setState(0x41d9, 0x8e43, 0xd7e0, 0x54ea, 0x2cac, 0x928a, 0x1, 0x0);
        gbc.writeMem(0x41d9, { 0xc8 });
        gbc.writeMem(0x8e43, { 0xf6, 0xdf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8e45, gbc.sp());
        EXPECT(0xdff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8e43));
        EXPECT(0xdf, gbc.readMem(0x8e44));
        // C8 0145
        gbc.setState(0xdf2, 0x4dc6, 0xa7f0, 0x8c39, 0x4ff5, 0xbbde, 0x0, 0x0);
        gbc.writeMem(0xdf2, { 0xc8 });
        gbc.writeMem(0x4dc6, { 0x10, 0xe8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0xe810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0146
        gbc.setState(0x1fc4, 0x1748, 0xa1d0, 0xceeb, 0x5abc, 0x5f2e, 0x1, 0x1);
        gbc.writeMem(0x1748, { 0xa2, 0x65 });
        gbc.writeMem(0x1fc4, { 0xc8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0147
        gbc.setState(0x2f63, 0x3d97, 0xeef0, 0x3a58, 0xb98b, 0x353d, 0x1, 0x0);
        gbc.writeMem(0x2f63, { 0xc8 });
        gbc.writeMem(0x3d97, { 0xc9, 0x99 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3d99, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0148
        gbc.setState(0xabb9, 0x6f0c, 0xb340, 0x46b4, 0x6d17, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0xabb9, { 0xc8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6f0c, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xabb9));
        // C8 0149
        gbc.setState(0xcb0e, 0xc1e8, 0x28c0, 0x335c, 0x782f, 0xd9d6, 0x1, 0x1);
        gbc.writeMem(0xc1e8, { 0x38, 0xdf });
        gbc.writeMem(0xcb0e, { 0xc8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc1e8));
        EXPECT(0xdf, gbc.readMem(0xc1e9));
        EXPECT(0xc8, gbc.readMem(0xcb0e));
        // C8 014A
        gbc.setState(0x2b2b, 0xbff0, 0x4280, 0x14cd, 0x6361, 0x52b1, 0x1, 0x0);
        gbc.writeMem(0x2b2b, { 0xc8 });
        gbc.writeMem(0xbff0, { 0x63, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x9f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xbff0));
        EXPECT(0x9f, gbc.readMem(0xbff1));
        // C8 014B
        gbc.setState(0x8880, 0xf0b, 0x8f00, 0xac73, 0x2338, 0x662a, 0x1, 0x0);
        gbc.writeMem(0x8880, { 0xc8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8880));
        // C8 014C
        gbc.setState(0xb681, 0xcdbc, 0xa8d0, 0x952c, 0xce7d, 0x4cba, 0x1, 0x1);
        gbc.writeMem(0xb681, { 0xc8 });
        gbc.writeMem(0xcdbc, { 0xa2, 0xaf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xafa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb681));
        EXPECT(0xa2, gbc.readMem(0xcdbc));
        EXPECT(0xaf, gbc.readMem(0xcdbd));
        // C8 014D
        gbc.setState(0x511a, 0x26f5, 0xf3f0, 0x2acf, 0xf59a, 0xc89d, 0x0, 0x0);
        gbc.writeMem(0x26f5, { 0x70, 0x53 });
        gbc.writeMem(0x511a, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x26f7, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 014E
        gbc.setState(0x12f3, 0x167f, 0xf160, 0xd833, 0x3a90, 0xb703, 0x0, 0x1);
        gbc.writeMem(0x12f3, { 0xc8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0x12f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 014F
        gbc.setState(0xd710, 0xe035, 0x3520, 0xf663, 0x5ad3, 0x5d59, 0x1, 0x1);
        gbc.writeMem(0xd710, { 0xc8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd710));
        // C8 0150
        gbc.setState(0xdc80, 0x182, 0x67c0, 0x7ed2, 0x1510, 0x5e15, 0x1, 0x1);
        gbc.writeMem(0x182, { 0xae, 0xb4 });
        gbc.writeMem(0xdc80, { 0xc8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x184, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdc80));
        // C8 0151
        gbc.setState(0x6211, 0x8774, 0x5ec0, 0x6aa4, 0x8941, 0xdc5a, 0x0, 0x1);
        gbc.writeMem(0x6211, { 0xc8 });
        gbc.writeMem(0x8774, { 0xaf, 0x36 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0x36af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8774));
        EXPECT(0x36, gbc.readMem(0x8775));
        // C8 0152
        gbc.setState(0x6705, 0x722f, 0xd120, 0xce87, 0xcfb5, 0xcfc9, 0x0, 0x0);
        gbc.writeMem(0x6705, { 0xc8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0x6706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0153
        gbc.setState(0xb19b, 0x10a0, 0x82c0, 0x69c1, 0x3f22, 0x3eea, 0x1, 0x1);
        gbc.writeMem(0x10a0, { 0x7c, 0x14 });
        gbc.writeMem(0xb19b, { 0xc8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x10a2, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb19b));
        // C8 0154
        gbc.setState(0x41e6, 0x7e6, 0x9bb0, 0xa1fa, 0x5218, 0x9f10, 0x1, 0x1);
        gbc.writeMem(0x7e6, { 0xe3, 0xb1 });
        gbc.writeMem(0x41e6, { 0xc8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0155
        gbc.setState(0x2a70, 0xe1ea, 0x9d0, 0xa763, 0xb66e, 0x2cd2, 0x1, 0x0);
        gbc.writeMem(0x2a70, { 0xc8 });
        gbc.writeMem(0xe1ea, { 0x33, 0xfe });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe1ec, gbc.sp());
        EXPECT(0xfe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe1ea));
        EXPECT(0xfe, gbc.readMem(0xe1eb));
        // C8 0156
        gbc.setState(0x389c, 0xe803, 0xdd40, 0xc368, 0x2057, 0x2a8, 0x0, 0x0);
        gbc.writeMem(0x389c, { 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x389d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0157
        gbc.setState(0x42e6, 0x1321, 0x5750, 0xe841, 0x9025, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x42e6, { 0xc8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0x42e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0158
        gbc.setState(0xacda, 0x31cf, 0x9d80, 0x6107, 0x7d19, 0x5bec, 0x0, 0x1);
        gbc.writeMem(0x31cf, { 0xdb, 0xad });
        gbc.writeMem(0xacda, { 0xc8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0xaddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xacda));
        // C8 0159
        gbc.setState(0x76f3, 0x30ef, 0x37e0, 0x18ca, 0x3a1a, 0xa2ab, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0xa0, 0x99 });
        gbc.writeMem(0x76f3, { 0xc8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x30f1, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 015A
        gbc.setState(0xe704, 0x71f0, 0x560, 0x61d2, 0x4686, 0xc8f1, 0x0, 0x0);
        gbc.writeMem(0xe704, { 0xc8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x71f0, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe704));
        // C8 015B
        gbc.setState(0xb7ba, 0x8214, 0x3360, 0x59d4, 0xe0c8, 0xa0fd, 0x1, 0x1);
        gbc.writeMem(0xb7ba, { 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb7ba));
        // C8 015C
        gbc.setState(0x5f07, 0x84c8, 0x6a50, 0xc73b, 0xe05a, 0x7c37, 0x1, 0x1);
        gbc.writeMem(0x5f07, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 015D
        gbc.setState(0x402b, 0xd032, 0xadc0, 0xb25a, 0x8e96, 0xd0de, 0x1, 0x0);
        gbc.writeMem(0x402b, { 0xc8 });
        gbc.writeMem(0xd032, { 0x7e, 0x68 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd034, gbc.sp());
        EXPECT(0x687e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd032));
        EXPECT(0x68, gbc.readMem(0xd033));
        // C8 015E
        gbc.setState(0x5f6d, 0x577, 0xe040, 0xe309, 0x7ef9, 0xefdf, 0x1, 0x1);
        gbc.writeMem(0x5f6d, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x577, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 015F
        gbc.setState(0xa376, 0x20ae, 0xcf20, 0xaa4a, 0x8a30, 0x2b4b, 0x0, 0x0);
        gbc.writeMem(0xa376, { 0xc8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x20ae, gbc.sp());
        EXPECT(0xa377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa376));
        // C8 0160
        gbc.setState(0x5f4f, 0xe5a2, 0xc680, 0x639a, 0x7091, 0x6515, 0x0, 0x0);
        gbc.writeMem(0x5f4f, { 0xc8 });
        gbc.writeMem(0xe5a2, { 0xa9, 0xf1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0xf1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xe5a2));
        EXPECT(0xf1, gbc.readMem(0xe5a3));
        // C8 0161
        gbc.setState(0xce6f, 0xb0ef, 0x2b0, 0x2f67, 0x70b9, 0xaeba, 0x1, 0x0);
        gbc.writeMem(0xb0ef, { 0x6a, 0x30 });
        gbc.writeMem(0xce6f, { 0xc8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0x306a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb0ef));
        EXPECT(0x30, gbc.readMem(0xb0f0));
        EXPECT(0xc8, gbc.readMem(0xce6f));
        // C8 0162
        gbc.setState(0x7f48, 0xb786, 0x61d0, 0x3eea, 0xfc48, 0xbbf2, 0x0, 0x0);
        gbc.writeMem(0x7f48, { 0xc8 });
        gbc.writeMem(0xb786, { 0x3e, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x393e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb786));
        EXPECT(0x39, gbc.readMem(0xb787));
        // C8 0163
        gbc.setState(0xc123, 0xdc6a, 0xef20, 0x67aa, 0x9c00, 0x987, 0x0, 0x1);
        gbc.writeMem(0xc123, { 0xc8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdc6a, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc123));
        // C8 0164
        gbc.setState(0xa025, 0x6cb7, 0xfec0, 0xa8f5, 0x6b1f, 0xc615, 0x1, 0x1);
        gbc.writeMem(0x6cb7, { 0x2a, 0x3 });
        gbc.writeMem(0xa025, { 0xc8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa025));
        // C8 0165
        gbc.setState(0xdd5d, 0x757, 0x9a00, 0xe5fe, 0x7f63, 0x3ed6, 0x0, 0x0);
        gbc.writeMem(0xdd5d, { 0xc8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x757, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdd5d));
        // C8 0166
        gbc.setState(0x72b3, 0xff81, 0x6960, 0x6e0, 0xd2f1, 0x27b3, 0x0, 0x1);
        gbc.writeMem(0x72b3, { 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xff81, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0167
        gbc.setState(0xef49, 0xa475, 0x50, 0x714c, 0xc243, 0xfd11, 0x0, 0x1);
        gbc.writeMem(0xef49, { 0xc8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa475, gbc.sp());
        EXPECT(0xef4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef49));
        // C8 0168
        gbc.setState(0xa878, 0xa94c, 0x4030, 0x10f1, 0xab24, 0xc561, 0x1, 0x0);
        gbc.writeMem(0xa878, { 0xc8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa878));
        // C8 0169
        gbc.setState(0x4468, 0xcd22, 0x4a20, 0x1031, 0xd729, 0x861d, 0x0, 0x1);
        gbc.writeMem(0x4468, { 0xc8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcd22, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 016A
        gbc.setState(0x7bff, 0x47b0, 0x7050, 0x78de, 0xdebb, 0x60e3, 0x1, 0x1);
        gbc.writeMem(0x7bff, { 0xc8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x47b0, gbc.sp());
        EXPECT(0x7c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 016B
        gbc.setState(0xc4c0, 0xaf5, 0x2f90, 0xd027, 0x254c, 0xd541, 0x0, 0x0);
        gbc.writeMem(0xaf5, { 0xb4, 0x43 });
        gbc.writeMem(0xc4c0, { 0xc8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf7, gbc.sp());
        EXPECT(0x43b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc4c0));
        // C8 016C
        gbc.setState(0x3bca, 0x8b27, 0xc30, 0x9900, 0x31eb, 0x7d0b, 0x0, 0x1);
        gbc.writeMem(0x3bca, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8b27, gbc.sp());
        EXPECT(0x3bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 016D
        gbc.setState(0xcc77, 0x2208, 0xf0a0, 0xf9b3, 0xc090, 0x2249, 0x1, 0x1);
        gbc.writeMem(0x2208, { 0x23, 0xf1 });
        gbc.writeMem(0xcc77, { 0xc8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x220a, gbc.sp());
        EXPECT(0xf123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcc77));
        // C8 016E
        gbc.setState(0xea82, 0xbbf7, 0xab00, 0xc3fc, 0x8470, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0xea82, { 0xc8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbbf7, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xea82));
        // C8 016F
        gbc.setState(0xb67e, 0xb440, 0x12b0, 0xf5e2, 0xac12, 0xd9ec, 0x0, 0x1);
        gbc.writeMem(0xb440, { 0xf2, 0xce });
        gbc.writeMem(0xb67e, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0xcef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb440));
        EXPECT(0xce, gbc.readMem(0xb441));
        EXPECT(0xc8, gbc.readMem(0xb67e));
        // C8 0171
        gbc.setState(0xe1fb, 0xbf8, 0xd200, 0x3829, 0x4364, 0x8003, 0x1, 0x0);
        gbc.writeMem(0xe1fb, { 0xc8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0xe1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe1fb));
        // C8 0172
        gbc.setState(0xa0f7, 0x79b8, 0x7510, 0x1672, 0xa0c2, 0x8877, 0x0, 0x1);
        gbc.writeMem(0xa0f7, { 0xc8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x79b8, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa0f7));
        // C8 0173
        gbc.setState(0x9f9d, 0xb477, 0x78e0, 0x8297, 0xd6cd, 0xe361, 0x0, 0x0);
        gbc.writeMem(0x9f9d, { 0xc8 });
        gbc.writeMem(0xb477, { 0x2, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb479, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9f9d));
        EXPECT(0x2, gbc.readMem(0xb477));
        EXPECT(0x5c, gbc.readMem(0xb478));
        // C8 0174
        gbc.setState(0x4d6d, 0xd867, 0x1bf0, 0x1812, 0xaaeb, 0xefc1, 0x0, 0x1);
        gbc.writeMem(0x4d6d, { 0xc8 });
        gbc.writeMem(0xd867, { 0x81, 0xfd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0xfd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd867));
        EXPECT(0xfd, gbc.readMem(0xd868));
        // C8 0175
        gbc.setState(0xb9ca, 0x3470, 0x1250, 0x52f9, 0x6008, 0x6543, 0x0, 0x1);
        gbc.writeMem(0xb9ca, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb9ca));
        // C8 0176
        gbc.setState(0x6738, 0xd616, 0xacd0, 0xe018, 0x9cf9, 0xe981, 0x1, 0x1);
        gbc.writeMem(0x6738, { 0xc8 });
        gbc.writeMem(0xd616, { 0x53, 0x22 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd618, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd616));
        EXPECT(0x22, gbc.readMem(0xd617));
        // C8 0177
        gbc.setState(0x59f1, 0x4b27, 0x1a20, 0xb96a, 0xc392, 0xbfe9, 0x0, 0x0);
        gbc.writeMem(0x59f1, { 0xc8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4b27, gbc.sp());
        EXPECT(0x59f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0178
        gbc.setState(0x1986, 0x1183, 0x2930, 0x3465, 0x9cf6, 0x1878, 0x0, 0x0);
        gbc.writeMem(0x1986, { 0xc8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0x1987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0179
        gbc.setState(0x1538, 0xa2f2, 0xd310, 0xf070, 0x340d, 0xac09, 0x0, 0x1);
        gbc.writeMem(0x1538, { 0xc8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 017A
        gbc.setState(0x433, 0xb4c8, 0xc950, 0x3ff7, 0x6fd4, 0x92a8, 0x0, 0x0);
        gbc.writeMem(0x433, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb4c8, gbc.sp());
        EXPECT(0x434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 017B
        gbc.setState(0x33e4, 0xee3c, 0xfcc0, 0x7e44, 0x6276, 0xd502, 0x0, 0x1);
        gbc.writeMem(0x33e4, { 0xc8 });
        gbc.writeMem(0xee3c, { 0x7b, 0x41 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xee3e, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xee3c));
        EXPECT(0x41, gbc.readMem(0xee3d));
        // C8 017C
        gbc.setState(0x71dd, 0x3f03, 0xd00, 0x900f, 0xe3c6, 0xb908, 0x0, 0x1);
        gbc.writeMem(0x71dd, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 017D
        gbc.setState(0x2e5c, 0x1b29, 0xb2b0, 0x67b2, 0x992c, 0xa8c7, 0x1, 0x1);
        gbc.writeMem(0x1b29, { 0xea, 0xd8 });
        gbc.writeMem(0x2e5c, { 0xc8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0xd8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 017E
        gbc.setState(0x7ffa, 0xbbc7, 0x43b0, 0x549e, 0xdeac, 0x2faa, 0x0, 0x1);
        gbc.writeMem(0x7ffa, { 0xc8 });
        gbc.writeMem(0xbbc7, { 0xd2, 0x1b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbbc7));
        EXPECT(0x1b, gbc.readMem(0xbbc8));
        // C8 017F
        gbc.setState(0x8ce8, 0x5488, 0xa330, 0x600f, 0xb2e2, 0x52fb, 0x1, 0x0);
        gbc.writeMem(0x8ce8, { 0xc8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0x8ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8ce8));
        // C8 0180
        gbc.setState(0x788d, 0xaad3, 0xeb60, 0x84d3, 0x1c5c, 0x81a, 0x1, 0x0);
        gbc.writeMem(0x788d, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0x788e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0182
        gbc.setState(0x290a, 0xbd98, 0x1960, 0xfcbb, 0x9442, 0x6251, 0x1, 0x1);
        gbc.writeMem(0x290a, { 0xc8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0x290b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0183
        gbc.setState(0x8864, 0x7f80, 0xd0e0, 0xac92, 0x88fd, 0x10e8, 0x1, 0x1);
        gbc.writeMem(0x7f80, { 0xc1, 0xaf });
        gbc.writeMem(0x8864, { 0xc8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7f82, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8864));
        // C8 0184
        gbc.setState(0x7479, 0x976b, 0x5f20, 0xb7d9, 0x741f, 0xc7e4, 0x0, 0x1);
        gbc.writeMem(0x7479, { 0xc8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x747a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0185
        gbc.setState(0x3dd1, 0xdc8d, 0xbf00, 0xf165, 0x7b55, 0x1060, 0x1, 0x0);
        gbc.writeMem(0x3dd1, { 0xc8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdc8d, gbc.sp());
        EXPECT(0x3dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0186
        gbc.setState(0xc512, 0x89c7, 0xecd0, 0xcf4f, 0x70aa, 0xb89c, 0x1, 0x0);
        gbc.writeMem(0x89c7, { 0x4a, 0xf4 });
        gbc.writeMem(0xc512, { 0xc8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x89c9, gbc.sp());
        EXPECT(0xf44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x89c7));
        EXPECT(0xf4, gbc.readMem(0x89c8));
        EXPECT(0xc8, gbc.readMem(0xc512));
        // C8 0187
        gbc.setState(0xc11a, 0xe57d, 0x8220, 0xe967, 0xa04, 0x6f20, 0x0, 0x0);
        gbc.writeMem(0xc11a, { 0xc8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0xc11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc11a));
        // C8 0188
        gbc.setState(0x2a39, 0xe2a6, 0x9680, 0xb20f, 0xd69b, 0x6133, 0x0, 0x0);
        gbc.writeMem(0x2a39, { 0xc8 });
        gbc.writeMem(0xe2a6, { 0xb9, 0xe8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe2a8, gbc.sp());
        EXPECT(0xe8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe2a6));
        EXPECT(0xe8, gbc.readMem(0xe2a7));
        // C8 0189
        gbc.setState(0xd647, 0x467c, 0xf860, 0xd12a, 0x5e8f, 0x4f87, 0x0, 0x0);
        gbc.writeMem(0xd647, { 0xc8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x467c, gbc.sp());
        EXPECT(0xd648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd647));
        // C8 018A
        gbc.setState(0x97e0, 0x555, 0xdf50, 0xb5e2, 0xed07, 0xe139, 0x0, 0x0);
        gbc.writeMem(0x97e0, { 0xc8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x555, gbc.sp());
        EXPECT(0x97e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x97e0));
        // C8 018D
        gbc.setState(0xbffc, 0x3464, 0x4440, 0x6276, 0xfc4d, 0x852, 0x0, 0x0);
        gbc.writeMem(0xbffc, { 0xc8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3464, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbffc));
        // C8 018E
        gbc.setState(0xcbe0, 0xe8d0, 0x8ae0, 0xbf67, 0x1393, 0x883d, 0x1, 0x0);
        gbc.writeMem(0xcbe0, { 0xc8 });
        gbc.writeMem(0xe8d0, { 0xc8, 0xb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe8d2, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcbe0));
        EXPECT(0xc8, gbc.readMem(0xe8d0));
        EXPECT(0xb, gbc.readMem(0xe8d1));
        // C8 018F
        gbc.setState(0xb3b0, 0x432f, 0x4ef0, 0x506f, 0x9bbb, 0xbe71, 0x0, 0x1);
        gbc.writeMem(0x432f, { 0x9e, 0xa9 });
        gbc.writeMem(0xb3b0, { 0xc8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4331, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb3b0));
        // C8 0190
        gbc.setState(0xa7c2, 0xb109, 0xe290, 0xa8b9, 0x2ca6, 0xf4ca, 0x1, 0x1);
        gbc.writeMem(0xa7c2, { 0xc8 });
        gbc.writeMem(0xb109, { 0xfc, 0x8b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa7c2));
        EXPECT(0xfc, gbc.readMem(0xb109));
        EXPECT(0x8b, gbc.readMem(0xb10a));
        // C8 0191
        gbc.setState(0xa2dd, 0x435d, 0x90d0, 0x44e5, 0xd3b0, 0x48e2, 0x1, 0x1);
        gbc.writeMem(0x435d, { 0xa2, 0x8e });
        gbc.writeMem(0xa2dd, { 0xc8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa2dd));
        // C8 0192
        gbc.setState(0x9a2d, 0xcf98, 0xfed0, 0x1e24, 0x43ad, 0x2ea9, 0x1, 0x0);
        gbc.writeMem(0x9a2d, { 0xc8 });
        gbc.writeMem(0xcf98, { 0x2c, 0x71 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcf9a, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9a2d));
        EXPECT(0x2c, gbc.readMem(0xcf98));
        EXPECT(0x71, gbc.readMem(0xcf99));
        // C8 0193
        gbc.setState(0x88f0, 0x5788, 0xfca0, 0xed4d, 0x6325, 0x244e, 0x0, 0x1);
        gbc.writeMem(0x5788, { 0xc4, 0x11 });
        gbc.writeMem(0x88f0, { 0xc8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x88f0));
        // C8 0195
        gbc.setState(0xb4a9, 0xf448, 0x29d0, 0x3964, 0xbe6d, 0x660d, 0x0, 0x0);
        gbc.writeMem(0xb4a9, { 0xc8 });
        gbc.writeMem(0xf448, { 0x5a, 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf44a, gbc.sp());
        EXPECT(0x8f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb4a9));
        EXPECT(0x5a, gbc.readMem(0xf448));
        EXPECT(0x8f, gbc.readMem(0xf449));
        // C8 0196
        gbc.setState(0x7b3b, 0x4572, 0x8610, 0xb94f, 0x2269, 0x3604, 0x0, 0x1);
        gbc.writeMem(0x7b3b, { 0xc8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0197
        gbc.setState(0xac40, 0xfa61, 0x5d80, 0x2f2d, 0x5d1d, 0x22df, 0x0, 0x1);
        gbc.writeMem(0xac40, { 0xc8 });
        gbc.writeMem(0xfa61, { 0x73, 0xd4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xac40));
        EXPECT(0x73, gbc.readMem(0xfa61));
        EXPECT(0xd4, gbc.readMem(0xfa62));
        // C8 0198
        gbc.setState(0xaa44, 0x21d3, 0xe310, 0x1f6d, 0xd850, 0x974, 0x0, 0x0);
        gbc.writeMem(0xaa44, { 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x21d3, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaa44));
        // C8 0199
        gbc.setState(0x116d, 0xe395, 0x2180, 0xd88d, 0xd997, 0x967f, 0x0, 0x1);
        gbc.writeMem(0x116d, { 0xc8 });
        gbc.writeMem(0xe395, { 0x5e, 0x68 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe397, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe395));
        EXPECT(0x68, gbc.readMem(0xe396));
        // C8 019A
        gbc.setState(0xb06, 0xc51e, 0x2500, 0xec59, 0xafc6, 0x3c9e, 0x1, 0x0);
        gbc.writeMem(0xb06, { 0xc8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc51e, gbc.sp());
        EXPECT(0xb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 019B
        gbc.setState(0x170d, 0xdb05, 0xeb60, 0x6a0d, 0xd0c4, 0x701b, 0x0, 0x0);
        gbc.writeMem(0x170d, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdb05, gbc.sp());
        EXPECT(0x170e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 019C
        gbc.setState(0x1ca7, 0x4845, 0x6290, 0xdaf6, 0xbbeb, 0xc81e, 0x1, 0x0);
        gbc.writeMem(0x1ca7, { 0xc8 });
        gbc.writeMem(0x4845, { 0xd3, 0xc6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4847, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 019D
        gbc.setState(0x7e61, 0x8aee, 0x6560, 0x5ccb, 0xdd48, 0xcd17, 0x0, 0x1);
        gbc.writeMem(0x7e61, { 0xc8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0x7e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 019E
        gbc.setState(0xc1ea, 0x5244, 0x6c70, 0xa078, 0xe9db, 0x5bf4, 0x1, 0x0);
        gbc.writeMem(0xc1ea, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5244, gbc.sp());
        EXPECT(0xc1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc1ea));
        // C8 019F
        gbc.setState(0xb46a, 0xd96d, 0xaa30, 0xc4a4, 0x6738, 0x1128, 0x0, 0x1);
        gbc.writeMem(0xb46a, { 0xc8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd96d, gbc.sp());
        EXPECT(0xb46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb46a));
        // C8 01A0
        gbc.setState(0x623a, 0x2c9a, 0xf800, 0x1d6f, 0x7763, 0xad6d, 0x0, 0x1);
        gbc.writeMem(0x623a, { 0xc8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2c9a, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01A1
        gbc.setState(0x334c, 0x90bc, 0xebc0, 0x1c12, 0xf8c, 0xda4e, 0x0, 0x1);
        gbc.writeMem(0x334c, { 0xc8 });
        gbc.writeMem(0x90bc, { 0xb4, 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x90be, gbc.sp());
        EXPECT(0xab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x90bc));
        EXPECT(0xa, gbc.readMem(0x90bd));
        // C8 01A2
        gbc.setState(0x9a83, 0x2cd9, 0x5740, 0xa309, 0xafb8, 0x7bef, 0x1, 0x0);
        gbc.writeMem(0x9a83, { 0xc8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2cd9, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9a83));
        // C8 01A3
        gbc.setState(0x1a1b, 0xc897, 0x45f0, 0x66bf, 0xcf1, 0x1b8b, 0x1, 0x0);
        gbc.writeMem(0x1a1b, { 0xc8 });
        gbc.writeMem(0xc897, { 0xbe, 0x43 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc899, gbc.sp());
        EXPECT(0x43be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc897));
        EXPECT(0x43, gbc.readMem(0xc898));
        // C8 01A4
        gbc.setState(0xd27a, 0x428f, 0xd040, 0x2f29, 0xce36, 0x3dd2, 0x1, 0x0);
        gbc.writeMem(0xd27a, { 0xc8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0xd27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd27a));
        // C8 01A5
        gbc.setState(0xa914, 0x1c6f, 0x6b90, 0x83b9, 0xb4ff, 0x1c3, 0x0, 0x0);
        gbc.writeMem(0x1c6f, { 0xbc, 0xef });
        gbc.writeMem(0xa914, { 0xc8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa914));
        // C8 01A7
        gbc.setState(0x5b8, 0xc14d, 0x6c90, 0x1f9b, 0xa7ad, 0xf8d0, 0x0, 0x0);
        gbc.writeMem(0x5b8, { 0xc8 });
        gbc.writeMem(0xc14d, { 0x9f, 0xae });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc14f, gbc.sp());
        EXPECT(0xae9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc14d));
        EXPECT(0xae, gbc.readMem(0xc14e));
        // C8 01A8
        gbc.setState(0xce1a, 0x96ce, 0x720, 0x13d2, 0xdb9f, 0xdc28, 0x0, 0x0);
        gbc.writeMem(0xce1a, { 0xc8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0xce1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xce1a));
        // C8 01AA
        gbc.setState(0xee8c, 0xa8d2, 0x6910, 0x860b, 0x4e2d, 0xba6, 0x0, 0x1);
        gbc.writeMem(0xee8c, { 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0xee8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xee8c));
        // C8 01AB
        gbc.setState(0xd4f5, 0x8f89, 0xdba0, 0x2e1b, 0x527c, 0x26bb, 0x1, 0x0);
        gbc.writeMem(0x8f89, { 0x45, 0x7c });
        gbc.writeMem(0xd4f5, { 0xc8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x7c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8f89));
        EXPECT(0x7c, gbc.readMem(0x8f8a));
        EXPECT(0xc8, gbc.readMem(0xd4f5));
        // C8 01AC
        gbc.setState(0x1f9a, 0x9427, 0x8570, 0x5a32, 0xee2b, 0x98bc, 0x1, 0x1);
        gbc.writeMem(0x1f9a, { 0xc8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01AD
        gbc.setState(0x2f7a, 0x9a70, 0xb5c0, 0x5e17, 0x978e, 0x9d33, 0x0, 0x1);
        gbc.writeMem(0x2f7a, { 0xc8 });
        gbc.writeMem(0x9a70, { 0xd2, 0x8b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9a72, gbc.sp());
        EXPECT(0x8bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9a70));
        EXPECT(0x8b, gbc.readMem(0x9a71));
        // C8 01AE
        gbc.setState(0xc42, 0xea77, 0xfc60, 0x38ed, 0x706c, 0x2bb1, 0x0, 0x0);
        gbc.writeMem(0xc42, { 0xc8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea77, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01AF
        gbc.setState(0xe2f1, 0x8e1, 0x49b0, 0xe5f3, 0x516e, 0x17fe, 0x0, 0x1);
        gbc.writeMem(0x8e1, { 0xb0, 0x27 });
        gbc.writeMem(0xe2f1, { 0xc8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x27b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe2f1));
        // C8 01B0
        gbc.setState(0xd592, 0x41c9, 0x1fc0, 0x668d, 0x59d4, 0xfd29, 0x1, 0x1);
        gbc.writeMem(0x41c9, { 0x2e, 0xcc });
        gbc.writeMem(0xd592, { 0xc8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0xcc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd592));
        // C8 01B1
        gbc.setState(0xce8e, 0xa615, 0x9ac0, 0x4072, 0x4ce6, 0x7220, 0x0, 0x1);
        gbc.writeMem(0xa615, { 0x92, 0x72 });
        gbc.writeMem(0xce8e, { 0xc8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa617, gbc.sp());
        EXPECT(0x7292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa615));
        EXPECT(0x72, gbc.readMem(0xa616));
        EXPECT(0xc8, gbc.readMem(0xce8e));
        // C8 01B2
        gbc.setState(0x2f12, 0xe0a3, 0x6910, 0x30d6, 0xbf68, 0xfb40, 0x0, 0x1);
        gbc.writeMem(0x2f12, { 0xc8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01B3
        gbc.setState(0xa9ab, 0x84ab, 0xfb00, 0xda78, 0xddf0, 0xcdcf, 0x1, 0x1);
        gbc.writeMem(0xa9ab, { 0xc8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x84ab, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa9ab));
        // C8 01B4
        gbc.setState(0x387c, 0x5ccc, 0x37b0, 0xa66a, 0xfdeb, 0x13c1, 0x0, 0x0);
        gbc.writeMem(0x387c, { 0xc8 });
        gbc.writeMem(0x5ccc, { 0xae, 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5cce, gbc.sp());
        EXPECT(0x4bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01B5
        gbc.setState(0xb85a, 0x8a3d, 0xcd30, 0x97bd, 0xdda4, 0x3a9b, 0x0, 0x1);
        gbc.writeMem(0xb85a, { 0xc8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8a3d, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb85a));
        // C8 01B6
        gbc.setState(0xeb1e, 0x5b3e, 0xcac0, 0x54ec, 0x305a, 0xba8b, 0x1, 0x1);
        gbc.writeMem(0x5b3e, { 0x4a, 0x32 });
        gbc.writeMem(0xeb1e, { 0xc8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x324a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xeb1e));
        // C8 01B7
        gbc.setState(0xb0b8, 0x5dcb, 0x6a80, 0x260c, 0xc94b, 0x675c, 0x0, 0x0);
        gbc.writeMem(0x5dcb, { 0x30, 0xe6 });
        gbc.writeMem(0xb0b8, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5dcd, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb0b8));
        // C8 01B8
        gbc.setState(0x1888, 0x65f3, 0x2f0, 0xef98, 0x6b15, 0xf13d, 0x0, 0x1);
        gbc.writeMem(0x1888, { 0xc8 });
        gbc.writeMem(0x65f3, { 0x2, 0x63 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01B9
        gbc.setState(0xd955, 0xfc83, 0x52e0, 0xc9f, 0xd215, 0xc203, 0x0, 0x1);
        gbc.writeMem(0xd955, { 0xc8 });
        gbc.writeMem(0xfc83, { 0x77, 0xb2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0xb277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd955));
        EXPECT(0x77, gbc.readMem(0xfc83));
        EXPECT(0xb2, gbc.readMem(0xfc84));
        // C8 01BA
        gbc.setState(0xc1bd, 0xba9c, 0x1630, 0x9271, 0xf9cf, 0x6ce8, 0x1, 0x0);
        gbc.writeMem(0xc1bd, { 0xc8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xba9c, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc1bd));
        // C8 01BB
        gbc.setState(0x2bb6, 0x2bac, 0xa460, 0xb216, 0x79a2, 0x2f72, 0x1, 0x1);
        gbc.writeMem(0x2bb6, { 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2bac, gbc.sp());
        EXPECT(0x2bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01BC
        gbc.setState(0xa768, 0x4c0a, 0x5350, 0x9847, 0x6afd, 0xc87e, 0x1, 0x1);
        gbc.writeMem(0xa768, { 0xc8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4c0a, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa768));
        // C8 01BD
        gbc.setState(0x9166, 0x47d7, 0xc100, 0x2eef, 0x9a5d, 0xbf27, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0xc8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x47d7, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9166));
        // C8 01BE
        gbc.setState(0x1cd2, 0xb971, 0x2d60, 0x269b, 0x7fad, 0xa4af, 0x0, 0x0);
        gbc.writeMem(0x1cd2, { 0xc8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01BF
        gbc.setState(0x4af6, 0xc491, 0xf760, 0x955c, 0x4768, 0x839f, 0x0, 0x0);
        gbc.writeMem(0x4af6, { 0xc8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0x4af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01C0
        gbc.setState(0x3702, 0x97db, 0xd870, 0x950c, 0xbf71, 0x57db, 0x0, 0x0);
        gbc.writeMem(0x3702, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01C1
        gbc.setState(0x9431, 0xc05b, 0x37b0, 0x37ec, 0x6881, 0xecc4, 0x1, 0x0);
        gbc.writeMem(0x9431, { 0xc8 });
        gbc.writeMem(0xc05b, { 0x67, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9431));
        EXPECT(0x67, gbc.readMem(0xc05b));
        EXPECT(0xb0, gbc.readMem(0xc05c));
        // C8 01C2
        gbc.setState(0x4498, 0xa048, 0x3e20, 0xe8c4, 0x35ad, 0xd8b, 0x1, 0x1);
        gbc.writeMem(0x4498, { 0xc8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01C3
        gbc.setState(0xc0a0, 0xb39f, 0x3c10, 0x6077, 0xb96d, 0x34d5, 0x0, 0x0);
        gbc.writeMem(0xc0a0, { 0xc8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb39f, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc0a0));
        // C8 01C4
        gbc.setState(0xe1d1, 0xd408, 0xa350, 0x5586, 0x8cd6, 0xbfab, 0x0, 0x0);
        gbc.writeMem(0xe1d1, { 0xc8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd408, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe1d1));
        // C8 01C5
        gbc.setState(0xda1b, 0x71a7, 0x6aa0, 0x1236, 0xa9f8, 0xf711, 0x1, 0x1);
        gbc.writeMem(0x71a7, { 0x19, 0x75 });
        gbc.writeMem(0xda1b, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x71a9, gbc.sp());
        EXPECT(0x7519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xda1b));
        // C8 01C6
        gbc.setState(0x3f79, 0x83d6, 0x4fd0, 0x2a77, 0xb5fc, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x3f79, { 0xc8 });
        gbc.writeMem(0x83d6, { 0x79, 0xa3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x83d8, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x83d6));
        EXPECT(0xa3, gbc.readMem(0x83d7));
        // C8 01C7
        gbc.setState(0x7a35, 0xe1b6, 0xdcd0, 0xec62, 0x4184, 0x7e52, 0x0, 0x0);
        gbc.writeMem(0x7a35, { 0xc8 });
        gbc.writeMem(0xe1b6, { 0x9b, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe1b8, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe1b6));
        EXPECT(0xba, gbc.readMem(0xe1b7));
        // C8 01C8
        gbc.setState(0xdc8d, 0x7aaa, 0x2980, 0xf032, 0x4754, 0x4938, 0x0, 0x0);
        gbc.writeMem(0x7aaa, { 0xc8, 0xf9 });
        gbc.writeMem(0xdc8d, { 0xc8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7aac, gbc.sp());
        EXPECT(0xf9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdc8d));
        // C8 01C9
        gbc.setState(0xb838, 0x4e20, 0xde00, 0x72c3, 0xe656, 0x1b0, 0x0, 0x0);
        gbc.writeMem(0xb838, { 0xc8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4e20, gbc.sp());
        EXPECT(0xb839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb838));
        // C8 01CA
        gbc.setState(0x4da9, 0x6b4a, 0x6700, 0x388e, 0xe789, 0x2b78, 0x1, 0x1);
        gbc.writeMem(0x4da9, { 0xc8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0x4daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01CB
        gbc.setState(0xaf58, 0xcfd6, 0xc5f0, 0x4074, 0xa996, 0x2a4b, 0x0, 0x1);
        gbc.writeMem(0xaf58, { 0xc8 });
        gbc.writeMem(0xcfd6, { 0x11, 0x91 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x9111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaf58));
        EXPECT(0x11, gbc.readMem(0xcfd6));
        EXPECT(0x91, gbc.readMem(0xcfd7));
        // C8 01CC
        gbc.setState(0xcd12, 0xb67c, 0x94d0, 0x772, 0x9077, 0x2c24, 0x0, 0x0);
        gbc.writeMem(0xb67c, { 0xa7, 0x6a });
        gbc.writeMem(0xcd12, { 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb67e, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb67c));
        EXPECT(0x6a, gbc.readMem(0xb67d));
        EXPECT(0xc8, gbc.readMem(0xcd12));
        // C8 01CD
        gbc.setState(0x68e5, 0xb329, 0x8cd0, 0x9386, 0xbbd2, 0xbe90, 0x1, 0x1);
        gbc.writeMem(0x68e5, { 0xc8 });
        gbc.writeMem(0xb329, { 0xc7, 0xbc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0xbcc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb329));
        EXPECT(0xbc, gbc.readMem(0xb32a));
        // C8 01CE
        gbc.setState(0x3c15, 0xfc0, 0x7830, 0x8afd, 0xf8dc, 0x9659, 0x1, 0x0);
        gbc.writeMem(0x3c15, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfc0, gbc.sp());
        EXPECT(0x3c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01CF
        gbc.setState(0x50a8, 0x12b6, 0x1800, 0x4354, 0x723d, 0x44a0, 0x0, 0x0);
        gbc.writeMem(0x50a8, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x12b6, gbc.sp());
        EXPECT(0x50a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01D0
        gbc.setState(0x2b74, 0xb05e, 0x90d0, 0x6ecc, 0x1bda, 0xc260, 0x0, 0x0);
        gbc.writeMem(0x2b74, { 0xc8 });
        gbc.writeMem(0xb05e, { 0xd5, 0xfa });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0xfad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb05e));
        EXPECT(0xfa, gbc.readMem(0xb05f));
        // C8 01D1
        gbc.setState(0x8d06, 0x6609, 0x50c0, 0x37b5, 0xc4f8, 0xbb94, 0x1, 0x0);
        gbc.writeMem(0x6609, { 0x87, 0xf9 });
        gbc.writeMem(0x8d06, { 0xc8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x660b, gbc.sp());
        EXPECT(0xf987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8d06));
        // C8 01D2
        gbc.setState(0x7233, 0x2ec8, 0xdda0, 0x2753, 0xeba9, 0xbdc0, 0x1, 0x1);
        gbc.writeMem(0x2ec8, { 0xe8, 0x1d });
        gbc.writeMem(0x7233, { 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01D3
        gbc.setState(0x991d, 0x4685, 0x76a0, 0x4add, 0x5da6, 0xb8b3, 0x0, 0x0);
        gbc.writeMem(0x4685, { 0x67, 0xe3 });
        gbc.writeMem(0x991d, { 0xc8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4687, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x991d));
        // C8 01D4
        gbc.setState(0x1145, 0x5a4c, 0x98c0, 0x99f, 0xe0b1, 0x6f1, 0x0, 0x1);
        gbc.writeMem(0x1145, { 0xc8 });
        gbc.writeMem(0x5a4c, { 0x1a, 0x8b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5a4e, gbc.sp());
        EXPECT(0x8b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01D5
        gbc.setState(0xc65, 0x18b1, 0x7190, 0x95bd, 0xf594, 0xb174, 0x0, 0x1);
        gbc.writeMem(0xc65, { 0xc8 });
        gbc.writeMem(0x18b1, { 0x79, 0x53 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x18b3, gbc.sp());
        EXPECT(0x5379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01D6
        gbc.setState(0xb063, 0x20c5, 0x8960, 0x666f, 0x3c77, 0x83c7, 0x1, 0x0);
        gbc.writeMem(0xb063, { 0xc8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x20c5, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb063));
        // C8 01D8
        gbc.setState(0x36f7, 0x9e4, 0x12f0, 0xd6f8, 0x55c4, 0xe140, 0x1, 0x1);
        gbc.writeMem(0x9e4, { 0x56, 0xb3 });
        gbc.writeMem(0x36f7, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01D9
        gbc.setState(0xbb20, 0xc518, 0x6a40, 0x7f59, 0x6f60, 0xc3eb, 0x0, 0x1);
        gbc.writeMem(0xbb20, { 0xc8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc518, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbb20));
        // C8 01DA
        gbc.setState(0x3c06, 0xb4ba, 0xbe80, 0x9200, 0x6caf, 0x43f4, 0x1, 0x0);
        gbc.writeMem(0x3c06, { 0xc8 });
        gbc.writeMem(0xb4ba, { 0x4c, 0x5a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb4bc, gbc.sp());
        EXPECT(0x5a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb4ba));
        EXPECT(0x5a, gbc.readMem(0xb4bb));
        // C8 01DB
        gbc.setState(0x68c2, 0x3e9a, 0xc210, 0x8ede, 0x4706, 0x426f, 0x0, 0x0);
        gbc.writeMem(0x68c2, { 0xc8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0x68c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01DC
        gbc.setState(0x2188, 0xa315, 0x2cf0, 0x49b2, 0x4119, 0xd200, 0x1, 0x1);
        gbc.writeMem(0x2188, { 0xc8 });
        gbc.writeMem(0xa315, { 0xb0, 0x97 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa315));
        EXPECT(0x97, gbc.readMem(0xa316));
        // C8 01DD
        gbc.setState(0x39d8, 0x72e0, 0xe850, 0xa97e, 0x9b59, 0x5615, 0x1, 0x1);
        gbc.writeMem(0x39d8, { 0xc8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x72e0, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01DE
        gbc.setState(0x382a, 0x967a, 0x6570, 0xde54, 0x96ca, 0x96c1, 0x0, 0x0);
        gbc.writeMem(0x382a, { 0xc8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x967a, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01DF
        gbc.setState(0x8349, 0x4b3d, 0xc760, 0x95ae, 0xb8be, 0xe1f9, 0x1, 0x0);
        gbc.writeMem(0x8349, { 0xc8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4b3d, gbc.sp());
        EXPECT(0x834a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8349));
        // C8 01E0
        gbc.setState(0x148b, 0xbb2, 0x9f80, 0x395a, 0x117, 0xf4bf, 0x1, 0x1);
        gbc.writeMem(0xbb2, { 0xfa, 0xc6 });
        gbc.writeMem(0x148b, { 0xc8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbb4, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01E1
        gbc.setState(0x8e, 0x9b97, 0x7c30, 0xcf59, 0xf95f, 0x244e, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9b97, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01E2
        gbc.setState(0xd495, 0x9d41, 0x7900, 0x9280, 0xa6a6, 0x3322, 0x1, 0x0);
        gbc.writeMem(0xd495, { 0xc8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9d41, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd495));
        // C8 01E3
        gbc.setState(0x7d7c, 0x7f8e, 0x7d40, 0x2b92, 0xdd0b, 0xfa3d, 0x1, 0x1);
        gbc.writeMem(0x7d7c, { 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0x7d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01E4
        gbc.setState(0xb37, 0xc65, 0xe050, 0xaa2d, 0x7430, 0xa05a, 0x1, 0x1);
        gbc.writeMem(0xb37, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01E5
        gbc.setState(0xd20b, 0x1ca4, 0x20e0, 0xc191, 0xac8f, 0x28a3, 0x0, 0x1);
        gbc.writeMem(0x1ca4, { 0x59, 0xdd });
        gbc.writeMem(0xd20b, { 0xc8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0xdd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd20b));
        // C8 01E6
        gbc.setState(0x70ac, 0x667d, 0x6300, 0x2c65, 0x6667, 0xbc62, 0x0, 0x0);
        gbc.writeMem(0x70ac, { 0xc8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x667d, gbc.sp());
        EXPECT(0x70ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01E8
        gbc.setState(0xcef4, 0x8387, 0x7db0, 0x99b3, 0xfe52, 0xbf5c, 0x1, 0x0);
        gbc.writeMem(0x8387, { 0x67, 0xb4 });
        gbc.writeMem(0xcef4, { 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8389, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8387));
        EXPECT(0xb4, gbc.readMem(0x8388));
        EXPECT(0xc8, gbc.readMem(0xcef4));
        // C8 01E9
        gbc.setState(0x6393, 0x24c1, 0xc4d0, 0x60ab, 0xa292, 0x637a, 0x1, 0x0);
        gbc.writeMem(0x24c1, { 0xf9, 0xd4 });
        gbc.writeMem(0x6393, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x24c3, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 01EA
        gbc.setState(0xdac2, 0xbfde, 0xbdd0, 0x44be, 0xb1ee, 0xe8c6, 0x0, 0x0);
        gbc.writeMem(0xbfde, { 0xaa, 0x52 });
        gbc.writeMem(0xdac2, { 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbfde));
        EXPECT(0x52, gbc.readMem(0xbfdf));
        EXPECT(0xc8, gbc.readMem(0xdac2));
        // C8 01EB
        gbc.setState(0x1806, 0x2a13, 0xc120, 0xda91, 0x4380, 0xe9a6, 0x0, 0x0);
        gbc.writeMem(0x1806, { 0xc8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a13, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01EC
        gbc.setState(0xe8ae, 0xa8e0, 0x3870, 0x996a, 0xaa5c, 0xadaa, 0x1, 0x0);
        gbc.writeMem(0xe8ae, { 0xc8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe8ae));
        // C8 01ED
        gbc.setState(0x8a8f, 0xe509, 0xba0, 0xe161, 0xd200, 0xc370, 0x1, 0x1);
        gbc.writeMem(0x8a8f, { 0xc8 });
        gbc.writeMem(0xe509, { 0xaf, 0xae });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe50b, gbc.sp());
        EXPECT(0xaeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8a8f));
        EXPECT(0xaf, gbc.readMem(0xe509));
        EXPECT(0xae, gbc.readMem(0xe50a));
        // C8 01EE
        gbc.setState(0x639b, 0x5dcb, 0x8ce0, 0xc9e9, 0x2e3, 0x7380, 0x1, 0x0);
        gbc.writeMem(0x5dcb, { 0x30, 0xe6 });
        gbc.writeMem(0x639b, { 0xc8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5dcd, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01EF
        gbc.setState(0x7d02, 0x5ee2, 0x8920, 0x113d, 0xf7a6, 0x1272, 0x1, 0x1);
        gbc.writeMem(0x7d02, { 0xc8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0x7d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01F0
        gbc.setState(0xe84b, 0x9aff, 0xba50, 0xb6e0, 0xf040, 0xecaf, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0xc8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0xe84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe84b));
        // C8 01F1
        gbc.setState(0xd01b, 0x763f, 0x6790, 0x32e6, 0xb3db, 0x4d3d, 0x0, 0x0);
        gbc.writeMem(0x763f, { 0x3a, 0xb5 });
        gbc.writeMem(0xd01b, { 0xc8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7641, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd01b));
        // C8 01F2
        gbc.setState(0x8fa3, 0x69e2, 0xe4d0, 0xcc5, 0xdb5, 0xdf14, 0x0, 0x0);
        gbc.writeMem(0x69e2, { 0xc4, 0xdd });
        gbc.writeMem(0x8fa3, { 0xc8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8fa3));
        // C8 01F3
        gbc.setState(0xe007, 0x46dc, 0xdfc0, 0x684c, 0x5c4c, 0x2e96, 0x0, 0x1);
        gbc.writeMem(0x46dc, { 0xf8, 0x2e });
        gbc.writeMem(0xe007, { 0xc8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0x2ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe007));
        // C8 01F4
        gbc.setState(0xab7e, 0xa153, 0xd3a0, 0x5876, 0x890c, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0xa153, { 0xe1, 0x66 });
        gbc.writeMem(0xab7e, { 0xc8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa155, gbc.sp());
        EXPECT(0x66e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa153));
        EXPECT(0x66, gbc.readMem(0xa154));
        EXPECT(0xc8, gbc.readMem(0xab7e));
        // C8 01F5
        gbc.setState(0x383f, 0x625a, 0x2240, 0xa3c, 0xc72f, 0x87a, 0x1, 0x1);
        gbc.writeMem(0x383f, { 0xc8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x625a, gbc.sp());
        EXPECT(0x3840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01F7
        gbc.setState(0x265, 0xe2d1, 0x1c80, 0xb3cb, 0x1fbf, 0x9557, 0x1, 0x1);
        gbc.writeMem(0x265, { 0xc8 });
        gbc.writeMem(0xe2d1, { 0x46, 0xb4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe2d3, gbc.sp());
        EXPECT(0xb446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe2d1));
        EXPECT(0xb4, gbc.readMem(0xe2d2));
        // C8 01F8
        gbc.setState(0x900, 0xfca1, 0x1c90, 0x47f5, 0x39f0, 0x2c99, 0x0, 0x0);
        gbc.writeMem(0x900, { 0xc8 });
        gbc.writeMem(0xfca1, { 0x67, 0xf4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfca3, gbc.sp());
        EXPECT(0xf467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xfca1));
        EXPECT(0xf4, gbc.readMem(0xfca2));
        // C8 01F9
        gbc.setState(0x12f, 0xf8cf, 0x26f0, 0x2eb2, 0x608d, 0x8ebc, 0x0, 0x1);
        gbc.writeMem(0x12f, { 0xc8 });
        gbc.writeMem(0xf8cf, { 0x60, 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xf8cf));
        EXPECT(0x94, gbc.readMem(0xf8d0));
        // C8 01FA
        gbc.setState(0xc783, 0x472e, 0xbdb0, 0x8b52, 0xa1ca, 0x515e, 0x1, 0x1);
        gbc.writeMem(0x472e, { 0xec, 0xea });
        gbc.writeMem(0xc783, { 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4730, gbc.sp());
        EXPECT(0xeaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc783));
        // C8 01FB
        gbc.setState(0x50b4, 0x18d9, 0x91e0, 0xbc8c, 0x6e24, 0x6541, 0x1, 0x1);
        gbc.writeMem(0x18d9, { 0xdd, 0x78 });
        gbc.writeMem(0x50b4, { 0xc8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x18db, gbc.sp());
        EXPECT(0x78dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01FC
        gbc.setState(0x46a6, 0x30db, 0x68a0, 0xcec, 0x40b4, 0x3ce1, 0x0, 0x0);
        gbc.writeMem(0x30db, { 0xf7, 0x47 });
        gbc.writeMem(0x46a6, { 0xc8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0x47f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01FD
        gbc.setState(0xb875, 0xe64f, 0xab0, 0x1cb7, 0x3d35, 0xe533, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0xc8 });
        gbc.writeMem(0xe64f, { 0xc8, 0x2b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe651, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb875));
        EXPECT(0xc8, gbc.readMem(0xe64f));
        EXPECT(0x2b, gbc.readMem(0xe650));
        // C8 01FE
        gbc.setState(0x6b0c, 0xa3c5, 0x8300, 0x3709, 0x8989, 0x355a, 0x1, 0x0);
        gbc.writeMem(0x6b0c, { 0xc8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 01FF
        gbc.setState(0x3dd2, 0x25fc, 0x8c00, 0x96ef, 0x6337, 0xff5f, 0x0, 0x1);
        gbc.writeMem(0x3dd2, { 0xc8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0200
        gbc.setState(0xca65, 0xc5b7, 0xfec0, 0xcae8, 0x5c52, 0xee3e, 0x0, 0x1);
        gbc.writeMem(0xc5b7, { 0x24, 0xf3 });
        gbc.writeMem(0xca65, { 0xc8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc5b9, gbc.sp());
        EXPECT(0xf324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc5b7));
        EXPECT(0xf3, gbc.readMem(0xc5b8));
        EXPECT(0xc8, gbc.readMem(0xca65));
        // C8 0201
        gbc.setState(0xda31, 0x645e, 0x7430, 0x990, 0x103b, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0xda31, { 0xc8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x645e, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xda31));
        // C8 0202
        gbc.setState(0x7422, 0xc3d1, 0x540, 0xe6a1, 0x18f2, 0x3f50, 0x0, 0x1);
        gbc.writeMem(0x7422, { 0xc8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0x7423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0203
        gbc.setState(0x85d6, 0xd53d, 0x23a0, 0x7535, 0x955, 0x4a60, 0x1, 0x1);
        gbc.writeMem(0x85d6, { 0xc8 });
        gbc.writeMem(0xd53d, { 0x2c, 0x1b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x85d6));
        EXPECT(0x2c, gbc.readMem(0xd53d));
        EXPECT(0x1b, gbc.readMem(0xd53e));
        // C8 0204
        gbc.setState(0x9324, 0x5bd6, 0x4970, 0x2587, 0x898f, 0x5cb8, 0x1, 0x0);
        gbc.writeMem(0x9324, { 0xc8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9324));
        // C8 0207
        gbc.setState(0xce58, 0xcc10, 0xf4a0, 0x8c1e, 0x59f7, 0x5712, 0x1, 0x1);
        gbc.writeMem(0xcc10, { 0x5f, 0xc2 });
        gbc.writeMem(0xce58, { 0xc8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcc10));
        EXPECT(0xc2, gbc.readMem(0xcc11));
        EXPECT(0xc8, gbc.readMem(0xce58));
        // C8 0208
        gbc.setState(0xcf15, 0xb0a, 0x8710, 0x4548, 0x25b6, 0xc8aa, 0x1, 0x0);
        gbc.writeMem(0xcf15, { 0xc8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0xcf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcf15));
        // C8 0209
        gbc.setState(0x179b, 0xf27f, 0xf20, 0xaea8, 0xccde, 0x5b80, 0x1, 0x1);
        gbc.writeMem(0x179b, { 0xc8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf27f, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 020A
        gbc.setState(0x2a56, 0x67f8, 0x7f0, 0xadf3, 0x501b, 0xcc06, 0x1, 0x0);
        gbc.writeMem(0x2a56, { 0xc8 });
        gbc.writeMem(0x67f8, { 0xfa, 0x3a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 020B
        gbc.setState(0x635d, 0x59d4, 0xb880, 0xeb46, 0x1c5d, 0x7831, 0x1, 0x1);
        gbc.writeMem(0x59d4, { 0x1e, 0xd3 });
        gbc.writeMem(0x635d, { 0xc8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xd31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 020C
        gbc.setState(0x465b, 0x6a1a, 0x6890, 0x241a, 0x4ffe, 0x5f13, 0x0, 0x0);
        gbc.writeMem(0x465b, { 0xc8 });
        gbc.writeMem(0x6a1a, { 0xd4, 0x24 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a1c, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 020D
        gbc.setState(0x85c9, 0x651b, 0x25a0, 0x40c7, 0xcd1a, 0x6b41, 0x1, 0x0);
        gbc.writeMem(0x651b, { 0xab, 0xbf });
        gbc.writeMem(0x85c9, { 0xc8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x651d, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x85c9));
        // C8 020E
        gbc.setState(0xe84, 0x10ad, 0xb9b0, 0x8630, 0x1d3b, 0xb9f2, 0x1, 0x0);
        gbc.writeMem(0xe84, { 0xc8 });
        gbc.writeMem(0x10ad, { 0xa6, 0x58 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 020F
        gbc.setState(0x3044, 0xe09e, 0x1220, 0x7515, 0xdd30, 0x408c, 0x1, 0x0);
        gbc.writeMem(0x3044, { 0xc8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0210
        gbc.setState(0x5a7a, 0x9e7e, 0x71f0, 0xb243, 0x81a, 0x4099, 0x0, 0x0);
        gbc.writeMem(0x5a7a, { 0xc8 });
        gbc.writeMem(0x9e7e, { 0x52, 0xa6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9e80, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9e7e));
        EXPECT(0xa6, gbc.readMem(0x9e7f));
        // C8 0211
        gbc.setState(0xcbe8, 0x49f9, 0x2070, 0x695a, 0xd7db, 0x3ac6, 0x0, 0x1);
        gbc.writeMem(0xcbe8, { 0xc8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x49f9, gbc.sp());
        EXPECT(0xcbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcbe8));
        // C8 0214
        gbc.setState(0xddd2, 0x2f61, 0x2970, 0x9ac0, 0x919d, 0xdf8d, 0x0, 0x0);
        gbc.writeMem(0xddd2, { 0xc8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2f61, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xddd2));
        // C8 0215
        gbc.setState(0x24e3, 0xd177, 0xa7b0, 0x3d1e, 0xd1f6, 0xbdf0, 0x1, 0x0);
        gbc.writeMem(0x24e3, { 0xc8 });
        gbc.writeMem(0xd177, { 0xe7, 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd179, gbc.sp());
        EXPECT(0x55e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd177));
        EXPECT(0x55, gbc.readMem(0xd178));
        // C8 0216
        gbc.setState(0x6eeb, 0xb673, 0xf370, 0xd020, 0xdac9, 0xaee6, 0x0, 0x1);
        gbc.writeMem(0x6eeb, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0x6eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0217
        gbc.setState(0x6f8c, 0xdaac, 0xdda0, 0x9044, 0x8e47, 0xb7ba, 0x1, 0x0);
        gbc.writeMem(0x6f8c, { 0xc8 });
        gbc.writeMem(0xdaac, { 0xc3, 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0xbfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdaac));
        EXPECT(0xbf, gbc.readMem(0xdaad));
        // C8 0218
        gbc.setState(0x3537, 0x6d6d, 0xecc0, 0xa4ce, 0x36ab, 0x45c8, 0x1, 0x1);
        gbc.writeMem(0x3537, { 0xc8 });
        gbc.writeMem(0x6d6d, { 0xb1, 0xa5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0xa5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0219
        gbc.setState(0x7a26, 0x9099, 0xfb90, 0xf304, 0x2b14, 0xa998, 0x1, 0x0);
        gbc.writeMem(0x7a26, { 0xc8 });
        gbc.writeMem(0x9099, { 0xbc, 0x1e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x909b, gbc.sp());
        EXPECT(0x1ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9099));
        EXPECT(0x1e, gbc.readMem(0x909a));
        // C8 021A
        gbc.setState(0xa6d9, 0xd632, 0x94a0, 0xd101, 0xc022, 0xdb67, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0xc8 });
        gbc.writeMem(0xd632, { 0x6a, 0x82 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd634, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa6d9));
        EXPECT(0x6a, gbc.readMem(0xd632));
        EXPECT(0x82, gbc.readMem(0xd633));
        // C8 021B
        gbc.setState(0x7a01, 0xbb22, 0xe460, 0x474e, 0xfc16, 0x534b, 0x0, 0x0);
        gbc.writeMem(0x7a01, { 0xc8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbb22, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 021C
        gbc.setState(0x763c, 0xcea0, 0x9ca0, 0x527, 0xb0b9, 0x6222, 0x1, 0x0);
        gbc.writeMem(0x763c, { 0xc8 });
        gbc.writeMem(0xcea0, { 0xbc, 0xba });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcea2, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcea0));
        EXPECT(0xba, gbc.readMem(0xcea1));
        // C8 021D
        gbc.setState(0x2fb1, 0x3405, 0x1e80, 0xcb80, 0xf0e4, 0x55db, 0x0, 0x0);
        gbc.writeMem(0x2fb1, { 0xc8 });
        gbc.writeMem(0x3405, { 0xb4, 0x48 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 021E
        gbc.setState(0xb93b, 0x9f2a, 0x5430, 0x67a1, 0xb0d8, 0x900b, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0xc8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f2a, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb93b));
        // C8 021F
        gbc.setState(0xbdf1, 0x41a, 0xcc0, 0x9f2b, 0xc978, 0xe98d, 0x0, 0x0);
        gbc.writeMem(0x41a, { 0x6c, 0xf4 });
        gbc.writeMem(0xbdf1, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x41c, gbc.sp());
        EXPECT(0xf46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbdf1));
        // C8 0220
        gbc.setState(0x798b, 0x67c9, 0x3210, 0x6517, 0xefd1, 0x41ec, 0x0, 0x0);
        gbc.writeMem(0x798b, { 0xc8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0x798c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0221
        gbc.setState(0xbe15, 0xba57, 0x7150, 0x5e23, 0xfaf2, 0x2f1c, 0x0, 0x1);
        gbc.writeMem(0xbe15, { 0xc8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xba57, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbe15));
        // C8 0222
        gbc.setState(0xe28e, 0xa081, 0x15d0, 0x1346, 0xce95, 0xfd7d, 0x0, 0x0);
        gbc.writeMem(0xa081, { 0xfa, 0xa4 });
        gbc.writeMem(0xe28e, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa083, gbc.sp());
        EXPECT(0xa4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa081));
        EXPECT(0xa4, gbc.readMem(0xa082));
        EXPECT(0xc8, gbc.readMem(0xe28e));
        // C8 0223
        gbc.setState(0xa4c8, 0x4920, 0xb0c0, 0x7858, 0x56df, 0xd8b1, 0x0, 0x0);
        gbc.writeMem(0x4920, { 0xed, 0x22 });
        gbc.writeMem(0xa4c8, { 0xc8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0x22ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa4c8));
        // C8 0224
        gbc.setState(0x65d9, 0xa6c2, 0xd50, 0xd0ab, 0x84d5, 0xde1, 0x0, 0x0);
        gbc.writeMem(0x65d9, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0x65da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0225
        gbc.setState(0x934c, 0xb13, 0x94b0, 0x711d, 0x7e60, 0x7152, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0x78, 0x34 });
        gbc.writeMem(0x934c, { 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb15, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x934c));
        // C8 0226
        gbc.setState(0x17a0, 0xaf7c, 0xb9d0, 0x8e0b, 0x68f4, 0x5eaf, 0x1, 0x0);
        gbc.writeMem(0x17a0, { 0xc8 });
        gbc.writeMem(0xaf7c, { 0x5f, 0xd1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        EXPECT(0xd1, gbc.readMem(0xaf7d));
        // C8 0227
        gbc.setState(0xc20b, 0x8218, 0x51f0, 0x9033, 0x8992, 0xa73f, 0x1, 0x0);
        gbc.writeMem(0x8218, { 0x49, 0x27 });
        gbc.writeMem(0xc20b, { 0xc8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x821a, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8218));
        EXPECT(0x27, gbc.readMem(0x8219));
        EXPECT(0xc8, gbc.readMem(0xc20b));
        // C8 0228
        gbc.setState(0x61ce, 0x9fe1, 0xa030, 0x75a2, 0xb0e8, 0x2b24, 0x0, 0x1);
        gbc.writeMem(0x61ce, { 0xc8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9fe1, gbc.sp());
        EXPECT(0x61cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0229
        gbc.setState(0x2cef, 0xbc44, 0x8f00, 0xcd2e, 0x464, 0xda86, 0x0, 0x1);
        gbc.writeMem(0x2cef, { 0xc8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbc44, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 022A
        gbc.setState(0x1908, 0xab2f, 0xda90, 0xa58e, 0xc7c4, 0x8297, 0x0, 0x0);
        gbc.writeMem(0x1908, { 0xc8 });
        gbc.writeMem(0xab2f, { 0xa9, 0xcb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xab31, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xab2f));
        EXPECT(0xcb, gbc.readMem(0xab30));
        // C8 022B
        gbc.setState(0xe09f, 0xa320, 0x820, 0xa509, 0x7ad2, 0x5f9d, 0x0, 0x1);
        gbc.writeMem(0xe09f, { 0xc8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa320, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe09f));
        // C8 022C
        gbc.setState(0xb94d, 0x65d5, 0x76b0, 0xe923, 0xd73b, 0x3666, 0x0, 0x0);
        gbc.writeMem(0x65d5, { 0x39, 0xd1 });
        gbc.writeMem(0xb94d, { 0xc8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x65d7, gbc.sp());
        EXPECT(0xd139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb94d));
        // C8 022D
        gbc.setState(0x9105, 0x1642, 0x3870, 0x8dc2, 0xc8b5, 0xab8b, 0x1, 0x1);
        gbc.writeMem(0x9105, { 0xc8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1642, gbc.sp());
        EXPECT(0x9106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9105));
        // C8 022E
        gbc.setState(0x1c2a, 0x4eb5, 0xa580, 0xc617, 0x67d9, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0x1c2a, { 0xc8 });
        gbc.writeMem(0x4eb5, { 0x32, 0x8b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4eb7, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 022F
        gbc.setState(0x9d28, 0x59f3, 0xe320, 0x6a9b, 0x5d91, 0x9c5b, 0x0, 0x0);
        gbc.writeMem(0x9d28, { 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0x9d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9d28));
        // C8 0230
        gbc.setState(0xa008, 0x4a81, 0x6fb0, 0xc157, 0x11ee, 0x3ec, 0x1, 0x0);
        gbc.writeMem(0x4a81, { 0xdb, 0x14 });
        gbc.writeMem(0xa008, { 0xc8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x14db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa008));
        // C8 0231
        gbc.setState(0x1101, 0x2b6d, 0x34f0, 0x6442, 0xc23f, 0x3a18, 0x0, 0x0);
        gbc.writeMem(0x1101, { 0xc8 });
        gbc.writeMem(0x2b6d, { 0xb, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0232
        gbc.setState(0x482d, 0x75d1, 0xb3d0, 0xae1e, 0x5d79, 0x3c36, 0x0, 0x0);
        gbc.writeMem(0x482d, { 0xc8 });
        gbc.writeMem(0x75d1, { 0x9b, 0x9a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x75d3, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0233
        gbc.setState(0x8f8c, 0x8103, 0x6c80, 0x6546, 0xa5f6, 0xd608, 0x0, 0x1);
        gbc.writeMem(0x8103, { 0x62, 0x1e });
        gbc.writeMem(0x8f8c, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8103));
        EXPECT(0x1e, gbc.readMem(0x8104));
        EXPECT(0xc8, gbc.readMem(0x8f8c));
        // C8 0234
        gbc.setState(0xb8e9, 0x2f63, 0xfb20, 0x7995, 0x47da, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0xb8e9, { 0xc8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2f63, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb8e9));
        // C8 0235
        gbc.setState(0x3a8, 0x3783, 0x5ea0, 0xaa06, 0xf594, 0xb69d, 0x0, 0x0);
        gbc.writeMem(0x3a8, { 0xc8 });
        gbc.writeMem(0x3783, { 0x50, 0x33 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3785, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0236
        gbc.setState(0xd3d7, 0x43c5, 0xbf90, 0xec8c, 0x9da4, 0x9d89, 0x1, 0x0);
        gbc.writeMem(0x43c5, { 0x1e, 0x13 });
        gbc.writeMem(0xd3d7, { 0xc8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43c7, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd3d7));
        // C8 0237
        gbc.setState(0xe876, 0x8665, 0x8e10, 0xc4fa, 0x4159, 0xd038, 0x0, 0x1);
        gbc.writeMem(0xe876, { 0xc8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe876));
        // C8 0238
        gbc.setState(0x6d6e, 0x48b4, 0x3640, 0x111, 0xe9f3, 0xdb27, 0x1, 0x0);
        gbc.writeMem(0x6d6e, { 0xc8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x48b4, gbc.sp());
        EXPECT(0x6d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0239
        gbc.setState(0xb238, 0x1ac9, 0xc0b0, 0xb73b, 0x3b3b, 0x486c, 0x0, 0x1);
        gbc.writeMem(0x1ac9, { 0xa, 0xe4 });
        gbc.writeMem(0xb238, { 0xc8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb238));
        // C8 023A
        gbc.setState(0xe36e, 0x42b2, 0x5af0, 0x53fd, 0xb086, 0x888b, 0x1, 0x1);
        gbc.writeMem(0x42b2, { 0xce, 0xf0 });
        gbc.writeMem(0xe36e, { 0xc8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x42b4, gbc.sp());
        EXPECT(0xf0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe36e));
        // C8 023B
        gbc.setState(0xb55c, 0x403, 0x4060, 0x9b9a, 0xb803, 0x3eba, 0x1, 0x1);
        gbc.writeMem(0xb55c, { 0xc8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb55c));
        // C8 023C
        gbc.setState(0xce50, 0x1753, 0x28d0, 0x6c36, 0x2bf, 0x8256, 0x1, 0x1);
        gbc.writeMem(0x1753, { 0x2d, 0xc2 });
        gbc.writeMem(0xce50, { 0xc8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1755, gbc.sp());
        EXPECT(0xc22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xce50));
        // C8 023D
        gbc.setState(0x4334, 0x8d37, 0x1970, 0xda9b, 0x2def, 0x326d, 0x1, 0x0);
        gbc.writeMem(0x4334, { 0xc8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x4335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 023E
        gbc.setState(0xcc7c, 0x57cc, 0xcb00, 0xd549, 0xc889, 0xcab8, 0x1, 0x1);
        gbc.writeMem(0xcc7c, { 0xc8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x57cc, gbc.sp());
        EXPECT(0xcc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcc7c));
        // C8 023F
        gbc.setState(0x1c7, 0xdd0c, 0xe650, 0xb260, 0x8431, 0x5e40, 0x0, 0x0);
        gbc.writeMem(0x1c7, { 0xc8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0240
        gbc.setState(0x7e69, 0x583b, 0xf9f0, 0x3e60, 0x7a43, 0x4d81, 0x0, 0x1);
        gbc.writeMem(0x583b, { 0x84, 0xc1 });
        gbc.writeMem(0x7e69, { 0xc8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x583d, gbc.sp());
        EXPECT(0xc184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0241
        gbc.setState(0x1c4f, 0xcaa3, 0x3b0, 0xc935, 0x52b2, 0x28da, 0x0, 0x1);
        gbc.writeMem(0x1c4f, { 0xc8 });
        gbc.writeMem(0xcaa3, { 0xf4, 0x86 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0x86f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xcaa3));
        EXPECT(0x86, gbc.readMem(0xcaa4));
        // C8 0242
        gbc.setState(0x2fe5, 0xb1f5, 0x1410, 0xce53, 0x3aaa, 0xef74, 0x1, 0x0);
        gbc.writeMem(0x2fe5, { 0xc8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb1f5, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0243
        gbc.setState(0xd210, 0xf51c, 0x9af0, 0x6985, 0xba8, 0x9537, 0x1, 0x1);
        gbc.writeMem(0xd210, { 0xc8 });
        gbc.writeMem(0xf51c, { 0x15, 0x6c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf51e, gbc.sp());
        EXPECT(0x6c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd210));
        EXPECT(0x15, gbc.readMem(0xf51c));
        EXPECT(0x6c, gbc.readMem(0xf51d));
        // C8 0244
        gbc.setState(0x7f42, 0x7a3f, 0x26d0, 0x3e63, 0x210f, 0x614b, 0x1, 0x0);
        gbc.writeMem(0x7a3f, { 0x5a, 0xbe });
        gbc.writeMem(0x7f42, { 0xc8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a41, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0245
        gbc.setState(0x450d, 0x6320, 0x19f0, 0x11fd, 0xdc8, 0x2aa6, 0x1, 0x1);
        gbc.writeMem(0x450d, { 0xc8 });
        gbc.writeMem(0x6320, { 0xef, 0xec });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0246
        gbc.setState(0xb3af, 0x15ae, 0x6e30, 0xd89b, 0x4b9c, 0x7b3e, 0x0, 0x0);
        gbc.writeMem(0xb3af, { 0xc8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb3af));
        // C8 0247
        gbc.setState(0xbe0, 0xcc22, 0x1aa0, 0x6cb, 0x7e33, 0x81d8, 0x1, 0x1);
        gbc.writeMem(0xbe0, { 0xc8 });
        gbc.writeMem(0xcc22, { 0xa1, 0xca });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0xcaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcc22));
        EXPECT(0xca, gbc.readMem(0xcc23));
        // C8 0249
        gbc.setState(0x4f79, 0x7393, 0xc900, 0xb297, 0xa622, 0xe8d, 0x1, 0x0);
        gbc.writeMem(0x4f79, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0x4f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 024A
        gbc.setState(0xa1f4, 0xcf64, 0x8750, 0x5380, 0x5c5, 0x30dd, 0x1, 0x1);
        gbc.writeMem(0xa1f4, { 0xc8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcf64, gbc.sp());
        EXPECT(0xa1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa1f4));
        // C8 024B
        gbc.setState(0xd296, 0xe5c1, 0xdf40, 0x19e2, 0xbf1, 0x97b5, 0x1, 0x0);
        gbc.writeMem(0xd296, { 0xc8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe5c1, gbc.sp());
        EXPECT(0xd297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd296));
        // C8 024C
        gbc.setState(0xc4ea, 0xce61, 0xb540, 0x449f, 0xdeb5, 0xebed, 0x0, 0x1);
        gbc.writeMem(0xc4ea, { 0xc8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xce61, gbc.sp());
        EXPECT(0xc4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc4ea));
        // C8 024D
        gbc.setState(0xa615, 0xf1e8, 0xaff0, 0xe503, 0x1f77, 0xe564, 0x1, 0x0);
        gbc.writeMem(0xa615, { 0xc8 });
        gbc.writeMem(0xf1e8, { 0xb, 0xc7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf1ea, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa615));
        EXPECT(0xb, gbc.readMem(0xf1e8));
        EXPECT(0xc7, gbc.readMem(0xf1e9));
        // C8 024E
        gbc.setState(0xdb35, 0xd146, 0xb8b0, 0x933a, 0x46f2, 0x48a5, 0x0, 0x1);
        gbc.writeMem(0xd146, { 0x75, 0x3f });
        gbc.writeMem(0xdb35, { 0xc8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd146));
        EXPECT(0x3f, gbc.readMem(0xd147));
        EXPECT(0xc8, gbc.readMem(0xdb35));
        // C8 024F
        gbc.setState(0xdae2, 0x54d6, 0x70e0, 0xe3aa, 0xf970, 0xda8e, 0x1, 0x0);
        gbc.writeMem(0x54d6, { 0x8c, 0x97 });
        gbc.writeMem(0xdae2, { 0xc8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdae2));
        // C8 0250
        gbc.setState(0xc5df, 0x8fd4, 0x77e0, 0x6cdb, 0xe919, 0x99f, 0x0, 0x0);
        gbc.writeMem(0x8fd4, { 0xb, 0x4d });
        gbc.writeMem(0xc5df, { 0xc8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8fd6, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8fd4));
        EXPECT(0x4d, gbc.readMem(0x8fd5));
        EXPECT(0xc8, gbc.readMem(0xc5df));
        // C8 0251
        gbc.setState(0x8d2b, 0x76ed, 0xbd30, 0x6125, 0x8e58, 0xecaa, 0x1, 0x1);
        gbc.writeMem(0x8d2b, { 0xc8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0x8d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8d2b));
        // C8 0252
        gbc.setState(0xc3f, 0xbf1a, 0x7830, 0x7d39, 0x22c3, 0x7e6b, 0x1, 0x1);
        gbc.writeMem(0xc3f, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbf1a, gbc.sp());
        EXPECT(0xc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0253
        gbc.setState(0x4943, 0xf562, 0xa7c0, 0xca5d, 0x37ff, 0x7566, 0x1, 0x1);
        gbc.writeMem(0x4943, { 0xc8 });
        gbc.writeMem(0xf562, { 0xe3, 0x9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xf562));
        EXPECT(0x9, gbc.readMem(0xf563));
        // C8 0254
        gbc.setState(0xdb7, 0x5149, 0xc930, 0xc0e3, 0xbb66, 0x58c2, 0x1, 0x1);
        gbc.writeMem(0xdb7, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0255
        gbc.setState(0xbf93, 0xa2c2, 0xac90, 0xcd80, 0x9e8f, 0xb112, 0x0, 0x1);
        gbc.writeMem(0xa2c2, { 0x67, 0xd6 });
        gbc.writeMem(0xbf93, { 0xc8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa2c4, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa2c2));
        EXPECT(0xd6, gbc.readMem(0xa2c3));
        EXPECT(0xc8, gbc.readMem(0xbf93));
        // C8 0256
        gbc.setState(0xd4d, 0x5962, 0xff30, 0x9d6, 0xb190, 0x3e3a, 0x0, 0x0);
        gbc.writeMem(0xd4d, { 0xc8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0257
        gbc.setState(0xe5d7, 0x3c8, 0x79d0, 0x8340, 0x7f97, 0x9f1c, 0x1, 0x1);
        gbc.writeMem(0x3c8, { 0x2e, 0x36 });
        gbc.writeMem(0xe5d7, { 0xc8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3ca, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe5d7));
        // C8 0258
        gbc.setState(0x41b7, 0x3895, 0x6810, 0x8749, 0x131f, 0x72da, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0xc8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0259
        gbc.setState(0xdf4c, 0x49c0, 0x52d0, 0x322f, 0xf6e0, 0xdb15, 0x0, 0x1);
        gbc.writeMem(0x49c0, { 0xba, 0x8b });
        gbc.writeMem(0xdf4c, { 0xc8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x49c2, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdf4c));
        // C8 025B
        gbc.setState(0x4b0f, 0xc02c, 0x1c40, 0xa1d5, 0x152d, 0x9628, 0x0, 0x0);
        gbc.writeMem(0x4b0f, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc02c, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 025C
        gbc.setState(0x80f9, 0x4b3e, 0xed0, 0xa70c, 0x4fe0, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0x4b3e, { 0x7a, 0x5f });
        gbc.writeMem(0x80f9, { 0xc8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b40, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80f9));
        // C8 025D
        gbc.setState(0xa4e6, 0xa9c3, 0xb850, 0xa9de, 0x41b9, 0xeb39, 0x1, 0x0);
        gbc.writeMem(0xa4e6, { 0xc8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa4e6));
        // C8 025E
        gbc.setState(0xba99, 0x5afa, 0x7e00, 0x2b13, 0xeac6, 0x3d90, 0x0, 0x1);
        gbc.writeMem(0xba99, { 0xc8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0xba9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xba99));
        // C8 025F
        gbc.setState(0x98e6, 0xe784, 0xd060, 0x5893, 0x59eb, 0xb08e, 0x1, 0x1);
        gbc.writeMem(0x98e6, { 0xc8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe784, gbc.sp());
        EXPECT(0x98e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x98e6));
        // C8 0260
        gbc.setState(0x2561, 0xd40b, 0xb380, 0x9a29, 0x6bcd, 0xe71d, 0x1, 0x1);
        gbc.writeMem(0x2561, { 0xc8 });
        gbc.writeMem(0xd40b, { 0x13, 0x28 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd40d, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd40b));
        EXPECT(0x28, gbc.readMem(0xd40c));
        // C8 0261
        gbc.setState(0x9af5, 0xa78, 0x20c0, 0xb75d, 0xae8, 0x45c0, 0x1, 0x0);
        gbc.writeMem(0xa78, { 0x9, 0xcd });
        gbc.writeMem(0x9af5, { 0xc8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa7a, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9af5));
        // C8 0262
        gbc.setState(0x676f, 0xccec, 0x2260, 0xbc4d, 0xa720, 0xd28d, 0x1, 0x0);
        gbc.writeMem(0x676f, { 0xc8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0x6770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0263
        gbc.setState(0x6a96, 0x6752, 0xd0a0, 0xbb74, 0x597c, 0x68f0, 0x1, 0x0);
        gbc.writeMem(0x6752, { 0x14, 0x5e });
        gbc.writeMem(0x6a96, { 0xc8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6754, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0265
        gbc.setState(0x2f3e, 0x3a86, 0x8430, 0xf310, 0x93cc, 0x3445, 0x1, 0x1);
        gbc.writeMem(0x2f3e, { 0xc8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0266
        gbc.setState(0x4834, 0x2428, 0x32b0, 0xd7ca, 0xa0da, 0x4499, 0x0, 0x1);
        gbc.writeMem(0x2428, { 0x14, 0xcc });
        gbc.writeMem(0x4834, { 0xc8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x242a, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0267
        gbc.setState(0x4bd5, 0x88c7, 0x1590, 0x1b4e, 0xe0, 0x4816, 0x0, 0x1);
        gbc.writeMem(0x4bd5, { 0xc8 });
        gbc.writeMem(0x88c7, { 0x22, 0xc3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x88c9, gbc.sp());
        EXPECT(0xc322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x88c7));
        EXPECT(0xc3, gbc.readMem(0x88c8));
        // C8 0268
        gbc.setState(0x8df8, 0xfb2a, 0x9020, 0xf22a, 0x4a57, 0x576c, 0x1, 0x0);
        gbc.writeMem(0x8df8, { 0xc8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x8df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8df8));
        // C8 0269
        gbc.setState(0xcbce, 0x9db3, 0x4cc0, 0xc450, 0x81ef, 0x14e6, 0x0, 0x1);
        gbc.writeMem(0x9db3, { 0x1d, 0x87 });
        gbc.writeMem(0xcbce, { 0xc8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9db5, gbc.sp());
        EXPECT(0x871d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9db3));
        EXPECT(0x87, gbc.readMem(0x9db4));
        EXPECT(0xc8, gbc.readMem(0xcbce));
        // C8 026A
        gbc.setState(0x662c, 0xa1d, 0xdce0, 0x8c6f, 0x9018, 0x6ad0, 0x0, 0x1);
        gbc.writeMem(0xa1d, { 0x3f, 0xa8 });
        gbc.writeMem(0x662c, { 0xc8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa1f, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 026B
        gbc.setState(0x8cc2, 0x9999, 0x3e50, 0x890b, 0x278e, 0x2ea7, 0x1, 0x0);
        gbc.writeMem(0x8cc2, { 0xc8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8cc2));
        // C8 026C
        gbc.setState(0xd4bd, 0xe4c6, 0x9fc0, 0x8863, 0x8bb7, 0x9cff, 0x0, 0x1);
        gbc.writeMem(0xd4bd, { 0xc8 });
        gbc.writeMem(0xe4c6, { 0xbc, 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe4c8, gbc.sp());
        EXPECT(0x61bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd4bd));
        EXPECT(0xbc, gbc.readMem(0xe4c6));
        EXPECT(0x61, gbc.readMem(0xe4c7));
        // C8 026D
        gbc.setState(0xe244, 0xd32f, 0x5eb0, 0x6e0e, 0x757b, 0x3b1a, 0x1, 0x0);
        gbc.writeMem(0xd32f, { 0x36, 0x8a });
        gbc.writeMem(0xe244, { 0xc8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd331, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd32f));
        EXPECT(0x8a, gbc.readMem(0xd330));
        EXPECT(0xc8, gbc.readMem(0xe244));
        // C8 026E
        gbc.setState(0xdada, 0x7e6e, 0x8880, 0x4656, 0xed71, 0x5b4b, 0x1, 0x0);
        gbc.writeMem(0x7e6e, { 0xa, 0x49 });
        gbc.writeMem(0xdada, { 0xc8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e70, gbc.sp());
        EXPECT(0x490a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdada));
        // C8 026F
        gbc.setState(0x6fd4, 0x738d, 0x3120, 0x99d1, 0xc62c, 0x5821, 0x1, 0x0);
        gbc.writeMem(0x6fd4, { 0xc8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x738d, gbc.sp());
        EXPECT(0x6fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0270
        gbc.setState(0x6ad5, 0x5cb0, 0xf030, 0x8b45, 0x8ce9, 0x9b67, 0x0, 0x1);
        gbc.writeMem(0x6ad5, { 0xc8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0272
        gbc.setState(0x2ff7, 0xd2bb, 0xd140, 0xbb22, 0x5f2a, 0x16a5, 0x0, 0x0);
        gbc.writeMem(0x2ff7, { 0xc8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd2bb, gbc.sp());
        EXPECT(0x2ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0273
        gbc.setState(0x372d, 0x6ff0, 0xf210, 0x88f, 0xd1f5, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x372d, { 0xc8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0274
        gbc.setState(0x500a, 0x52b2, 0x82b0, 0xb573, 0xcae1, 0x3ee4, 0x0, 0x0);
        gbc.writeMem(0x500a, { 0xc8 });
        gbc.writeMem(0x52b2, { 0x6e, 0x5f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x52b4, gbc.sp());
        EXPECT(0x5f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0275
        gbc.setState(0xcee6, 0x9178, 0xe0d0, 0xb716, 0x5088, 0x59d6, 0x1, 0x1);
        gbc.writeMem(0x9178, { 0xf4, 0xbc });
        gbc.writeMem(0xcee6, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0xbcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9178));
        EXPECT(0xbc, gbc.readMem(0x9179));
        EXPECT(0xc8, gbc.readMem(0xcee6));
        // C8 0276
        gbc.setState(0x9820, 0x2c67, 0xfbd0, 0xfe53, 0x241a, 0x7e7b, 0x0, 0x1);
        gbc.writeMem(0x2c67, { 0x9, 0xaf });
        gbc.writeMem(0x9820, { 0xc8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2c69, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9820));
        // C8 0277
        gbc.setState(0x54a0, 0xa573, 0x1c50, 0x6df5, 0x6e18, 0xbb71, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0278
        gbc.setState(0x340e, 0x35ce, 0x72c0, 0x9abc, 0xf145, 0x62bc, 0x0, 0x1);
        gbc.writeMem(0x340e, { 0xc8 });
        gbc.writeMem(0x35ce, { 0x3, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0279
        gbc.setState(0x7f09, 0x4f5, 0xc770, 0x612, 0x3fef, 0xb668, 0x1, 0x0);
        gbc.writeMem(0x7f09, { 0xc8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 027A
        gbc.setState(0xb1d4, 0x394e, 0x88a0, 0x577, 0x5dd9, 0x7981, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0xfc, 0xd7 });
        gbc.writeMem(0xb1d4, { 0xc8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0xd7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb1d4));
        // C8 027B
        gbc.setState(0x5946, 0xf89f, 0xeb50, 0xa0a0, 0x9aa0, 0xefb6, 0x0, 0x1);
        gbc.writeMem(0x5946, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 027C
        gbc.setState(0xa726, 0x6e99, 0x7540, 0x2963, 0x95e5, 0xb573, 0x0, 0x0);
        gbc.writeMem(0xa726, { 0xc8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e99, gbc.sp());
        EXPECT(0xa727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa726));
        // C8 027D
        gbc.setState(0x6c8a, 0xbf4e, 0x4330, 0x60c7, 0xc789, 0x3154, 0x0, 0x0);
        gbc.writeMem(0x6c8a, { 0xc8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 027E
        gbc.setState(0x927, 0x89bc, 0xe360, 0xbefd, 0x279e, 0x54ae, 0x1, 0x1);
        gbc.writeMem(0x927, { 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x89bc, gbc.sp());
        EXPECT(0x928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 027F
        gbc.setState(0xe2b1, 0x3bde, 0x8c60, 0x7072, 0x7011, 0x5480, 0x1, 0x0);
        gbc.writeMem(0xe2b1, { 0xc8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3bde, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe2b1));
        // C8 0280
        gbc.setState(0xc86b, 0xcd72, 0x9c90, 0x383, 0xb908, 0xa48c, 0x1, 0x1);
        gbc.writeMem(0xc86b, { 0xc8 });
        gbc.writeMem(0xcd72, { 0xf2, 0x88 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc86b));
        EXPECT(0xf2, gbc.readMem(0xcd72));
        EXPECT(0x88, gbc.readMem(0xcd73));
        // C8 0281
        gbc.setState(0xb147, 0x6dc9, 0x8f00, 0x43e7, 0x317a, 0xa82a, 0x0, 0x0);
        gbc.writeMem(0xb147, { 0xc8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6dc9, gbc.sp());
        EXPECT(0xb148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb147));
        // C8 0282
        gbc.setState(0x781d, 0x478b, 0xe060, 0x7ab0, 0xed06, 0x301a, 0x1, 0x1);
        gbc.writeMem(0x781d, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x478b, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0283
        gbc.setState(0x278d, 0x532f, 0xb4b0, 0xa5f5, 0xc6fd, 0xe0d6, 0x0, 0x1);
        gbc.writeMem(0x278d, { 0xc8 });
        gbc.writeMem(0x532f, { 0xe5, 0x50 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5331, gbc.sp());
        EXPECT(0x50e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0284
        gbc.setState(0x74d4, 0x9aee, 0x57b0, 0xa8e4, 0x36ba, 0x9e85, 0x0, 0x1);
        gbc.writeMem(0x74d4, { 0xc8 });
        gbc.writeMem(0x9aee, { 0x58, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9af0, gbc.sp());
        EXPECT(0xfb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9aee));
        EXPECT(0xfb, gbc.readMem(0x9aef));
        // C8 0285
        gbc.setState(0xa5d4, 0xdc71, 0xa2c0, 0x7454, 0x1b3e, 0x1fd9, 0x1, 0x1);
        gbc.writeMem(0xa5d4, { 0xc8 });
        gbc.writeMem(0xdc71, { 0x1e, 0x75 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdc73, gbc.sp());
        EXPECT(0x751e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa5d4));
        EXPECT(0x1e, gbc.readMem(0xdc71));
        EXPECT(0x75, gbc.readMem(0xdc72));
        // C8 0286
        gbc.setState(0xef01, 0xb33, 0x3300, 0x1a4b, 0x9292, 0x3f52, 0x0, 0x1);
        gbc.writeMem(0xef01, { 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb33, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef01));
        // C8 0287
        gbc.setState(0xf03, 0xa9ad, 0xc290, 0xd7c9, 0x6346, 0xd06f, 0x0, 0x1);
        gbc.writeMem(0xf03, { 0xc8 });
        gbc.writeMem(0xa9ad, { 0x9e, 0xbd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa9af, gbc.sp());
        EXPECT(0xbd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa9ad));
        EXPECT(0xbd, gbc.readMem(0xa9ae));
        // C8 0288
        gbc.setState(0xee25, 0xb8d1, 0xe3b0, 0x3c43, 0xc678, 0xbf70, 0x1, 0x1);
        gbc.writeMem(0xb8d1, { 0x1c, 0x9e });
        gbc.writeMem(0xee25, { 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb8d3, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb8d1));
        EXPECT(0x9e, gbc.readMem(0xb8d2));
        EXPECT(0xc8, gbc.readMem(0xee25));
        // C8 0289
        gbc.setState(0xcfe1, 0xf178, 0xa8b0, 0x9251, 0x2da0, 0x9eba, 0x1, 0x0);
        gbc.writeMem(0xcfe1, { 0xc8 });
        gbc.writeMem(0xf178, { 0x57, 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf17a, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcfe1));
        EXPECT(0x57, gbc.readMem(0xf178));
        EXPECT(0x9c, gbc.readMem(0xf179));
        // C8 028A
        gbc.setState(0x3b56, 0x7149, 0x40, 0x8427, 0xb2c1, 0x59b4, 0x0, 0x0);
        gbc.writeMem(0x3b56, { 0xc8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0x3b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 028B
        gbc.setState(0x3e3c, 0x9d0a, 0x7c40, 0x9e83, 0x99bc, 0x2a2c, 0x0, 0x1);
        gbc.writeMem(0x3e3c, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 028C
        gbc.setState(0x7e59, 0xca45, 0x8d30, 0x46f0, 0x258e, 0x6dba, 0x0, 0x1);
        gbc.writeMem(0x7e59, { 0xc8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x7e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 028D
        gbc.setState(0x540e, 0xeae6, 0x2720, 0x260a, 0x51ff, 0x39c7, 0x0, 0x0);
        gbc.writeMem(0x540e, { 0xc8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 028E
        gbc.setState(0x85c2, 0xcbaa, 0x6590, 0x53cb, 0xcc63, 0x4d70, 0x1, 0x1);
        gbc.writeMem(0x85c2, { 0xc8 });
        gbc.writeMem(0xcbaa, { 0x15, 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xf115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x85c2));
        EXPECT(0x15, gbc.readMem(0xcbaa));
        EXPECT(0xf1, gbc.readMem(0xcbab));
        // C8 028F
        gbc.setState(0x210c, 0xe226, 0xbac0, 0x579c, 0xc97f, 0x38b0, 0x0, 0x1);
        gbc.writeMem(0x210c, { 0xc8 });
        gbc.writeMem(0xe226, { 0x92, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe228, gbc.sp());
        EXPECT(0x892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe226));
        EXPECT(0x8, gbc.readMem(0xe227));
        // C8 0290
        gbc.setState(0x8cda, 0x62ee, 0x97a0, 0xd1f2, 0xa9e4, 0xf5e0, 0x1, 0x0);
        gbc.writeMem(0x62ee, { 0xbc, 0x7e });
        gbc.writeMem(0x8cda, { 0xc8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x62f0, gbc.sp());
        EXPECT(0x7ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8cda));
        // C8 0291
        gbc.setState(0x7479, 0x3555, 0xc100, 0x8ebe, 0x4670, 0x97eb, 0x0, 0x1);
        gbc.writeMem(0x7479, { 0xc8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3555, gbc.sp());
        EXPECT(0x747a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0292
        gbc.setState(0xa7c8, 0x193c, 0x2690, 0xd184, 0xa73f, 0xf83, 0x0, 0x0);
        gbc.writeMem(0x193c, { 0xb4, 0xed });
        gbc.writeMem(0xa7c8, { 0xc8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa7c8));
        // C8 0293
        gbc.setState(0xb169, 0xff28, 0x6540, 0x8121, 0x41e4, 0x6b37, 0x0, 0x1);
        gbc.writeMem(0xb169, { 0xc8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xff28, gbc.sp());
        EXPECT(0xb16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb169));
        // C8 0294
        gbc.setState(0x6285, 0xb362, 0xdcf0, 0xac9, 0x95ed, 0x2bd2, 0x1, 0x0);
        gbc.writeMem(0x6285, { 0xc8 });
        gbc.writeMem(0xb362, { 0x32, 0xe2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb364, gbc.sp());
        EXPECT(0xe232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb362));
        EXPECT(0xe2, gbc.readMem(0xb363));
        // C8 0295
        gbc.setState(0x2a1b, 0x1541, 0x6c90, 0x24a3, 0x47b9, 0x1b0a, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0xb0, 0x4a });
        gbc.writeMem(0x2a1b, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1543, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0296
        gbc.setState(0xe551, 0xa860, 0x59f0, 0xa5ea, 0xb985, 0x6e97, 0x0, 0x0);
        gbc.writeMem(0xa860, { 0xf6, 0x4 });
        gbc.writeMem(0xe551, { 0xc8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa862, gbc.sp());
        EXPECT(0x4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa860));
        EXPECT(0x4, gbc.readMem(0xa861));
        EXPECT(0xc8, gbc.readMem(0xe551));
        // C8 0297
        gbc.setState(0xcbd5, 0x9a6a, 0xe30, 0x4477, 0x3cdf, 0x1af8, 0x1, 0x1);
        gbc.writeMem(0xcbd5, { 0xc8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9a6a, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcbd5));
        // C8 0299
        gbc.setState(0xdb0f, 0xe8f6, 0x4a90, 0x793c, 0xc0ec, 0x943c, 0x1, 0x1);
        gbc.writeMem(0xdb0f, { 0xc8 });
        gbc.writeMem(0xe8f6, { 0x3b, 0x31 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe8f8, gbc.sp());
        EXPECT(0x313b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdb0f));
        EXPECT(0x3b, gbc.readMem(0xe8f6));
        EXPECT(0x31, gbc.readMem(0xe8f7));
        // C8 029A
        gbc.setState(0x4279, 0x3e9f, 0x9f60, 0x853a, 0x8ab7, 0x43f6, 0x0, 0x0);
        gbc.writeMem(0x4279, { 0xc8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 029B
        gbc.setState(0xd455, 0x4ba9, 0xf9f0, 0x3bc6, 0xf12c, 0x3f49, 0x1, 0x0);
        gbc.writeMem(0x4ba9, { 0xca, 0x16 });
        gbc.writeMem(0xd455, { 0xc8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4bab, gbc.sp());
        EXPECT(0x16ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd455));
        // C8 029C
        gbc.setState(0x3f69, 0x98c5, 0x4110, 0xbff7, 0x21aa, 0xa1f5, 0x1, 0x1);
        gbc.writeMem(0x3f69, { 0xc8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x98c5, gbc.sp());
        EXPECT(0x3f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 029D
        gbc.setState(0x40d8, 0x4320, 0x2ae0, 0x53f0, 0x3b12, 0x7646, 0x0, 0x1);
        gbc.writeMem(0x40d8, { 0xc8 });
        gbc.writeMem(0x4320, { 0x71, 0x8e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 029E
        gbc.setState(0x41fb, 0x8b37, 0x9b80, 0x58e3, 0xbc4b, 0xb496, 0x0, 0x1);
        gbc.writeMem(0x41fb, { 0xc8 });
        gbc.writeMem(0x8b37, { 0xe5, 0x1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b39, gbc.sp());
        EXPECT(0x1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8b37));
        EXPECT(0x1, gbc.readMem(0x8b38));
        // C8 029F
        gbc.setState(0x1fa4, 0xce6e, 0xd650, 0xf6bb, 0xdd0e, 0xf7da, 0x1, 0x0);
        gbc.writeMem(0x1fa4, { 0xc8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02A0
        gbc.setState(0xcab4, 0x9e9a, 0xc430, 0x63b8, 0xc45e, 0x737f, 0x0, 0x1);
        gbc.writeMem(0xcab4, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9e9a, gbc.sp());
        EXPECT(0xcab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcab4));
        // C8 02A1
        gbc.setState(0x6523, 0x55d1, 0x3390, 0x7748, 0xb1f2, 0xbd0a, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xf8, 0xb9 });
        gbc.writeMem(0x6523, { 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02A2
        gbc.setState(0x4781, 0x231d, 0xf550, 0xc9c2, 0x6d64, 0x5da8, 0x1, 0x1);
        gbc.writeMem(0x4781, { 0xc8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x231d, gbc.sp());
        EXPECT(0x4782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02A3
        gbc.setState(0x26f7, 0x2fe4, 0x6c10, 0xc524, 0xdd7, 0xd335, 0x1, 0x1);
        gbc.writeMem(0x26f7, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2fe4, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02A4
        gbc.setState(0xc453, 0x88d0, 0xedc0, 0x9e00, 0x9b8, 0xf075, 0x1, 0x1);
        gbc.writeMem(0x88d0, { 0x94, 0xd4 });
        gbc.writeMem(0xc453, { 0xc8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x88d0));
        EXPECT(0xd4, gbc.readMem(0x88d1));
        EXPECT(0xc8, gbc.readMem(0xc453));
        // C8 02A5
        gbc.setState(0x1590, 0x7d09, 0xe510, 0x9ac8, 0x32f5, 0x835b, 0x0, 0x0);
        gbc.writeMem(0x1590, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d09, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02A6
        gbc.setState(0x80b3, 0x8792, 0x9ed0, 0xe479, 0xc75, 0xe213, 0x0, 0x1);
        gbc.writeMem(0x80b3, { 0xc8 });
        gbc.writeMem(0x8792, { 0x4d, 0xab });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0xab4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80b3));
        EXPECT(0x4d, gbc.readMem(0x8792));
        EXPECT(0xab, gbc.readMem(0x8793));
        // C8 02A7
        gbc.setState(0xe0c2, 0xfd63, 0x5ec0, 0x2cf1, 0x836d, 0xaec7, 0x0, 0x1);
        gbc.writeMem(0xe0c2, { 0xc8 });
        gbc.writeMem(0xfd63, { 0x71, 0xc3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfd65, gbc.sp());
        EXPECT(0xc371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe0c2));
        EXPECT(0x71, gbc.readMem(0xfd63));
        EXPECT(0xc3, gbc.readMem(0xfd64));
        // C8 02A8
        gbc.setState(0x20c, 0xd02c, 0x8b0, 0x5fc0, 0xb8f5, 0xf409, 0x0, 0x0);
        gbc.writeMem(0x20c, { 0xc8 });
        gbc.writeMem(0xd02c, { 0x9d, 0xb3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd02e, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd02c));
        EXPECT(0xb3, gbc.readMem(0xd02d));
        // C8 02A9
        gbc.setState(0x8d16, 0xdbf1, 0xd4d0, 0x27cb, 0xda9b, 0x2b0b, 0x0, 0x0);
        gbc.writeMem(0x8d16, { 0xc8 });
        gbc.writeMem(0xdbf1, { 0xab, 0xdd });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdbf3, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8d16));
        EXPECT(0xab, gbc.readMem(0xdbf1));
        EXPECT(0xdd, gbc.readMem(0xdbf2));
        // C8 02AA
        gbc.setState(0xcbaf, 0x89d9, 0x8160, 0xcd27, 0x3f6f, 0x277d, 0x0, 0x1);
        gbc.writeMem(0xcbaf, { 0xc8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x89d9, gbc.sp());
        EXPECT(0xcbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcbaf));
        // C8 02AB
        gbc.setState(0xe40f, 0x42ee, 0x1b60, 0xed79, 0x24da, 0xbe06, 0x0, 0x1);
        gbc.writeMem(0xe40f, { 0xc8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe40f));
        // C8 02AC
        gbc.setState(0x1b82, 0x4caa, 0xf330, 0xc51f, 0x300a, 0x1ab5, 0x0, 0x1);
        gbc.writeMem(0x1b82, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4caa, gbc.sp());
        EXPECT(0x1b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02AD
        gbc.setState(0x22f6, 0xd3a8, 0x9070, 0x712d, 0x5b91, 0x4775, 0x0, 0x0);
        gbc.writeMem(0x22f6, { 0xc8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd3a8, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02AE
        gbc.setState(0x4059, 0xc543, 0xd50, 0xfef9, 0x2f04, 0x369e, 0x0, 0x1);
        gbc.writeMem(0x4059, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02AF
        gbc.setState(0x136b, 0xfc6, 0x2aa0, 0x13f3, 0xd62f, 0x9636, 0x0, 0x0);
        gbc.writeMem(0xfc6, { 0x7d, 0x6e });
        gbc.writeMem(0x136b, { 0xc8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfc8, gbc.sp());
        EXPECT(0x6e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02B0
        gbc.setState(0x8a26, 0xe5f6, 0x4a40, 0x9924, 0x4c3, 0x42cf, 0x1, 0x0);
        gbc.writeMem(0x8a26, { 0xc8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe5f6, gbc.sp());
        EXPECT(0x8a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8a26));
        // C8 02B1
        gbc.setState(0x6f80, 0x11f2, 0x13b0, 0x712e, 0x76, 0x6a21, 0x0, 0x1);
        gbc.writeMem(0x11f2, { 0x8a, 0xe });
        gbc.writeMem(0x6f80, { 0xc8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x11f4, gbc.sp());
        EXPECT(0xe8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02B3
        gbc.setState(0x2320, 0x8990, 0x820, 0x59f2, 0xfb02, 0x6dad, 0x1, 0x0);
        gbc.writeMem(0x2320, { 0xc8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8990, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02B4
        gbc.setState(0x69c4, 0xed44, 0x21d0, 0xd3ac, 0x7cfe, 0xd4ee, 0x1, 0x1);
        gbc.writeMem(0x69c4, { 0xc8 });
        gbc.writeMem(0xed44, { 0x52, 0x42 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x4252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xed44));
        EXPECT(0x42, gbc.readMem(0xed45));
        // C8 02B6
        gbc.setState(0x7737, 0x175e, 0x62f0, 0x28d2, 0xfa1, 0xff7d, 0x0, 0x0);
        gbc.writeMem(0x175e, { 0x5e, 0x14 });
        gbc.writeMem(0x7737, { 0xc8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1760, gbc.sp());
        EXPECT(0x145e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02B7
        gbc.setState(0xd51, 0x81a, 0x2370, 0xaf3c, 0x5876, 0x48aa, 0x1, 0x1);
        gbc.writeMem(0xd51, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x81a, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02B8
        gbc.setState(0x7abb, 0x5435, 0x8be0, 0x5c43, 0x8db1, 0xb7f6, 0x0, 0x0);
        gbc.writeMem(0x5435, { 0x27, 0xfc });
        gbc.writeMem(0x7abb, { 0xc8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5437, gbc.sp());
        EXPECT(0xfc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02B9
        gbc.setState(0xee07, 0x3caf, 0x480, 0xef3f, 0xe1c2, 0x77b7, 0x0, 0x1);
        gbc.writeMem(0x3caf, { 0xcd, 0x3b });
        gbc.writeMem(0xee07, { 0xc8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x3bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xee07));
        // C8 02BA
        gbc.setState(0x761f, 0xc860, 0x9e90, 0x70ac, 0xb1f9, 0x47be, 0x1, 0x0);
        gbc.writeMem(0x761f, { 0xc8 });
        gbc.writeMem(0xc860, { 0x10, 0x99 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc862, gbc.sp());
        EXPECT(0x9910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc860));
        EXPECT(0x99, gbc.readMem(0xc861));
        // C8 02BB
        gbc.setState(0x6be9, 0x2523, 0x1cc0, 0xf6e8, 0x4aa9, 0x7eec, 0x1, 0x1);
        gbc.writeMem(0x2523, { 0xbf, 0xe9 });
        gbc.writeMem(0x6be9, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02BD
        gbc.setState(0x3fb2, 0x98bc, 0xeb20, 0x601a, 0xf84, 0x56ff, 0x1, 0x0);
        gbc.writeMem(0x3fb2, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x98bc, gbc.sp());
        EXPECT(0x3fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02BE
        gbc.setState(0x885b, 0xe5b9, 0x11e0, 0x7395, 0xe98e, 0x5928, 0x0, 0x0);
        gbc.writeMem(0x885b, { 0xc8 });
        gbc.writeMem(0xe5b9, { 0xe0, 0x66 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe5bb, gbc.sp());
        EXPECT(0x66e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x885b));
        EXPECT(0xe0, gbc.readMem(0xe5b9));
        EXPECT(0x66, gbc.readMem(0xe5ba));
        // C8 02BF
        gbc.setState(0x48ed, 0xe066, 0xcde0, 0x556d, 0x60bc, 0x91f6, 0x0, 0x1);
        gbc.writeMem(0x48ed, { 0xc8 });
        gbc.writeMem(0xe066, { 0x4b, 0x7a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        // C8 02C0
        gbc.setState(0x80b9, 0xd7c, 0x4d40, 0xd9fa, 0x1c2a, 0x9c4b, 0x0, 0x1);
        gbc.writeMem(0x80b9, { 0xc8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0x80ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80b9));
        // C8 02C1
        gbc.setState(0x954a, 0x5f5e, 0xc350, 0xe333, 0xf2c7, 0xc308, 0x0, 0x0);
        gbc.writeMem(0x954a, { 0xc8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x954a));
        // C8 02C2
        gbc.setState(0xec93, 0x66f5, 0xd390, 0x3d6f, 0xffc4, 0x253c, 0x0, 0x0);
        gbc.writeMem(0x66f5, { 0x74, 0x62 });
        gbc.writeMem(0xec93, { 0xc8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xec93));
        // C8 02C3
        gbc.setState(0xb835, 0x95e4, 0xc970, 0x8495, 0x4ae0, 0xd0c5, 0x0, 0x0);
        gbc.writeMem(0xb835, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb835));
        // C8 02C4
        gbc.setState(0x961, 0x17ba, 0x550, 0x8521, 0x13cb, 0xd8b0, 0x1, 0x0);
        gbc.writeMem(0x961, { 0xc8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0x962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02C5
        gbc.setState(0x4d3b, 0xcf63, 0x98e0, 0x3a6a, 0xbc8a, 0x1ab9, 0x1, 0x1);
        gbc.writeMem(0x4d3b, { 0xc8 });
        gbc.writeMem(0xcf63, { 0x7c, 0x8e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcf65, gbc.sp());
        EXPECT(0x8e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xcf63));
        EXPECT(0x8e, gbc.readMem(0xcf64));
        // C8 02C6
        gbc.setState(0x92aa, 0x690d, 0x2380, 0xe879, 0xce4d, 0x87b7, 0x1, 0x0);
        gbc.writeMem(0x690d, { 0xe2, 0x38 });
        gbc.writeMem(0x92aa, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x690f, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92aa));
        // C8 02C7
        gbc.setState(0x66e6, 0x5601, 0xc6d0, 0x274b, 0xef2, 0x41a5, 0x0, 0x1);
        gbc.writeMem(0x5601, { 0x63, 0x7c });
        gbc.writeMem(0x66e6, { 0xc8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5603, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02C8
        gbc.setState(0x8d88, 0x2a49, 0xf340, 0x6612, 0x2d99, 0x21c6, 0x0, 0x1);
        gbc.writeMem(0x8d88, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2a49, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8d88));
        // C8 02C9
        gbc.setState(0x72e8, 0x4389, 0x9820, 0xd6aa, 0x2ef4, 0x485c, 0x1, 0x1);
        gbc.writeMem(0x72e8, { 0xc8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4389, gbc.sp());
        EXPECT(0x72e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02CA
        gbc.setState(0x1c97, 0x4ad5, 0xe740, 0x7cd9, 0x22c9, 0x3308, 0x0, 0x1);
        gbc.writeMem(0x1c97, { 0xc8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02CB
        gbc.setState(0xa6ec, 0xdee0, 0x1b50, 0x1d08, 0xe699, 0x5286, 0x0, 0x1);
        gbc.writeMem(0xa6ec, { 0xc8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0xa6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa6ec));
        // C8 02CC
        gbc.setState(0x9e3d, 0xcb10, 0x74a0, 0x4973, 0x5957, 0x5dff, 0x1, 0x0);
        gbc.writeMem(0x9e3d, { 0xc8 });
        gbc.writeMem(0xcb10, { 0xdf, 0xd1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb12, gbc.sp());
        EXPECT(0xd1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9e3d));
        EXPECT(0xdf, gbc.readMem(0xcb10));
        EXPECT(0xd1, gbc.readMem(0xcb11));
        // C8 02CD
        gbc.setState(0xa39e, 0xf1a9, 0xbc50, 0xb15b, 0x16c7, 0x4a73, 0x1, 0x0);
        gbc.writeMem(0xa39e, { 0xc8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa39e));
        // C8 02CE
        gbc.setState(0xaf6, 0x838d, 0xde80, 0x5847, 0x9d13, 0x4170, 0x1, 0x0);
        gbc.writeMem(0xaf6, { 0xc8 });
        gbc.writeMem(0x838d, { 0xf2, 0x16 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x16f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x838d));
        EXPECT(0x16, gbc.readMem(0x838e));
        // C8 02CF
        gbc.setState(0x4ff2, 0x3193, 0xc280, 0xa226, 0x6a8b, 0xc4e8, 0x0, 0x1);
        gbc.writeMem(0x3193, { 0x86, 0x8e });
        gbc.writeMem(0x4ff2, { 0xc8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3195, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02D0
        gbc.setState(0xa0c3, 0x6b16, 0x81a0, 0x15a8, 0x2297, 0x3522, 0x1, 0x1);
        gbc.writeMem(0x6b16, { 0x13, 0x5f });
        gbc.writeMem(0xa0c3, { 0xc8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6b18, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa0c3));
        // C8 02D1
        gbc.setState(0xab48, 0x8898, 0xd020, 0xc131, 0x5bbb, 0x3460, 0x0, 0x0);
        gbc.writeMem(0xab48, { 0xc8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8898, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xab48));
        // C8 02D2
        gbc.setState(0xac56, 0xdfc0, 0xbc90, 0xf2e8, 0x223d, 0xd532, 0x1, 0x0);
        gbc.writeMem(0xac56, { 0xc8 });
        gbc.writeMem(0xdfc0, { 0x82, 0x4a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x4a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xac56));
        EXPECT(0x82, gbc.readMem(0xdfc0));
        EXPECT(0x4a, gbc.readMem(0xdfc1));
        // C8 02D3
        gbc.setState(0xafbe, 0x8b20, 0x15f0, 0x2242, 0xd787, 0x3968, 0x0, 0x1);
        gbc.writeMem(0x8b20, { 0xf5, 0x7f });
        gbc.writeMem(0xafbe, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x7ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8b20));
        EXPECT(0x7f, gbc.readMem(0x8b21));
        EXPECT(0xc8, gbc.readMem(0xafbe));
        // C8 02D4
        gbc.setState(0x6916, 0xdcec, 0xfad0, 0x5767, 0xf7ff, 0x8b91, 0x0, 0x0);
        gbc.writeMem(0x6916, { 0xc8 });
        gbc.writeMem(0xdcec, { 0x87, 0x64 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdcee, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdcec));
        EXPECT(0x64, gbc.readMem(0xdced));
        // C8 02D5
        gbc.setState(0x9c09, 0x419c, 0xe970, 0xafa5, 0x2280, 0x3e1e, 0x1, 0x0);
        gbc.writeMem(0x9c09, { 0xc8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x419c, gbc.sp());
        EXPECT(0x9c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9c09));
        // C8 02D6
        gbc.setState(0x850c, 0x81b1, 0x5990, 0xf76d, 0xd94f, 0xdb3f, 0x1, 0x1);
        gbc.writeMem(0x81b1, { 0xa8, 0x3b });
        gbc.writeMem(0x850c, { 0xc8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x81b1));
        EXPECT(0x3b, gbc.readMem(0x81b2));
        EXPECT(0xc8, gbc.readMem(0x850c));
        // C8 02D7
        gbc.setState(0x97a1, 0x47bf, 0x29d0, 0x737e, 0x960, 0xcbfd, 0x0, 0x0);
        gbc.writeMem(0x47bf, { 0x1b, 0xd8 });
        gbc.writeMem(0x97a1, { 0xc8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x97a1));
        // C8 02D8
        gbc.setState(0x7bea, 0xdcb8, 0x97e0, 0xf9a4, 0xfae0, 0x75a3, 0x0, 0x1);
        gbc.writeMem(0x7bea, { 0xc8 });
        gbc.writeMem(0xdcb8, { 0x3c, 0x3a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x3a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdcb8));
        EXPECT(0x3a, gbc.readMem(0xdcb9));
        // C8 02DA
        gbc.setState(0x923c, 0x6860, 0xe2c0, 0xfeff, 0xf3bb, 0x46f6, 0x1, 0x1);
        gbc.writeMem(0x6860, { 0x83, 0xd1 });
        gbc.writeMem(0x923c, { 0xc8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6862, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x923c));
        // C8 02DB
        gbc.setState(0x591, 0xd788, 0xe700, 0xe66b, 0x5804, 0x6049, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xc8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02DC
        gbc.setState(0x7dab, 0x3a91, 0xdbb0, 0x7a2c, 0xd236, 0x8bcb, 0x1, 0x0);
        gbc.writeMem(0x3a91, { 0xda, 0xcd });
        gbc.writeMem(0x7dab, { 0xc8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3a93, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02DD
        gbc.setState(0x5cb4, 0x2250, 0x5410, 0x3c78, 0xebd, 0x2392, 0x1, 0x1);
        gbc.writeMem(0x5cb4, { 0xc8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02DE
        gbc.setState(0xa1c9, 0xdd3b, 0x2790, 0xeaa3, 0x16c0, 0xd5ec, 0x1, 0x0);
        gbc.writeMem(0xa1c9, { 0xc8 });
        gbc.writeMem(0xdd3b, { 0x23, 0xd1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdd3d, gbc.sp());
        EXPECT(0xd123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa1c9));
        EXPECT(0x23, gbc.readMem(0xdd3b));
        EXPECT(0xd1, gbc.readMem(0xdd3c));
        // C8 02DF
        gbc.setState(0xa660, 0x5ea3, 0x9cd0, 0x36e9, 0x57bf, 0x1695, 0x0, 0x0);
        gbc.writeMem(0x5ea3, { 0xe4, 0x5b });
        gbc.writeMem(0xa660, { 0xc8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5ea5, gbc.sp());
        EXPECT(0x5be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa660));
        // C8 02E0
        gbc.setState(0x80a4, 0x958b, 0x4020, 0x76e1, 0x4697, 0xa269, 0x1, 0x1);
        gbc.writeMem(0x80a4, { 0xc8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x958b, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80a4));
        // C8 02E1
        gbc.setState(0x29fe, 0x944d, 0xf780, 0xde5, 0x7f46, 0xcc8f, 0x0, 0x0);
        gbc.writeMem(0x29fe, { 0xc8 });
        gbc.writeMem(0x944d, { 0x32, 0x64 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x944f, gbc.sp());
        EXPECT(0x6432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x944d));
        EXPECT(0x64, gbc.readMem(0x944e));
        // C8 02E2
        gbc.setState(0xc7b5, 0xbfe0, 0x7a90, 0x3c5a, 0xdcb1, 0x5fc9, 0x0, 0x1);
        gbc.writeMem(0xbfe0, { 0xee, 0xdd });
        gbc.writeMem(0xc7b5, { 0xc8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbfe2, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xbfe0));
        EXPECT(0xdd, gbc.readMem(0xbfe1));
        EXPECT(0xc8, gbc.readMem(0xc7b5));
        // C8 02E4
        gbc.setState(0xb185, 0x4746, 0xe340, 0x13f5, 0x61a, 0xabb3, 0x1, 0x0);
        gbc.writeMem(0xb185, { 0xc8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0xb186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb185));
        // C8 02E5
        gbc.setState(0xcafa, 0x47dd, 0x3690, 0xb290, 0x4bf8, 0x2963, 0x1, 0x0);
        gbc.writeMem(0x47dd, { 0xbd, 0x90 });
        gbc.writeMem(0xcafa, { 0xc8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0x90bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcafa));
        // C8 02E7
        gbc.setState(0x7f6f, 0x2cef, 0xe2a0, 0x671f, 0x549d, 0x8f60, 0x0, 0x1);
        gbc.writeMem(0x2cef, { 0x19, 0x78 });
        gbc.writeMem(0x7f6f, { 0xc8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02E8
        gbc.setState(0x44f0, 0x97d2, 0xbe30, 0xa1e8, 0x7e23, 0x17d9, 0x0, 0x0);
        gbc.writeMem(0x44f0, { 0xc8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x97d2, gbc.sp());
        EXPECT(0x44f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02E9
        gbc.setState(0x43cf, 0x9aa1, 0x4420, 0xdc66, 0xed64, 0x991c, 0x0, 0x0);
        gbc.writeMem(0x43cf, { 0xc8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9aa1, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02EA
        gbc.setState(0x29e4, 0x898b, 0x66e0, 0xa392, 0x555b, 0x1798, 0x1, 0x1);
        gbc.writeMem(0x29e4, { 0xc8 });
        gbc.writeMem(0x898b, { 0xa3, 0x1d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x898b));
        EXPECT(0x1d, gbc.readMem(0x898c));
        // C8 02EB
        gbc.setState(0x8268, 0x1338, 0x3340, 0x6f5, 0x31b, 0x33f, 0x1, 0x0);
        gbc.writeMem(0x8268, { 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1338, gbc.sp());
        EXPECT(0x8269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8268));
        // C8 02EC
        gbc.setState(0x19f1, 0x96ab, 0x5a0, 0xc47c, 0x4789, 0xebf9, 0x1, 0x1);
        gbc.writeMem(0x19f1, { 0xc8 });
        gbc.writeMem(0x96ab, { 0xbb, 0x3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0x3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x96ab));
        EXPECT(0x3, gbc.readMem(0x96ac));
        // C8 02ED
        gbc.setState(0xd137, 0x70fe, 0x43d0, 0xc9ed, 0x6bc9, 0xa8dc, 0x1, 0x1);
        gbc.writeMem(0x70fe, { 0xdb, 0x74 });
        gbc.writeMem(0xd137, { 0xc8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd137));
        // C8 02EE
        gbc.setState(0x86d6, 0xdd92, 0xd30, 0xaa2a, 0x7539, 0xe2c3, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdd92, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x86d6));
        // C8 02EF
        gbc.setState(0x2197, 0xa5c8, 0x1020, 0xd846, 0xa420, 0x5db9, 0x1, 0x1);
        gbc.writeMem(0x2197, { 0xc8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa5c8, gbc.sp());
        EXPECT(0x2198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F0
        gbc.setState(0x61c7, 0x7cec, 0x97e0, 0x4572, 0x7a4c, 0xd011, 0x0, 0x0);
        gbc.writeMem(0x61c7, { 0xc8 });
        gbc.writeMem(0x7cec, { 0x89, 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F1
        gbc.setState(0x29f3, 0x88a6, 0x4960, 0x4f5c, 0x2ad9, 0xfb8b, 0x1, 0x0);
        gbc.writeMem(0x29f3, { 0xc8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0x29f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F2
        gbc.setState(0x46fc, 0x35a0, 0xd8c0, 0x9757, 0x98ed, 0xdb7c, 0x0, 0x0);
        gbc.writeMem(0x35a0, { 0xe3, 0x15 });
        gbc.writeMem(0x46fc, { 0xc8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0x15e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F3
        gbc.setState(0x1d4d, 0x4cd5, 0x2a30, 0x5e43, 0x3caa, 0xaf, 0x1, 0x0);
        gbc.writeMem(0x1d4d, { 0xc8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 02F5
        gbc.setState(0x657, 0x4bf1, 0x3660, 0xc579, 0x5427, 0xf6ee, 0x1, 0x1);
        gbc.writeMem(0x657, { 0xc8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F6
        gbc.setState(0x92a0, 0xc33b, 0x6b90, 0xd32f, 0xb434, 0x6d35, 0x1, 0x0);
        gbc.writeMem(0x92a0, { 0xc8 });
        gbc.writeMem(0xc33b, { 0x94, 0xf2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc33d, gbc.sp());
        EXPECT(0xf294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92a0));
        EXPECT(0x94, gbc.readMem(0xc33b));
        EXPECT(0xf2, gbc.readMem(0xc33c));
        // C8 02F7
        gbc.setState(0x4dae, 0xc0c1, 0xd460, 0xc63e, 0x7942, 0x9420, 0x0, 0x0);
        gbc.writeMem(0x4dae, { 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02F8
        gbc.setState(0xb5ef, 0x9994, 0x5290, 0xa00, 0xc227, 0x2ec9, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0x5c, 0xc6 });
        gbc.writeMem(0xb5ef, { 0xc8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9996, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9994));
        EXPECT(0xc6, gbc.readMem(0x9995));
        EXPECT(0xc8, gbc.readMem(0xb5ef));
        // C8 02F9
        gbc.setState(0xbfc3, 0xf008, 0xa1c0, 0x5671, 0x137e, 0xa4bb, 0x1, 0x1);
        gbc.writeMem(0xbfc3, { 0xc8 });
        gbc.writeMem(0xf008, { 0x2d, 0x5c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbfc3));
        EXPECT(0x2d, gbc.readMem(0xf008));
        EXPECT(0x5c, gbc.readMem(0xf009));
        // C8 02FA
        gbc.setState(0xdd89, 0xe528, 0x65f0, 0x6c4a, 0x306d, 0x5fc5, 0x1, 0x0);
        gbc.writeMem(0xdd89, { 0xc8 });
        gbc.writeMem(0xe528, { 0x48, 0x38 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0x3848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdd89));
        EXPECT(0x48, gbc.readMem(0xe528));
        EXPECT(0x38, gbc.readMem(0xe529));
        // C8 02FB
        gbc.setState(0x9bdb, 0xb288, 0xf800, 0x55de, 0x7175, 0xfa27, 0x1, 0x1);
        gbc.writeMem(0x9bdb, { 0xc8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9bdb));
        // C8 02FC
        gbc.setState(0xbfa9, 0x8d23, 0xf380, 0xbedc, 0xddf7, 0xa58b, 0x1, 0x1);
        gbc.writeMem(0x8d23, { 0xd2, 0xdd });
        gbc.writeMem(0xbfa9, { 0xc8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8d25, gbc.sp());
        EXPECT(0xddd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8d23));
        EXPECT(0xdd, gbc.readMem(0x8d24));
        EXPECT(0xc8, gbc.readMem(0xbfa9));
        // C8 02FD
        gbc.setState(0xa611, 0x686a, 0xd400, 0x2071, 0xcba8, 0x4105, 0x1, 0x1);
        gbc.writeMem(0xa611, { 0xc8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x686a, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa611));
        // C8 02FE
        gbc.setState(0x565, 0x3ffb, 0x6e00, 0xdd85, 0x405, 0x13a6, 0x0, 0x1);
        gbc.writeMem(0x565, { 0xc8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ffb, gbc.sp());
        EXPECT(0x566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 02FF
        gbc.setState(0xa199, 0x6820, 0x1690, 0x6bc, 0xf7f, 0xd606, 0x1, 0x1);
        gbc.writeMem(0x6820, { 0xd7, 0xc5 });
        gbc.writeMem(0xa199, { 0xc8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa199));
        // C8 0300
        gbc.setState(0x2e96, 0x8e68, 0x7c30, 0x6712, 0x2988, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0x2e96, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8e68, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0301
        gbc.setState(0x739f, 0x14ae, 0xe100, 0x953b, 0xfb2b, 0xccb, 0x1, 0x0);
        gbc.writeMem(0x739f, { 0xc8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0302
        gbc.setState(0x47d5, 0x6e11, 0xade0, 0x385, 0x96dc, 0x8d73, 0x1, 0x0);
        gbc.writeMem(0x47d5, { 0xc8 });
        gbc.writeMem(0x6e11, { 0xd5, 0x82 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e13, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0303
        gbc.setState(0x6d5c, 0x56a5, 0x7220, 0x8b9b, 0x2eb4, 0x523d, 0x1, 0x1);
        gbc.writeMem(0x6d5c, { 0xc8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x56a5, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0304
        gbc.setState(0x1015, 0xe6fe, 0x13f0, 0x1c79, 0x5e48, 0x8d5c, 0x1, 0x0);
        gbc.writeMem(0x1015, { 0xc8 });
        gbc.writeMem(0xe6fe, { 0x9c, 0x28 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe6fe));
        EXPECT(0x28, gbc.readMem(0xe6ff));
        // C8 0305
        gbc.setState(0x2c6d, 0xb7ec, 0x64d0, 0xc2ef, 0x27fd, 0xd265, 0x1, 0x0);
        gbc.writeMem(0x2c6d, { 0xc8 });
        gbc.writeMem(0xb7ec, { 0x7a, 0xaf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb7ee, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb7ec));
        EXPECT(0xaf, gbc.readMem(0xb7ed));
        // C8 0306
        gbc.setState(0xd96e, 0xe927, 0x3340, 0x7b3c, 0x4425, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0xd96e, { 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd96e));
        // C8 0307
        gbc.setState(0x66ed, 0xe407, 0xcad0, 0xb6c9, 0x7156, 0x3b60, 0x1, 0x1);
        gbc.writeMem(0x66ed, { 0xc8 });
        gbc.writeMem(0xe407, { 0x9a, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe409, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe407));
        EXPECT(0x2c, gbc.readMem(0xe408));
        // C8 0309
        gbc.setState(0xd093, 0x6171, 0xba90, 0xf5d6, 0x1959, 0x2034, 0x1, 0x0);
        gbc.writeMem(0x6171, { 0x83, 0x6c });
        gbc.writeMem(0xd093, { 0xc8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0x6c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd093));
        // C8 030A
        gbc.setState(0xaddc, 0xa734, 0xc800, 0x35d0, 0x1c7, 0x875b, 0x1, 0x0);
        gbc.writeMem(0xaddc, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa734, gbc.sp());
        EXPECT(0xaddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaddc));
        // C8 030B
        gbc.setState(0x857c, 0x6918, 0xd30, 0x8e, 0x9dec, 0xa98f, 0x1, 0x0);
        gbc.writeMem(0x857c, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6918, gbc.sp());
        EXPECT(0x857d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x857c));
        // C8 030C
        gbc.setState(0x9230, 0xc1e0, 0x5f0, 0x9bfd, 0xe76f, 0x5652, 0x1, 0x0);
        gbc.writeMem(0x9230, { 0xc8 });
        gbc.writeMem(0xc1e0, { 0xef, 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc1e2, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9230));
        EXPECT(0xef, gbc.readMem(0xc1e0));
        EXPECT(0x4d, gbc.readMem(0xc1e1));
        // C8 030D
        gbc.setState(0xadf0, 0xb238, 0xaf0, 0xf4e4, 0x4a1b, 0xee1c, 0x1, 0x1);
        gbc.writeMem(0xadf0, { 0xc8 });
        gbc.writeMem(0xb238, { 0x84, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb23a, gbc.sp());
        EXPECT(0x284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xadf0));
        EXPECT(0x84, gbc.readMem(0xb238));
        EXPECT(0x2, gbc.readMem(0xb239));
        // C8 030E
        gbc.setState(0xd8f9, 0x3fba, 0x9c80, 0x8392, 0x1af0, 0x57e8, 0x0, 0x1);
        gbc.writeMem(0x3fba, { 0x35, 0xd4 });
        gbc.writeMem(0xd8f9, { 0xc8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3fbc, gbc.sp());
        EXPECT(0xd435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd8f9));
        // C8 030F
        gbc.setState(0xc99b, 0x5d66, 0x7810, 0xa139, 0x23c, 0xdf60, 0x1, 0x0);
        gbc.writeMem(0xc99b, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5d66, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc99b));
        // C8 0310
        gbc.setState(0x514b, 0x7011, 0x56c0, 0x70ec, 0x5c16, 0xbb88, 0x1, 0x1);
        gbc.writeMem(0x514b, { 0xc8 });
        gbc.writeMem(0x7011, { 0x9b, 0xef });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7013, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0311
        gbc.setState(0x4b5f, 0xed0c, 0x7410, 0x6371, 0xcc04, 0x675d, 0x1, 0x1);
        gbc.writeMem(0x4b5f, { 0xc8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0312
        gbc.setState(0x3386, 0x3955, 0xeaa0, 0x9bfa, 0x9b85, 0x1555, 0x1, 0x0);
        gbc.writeMem(0x3386, { 0xc8 });
        gbc.writeMem(0x3955, { 0xf3, 0xe5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0313
        gbc.setState(0x1941, 0xb2f, 0x6b90, 0x97b7, 0x8f8e, 0x50cd, 0x1, 0x1);
        gbc.writeMem(0xb2f, { 0x53, 0xa4 });
        gbc.writeMem(0x1941, { 0xc8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb31, gbc.sp());
        EXPECT(0xa453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0314
        gbc.setState(0xab80, 0x1f57, 0xdd90, 0xe8c3, 0xf1a3, 0x8687, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xc6, 0xc1 });
        gbc.writeMem(0xab80, { 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1f59, gbc.sp());
        EXPECT(0xc1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xab80));
        // C8 0315
        gbc.setState(0x51e2, 0x9de6, 0xc8f0, 0x1531, 0x49d8, 0x23f5, 0x1, 0x0);
        gbc.writeMem(0x51e2, { 0xc8 });
        gbc.writeMem(0x9de6, { 0x7a, 0x41 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9de8, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9de6));
        EXPECT(0x41, gbc.readMem(0x9de7));
        // C8 0316
        gbc.setState(0xb515, 0xd13a, 0x4160, 0x7f2b, 0x335b, 0x6277, 0x0, 0x0);
        gbc.writeMem(0xb515, { 0xc8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd13a, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb515));
        // C8 0317
        gbc.setState(0xb942, 0x24f5, 0xf9a0, 0x4155, 0xffc7, 0xeff7, 0x1, 0x0);
        gbc.writeMem(0x24f5, { 0x5a, 0x49 });
        gbc.writeMem(0xb942, { 0xc8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x24f7, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb942));
        // C8 0318
        gbc.setState(0x5887, 0xb89d, 0x5470, 0x637d, 0xa2ca, 0x3e11, 0x0, 0x0);
        gbc.writeMem(0x5887, { 0xc8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0319
        gbc.setState(0x62f6, 0x7b61, 0xb140, 0xd0f5, 0xb010, 0x8de4, 0x0, 0x0);
        gbc.writeMem(0x62f6, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7b61, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 031A
        gbc.setState(0x7949, 0x600f, 0x9a70, 0x1c58, 0x176a, 0x1db2, 0x0, 0x0);
        gbc.writeMem(0x7949, { 0xc8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 031B
        gbc.setState(0x8109, 0x954a, 0xe860, 0xa851, 0xe5f1, 0x1822, 0x1, 0x0);
        gbc.writeMem(0x8109, { 0xc8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x954a, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8109));
        // C8 031C
        gbc.setState(0x48b2, 0x2426, 0x7630, 0x94cd, 0xc965, 0x8754, 0x0, 0x1);
        gbc.writeMem(0x48b2, { 0xc8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2426, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 031D
        gbc.setState(0x1fae, 0xd35a, 0x9380, 0x1447, 0x7d97, 0xb3d4, 0x0, 0x1);
        gbc.writeMem(0x1fae, { 0xc8 });
        gbc.writeMem(0xd35a, { 0xc, 0x57 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd35c, gbc.sp());
        EXPECT(0x570c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd35a));
        EXPECT(0x57, gbc.readMem(0xd35b));
        // C8 031E
        gbc.setState(0x971a, 0xeb1, 0xfe10, 0x42f1, 0xa3aa, 0x7458, 0x0, 0x0);
        gbc.writeMem(0x971a, { 0xc8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeb1, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x971a));
        // C8 031F
        gbc.setState(0x33e3, 0x8e51, 0x2e50, 0x9a12, 0x1e3a, 0x4961, 0x0, 0x1);
        gbc.writeMem(0x33e3, { 0xc8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0x33e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0320
        gbc.setState(0x6a73, 0x43ee, 0x48b0, 0x9994, 0x31d0, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x43ee, { 0x4f, 0x9c });
        gbc.writeMem(0x6a73, { 0xc8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0x9c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0321
        gbc.setState(0x62b2, 0x5bb9, 0x7c70, 0xbc94, 0x9aa5, 0xac25, 0x1, 0x1);
        gbc.writeMem(0x62b2, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5bb9, gbc.sp());
        EXPECT(0x62b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0322
        gbc.setState(0xabe1, 0x5cca, 0xfc90, 0x1111, 0x8557, 0x22c2, 0x0, 0x0);
        gbc.writeMem(0x5cca, { 0xfb, 0x33 });
        gbc.writeMem(0xabe1, { 0xc8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5ccc, gbc.sp());
        EXPECT(0x33fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xabe1));
        // C8 0323
        gbc.setState(0x2fc6, 0x2816, 0xcd60, 0xe6e6, 0xb107, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x2fc6, { 0xc8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0324
        gbc.setState(0xefe4, 0x9f3a, 0xcd80, 0x18a9, 0x92f7, 0x19f8, 0x1, 0x1);
        gbc.writeMem(0x9f3a, { 0xb, 0xf8 });
        gbc.writeMem(0xefe4, { 0xc8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f3c, gbc.sp());
        EXPECT(0xf80b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9f3a));
        EXPECT(0xf8, gbc.readMem(0x9f3b));
        EXPECT(0xc8, gbc.readMem(0xefe4));
        // C8 0325
        gbc.setState(0x71f4, 0x41a9, 0xffa0, 0xec6b, 0xee22, 0xa533, 0x1, 0x1);
        gbc.writeMem(0x41a9, { 0x4, 0x79 });
        gbc.writeMem(0x71f4, { 0xc8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x7904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0326
        gbc.setState(0xdb29, 0xf1a5, 0x6740, 0x877e, 0x5e38, 0xb30, 0x0, 0x1);
        gbc.writeMem(0xdb29, { 0xc8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf1a5, gbc.sp());
        EXPECT(0xdb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdb29));
        // C8 0328
        gbc.setState(0x5b70, 0xfc92, 0x3c70, 0xd55b, 0xa854, 0xb69a, 0x1, 0x1);
        gbc.writeMem(0x5b70, { 0xc8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0329
        gbc.setState(0x41e6, 0x4841, 0x9510, 0xa7c1, 0xd41d, 0x917f, 0x0, 0x1);
        gbc.writeMem(0x41e6, { 0xc8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0x41e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 032A
        gbc.setState(0xc489, 0x2a84, 0x2af0, 0x8887, 0xff91, 0x409, 0x0, 0x0);
        gbc.writeMem(0x2a84, { 0x9d, 0x90 });
        gbc.writeMem(0xc489, { 0xc8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2a86, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc489));
        // C8 032C
        gbc.setState(0x2b7f, 0x5012, 0x1690, 0x8bc1, 0xd27f, 0x215d, 0x0, 0x0);
        gbc.writeMem(0x2b7f, { 0xc8 });
        gbc.writeMem(0x5012, { 0x2c, 0xe8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5014, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 032D
        gbc.setState(0x7dbf, 0xf6d6, 0xfd90, 0xa774, 0xdbe1, 0x476c, 0x1, 0x0);
        gbc.writeMem(0x7dbf, { 0xc8 });
        gbc.writeMem(0xf6d6, { 0xc2, 0xe });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf6d8, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf6d6));
        EXPECT(0xe, gbc.readMem(0xf6d7));
        // C8 032E
        gbc.setState(0xeaad, 0xda96, 0xe2b0, 0x67cd, 0x891e, 0xaffa, 0x0, 0x0);
        gbc.writeMem(0xda96, { 0xa9, 0x3c });
        gbc.writeMem(0xeaad, { 0xc8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xda96));
        EXPECT(0x3c, gbc.readMem(0xda97));
        EXPECT(0xc8, gbc.readMem(0xeaad));
        // C8 032F
        gbc.setState(0x1ddc, 0xb92d, 0xcbe0, 0x3dd8, 0x9b09, 0x9868, 0x0, 0x0);
        gbc.writeMem(0x1ddc, { 0xc8 });
        gbc.writeMem(0xb92d, { 0x69, 0xa3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb92f, gbc.sp());
        EXPECT(0xa369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb92d));
        EXPECT(0xa3, gbc.readMem(0xb92e));
        // C8 0330
        gbc.setState(0x359a, 0x8318, 0x8b90, 0x30f6, 0x3f1b, 0xa208, 0x1, 0x0);
        gbc.writeMem(0x359a, { 0xc8 });
        gbc.writeMem(0x8318, { 0xb4, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x831a, gbc.sp());
        EXPECT(0xd0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8318));
        EXPECT(0xd0, gbc.readMem(0x8319));
        // C8 0331
        gbc.setState(0xac71, 0xdc7b, 0x370, 0x752e, 0x46f1, 0xd571, 0x1, 0x1);
        gbc.writeMem(0xac71, { 0xc8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xac71));
        // C8 0332
        gbc.setState(0xc508, 0x6203, 0xddb0, 0x13bb, 0x4763, 0xdbb3, 0x1, 0x0);
        gbc.writeMem(0x6203, { 0x92, 0x49 });
        gbc.writeMem(0xc508, { 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6205, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc508));
        // C8 0333
        gbc.setState(0x2f2a, 0x6f1a, 0xb850, 0xb1c6, 0x79df, 0x3f7f, 0x1, 0x0);
        gbc.writeMem(0x2f2a, { 0xc8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f1a, gbc.sp());
        EXPECT(0x2f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0334
        gbc.setState(0x6483, 0x9823, 0x1560, 0x113d, 0xab8, 0xdedf, 0x1, 0x1);
        gbc.writeMem(0x6483, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0335
        gbc.setState(0x5efd, 0x3337, 0x1800, 0xa032, 0x2f2d, 0x432b, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3337, gbc.sp());
        EXPECT(0x5efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0336
        gbc.setState(0xbf81, 0x860d, 0x8520, 0xa9f5, 0xa157, 0x25d6, 0x1, 0x0);
        gbc.writeMem(0xbf81, { 0xc8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0xbf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbf81));
        // C8 0337
        gbc.setState(0xbcc5, 0xd56d, 0x1c00, 0x2771, 0x3ddf, 0x7d59, 0x1, 0x0);
        gbc.writeMem(0xbcc5, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbcc5));
        // C8 0338
        gbc.setState(0xd5fa, 0x574, 0x7bf0, 0x34ad, 0xe2f4, 0x9009, 0x0, 0x0);
        gbc.writeMem(0x574, { 0xea, 0xe8 });
        gbc.writeMem(0xd5fa, { 0xc8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd5fa));
        // C8 033A
        gbc.setState(0x6d77, 0x86c0, 0xbf60, 0x9059, 0xb779, 0x5b8c, 0x0, 0x0);
        gbc.writeMem(0x6d77, { 0xc8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x86c0, gbc.sp());
        EXPECT(0x6d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 033B
        gbc.setState(0xe40a, 0x257d, 0xd7d0, 0xfbc7, 0xc8c, 0xf3af, 0x1, 0x1);
        gbc.writeMem(0x257d, { 0x57, 0xc8 });
        gbc.writeMem(0xe40a, { 0xc8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x257f, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe40a));
        // C8 033C
        gbc.setState(0x17e0, 0x604b, 0xbe80, 0x1ea2, 0x9005, 0xfdfd, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xc8 });
        gbc.writeMem(0x604b, { 0xa4, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x604d, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 033D
        gbc.setState(0x8511, 0xb840, 0x58d0, 0xd6e3, 0x1e8, 0xb4e5, 0x0, 0x0);
        gbc.writeMem(0x8511, { 0xc8 });
        gbc.writeMem(0xb840, { 0xd4, 0x41 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb842, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8511));
        EXPECT(0xd4, gbc.readMem(0xb840));
        EXPECT(0x41, gbc.readMem(0xb841));
        // C8 033E
        gbc.setState(0xbc, 0x43a9, 0xb170, 0x7c62, 0xe3e8, 0xa9e1, 0x1, 0x1);
        gbc.writeMem(0xbc, { 0xc8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 033F
        gbc.setState(0xcfa2, 0x63f4, 0xae50, 0xa371, 0x748c, 0x3d75, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0xc8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcfa2));
        // C8 0340
        gbc.setState(0x3533, 0x31b, 0x2b80, 0x3a23, 0x9a8b, 0x744, 0x0, 0x0);
        gbc.writeMem(0x31b, { 0xa9, 0x1b });
        gbc.writeMem(0x3533, { 0xc8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0341
        gbc.setState(0xb00f, 0xf5d2, 0xaa90, 0x2b9e, 0x71b6, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0xb00f, { 0xc8 });
        gbc.writeMem(0xf5d2, { 0x3f, 0xea });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0xea3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb00f));
        EXPECT(0x3f, gbc.readMem(0xf5d2));
        EXPECT(0xea, gbc.readMem(0xf5d3));
        // C8 0342
        gbc.setState(0x57e2, 0x20ea, 0xd5d0, 0xc7df, 0xd549, 0x5388, 0x1, 0x1);
        gbc.writeMem(0x20ea, { 0xba, 0x69 });
        gbc.writeMem(0x57e2, { 0xc8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x20ec, gbc.sp());
        EXPECT(0x69ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0343
        gbc.setState(0x5127, 0x2171, 0x2870, 0x5e19, 0x8703, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0x5127, { 0xc8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2171, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0344
        gbc.setState(0x43c1, 0x10c6, 0xeb00, 0xd290, 0xcfc9, 0x75cd, 0x0, 0x0);
        gbc.writeMem(0x43c1, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x10c6, gbc.sp());
        EXPECT(0x43c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0345
        gbc.setState(0x4597, 0x114b, 0xb340, 0x3f79, 0xc8a1, 0x7148, 0x1, 0x0);
        gbc.writeMem(0x4597, { 0xc8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x114b, gbc.sp());
        EXPECT(0x4598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0346
        gbc.setState(0xaa84, 0xe47, 0x4b30, 0x2882, 0x5278, 0x56c4, 0x0, 0x0);
        gbc.writeMem(0xaa84, { 0xc8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaa84));
        // C8 0347
        gbc.setState(0x3c2e, 0x4b23, 0xb9e0, 0x9613, 0x6040, 0x7a92, 0x1, 0x1);
        gbc.writeMem(0x3c2e, { 0xc8 });
        gbc.writeMem(0x4b23, { 0x68, 0x92 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4b25, gbc.sp());
        EXPECT(0x9268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0348
        gbc.setState(0x4b68, 0xa025, 0x9680, 0x680a, 0x351f, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0x4b68, { 0xc8 });
        gbc.writeMem(0xa025, { 0x2d, 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa027, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa025));
        EXPECT(0xb9, gbc.readMem(0xa026));
        // C8 0349
        gbc.setState(0x1bb2, 0xcfa1, 0xd900, 0xd082, 0x87a, 0x1a05, 0x1, 0x0);
        gbc.writeMem(0x1bb2, { 0xc8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcfa1, gbc.sp());
        EXPECT(0x1bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 034A
        gbc.setState(0x1264, 0x901e, 0x2f20, 0x2440, 0x8475, 0x3107, 0x1, 0x0);
        gbc.writeMem(0x1264, { 0xc8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x901e, gbc.sp());
        EXPECT(0x1265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 034B
        gbc.setState(0x83f, 0x5dd, 0xe630, 0x44f9, 0xbebd, 0x7c52, 0x1, 0x0);
        gbc.writeMem(0x83f, { 0xc8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0x840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 034C
        gbc.setState(0x285a, 0x60d9, 0x930, 0x6576, 0x9ca2, 0xda9f, 0x0, 0x1);
        gbc.writeMem(0x285a, { 0xc8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0x285b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 034D
        gbc.setState(0x1105, 0x482e, 0x2450, 0x2768, 0xb628, 0x7bf0, 0x0, 0x0);
        gbc.writeMem(0x1105, { 0xc8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0x1106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 034E
        gbc.setState(0x7d5c, 0xd777, 0x9450, 0x47f5, 0x3b9b, 0x2b69, 0x1, 0x0);
        gbc.writeMem(0x7d5c, { 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd777, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 034F
        gbc.setState(0xdc1a, 0xd792, 0xc430, 0xb142, 0x3b83, 0xb190, 0x1, 0x1);
        gbc.writeMem(0xdc1a, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xdc1a));
        // C8 0350
        gbc.setState(0x4fa9, 0xfd83, 0x3a0, 0x587b, 0xacb9, 0x3131, 0x1, 0x1);
        gbc.writeMem(0x4fa9, { 0xc8 });
        gbc.writeMem(0xfd83, { 0x10, 0xa5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0xa510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfd83));
        EXPECT(0xa5, gbc.readMem(0xfd84));
        // C8 0351
        gbc.setState(0x70f4, 0x121, 0xc970, 0x139c, 0xfa3e, 0x1f9b, 0x1, 0x1);
        gbc.writeMem(0x70f4, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x121, gbc.sp());
        EXPECT(0x70f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0352
        gbc.setState(0xd6ed, 0xe7df, 0x91d0, 0xc241, 0xd531, 0x7933, 0x0, 0x1);
        gbc.writeMem(0xd6ed, { 0xc8 });
        gbc.writeMem(0xe7df, { 0x70, 0x6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0x670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd6ed));
        EXPECT(0x70, gbc.readMem(0xe7df));
        EXPECT(0x6, gbc.readMem(0xe7e0));
        // C8 0353
        gbc.setState(0xbbc4, 0xc990, 0x1c40, 0xa06a, 0xc686, 0xd33b, 0x0, 0x0);
        gbc.writeMem(0xbbc4, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc990, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbbc4));
        // C8 0354
        gbc.setState(0xd55, 0x56fd, 0x4890, 0x774b, 0x841c, 0x94d0, 0x0, 0x0);
        gbc.writeMem(0xd55, { 0xc8 });
        gbc.writeMem(0x56fd, { 0x7, 0xc6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0xc607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0355
        gbc.setState(0xc165, 0x7c6f, 0x9c40, 0xd8fc, 0x38ee, 0x4512, 0x1, 0x0);
        gbc.writeMem(0xc165, { 0xc8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc165));
        // C8 0356
        gbc.setState(0x4089, 0x1814, 0xdf40, 0x593f, 0x67d7, 0xd12f, 0x0, 0x1);
        gbc.writeMem(0x4089, { 0xc8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1814, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0358
        gbc.setState(0xef31, 0x1a94, 0x23a0, 0xbc92, 0x8f51, 0xfe56, 0x0, 0x0);
        gbc.writeMem(0x1a94, { 0x41, 0xb7 });
        gbc.writeMem(0xef31, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0xb741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef31));
        // C8 0359
        gbc.setState(0x15df, 0xc806, 0x3ca0, 0xfcb4, 0xd68a, 0xb558, 0x0, 0x1);
        gbc.writeMem(0x15df, { 0xc8 });
        gbc.writeMem(0xc806, { 0xa4, 0x4c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0x4ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc806));
        EXPECT(0x4c, gbc.readMem(0xc807));
        // C8 035A
        gbc.setState(0x82a8, 0x960f, 0xaf00, 0x8f6b, 0xd85a, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0x82a8, { 0xc8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x960f, gbc.sp());
        EXPECT(0x82a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x82a8));
        // C8 035B
        gbc.setState(0xbb39, 0x53ad, 0x4430, 0x6214, 0x6dc1, 0x7ea0, 0x0, 0x1);
        gbc.writeMem(0xbb39, { 0xc8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbb39));
        // C8 035C
        gbc.setState(0xb924, 0xa904, 0xa620, 0x97e6, 0x4cec, 0x34bd, 0x1, 0x1);
        gbc.writeMem(0xb924, { 0xc8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0xb925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb924));
        // C8 035D
        gbc.setState(0x46fe, 0x1932, 0xc910, 0x3d48, 0x5f83, 0xd7bd, 0x0, 0x1);
        gbc.writeMem(0x46fe, { 0xc8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0x46ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 035E
        gbc.setState(0x1664, 0xed3f, 0x47b0, 0x1740, 0xf5d2, 0xb4e1, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0xc8 });
        gbc.writeMem(0xed3f, { 0xae, 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed41, gbc.sp());
        EXPECT(0xcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xed3f));
        EXPECT(0xc, gbc.readMem(0xed40));
        // C8 035F
        gbc.setState(0x2084, 0xde95, 0xe500, 0x9856, 0xc937, 0x81d3, 0x0, 0x0);
        gbc.writeMem(0x2084, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0360
        gbc.setState(0xea19, 0xeeb0, 0xe970, 0x34c6, 0xe319, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0xea19, { 0xc8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeeb0, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xea19));
        // C8 0361
        gbc.setState(0xc2a7, 0xd17a, 0x9de0, 0x10bf, 0x40ac, 0xfec6, 0x1, 0x1);
        gbc.writeMem(0xc2a7, { 0xc8 });
        gbc.writeMem(0xd17a, { 0xb, 0x75 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd17c, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc2a7));
        EXPECT(0xb, gbc.readMem(0xd17a));
        EXPECT(0x75, gbc.readMem(0xd17b));
        // C8 0362
        gbc.setState(0xe3ef, 0xf90d, 0xa430, 0xe17b, 0x7780, 0x8f63, 0x0, 0x1);
        gbc.writeMem(0xe3ef, { 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf90d, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe3ef));
        // C8 0364
        gbc.setState(0x2793, 0xae9e, 0x9da0, 0x6cca, 0xcfa, 0x9ac4, 0x0, 0x1);
        gbc.writeMem(0x2793, { 0xc8 });
        gbc.writeMem(0xae9e, { 0xe1, 0xf7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaea0, gbc.sp());
        EXPECT(0xf7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xae9e));
        EXPECT(0xf7, gbc.readMem(0xae9f));
        // C8 0365
        gbc.setState(0x7800, 0x57f7, 0x13f0, 0x65a0, 0x2ab6, 0x37e, 0x0, 0x0);
        gbc.writeMem(0x57f7, { 0x26, 0x5d });
        gbc.writeMem(0x7800, { 0xc8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x5d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0366
        gbc.setState(0x6f65, 0xbe10, 0x2050, 0x7642, 0xc36f, 0x303, 0x0, 0x0);
        gbc.writeMem(0x6f65, { 0xc8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbe10, gbc.sp());
        EXPECT(0x6f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0367
        gbc.setState(0xd436, 0x34ae, 0x3820, 0x8217, 0x945b, 0x449, 0x1, 0x0);
        gbc.writeMem(0xd436, { 0xc8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd436));
        // C8 0368
        gbc.setState(0x979d, 0xc1a3, 0xd10, 0x540, 0x4956, 0x179d, 0x0, 0x0);
        gbc.writeMem(0x979d, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x979d));
        // C8 0369
        gbc.setState(0x943c, 0x3b3a, 0x940, 0xeed0, 0x53a6, 0x1e8, 0x0, 0x0);
        gbc.writeMem(0x943c, { 0xc8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x943c));
        // C8 036A
        gbc.setState(0x5def, 0x10bc, 0x9d60, 0x4284, 0xcb92, 0x8156, 0x0, 0x1);
        gbc.writeMem(0x5def, { 0xc8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x10bc, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 036B
        gbc.setState(0xa555, 0x7f89, 0xcac0, 0x5a8d, 0x6d98, 0x8544, 0x0, 0x1);
        gbc.writeMem(0x7f89, { 0x65, 0x9c });
        gbc.writeMem(0xa555, { 0xc8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7f8b, gbc.sp());
        EXPECT(0x9c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa555));
        // C8 036C
        gbc.setState(0xad5a, 0x66d0, 0x8050, 0x5c40, 0x2609, 0x582d, 0x1, 0x0);
        gbc.writeMem(0xad5a, { 0xc8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x66d0, gbc.sp());
        EXPECT(0xad5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xad5a));
        // C8 036D
        gbc.setState(0x8607, 0xa46a, 0x27c0, 0x22de, 0xa04, 0x6019, 0x1, 0x0);
        gbc.writeMem(0x8607, { 0xc8 });
        gbc.writeMem(0xa46a, { 0x70, 0x59 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x5970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8607));
        EXPECT(0x70, gbc.readMem(0xa46a));
        EXPECT(0x59, gbc.readMem(0xa46b));
        // C8 036E
        gbc.setState(0x86ee, 0x70c0, 0xed90, 0xfd90, 0x929c, 0x543a, 0x1, 0x1);
        gbc.writeMem(0x70c0, { 0x92, 0x8a });
        gbc.writeMem(0x86ee, { 0xc8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x70c2, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x86ee));
        // C8 036F
        gbc.setState(0x7b85, 0x5a6b, 0x6390, 0x193f, 0xcb5e, 0xdc2f, 0x1, 0x1);
        gbc.writeMem(0x5a6b, { 0x80, 0x51 });
        gbc.writeMem(0x7b85, { 0xc8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5a6d, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0371
        gbc.setState(0xa972, 0x5c17, 0xce80, 0xdb, 0xcf17, 0x5325, 0x0, 0x0);
        gbc.writeMem(0x5c17, { 0x2f, 0xa8 });
        gbc.writeMem(0xa972, { 0xc8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5c19, gbc.sp());
        EXPECT(0xa82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa972));
        // C8 0372
        gbc.setState(0x5f44, 0xa783, 0x3570, 0xba3f, 0xb81b, 0xf63a, 0x1, 0x1);
        gbc.writeMem(0x5f44, { 0xc8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x5f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0373
        gbc.setState(0xcf36, 0x32ad, 0xf440, 0xd1eb, 0x62e4, 0x6442, 0x0, 0x0);
        gbc.writeMem(0xcf36, { 0xc8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0xcf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcf36));
        // C8 0374
        gbc.setState(0x45f9, 0x8c3a, 0x6b40, 0xa8ce, 0x133b, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0x45f9, { 0xc8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8c3a, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0375
        gbc.setState(0xd8ad, 0x4591, 0xda30, 0x8e7e, 0xc40a, 0x3240, 0x1, 0x0);
        gbc.writeMem(0xd8ad, { 0xc8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xd8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd8ad));
        // C8 0376
        gbc.setState(0x8a04, 0x38e6, 0x7ce0, 0x4cd7, 0xa9b9, 0x5d4c, 0x1, 0x0);
        gbc.writeMem(0x38e6, { 0xbc, 0xde });
        gbc.writeMem(0x8a04, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xdebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8a04));
        // C8 0377
        gbc.setState(0xefdc, 0xfdde, 0xa140, 0x57de, 0x5af2, 0x4e1, 0x0, 0x0);
        gbc.writeMem(0xefdc, { 0xc8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfdde, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xefdc));
        // C8 0378
        gbc.setState(0xc92, 0xecf8, 0x72b0, 0xa71d, 0xd750, 0xde23, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0xc8 });
        gbc.writeMem(0xecf8, { 0x76, 0x14 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xecfa, gbc.sp());
        EXPECT(0x1476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xecf8));
        EXPECT(0x14, gbc.readMem(0xecf9));
        // C8 0379
        gbc.setState(0x9f30, 0x18f5, 0x23c0, 0x2b86, 0x3279, 0x5fda, 0x0, 0x1);
        gbc.writeMem(0x18f5, { 0xf4, 0x8e });
        gbc.writeMem(0x9f30, { 0xc8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x18f7, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9f30));
        // C8 037A
        gbc.setState(0x77c1, 0xa3f2, 0xa900, 0xbe4f, 0x39bb, 0xdd23, 0x0, 0x1);
        gbc.writeMem(0x77c1, { 0xc8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa3f2, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 037B
        gbc.setState(0xa722, 0x79f6, 0xb530, 0xfa3b, 0xff83, 0xc0ac, 0x1, 0x0);
        gbc.writeMem(0xa722, { 0xc8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x79f6, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa722));
        // C8 037C
        gbc.setState(0x261f, 0xcb6f, 0x6130, 0x7caa, 0xf047, 0x92b, 0x0, 0x0);
        gbc.writeMem(0x261f, { 0xc8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcb6f, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 037D
        gbc.setState(0xba96, 0xdb03, 0x55f0, 0xd8b1, 0x8365, 0x1090, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0xc8 });
        gbc.writeMem(0xdb03, { 0x56, 0xe3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb05, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xba96));
        EXPECT(0x56, gbc.readMem(0xdb03));
        EXPECT(0xe3, gbc.readMem(0xdb04));
        // C8 037E
        gbc.setState(0x1ab5, 0xaa24, 0x80d0, 0x6ffe, 0x9dea, 0xfa10, 0x1, 0x0);
        gbc.writeMem(0x1ab5, { 0xc8 });
        gbc.writeMem(0xaa24, { 0x4d, 0xf3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0xf34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaa24));
        EXPECT(0xf3, gbc.readMem(0xaa25));
        // C8 037F
        gbc.setState(0x5597, 0xd56d, 0x9420, 0x3329, 0x1e18, 0xb25a, 0x0, 0x0);
        gbc.writeMem(0x5597, { 0xc8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0380
        gbc.setState(0x2e42, 0x3827, 0x9fb0, 0x50c8, 0x3734, 0x63fc, 0x1, 0x1);
        gbc.writeMem(0x2e42, { 0xc8 });
        gbc.writeMem(0x3827, { 0x62, 0xc4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3829, gbc.sp());
        EXPECT(0xc462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0381
        gbc.setState(0x466b, 0xa0f0, 0x5510, 0x5cef, 0xae1b, 0x582e, 0x1, 0x1);
        gbc.writeMem(0x466b, { 0xc8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa0f0, gbc.sp());
        EXPECT(0x466c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0382
        gbc.setState(0x8c65, 0xa6ac, 0xc0e0, 0x41f4, 0x60f6, 0xa4b3, 0x1, 0x1);
        gbc.writeMem(0x8c65, { 0xc8 });
        gbc.writeMem(0xa6ac, { 0xf9, 0x29 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa6ae, gbc.sp());
        EXPECT(0x29f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8c65));
        EXPECT(0xf9, gbc.readMem(0xa6ac));
        EXPECT(0x29, gbc.readMem(0xa6ad));
        // C8 0383
        gbc.setState(0x1841, 0x3cab, 0xce10, 0x75e8, 0x8b31, 0x9733, 0x0, 0x1);
        gbc.writeMem(0x1841, { 0xc8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3cab, gbc.sp());
        EXPECT(0x1842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 0384
        gbc.setState(0x3ec7, 0x8708, 0x2380, 0xac6, 0x8ab5, 0x237b, 0x0, 0x0);
        gbc.writeMem(0x3ec7, { 0xc8 });
        gbc.writeMem(0x8708, { 0x6b, 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0x196b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8708));
        EXPECT(0x19, gbc.readMem(0x8709));
        // C8 0385
        gbc.setState(0xe306, 0x2399, 0xbe60, 0xf2ee, 0x3234, 0x3766, 0x0, 0x1);
        gbc.writeMem(0xe306, { 0xc8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2399, gbc.sp());
        EXPECT(0xe307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe306));
        // C8 0386
        gbc.setState(0x86fc, 0xaf43, 0xb760, 0xa92b, 0x699e, 0x8efa, 0x1, 0x0);
        gbc.writeMem(0x86fc, { 0xc8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x86fc));
        // C8 0387
        gbc.setState(0x5df9, 0x3661, 0x7ba0, 0xaaf2, 0xf4f2, 0x45b3, 0x0, 0x0);
        gbc.writeMem(0x3661, { 0xfc, 0xab });
        gbc.writeMem(0x5df9, { 0xc8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3663, gbc.sp());
        EXPECT(0xabfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0389
        gbc.setState(0x3142, 0xa2ed, 0x6c30, 0xd97, 0x2983, 0xb62a, 0x1, 0x0);
        gbc.writeMem(0x3142, { 0xc8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 038A
        gbc.setState(0x3af6, 0x9274, 0xf1c0, 0x267f, 0xe217, 0x483a, 0x1, 0x0);
        gbc.writeMem(0x3af6, { 0xc8 });
        gbc.writeMem(0x9274, { 0x75, 0xc2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9274));
        EXPECT(0xc2, gbc.readMem(0x9275));
        // C8 038B
        gbc.setState(0x1a5a, 0x3f4e, 0xe1a0, 0xb809, 0x2d2a, 0x1954, 0x1, 0x0);
        gbc.writeMem(0x1a5a, { 0xc8 });
        gbc.writeMem(0x3f4e, { 0x30, 0xc7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3f50, gbc.sp());
        EXPECT(0xc730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 038C
        gbc.setState(0xa58e, 0xa195, 0x83c0, 0x978, 0xfc2a, 0x5c41, 0x1, 0x0);
        gbc.writeMem(0xa195, { 0xcd, 0x70 });
        gbc.writeMem(0xa58e, { 0xc8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa197, gbc.sp());
        EXPECT(0x70cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa195));
        EXPECT(0x70, gbc.readMem(0xa196));
        EXPECT(0xc8, gbc.readMem(0xa58e));
        // C8 038D
        gbc.setState(0x770b, 0x9aad, 0xc480, 0xc3f, 0xd989, 0x19e6, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0xc8 });
        gbc.writeMem(0x9aad, { 0x94, 0x52 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9aaf, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9aad));
        EXPECT(0x52, gbc.readMem(0x9aae));
        // C8 038E
        gbc.setState(0x7cf4, 0xe85c, 0xa8b0, 0x9a33, 0x436a, 0x97d, 0x0, 0x0);
        gbc.writeMem(0x7cf4, { 0xc8 });
        gbc.writeMem(0xe85c, { 0xb4, 0xd3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0xd3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xe85c));
        EXPECT(0xd3, gbc.readMem(0xe85d));
        // C8 038F
        gbc.setState(0x2ff3, 0xd2cc, 0xe760, 0x3bc7, 0x8cda, 0x8d5d, 0x0, 0x1);
        gbc.writeMem(0x2ff3, { 0xc8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd2cc, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0390
        gbc.setState(0xd11e, 0xd76e, 0x2e30, 0xd402, 0xe43, 0xc92e, 0x1, 0x0);
        gbc.writeMem(0xd11e, { 0xc8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0xd11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd11e));
        // C8 0391
        gbc.setState(0x5427, 0x323b, 0xa80, 0xef1c, 0x74f5, 0x2a10, 0x1, 0x1);
        gbc.writeMem(0x323b, { 0xae, 0xcf });
        gbc.writeMem(0x5427, { 0xc8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0392
        gbc.setState(0xb173, 0xeb4b, 0x15f0, 0xf0a3, 0xcc31, 0x2318, 0x1, 0x1);
        gbc.writeMem(0xb173, { 0xc8 });
        gbc.writeMem(0xeb4b, { 0x5b, 0x5a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb173));
        EXPECT(0x5b, gbc.readMem(0xeb4b));
        EXPECT(0x5a, gbc.readMem(0xeb4c));
        // C8 0393
        gbc.setState(0xb5ac, 0x73bb, 0x5560, 0x5f5d, 0xd49b, 0x7c35, 0x1, 0x0);
        gbc.writeMem(0xb5ac, { 0xc8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0xb5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb5ac));
        // C8 0394
        gbc.setState(0x339e, 0xc941, 0xf00, 0x866d, 0xf797, 0x1c3, 0x0, 0x1);
        gbc.writeMem(0x339e, { 0xc8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc941, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 0397
        gbc.setState(0x4a9e, 0x938c, 0xb580, 0x2c97, 0x8045, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x4a9e, { 0xc8 });
        gbc.writeMem(0x938c, { 0xbf, 0x3b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x938e, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x938c));
        EXPECT(0x3b, gbc.readMem(0x938d));
        // C8 0398
        gbc.setState(0x9339, 0xa9aa, 0xa430, 0x88a8, 0x6994, 0x6b0d, 0x0, 0x0);
        gbc.writeMem(0x9339, { 0xc8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa9aa, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9339));
        // C8 0399
        gbc.setState(0xa724, 0xa560, 0xc220, 0xa3cd, 0xdbff, 0xc0df, 0x1, 0x0);
        gbc.writeMem(0xa724, { 0xc8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa560, gbc.sp());
        EXPECT(0xa725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa724));
        // C8 039A
        gbc.setState(0x1b2d, 0x52ae, 0x31e0, 0x4586, 0x8b5e, 0x8144, 0x1, 0x0);
        gbc.writeMem(0x1b2d, { 0xc8 });
        gbc.writeMem(0x52ae, { 0xfc, 0x38 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 039B
        gbc.setState(0x4734, 0x23c6, 0xf490, 0x47d, 0xa0ed, 0x836e, 0x0, 0x1);
        gbc.writeMem(0x23c6, { 0xec, 0x31 });
        gbc.writeMem(0x4734, { 0xc8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x23c8, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 039C
        gbc.setState(0x62db, 0xa099, 0x1c30, 0x5b6d, 0xb162, 0xf7e5, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xc8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa099, gbc.sp());
        EXPECT(0x62dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 039D
        gbc.setState(0x9d04, 0x8f73, 0x7c90, 0xa99b, 0x3f20, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x8f73, { 0xdd, 0xab });
        gbc.writeMem(0x9d04, { 0xc8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8f73));
        EXPECT(0xab, gbc.readMem(0x8f74));
        EXPECT(0xc8, gbc.readMem(0x9d04));
        // C8 039E
        gbc.setState(0x2226, 0x9abc, 0x5970, 0x98b6, 0xdca, 0xe39f, 0x1, 0x0);
        gbc.writeMem(0x2226, { 0xc8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 039F
        gbc.setState(0xa749, 0xdbfe, 0xafd0, 0x46ca, 0xc24c, 0x5f07, 0x0, 0x0);
        gbc.writeMem(0xa749, { 0xc8 });
        gbc.writeMem(0xdbfe, { 0xff, 0x20 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0x20ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa749));
        EXPECT(0xff, gbc.readMem(0xdbfe));
        EXPECT(0x20, gbc.readMem(0xdbff));
        // C8 03A0
        gbc.setState(0xbcb2, 0x68a8, 0xe520, 0x570b, 0xf4a9, 0x7acd, 0x0, 0x0);
        gbc.writeMem(0xbcb2, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x68a8, gbc.sp());
        EXPECT(0xbcb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbcb2));
        // C8 03A1
        gbc.setState(0x68c7, 0x1514, 0x28f0, 0x8137, 0x9be5, 0xf521, 0x1, 0x0);
        gbc.writeMem(0x1514, { 0xa4, 0xe3 });
        gbc.writeMem(0x68c7, { 0xc8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1516, gbc.sp());
        EXPECT(0xe3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03A2
        gbc.setState(0xbc46, 0xadf2, 0xe0f0, 0xbe55, 0xca10, 0x8c69, 0x0, 0x1);
        gbc.writeMem(0xadf2, { 0x7b, 0x7d });
        gbc.writeMem(0xbc46, { 0xc8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xadf4, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xadf2));
        EXPECT(0x7d, gbc.readMem(0xadf3));
        EXPECT(0xc8, gbc.readMem(0xbc46));
        // C8 03A3
        gbc.setState(0xae87, 0xc1cd, 0x4e10, 0xce17, 0x6a4b, 0x89e6, 0x0, 0x1);
        gbc.writeMem(0xae87, { 0xc8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc1cd, gbc.sp());
        EXPECT(0xae88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xae87));
        // C8 03A4
        gbc.setState(0xb6a8, 0x57ad, 0xef00, 0x6ad7, 0xbd5c, 0x5791, 0x0, 0x0);
        gbc.writeMem(0xb6a8, { 0xc8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0xb6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb6a8));
        // C8 03A5
        gbc.setState(0xa22, 0xadbe, 0xab70, 0xa7eb, 0x37b7, 0x7d0b, 0x1, 0x0);
        gbc.writeMem(0xa22, { 0xc8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03A6
        gbc.setState(0x9b58, 0xaab3, 0x260, 0x5b48, 0x5c2e, 0x6bc6, 0x1, 0x1);
        gbc.writeMem(0x9b58, { 0xc8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9b58));
        // C8 03A7
        gbc.setState(0x8665, 0xc98, 0xfd0, 0x2458, 0x5f89, 0x339b, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0xfd, 0xb4 });
        gbc.writeMem(0x8665, { 0xc8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8665));
        // C8 03A8
        gbc.setState(0x923b, 0x7feb, 0x7a40, 0x8f9c, 0xe35f, 0x7206, 0x1, 0x0);
        gbc.writeMem(0x923b, { 0xc8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7feb, gbc.sp());
        EXPECT(0x923c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x923b));
        // C8 03A9
        gbc.setState(0xc25a, 0x76e7, 0x9940, 0x36b6, 0x4e36, 0x42fc, 0x1, 0x1);
        gbc.writeMem(0xc25a, { 0xc8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x76e7, gbc.sp());
        EXPECT(0xc25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc25a));
        // C8 03AA
        gbc.setState(0xcb3a, 0xe028, 0x50f0, 0x48ba, 0x3d14, 0x4ab5, 0x0, 0x0);
        gbc.writeMem(0xcb3a, { 0xc8 });
        gbc.writeMem(0xe028, { 0x3, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe02a, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcb3a));
        EXPECT(0x3, gbc.readMem(0xe028));
        EXPECT(0x2c, gbc.readMem(0xe029));
        // C8 03AB
        gbc.setState(0x2b07, 0x2573, 0x5400, 0xc2a9, 0x9204, 0x6c80, 0x1, 0x0);
        gbc.writeMem(0x2b07, { 0xc8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2573, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03AC
        gbc.setState(0x553b, 0xe66c, 0x2cf0, 0x30d5, 0x4172, 0x8cbe, 0x1, 0x0);
        gbc.writeMem(0x553b, { 0xc8 });
        gbc.writeMem(0xe66c, { 0x5d, 0x82 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe66e, gbc.sp());
        EXPECT(0x825d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe66c));
        EXPECT(0x82, gbc.readMem(0xe66d));
        // C8 03AD
        gbc.setState(0xbc55, 0x8d2e, 0x6170, 0xf493, 0xc64b, 0x7635, 0x0, 0x1);
        gbc.writeMem(0xbc55, { 0xc8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8d2e, gbc.sp());
        EXPECT(0xbc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbc55));
        // C8 03AE
        gbc.setState(0x801c, 0x76af, 0x9500, 0x89a5, 0x4cdf, 0x39a3, 0x0, 0x0);
        gbc.writeMem(0x801c, { 0xc8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x76af, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x801c));
        // C8 03AF
        gbc.setState(0x7e19, 0x9a83, 0xe090, 0x8246, 0x351, 0xc3bb, 0x0, 0x0);
        gbc.writeMem(0x7e19, { 0xc8 });
        gbc.writeMem(0x9a83, { 0xdd, 0xda });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9a85, gbc.sp());
        EXPECT(0xdadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9a83));
        EXPECT(0xda, gbc.readMem(0x9a84));
        // C8 03B0
        gbc.setState(0x5094, 0x5d48, 0x6d90, 0xd1fc, 0xbf4a, 0xc5a0, 0x1, 0x0);
        gbc.writeMem(0x5094, { 0xc8 });
        gbc.writeMem(0x5d48, { 0xec, 0x69 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5d4a, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03B1
        gbc.setState(0x52ce, 0x6953, 0x3220, 0x29d5, 0xcd26, 0xdbdd, 0x0, 0x0);
        gbc.writeMem(0x52ce, { 0xc8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6953, gbc.sp());
        EXPECT(0x52cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03B2
        gbc.setState(0xbe98, 0xff3b, 0x9dc0, 0x25b2, 0x9f30, 0x97bf, 0x1, 0x1);
        gbc.writeMem(0xbe98, { 0xc8 });
        gbc.writeMem(0xff3b, { 0xb2, 0xfd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0xfdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbe98));
        EXPECT(0xb2, gbc.readMem(0xff3b));
        EXPECT(0xfd, gbc.readMem(0xff3c));
        // C8 03B3
        gbc.setState(0x456, 0x7792, 0xe7f0, 0xbc78, 0xbdbb, 0xd9b0, 0x0, 0x1);
        gbc.writeMem(0x456, { 0xc8 });
        gbc.writeMem(0x7792, { 0x81, 0x41 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7794, gbc.sp());
        EXPECT(0x4181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03B4
        gbc.setState(0xec2f, 0x4173, 0x1530, 0x4f2f, 0xb000, 0x53c6, 0x1, 0x1);
        gbc.writeMem(0xec2f, { 0xc8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xec2f));
        // C8 03B5
        gbc.setState(0x9ba3, 0x11a2, 0x1850, 0xc1e6, 0xd71a, 0x624b, 0x1, 0x1);
        gbc.writeMem(0x9ba3, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0x9ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9ba3));
        // C8 03B6
        gbc.setState(0x3bda, 0xf5d0, 0x2d80, 0x83e4, 0xe7a7, 0x5ef1, 0x0, 0x0);
        gbc.writeMem(0x3bda, { 0xc8 });
        gbc.writeMem(0xf5d0, { 0xce, 0xe });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf5d2, gbc.sp());
        EXPECT(0xece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf5d0));
        EXPECT(0xe, gbc.readMem(0xf5d1));
        // C8 03B7
        gbc.setState(0x1064, 0x710e, 0x37b0, 0x6e43, 0x5519, 0xfd21, 0x1, 0x0);
        gbc.writeMem(0x1064, { 0xc8 });
        gbc.writeMem(0x710e, { 0xf6, 0xe8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0xe8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03B8
        gbc.setState(0x84d5, 0x3740, 0x7830, 0x1b9f, 0x5fd1, 0x2aba, 0x1, 0x0);
        gbc.writeMem(0x84d5, { 0xc8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0x84d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x84d5));
        // C8 03BB
        gbc.setState(0x7d24, 0x9a6b, 0xa260, 0x16c3, 0x6533, 0x3ec3, 0x0, 0x1);
        gbc.writeMem(0x7d24, { 0xc8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03BC
        gbc.setState(0x4fc8, 0x3f41, 0xc100, 0xd6ac, 0xd533, 0xd4b6, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0xc8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03BD
        gbc.setState(0x1eb2, 0x9eb0, 0xc1e0, 0x6729, 0xd94b, 0xbeb4, 0x1, 0x1);
        gbc.writeMem(0x1eb2, { 0xc8 });
        gbc.writeMem(0x9eb0, { 0xd3, 0xee });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x9eb0));
        EXPECT(0xee, gbc.readMem(0x9eb1));
        // C8 03BE
        gbc.setState(0xe8c9, 0xf74, 0xdec0, 0xb074, 0x10e4, 0xcff8, 0x0, 0x1);
        gbc.writeMem(0xf74, { 0xe3, 0x88 });
        gbc.writeMem(0xe8c9, { 0xc8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x88e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe8c9));
        // C8 03BF
        gbc.setState(0x52b9, 0xc7db, 0x6e80, 0xd05a, 0xb641, 0x3e2a, 0x0, 0x1);
        gbc.writeMem(0x52b9, { 0xc8 });
        gbc.writeMem(0xc7db, { 0x4, 0x1f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc7dd, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc7db));
        EXPECT(0x1f, gbc.readMem(0xc7dc));
        // C8 03C0
        gbc.setState(0x8db, 0xd1a3, 0xb080, 0x9617, 0xc98d, 0x48cd, 0x0, 0x1);
        gbc.writeMem(0x8db, { 0xc8 });
        gbc.writeMem(0xd1a3, { 0x78, 0x96 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd1a3));
        EXPECT(0x96, gbc.readMem(0xd1a4));
        // C8 03C1
        gbc.setState(0x17db, 0x872c, 0xa1e0, 0xbdda, 0xd6dd, 0x3ed5, 0x0, 0x0);
        gbc.writeMem(0x17db, { 0xc8 });
        gbc.writeMem(0x872c, { 0xec, 0x30 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x872e, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x872c));
        EXPECT(0x30, gbc.readMem(0x872d));
        // C8 03C2
        gbc.setState(0x851b, 0xee87, 0x1470, 0xb42, 0xebad, 0x3f64, 0x1, 0x0);
        gbc.writeMem(0x851b, { 0xc8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xee87, gbc.sp());
        EXPECT(0x851c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x851b));
        // C8 03C3
        gbc.setState(0xd1bd, 0xccfb, 0xecd0, 0x49b9, 0x1595, 0xd717, 0x0, 0x1);
        gbc.writeMem(0xccfb, { 0x31, 0xb0 });
        gbc.writeMem(0xd1bd, { 0xc8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0xb031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xccfb));
        EXPECT(0xb0, gbc.readMem(0xccfc));
        EXPECT(0xc8, gbc.readMem(0xd1bd));
        // C8 03C4
        gbc.setState(0xc92d, 0x202d, 0xb450, 0xf59a, 0x7477, 0xd481, 0x1, 0x1);
        gbc.writeMem(0xc92d, { 0xc8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0xc92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc92d));
        // C8 03C5
        gbc.setState(0xd3db, 0x5990, 0x80e0, 0x4d78, 0x9be2, 0x4ece, 0x0, 0x0);
        gbc.writeMem(0x5990, { 0x9f, 0x14 });
        gbc.writeMem(0xd3db, { 0xc8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0x149f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd3db));
        // C8 03C6
        gbc.setState(0x5471, 0xc909, 0x970, 0xf309, 0xbe5a, 0x8ea0, 0x0, 0x0);
        gbc.writeMem(0x5471, { 0xc8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03C7
        gbc.setState(0xc443, 0x1f98, 0xa580, 0x5d3c, 0xda18, 0x2b92, 0x1, 0x0);
        gbc.writeMem(0x1f98, { 0x60, 0x8f });
        gbc.writeMem(0xc443, { 0xc8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1f9a, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc443));
        // C8 03C8
        gbc.setState(0x6396, 0xf0de, 0x4b90, 0x5c03, 0xcdb1, 0x2f3b, 0x0, 0x0);
        gbc.writeMem(0x6396, { 0xc8 });
        gbc.writeMem(0xf0de, { 0x76, 0xf0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0xf076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xf0de));
        EXPECT(0xf0, gbc.readMem(0xf0df));
        // C8 03C9
        gbc.setState(0x530d, 0x7337, 0x1070, 0x5272, 0xd47f, 0x1be1, 0x0, 0x0);
        gbc.writeMem(0x530d, { 0xc8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7337, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03CA
        gbc.setState(0xd2ba, 0xf848, 0x770, 0xf0c5, 0x6e1d, 0xc51e, 0x0, 0x1);
        gbc.writeMem(0xd2ba, { 0xc8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0xd2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd2ba));
        // C8 03CC
        gbc.setState(0xd6cc, 0xd73, 0x6ee0, 0x586, 0x1a53, 0xbbcc, 0x1, 0x1);
        gbc.writeMem(0xd73, { 0xa8, 0xa7 });
        gbc.writeMem(0xd6cc, { 0xc8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd75, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd6cc));
        // C8 03CE
        gbc.setState(0x4ba0, 0x1d7f, 0x2b40, 0xa9e7, 0x3935, 0x5b39, 0x1, 0x0);
        gbc.writeMem(0x4ba0, { 0xc8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03CF
        gbc.setState(0x5e31, 0x9318, 0x5bd0, 0x5299, 0xed69, 0x971, 0x0, 0x1);
        gbc.writeMem(0x5e31, { 0xc8 });
        gbc.writeMem(0x9318, { 0x42, 0xc9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9318));
        EXPECT(0xc9, gbc.readMem(0x9319));
        // C8 03D0
        gbc.setState(0xc020, 0x7a00, 0xc70, 0x9631, 0x4510, 0xb5cb, 0x1, 0x1);
        gbc.writeMem(0xc020, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7a00, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc020));
        // C8 03D1
        gbc.setState(0x691f, 0xf245, 0x2760, 0xf8d7, 0xd54, 0xccf8, 0x0, 0x0);
        gbc.writeMem(0x691f, { 0xc8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0x6920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03D2
        gbc.setState(0xb4f3, 0xfaa9, 0x4300, 0xdb8a, 0x508f, 0x3294, 0x1, 0x0);
        gbc.writeMem(0xb4f3, { 0xc8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfaa9, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb4f3));
        // C8 03D3
        gbc.setState(0x2ee5, 0x7927, 0x1800, 0x8611, 0x161f, 0x620e, 0x1, 0x1);
        gbc.writeMem(0x2ee5, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7927, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03D4
        gbc.setState(0xb28e, 0xdea9, 0xc30, 0x5c80, 0x6cc6, 0x482a, 0x0, 0x0);
        gbc.writeMem(0xb28e, { 0xc8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdea9, gbc.sp());
        EXPECT(0xb28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb28e));
        // C8 03D5
        gbc.setState(0x8f49, 0xe828, 0x26b0, 0xa00f, 0xb6e8, 0x1570, 0x1, 0x1);
        gbc.writeMem(0x8f49, { 0xc8 });
        gbc.writeMem(0xe828, { 0x4c, 0xfe });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0xfe4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8f49));
        EXPECT(0x4c, gbc.readMem(0xe828));
        EXPECT(0xfe, gbc.readMem(0xe829));
        // C8 03D6
        gbc.setState(0x5e63, 0x3bd0, 0x49b0, 0x52aa, 0x2369, 0xfb35, 0x0, 0x0);
        gbc.writeMem(0x3bd0, { 0x50, 0xbf });
        gbc.writeMem(0x5e63, { 0xc8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3bd2, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03D7
        gbc.setState(0x5947, 0xa7fb, 0xbc80, 0xe2b3, 0x981d, 0x2f2a, 0x0, 0x1);
        gbc.writeMem(0x5947, { 0xc8 });
        gbc.writeMem(0xa7fb, { 0x35, 0xa6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0xa635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa7fb));
        EXPECT(0xa6, gbc.readMem(0xa7fc));
        // C8 03D8
        gbc.setState(0xbbcc, 0xc7f4, 0x3c00, 0xd7b1, 0x38d3, 0x638f, 0x1, 0x0);
        gbc.writeMem(0xbbcc, { 0xc8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0xbbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbbcc));
        // C8 03D9
        gbc.setState(0x92f1, 0xe9d5, 0xa2c0, 0x93b2, 0x7442, 0xcbf1, 0x1, 0x1);
        gbc.writeMem(0x92f1, { 0xc8 });
        gbc.writeMem(0xe9d5, { 0x66, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x92f1));
        EXPECT(0x66, gbc.readMem(0xe9d5));
        EXPECT(0x72, gbc.readMem(0xe9d6));
        // C8 03DA
        gbc.setState(0x80a2, 0x8334, 0xeed0, 0xd08e, 0xb17, 0xc86c, 0x0, 0x0);
        gbc.writeMem(0x80a2, { 0xc8 });
        gbc.writeMem(0x8334, { 0xe3, 0x42 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x42e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x80a2));
        EXPECT(0xe3, gbc.readMem(0x8334));
        EXPECT(0x42, gbc.readMem(0x8335));
        // C8 03DB
        gbc.setState(0xa7f2, 0xf251, 0x4a40, 0x7df, 0x7e02, 0x8f81, 0x1, 0x0);
        gbc.writeMem(0xa7f2, { 0xc8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf251, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa7f2));
        // C8 03DC
        gbc.setState(0x94ef, 0xc4e9, 0xc4d0, 0x6def, 0x8bc8, 0xa4b3, 0x1, 0x1);
        gbc.writeMem(0x94ef, { 0xc8 });
        gbc.writeMem(0xc4e9, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0xb116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x94ef));
        EXPECT(0x16, gbc.readMem(0xc4e9));
        EXPECT(0xb1, gbc.readMem(0xc4ea));
        // C8 03DD
        gbc.setState(0xada8, 0x221d, 0x7dc0, 0x793c, 0x315f, 0xf0b3, 0x1, 0x1);
        gbc.writeMem(0x221d, { 0x52, 0xf7 });
        gbc.writeMem(0xada8, { 0xc8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0xf752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xada8));
        // C8 03DE
        gbc.setState(0x2a69, 0xa7a4, 0x7350, 0xa2dd, 0x8d8d, 0x96d8, 0x1, 0x1);
        gbc.writeMem(0x2a69, { 0xc8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03DF
        gbc.setState(0xc506, 0x6669, 0x45d0, 0x6eb9, 0x7a89, 0xbb4f, 0x0, 0x1);
        gbc.writeMem(0x6669, { 0x38, 0xdd });
        gbc.writeMem(0xc506, { 0xc8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x666b, gbc.sp());
        EXPECT(0xdd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xc506));
        // C8 03E0
        gbc.setState(0x6cb0, 0x1839, 0xb690, 0xb06e, 0xa2d0, 0x61e1, 0x1, 0x0);
        gbc.writeMem(0x1839, { 0x7e, 0x5a });
        gbc.writeMem(0x6cb0, { 0xc8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x183b, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03E1
        gbc.setState(0x44d8, 0xb65d, 0x10b0, 0xe142, 0xb3e8, 0x56d4, 0x0, 0x0);
        gbc.writeMem(0x44d8, { 0xc8 });
        gbc.writeMem(0xb65d, { 0x4b, 0x8f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb65f, gbc.sp());
        EXPECT(0x8f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb65d));
        EXPECT(0x8f, gbc.readMem(0xb65e));
        // C8 03E2
        gbc.setState(0xa8b7, 0x37a5, 0x8e10, 0x9ebd, 0x52d3, 0x3927, 0x1, 0x0);
        gbc.writeMem(0xa8b7, { 0xc8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0xa8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa8b7));
        // C8 03E3
        gbc.setState(0xaa9c, 0xd65, 0x9ae0, 0xee9c, 0x2c5d, 0xbebb, 0x1, 0x0);
        gbc.writeMem(0xd65, { 0x4b, 0x57 });
        gbc.writeMem(0xaa9c, { 0xc8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x574b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaa9c));
        // C8 03E4
        gbc.setState(0x4199, 0x8f16, 0xd30, 0x916a, 0xc5bf, 0x1b19, 0x1, 0x1);
        gbc.writeMem(0x4199, { 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8f16, gbc.sp());
        EXPECT(0x419a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C8 03E5
        gbc.setState(0x6063, 0x756e, 0xf40, 0xbfd4, 0xf4bc, 0xb561, 0x1, 0x1);
        gbc.writeMem(0x6063, { 0xc8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0x6064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C8 03E6
        gbc.setState(0xbf22, 0xb0dd, 0x5380, 0x4a98, 0x3c30, 0x9d23, 0x0, 0x0);
        gbc.writeMem(0xb0dd, { 0xad, 0xf0 });
        gbc.writeMem(0xbf22, { 0xc8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb0df, gbc.sp());
        EXPECT(0xf0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb0dd));
        EXPECT(0xf0, gbc.readMem(0xb0de));
        EXPECT(0xc8, gbc.readMem(0xbf22));
        // C8 03E7
        gbc.setState(0x6180, 0x3689, 0x52c0, 0x960a, 0xb0db, 0x4426, 0x1, 0x1);
        gbc.writeMem(0x3689, { 0x80, 0xf6 });
        gbc.writeMem(0x6180, { 0xc8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0xf680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
