    TEST(gbcemu, opcode_cb_29) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 29 0000
        gbc.setState(0xae7b, 0x15bd, 0x6d40, 0xef4d, 0xefbf, 0xd7b, 0x1, 0x0);
        gbc.writeMem(0xae7b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0xae7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7b), 0xcb);
        EXPECT(gbc.readMem(0xae7c), 0x29);
        // CB 29 0001
        gbc.setState(0x1374, 0x56d9, 0x2cc0, 0x8718, 0x3068, 0x3a4e, 0x1, 0x0);
        gbc.writeMem(0x1374, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x56d9);
        EXPECT(gbc.pc(), 0x1376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0002
        gbc.setState(0xa5a8, 0xc82d, 0xe8f0, 0x8dd0, 0xc596, 0x4347, 0x0, 0x1);
        gbc.writeMem(0xa5a8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc82d);
        EXPECT(gbc.pc(), 0xa5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a8), 0xcb);
        EXPECT(gbc.readMem(0xa5a9), 0x29);
        // CB 29 0003
        gbc.setState(0xad7b, 0xffe0, 0x81b0, 0x8e07, 0x8086, 0x5788, 0x1, 0x1);
        gbc.writeMem(0xad7b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xffe0);
        EXPECT(gbc.pc(), 0xad7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7b), 0xcb);
        EXPECT(gbc.readMem(0xad7c), 0x29);
        // CB 29 0004
        gbc.setState(0xefc9, 0x94b8, 0x4e80, 0xa5bb, 0x27b3, 0x69fd, 0x0, 0x0);
        gbc.writeMem(0xefc9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x94b8);
        EXPECT(gbc.pc(), 0xefcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc9), 0xcb);
        EXPECT(gbc.readMem(0xefca), 0x29);
        // CB 29 0006
        gbc.setState(0x2443, 0x3e82, 0xeff0, 0x556a, 0x1872, 0x2290, 0x0, 0x1);
        gbc.writeMem(0x2443, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3e82);
        EXPECT(gbc.pc(), 0x2445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0008
        gbc.setState(0x3c67, 0x5992, 0xff90, 0xd67f, 0x7320, 0x892e, 0x1, 0x1);
        gbc.writeMem(0x3c67, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5992);
        EXPECT(gbc.pc(), 0x3c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0009
        gbc.setState(0xce9f, 0xfb9a, 0xadf0, 0xdc43, 0x77a1, 0xb3ae, 0x1, 0x0);
        gbc.writeMem(0xce9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfb9a);
        EXPECT(gbc.pc(), 0xcea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9f), 0xcb);
        EXPECT(gbc.readMem(0xcea0), 0x29);
        // CB 29 000A
        gbc.setState(0x856e, 0x2de, 0x33a0, 0x8f8, 0x131a, 0xcc6e, 0x0, 0x0);
        gbc.writeMem(0x856e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2de);
        EXPECT(gbc.pc(), 0x8570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856e), 0xcb);
        EXPECT(gbc.readMem(0x856f), 0x29);
        // CB 29 000C
        gbc.setState(0xe48c, 0x81b, 0xe8d0, 0x2e7f, 0x6683, 0xa4f5, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x81b);
        EXPECT(gbc.pc(), 0xe48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48c), 0xcb);
        EXPECT(gbc.readMem(0xe48d), 0x29);
        // CB 29 000D
        gbc.setState(0x1ac6, 0x2ac0, 0xb8f0, 0xb005, 0x5d7a, 0x52f2, 0x0, 0x0);
        gbc.writeMem(0x1ac6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2ac0);
        EXPECT(gbc.pc(), 0x1ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 000E
        gbc.setState(0xb3e9, 0x4982, 0x33c0, 0x1d3b, 0x4d17, 0xcebb, 0x1, 0x0);
        gbc.writeMem(0xb3e9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4982);
        EXPECT(gbc.pc(), 0xb3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e9), 0xcb);
        EXPECT(gbc.readMem(0xb3ea), 0x29);
        // CB 29 000F
        gbc.setState(0x2a70, 0x2e78, 0x6e70, 0x6f7d, 0x4ec3, 0x731b, 0x1, 0x0);
        gbc.writeMem(0x2a70, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2e78);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0010
        gbc.setState(0x76c, 0x1e96, 0x6330, 0x4bdf, 0xbd49, 0xe92b, 0x0, 0x0);
        gbc.writeMem(0x76c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1e96);
        EXPECT(gbc.pc(), 0x76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0011
        gbc.setState(0xd0d1, 0xe356, 0xc2e0, 0xc54c, 0xf874, 0xefc7, 0x0, 0x1);
        gbc.writeMem(0xd0d1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe356);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0x29);
        // CB 29 0012
        gbc.setState(0xafe3, 0xc008, 0xb080, 0x9e2d, 0xa004, 0xeddd, 0x0, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc008);
        EXPECT(gbc.pc(), 0xafe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe3), 0xcb);
        EXPECT(gbc.readMem(0xafe4), 0x29);
        // CB 29 0013
        gbc.setState(0x9b8f, 0x27ed, 0x4bc0, 0x4a68, 0x2ce9, 0xbf95, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x27ed);
        EXPECT(gbc.pc(), 0x9b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8f), 0xcb);
        EXPECT(gbc.readMem(0x9b90), 0x29);
        // CB 29 0014
        gbc.setState(0x2923, 0xafa4, 0x4c00, 0xb7ad, 0x3d68, 0xfdf6, 0x1, 0x1);
        gbc.writeMem(0x2923, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xafa4);
        EXPECT(gbc.pc(), 0x2925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0015
        gbc.setState(0xbf22, 0xf3a9, 0xe530, 0xc286, 0xb0cb, 0x9d7e, 0x1, 0x0);
        gbc.writeMem(0xbf22, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf3a9);
        EXPECT(gbc.pc(), 0xbf24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf22), 0xcb);
        EXPECT(gbc.readMem(0xbf23), 0x29);
        // CB 29 0016
        gbc.setState(0xebc6, 0x2c41, 0x4560, 0x4436, 0xd1a2, 0x5c6e, 0x1, 0x0);
        gbc.writeMem(0xebc6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2c41);
        EXPECT(gbc.pc(), 0xebc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc6), 0xcb);
        EXPECT(gbc.readMem(0xebc7), 0x29);
        // CB 29 0017
        gbc.setState(0x822, 0x1b95, 0xf960, 0xef6f, 0x6199, 0x2f81, 0x1, 0x0);
        gbc.writeMem(0x822, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1b95);
        EXPECT(gbc.pc(), 0x824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0018
        gbc.setState(0xc079, 0x6885, 0x9730, 0xd096, 0xa48f, 0xedc8, 0x1, 0x1);
        gbc.writeMem(0xc079, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6885);
        EXPECT(gbc.pc(), 0xc07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc079), 0xcb);
        EXPECT(gbc.readMem(0xc07a), 0x29);
        // CB 29 0019
        gbc.setState(0xa05, 0x2266, 0xe0d0, 0xb4a1, 0x360d, 0x346d, 0x0, 0x1);
        gbc.writeMem(0xa05, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2266);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 001A
        gbc.setState(0x4d06, 0xe465, 0x9fc0, 0xdc5d, 0xb636, 0x41a0, 0x1, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe465);
        EXPECT(gbc.pc(), 0x4d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 001B
        gbc.setState(0x1e27, 0xe87, 0xb010, 0xb381, 0xc5a6, 0xd73, 0x0, 0x1);
        gbc.writeMem(0x1e27, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe87);
        EXPECT(gbc.pc(), 0x1e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 001C
        gbc.setState(0xb3b5, 0xba0d, 0xaad0, 0xb21c, 0x73e1, 0xd1fa, 0x0, 0x0);
        gbc.writeMem(0xb3b5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0xb3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b5), 0xcb);
        EXPECT(gbc.readMem(0xb3b6), 0x29);
        // CB 29 001D
        gbc.setState(0x8ca4, 0x858d, 0xba90, 0xbcf3, 0xd4e7, 0x2070, 0x0, 0x0);
        gbc.writeMem(0x8ca4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x858d);
        EXPECT(gbc.pc(), 0x8ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca4), 0xcb);
        EXPECT(gbc.readMem(0x8ca5), 0x29);
        // CB 29 001E
        gbc.setState(0x8ca, 0xc992, 0xd260, 0xd60d, 0xb612, 0xbb73, 0x1, 0x1);
        gbc.writeMem(0x8ca, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc992);
        EXPECT(gbc.pc(), 0x8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 001F
        gbc.setState(0x5ac, 0x7b1f, 0x8490, 0x11a8, 0xafd9, 0x5ac, 0x1, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7b1f);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0020
        gbc.setState(0x51a, 0x827, 0x6fd0, 0xb2aa, 0x397, 0x7dda, 0x0, 0x0);
        gbc.writeMem(0x51a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x827);
        EXPECT(gbc.pc(), 0x51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0021
        gbc.setState(0x4b75, 0x8220, 0xca50, 0xf53b, 0x1f9f, 0x4e60, 0x1, 0x1);
        gbc.writeMem(0x4b75, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8220);
        EXPECT(gbc.pc(), 0x4b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0022
        gbc.setState(0xdb39, 0x8c24, 0xf3e0, 0x4130, 0xab3d, 0x29cc, 0x0, 0x1);
        gbc.writeMem(0xdb39, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8c24);
        EXPECT(gbc.pc(), 0xdb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb39), 0xcb);
        EXPECT(gbc.readMem(0xdb3a), 0x29);
        // CB 29 0023
        gbc.setState(0xdc6e, 0x86df, 0x76b0, 0xfe76, 0x7cc8, 0xd661, 0x1, 0x0);
        gbc.writeMem(0xdc6e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x86df);
        EXPECT(gbc.pc(), 0xdc70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6e), 0xcb);
        EXPECT(gbc.readMem(0xdc6f), 0x29);
        // CB 29 0024
        gbc.setState(0xd3d5, 0x27e3, 0xfa40, 0xbde5, 0xfc1c, 0x4e84, 0x0, 0x0);
        gbc.writeMem(0xd3d5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x27e3);
        EXPECT(gbc.pc(), 0xd3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d5), 0xcb);
        EXPECT(gbc.readMem(0xd3d6), 0x29);
        // CB 29 0026
        gbc.setState(0x5af7, 0x2c66, 0x9140, 0xbbde, 0xcf5c, 0xbe32, 0x1, 0x0);
        gbc.writeMem(0x5af7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2c66);
        EXPECT(gbc.pc(), 0x5af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0027
        gbc.setState(0xa336, 0xa19b, 0x1570, 0x7265, 0x412f, 0xb938, 0x0, 0x1);
        gbc.writeMem(0xa336, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa19b);
        EXPECT(gbc.pc(), 0xa338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa336), 0xcb);
        EXPECT(gbc.readMem(0xa337), 0x29);
        // CB 29 0028
        gbc.setState(0x9d94, 0x6b05, 0xe060, 0xfecf, 0xcf34, 0x887b, 0x1, 0x0);
        gbc.writeMem(0x9d94, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6b05);
        EXPECT(gbc.pc(), 0x9d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d94), 0xcb);
        EXPECT(gbc.readMem(0x9d95), 0x29);
        // CB 29 002A
        gbc.setState(0xe27f, 0xf6c5, 0x6f00, 0x6b2c, 0x7cfc, 0x3d56, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf6c5);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27f), 0xcb);
        EXPECT(gbc.readMem(0xe280), 0x29);
        // CB 29 002B
        gbc.setState(0x9995, 0x4c13, 0xb910, 0xb77e, 0xea09, 0xc4e, 0x1, 0x1);
        gbc.writeMem(0x9995, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4c13);
        EXPECT(gbc.pc(), 0x9997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9995), 0xcb);
        EXPECT(gbc.readMem(0x9996), 0x29);
        // CB 29 002C
        gbc.setState(0xd67, 0xc4a3, 0x8a70, 0x5501, 0xcf37, 0xfcc8, 0x0, 0x1);
        gbc.writeMem(0xd67, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc4a3);
        EXPECT(gbc.pc(), 0xd69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 002D
        gbc.setState(0x95d1, 0xe937, 0x6d40, 0x2c0d, 0x1a22, 0x4b92, 0x0, 0x1);
        gbc.writeMem(0x95d1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe937);
        EXPECT(gbc.pc(), 0x95d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d1), 0xcb);
        EXPECT(gbc.readMem(0x95d2), 0x29);
        // CB 29 002E
        gbc.setState(0x3258, 0x6d7a, 0xa3a0, 0x6c34, 0xe379, 0xa23c, 0x0, 0x1);
        gbc.writeMem(0x3258, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6d7a);
        EXPECT(gbc.pc(), 0x325a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 002F
        gbc.setState(0x1de9, 0xb9b3, 0x5c00, 0x8279, 0xad7b, 0x408f, 0x0, 0x1);
        gbc.writeMem(0x1de9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb9b3);
        EXPECT(gbc.pc(), 0x1deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0030
        gbc.setState(0x3c7e, 0x1f73, 0x5c80, 0x8fc1, 0x16be, 0x8687, 0x1, 0x0);
        gbc.writeMem(0x3c7e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1f73);
        EXPECT(gbc.pc(), 0x3c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0031
        gbc.setState(0x1013, 0xaf4d, 0xae20, 0xa531, 0x759, 0x627b, 0x1, 0x0);
        gbc.writeMem(0x1013, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaf4d);
        EXPECT(gbc.pc(), 0x1015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0032
        gbc.setState(0xbb4a, 0xbb07, 0xbc20, 0xc555, 0x18cb, 0xc14e, 0x1, 0x0);
        gbc.writeMem(0xbb4a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbb07);
        EXPECT(gbc.pc(), 0xbb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4a), 0xcb);
        EXPECT(gbc.readMem(0xbb4b), 0x29);
        // CB 29 0033
        gbc.setState(0x9819, 0x2765, 0x67e0, 0x1cde, 0x75f8, 0x967d, 0x0, 0x0);
        gbc.writeMem(0x9819, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2765);
        EXPECT(gbc.pc(), 0x981b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9819), 0xcb);
        EXPECT(gbc.readMem(0x981a), 0x29);
        // CB 29 0034
        gbc.setState(0xd7a2, 0x47f0, 0x42a0, 0x27b6, 0x3400, 0x64e0, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x47f0);
        EXPECT(gbc.pc(), 0xd7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a2), 0xcb);
        EXPECT(gbc.readMem(0xd7a3), 0x29);
        // CB 29 0035
        gbc.setState(0xb4fb, 0xd21e, 0x6000, 0x7bad, 0x7af3, 0x1bc7, 0x0, 0x0);
        gbc.writeMem(0xb4fb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd21e);
        EXPECT(gbc.pc(), 0xb4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fb), 0xcb);
        EXPECT(gbc.readMem(0xb4fc), 0x29);
        // CB 29 0036
        gbc.setState(0x10fa, 0xef76, 0xd070, 0xe887, 0xa124, 0x94ab, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xef76);
        EXPECT(gbc.pc(), 0x10fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0037
        gbc.setState(0xbf3b, 0x8545, 0xe5c0, 0xfc97, 0x34ca, 0xe8f8, 0x1, 0x1);
        gbc.writeMem(0xbf3b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8545);
        EXPECT(gbc.pc(), 0xbf3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3b), 0xcb);
        EXPECT(gbc.readMem(0xbf3c), 0x29);
        // CB 29 0038
        gbc.setState(0x366e, 0x11e, 0xfe60, 0xbebf, 0x53b0, 0x2eab, 0x0, 0x1);
        gbc.writeMem(0x366e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x11e);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0039
        gbc.setState(0xc76c, 0xad3f, 0x88a0, 0xb9ef, 0xb433, 0xf169, 0x1, 0x0);
        gbc.writeMem(0xc76c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xad3f);
        EXPECT(gbc.pc(), 0xc76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76c), 0xcb);
        EXPECT(gbc.readMem(0xc76d), 0x29);
        // CB 29 003A
        gbc.setState(0x9d92, 0x5a8b, 0x8970, 0x85ff, 0x2d6d, 0x1e98, 0x1, 0x1);
        gbc.writeMem(0x9d92, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5a8b);
        EXPECT(gbc.pc(), 0x9d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d92), 0xcb);
        EXPECT(gbc.readMem(0x9d93), 0x29);
        // CB 29 003B
        gbc.setState(0x195a, 0xd4b, 0x3930, 0x3a76, 0xc74c, 0x5728, 0x0, 0x0);
        gbc.writeMem(0x195a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd4b);
        EXPECT(gbc.pc(), 0x195c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 003D
        gbc.setState(0x82f8, 0xd1a1, 0x9350, 0xe425, 0xac61, 0xe605, 0x1, 0x1);
        gbc.writeMem(0x82f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd1a1);
        EXPECT(gbc.pc(), 0x82fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82f8), 0xcb);
        EXPECT(gbc.readMem(0x82f9), 0x29);
        // CB 29 003E
        gbc.setState(0x6b4c, 0x4726, 0x1c90, 0xed3c, 0x992c, 0x2712, 0x1, 0x1);
        gbc.writeMem(0x6b4c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4726);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 003F
        gbc.setState(0x2462, 0x2fa, 0x5010, 0x9805, 0x162, 0xce96, 0x1, 0x0);
        gbc.writeMem(0x2462, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2fa);
        EXPECT(gbc.pc(), 0x2464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0040
        gbc.setState(0xda68, 0x2fe, 0xf730, 0x9890, 0x7d0c, 0x8ef2, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2fe);
        EXPECT(gbc.pc(), 0xda6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda68), 0xcb);
        EXPECT(gbc.readMem(0xda69), 0x29);
        // CB 29 0041
        gbc.setState(0x359f, 0x90eb, 0xc2a0, 0x4e7c, 0x8cdf, 0x4594, 0x1, 0x1);
        gbc.writeMem(0x359f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0x35a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0042
        gbc.setState(0x263e, 0x9067, 0x4ef0, 0x9ef, 0xbfcb, 0x40ea, 0x1, 0x0);
        gbc.writeMem(0x263e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9067);
        EXPECT(gbc.pc(), 0x2640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0043
        gbc.setState(0xd5cc, 0xbe44, 0xc060, 0xb395, 0x1652, 0x9372, 0x1, 0x0);
        gbc.writeMem(0xd5cc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbe44);
        EXPECT(gbc.pc(), 0xd5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5cc), 0xcb);
        EXPECT(gbc.readMem(0xd5cd), 0x29);
        // CB 29 0044
        gbc.setState(0x8a07, 0xa6d, 0x8700, 0xdf15, 0xea5f, 0x7eca, 0x0, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa6d);
        EXPECT(gbc.pc(), 0x8a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a07), 0xcb);
        EXPECT(gbc.readMem(0x8a08), 0x29);
        // CB 29 0045
        gbc.setState(0x7148, 0x421, 0xa620, 0x36ef, 0x7a17, 0xa67e, 0x1, 0x0);
        gbc.writeMem(0x7148, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x421);
        EXPECT(gbc.pc(), 0x714a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0046
        gbc.setState(0xb473, 0x4271, 0xf550, 0x6582, 0x7be3, 0x20a8, 0x1, 0x1);
        gbc.writeMem(0xb473, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4271);
        EXPECT(gbc.pc(), 0xb475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb473), 0xcb);
        EXPECT(gbc.readMem(0xb474), 0x29);
        // CB 29 0047
        gbc.setState(0x499, 0xbf7c, 0x7ac0, 0xe4a3, 0xb7b8, 0xf218, 0x0, 0x1);
        gbc.writeMem(0x499, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbf7c);
        EXPECT(gbc.pc(), 0x49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0048
        gbc.setState(0x8942, 0x6f74, 0x8790, 0xd682, 0xf91b, 0x422f, 0x0, 0x1);
        gbc.writeMem(0x8942, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6f74);
        EXPECT(gbc.pc(), 0x8944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8942), 0xcb);
        EXPECT(gbc.readMem(0x8943), 0x29);
        // CB 29 0049
        gbc.setState(0xbb09, 0xa31d, 0xbbe0, 0xdeb7, 0xbc60, 0x354d, 0x0, 0x0);
        gbc.writeMem(0xbb09, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa31d);
        EXPECT(gbc.pc(), 0xbb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb09), 0xcb);
        EXPECT(gbc.readMem(0xbb0a), 0x29);
        // CB 29 004A
        gbc.setState(0xe5d3, 0x3f2d, 0x17b0, 0xe38e, 0x1690, 0x72f6, 0x0, 0x0);
        gbc.writeMem(0xe5d3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3f2d);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0x29);
        // CB 29 004B
        gbc.setState(0xd540, 0xaae0, 0xeec0, 0xe517, 0x8bd0, 0xe3b4, 0x0, 0x1);
        gbc.writeMem(0xd540, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaae0);
        EXPECT(gbc.pc(), 0xd542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd540), 0xcb);
        EXPECT(gbc.readMem(0xd541), 0x29);
        // CB 29 004C
        gbc.setState(0xebd9, 0x7d1f, 0x9f50, 0x95ce, 0x8ee, 0x62e8, 0x0, 0x0);
        gbc.writeMem(0xebd9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0xebdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd9), 0xcb);
        EXPECT(gbc.readMem(0xebda), 0x29);
        // CB 29 004D
        gbc.setState(0x7f3d, 0x5056, 0xf6e0, 0x158c, 0x50ba, 0x4389, 0x1, 0x0);
        gbc.writeMem(0x7f3d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5056);
        EXPECT(gbc.pc(), 0x7f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 004E
        gbc.setState(0x14f5, 0x4d3b, 0x63b0, 0x4a31, 0x8acd, 0xf83b, 0x0, 0x1);
        gbc.writeMem(0x14f5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4d3b);
        EXPECT(gbc.pc(), 0x14f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 004F
        gbc.setState(0x235c, 0x5450, 0xe600, 0x43e2, 0xa89c, 0xbc09, 0x1, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5450);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0050
        gbc.setState(0x2751, 0xf69, 0x93f0, 0xcacc, 0x169b, 0x88d4, 0x0, 0x1);
        gbc.writeMem(0x2751, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf69);
        EXPECT(gbc.pc(), 0x2753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0051
        gbc.setState(0xe799, 0x3bb, 0x2450, 0x4583, 0x45a, 0xa177, 0x0, 0x1);
        gbc.writeMem(0xe799, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3bb);
        EXPECT(gbc.pc(), 0xe79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe799), 0xcb);
        EXPECT(gbc.readMem(0xe79a), 0x29);
        // CB 29 0052
        gbc.setState(0x1b7f, 0xaecc, 0x9840, 0x2620, 0x48b3, 0xb13c, 0x0, 0x0);
        gbc.writeMem(0x1b7f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0x1b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0053
        gbc.setState(0x337d, 0x2913, 0x3c70, 0x116, 0xdba6, 0x8896, 0x0, 0x1);
        gbc.writeMem(0x337d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2913);
        EXPECT(gbc.pc(), 0x337f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0054
        gbc.setState(0x1831, 0xa4d3, 0x59e0, 0x2282, 0xe446, 0x821b, 0x1, 0x1);
        gbc.writeMem(0x1831, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa4d3);
        EXPECT(gbc.pc(), 0x1833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0055
        gbc.setState(0x29bd, 0xdc17, 0x9350, 0x14dd, 0x5c2b, 0xeb01, 0x1, 0x1);
        gbc.writeMem(0x29bd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdc17);
        EXPECT(gbc.pc(), 0x29bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0056
        gbc.setState(0x6fc7, 0x9473, 0xb980, 0xbe90, 0xba95, 0x34bb, 0x0, 0x0);
        gbc.writeMem(0x6fc7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9473);
        EXPECT(gbc.pc(), 0x6fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0057
        gbc.setState(0x3e6c, 0x9191, 0x10, 0x10cc, 0x4853, 0xd9ed, 0x1, 0x1);
        gbc.writeMem(0x3e6c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9191);
        EXPECT(gbc.pc(), 0x3e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0058
        gbc.setState(0xe0da, 0xacda, 0x36d0, 0xcb32, 0x2832, 0x101, 0x1, 0x0);
        gbc.writeMem(0xe0da, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0xe0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0da), 0xcb);
        EXPECT(gbc.readMem(0xe0db), 0x29);
        // CB 29 0059
        gbc.setState(0x8930, 0xb270, 0xd290, 0x3577, 0xb631, 0x4319, 0x0, 0x1);
        gbc.writeMem(0x8930, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb270);
        EXPECT(gbc.pc(), 0x8932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8930), 0xcb);
        EXPECT(gbc.readMem(0x8931), 0x29);
        // CB 29 005A
        gbc.setState(0xd535, 0x71ef, 0x9900, 0xd373, 0x8e58, 0x578f, 0x0, 0x0);
        gbc.writeMem(0xd535, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x71ef);
        EXPECT(gbc.pc(), 0xd537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd535), 0xcb);
        EXPECT(gbc.readMem(0xd536), 0x29);
        // CB 29 005B
        gbc.setState(0x6bb7, 0xf23f, 0x4bc0, 0xc4e0, 0x4bfe, 0x587f, 0x1, 0x0);
        gbc.writeMem(0x6bb7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf23f);
        EXPECT(gbc.pc(), 0x6bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 005C
        gbc.setState(0x1431, 0x63f8, 0xf850, 0xf4bb, 0x1355, 0x2860, 0x1, 0x1);
        gbc.writeMem(0x1431, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0x1433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 005D
        gbc.setState(0x94e2, 0x42f7, 0xd070, 0x3813, 0x108b, 0x3ff4, 0x1, 0x1);
        gbc.writeMem(0x94e2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x42f7);
        EXPECT(gbc.pc(), 0x94e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e2), 0xcb);
        EXPECT(gbc.readMem(0x94e3), 0x29);
        // CB 29 005E
        gbc.setState(0xb4a8, 0xcec4, 0xff0, 0x9260, 0x6077, 0xc14d, 0x1, 0x1);
        gbc.writeMem(0xb4a8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcec4);
        EXPECT(gbc.pc(), 0xb4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a8), 0xcb);
        EXPECT(gbc.readMem(0xb4a9), 0x29);
        // CB 29 005F
        gbc.setState(0xe303, 0x20b8, 0x6b60, 0xa8e2, 0x7187, 0x4fc6, 0x1, 0x0);
        gbc.writeMem(0xe303, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x20b8);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe303), 0xcb);
        EXPECT(gbc.readMem(0xe304), 0x29);
        // CB 29 0060
        gbc.setState(0x82ae, 0x5eea, 0x8b70, 0xc9b7, 0xb2f9, 0x2430, 0x1, 0x0);
        gbc.writeMem(0x82ae, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5eea);
        EXPECT(gbc.pc(), 0x82b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ae), 0xcb);
        EXPECT(gbc.readMem(0x82af), 0x29);
        // CB 29 0061
        gbc.setState(0x12a3, 0x8dca, 0x59f0, 0xa5c8, 0xafc5, 0x4ef0, 0x0, 0x0);
        gbc.writeMem(0x12a3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0x12a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0063
        gbc.setState(0x565d, 0x8f84, 0xad60, 0x3501, 0xdf14, 0x5149, 0x1, 0x1);
        gbc.writeMem(0x565d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8f84);
        EXPECT(gbc.pc(), 0x565f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0064
        gbc.setState(0x5b80, 0x27b9, 0x7570, 0xd9c8, 0x2737, 0x500e, 0x1, 0x0);
        gbc.writeMem(0x5b80, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x27b9);
        EXPECT(gbc.pc(), 0x5b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0065
        gbc.setState(0xb5be, 0xb96, 0xb6b0, 0xce86, 0x1450, 0x658b, 0x0, 0x1);
        gbc.writeMem(0xb5be, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb96);
        EXPECT(gbc.pc(), 0xb5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5be), 0xcb);
        EXPECT(gbc.readMem(0xb5bf), 0x29);
        // CB 29 0066
        gbc.setState(0xabda, 0xffa3, 0x7a40, 0xfac7, 0x764b, 0xf475, 0x0, 0x1);
        gbc.writeMem(0xabda, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xffa3);
        EXPECT(gbc.pc(), 0xabdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabda), 0xcb);
        EXPECT(gbc.readMem(0xabdb), 0x29);
        // CB 29 0067
        gbc.setState(0x9112, 0x3e69, 0x770, 0x73ac, 0x1a2e, 0x8783, 0x0, 0x0);
        gbc.writeMem(0x9112, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3e69);
        EXPECT(gbc.pc(), 0x9114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9112), 0xcb);
        EXPECT(gbc.readMem(0x9113), 0x29);
        // CB 29 0068
        gbc.setState(0x636b, 0x4c80, 0x1a60, 0x1c24, 0xc9c7, 0xdd45, 0x0, 0x0);
        gbc.writeMem(0x636b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4c80);
        EXPECT(gbc.pc(), 0x636d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0069
        gbc.setState(0x605c, 0x40c9, 0xc8f0, 0x2a5a, 0xd2ad, 0x5196, 0x1, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x40c9);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 006A
        gbc.setState(0xa7a9, 0x9de1, 0x1b30, 0xef97, 0x6e1c, 0xae04, 0x1, 0x1);
        gbc.writeMem(0xa7a9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9de1);
        EXPECT(gbc.pc(), 0xa7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a9), 0xcb);
        EXPECT(gbc.readMem(0xa7aa), 0x29);
        // CB 29 006B
        gbc.setState(0xeee8, 0x7016, 0x9740, 0x6fed, 0xa5fa, 0x29c2, 0x0, 0x1);
        gbc.writeMem(0xeee8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7016);
        EXPECT(gbc.pc(), 0xeeea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee8), 0xcb);
        EXPECT(gbc.readMem(0xeee9), 0x29);
        // CB 29 006C
        gbc.setState(0xe41e, 0xf99c, 0xae10, 0x6acb, 0x677, 0x31a5, 0x1, 0x0);
        gbc.writeMem(0xe41e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf99c);
        EXPECT(gbc.pc(), 0xe420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41e), 0xcb);
        EXPECT(gbc.readMem(0xe41f), 0x29);
        // CB 29 006D
        gbc.setState(0x95d, 0x93ec, 0x4d60, 0xa007, 0xd45d, 0x393b, 0x1, 0x0);
        gbc.writeMem(0x95d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x93ec);
        EXPECT(gbc.pc(), 0x95f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 006E
        gbc.setState(0x1445, 0x93ed, 0xfea0, 0xb1ba, 0x8c70, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0x1445, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x93ed);
        EXPECT(gbc.pc(), 0x1447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 006F
        gbc.setState(0x2c04, 0xef27, 0x1120, 0x50a8, 0x3fbd, 0x6b46, 0x1, 0x1);
        gbc.writeMem(0x2c04, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xef27);
        EXPECT(gbc.pc(), 0x2c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0070
        gbc.setState(0xc311, 0x17ab, 0xdc0, 0x9920, 0xcb87, 0x7e68, 0x1, 0x1);
        gbc.writeMem(0xc311, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x17ab);
        EXPECT(gbc.pc(), 0xc313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc311), 0xcb);
        EXPECT(gbc.readMem(0xc312), 0x29);
        // CB 29 0071
        gbc.setState(0x67fa, 0xe887, 0x6210, 0xfe57, 0xe440, 0x43ef, 0x1, 0x1);
        gbc.writeMem(0x67fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe887);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0072
        gbc.setState(0x4625, 0xbd64, 0x5a30, 0x4eac, 0xc731, 0x9630, 0x1, 0x0);
        gbc.writeMem(0x4625, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0x4627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0073
        gbc.setState(0x8ad6, 0x7c01, 0x9540, 0xf09, 0x494e, 0x8798, 0x1, 0x0);
        gbc.writeMem(0x8ad6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7c01);
        EXPECT(gbc.pc(), 0x8ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad6), 0xcb);
        EXPECT(gbc.readMem(0x8ad7), 0x29);
        // CB 29 0074
        gbc.setState(0x946, 0x1299, 0x2cc0, 0x1e32, 0xae85, 0xf39d, 0x0, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1299);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0075
        gbc.setState(0xbd7d, 0xdb86, 0x20b0, 0xaadc, 0xfd1f, 0xb521, 0x0, 0x0);
        gbc.writeMem(0xbd7d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdb86);
        EXPECT(gbc.pc(), 0xbd7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7d), 0xcb);
        EXPECT(gbc.readMem(0xbd7e), 0x29);
        // CB 29 0076
        gbc.setState(0x6e8d, 0xf292, 0xced0, 0x3af9, 0x7eec, 0xbf2e, 0x0, 0x1);
        gbc.writeMem(0x6e8d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf292);
        EXPECT(gbc.pc(), 0x6e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0077
        gbc.setState(0x4250, 0xd0d0, 0xbb80, 0x43cf, 0xcd93, 0xd907, 0x0, 0x1);
        gbc.writeMem(0x4250, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd0d0);
        EXPECT(gbc.pc(), 0x4252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0078
        gbc.setState(0xe982, 0x4830, 0xa9e0, 0xe25d, 0x830b, 0x2d7e, 0x1, 0x1);
        gbc.writeMem(0xe982, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4830);
        EXPECT(gbc.pc(), 0xe984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe982), 0xcb);
        EXPECT(gbc.readMem(0xe983), 0x29);
        // CB 29 0079
        gbc.setState(0x6a64, 0x54bf, 0x3b0, 0x7cd4, 0xa2a7, 0x35ce, 0x1, 0x1);
        gbc.writeMem(0x6a64, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x54bf);
        EXPECT(gbc.pc(), 0x6a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 007A
        gbc.setState(0x4067, 0xd40c, 0xd0d0, 0xc26c, 0xe9c5, 0x5047, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd40c);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 007B
        gbc.setState(0xed3d, 0x6816, 0x8d80, 0xa9d2, 0x7fe5, 0xfa65, 0x1, 0x1);
        gbc.writeMem(0xed3d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6816);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3d), 0xcb);
        EXPECT(gbc.readMem(0xed3e), 0x29);
        // CB 29 007C
        gbc.setState(0xe9dc, 0xaaa6, 0xef30, 0xec42, 0xb698, 0xdb53, 0x0, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaaa6);
        EXPECT(gbc.pc(), 0xe9de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xcb);
        EXPECT(gbc.readMem(0xe9dd), 0x29);
        // CB 29 007D
        gbc.setState(0x288d, 0x31b3, 0x61c0, 0x68f8, 0xafe5, 0xb841, 0x0, 0x0);
        gbc.writeMem(0x288d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x31b3);
        EXPECT(gbc.pc(), 0x288f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 007E
        gbc.setState(0x374, 0x7162, 0x3820, 0x2477, 0xcc87, 0xacb3, 0x1, 0x1);
        gbc.writeMem(0x374, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7162);
        EXPECT(gbc.pc(), 0x376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 007F
        gbc.setState(0xab2d, 0xfadf, 0xb570, 0xb1f3, 0xc487, 0xba17, 0x0, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfadf);
        EXPECT(gbc.pc(), 0xab2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2d), 0xcb);
        EXPECT(gbc.readMem(0xab2e), 0x29);
        // CB 29 0080
        gbc.setState(0xc9f, 0x6503, 0xa0b0, 0x926a, 0xe1c2, 0x637d, 0x0, 0x1);
        gbc.writeMem(0xc9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6503);
        EXPECT(gbc.pc(), 0xca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0081
        gbc.setState(0x3dac, 0xd8f2, 0xd80, 0xdd85, 0xf698, 0x9db7, 0x0, 0x1);
        gbc.writeMem(0x3dac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd8f2);
        EXPECT(gbc.pc(), 0x3dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0082
        gbc.setState(0xc54, 0x4deb, 0xa60, 0xc657, 0xcb8e, 0x81a1, 0x1, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4deb);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0083
        gbc.setState(0x7514, 0xa118, 0x58f0, 0x4fee, 0xf871, 0x2049, 0x1, 0x1);
        gbc.writeMem(0x7514, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0084
        gbc.setState(0xbe0, 0xfffa, 0x93e0, 0xf3ce, 0x93d8, 0x2f50, 0x1, 0x1);
        gbc.writeMem(0xbe0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfffa);
        EXPECT(gbc.pc(), 0xbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0085
        gbc.setState(0x1c31, 0xed11, 0xe3b0, 0x76b5, 0x7520, 0xd5cb, 0x1, 0x1);
        gbc.writeMem(0x1c31, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xed11);
        EXPECT(gbc.pc(), 0x1c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0086
        gbc.setState(0xee1e, 0x420b, 0x5b90, 0x9055, 0xa186, 0xa6b0, 0x1, 0x1);
        gbc.writeMem(0xee1e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x420b);
        EXPECT(gbc.pc(), 0xee20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1e), 0xcb);
        EXPECT(gbc.readMem(0xee1f), 0x29);
        // CB 29 0087
        gbc.setState(0x6d28, 0x6f97, 0xd820, 0x33ea, 0x4909, 0x981d, 0x1, 0x0);
        gbc.writeMem(0x6d28, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6f97);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0088
        gbc.setState(0xc039, 0x8943, 0x9f20, 0x5411, 0x615c, 0xfc8a, 0x1, 0x0);
        gbc.writeMem(0xc039, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8943);
        EXPECT(gbc.pc(), 0xc03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc039), 0xcb);
        EXPECT(gbc.readMem(0xc03a), 0x29);
        // CB 29 0089
        gbc.setState(0x4638, 0xb316, 0x6140, 0x41ba, 0x54d, 0xe73c, 0x1, 0x1);
        gbc.writeMem(0x4638, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb316);
        EXPECT(gbc.pc(), 0x463a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 008A
        gbc.setState(0x6dc, 0x25b6, 0xdcd0, 0x20c0, 0x17a, 0x94bf, 0x1, 0x1);
        gbc.writeMem(0x6dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x25b6);
        EXPECT(gbc.pc(), 0x6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 008B
        gbc.setState(0x4485, 0x4035, 0xfe60, 0x4d84, 0xbfdf, 0x5499, 0x0, 0x0);
        gbc.writeMem(0x4485, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4035);
        EXPECT(gbc.pc(), 0x4487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 008E
        gbc.setState(0x7e77, 0xbcaf, 0x9c10, 0x2278, 0x586a, 0x5f27, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbcaf);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 008F
        gbc.setState(0xd546, 0x9613, 0xfc80, 0xfaba, 0x772e, 0x1518, 0x0, 0x0);
        gbc.writeMem(0xd546, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9613);
        EXPECT(gbc.pc(), 0xd548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd546), 0xcb);
        EXPECT(gbc.readMem(0xd547), 0x29);
        // CB 29 0091
        gbc.setState(0x626c, 0x79f9, 0x4cb0, 0xd58a, 0x424c, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0x626c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x79f9);
        EXPECT(gbc.pc(), 0x626e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0093
        gbc.setState(0x6b2f, 0xd703, 0xaa80, 0xdfd0, 0xfc0a, 0x3eaa, 0x0, 0x1);
        gbc.writeMem(0x6b2f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd703);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0094
        gbc.setState(0x1a84, 0x7466, 0x72f0, 0xe9e0, 0x9873, 0x7f0f, 0x0, 0x0);
        gbc.writeMem(0x1a84, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0095
        gbc.setState(0xc87b, 0xa342, 0xd630, 0x342b, 0x45d5, 0xf9f9, 0x0, 0x0);
        gbc.writeMem(0xc87b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa342);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87b), 0xcb);
        EXPECT(gbc.readMem(0xc87c), 0x29);
        // CB 29 0096
        gbc.setState(0x5636, 0xbc71, 0xdd40, 0x6bb2, 0x762d, 0x4068, 0x0, 0x1);
        gbc.writeMem(0x5636, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbc71);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0097
        gbc.setState(0x15ad, 0x6f2a, 0xcab0, 0x840e, 0x7a5a, 0x10bf, 0x0, 0x1);
        gbc.writeMem(0x15ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6f2a);
        EXPECT(gbc.pc(), 0x15af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0098
        gbc.setState(0x6570, 0x2d94, 0x6990, 0x2edd, 0x5dca, 0x66b6, 0x0, 0x0);
        gbc.writeMem(0x6570, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2d94);
        EXPECT(gbc.pc(), 0x6572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0099
        gbc.setState(0xb617, 0xa333, 0xc610, 0x6e2b, 0x7591, 0xf344, 0x1, 0x1);
        gbc.writeMem(0xb617, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa333);
        EXPECT(gbc.pc(), 0xb619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb617), 0xcb);
        EXPECT(gbc.readMem(0xb618), 0x29);
        // CB 29 009A
        gbc.setState(0x4895, 0x1464, 0x4a20, 0x3967, 0x58e4, 0xb6b, 0x1, 0x0);
        gbc.writeMem(0x4895, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1464);
        EXPECT(gbc.pc(), 0x4897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 009B
        gbc.setState(0xea72, 0x72aa, 0xd120, 0x4c37, 0xbde2, 0x95a7, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x72aa);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea72), 0xcb);
        EXPECT(gbc.readMem(0xea73), 0x29);
        // CB 29 009C
        gbc.setState(0x9c09, 0xf3cc, 0x36f0, 0x45ca, 0x1d70, 0xca8e, 0x0, 0x1);
        gbc.writeMem(0x9c09, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf3cc);
        EXPECT(gbc.pc(), 0x9c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c09), 0xcb);
        EXPECT(gbc.readMem(0x9c0a), 0x29);
        // CB 29 009D
        gbc.setState(0xe939, 0xbd82, 0x9fd0, 0xe1f9, 0xdf01, 0xf3b0, 0x1, 0x0);
        gbc.writeMem(0xe939, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xbd82);
        EXPECT(gbc.pc(), 0xe93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe939), 0xcb);
        EXPECT(gbc.readMem(0xe93a), 0x29);
        // CB 29 009E
        gbc.setState(0xc172, 0xa135, 0xa80, 0x740e, 0x8e0, 0x803f, 0x1, 0x0);
        gbc.writeMem(0xc172, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa135);
        EXPECT(gbc.pc(), 0xc174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc172), 0xcb);
        EXPECT(gbc.readMem(0xc173), 0x29);
        // CB 29 009F
        gbc.setState(0x5166, 0x9495, 0x6b0, 0xc24f, 0xbd5d, 0x64c1, 0x1, 0x1);
        gbc.writeMem(0x5166, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9495);
        EXPECT(gbc.pc(), 0x5168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00A0
        gbc.setState(0xa67c, 0xd9ec, 0xef60, 0xa4cb, 0xf5aa, 0x6195, 0x0, 0x0);
        gbc.writeMem(0xa67c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd9ec);
        EXPECT(gbc.pc(), 0xa67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67c), 0xcb);
        EXPECT(gbc.readMem(0xa67d), 0x29);
        // CB 29 00A2
        gbc.setState(0xdfe7, 0x2f72, 0x3e70, 0x1a65, 0x21d1, 0xa463, 0x1, 0x0);
        gbc.writeMem(0xdfe7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2f72);
        EXPECT(gbc.pc(), 0xdfe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe7), 0xcb);
        EXPECT(gbc.readMem(0xdfe8), 0x29);
        // CB 29 00A3
        gbc.setState(0x9c2b, 0x76ab, 0xc3a0, 0x992f, 0x8062, 0x73c5, 0x0, 0x0);
        gbc.writeMem(0x9c2b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x76ab);
        EXPECT(gbc.pc(), 0x9c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2b), 0xcb);
        EXPECT(gbc.readMem(0x9c2c), 0x29);
        // CB 29 00A4
        gbc.setState(0x74a6, 0x372c, 0xff00, 0xd186, 0x2307, 0xa26d, 0x0, 0x0);
        gbc.writeMem(0x74a6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x372c);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00A5
        gbc.setState(0xb62d, 0x67ea, 0x78d0, 0x62d7, 0xc210, 0x2bcc, 0x1, 0x0);
        gbc.writeMem(0xb62d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x67ea);
        EXPECT(gbc.pc(), 0xb62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62d), 0xcb);
        EXPECT(gbc.readMem(0xb62e), 0x29);
        // CB 29 00A6
        gbc.setState(0x57a5, 0x6306, 0xe1a0, 0x7c4e, 0x3d26, 0x5b66, 0x1, 0x0);
        gbc.writeMem(0x57a5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6306);
        EXPECT(gbc.pc(), 0x57a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00A7
        gbc.setState(0x8ef7, 0x8ab9, 0x1d00, 0x5213, 0x1821, 0xcd14, 0x0, 0x1);
        gbc.writeMem(0x8ef7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8ab9);
        EXPECT(gbc.pc(), 0x8ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef7), 0xcb);
        EXPECT(gbc.readMem(0x8ef8), 0x29);
        // CB 29 00A8
        gbc.setState(0xbb22, 0x71e5, 0x3f60, 0xc87c, 0xfccc, 0x28cb, 0x1, 0x0);
        gbc.writeMem(0xbb22, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x71e5);
        EXPECT(gbc.pc(), 0xbb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb22), 0xcb);
        EXPECT(gbc.readMem(0xbb23), 0x29);
        // CB 29 00A9
        gbc.setState(0x7781, 0x36a1, 0x83b0, 0x9275, 0x2dce, 0xf5b1, 0x1, 0x1);
        gbc.writeMem(0x7781, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x36a1);
        EXPECT(gbc.pc(), 0x7783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00AA
        gbc.setState(0x642, 0xe5c8, 0x11f0, 0x95ab, 0xce78, 0x3cf5, 0x0, 0x1);
        gbc.writeMem(0x642, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe5c8);
        EXPECT(gbc.pc(), 0x644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00AB
        gbc.setState(0x8eab, 0xeb1e, 0xf790, 0xd9ee, 0xe8e7, 0x7b2e, 0x0, 0x0);
        gbc.writeMem(0x8eab, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xeb1e);
        EXPECT(gbc.pc(), 0x8ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eab), 0xcb);
        EXPECT(gbc.readMem(0x8eac), 0x29);
        // CB 29 00AC
        gbc.setState(0xa81e, 0x6cba, 0x7180, 0x21e, 0x2a6e, 0x9c33, 0x1, 0x1);
        gbc.writeMem(0xa81e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81e), 0xcb);
        EXPECT(gbc.readMem(0xa81f), 0x29);
        // CB 29 00AD
        gbc.setState(0x4dea, 0xe89, 0x5da0, 0x15d5, 0x99c3, 0x1861, 0x0, 0x1);
        gbc.writeMem(0x4dea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe89);
        EXPECT(gbc.pc(), 0x4dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00AE
        gbc.setState(0x9c43, 0xac23, 0xff0, 0xe238, 0x52aa, 0x7541, 0x0, 0x0);
        gbc.writeMem(0x9c43, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xac23);
        EXPECT(gbc.pc(), 0x9c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c43), 0xcb);
        EXPECT(gbc.readMem(0x9c44), 0x29);
        // CB 29 00AF
        gbc.setState(0x7158, 0x5e20, 0x4fa0, 0xa7ad, 0xcc99, 0x2889, 0x0, 0x1);
        gbc.writeMem(0x7158, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5e20);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00B0
        gbc.setState(0x582e, 0x9ce7, 0xad10, 0xea9a, 0x2aee, 0x9492, 0x1, 0x0);
        gbc.writeMem(0x582e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9ce7);
        EXPECT(gbc.pc(), 0x5830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00B1
        gbc.setState(0x8340, 0x173c, 0xb910, 0xd35c, 0xf9e2, 0x1d59, 0x1, 0x0);
        gbc.writeMem(0x8340, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x173c);
        EXPECT(gbc.pc(), 0x8342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8340), 0xcb);
        EXPECT(gbc.readMem(0x8341), 0x29);
        // CB 29 00B2
        gbc.setState(0x64ad, 0xe8b6, 0x2a50, 0xde66, 0x24af, 0x229a, 0x1, 0x1);
        gbc.writeMem(0x64ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe8b6);
        EXPECT(gbc.pc(), 0x64af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00B3
        gbc.setState(0x7021, 0x23ca, 0x9750, 0x27bf, 0x80fe, 0xff5e, 0x1, 0x1);
        gbc.writeMem(0x7021, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x23ca);
        EXPECT(gbc.pc(), 0x7023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00B4
        gbc.setState(0x2467, 0xb4e1, 0xb40, 0xf327, 0x4f66, 0x4e9a, 0x0, 0x1);
        gbc.writeMem(0x2467, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0x2469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00B5
        gbc.setState(0x4b50, 0xa692, 0x9c20, 0x1506, 0x52bd, 0xb0b9, 0x1, 0x1);
        gbc.writeMem(0x4b50, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa692);
        EXPECT(gbc.pc(), 0x4b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00B6
        gbc.setState(0x9536, 0x4974, 0x3fb0, 0x7e60, 0xb360, 0x2877, 0x1, 0x1);
        gbc.writeMem(0x9536, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4974);
        EXPECT(gbc.pc(), 0x9538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9536), 0xcb);
        EXPECT(gbc.readMem(0x9537), 0x29);
        // CB 29 00B7
        gbc.setState(0xd52e, 0xa3d2, 0x6fc0, 0x92eb, 0xc4ea, 0xb014, 0x1, 0x0);
        gbc.writeMem(0xd52e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa3d2);
        EXPECT(gbc.pc(), 0xd530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd52e), 0xcb);
        EXPECT(gbc.readMem(0xd52f), 0x29);
        // CB 29 00B8
        gbc.setState(0x2168, 0x80bc, 0x1b90, 0xcf3, 0xbe1d, 0x1738, 0x1, 0x1);
        gbc.writeMem(0x2168, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x80bc);
        EXPECT(gbc.pc(), 0x216a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00B9
        gbc.setState(0x9c9e, 0xecb0, 0x3420, 0x6925, 0xf9e8, 0x424d, 0x1, 0x1);
        gbc.writeMem(0x9c9e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xecb0);
        EXPECT(gbc.pc(), 0x9ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9e), 0xcb);
        EXPECT(gbc.readMem(0x9c9f), 0x29);
        // CB 29 00BA
        gbc.setState(0xdd2b, 0x4234, 0x3200, 0x4311, 0x5f83, 0xda1d, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4234);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0x29);
        // CB 29 00BB
        gbc.setState(0xe2f8, 0xad9e, 0x85f0, 0x41fc, 0x198c, 0xc8d3, 0x1, 0x1);
        gbc.writeMem(0xe2f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0xe2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f8), 0xcb);
        EXPECT(gbc.readMem(0xe2f9), 0x29);
        // CB 29 00BC
        gbc.setState(0xb8, 0xc2f, 0xfea0, 0x3b3b, 0xcc5e, 0x7b00, 0x1, 0x1);
        gbc.writeMem(0xb8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0xba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00BD
        gbc.setState(0x531e, 0x58d5, 0xeed0, 0x1d63, 0xa5eb, 0xa823, 0x0, 0x0);
        gbc.writeMem(0x531e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x58d5);
        EXPECT(gbc.pc(), 0x5320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00BE
        gbc.setState(0xc7ef, 0x502d, 0x6750, 0x53db, 0x487b, 0xab71, 0x1, 0x1);
        gbc.writeMem(0xc7ef, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x502d);
        EXPECT(gbc.pc(), 0xc7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ef), 0xcb);
        EXPECT(gbc.readMem(0xc7f0), 0x29);
        // CB 29 00BF
        gbc.setState(0xc0b7, 0xe780, 0x5420, 0x624b, 0xbcff, 0x248a, 0x0, 0x1);
        gbc.writeMem(0xc0b7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe780);
        EXPECT(gbc.pc(), 0xc0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b7), 0xcb);
        EXPECT(gbc.readMem(0xc0b8), 0x29);
        // CB 29 00C0
        gbc.setState(0x5358, 0x16f, 0xdbb0, 0x8d36, 0xab6d, 0x680e, 0x0, 0x1);
        gbc.writeMem(0x5358, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x16f);
        EXPECT(gbc.pc(), 0x535a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00C1
        gbc.setState(0x842d, 0xe2f1, 0xfff0, 0xe2de, 0x50a5, 0x18b2, 0x1, 0x0);
        gbc.writeMem(0x842d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe2f1);
        EXPECT(gbc.pc(), 0x842f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842d), 0xcb);
        EXPECT(gbc.readMem(0x842e), 0x29);
        // CB 29 00C2
        gbc.setState(0xb895, 0x8874, 0xa400, 0x2033, 0x4c3d, 0x9ecd, 0x1, 0x0);
        gbc.writeMem(0xb895, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8874);
        EXPECT(gbc.pc(), 0xb897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb895), 0xcb);
        EXPECT(gbc.readMem(0xb896), 0x29);
        // CB 29 00C3
        gbc.setState(0xba35, 0x9526, 0xff00, 0xd102, 0x5e55, 0x455c, 0x1, 0x1);
        gbc.writeMem(0xba35, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9526);
        EXPECT(gbc.pc(), 0xba37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba35), 0xcb);
        EXPECT(gbc.readMem(0xba36), 0x29);
        // CB 29 00C4
        gbc.setState(0xa122, 0x5b4, 0x2a10, 0x999b, 0x26a9, 0x3172, 0x0, 0x1);
        gbc.writeMem(0xa122, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5b4);
        EXPECT(gbc.pc(), 0xa124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa122), 0xcb);
        EXPECT(gbc.readMem(0xa123), 0x29);
        // CB 29 00C6
        gbc.setState(0x95ff, 0xfda6, 0x4e90, 0x7fd3, 0x1f4e, 0x29e3, 0x1, 0x0);
        gbc.writeMem(0x95ff, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfda6);
        EXPECT(gbc.pc(), 0x9601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ff), 0xcb);
        EXPECT(gbc.readMem(0x9600), 0x29);
        // CB 29 00C7
        gbc.setState(0x8de2, 0xcb34, 0xbbd0, 0x4b9f, 0x638a, 0x7563, 0x1, 0x0);
        gbc.writeMem(0x8de2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcb34);
        EXPECT(gbc.pc(), 0x8de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de2), 0xcb);
        EXPECT(gbc.readMem(0x8de3), 0x29);
        // CB 29 00C8
        gbc.setState(0x5c66, 0x6b32, 0x22f0, 0x7bd5, 0x3f26, 0xb8d0, 0x0, 0x0);
        gbc.writeMem(0x5c66, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6b32);
        EXPECT(gbc.pc(), 0x5c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00C9
        gbc.setState(0x5e54, 0xa8, 0xdff0, 0x8aa4, 0x1069, 0x831c, 0x1, 0x0);
        gbc.writeMem(0x5e54, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa8);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00CA
        gbc.setState(0x5cb9, 0x6387, 0xf630, 0x764c, 0x2c05, 0xc5a, 0x0, 0x1);
        gbc.writeMem(0x5cb9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6387);
        EXPECT(gbc.pc(), 0x5cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00CB
        gbc.setState(0x9122, 0x90e0, 0x4180, 0xe9d6, 0x8684, 0x6c23, 0x0, 0x0);
        gbc.writeMem(0x9122, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x90e0);
        EXPECT(gbc.pc(), 0x9124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9122), 0xcb);
        EXPECT(gbc.readMem(0x9123), 0x29);
        // CB 29 00CC
        gbc.setState(0x10aa, 0x6708, 0x3550, 0xcf58, 0xcc9b, 0xc33a, 0x0, 0x1);
        gbc.writeMem(0x10aa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6708);
        EXPECT(gbc.pc(), 0x10ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00CD
        gbc.setState(0x1fba, 0x4e66, 0xc900, 0xfb59, 0xe37e, 0x64a0, 0x0, 0x0);
        gbc.writeMem(0x1fba, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4e66);
        EXPECT(gbc.pc(), 0x1fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00CE
        gbc.setState(0x97de, 0x432e, 0x7fe0, 0x3ce9, 0x8a65, 0x2cb1, 0x0, 0x0);
        gbc.writeMem(0x97de, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x97e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97de), 0xcb);
        EXPECT(gbc.readMem(0x97df), 0x29);
        // CB 29 00CF
        gbc.setState(0x705c, 0xd521, 0x3900, 0xc4b4, 0x346d, 0x3ab9, 0x1, 0x0);
        gbc.writeMem(0x705c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd521);
        EXPECT(gbc.pc(), 0x705e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00D0
        gbc.setState(0xdfdd, 0x688f, 0x6120, 0x7e35, 0x6ddb, 0xfc0b, 0x0, 0x1);
        gbc.writeMem(0xdfdd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x688f);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdd), 0xcb);
        EXPECT(gbc.readMem(0xdfde), 0x29);
        // CB 29 00D1
        gbc.setState(0x6c4b, 0xf73d, 0x5650, 0x6cb3, 0xe727, 0x2125, 0x0, 0x1);
        gbc.writeMem(0x6c4b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf73d);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00D3
        gbc.setState(0xbd6, 0x53dc, 0x7df0, 0xa7a8, 0xfdf9, 0x2e7, 0x1, 0x1);
        gbc.writeMem(0xbd6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x53dc);
        EXPECT(gbc.pc(), 0xbd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00D4
        gbc.setState(0x3875, 0xbffa, 0x6c80, 0x7067, 0xae82, 0x15df, 0x0, 0x0);
        gbc.writeMem(0x3875, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbffa);
        EXPECT(gbc.pc(), 0x3877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00D5
        gbc.setState(0x60d8, 0xfa44, 0x3810, 0x62dc, 0xbbde, 0x3e71, 0x1, 0x1);
        gbc.writeMem(0x60d8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfa44);
        EXPECT(gbc.pc(), 0x60da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00D6
        gbc.setState(0x1072, 0xd095, 0x3030, 0x6b2b, 0xfd4, 0x920, 0x1, 0x0);
        gbc.writeMem(0x1072, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd095);
        EXPECT(gbc.pc(), 0x1074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00D7
        gbc.setState(0x9c73, 0x84a6, 0xddd0, 0x798, 0xf1a4, 0x37c2, 0x1, 0x0);
        gbc.writeMem(0x9c73, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x84a6);
        EXPECT(gbc.pc(), 0x9c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c73), 0xcb);
        EXPECT(gbc.readMem(0x9c74), 0x29);
        // CB 29 00D8
        gbc.setState(0x3af3, 0xe909, 0x3b80, 0x533a, 0xfd9d, 0xe540, 0x0, 0x0);
        gbc.writeMem(0x3af3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe909);
        EXPECT(gbc.pc(), 0x3af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00D9
        gbc.setState(0x510, 0xd5fc, 0x63b0, 0xa05a, 0x1574, 0x4823, 0x0, 0x1);
        gbc.writeMem(0x510, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd5fc);
        EXPECT(gbc.pc(), 0x512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00DA
        gbc.setState(0x8c67, 0xa5f1, 0x1fe0, 0x4384, 0x24c, 0x2ab6, 0x1, 0x1);
        gbc.writeMem(0x8c67, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa5f1);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0x29);
        // CB 29 00DB
        gbc.setState(0x9ea3, 0x89d3, 0xd00, 0xfcea, 0x902f, 0xc135, 0x1, 0x0);
        gbc.writeMem(0x9ea3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x89d3);
        EXPECT(gbc.pc(), 0x9ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea3), 0xcb);
        EXPECT(gbc.readMem(0x9ea4), 0x29);
        // CB 29 00DC
        gbc.setState(0x6ca2, 0x2dc4, 0x4100, 0xc87f, 0x4b2f, 0xab94, 0x0, 0x0);
        gbc.writeMem(0x6ca2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2dc4);
        EXPECT(gbc.pc(), 0x6ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00DD
        gbc.setState(0xa07a, 0xbf00, 0xe480, 0x7b60, 0xe2c7, 0x6128, 0x0, 0x1);
        gbc.writeMem(0xa07a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbf00);
        EXPECT(gbc.pc(), 0xa07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07a), 0xcb);
        EXPECT(gbc.readMem(0xa07b), 0x29);
        // CB 29 00DE
        gbc.setState(0xdee6, 0x658b, 0xb1d0, 0x55ba, 0x2495, 0x6ac2, 0x0, 0x0);
        gbc.writeMem(0xdee6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x658b);
        EXPECT(gbc.pc(), 0xdee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee6), 0xcb);
        EXPECT(gbc.readMem(0xdee7), 0x29);
        // CB 29 00DF
        gbc.setState(0x4ffe, 0x1fa8, 0xc640, 0xb16f, 0x8760, 0x1541, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1fa8);
        EXPECT(gbc.pc(), 0x5000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00E0
        gbc.setState(0x59ef, 0xc6fa, 0xac80, 0xc2b2, 0x4722, 0x42bf, 0x0, 0x1);
        gbc.writeMem(0x59ef, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc6fa);
        EXPECT(gbc.pc(), 0x59f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00E1
        gbc.setState(0x4a6e, 0x8c6d, 0x1500, 0x1d82, 0x81a0, 0xc4c9, 0x1, 0x1);
        gbc.writeMem(0x4a6e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8c6d);
        EXPECT(gbc.pc(), 0x4a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00E2
        gbc.setState(0x21c4, 0x472f, 0xdcd0, 0x2a, 0x3c5c, 0x9846, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x472f);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00E3
        gbc.setState(0xd20d, 0xca1d, 0x1250, 0xe276, 0xb909, 0xba54, 0x0, 0x0);
        gbc.writeMem(0xd20d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xca1d);
        EXPECT(gbc.pc(), 0xd20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20d), 0xcb);
        EXPECT(gbc.readMem(0xd20e), 0x29);
        // CB 29 00E5
        gbc.setState(0x2538, 0x46ac, 0x900, 0xe5b, 0x1583, 0xbe47, 0x0, 0x0);
        gbc.writeMem(0x2538, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x46ac);
        EXPECT(gbc.pc(), 0x253a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00E6
        gbc.setState(0xc071, 0x358f, 0x2b00, 0x88b8, 0x572, 0xa625, 0x0, 0x0);
        gbc.writeMem(0xc071, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x358f);
        EXPECT(gbc.pc(), 0xc073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc071), 0xcb);
        EXPECT(gbc.readMem(0xc072), 0x29);
        // CB 29 00E7
        gbc.setState(0x6b40, 0xb617, 0xd560, 0x6792, 0xe90d, 0x4353, 0x0, 0x0);
        gbc.writeMem(0x6b40, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb617);
        EXPECT(gbc.pc(), 0x6b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00E8
        gbc.setState(0x81a7, 0x52a3, 0xec90, 0x2faa, 0xe09f, 0x87b6, 0x0, 0x1);
        gbc.writeMem(0x81a7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x52a3);
        EXPECT(gbc.pc(), 0x81a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a7), 0xcb);
        EXPECT(gbc.readMem(0x81a8), 0x29);
        // CB 29 00E9
        gbc.setState(0xa44, 0xa5ba, 0x4860, 0x849c, 0xbd3, 0x5e7a, 0x1, 0x0);
        gbc.writeMem(0xa44, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa5ba);
        EXPECT(gbc.pc(), 0xa46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00EA
        gbc.setState(0x2e1, 0x94aa, 0x5480, 0x17d4, 0x7a2b, 0x6a56, 0x0, 0x1);
        gbc.writeMem(0x2e1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0x2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00EB
        gbc.setState(0x75d4, 0x3805, 0x7060, 0x5e4, 0xe874, 0x7892, 0x0, 0x1);
        gbc.writeMem(0x75d4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3805);
        EXPECT(gbc.pc(), 0x75d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00EC
        gbc.setState(0x1ad0, 0x2c93, 0x6a0, 0xb70f, 0x56e4, 0xe41b, 0x0, 0x1);
        gbc.writeMem(0x1ad0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2c93);
        EXPECT(gbc.pc(), 0x1ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00EE
        gbc.setState(0x2ef6, 0xd10f, 0xf420, 0xa228, 0xfff4, 0x8407, 0x0, 0x1);
        gbc.writeMem(0x2ef6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd10f);
        EXPECT(gbc.pc(), 0x2ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00EF
        gbc.setState(0x58f9, 0xbfdf, 0xb210, 0x5be9, 0x84c6, 0xbceb, 0x1, 0x0);
        gbc.writeMem(0x58f9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbfdf);
        EXPECT(gbc.pc(), 0x58fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00F0
        gbc.setState(0xc0b7, 0x94c8, 0x2400, 0x74c3, 0x246b, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0xc0b7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x94c8);
        EXPECT(gbc.pc(), 0xc0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b7), 0xcb);
        EXPECT(gbc.readMem(0xc0b8), 0x29);
        // CB 29 00F1
        gbc.setState(0x3b10, 0x2da1, 0xef30, 0x33b1, 0x7d3c, 0x732d, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2da1);
        EXPECT(gbc.pc(), 0x3b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00F2
        gbc.setState(0xe599, 0xa9bf, 0x9270, 0xf917, 0x1e8d, 0x35d2, 0x1, 0x1);
        gbc.writeMem(0xe599, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa9bf);
        EXPECT(gbc.pc(), 0xe59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe599), 0xcb);
        EXPECT(gbc.readMem(0xe59a), 0x29);
        // CB 29 00F3
        gbc.setState(0xacf7, 0x4043, 0xaf30, 0xf468, 0x5c4, 0x499f, 0x0, 0x0);
        gbc.writeMem(0xacf7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4043);
        EXPECT(gbc.pc(), 0xacf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf7), 0xcb);
        EXPECT(gbc.readMem(0xacf8), 0x29);
        // CB 29 00F4
        gbc.setState(0xdd38, 0xaed0, 0x9cf0, 0x61ff, 0xe19f, 0x5ae7, 0x0, 0x0);
        gbc.writeMem(0xdd38, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaed0);
        EXPECT(gbc.pc(), 0xdd3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd38), 0xcb);
        EXPECT(gbc.readMem(0xdd39), 0x29);
        // CB 29 00F5
        gbc.setState(0x9db8, 0x532a, 0x41b0, 0x83db, 0x3549, 0x473e, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x532a);
        EXPECT(gbc.pc(), 0x9dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db8), 0xcb);
        EXPECT(gbc.readMem(0x9db9), 0x29);
        // CB 29 00F6
        gbc.setState(0x2b77, 0x16cd, 0x46b0, 0xd23c, 0x20dd, 0x75bb, 0x1, 0x0);
        gbc.writeMem(0x2b77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x16cd);
        EXPECT(gbc.pc(), 0x2b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 00F7
        gbc.setState(0x9474, 0x6ad6, 0x430, 0x3b3b, 0x29e7, 0x421, 0x0, 0x0);
        gbc.writeMem(0x9474, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0x9476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9474), 0xcb);
        EXPECT(gbc.readMem(0x9475), 0x29);
        // CB 29 00F8
        gbc.setState(0xd30d, 0x9d3f, 0x63d0, 0x8105, 0x3094, 0x974d, 0x1, 0x0);
        gbc.writeMem(0xd30d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9d3f);
        EXPECT(gbc.pc(), 0xd30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30d), 0xcb);
        EXPECT(gbc.readMem(0xd30e), 0x29);
        // CB 29 00F9
        gbc.setState(0xa783, 0x7d44, 0x5aa0, 0x86f0, 0x3c8e, 0xe488, 0x1, 0x0);
        gbc.writeMem(0xa783, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7d44);
        EXPECT(gbc.pc(), 0xa785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa783), 0xcb);
        EXPECT(gbc.readMem(0xa784), 0x29);
        // CB 29 00FA
        gbc.setState(0xbd41, 0x34a1, 0x1820, 0xb228, 0x1900, 0xa4c2, 0x1, 0x0);
        gbc.writeMem(0xbd41, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x34a1);
        EXPECT(gbc.pc(), 0xbd43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd41), 0xcb);
        EXPECT(gbc.readMem(0xbd42), 0x29);
        // CB 29 00FB
        gbc.setState(0x786e, 0xa439, 0x4370, 0x7131, 0x3c2d, 0xfc0, 0x0, 0x0);
        gbc.writeMem(0x786e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa439);
        EXPECT(gbc.pc(), 0x7870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00FC
        gbc.setState(0x3c29, 0xfdf4, 0x54b0, 0x44db, 0xe255, 0xbfce, 0x1, 0x1);
        gbc.writeMem(0x3c29, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfdf4);
        EXPECT(gbc.pc(), 0x3c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 00FD
        gbc.setState(0xbf98, 0xe94b, 0x4e70, 0x3240, 0xc881, 0xa2ca, 0x1, 0x0);
        gbc.writeMem(0xbf98, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe94b);
        EXPECT(gbc.pc(), 0xbf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf98), 0xcb);
        EXPECT(gbc.readMem(0xbf99), 0x29);
        // CB 29 00FE
        gbc.setState(0xb93c, 0x290b, 0x4350, 0x634e, 0xfe42, 0x6443, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0xb93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93c), 0xcb);
        EXPECT(gbc.readMem(0xb93d), 0x29);
        // CB 29 00FF
        gbc.setState(0xe6f0, 0x349a, 0x2ce0, 0xf266, 0x8121, 0xd849, 0x1, 0x0);
        gbc.writeMem(0xe6f0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x349a);
        EXPECT(gbc.pc(), 0xe6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f0), 0xcb);
        EXPECT(gbc.readMem(0xe6f1), 0x29);
        // CB 29 0100
        gbc.setState(0x838b, 0xb992, 0xc9c0, 0xc0b7, 0x9b9d, 0xda18, 0x1, 0x0);
        gbc.writeMem(0x838b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb992);
        EXPECT(gbc.pc(), 0x838d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838b), 0xcb);
        EXPECT(gbc.readMem(0x838c), 0x29);
        // CB 29 0101
        gbc.setState(0x5709, 0x7246, 0xe370, 0xca71, 0x3027, 0x8fec, 0x1, 0x1);
        gbc.writeMem(0x5709, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7246);
        EXPECT(gbc.pc(), 0x570b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0102
        gbc.setState(0xc13b, 0x3d5f, 0x95c0, 0xec13, 0x59ee, 0x7c82, 0x0, 0x0);
        gbc.writeMem(0xc13b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3d5f);
        EXPECT(gbc.pc(), 0xc13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13b), 0xcb);
        EXPECT(gbc.readMem(0xc13c), 0x29);
        // CB 29 0103
        gbc.setState(0xb3f0, 0xab07, 0x9b70, 0x9234, 0x4a00, 0x12c1, 0x1, 0x1);
        gbc.writeMem(0xb3f0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xab07);
        EXPECT(gbc.pc(), 0xb3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f0), 0xcb);
        EXPECT(gbc.readMem(0xb3f1), 0x29);
        // CB 29 0104
        gbc.setState(0x7b87, 0xd37a, 0xef20, 0xe3d, 0xe71f, 0xb3d6, 0x1, 0x1);
        gbc.writeMem(0x7b87, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd37a);
        EXPECT(gbc.pc(), 0x7b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0105
        gbc.setState(0x15ce, 0x67d2, 0xa370, 0xf241, 0xaec8, 0xaaee, 0x0, 0x1);
        gbc.writeMem(0x15ce, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x67d2);
        EXPECT(gbc.pc(), 0x15d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0106
        gbc.setState(0xc589, 0xa72, 0x88e0, 0xa841, 0xea9f, 0xff1b, 0x1, 0x0);
        gbc.writeMem(0xc589, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa72);
        EXPECT(gbc.pc(), 0xc58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc589), 0xcb);
        EXPECT(gbc.readMem(0xc58a), 0x29);
        // CB 29 0107
        gbc.setState(0x22a3, 0x543f, 0x6f80, 0x69a4, 0xea3c, 0x6848, 0x1, 0x0);
        gbc.writeMem(0x22a3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0x22a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0108
        gbc.setState(0x7c8c, 0x1103, 0x5b30, 0x2c32, 0x6, 0x308e, 0x0, 0x1);
        gbc.writeMem(0x7c8c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1103);
        EXPECT(gbc.pc(), 0x7c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0109
        gbc.setState(0x280, 0x1ecc, 0x7480, 0xfca7, 0xb7f3, 0x2014, 0x0, 0x0);
        gbc.writeMem(0x280, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1ecc);
        EXPECT(gbc.pc(), 0x282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 010A
        gbc.setState(0x7e49, 0x60dd, 0x9510, 0x1670, 0xcb41, 0x98b, 0x0, 0x1);
        gbc.writeMem(0x7e49, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0x7e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 010B
        gbc.setState(0xad94, 0xf8fd, 0xc900, 0xf340, 0x8256, 0xb450, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf8fd);
        EXPECT(gbc.pc(), 0xad96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad94), 0xcb);
        EXPECT(gbc.readMem(0xad95), 0x29);
        // CB 29 010C
        gbc.setState(0x10b8, 0x8070, 0xe0a0, 0xdb55, 0xd0b1, 0x1c60, 0x0, 0x1);
        gbc.writeMem(0x10b8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8070);
        EXPECT(gbc.pc(), 0x10ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 010D
        gbc.setState(0xabea, 0x6630, 0xdfb0, 0x7278, 0xaea9, 0xc38a, 0x0, 0x1);
        gbc.writeMem(0xabea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6630);
        EXPECT(gbc.pc(), 0xabec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabea), 0xcb);
        EXPECT(gbc.readMem(0xabeb), 0x29);
        // CB 29 010E
        gbc.setState(0xacdd, 0x7a45, 0xac40, 0x4968, 0x2654, 0xb817, 0x0, 0x1);
        gbc.writeMem(0xacdd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a45);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacdd), 0xcb);
        EXPECT(gbc.readMem(0xacde), 0x29);
        // CB 29 010F
        gbc.setState(0xabdb, 0x710b, 0x7db0, 0xd36, 0xdd47, 0xd472, 0x1, 0x1);
        gbc.writeMem(0xabdb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0xabdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdb), 0xcb);
        EXPECT(gbc.readMem(0xabdc), 0x29);
        // CB 29 0110
        gbc.setState(0x7c94, 0xe32, 0x8100, 0x8797, 0xb5e2, 0x971e, 0x0, 0x1);
        gbc.writeMem(0x7c94, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe32);
        EXPECT(gbc.pc(), 0x7c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0111
        gbc.setState(0x5afe, 0xde7e, 0xdc40, 0xc8ff, 0xe0a7, 0x102, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xde7e);
        EXPECT(gbc.pc(), 0x5b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0112
        gbc.setState(0x75a4, 0x8c1e, 0x4d80, 0x5011, 0x73af, 0xb82c, 0x1, 0x1);
        gbc.writeMem(0x75a4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8c1e);
        EXPECT(gbc.pc(), 0x75a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0113
        gbc.setState(0xb, 0xa136, 0xd770, 0x65b2, 0xea22, 0x1a72, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0xd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0114
        gbc.setState(0x9d9e, 0xd5e2, 0x3ed0, 0x3d7e, 0xee9, 0x6ced, 0x0, 0x1);
        gbc.writeMem(0x9d9e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd5e2);
        EXPECT(gbc.pc(), 0x9da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9e), 0xcb);
        EXPECT(gbc.readMem(0x9d9f), 0x29);
        // CB 29 0115
        gbc.setState(0x3a17, 0xd0df, 0x72b0, 0x821f, 0xce7a, 0x3683, 0x1, 0x1);
        gbc.writeMem(0x3a17, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd0df);
        EXPECT(gbc.pc(), 0x3a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0116
        gbc.setState(0x5d1b, 0x2979, 0x3320, 0x60e9, 0x3118, 0x5d5e, 0x1, 0x1);
        gbc.writeMem(0x5d1b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2979);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0117
        gbc.setState(0x2e1b, 0x67f3, 0x4e00, 0xbfb2, 0xe062, 0x587c, 0x0, 0x1);
        gbc.writeMem(0x2e1b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x67f3);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0118
        gbc.setState(0xd9f, 0x26b8, 0xe9d0, 0xc5ff, 0xfc1b, 0x554d, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x26b8);
        EXPECT(gbc.pc(), 0xda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0119
        gbc.setState(0x72e8, 0xac37, 0x5760, 0x3118, 0x3825, 0xb627, 0x0, 0x0);
        gbc.writeMem(0x72e8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xac37);
        EXPECT(gbc.pc(), 0x72ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 011A
        gbc.setState(0x3502, 0x2c15, 0x9af0, 0xcde4, 0x5410, 0x74bd, 0x0, 0x0);
        gbc.writeMem(0x3502, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2c15);
        EXPECT(gbc.pc(), 0x3504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 011B
        gbc.setState(0x7ee2, 0x29bd, 0x3460, 0xc8ab, 0x67b0, 0xc00, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x29bd);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 011C
        gbc.setState(0xb5b3, 0x733, 0x1e50, 0xfe3d, 0x18d9, 0x5939, 0x1, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x733);
        EXPECT(gbc.pc(), 0xb5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b3), 0xcb);
        EXPECT(gbc.readMem(0xb5b4), 0x29);
        // CB 29 011D
        gbc.setState(0xdf6f, 0x8ac6, 0x6d40, 0x34f3, 0xa57, 0x6b, 0x1, 0x0);
        gbc.writeMem(0xdf6f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8ac6);
        EXPECT(gbc.pc(), 0xdf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf6f), 0xcb);
        EXPECT(gbc.readMem(0xdf70), 0x29);
        // CB 29 011E
        gbc.setState(0x1f44, 0x67d, 0x6ce0, 0x8f28, 0x815d, 0xc69d, 0x1, 0x0);
        gbc.writeMem(0x1f44, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x67d);
        EXPECT(gbc.pc(), 0x1f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 011F
        gbc.setState(0x5023, 0x64df, 0xf7c0, 0xd89e, 0xb27f, 0xe1ad, 0x0, 0x0);
        gbc.writeMem(0x5023, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x64df);
        EXPECT(gbc.pc(), 0x5025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0120
        gbc.setState(0x423e, 0x1767, 0xd0a0, 0x1d50, 0x4900, 0x2ade, 0x1, 0x1);
        gbc.writeMem(0x423e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1767);
        EXPECT(gbc.pc(), 0x4240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0122
        gbc.setState(0xd0b8, 0xb7a, 0x5a70, 0xf220, 0xc765, 0xeb00, 0x1, 0x1);
        gbc.writeMem(0xd0b8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7a);
        EXPECT(gbc.pc(), 0xd0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b8), 0xcb);
        EXPECT(gbc.readMem(0xd0b9), 0x29);
        // CB 29 0123
        gbc.setState(0xe794, 0x55e5, 0x7590, 0xb025, 0x8bb7, 0x954f, 0x0, 0x0);
        gbc.writeMem(0xe794, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x55e5);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe794), 0xcb);
        EXPECT(gbc.readMem(0xe795), 0x29);
        // CB 29 0124
        gbc.setState(0x6aaf, 0x76c5, 0x1450, 0xb4d5, 0xb8be, 0xfe45, 0x1, 0x0);
        gbc.writeMem(0x6aaf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x76c5);
        EXPECT(gbc.pc(), 0x6ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0125
        gbc.setState(0x2cd8, 0x7a7a, 0x2a40, 0x38e0, 0x79fb, 0x76a5, 0x0, 0x0);
        gbc.writeMem(0x2cd8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7a7a);
        EXPECT(gbc.pc(), 0x2cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0126
        gbc.setState(0x7973, 0x1c58, 0xd580, 0x6f94, 0xeb86, 0xb44a, 0x0, 0x0);
        gbc.writeMem(0x7973, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0x7975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0127
        gbc.setState(0x3ad6, 0x1e4a, 0xe390, 0xfe35, 0x6345, 0xc93e, 0x1, 0x0);
        gbc.writeMem(0x3ad6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1e4a);
        EXPECT(gbc.pc(), 0x3ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0129
        gbc.setState(0x91b8, 0xf84e, 0x2c30, 0xeb16, 0xc9dc, 0x2ced, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf84e);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0x29);
        // CB 29 012A
        gbc.setState(0xa9e5, 0xb224, 0x2ae0, 0x6572, 0x829d, 0x5ea9, 0x1, 0x1);
        gbc.writeMem(0xa9e5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb224);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e5), 0xcb);
        EXPECT(gbc.readMem(0xa9e6), 0x29);
        // CB 29 012B
        gbc.setState(0x3fd9, 0x4942, 0x7bf0, 0x47de, 0x3f13, 0x740c, 0x0, 0x0);
        gbc.writeMem(0x3fd9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4942);
        EXPECT(gbc.pc(), 0x3fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 012C
        gbc.setState(0xe3a2, 0xd962, 0x88f0, 0x3efd, 0x3212, 0x5063, 0x1, 0x1);
        gbc.writeMem(0xe3a2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd962);
        EXPECT(gbc.pc(), 0xe3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a2), 0xcb);
        EXPECT(gbc.readMem(0xe3a3), 0x29);
        // CB 29 012D
        gbc.setState(0x682d, 0x86aa, 0x9890, 0xbcd0, 0x4c69, 0x28b0, 0x1, 0x0);
        gbc.writeMem(0x682d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 012E
        gbc.setState(0x9577, 0xdce1, 0x21f0, 0x6e87, 0x3ad, 0xf821, 0x0, 0x1);
        gbc.writeMem(0x9577, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdce1);
        EXPECT(gbc.pc(), 0x9579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9577), 0xcb);
        EXPECT(gbc.readMem(0x9578), 0x29);
        // CB 29 012F
        gbc.setState(0x9930, 0x9c36, 0x9990, 0xc753, 0x3378, 0xe551, 0x0, 0x1);
        gbc.writeMem(0x9930, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9c36);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9930), 0xcb);
        EXPECT(gbc.readMem(0x9931), 0x29);
        // CB 29 0131
        gbc.setState(0x24c6, 0x67e6, 0x5090, 0xcfd2, 0xa446, 0xaee2, 0x0, 0x0);
        gbc.writeMem(0x24c6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x67e6);
        EXPECT(gbc.pc(), 0x24c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0132
        gbc.setState(0x2054, 0xa4d1, 0x1100, 0x1ff7, 0x5844, 0x3fa3, 0x1, 0x0);
        gbc.writeMem(0x2054, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0x2056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0133
        gbc.setState(0x2f50, 0xba22, 0x6210, 0xb3de, 0xd40, 0x6ed, 0x0, 0x1);
        gbc.writeMem(0x2f50, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xba22);
        EXPECT(gbc.pc(), 0x2f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0134
        gbc.setState(0x6f89, 0x8699, 0xac40, 0x574a, 0xef5, 0x8b7d, 0x0, 0x0);
        gbc.writeMem(0x6f89, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8699);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0135
        gbc.setState(0x8fd2, 0x711d, 0x9050, 0xe2a9, 0xbf7a, 0x5a64, 0x0, 0x0);
        gbc.writeMem(0x8fd2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x711d);
        EXPECT(gbc.pc(), 0x8fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd2), 0xcb);
        EXPECT(gbc.readMem(0x8fd3), 0x29);
        // CB 29 0137
        gbc.setState(0x746a, 0x6ffb, 0xdc20, 0xbcaf, 0x488a, 0x7c61, 0x1, 0x0);
        gbc.writeMem(0x746a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6ffb);
        EXPECT(gbc.pc(), 0x746c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0139
        gbc.setState(0x98dc, 0x1930, 0x270, 0x686, 0x7bb9, 0xd69c, 0x1, 0x0);
        gbc.writeMem(0x98dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1930);
        EXPECT(gbc.pc(), 0x98de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98dc), 0xcb);
        EXPECT(gbc.readMem(0x98dd), 0x29);
        // CB 29 013A
        gbc.setState(0x484c, 0xa012, 0xbe20, 0x9ede, 0x9e88, 0xc60b, 0x1, 0x1);
        gbc.writeMem(0x484c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa012);
        EXPECT(gbc.pc(), 0x484e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 013B
        gbc.setState(0x1c80, 0x1416, 0x7d40, 0x60bc, 0xfa2a, 0xb84b, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1416);
        EXPECT(gbc.pc(), 0x1c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 013C
        gbc.setState(0x2627, 0xe9ae, 0x1be0, 0xc42a, 0x34c0, 0x7af8, 0x1, 0x1);
        gbc.writeMem(0x2627, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe9ae);
        EXPECT(gbc.pc(), 0x2629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 013D
        gbc.setState(0xe6c9, 0xccf8, 0x2670, 0xce45, 0x3f5c, 0x4dcb, 0x0, 0x0);
        gbc.writeMem(0xe6c9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xccf8);
        EXPECT(gbc.pc(), 0xe6cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c9), 0xcb);
        EXPECT(gbc.readMem(0xe6ca), 0x29);
        // CB 29 013E
        gbc.setState(0x1e75, 0x8cb1, 0xe9b0, 0xcc33, 0xa5f, 0x2536, 0x0, 0x0);
        gbc.writeMem(0x1e75, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8cb1);
        EXPECT(gbc.pc(), 0x1e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 013F
        gbc.setState(0x4ae2, 0x148a, 0x8fd0, 0xa5d8, 0xbf63, 0x336b, 0x1, 0x0);
        gbc.writeMem(0x4ae2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x148a);
        EXPECT(gbc.pc(), 0x4ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0140
        gbc.setState(0x6b82, 0x5a19, 0xc50, 0x193d, 0xe950, 0xe113, 0x0, 0x1);
        gbc.writeMem(0x6b82, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5a19);
        EXPECT(gbc.pc(), 0x6b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0141
        gbc.setState(0x19f1, 0xbbad, 0x36b0, 0x148, 0xd774, 0xc9c5, 0x0, 0x1);
        gbc.writeMem(0x19f1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbbad);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0142
        gbc.setState(0x71b5, 0x8f6b, 0xf2e0, 0x7490, 0xdc2a, 0xbf0c, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8f6b);
        EXPECT(gbc.pc(), 0x71b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0144
        gbc.setState(0x26ab, 0xbe24, 0x3560, 0xb8e7, 0x8437, 0x8222, 0x0, 0x1);
        gbc.writeMem(0x26ab, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbe24);
        EXPECT(gbc.pc(), 0x26ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0145
        gbc.setState(0x6118, 0x7b65, 0x63e0, 0xcf4, 0xc756, 0x70b0, 0x0, 0x0);
        gbc.writeMem(0x6118, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7b65);
        EXPECT(gbc.pc(), 0x611a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0147
        gbc.setState(0x5667, 0x738f, 0x4820, 0x447d, 0xfcf6, 0x9e40, 0x0, 0x1);
        gbc.writeMem(0x5667, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x738f);
        EXPECT(gbc.pc(), 0x5669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0148
        gbc.setState(0x2adb, 0x2a9b, 0xf250, 0x37e7, 0x34e9, 0x868e, 0x0, 0x1);
        gbc.writeMem(0x2adb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2a9b);
        EXPECT(gbc.pc(), 0x2add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0149
        gbc.setState(0x5ccb, 0x1966, 0xae10, 0x19f1, 0xf990, 0x31ea, 0x1, 0x1);
        gbc.writeMem(0x5ccb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0x5ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 014A
        gbc.setState(0x6071, 0xa2ea, 0x200, 0xe0e2, 0x56c1, 0x2184, 0x1, 0x1);
        gbc.writeMem(0x6071, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa2ea);
        EXPECT(gbc.pc(), 0x6073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 014B
        gbc.setState(0xb503, 0xa0c7, 0xfa30, 0x454c, 0x2601, 0x1712, 0x0, 0x1);
        gbc.writeMem(0xb503, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa0c7);
        EXPECT(gbc.pc(), 0xb505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb503), 0xcb);
        EXPECT(gbc.readMem(0xb504), 0x29);
        // CB 29 014C
        gbc.setState(0x2fbc, 0x74bb, 0x5dd0, 0xd426, 0xfd37, 0xbdba, 0x0, 0x1);
        gbc.writeMem(0x2fbc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x74bb);
        EXPECT(gbc.pc(), 0x2fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 014D
        gbc.setState(0x9119, 0x8e46, 0x8670, 0x2d56, 0xc4a7, 0x8344, 0x0, 0x1);
        gbc.writeMem(0x9119, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8e46);
        EXPECT(gbc.pc(), 0x911b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9119), 0xcb);
        EXPECT(gbc.readMem(0x911a), 0x29);
        // CB 29 014E
        gbc.setState(0xe2d6, 0x2d02, 0x6fc0, 0x1857, 0xa027, 0x3ad7, 0x1, 0x0);
        gbc.writeMem(0xe2d6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0xe2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d6), 0xcb);
        EXPECT(gbc.readMem(0xe2d7), 0x29);
        // CB 29 014F
        gbc.setState(0x6d81, 0xf2f4, 0x6340, 0xdd29, 0x77f5, 0xa73c, 0x0, 0x1);
        gbc.writeMem(0x6d81, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf2f4);
        EXPECT(gbc.pc(), 0x6d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0150
        gbc.setState(0xa527, 0xd9f2, 0x5ee0, 0xcd3a, 0x75d1, 0x7be1, 0x1, 0x1);
        gbc.writeMem(0xa527, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd9f2);
        EXPECT(gbc.pc(), 0xa529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa527), 0xcb);
        EXPECT(gbc.readMem(0xa528), 0x29);
        // CB 29 0151
        gbc.setState(0x77, 0xe501, 0x8850, 0x8941, 0x2d0f, 0xd88b, 0x0, 0x1);
        gbc.writeMem(0x77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe501);
        EXPECT(gbc.pc(), 0x79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0152
        gbc.setState(0xaf5b, 0x733, 0xd4a0, 0xf829, 0xd4cb, 0xa617, 0x0, 0x1);
        gbc.writeMem(0xaf5b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x733);
        EXPECT(gbc.pc(), 0xaf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5b), 0xcb);
        EXPECT(gbc.readMem(0xaf5c), 0x29);
        // CB 29 0153
        gbc.setState(0xdf50, 0xc21, 0xca30, 0xe072, 0x974b, 0x1424, 0x0, 0x1);
        gbc.writeMem(0xdf50, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc21);
        EXPECT(gbc.pc(), 0xdf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf50), 0xcb);
        EXPECT(gbc.readMem(0xdf51), 0x29);
        // CB 29 0154
        gbc.setState(0xa68e, 0x49a6, 0xe10, 0x534, 0x7843, 0x4ec3, 0x1, 0x0);
        gbc.writeMem(0xa68e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x49a6);
        EXPECT(gbc.pc(), 0xa690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68e), 0xcb);
        EXPECT(gbc.readMem(0xa68f), 0x29);
        // CB 29 0155
        gbc.setState(0xdbb1, 0xd9d3, 0x8250, 0x2319, 0x574f, 0xded5, 0x1, 0x1);
        gbc.writeMem(0xdbb1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd9d3);
        EXPECT(gbc.pc(), 0xdbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb1), 0xcb);
        EXPECT(gbc.readMem(0xdbb2), 0x29);
        // CB 29 0157
        gbc.setState(0x4275, 0x9e9f, 0x9450, 0x47dd, 0xfb9, 0x8027, 0x0, 0x1);
        gbc.writeMem(0x4275, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9e9f);
        EXPECT(gbc.pc(), 0x4277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0158
        gbc.setState(0x2a98, 0x6724, 0x7f20, 0x5258, 0xd428, 0x4145, 0x0, 0x0);
        gbc.writeMem(0x2a98, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6724);
        EXPECT(gbc.pc(), 0x2a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0159
        gbc.setState(0xe8db, 0x7121, 0x2100, 0x44ca, 0x19b6, 0x9668, 0x1, 0x0);
        gbc.writeMem(0xe8db, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7121);
        EXPECT(gbc.pc(), 0xe8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8db), 0xcb);
        EXPECT(gbc.readMem(0xe8dc), 0x29);
        // CB 29 015A
        gbc.setState(0xfd1, 0xb0c6, 0x88a0, 0xaa61, 0x2d77, 0x82d7, 0x0, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb0c6);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 015B
        gbc.setState(0x867e, 0x9c54, 0x46b0, 0x5344, 0xa185, 0xcecc, 0x0, 0x1);
        gbc.writeMem(0x867e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9c54);
        EXPECT(gbc.pc(), 0x8680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867e), 0xcb);
        EXPECT(gbc.readMem(0x867f), 0x29);
        // CB 29 015C
        gbc.setState(0xca77, 0xea50, 0xebf0, 0x7a21, 0x708b, 0x55b, 0x0, 0x1);
        gbc.writeMem(0xca77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xea50);
        EXPECT(gbc.pc(), 0xca79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca77), 0xcb);
        EXPECT(gbc.readMem(0xca78), 0x29);
        // CB 29 015D
        gbc.setState(0xc05, 0xae99, 0x8980, 0x2ff0, 0x51a5, 0x98e9, 0x1, 0x1);
        gbc.writeMem(0xc05, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xae99);
        EXPECT(gbc.pc(), 0xc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 015E
        gbc.setState(0x1d12, 0xb79, 0xd760, 0x3089, 0x9da4, 0xe902, 0x1, 0x1);
        gbc.writeMem(0x1d12, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb79);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0160
        gbc.setState(0x897, 0x79ec, 0x5570, 0x3c43, 0xb730, 0xf87c, 0x1, 0x0);
        gbc.writeMem(0x897, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x79ec);
        EXPECT(gbc.pc(), 0x899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0161
        gbc.setState(0xb67a, 0x83b8, 0xab70, 0x56ee, 0xacd3, 0x8b08, 0x0, 0x1);
        gbc.writeMem(0xb67a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x83b8);
        EXPECT(gbc.pc(), 0xb67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67a), 0xcb);
        EXPECT(gbc.readMem(0xb67b), 0x29);
        // CB 29 0162
        gbc.setState(0x336, 0xe1a8, 0x6460, 0xfa12, 0xa5a1, 0x35e9, 0x1, 0x1);
        gbc.writeMem(0x336, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe1a8);
        EXPECT(gbc.pc(), 0x338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0164
        gbc.setState(0x3d2f, 0xd24c, 0xdbf0, 0x1500, 0xd32f, 0x10b8, 0x0, 0x0);
        gbc.writeMem(0x3d2f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd24c);
        EXPECT(gbc.pc(), 0x3d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0165
        gbc.setState(0x14ea, 0x59d2, 0x9640, 0xfd75, 0x68a1, 0xd3bd, 0x1, 0x1);
        gbc.writeMem(0x14ea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x59d2);
        EXPECT(gbc.pc(), 0x14ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0166
        gbc.setState(0x2c77, 0xe2f6, 0x3e10, 0xdccb, 0xf905, 0x6e81, 0x1, 0x1);
        gbc.writeMem(0x2c77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe2f6);
        EXPECT(gbc.pc(), 0x2c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0167
        gbc.setState(0x60ad, 0xb54c, 0x6a70, 0xd6c1, 0x5eec, 0x4b80, 0x1, 0x1);
        gbc.writeMem(0x60ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb54c);
        EXPECT(gbc.pc(), 0x60af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0168
        gbc.setState(0x3c9, 0x55ca, 0xe3d0, 0x41a1, 0x2623, 0x86da, 0x1, 0x0);
        gbc.writeMem(0x3c9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x55ca);
        EXPECT(gbc.pc(), 0x3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0169
        gbc.setState(0xd3f8, 0x8eb5, 0x3160, 0x4277, 0x2505, 0x1fc7, 0x1, 0x0);
        gbc.writeMem(0xd3f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8eb5);
        EXPECT(gbc.pc(), 0xd3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f8), 0xcb);
        EXPECT(gbc.readMem(0xd3f9), 0x29);
        // CB 29 016A
        gbc.setState(0x58de, 0xb531, 0x4900, 0x99e3, 0x8b2f, 0x374a, 0x1, 0x0);
        gbc.writeMem(0x58de, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb531);
        EXPECT(gbc.pc(), 0x58e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 016B
        gbc.setState(0x6d8d, 0x5389, 0x17f0, 0xe5e6, 0xdaf0, 0xc78e, 0x0, 0x0);
        gbc.writeMem(0x6d8d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0x6d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 016C
        gbc.setState(0xe8bc, 0xbfdb, 0x8590, 0xe5df, 0x6836, 0x560a, 0x1, 0x0);
        gbc.writeMem(0xe8bc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbfdb);
        EXPECT(gbc.pc(), 0xe8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8bc), 0xcb);
        EXPECT(gbc.readMem(0xe8bd), 0x29);
        // CB 29 016D
        gbc.setState(0xb1fc, 0x99ab, 0xe9b0, 0x8e03, 0xd9eb, 0x6da9, 0x0, 0x0);
        gbc.writeMem(0xb1fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x99ab);
        EXPECT(gbc.pc(), 0xb1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1fc), 0xcb);
        EXPECT(gbc.readMem(0xb1fd), 0x29);
        // CB 29 016E
        gbc.setState(0x3b74, 0xd86c, 0xd720, 0x2dbb, 0xc8a7, 0x91ec, 0x0, 0x0);
        gbc.writeMem(0x3b74, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x3b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 016F
        gbc.setState(0x39f7, 0x9cf7, 0xd190, 0x51fa, 0xe3ba, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0x39f7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9cf7);
        EXPECT(gbc.pc(), 0x39f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0170
        gbc.setState(0xe4f7, 0x3af5, 0x53e0, 0x60cc, 0xd7e6, 0x2aad, 0x0, 0x1);
        gbc.writeMem(0xe4f7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3af5);
        EXPECT(gbc.pc(), 0xe4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f7), 0xcb);
        EXPECT(gbc.readMem(0xe4f8), 0x29);
        // CB 29 0171
        gbc.setState(0xbf86, 0x9412, 0xb820, 0xed75, 0xde33, 0xc1f2, 0x1, 0x1);
        gbc.writeMem(0xbf86, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9412);
        EXPECT(gbc.pc(), 0xbf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf86), 0xcb);
        EXPECT(gbc.readMem(0xbf87), 0x29);
        // CB 29 0173
        gbc.setState(0x6af6, 0x3e73, 0x7140, 0x4575, 0xb56f, 0x6161, 0x0, 0x0);
        gbc.writeMem(0x6af6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3e73);
        EXPECT(gbc.pc(), 0x6af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0174
        gbc.setState(0xc9db, 0x4938, 0x1b00, 0xf384, 0xeeb6, 0xf163, 0x0, 0x0);
        gbc.writeMem(0xc9db, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4938);
        EXPECT(gbc.pc(), 0xc9dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9db), 0xcb);
        EXPECT(gbc.readMem(0xc9dc), 0x29);
        // CB 29 0175
        gbc.setState(0x7392, 0xf6c7, 0x9aa0, 0x6ddb, 0x4a4, 0x93a1, 0x1, 0x0);
        gbc.writeMem(0x7392, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf6c7);
        EXPECT(gbc.pc(), 0x7394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0176
        gbc.setState(0xd12d, 0xc23a, 0x80a0, 0x2503, 0xb232, 0xb380, 0x0, 0x1);
        gbc.writeMem(0xd12d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc23a);
        EXPECT(gbc.pc(), 0xd12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12d), 0xcb);
        EXPECT(gbc.readMem(0xd12e), 0x29);
        // CB 29 0177
        gbc.setState(0x45ef, 0xfeba, 0x9bc0, 0xa09f, 0x547d, 0xb7c2, 0x1, 0x1);
        gbc.writeMem(0x45ef, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x45f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0178
        gbc.setState(0xe62d, 0x3010, 0x2990, 0x4b61, 0xa4ef, 0xbbb2, 0x1, 0x0);
        gbc.writeMem(0xe62d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3010);
        EXPECT(gbc.pc(), 0xe62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62d), 0xcb);
        EXPECT(gbc.readMem(0xe62e), 0x29);
        // CB 29 0179
        gbc.setState(0x5ce0, 0x5fd6, 0xd3d0, 0x238f, 0x13db, 0xd797, 0x1, 0x1);
        gbc.writeMem(0x5ce0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x5ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 017A
        gbc.setState(0xec8, 0x8a05, 0xad70, 0x18c2, 0x4293, 0x53df, 0x0, 0x1);
        gbc.writeMem(0xec8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8a05);
        EXPECT(gbc.pc(), 0xeca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 017B
        gbc.setState(0x41e3, 0x836d, 0x7030, 0x22a4, 0x8cf5, 0xaedb, 0x0, 0x0);
        gbc.writeMem(0x41e3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x836d);
        EXPECT(gbc.pc(), 0x41e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 017C
        gbc.setState(0x489, 0x762f, 0xfb90, 0x3905, 0x2d99, 0x492d, 0x1, 0x0);
        gbc.writeMem(0x489, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x762f);
        EXPECT(gbc.pc(), 0x48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 017D
        gbc.setState(0x43c6, 0x2e63, 0x3070, 0x3fae, 0xb0cc, 0xa54b, 0x1, 0x0);
        gbc.writeMem(0x43c6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2e63);
        EXPECT(gbc.pc(), 0x43c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 017E
        gbc.setState(0x7c32, 0x25c2, 0xdb30, 0xd335, 0x99c7, 0x3758, 0x0, 0x1);
        gbc.writeMem(0x7c32, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x25c2);
        EXPECT(gbc.pc(), 0x7c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 017F
        gbc.setState(0x7c5, 0x3672, 0x22d0, 0x882b, 0x3bf7, 0x60c1, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3672);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0180
        gbc.setState(0x209f, 0xfc27, 0xc620, 0x6cdb, 0x9b40, 0x4425, 0x1, 0x0);
        gbc.writeMem(0x209f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfc27);
        EXPECT(gbc.pc(), 0x20a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0181
        gbc.setState(0x204d, 0x6e00, 0xc5b0, 0x6c8a, 0x61b2, 0x4cb6, 0x1, 0x1);
        gbc.writeMem(0x204d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6e00);
        EXPECT(gbc.pc(), 0x204f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0183
        gbc.setState(0xb270, 0xb38f, 0xd180, 0x4833, 0xf59, 0x998a, 0x0, 0x1);
        gbc.writeMem(0xb270, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb38f);
        EXPECT(gbc.pc(), 0xb272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb270), 0xcb);
        EXPECT(gbc.readMem(0xb271), 0x29);
        // CB 29 0184
        gbc.setState(0xe77a, 0xfa8a, 0x1360, 0x866b, 0x8804, 0xd08c, 0x1, 0x1);
        gbc.writeMem(0xe77a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfa8a);
        EXPECT(gbc.pc(), 0xe77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77a), 0xcb);
        EXPECT(gbc.readMem(0xe77b), 0x29);
        // CB 29 0185
        gbc.setState(0x7b15, 0xcb9a, 0x100, 0xb9f5, 0xe2cb, 0x2791, 0x0, 0x1);
        gbc.writeMem(0x7b15, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0x7b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0186
        gbc.setState(0x4e02, 0xd224, 0x4120, 0x87be, 0x40c4, 0x2557, 0x1, 0x1);
        gbc.writeMem(0x4e02, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd224);
        EXPECT(gbc.pc(), 0x4e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0187
        gbc.setState(0x5b3c, 0x686, 0x3bd0, 0x2ca8, 0xd985, 0xcdb5, 0x1, 0x1);
        gbc.writeMem(0x5b3c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x686);
        EXPECT(gbc.pc(), 0x5b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0188
        gbc.setState(0xc70d, 0x41e3, 0xc580, 0x2a7, 0xcf3, 0xe58e, 0x0, 0x0);
        gbc.writeMem(0xc70d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x41e3);
        EXPECT(gbc.pc(), 0xc70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70d), 0xcb);
        EXPECT(gbc.readMem(0xc70e), 0x29);
        // CB 29 018A
        gbc.setState(0x2759, 0xc7c9, 0xa580, 0xec2a, 0x63da, 0x39d2, 0x1, 0x1);
        gbc.writeMem(0x2759, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc7c9);
        EXPECT(gbc.pc(), 0x275b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 018B
        gbc.setState(0xbd9d, 0xd05c, 0x6420, 0x466d, 0xb848, 0x8b32, 0x0, 0x1);
        gbc.writeMem(0xbd9d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd05c);
        EXPECT(gbc.pc(), 0xbd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9d), 0xcb);
        EXPECT(gbc.readMem(0xbd9e), 0x29);
        // CB 29 018C
        gbc.setState(0x357, 0x86a4, 0x8060, 0xab6b, 0xf2c7, 0xacd4, 0x0, 0x0);
        gbc.writeMem(0x357, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0x359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 018D
        gbc.setState(0x412f, 0x5e61, 0x2340, 0x81ab, 0xcbe5, 0x9e8b, 0x0, 0x0);
        gbc.writeMem(0x412f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e61);
        EXPECT(gbc.pc(), 0x4131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 018E
        gbc.setState(0x6faa, 0x83a4, 0x9a60, 0x7a00, 0xf1b6, 0x68ce, 0x1, 0x1);
        gbc.writeMem(0x6faa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x83a4);
        EXPECT(gbc.pc(), 0x6fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 018F
        gbc.setState(0x4430, 0x938a, 0x6dd0, 0xf53c, 0x4b1, 0xa152, 0x0, 0x0);
        gbc.writeMem(0x4430, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x938a);
        EXPECT(gbc.pc(), 0x4432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0190
        gbc.setState(0xa4c0, 0xe726, 0xcd60, 0x78a4, 0x5e15, 0x1d03, 0x0, 0x1);
        gbc.writeMem(0xa4c0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe726);
        EXPECT(gbc.pc(), 0xa4c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c0), 0xcb);
        EXPECT(gbc.readMem(0xa4c1), 0x29);
        // CB 29 0191
        gbc.setState(0x66de, 0xbbd0, 0x1ae0, 0xa09d, 0x4ec3, 0xd6fc, 0x1, 0x1);
        gbc.writeMem(0x66de, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbbd0);
        EXPECT(gbc.pc(), 0x66e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0192
        gbc.setState(0x6849, 0xeb63, 0x6d40, 0xa2e7, 0xe0e2, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xeb63);
        EXPECT(gbc.pc(), 0x684b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0193
        gbc.setState(0xa4b8, 0x3ecf, 0x3a40, 0xdbfb, 0xcfdd, 0xb50c, 0x1, 0x1);
        gbc.writeMem(0xa4b8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3ecf);
        EXPECT(gbc.pc(), 0xa4ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b8), 0xcb);
        EXPECT(gbc.readMem(0xa4b9), 0x29);
        // CB 29 0194
        gbc.setState(0x716b, 0x999, 0x49b0, 0x1b9f, 0xf67d, 0x776d, 0x0, 0x0);
        gbc.writeMem(0x716b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x999);
        EXPECT(gbc.pc(), 0x716d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0195
        gbc.setState(0xa551, 0x64da, 0xb520, 0x9f79, 0x8b23, 0xf342, 0x1, 0x0);
        gbc.writeMem(0xa551, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x64da);
        EXPECT(gbc.pc(), 0xa553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa551), 0xcb);
        EXPECT(gbc.readMem(0xa552), 0x29);
        // CB 29 0196
        gbc.setState(0x45c4, 0xf1d0, 0x6ba0, 0xf5bf, 0xa8, 0x7c28, 0x0, 0x1);
        gbc.writeMem(0x45c4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf1d0);
        EXPECT(gbc.pc(), 0x45c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0197
        gbc.setState(0x53ab, 0x196a, 0x26b0, 0xdb37, 0xeffb, 0xad8e, 0x1, 0x0);
        gbc.writeMem(0x53ab, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x196a);
        EXPECT(gbc.pc(), 0x53ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0198
        gbc.setState(0x763d, 0xc9f5, 0x6450, 0xb1fc, 0x3eb6, 0x9246, 0x0, 0x0);
        gbc.writeMem(0x763d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc9f5);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0199
        gbc.setState(0xbd7b, 0x30d9, 0x440, 0xaaa9, 0xf693, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xbd7b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x30d9);
        EXPECT(gbc.pc(), 0xbd7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7b), 0xcb);
        EXPECT(gbc.readMem(0xbd7c), 0x29);
        // CB 29 019A
        gbc.setState(0x17c7, 0x55c0, 0xff0, 0x6222, 0x1ba6, 0x2773, 0x1, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x55c0);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 019B
        gbc.setState(0x307f, 0x87db, 0x80c0, 0x6dd2, 0xb73d, 0x4fc1, 0x0, 0x1);
        gbc.writeMem(0x307f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x3081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 019C
        gbc.setState(0xaf3d, 0x8dd9, 0xee90, 0xa083, 0xd636, 0x7622, 0x0, 0x0);
        gbc.writeMem(0xaf3d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8dd9);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3d), 0xcb);
        EXPECT(gbc.readMem(0xaf3e), 0x29);
        // CB 29 019D
        gbc.setState(0x78e6, 0x597d, 0xea20, 0xc629, 0xefeb, 0x894, 0x1, 0x1);
        gbc.writeMem(0x78e6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x597d);
        EXPECT(gbc.pc(), 0x78e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 019E
        gbc.setState(0x1be9, 0xaa2c, 0x2e70, 0xdf13, 0x69b0, 0xf91, 0x1, 0x0);
        gbc.writeMem(0x1be9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaa2c);
        EXPECT(gbc.pc(), 0x1beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 019F
        gbc.setState(0xa049, 0x69e5, 0x55b0, 0xe171, 0xa293, 0x16f1, 0x0, 0x1);
        gbc.writeMem(0xa049, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x69e5);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa049), 0xcb);
        EXPECT(gbc.readMem(0xa04a), 0x29);
        // CB 29 01A0
        gbc.setState(0x8565, 0x7150, 0x64b0, 0xf1ea, 0x7bf7, 0xa3a4, 0x1, 0x0);
        gbc.writeMem(0x8565, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7150);
        EXPECT(gbc.pc(), 0x8567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8565), 0xcb);
        EXPECT(gbc.readMem(0x8566), 0x29);
        // CB 29 01A1
        gbc.setState(0x68bb, 0x1860, 0xb0f0, 0x760e, 0xddba, 0x57f7, 0x0, 0x1);
        gbc.writeMem(0x68bb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1860);
        EXPECT(gbc.pc(), 0x68bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01A2
        gbc.setState(0x26ca, 0x991f, 0x29e0, 0x51fb, 0x6d9a, 0x9418, 0x0, 0x0);
        gbc.writeMem(0x26ca, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x991f);
        EXPECT(gbc.pc(), 0x26cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01A4
        gbc.setState(0x469, 0x84e4, 0xbb20, 0xd9b6, 0x382c, 0xe6f1, 0x1, 0x0);
        gbc.writeMem(0x469, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x84e4);
        EXPECT(gbc.pc(), 0x46b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01A5
        gbc.setState(0xbb2a, 0x7c81, 0xec60, 0x15c, 0xe5d8, 0xae44, 0x1, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7c81);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0x29);
        // CB 29 01A7
        gbc.setState(0x8a39, 0xa22e, 0x2520, 0x57a, 0x3bfa, 0x65b, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa22e);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0x29);
        // CB 29 01A8
        gbc.setState(0x6f01, 0x114c, 0xb170, 0x358d, 0xe97c, 0x4173, 0x1, 0x1);
        gbc.writeMem(0x6f01, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x114c);
        EXPECT(gbc.pc(), 0x6f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01A9
        gbc.setState(0x718e, 0x3df1, 0x7600, 0x7e98, 0x61ec, 0x9035, 0x0, 0x1);
        gbc.writeMem(0x718e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3df1);
        EXPECT(gbc.pc(), 0x7190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01AA
        gbc.setState(0xa0af, 0x2d22, 0xdc90, 0x3829, 0x2650, 0x85c5, 0x1, 0x0);
        gbc.writeMem(0xa0af, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2d22);
        EXPECT(gbc.pc(), 0xa0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0af), 0xcb);
        EXPECT(gbc.readMem(0xa0b0), 0x29);
        // CB 29 01AB
        gbc.setState(0x266e, 0x8443, 0x2500, 0x760c, 0xd7c2, 0xd91c, 0x0, 0x1);
        gbc.writeMem(0x266e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8443);
        EXPECT(gbc.pc(), 0x2670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01AC
        gbc.setState(0x33c7, 0xfdb, 0xc0c0, 0x1ac7, 0xac44, 0xee89, 0x1, 0x1);
        gbc.writeMem(0x33c7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfdb);
        EXPECT(gbc.pc(), 0x33c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01AD
        gbc.setState(0xb5d4, 0x969e, 0x2330, 0xb78f, 0x5134, 0x148e, 0x1, 0x1);
        gbc.writeMem(0xb5d4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x969e);
        EXPECT(gbc.pc(), 0xb5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d4), 0xcb);
        EXPECT(gbc.readMem(0xb5d5), 0x29);
        // CB 29 01AE
        gbc.setState(0xe2c4, 0xf377, 0x8c0, 0x1651, 0x12db, 0x1aaa, 0x1, 0x0);
        gbc.writeMem(0xe2c4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf377);
        EXPECT(gbc.pc(), 0xe2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c4), 0xcb);
        EXPECT(gbc.readMem(0xe2c5), 0x29);
        // CB 29 01AF
        gbc.setState(0xadc2, 0x2752, 0xf450, 0xbcaf, 0xd727, 0xbe33, 0x1, 0x1);
        gbc.writeMem(0xadc2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2752);
        EXPECT(gbc.pc(), 0xadc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc2), 0xcb);
        EXPECT(gbc.readMem(0xadc3), 0x29);
        // CB 29 01B1
        gbc.setState(0x1026, 0x630f, 0x6120, 0xbef1, 0x4ef2, 0x4846, 0x0, 0x1);
        gbc.writeMem(0x1026, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x630f);
        EXPECT(gbc.pc(), 0x1028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01B2
        gbc.setState(0x752d, 0x499c, 0xd9e0, 0x7ca8, 0x7e8d, 0x2446, 0x1, 0x0);
        gbc.writeMem(0x752d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x499c);
        EXPECT(gbc.pc(), 0x752f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01B3
        gbc.setState(0x7ab2, 0x5b9, 0x4f00, 0x93f6, 0xe154, 0x46cf, 0x1, 0x1);
        gbc.writeMem(0x7ab2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5b9);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01B4
        gbc.setState(0x1db7, 0xdbe7, 0x8710, 0x650b, 0x4251, 0xd9, 0x0, 0x0);
        gbc.writeMem(0x1db7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdbe7);
        EXPECT(gbc.pc(), 0x1db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01B5
        gbc.setState(0xc87b, 0x38ed, 0x3730, 0xf1d5, 0xd798, 0xaf7d, 0x1, 0x0);
        gbc.writeMem(0xc87b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x38ed);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87b), 0xcb);
        EXPECT(gbc.readMem(0xc87c), 0x29);
        // CB 29 01B6
        gbc.setState(0x2d5, 0xff86, 0xe440, 0xfda7, 0xc178, 0xd62f, 0x1, 0x1);
        gbc.writeMem(0x2d5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xff86);
        EXPECT(gbc.pc(), 0x2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01B7
        gbc.setState(0x7f53, 0x3ab8, 0xc340, 0x5f37, 0xafe8, 0xa2d6, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3ab8);
        EXPECT(gbc.pc(), 0x7f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01B8
        gbc.setState(0x853, 0xeb9d, 0xf550, 0x8cec, 0x84b5, 0x4377, 0x0, 0x0);
        gbc.writeMem(0x853, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeb9d);
        EXPECT(gbc.pc(), 0x855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01B9
        gbc.setState(0x9f6f, 0x659f, 0xcf90, 0x4517, 0xe85b, 0xcf6, 0x0, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0x9f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6f), 0xcb);
        EXPECT(gbc.readMem(0x9f70), 0x29);
        // CB 29 01BA
        gbc.setState(0x6c12, 0xf0de, 0xb090, 0xdb26, 0xb7b2, 0x5226, 0x1, 0x0);
        gbc.writeMem(0x6c12, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf0de);
        EXPECT(gbc.pc(), 0x6c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01BB
        gbc.setState(0xe84b, 0x74be, 0x6790, 0x1a13, 0x535, 0xa14f, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x74be);
        EXPECT(gbc.pc(), 0xe84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84b), 0xcb);
        EXPECT(gbc.readMem(0xe84c), 0x29);
        // CB 29 01BC
        gbc.setState(0x7bad, 0x491d, 0x6400, 0x1, 0x4b01, 0x698a, 0x1, 0x0);
        gbc.writeMem(0x7bad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x491d);
        EXPECT(gbc.pc(), 0x7baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01BD
        gbc.setState(0xa91e, 0xc299, 0x1170, 0xca8b, 0x2852, 0x9340, 0x1, 0x0);
        gbc.writeMem(0xa91e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc299);
        EXPECT(gbc.pc(), 0xa920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91e), 0xcb);
        EXPECT(gbc.readMem(0xa91f), 0x29);
        // CB 29 01BE
        gbc.setState(0x1b06, 0xd3ab, 0xe8d0, 0x8557, 0xac69, 0x509c, 0x1, 0x0);
        gbc.writeMem(0x1b06, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd3ab);
        EXPECT(gbc.pc(), 0x1b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01BF
        gbc.setState(0x3996, 0x56b0, 0xe990, 0xc367, 0xc847, 0x6350, 0x0, 0x0);
        gbc.writeMem(0x3996, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x56b0);
        EXPECT(gbc.pc(), 0x3998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01C0
        gbc.setState(0x3f9a, 0xd741, 0x2e10, 0xe3b4, 0x67a5, 0x56f4, 0x1, 0x0);
        gbc.writeMem(0x3f9a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd741);
        EXPECT(gbc.pc(), 0x3f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01C1
        gbc.setState(0xbea, 0xfe26, 0x3bb0, 0xdaa3, 0xf45, 0x2f00, 0x0, 0x1);
        gbc.writeMem(0xbea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfe26);
        EXPECT(gbc.pc(), 0xbec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01C2
        gbc.setState(0x5abe, 0x292d, 0x4b00, 0x5f04, 0x450f, 0xd831, 0x1, 0x0);
        gbc.writeMem(0x5abe, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x292d);
        EXPECT(gbc.pc(), 0x5ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01C3
        gbc.setState(0x93d6, 0x962a, 0x6c60, 0xf971, 0x85df, 0xe2a0, 0x0, 0x0);
        gbc.writeMem(0x93d6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x962a);
        EXPECT(gbc.pc(), 0x93d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d6), 0xcb);
        EXPECT(gbc.readMem(0x93d7), 0x29);
        // CB 29 01C4
        gbc.setState(0x1c67, 0x51b3, 0x8070, 0xea6, 0xaa7b, 0xd416, 0x0, 0x0);
        gbc.writeMem(0x1c67, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0x1c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01C5
        gbc.setState(0x92e3, 0x828c, 0xf070, 0x1cce, 0x3cee, 0xdbea, 0x0, 0x0);
        gbc.writeMem(0x92e3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x828c);
        EXPECT(gbc.pc(), 0x92e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e3), 0xcb);
        EXPECT(gbc.readMem(0x92e4), 0x29);
        // CB 29 01C7
        gbc.setState(0x66e7, 0x5d91, 0x5e60, 0xb04f, 0xff63, 0x6ff0, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5d91);
        EXPECT(gbc.pc(), 0x66e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01C8
        gbc.setState(0xb6dc, 0x4455, 0xed80, 0x4e60, 0x13cf, 0xfcf, 0x1, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4455);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0x29);
        // CB 29 01C9
        gbc.setState(0x12c3, 0xc24c, 0x3de0, 0x87a9, 0x812f, 0x3ed9, 0x0, 0x1);
        gbc.writeMem(0x12c3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc24c);
        EXPECT(gbc.pc(), 0x12c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01CA
        gbc.setState(0x7c0c, 0xd9f6, 0xcc50, 0x8560, 0xb11, 0x2413, 0x1, 0x1);
        gbc.writeMem(0x7c0c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd9f6);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01CB
        gbc.setState(0xba6d, 0xf49e, 0x5060, 0xd879, 0xa4bc, 0x3320, 0x1, 0x1);
        gbc.writeMem(0xba6d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf49e);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6d), 0xcb);
        EXPECT(gbc.readMem(0xba6e), 0x29);
        // CB 29 01CC
        gbc.setState(0xbecc, 0x3f37, 0x6a80, 0xf6b3, 0x16b0, 0xb5e5, 0x0, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3f37);
        EXPECT(gbc.pc(), 0xbece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbecc), 0xcb);
        EXPECT(gbc.readMem(0xbecd), 0x29);
        // CB 29 01CD
        gbc.setState(0x67fa, 0xe6ce, 0x9e70, 0xc067, 0xb44, 0xe60b, 0x0, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe6ce);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01CE
        gbc.setState(0x8312, 0x34ea, 0x4420, 0x103f, 0xce5b, 0xc8e0, 0x0, 0x0);
        gbc.writeMem(0x8312, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x34ea);
        EXPECT(gbc.pc(), 0x8314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8312), 0xcb);
        EXPECT(gbc.readMem(0x8313), 0x29);
        // CB 29 01CF
        gbc.setState(0xbb38, 0x82b8, 0x5d50, 0xaac8, 0x7288, 0xeefb, 0x1, 0x0);
        gbc.writeMem(0xbb38, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x82b8);
        EXPECT(gbc.pc(), 0xbb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb38), 0xcb);
        EXPECT(gbc.readMem(0xbb39), 0x29);
        // CB 29 01D1
        gbc.setState(0x55db, 0xc775, 0x4f50, 0x3687, 0x7020, 0x7f46, 0x1, 0x1);
        gbc.writeMem(0x55db, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc775);
        EXPECT(gbc.pc(), 0x55dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01D2
        gbc.setState(0x6751, 0x1521, 0x1260, 0x8d40, 0x56aa, 0x1f52, 0x1, 0x0);
        gbc.writeMem(0x6751, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1521);
        EXPECT(gbc.pc(), 0x6753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01D3
        gbc.setState(0x54f4, 0xb747, 0xa9d0, 0xe373, 0x10b2, 0xbe1b, 0x0, 0x0);
        gbc.writeMem(0x54f4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb747);
        EXPECT(gbc.pc(), 0x54f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01D6
        gbc.setState(0xa9c0, 0xa7a5, 0xd070, 0xf564, 0x9f56, 0xebc, 0x1, 0x0);
        gbc.writeMem(0xa9c0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa7a5);
        EXPECT(gbc.pc(), 0xa9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c0), 0xcb);
        EXPECT(gbc.readMem(0xa9c1), 0x29);
        // CB 29 01D7
        gbc.setState(0x3a7c, 0x61ce, 0xa710, 0x3d8, 0x3942, 0x6b7, 0x1, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x61ce);
        EXPECT(gbc.pc(), 0x3a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01D8
        gbc.setState(0xa12a, 0xc6d8, 0xe70, 0xa2c3, 0x62c4, 0xbc66, 0x0, 0x1);
        gbc.writeMem(0xa12a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc6d8);
        EXPECT(gbc.pc(), 0xa12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12a), 0xcb);
        EXPECT(gbc.readMem(0xa12b), 0x29);
        // CB 29 01D9
        gbc.setState(0x251f, 0xf35c, 0x1630, 0xbd82, 0xf621, 0xb86a, 0x0, 0x0);
        gbc.writeMem(0x251f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf35c);
        EXPECT(gbc.pc(), 0x2521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01DA
        gbc.setState(0xb73b, 0x10f3, 0xd4e0, 0x163c, 0x1d5e, 0x3c6a, 0x0, 0x1);
        gbc.writeMem(0xb73b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x10f3);
        EXPECT(gbc.pc(), 0xb73d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73b), 0xcb);
        EXPECT(gbc.readMem(0xb73c), 0x29);
        // CB 29 01DC
        gbc.setState(0x5257, 0x84fc, 0xe6a0, 0x3d99, 0x8fa6, 0xffbf, 0x0, 0x0);
        gbc.writeMem(0x5257, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x84fc);
        EXPECT(gbc.pc(), 0x5259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01DE
        gbc.setState(0xd20c, 0xef17, 0x12e0, 0x9387, 0x27ef, 0x8193, 0x0, 0x1);
        gbc.writeMem(0xd20c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xef17);
        EXPECT(gbc.pc(), 0xd20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20c), 0xcb);
        EXPECT(gbc.readMem(0xd20d), 0x29);
        // CB 29 01DF
        gbc.setState(0x4712, 0xca0e, 0xad10, 0x8ebc, 0x69eb, 0x98a0, 0x0, 0x1);
        gbc.writeMem(0x4712, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xca0e);
        EXPECT(gbc.pc(), 0x4714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01E0
        gbc.setState(0xc8b3, 0xd99f, 0x5220, 0x3972, 0x150b, 0xd24a, 0x1, 0x1);
        gbc.writeMem(0xc8b3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd99f);
        EXPECT(gbc.pc(), 0xc8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b3), 0xcb);
        EXPECT(gbc.readMem(0xc8b4), 0x29);
        // CB 29 01E1
        gbc.setState(0xab9c, 0x2bd, 0x6650, 0x591b, 0xad40, 0xb701, 0x0, 0x1);
        gbc.writeMem(0xab9c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2bd);
        EXPECT(gbc.pc(), 0xab9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9c), 0xcb);
        EXPECT(gbc.readMem(0xab9d), 0x29);
        // CB 29 01E2
        gbc.setState(0xac43, 0xfcc9, 0xb1c0, 0x7271, 0xc0f0, 0x7e56, 0x0, 0x0);
        gbc.writeMem(0xac43, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfcc9);
        EXPECT(gbc.pc(), 0xac45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac43), 0xcb);
        EXPECT(gbc.readMem(0xac44), 0x29);
        // CB 29 01E3
        gbc.setState(0xd76e, 0xa488, 0xb960, 0x89ca, 0x51c6, 0x9241, 0x1, 0x1);
        gbc.writeMem(0xd76e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa488);
        EXPECT(gbc.pc(), 0xd770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76e), 0xcb);
        EXPECT(gbc.readMem(0xd76f), 0x29);
        // CB 29 01E5
        gbc.setState(0x40f8, 0x4822, 0x89b0, 0xbf49, 0x7695, 0xb506, 0x0, 0x0);
        gbc.writeMem(0x40f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4822);
        EXPECT(gbc.pc(), 0x40fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01E6
        gbc.setState(0x90e0, 0xce8f, 0xe1f0, 0x395c, 0xf3f, 0xc950, 0x1, 0x0);
        gbc.writeMem(0x90e0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xce8f);
        EXPECT(gbc.pc(), 0x90e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e0), 0xcb);
        EXPECT(gbc.readMem(0x90e1), 0x29);
        // CB 29 01E7
        gbc.setState(0x9fa7, 0x6514, 0x7970, 0xa0d9, 0x8e79, 0x3f10, 0x0, 0x0);
        gbc.writeMem(0x9fa7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6514);
        EXPECT(gbc.pc(), 0x9fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa7), 0xcb);
        EXPECT(gbc.readMem(0x9fa8), 0x29);
        // CB 29 01E8
        gbc.setState(0x53dc, 0xe4e5, 0xe360, 0x6bcf, 0x6fa, 0x206b, 0x0, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe4e5);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01E9
        gbc.setState(0x10a8, 0x607, 0x3be0, 0x3e6, 0x2f05, 0x382e, 0x0, 0x1);
        gbc.writeMem(0x10a8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x607);
        EXPECT(gbc.pc(), 0x10aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01EA
        gbc.setState(0x5e24, 0xf229, 0x1960, 0x896e, 0xf1b3, 0x201d, 0x0, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf229);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01EB
        gbc.setState(0x7c50, 0xe1a5, 0x1530, 0x627e, 0xd64, 0x3fe1, 0x0, 0x0);
        gbc.writeMem(0x7c50, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0x7c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01EC
        gbc.setState(0xbfe7, 0xaa62, 0x83b0, 0xfa9c, 0x4213, 0x83dc, 0x0, 0x1);
        gbc.writeMem(0xbfe7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xaa62);
        EXPECT(gbc.pc(), 0xbfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe7), 0xcb);
        EXPECT(gbc.readMem(0xbfe8), 0x29);
        // CB 29 01ED
        gbc.setState(0xb4b9, 0x4408, 0x5b20, 0x2f5f, 0x23e2, 0x994c, 0x1, 0x0);
        gbc.writeMem(0xb4b9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4408);
        EXPECT(gbc.pc(), 0xb4bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b9), 0xcb);
        EXPECT(gbc.readMem(0xb4ba), 0x29);
        // CB 29 01EE
        gbc.setState(0xc5b3, 0x2789, 0x35f0, 0x89b6, 0xadab, 0x6973, 0x1, 0x0);
        gbc.writeMem(0xc5b3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2789);
        EXPECT(gbc.pc(), 0xc5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b3), 0xcb);
        EXPECT(gbc.readMem(0xc5b4), 0x29);
        // CB 29 01EF
        gbc.setState(0x1288, 0x7f7b, 0xe4b0, 0xa375, 0x59f9, 0x5cea, 0x1, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7f7b);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01F0
        gbc.setState(0x2aa5, 0xcf65, 0xdd80, 0x86dc, 0xdf58, 0x7e82, 0x0, 0x1);
        gbc.writeMem(0x2aa5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcf65);
        EXPECT(gbc.pc(), 0x2aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01F1
        gbc.setState(0xa74b, 0x929d, 0xd3b0, 0x6e85, 0xb59c, 0x81d4, 0x0, 0x1);
        gbc.writeMem(0xa74b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x929d);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74b), 0xcb);
        EXPECT(gbc.readMem(0xa74c), 0x29);
        // CB 29 01F2
        gbc.setState(0xbad5, 0xf4a9, 0x6ca0, 0x6775, 0xfa8a, 0x358f, 0x1, 0x1);
        gbc.writeMem(0xbad5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf4a9);
        EXPECT(gbc.pc(), 0xbad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad5), 0xcb);
        EXPECT(gbc.readMem(0xbad6), 0x29);
        // CB 29 01F3
        gbc.setState(0xb03, 0x6d9b, 0xfb60, 0xb77b, 0xac53, 0x17a3, 0x0, 0x1);
        gbc.writeMem(0xb03, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6d9b);
        EXPECT(gbc.pc(), 0xb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01F5
        gbc.setState(0x7872, 0xa410, 0x13a0, 0x3e84, 0x310c, 0xd6fc, 0x0, 0x0);
        gbc.writeMem(0x7872, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa410);
        EXPECT(gbc.pc(), 0x7874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01F6
        gbc.setState(0xa428, 0xb62c, 0x56e0, 0xf1c8, 0x96ed, 0x6060, 0x1, 0x0);
        gbc.writeMem(0xa428, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb62c);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0x29);
        // CB 29 01F7
        gbc.setState(0x6e14, 0x9f8e, 0xf800, 0x84c6, 0xd046, 0x5d13, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9f8e);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01F8
        gbc.setState(0x798d, 0x9ee1, 0x9bd0, 0x759, 0x56a3, 0x3e2c, 0x1, 0x0);
        gbc.writeMem(0x798d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0x798f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01F9
        gbc.setState(0x7b9d, 0xc2ec, 0xec30, 0x1c75, 0x2711, 0x85e1, 0x1, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc2ec);
        EXPECT(gbc.pc(), 0x7b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01FA
        gbc.setState(0x9732, 0xe232, 0x7450, 0x9a9b, 0xbdd9, 0x7833, 0x1, 0x0);
        gbc.writeMem(0x9732, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe232);
        EXPECT(gbc.pc(), 0x9734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9732), 0xcb);
        EXPECT(gbc.readMem(0x9733), 0x29);
        // CB 29 01FB
        gbc.setState(0x1dac, 0xa066, 0xa90, 0x9d70, 0x251f, 0x566a, 0x0, 0x1);
        gbc.writeMem(0x1dac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa066);
        EXPECT(gbc.pc(), 0x1dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 01FC
        gbc.setState(0x63e, 0x2ee4, 0xfb40, 0xa811, 0x1d3a, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x63e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2ee4);
        EXPECT(gbc.pc(), 0x640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01FD
        gbc.setState(0x6e03, 0xe9fd, 0xa7e0, 0x95b, 0xd2b8, 0xff8c, 0x1, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe9fd);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 01FE
        gbc.setState(0xb0bb, 0x18c6, 0x6910, 0xe216, 0xea9b, 0x8071, 0x1, 0x0);
        gbc.writeMem(0xb0bb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x18c6);
        EXPECT(gbc.pc(), 0xb0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0bb), 0xcb);
        EXPECT(gbc.readMem(0xb0bc), 0x29);
        // CB 29 01FF
        gbc.setState(0xc26d, 0x9bf6, 0x1f20, 0xefdd, 0x5ede, 0x4c38, 0x0, 0x1);
        gbc.writeMem(0xc26d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9bf6);
        EXPECT(gbc.pc(), 0xc26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26d), 0xcb);
        EXPECT(gbc.readMem(0xc26e), 0x29);
        // CB 29 0200
        gbc.setState(0x93e5, 0x4ad1, 0xa7c0, 0xc8ab, 0x1bdc, 0x485f, 0x1, 0x0);
        gbc.writeMem(0x93e5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e5), 0xcb);
        EXPECT(gbc.readMem(0x93e6), 0x29);
        // CB 29 0201
        gbc.setState(0x6a4f, 0xab04, 0x5580, 0x8fc0, 0x9f0b, 0x4f2a, 0x0, 0x0);
        gbc.writeMem(0x6a4f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xab04);
        EXPECT(gbc.pc(), 0x6a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0202
        gbc.setState(0xc4a, 0xfb3, 0xbf00, 0x3da1, 0xc9a, 0x4183, 0x0, 0x0);
        gbc.writeMem(0xc4a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfb3);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0203
        gbc.setState(0xd041, 0x2821, 0x130, 0x8507, 0x125b, 0x68a7, 0x1, 0x1);
        gbc.writeMem(0xd041, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2821);
        EXPECT(gbc.pc(), 0xd043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd041), 0xcb);
        EXPECT(gbc.readMem(0xd042), 0x29);
        // CB 29 0204
        gbc.setState(0x54b0, 0x67, 0x80f0, 0x4593, 0x80b9, 0x5243, 0x0, 0x1);
        gbc.writeMem(0x54b0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x67);
        EXPECT(gbc.pc(), 0x54b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0205
        gbc.setState(0xb4dd, 0xa2a9, 0xae60, 0xd3f2, 0xe362, 0xbeb5, 0x1, 0x0);
        gbc.writeMem(0xb4dd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa2a9);
        EXPECT(gbc.pc(), 0xb4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dd), 0xcb);
        EXPECT(gbc.readMem(0xb4de), 0x29);
        // CB 29 0206
        gbc.setState(0x622e, 0x8e41, 0xec80, 0xd8a8, 0xc888, 0x478c, 0x0, 0x1);
        gbc.writeMem(0x622e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8e41);
        EXPECT(gbc.pc(), 0x6230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0207
        gbc.setState(0x1665, 0x4bc9, 0x2aa0, 0xc26, 0x2ed0, 0x22e6, 0x1, 0x0);
        gbc.writeMem(0x1665, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4bc9);
        EXPECT(gbc.pc(), 0x1667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0208
        gbc.setState(0xcad5, 0xc541, 0xda20, 0xf6a8, 0x8b04, 0xc803, 0x0, 0x0);
        gbc.writeMem(0xcad5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc541);
        EXPECT(gbc.pc(), 0xcad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad5), 0xcb);
        EXPECT(gbc.readMem(0xcad6), 0x29);
        // CB 29 0209
        gbc.setState(0x4fc7, 0x64df, 0xae70, 0x632c, 0xe609, 0xf29a, 0x1, 0x1);
        gbc.writeMem(0x4fc7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x64df);
        EXPECT(gbc.pc(), 0x4fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 020A
        gbc.setState(0x1a11, 0xb3f7, 0xd4d0, 0xd15d, 0x73c8, 0xa62a, 0x1, 0x0);
        gbc.writeMem(0x1a11, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb3f7);
        EXPECT(gbc.pc(), 0x1a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 020B
        gbc.setState(0x3b9f, 0xf246, 0x2c90, 0x5522, 0x991, 0x6fe8, 0x1, 0x1);
        gbc.writeMem(0x3b9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf246);
        EXPECT(gbc.pc(), 0x3ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 020C
        gbc.setState(0xec1e, 0x925a, 0x52e0, 0xd721, 0x382e, 0xfbc8, 0x0, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x925a);
        EXPECT(gbc.pc(), 0xec20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec1e), 0xcb);
        EXPECT(gbc.readMem(0xec1f), 0x29);
        // CB 29 020D
        gbc.setState(0x76a7, 0x4554, 0xc780, 0x1b5c, 0x5b88, 0xa354, 0x0, 0x1);
        gbc.writeMem(0x76a7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4554);
        EXPECT(gbc.pc(), 0x76a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 020E
        gbc.setState(0x925, 0xd344, 0xef80, 0xc53, 0x64af, 0xea83, 0x0, 0x1);
        gbc.writeMem(0x925, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd344);
        EXPECT(gbc.pc(), 0x927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 020F
        gbc.setState(0xaa39, 0x513b, 0x8110, 0x160, 0xbd9a, 0x2b28, 0x1, 0x0);
        gbc.writeMem(0xaa39, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x513b);
        EXPECT(gbc.pc(), 0xaa3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa39), 0xcb);
        EXPECT(gbc.readMem(0xaa3a), 0x29);
        // CB 29 0210
        gbc.setState(0xd05e, 0x3b76, 0x9cc0, 0x2a0, 0xaef7, 0x4c85, 0x0, 0x0);
        gbc.writeMem(0xd05e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3b76);
        EXPECT(gbc.pc(), 0xd060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05e), 0xcb);
        EXPECT(gbc.readMem(0xd05f), 0x29);
        // CB 29 0211
        gbc.setState(0x452, 0x542a, 0x5c20, 0x6c02, 0xe5c1, 0xe995, 0x0, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x542a);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0212
        gbc.setState(0xd2fd, 0xcb03, 0xd0e0, 0x609d, 0xe465, 0xe569, 0x0, 0x1);
        gbc.writeMem(0xd2fd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0xd2ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fd), 0xcb);
        EXPECT(gbc.readMem(0xd2fe), 0x29);
        // CB 29 0213
        gbc.setState(0x7d1f, 0x1f5e, 0x8dd0, 0x28f6, 0xb002, 0xd8a6, 0x1, 0x1);
        gbc.writeMem(0x7d1f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1f5e);
        EXPECT(gbc.pc(), 0x7d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0214
        gbc.setState(0x558b, 0xe720, 0x86a0, 0x199d, 0xdb62, 0x5aa0, 0x0, 0x0);
        gbc.writeMem(0x558b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe720);
        EXPECT(gbc.pc(), 0x558d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0215
        gbc.setState(0x5327, 0x5167, 0xfe00, 0xf40b, 0xd38f, 0xdedd, 0x1, 0x1);
        gbc.writeMem(0x5327, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5167);
        EXPECT(gbc.pc(), 0x5329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0216
        gbc.setState(0x3a57, 0x6750, 0x6890, 0xbdba, 0x5ded, 0xf4f, 0x1, 0x0);
        gbc.writeMem(0x3a57, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6750);
        EXPECT(gbc.pc(), 0x3a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0217
        gbc.setState(0x58ee, 0xa4f6, 0xfee0, 0xc916, 0x896f, 0x884a, 0x0, 0x0);
        gbc.writeMem(0x58ee, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa4f6);
        EXPECT(gbc.pc(), 0x58f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0218
        gbc.setState(0x8262, 0x2f22, 0x9300, 0x7621, 0xf4a5, 0x1ca0, 0x1, 0x0);
        gbc.writeMem(0x8262, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2f22);
        EXPECT(gbc.pc(), 0x8264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8262), 0xcb);
        EXPECT(gbc.readMem(0x8263), 0x29);
        // CB 29 0219
        gbc.setState(0x4bc6, 0x3192, 0xe0b0, 0xb908, 0xf439, 0xd5d1, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3192);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 021A
        gbc.setState(0x6573, 0x177, 0x9470, 0x7298, 0x314e, 0x178d, 0x0, 0x0);
        gbc.writeMem(0x6573, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x177);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 021B
        gbc.setState(0xe1e0, 0x8f5a, 0xa2b0, 0x3b84, 0x7664, 0x1234, 0x1, 0x1);
        gbc.writeMem(0xe1e0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f5a);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e0), 0xcb);
        EXPECT(gbc.readMem(0xe1e1), 0x29);
        // CB 29 021C
        gbc.setState(0x74fa, 0x1ec0, 0xc8d0, 0x943b, 0x54b, 0xf5b8, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1ec0);
        EXPECT(gbc.pc(), 0x74fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 021D
        gbc.setState(0x2cf, 0x574, 0xcc60, 0xfd55, 0xf2c2, 0x685e, 0x1, 0x1);
        gbc.writeMem(0x2cf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x574);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 021E
        gbc.setState(0xb4f3, 0x334d, 0x920, 0x3988, 0x71f0, 0xa6a3, 0x1, 0x1);
        gbc.writeMem(0xb4f3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x334d);
        EXPECT(gbc.pc(), 0xb4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f3), 0xcb);
        EXPECT(gbc.readMem(0xb4f4), 0x29);
        // CB 29 0220
        gbc.setState(0xf9a, 0x9ba4, 0xbf50, 0x9a9, 0x9cd0, 0x3bb9, 0x0, 0x0);
        gbc.writeMem(0xf9a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9ba4);
        EXPECT(gbc.pc(), 0xf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0221
        gbc.setState(0xd922, 0x21b9, 0x4b20, 0xf61c, 0x5b33, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0xd922, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x21b9);
        EXPECT(gbc.pc(), 0xd924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd922), 0xcb);
        EXPECT(gbc.readMem(0xd923), 0x29);
        // CB 29 0222
        gbc.setState(0x4fa9, 0xd8c4, 0x8440, 0xb3d, 0x9611, 0xb3f, 0x0, 0x1);
        gbc.writeMem(0x4fa9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd8c4);
        EXPECT(gbc.pc(), 0x4fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0223
        gbc.setState(0xb148, 0xddf3, 0x89f0, 0x112e, 0x93be, 0xdaa4, 0x0, 0x0);
        gbc.writeMem(0xb148, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xddf3);
        EXPECT(gbc.pc(), 0xb14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb148), 0xcb);
        EXPECT(gbc.readMem(0xb149), 0x29);
        // CB 29 0224
        gbc.setState(0xbd2a, 0xbbc2, 0x740, 0x3889, 0x64af, 0xdad4, 0x1, 0x0);
        gbc.writeMem(0xbd2a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbbc2);
        EXPECT(gbc.pc(), 0xbd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2a), 0xcb);
        EXPECT(gbc.readMem(0xbd2b), 0x29);
        // CB 29 0225
        gbc.setState(0x1a9f, 0x3a69, 0xe730, 0xceb4, 0x3782, 0x2bdf, 0x0, 0x1);
        gbc.writeMem(0x1a9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3a69);
        EXPECT(gbc.pc(), 0x1aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0226
        gbc.setState(0x2fef, 0x7c34, 0x8090, 0x4a41, 0x42df, 0x3681, 0x0, 0x1);
        gbc.writeMem(0x2fef, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7c34);
        EXPECT(gbc.pc(), 0x2ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0227
        gbc.setState(0xc5ea, 0xf7fc, 0x21e0, 0x9ea8, 0x3bf8, 0x2e7a, 0x1, 0x1);
        gbc.writeMem(0xc5ea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0xc5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ea), 0xcb);
        EXPECT(gbc.readMem(0xc5eb), 0x29);
        // CB 29 0228
        gbc.setState(0x4137, 0x7e21, 0xb990, 0xa0a9, 0xa2d9, 0x886e, 0x0, 0x0);
        gbc.writeMem(0x4137, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7e21);
        EXPECT(gbc.pc(), 0x4139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0229
        gbc.setState(0x348a, 0x907, 0x8220, 0xb240, 0x224c, 0x5a4, 0x1, 0x0);
        gbc.writeMem(0x348a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x907);
        EXPECT(gbc.pc(), 0x348c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 022A
        gbc.setState(0x9513, 0xe52b, 0x8d0, 0x6bf2, 0x6c5d, 0x3d53, 0x0, 0x0);
        gbc.writeMem(0x9513, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe52b);
        EXPECT(gbc.pc(), 0x9515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9513), 0xcb);
        EXPECT(gbc.readMem(0x9514), 0x29);
        // CB 29 022B
        gbc.setState(0xe199, 0x3990, 0xa710, 0xfe78, 0x205b, 0x9ce, 0x1, 0x0);
        gbc.writeMem(0xe199, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3990);
        EXPECT(gbc.pc(), 0xe19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe199), 0xcb);
        EXPECT(gbc.readMem(0xe19a), 0x29);
        // CB 29 022C
        gbc.setState(0x9b9e, 0x77b1, 0xe770, 0x2f17, 0xedcd, 0x7c17, 0x1, 0x0);
        gbc.writeMem(0x9b9e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x77b1);
        EXPECT(gbc.pc(), 0x9ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9e), 0xcb);
        EXPECT(gbc.readMem(0x9b9f), 0x29);
        // CB 29 022D
        gbc.setState(0x7501, 0xaf23, 0x9d70, 0xfd62, 0xc99, 0x2cca, 0x1, 0x0);
        gbc.writeMem(0x7501, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaf23);
        EXPECT(gbc.pc(), 0x7503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 022E
        gbc.setState(0x7c34, 0x3872, 0xb8b0, 0x5640, 0x719b, 0x1cc7, 0x1, 0x0);
        gbc.writeMem(0x7c34, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3872);
        EXPECT(gbc.pc(), 0x7c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 022F
        gbc.setState(0x18c5, 0x447e, 0x9890, 0xda2f, 0xc61e, 0x9fe6, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x447e);
        EXPECT(gbc.pc(), 0x18c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0230
        gbc.setState(0xb4c5, 0xb910, 0xc200, 0x839b, 0x22c, 0xa2e4, 0x0, 0x1);
        gbc.writeMem(0xb4c5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb910);
        EXPECT(gbc.pc(), 0xb4c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c5), 0xcb);
        EXPECT(gbc.readMem(0xb4c6), 0x29);
        // CB 29 0231
        gbc.setState(0x3529, 0xe18a, 0x9ca0, 0x3f91, 0xbd09, 0x85b3, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe18a);
        EXPECT(gbc.pc(), 0x352b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0232
        gbc.setState(0x3523, 0xa8e2, 0x1bc0, 0x78f5, 0x7419, 0x6ed4, 0x0, 0x0);
        gbc.writeMem(0x3523, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa8e2);
        EXPECT(gbc.pc(), 0x3525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0233
        gbc.setState(0x8cb, 0xd306, 0x4c20, 0x66c6, 0xd9c9, 0x25ae, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd306);
        EXPECT(gbc.pc(), 0x8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0234
        gbc.setState(0xe1d5, 0x5cc5, 0x4f30, 0x73f2, 0x6a46, 0xd22a, 0x0, 0x0);
        gbc.writeMem(0xe1d5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5cc5);
        EXPECT(gbc.pc(), 0xe1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d5), 0xcb);
        EXPECT(gbc.readMem(0xe1d6), 0x29);
        // CB 29 0235
        gbc.setState(0xc99a, 0xe0ce, 0xbcd0, 0x1f0, 0xcd8e, 0xd62e, 0x0, 0x1);
        gbc.writeMem(0xc99a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe0ce);
        EXPECT(gbc.pc(), 0xc99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0xcb);
        EXPECT(gbc.readMem(0xc99b), 0x29);
        // CB 29 0236
        gbc.setState(0x564b, 0x70fe, 0x3460, 0x6834, 0x6443, 0x1942, 0x1, 0x1);
        gbc.writeMem(0x564b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x70fe);
        EXPECT(gbc.pc(), 0x564d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0237
        gbc.setState(0x9842, 0xcbd7, 0xc7c0, 0xc8b4, 0x2d4d, 0xf778, 0x1, 0x1);
        gbc.writeMem(0x9842, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcbd7);
        EXPECT(gbc.pc(), 0x9844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9842), 0xcb);
        EXPECT(gbc.readMem(0x9843), 0x29);
        // CB 29 0238
        gbc.setState(0x9cb5, 0xb28d, 0x8550, 0x37ac, 0xec3f, 0x576e, 0x1, 0x0);
        gbc.writeMem(0x9cb5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb28d);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb5), 0xcb);
        EXPECT(gbc.readMem(0x9cb6), 0x29);
        // CB 29 0239
        gbc.setState(0x2970, 0x889, 0x2400, 0x5ef1, 0x963f, 0x5791, 0x1, 0x0);
        gbc.writeMem(0x2970, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x889);
        EXPECT(gbc.pc(), 0x2972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 023A
        gbc.setState(0x881d, 0xd4c7, 0x18c0, 0xcd4d, 0x7e98, 0xbc39, 0x1, 0x0);
        gbc.writeMem(0x881d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd4c7);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881d), 0xcb);
        EXPECT(gbc.readMem(0x881e), 0x29);
        // CB 29 023B
        gbc.setState(0xc5d1, 0x39eb, 0xd1c0, 0x21c9, 0x8ab3, 0x66f, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x39eb);
        EXPECT(gbc.pc(), 0xc5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d1), 0xcb);
        EXPECT(gbc.readMem(0xc5d2), 0x29);
        // CB 29 023C
        gbc.setState(0x7bfb, 0xe712, 0x1170, 0x18fd, 0x6820, 0x1866, 0x1, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe712);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 023D
        gbc.setState(0x899e, 0x77b0, 0x71a0, 0x719d, 0x6855, 0x216, 0x1, 0x0);
        gbc.writeMem(0x899e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x77b0);
        EXPECT(gbc.pc(), 0x89a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x899e), 0xcb);
        EXPECT(gbc.readMem(0x899f), 0x29);
        // CB 29 023E
        gbc.setState(0xd6c7, 0xfbf0, 0x7ca0, 0x91f9, 0xae5b, 0xe27a, 0x0, 0x1);
        gbc.writeMem(0xd6c7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfbf0);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c7), 0xcb);
        EXPECT(gbc.readMem(0xd6c8), 0x29);
        // CB 29 023F
        gbc.setState(0x37e7, 0xd5a1, 0x1e60, 0x545f, 0x4cf9, 0xa77, 0x0, 0x1);
        gbc.writeMem(0x37e7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd5a1);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0240
        gbc.setState(0x9a6f, 0xe84f, 0x5470, 0x3c84, 0xc35a, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x9a6f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe84f);
        EXPECT(gbc.pc(), 0x9a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6f), 0xcb);
        EXPECT(gbc.readMem(0x9a70), 0x29);
        // CB 29 0242
        gbc.setState(0x21a2, 0x3906, 0x8380, 0x428a, 0x43de, 0xa7a3, 0x0, 0x0);
        gbc.writeMem(0x21a2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3906);
        EXPECT(gbc.pc(), 0x21a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0243
        gbc.setState(0x9615, 0x3913, 0xcef0, 0xaebf, 0x2464, 0xe829, 0x0, 0x0);
        gbc.writeMem(0x9615, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3913);
        EXPECT(gbc.pc(), 0x9617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9615), 0xcb);
        EXPECT(gbc.readMem(0x9616), 0x29);
        // CB 29 0244
        gbc.setState(0x42dc, 0x39fc, 0x3d00, 0xc5c7, 0x6f84, 0xdcfd, 0x1, 0x1);
        gbc.writeMem(0x42dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x39fc);
        EXPECT(gbc.pc(), 0x42de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0245
        gbc.setState(0xcd64, 0xfa96, 0xfe10, 0xb709, 0xcd23, 0x2a46, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfa96);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd64), 0xcb);
        EXPECT(gbc.readMem(0xcd65), 0x29);
        // CB 29 0247
        gbc.setState(0x4bc0, 0x976, 0x5090, 0x343f, 0x22a3, 0x628a, 0x0, 0x1);
        gbc.writeMem(0x4bc0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x976);
        EXPECT(gbc.pc(), 0x4bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0248
        gbc.setState(0x5524, 0xe478, 0x4040, 0xf5f5, 0x6360, 0x52cb, 0x0, 0x0);
        gbc.writeMem(0x5524, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe478);
        EXPECT(gbc.pc(), 0x5526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0249
        gbc.setState(0x57a0, 0x8b50, 0xdd70, 0xf432, 0x72c4, 0x294, 0x1, 0x0);
        gbc.writeMem(0x57a0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8b50);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 024A
        gbc.setState(0xe206, 0xbb1, 0x1df0, 0x8d09, 0x6475, 0xff3e, 0x0, 0x0);
        gbc.writeMem(0xe206, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0xe208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe206), 0xcb);
        EXPECT(gbc.readMem(0xe207), 0x29);
        // CB 29 024B
        gbc.setState(0x698, 0x961f, 0x5d0, 0x7dd6, 0x4b40, 0xc2df, 0x1, 0x0);
        gbc.writeMem(0x698, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x961f);
        EXPECT(gbc.pc(), 0x69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 024C
        gbc.setState(0xab0a, 0x23ee, 0xa440, 0x632a, 0x20c5, 0x4ece, 0x0, 0x0);
        gbc.writeMem(0xab0a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x23ee);
        EXPECT(gbc.pc(), 0xab0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0a), 0xcb);
        EXPECT(gbc.readMem(0xab0b), 0x29);
        // CB 29 024D
        gbc.setState(0xcc3f, 0xfe2f, 0x4520, 0xb8f9, 0x2590, 0x8e25, 0x0, 0x0);
        gbc.writeMem(0xcc3f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0xcc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3f), 0xcb);
        EXPECT(gbc.readMem(0xcc40), 0x29);
        // CB 29 024E
        gbc.setState(0xbf65, 0xddde, 0x9c00, 0x6561, 0xc749, 0x2c4e, 0x1, 0x0);
        gbc.writeMem(0xbf65, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xddde);
        EXPECT(gbc.pc(), 0xbf67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf65), 0xcb);
        EXPECT(gbc.readMem(0xbf66), 0x29);
        // CB 29 024F
        gbc.setState(0xe279, 0x5e9f, 0xd270, 0x179d, 0xe714, 0x3a10, 0x0, 0x1);
        gbc.writeMem(0xe279, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5e9f);
        EXPECT(gbc.pc(), 0xe27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe279), 0xcb);
        EXPECT(gbc.readMem(0xe27a), 0x29);
        // CB 29 0250
        gbc.setState(0x15ac, 0xf2fc, 0xb900, 0x5de9, 0xc06b, 0xbbba, 0x1, 0x1);
        gbc.writeMem(0x15ac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf2fc);
        EXPECT(gbc.pc(), 0x15ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0251
        gbc.setState(0x85b6, 0xfdd7, 0xa230, 0xd6e8, 0x17c5, 0xa80c, 0x0, 0x0);
        gbc.writeMem(0x85b6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfdd7);
        EXPECT(gbc.pc(), 0x85b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b6), 0xcb);
        EXPECT(gbc.readMem(0x85b7), 0x29);
        // CB 29 0252
        gbc.setState(0x3d4f, 0x42b3, 0xa030, 0xcdcd, 0x6975, 0xe148, 0x0, 0x0);
        gbc.writeMem(0x3d4f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x42b3);
        EXPECT(gbc.pc(), 0x3d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0253
        gbc.setState(0xe57c, 0xac43, 0xc650, 0xe948, 0x88a1, 0x7b89, 0x1, 0x1);
        gbc.writeMem(0xe57c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xac43);
        EXPECT(gbc.pc(), 0xe57e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57c), 0xcb);
        EXPECT(gbc.readMem(0xe57d), 0x29);
        // CB 29 0254
        gbc.setState(0x6c18, 0x9907, 0xed80, 0x4b57, 0xb7b0, 0xdffb, 0x1, 0x0);
        gbc.writeMem(0x6c18, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9907);
        EXPECT(gbc.pc(), 0x6c1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0255
        gbc.setState(0x6148, 0x98a3, 0x5e00, 0x27cc, 0xe7a, 0xaf6b, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x98a3);
        EXPECT(gbc.pc(), 0x614a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0256
        gbc.setState(0xd7fd, 0x2c9, 0x3160, 0x1a33, 0x586e, 0x9cb5, 0x1, 0x0);
        gbc.writeMem(0xd7fd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0xd7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7fd), 0xcb);
        EXPECT(gbc.readMem(0xd7fe), 0x29);
        // CB 29 0257
        gbc.setState(0x7ead, 0x158e, 0x46c0, 0x347a, 0x6334, 0x55a, 0x1, 0x1);
        gbc.writeMem(0x7ead, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x158e);
        EXPECT(gbc.pc(), 0x7eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0258
        gbc.setState(0xb163, 0x2359, 0x9c0, 0xfd08, 0x1073, 0x6e68, 0x0, 0x0);
        gbc.writeMem(0xb163, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2359);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0x29);
        // CB 29 0259
        gbc.setState(0xaf1c, 0x60b8, 0xede0, 0x4d33, 0xf5ec, 0xc175, 0x0, 0x1);
        gbc.writeMem(0xaf1c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x60b8);
        EXPECT(gbc.pc(), 0xaf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1c), 0xcb);
        EXPECT(gbc.readMem(0xaf1d), 0x29);
        // CB 29 025A
        gbc.setState(0x7985, 0xe9f4, 0x4670, 0x5c9, 0x9976, 0x56d, 0x1, 0x0);
        gbc.writeMem(0x7985, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe9f4);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 025B
        gbc.setState(0xddfc, 0x307e, 0xb550, 0xdb55, 0xe93b, 0xa3fa, 0x1, 0x1);
        gbc.writeMem(0xddfc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x307e);
        EXPECT(gbc.pc(), 0xddfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfc), 0xcb);
        EXPECT(gbc.readMem(0xddfd), 0x29);
        // CB 29 025C
        gbc.setState(0x825e, 0x3aea, 0x59b0, 0x57b, 0xd80, 0xa736, 0x0, 0x1);
        gbc.writeMem(0x825e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3aea);
        EXPECT(gbc.pc(), 0x8260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825e), 0xcb);
        EXPECT(gbc.readMem(0x825f), 0x29);
        // CB 29 025D
        gbc.setState(0x97a1, 0x2ca6, 0xc330, 0x4704, 0x8dcc, 0xc2e6, 0x0, 0x0);
        gbc.writeMem(0x97a1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2ca6);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0x29);
        // CB 29 025E
        gbc.setState(0x651c, 0x8242, 0x7950, 0x848f, 0x67d2, 0x3081, 0x0, 0x0);
        gbc.writeMem(0x651c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8242);
        EXPECT(gbc.pc(), 0x651e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 025F
        gbc.setState(0xe2c2, 0xe609, 0xc3f0, 0x947a, 0x413d, 0xed85, 0x1, 0x1);
        gbc.writeMem(0xe2c2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe609);
        EXPECT(gbc.pc(), 0xe2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c2), 0xcb);
        EXPECT(gbc.readMem(0xe2c3), 0x29);
        // CB 29 0260
        gbc.setState(0xd610, 0xb57e, 0x2030, 0x8bfe, 0x3179, 0xae1b, 0x1, 0x1);
        gbc.writeMem(0xd610, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb57e);
        EXPECT(gbc.pc(), 0xd612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd610), 0xcb);
        EXPECT(gbc.readMem(0xd611), 0x29);
        // CB 29 0261
        gbc.setState(0xbeb8, 0x82f1, 0x4b30, 0x6ac6, 0x172a, 0xc5b2, 0x0, 0x1);
        gbc.writeMem(0xbeb8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x82f1);
        EXPECT(gbc.pc(), 0xbeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb8), 0xcb);
        EXPECT(gbc.readMem(0xbeb9), 0x29);
        // CB 29 0262
        gbc.setState(0x63a9, 0x43df, 0xa250, 0xf414, 0x55b7, 0x1c84, 0x0, 0x1);
        gbc.writeMem(0x63a9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x43df);
        EXPECT(gbc.pc(), 0x63ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0263
        gbc.setState(0xbe08, 0x155d, 0x7260, 0x71a0, 0x5781, 0x6f3d, 0x1, 0x0);
        gbc.writeMem(0xbe08, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x155d);
        EXPECT(gbc.pc(), 0xbe0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe08), 0xcb);
        EXPECT(gbc.readMem(0xbe09), 0x29);
        // CB 29 0264
        gbc.setState(0x7f44, 0x125f, 0x9110, 0xb97d, 0xf136, 0x8ce6, 0x1, 0x1);
        gbc.writeMem(0x7f44, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x125f);
        EXPECT(gbc.pc(), 0x7f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0265
        gbc.setState(0xbf8a, 0x5ed0, 0x1b90, 0x6e4e, 0x9959, 0x619, 0x1, 0x0);
        gbc.writeMem(0xbf8a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5ed0);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0x29);
        // CB 29 0266
        gbc.setState(0xb9d5, 0xde17, 0xdd60, 0xa434, 0xfcec, 0x63f4, 0x0, 0x1);
        gbc.writeMem(0xb9d5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xde17);
        EXPECT(gbc.pc(), 0xb9d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d5), 0xcb);
        EXPECT(gbc.readMem(0xb9d6), 0x29);
        // CB 29 0267
        gbc.setState(0x47b4, 0x8eda, 0x25b0, 0x1794, 0xa23, 0xc010, 0x1, 0x0);
        gbc.writeMem(0x47b4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8eda);
        EXPECT(gbc.pc(), 0x47b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0268
        gbc.setState(0x86ab, 0xf956, 0x900, 0x27f6, 0x5c6, 0x28ad, 0x1, 0x1);
        gbc.writeMem(0x86ab, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf956);
        EXPECT(gbc.pc(), 0x86ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ab), 0xcb);
        EXPECT(gbc.readMem(0x86ac), 0x29);
        // CB 29 0269
        gbc.setState(0x77ac, 0xf040, 0x8d50, 0x1256, 0xeba4, 0x9ab, 0x0, 0x0);
        gbc.writeMem(0x77ac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 026A
        gbc.setState(0x82ea, 0xf28c, 0xa3a0, 0x9d8d, 0xaac1, 0x516a, 0x0, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf28c);
        EXPECT(gbc.pc(), 0x82ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ea), 0xcb);
        EXPECT(gbc.readMem(0x82eb), 0x29);
        // CB 29 026B
        gbc.setState(0x5d59, 0x68af, 0x92f0, 0x244, 0x7ac2, 0x1dfc, 0x1, 0x0);
        gbc.writeMem(0x5d59, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x68af);
        EXPECT(gbc.pc(), 0x5d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 026C
        gbc.setState(0xc5a8, 0x140a, 0x6c0, 0xf5da, 0x2aa1, 0x2097, 0x0, 0x1);
        gbc.writeMem(0xc5a8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x140a);
        EXPECT(gbc.pc(), 0xc5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a8), 0xcb);
        EXPECT(gbc.readMem(0xc5a9), 0x29);
        // CB 29 026D
        gbc.setState(0xc35a, 0x80f3, 0xcc0, 0x525f, 0x5f6c, 0x5073, 0x0, 0x1);
        gbc.writeMem(0xc35a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x80f3);
        EXPECT(gbc.pc(), 0xc35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35a), 0xcb);
        EXPECT(gbc.readMem(0xc35b), 0x29);
        // CB 29 026E
        gbc.setState(0x1aaa, 0x792c, 0x93b0, 0x9e3e, 0x3562, 0xeb2c, 0x0, 0x0);
        gbc.writeMem(0x1aaa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x792c);
        EXPECT(gbc.pc(), 0x1aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 026F
        gbc.setState(0x815c, 0x7b33, 0xe80, 0xd56d, 0xf8e, 0x1b21, 0x1, 0x0);
        gbc.writeMem(0x815c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7b33);
        EXPECT(gbc.pc(), 0x815e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815c), 0xcb);
        EXPECT(gbc.readMem(0x815d), 0x29);
        // CB 29 0270
        gbc.setState(0xde5d, 0x52e9, 0x9180, 0x95dd, 0x285a, 0xb92b, 0x1, 0x0);
        gbc.writeMem(0xde5d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x52e9);
        EXPECT(gbc.pc(), 0xde5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5d), 0xcb);
        EXPECT(gbc.readMem(0xde5e), 0x29);
        // CB 29 0271
        gbc.setState(0x829f, 0xecb9, 0xc840, 0xe860, 0x2223, 0xf9b4, 0x0, 0x0);
        gbc.writeMem(0x829f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xecb9);
        EXPECT(gbc.pc(), 0x82a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829f), 0xcb);
        EXPECT(gbc.readMem(0x82a0), 0x29);
        // CB 29 0272
        gbc.setState(0x5437, 0xba62, 0xa8c0, 0x6daf, 0x7378, 0x9196, 0x1, 0x0);
        gbc.writeMem(0x5437, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xba62);
        EXPECT(gbc.pc(), 0x5439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0273
        gbc.setState(0xe3fe, 0x3ef8, 0xa180, 0x56cd, 0xe781, 0x9adf, 0x0, 0x1);
        gbc.writeMem(0xe3fe, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3ef8);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0xcb);
        EXPECT(gbc.readMem(0xe3ff), 0x29);
        // CB 29 0274
        gbc.setState(0x68b6, 0x53dc, 0x8ec0, 0xba79, 0x2b31, 0x1f45, 0x1, 0x0);
        gbc.writeMem(0x68b6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x53dc);
        EXPECT(gbc.pc(), 0x68b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0275
        gbc.setState(0x78ea, 0xbb3b, 0x6770, 0x35d9, 0xe26f, 0x59df, 0x0, 0x1);
        gbc.writeMem(0x78ea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbb3b);
        EXPECT(gbc.pc(), 0x78ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0276
        gbc.setState(0x7770, 0xeff0, 0xda10, 0x6d7d, 0x8043, 0x5b40, 0x1, 0x1);
        gbc.writeMem(0x7770, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xeff0);
        EXPECT(gbc.pc(), 0x7772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0277
        gbc.setState(0x2693, 0x229a, 0xe300, 0xda62, 0x2a26, 0x691e, 0x0, 0x1);
        gbc.writeMem(0x2693, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x229a);
        EXPECT(gbc.pc(), 0x2695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0279
        gbc.setState(0x70c, 0xd652, 0xb6e0, 0x9c24, 0x8d55, 0xfb29, 0x1, 0x1);
        gbc.writeMem(0x70c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd652);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 027A
        gbc.setState(0x7ab4, 0xecda, 0xa570, 0x93ed, 0x406a, 0xf305, 0x0, 0x1);
        gbc.writeMem(0x7ab4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xecda);
        EXPECT(gbc.pc(), 0x7ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 027B
        gbc.setState(0xe31f, 0x2cfc, 0x30e0, 0x6aa, 0x6222, 0x882e, 0x1, 0x1);
        gbc.writeMem(0xe31f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2cfc);
        EXPECT(gbc.pc(), 0xe321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31f), 0xcb);
        EXPECT(gbc.readMem(0xe320), 0x29);
        // CB 29 027C
        gbc.setState(0x5663, 0xfd45, 0x1b60, 0xde16, 0x1482, 0xa3f8, 0x0, 0x0);
        gbc.writeMem(0x5663, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0x5665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 027D
        gbc.setState(0x9c63, 0x52ab, 0xa050, 0x1286, 0xa687, 0x4bcc, 0x0, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xcb);
        EXPECT(gbc.readMem(0x9c64), 0x29);
        // CB 29 027E
        gbc.setState(0x9a11, 0xca4f, 0x64b0, 0x44a8, 0xc5e4, 0xc6ba, 0x1, 0x0);
        gbc.writeMem(0x9a11, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xca4f);
        EXPECT(gbc.pc(), 0x9a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a11), 0xcb);
        EXPECT(gbc.readMem(0x9a12), 0x29);
        // CB 29 027F
        gbc.setState(0xc5be, 0xc6fd, 0x43f0, 0x9cb2, 0xb685, 0x30dc, 0x1, 0x1);
        gbc.writeMem(0xc5be, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0xc5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5be), 0xcb);
        EXPECT(gbc.readMem(0xc5bf), 0x29);
        // CB 29 0280
        gbc.setState(0x495, 0x7ecd, 0x4e80, 0xd822, 0xf459, 0x512a, 0x1, 0x1);
        gbc.writeMem(0x495, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0x497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0281
        gbc.setState(0x72fa, 0xb4a6, 0x890, 0xfac1, 0x222b, 0xb0e1, 0x0, 0x0);
        gbc.writeMem(0x72fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb4a6);
        EXPECT(gbc.pc(), 0x72fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0282
        gbc.setState(0x6a3d, 0x7d25, 0xa9b0, 0xfb47, 0x58d6, 0xaab2, 0x1, 0x0);
        gbc.writeMem(0x6a3d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7d25);
        EXPECT(gbc.pc(), 0x6a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0283
        gbc.setState(0x2aba, 0x3cc1, 0xc8d0, 0xbc34, 0x2c20, 0xb2d8, 0x0, 0x1);
        gbc.writeMem(0x2aba, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3cc1);
        EXPECT(gbc.pc(), 0x2abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0286
        gbc.setState(0x603e, 0x1686, 0x7d10, 0xf778, 0x1051, 0xb7c8, 0x0, 0x1);
        gbc.writeMem(0x603e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1686);
        EXPECT(gbc.pc(), 0x6040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0287
        gbc.setState(0x7a55, 0x40a8, 0x6c60, 0x9e0d, 0xfb04, 0x6d71, 0x0, 0x0);
        gbc.writeMem(0x7a55, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x40a8);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0288
        gbc.setState(0x60d0, 0xfa6c, 0xcb20, 0x3fb2, 0x3c15, 0x8cb2, 0x0, 0x0);
        gbc.writeMem(0x60d0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfa6c);
        EXPECT(gbc.pc(), 0x60d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0289
        gbc.setState(0x2437, 0xab52, 0x8050, 0x3a0c, 0xb723, 0xd84d, 0x1, 0x0);
        gbc.writeMem(0x2437, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xab52);
        EXPECT(gbc.pc(), 0x2439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 028A
        gbc.setState(0x1743, 0x99f1, 0x7b30, 0x7714, 0x1566, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0x1743, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x99f1);
        EXPECT(gbc.pc(), 0x1745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 028B
        gbc.setState(0xcf63, 0xb044, 0x43b0, 0xe814, 0xae1a, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0xcf63, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb044);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf63), 0xcb);
        EXPECT(gbc.readMem(0xcf64), 0x29);
        // CB 29 028C
        gbc.setState(0xe00d, 0x249b, 0x1b40, 0x4b1e, 0xabbf, 0xa1af, 0x0, 0x1);
        gbc.writeMem(0xe00d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x249b);
        EXPECT(gbc.pc(), 0xe00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00d), 0xcb);
        EXPECT(gbc.readMem(0xe00e), 0x29);
        // CB 29 028D
        gbc.setState(0xec76, 0x99d4, 0xf1a0, 0x288d, 0x473d, 0xbe36, 0x1, 0x1);
        gbc.writeMem(0xec76, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x99d4);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec76), 0xcb);
        EXPECT(gbc.readMem(0xec77), 0x29);
        // CB 29 028E
        gbc.setState(0x273e, 0xd36c, 0x1320, 0x3bd2, 0x6c97, 0x3862, 0x0, 0x0);
        gbc.writeMem(0x273e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x2740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 028F
        gbc.setState(0x3e4, 0x9b95, 0x5210, 0xa691, 0x3573, 0xb892, 0x1, 0x0);
        gbc.writeMem(0x3e4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9b95);
        EXPECT(gbc.pc(), 0x3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0290
        gbc.setState(0x53dc, 0x9327, 0x930, 0xf707, 0xc086, 0xe806, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0291
        gbc.setState(0x2a5, 0x9c53, 0xed50, 0xa103, 0x99df, 0x2616, 0x1, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9c53);
        EXPECT(gbc.pc(), 0x2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0292
        gbc.setState(0x31fb, 0x684c, 0x7960, 0x3f22, 0x40b6, 0xfd37, 0x0, 0x1);
        gbc.writeMem(0x31fb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x684c);
        EXPECT(gbc.pc(), 0x31fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0293
        gbc.setState(0x4772, 0x9611, 0xfa20, 0x1fa, 0xfb51, 0xd53c, 0x0, 0x1);
        gbc.writeMem(0x4772, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0x4774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0294
        gbc.setState(0x9cc9, 0xe48, 0x2fc0, 0xf9d3, 0xdd33, 0xe130, 0x0, 0x1);
        gbc.writeMem(0x9cc9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe48);
        EXPECT(gbc.pc(), 0x9ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc9), 0xcb);
        EXPECT(gbc.readMem(0x9cca), 0x29);
        // CB 29 0295
        gbc.setState(0x2cb8, 0x7f8f, 0x7770, 0xa988, 0xe072, 0xa2e1, 0x0, 0x1);
        gbc.writeMem(0x2cb8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7f8f);
        EXPECT(gbc.pc(), 0x2cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0296
        gbc.setState(0x3ecb, 0x7174, 0x5f50, 0xfc84, 0xbed4, 0xa147, 0x1, 0x1);
        gbc.writeMem(0x3ecb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7174);
        EXPECT(gbc.pc(), 0x3ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0297
        gbc.setState(0xd343, 0x489c, 0xc2e0, 0x9154, 0x7a0c, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0xd343, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x489c);
        EXPECT(gbc.pc(), 0xd345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd343), 0xcb);
        EXPECT(gbc.readMem(0xd344), 0x29);
        // CB 29 0298
        gbc.setState(0x537d, 0xce6, 0xb20, 0xa826, 0xb06e, 0x1734, 0x1, 0x1);
        gbc.writeMem(0x537d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xce6);
        EXPECT(gbc.pc(), 0x537f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 029A
        gbc.setState(0xa9bd, 0xdc40, 0x1340, 0x35d8, 0xf9, 0x519a, 0x0, 0x0);
        gbc.writeMem(0xa9bd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdc40);
        EXPECT(gbc.pc(), 0xa9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bd), 0xcb);
        EXPECT(gbc.readMem(0xa9be), 0x29);
        // CB 29 029B
        gbc.setState(0xd178, 0xdd8f, 0x5910, 0xa106, 0xf40c, 0x8e82, 0x0, 0x1);
        gbc.writeMem(0xd178, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdd8f);
        EXPECT(gbc.pc(), 0xd17a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd178), 0xcb);
        EXPECT(gbc.readMem(0xd179), 0x29);
        // CB 29 029C
        gbc.setState(0x34e1, 0xc64f, 0x7720, 0xa05c, 0x9b05, 0xeb1c, 0x1, 0x0);
        gbc.writeMem(0x34e1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc64f);
        EXPECT(gbc.pc(), 0x34e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 029D
        gbc.setState(0x309b, 0x421f, 0xd6b0, 0xa312, 0xe611, 0xf78b, 0x0, 0x0);
        gbc.writeMem(0x309b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x421f);
        EXPECT(gbc.pc(), 0x309d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 029E
        gbc.setState(0xcc3a, 0x39b6, 0x8820, 0x12ca, 0xe7ac, 0x43a4, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x39b6);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3a), 0xcb);
        EXPECT(gbc.readMem(0xcc3b), 0x29);
        // CB 29 029F
        gbc.setState(0x79ad, 0x5c24, 0x9c60, 0xfda1, 0xd42f, 0x8920, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5c24);
        EXPECT(gbc.pc(), 0x79af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02A0
        gbc.setState(0xc5b4, 0x1013, 0x7890, 0x8384, 0x8b73, 0xc25e, 0x0, 0x0);
        gbc.writeMem(0xc5b4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1013);
        EXPECT(gbc.pc(), 0xc5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b4), 0xcb);
        EXPECT(gbc.readMem(0xc5b5), 0x29);
        // CB 29 02A1
        gbc.setState(0x69, 0x53d8, 0x2a90, 0xe0b, 0x8a59, 0x17db, 0x0, 0x0);
        gbc.writeMem(0x69, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x53d8);
        EXPECT(gbc.pc(), 0x6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02A2
        gbc.setState(0x2fc7, 0x3983, 0xef70, 0xbdfc, 0x8ffe, 0x33b7, 0x0, 0x1);
        gbc.writeMem(0x2fc7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3983);
        EXPECT(gbc.pc(), 0x2fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02A3
        gbc.setState(0x8525, 0xe3ec, 0x5a20, 0x2ff6, 0xcbfe, 0x2a91, 0x0, 0x0);
        gbc.writeMem(0x8525, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe3ec);
        EXPECT(gbc.pc(), 0x8527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8525), 0xcb);
        EXPECT(gbc.readMem(0x8526), 0x29);
        // CB 29 02A4
        gbc.setState(0x882d, 0x7d8f, 0x9f30, 0xef43, 0x86ef, 0xc4bc, 0x1, 0x1);
        gbc.writeMem(0x882d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0x882f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882d), 0xcb);
        EXPECT(gbc.readMem(0x882e), 0x29);
        // CB 29 02A5
        gbc.setState(0x8357, 0xb155, 0xc270, 0xc680, 0xe178, 0x2846, 0x0, 0x0);
        gbc.writeMem(0x8357, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb155);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8357), 0xcb);
        EXPECT(gbc.readMem(0x8358), 0x29);
        // CB 29 02A6
        gbc.setState(0xe4fc, 0xb58c, 0x710, 0x756d, 0xba7b, 0x4ad1, 0x0, 0x1);
        gbc.writeMem(0xe4fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb58c);
        EXPECT(gbc.pc(), 0xe4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4fc), 0xcb);
        EXPECT(gbc.readMem(0xe4fd), 0x29);
        // CB 29 02A7
        gbc.setState(0xbf54, 0x4fed, 0x51a0, 0x1264, 0xed22, 0xcd, 0x1, 0x1);
        gbc.writeMem(0xbf54, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4fed);
        EXPECT(gbc.pc(), 0xbf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf54), 0xcb);
        EXPECT(gbc.readMem(0xbf55), 0x29);
        // CB 29 02A8
        gbc.setState(0xcb45, 0xb297, 0xa840, 0x3282, 0xf01c, 0x9ad1, 0x1, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb297);
        EXPECT(gbc.pc(), 0xcb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb45), 0xcb);
        EXPECT(gbc.readMem(0xcb46), 0x29);
        // CB 29 02A9
        gbc.setState(0xdc41, 0xccbf, 0x9de0, 0x17ac, 0x4678, 0x75ee, 0x0, 0x1);
        gbc.writeMem(0xdc41, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xccbf);
        EXPECT(gbc.pc(), 0xdc43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc41), 0xcb);
        EXPECT(gbc.readMem(0xdc42), 0x29);
        // CB 29 02AA
        gbc.setState(0x8d5a, 0x2643, 0x8690, 0xe342, 0x3b51, 0x68db, 0x0, 0x1);
        gbc.writeMem(0x8d5a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2643);
        EXPECT(gbc.pc(), 0x8d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5a), 0xcb);
        EXPECT(gbc.readMem(0x8d5b), 0x29);
        // CB 29 02AB
        gbc.setState(0x756a, 0xc88f, 0xe8d0, 0x743b, 0x2b45, 0xf353, 0x1, 0x0);
        gbc.writeMem(0x756a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc88f);
        EXPECT(gbc.pc(), 0x756c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02AC
        gbc.setState(0xbeb2, 0xa07, 0xa2f0, 0xb3bc, 0xe45d, 0x4008, 0x0, 0x0);
        gbc.writeMem(0xbeb2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa07);
        EXPECT(gbc.pc(), 0xbeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb2), 0xcb);
        EXPECT(gbc.readMem(0xbeb3), 0x29);
        // CB 29 02AD
        gbc.setState(0x55d3, 0x7245, 0x9810, 0x732d, 0x6807, 0xd99, 0x0, 0x0);
        gbc.writeMem(0x55d3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7245);
        EXPECT(gbc.pc(), 0x55d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02AE
        gbc.setState(0x363f, 0xb0f6, 0x350, 0xe0, 0xa6f5, 0xcc45, 0x1, 0x1);
        gbc.writeMem(0x363f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb0f6);
        EXPECT(gbc.pc(), 0x3641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02AF
        gbc.setState(0x4f1b, 0x2e3, 0xf630, 0x871c, 0x9683, 0xca4, 0x0, 0x1);
        gbc.writeMem(0x4f1b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2e3);
        EXPECT(gbc.pc(), 0x4f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02B1
        gbc.setState(0x1ee0, 0x621e, 0x1660, 0xd9b9, 0xaecc, 0x689, 0x1, 0x1);
        gbc.writeMem(0x1ee0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x621e);
        EXPECT(gbc.pc(), 0x1ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02B2
        gbc.setState(0xc79a, 0xbf18, 0xb540, 0x7bf6, 0x89da, 0x54c2, 0x0, 0x0);
        gbc.writeMem(0xc79a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbf18);
        EXPECT(gbc.pc(), 0xc79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79a), 0xcb);
        EXPECT(gbc.readMem(0xc79b), 0x29);
        // CB 29 02B3
        gbc.setState(0xa369, 0x24cb, 0x8040, 0x8ddd, 0xed4, 0x3316, 0x1, 0x0);
        gbc.writeMem(0xa369, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x24cb);
        EXPECT(gbc.pc(), 0xa36b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa369), 0xcb);
        EXPECT(gbc.readMem(0xa36a), 0x29);
        // CB 29 02B4
        gbc.setState(0x6aca, 0x309, 0x43f0, 0x3c3f, 0x9c1d, 0x2357, 0x0, 0x1);
        gbc.writeMem(0x6aca, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x309);
        EXPECT(gbc.pc(), 0x6acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02B5
        gbc.setState(0x4171, 0x351b, 0xd420, 0x8b51, 0x9e7, 0x825a, 0x0, 0x0);
        gbc.writeMem(0x4171, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x351b);
        EXPECT(gbc.pc(), 0x4173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02B6
        gbc.setState(0x1c07, 0x3161, 0x39c0, 0xa101, 0x795e, 0xb4cb, 0x1, 0x1);
        gbc.writeMem(0x1c07, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3161);
        EXPECT(gbc.pc(), 0x1c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02B7
        gbc.setState(0xc75e, 0x87dd, 0xf4b0, 0xa5db, 0xcdb3, 0xd56a, 0x1, 0x1);
        gbc.writeMem(0xc75e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x87dd);
        EXPECT(gbc.pc(), 0xc760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75e), 0xcb);
        EXPECT(gbc.readMem(0xc75f), 0x29);
        // CB 29 02B8
        gbc.setState(0x4b7c, 0xa72, 0x8f10, 0x552d, 0xea89, 0x230b, 0x1, 0x0);
        gbc.writeMem(0x4b7c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa72);
        EXPECT(gbc.pc(), 0x4b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02B9
        gbc.setState(0x37bf, 0xd871, 0x2e50, 0x8afc, 0xc939, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x37bf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd871);
        EXPECT(gbc.pc(), 0x37c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02BA
        gbc.setState(0x7434, 0xa517, 0x4690, 0x148b, 0x559d, 0x53f1, 0x1, 0x0);
        gbc.writeMem(0x7434, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa517);
        EXPECT(gbc.pc(), 0x7436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02BB
        gbc.setState(0xa422, 0xaf7f, 0x7ee0, 0x7b4f, 0x9634, 0x256, 0x1, 0x1);
        gbc.writeMem(0xa422, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaf7f);
        EXPECT(gbc.pc(), 0xa424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa422), 0xcb);
        EXPECT(gbc.readMem(0xa423), 0x29);
        // CB 29 02BC
        gbc.setState(0xee6b, 0xee85, 0x10e0, 0x76bf, 0x5a0d, 0xec05, 0x1, 0x0);
        gbc.writeMem(0xee6b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xee85);
        EXPECT(gbc.pc(), 0xee6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6b), 0xcb);
        EXPECT(gbc.readMem(0xee6c), 0x29);
        // CB 29 02BD
        gbc.setState(0x4327, 0x6cd0, 0xe6f0, 0xb237, 0xe604, 0x134d, 0x1, 0x0);
        gbc.writeMem(0x4327, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6cd0);
        EXPECT(gbc.pc(), 0x4329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02BE
        gbc.setState(0xe43e, 0xfeab, 0xc980, 0x85a5, 0x4b81, 0xd1ef, 0x1, 0x0);
        gbc.writeMem(0xe43e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0xe440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43e), 0xcb);
        EXPECT(gbc.readMem(0xe43f), 0x29);
        // CB 29 02BF
        gbc.setState(0x1705, 0x8617, 0x5f0, 0xc456, 0x8fd9, 0xcede, 0x1, 0x0);
        gbc.writeMem(0x1705, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8617);
        EXPECT(gbc.pc(), 0x1707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02C0
        gbc.setState(0xca7, 0x3751, 0x4db0, 0x888e, 0x3b2f, 0x564, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3751);
        EXPECT(gbc.pc(), 0xca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02C2
        gbc.setState(0xd8ad, 0x454e, 0xc7e0, 0x3864, 0x4242, 0xd67d, 0x1, 0x0);
        gbc.writeMem(0xd8ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x454e);
        EXPECT(gbc.pc(), 0xd8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ad), 0xcb);
        EXPECT(gbc.readMem(0xd8ae), 0x29);
        // CB 29 02C3
        gbc.setState(0x7ae9, 0x94e9, 0x5c50, 0xeab9, 0x9119, 0xb869, 0x0, 0x0);
        gbc.writeMem(0x7ae9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x94e9);
        EXPECT(gbc.pc(), 0x7aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02C4
        gbc.setState(0xc161, 0x112, 0x550, 0xfa18, 0x26c2, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0xc161, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x112);
        EXPECT(gbc.pc(), 0xc163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc161), 0xcb);
        EXPECT(gbc.readMem(0xc162), 0x29);
        // CB 29 02C5
        gbc.setState(0x41e8, 0x759f, 0xd5f0, 0xf430, 0xcf9e, 0xe881, 0x1, 0x0);
        gbc.writeMem(0x41e8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x759f);
        EXPECT(gbc.pc(), 0x41ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02C6
        gbc.setState(0xb6ce, 0x62b0, 0x7c00, 0xde2, 0x2bdd, 0xb20d, 0x0, 0x1);
        gbc.writeMem(0xb6ce, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x62b0);
        EXPECT(gbc.pc(), 0xb6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ce), 0xcb);
        EXPECT(gbc.readMem(0xb6cf), 0x29);
        // CB 29 02C7
        gbc.setState(0x4f6c, 0x942e, 0xcee0, 0xf20d, 0x60fd, 0x31b7, 0x1, 0x0);
        gbc.writeMem(0x4f6c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x942e);
        EXPECT(gbc.pc(), 0x4f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02C8
        gbc.setState(0x62d2, 0x520b, 0x6b50, 0x5346, 0x3e95, 0x8cb1, 0x0, 0x1);
        gbc.writeMem(0x62d2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x520b);
        EXPECT(gbc.pc(), 0x62d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02C9
        gbc.setState(0x2186, 0x208d, 0xe5f0, 0x8402, 0x641d, 0xa677, 0x1, 0x0);
        gbc.writeMem(0x2186, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x208d);
        EXPECT(gbc.pc(), 0x2188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02CA
        gbc.setState(0x127b, 0xbadb, 0x3830, 0x1300, 0xea55, 0x825f, 0x1, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbadb);
        EXPECT(gbc.pc(), 0x127d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02CB
        gbc.setState(0xa81f, 0xff78, 0x5a90, 0x9413, 0x1d05, 0xe303, 0x1, 0x1);
        gbc.writeMem(0xa81f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xff78);
        EXPECT(gbc.pc(), 0xa821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81f), 0xcb);
        EXPECT(gbc.readMem(0xa820), 0x29);
        // CB 29 02CC
        gbc.setState(0xc1c2, 0x5d60, 0x790, 0x741e, 0x8b47, 0x343, 0x0, 0x0);
        gbc.writeMem(0xc1c2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5d60);
        EXPECT(gbc.pc(), 0xc1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c2), 0xcb);
        EXPECT(gbc.readMem(0xc1c3), 0x29);
        // CB 29 02CD
        gbc.setState(0x6f98, 0x2069, 0xccb0, 0xe9c, 0xd11c, 0x7a47, 0x0, 0x1);
        gbc.writeMem(0x6f98, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2069);
        EXPECT(gbc.pc(), 0x6f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02CE
        gbc.setState(0xdd75, 0x204e, 0x55c0, 0x6bcc, 0xd3a9, 0x462c, 0x0, 0x1);
        gbc.writeMem(0xdd75, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x204e);
        EXPECT(gbc.pc(), 0xdd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd75), 0xcb);
        EXPECT(gbc.readMem(0xdd76), 0x29);
        // CB 29 02CF
        gbc.setState(0x68a3, 0xdb33, 0xf50, 0x1afb, 0x9275, 0x22dc, 0x1, 0x0);
        gbc.writeMem(0x68a3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdb33);
        EXPECT(gbc.pc(), 0x68a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02D0
        gbc.setState(0x4794, 0xd33d, 0x1210, 0x945c, 0x8c, 0xfd73, 0x1, 0x0);
        gbc.writeMem(0x4794, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd33d);
        EXPECT(gbc.pc(), 0x4796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02D1
        gbc.setState(0x45b2, 0x382d, 0x8330, 0x11be, 0xd75f, 0x563e, 0x0, 0x1);
        gbc.writeMem(0x45b2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x382d);
        EXPECT(gbc.pc(), 0x45b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02D2
        gbc.setState(0xbc74, 0x30cd, 0x3a20, 0x33da, 0xad71, 0xa6be, 0x1, 0x0);
        gbc.writeMem(0xbc74, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x30cd);
        EXPECT(gbc.pc(), 0xbc76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc74), 0xcb);
        EXPECT(gbc.readMem(0xbc75), 0x29);
        // CB 29 02D3
        gbc.setState(0x5a3f, 0x1058, 0xe620, 0x46cd, 0x5f7a, 0x9946, 0x0, 0x1);
        gbc.writeMem(0x5a3f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1058);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02D4
        gbc.setState(0x4887, 0xb163, 0xfde0, 0x736d, 0x8210, 0x41f7, 0x1, 0x0);
        gbc.writeMem(0x4887, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb163);
        EXPECT(gbc.pc(), 0x4889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02D5
        gbc.setState(0x835f, 0xc25e, 0xc830, 0xc74d, 0x929a, 0x8585, 0x0, 0x1);
        gbc.writeMem(0x835f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc25e);
        EXPECT(gbc.pc(), 0x8361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835f), 0xcb);
        EXPECT(gbc.readMem(0x8360), 0x29);
        // CB 29 02D6
        gbc.setState(0x15f8, 0x9782, 0xcde0, 0x3ca9, 0x6f07, 0x670f, 0x1, 0x0);
        gbc.writeMem(0x15f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9782);
        EXPECT(gbc.pc(), 0x15fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02D7
        gbc.setState(0xbb11, 0xd21f, 0x3940, 0x2901, 0x2cf6, 0x538c, 0x0, 0x0);
        gbc.writeMem(0xbb11, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0xbb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb11), 0xcb);
        EXPECT(gbc.readMem(0xbb12), 0x29);
        // CB 29 02D8
        gbc.setState(0xa415, 0x10d6, 0xfb90, 0xb654, 0x134f, 0x8839, 0x1, 0x1);
        gbc.writeMem(0xa415, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0xa417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa415), 0xcb);
        EXPECT(gbc.readMem(0xa416), 0x29);
        // CB 29 02D9
        gbc.setState(0x95f4, 0x57b6, 0x2ae0, 0x4a20, 0x38af, 0xa657, 0x0, 0x1);
        gbc.writeMem(0x95f4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x57b6);
        EXPECT(gbc.pc(), 0x95f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f4), 0xcb);
        EXPECT(gbc.readMem(0x95f5), 0x29);
        // CB 29 02DA
        gbc.setState(0xc008, 0xd3c8, 0xbfa0, 0xb99d, 0x3635, 0x214, 0x1, 0x1);
        gbc.writeMem(0xc008, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd3c8);
        EXPECT(gbc.pc(), 0xc00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc008), 0xcb);
        EXPECT(gbc.readMem(0xc009), 0x29);
        // CB 29 02DB
        gbc.setState(0xccd7, 0xaa60, 0x68a0, 0x7f8, 0x5614, 0xcb27, 0x0, 0x0);
        gbc.writeMem(0xccd7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0xccd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd7), 0xcb);
        EXPECT(gbc.readMem(0xccd8), 0x29);
        // CB 29 02DC
        gbc.setState(0xecea, 0x1793, 0x9f0, 0xf51f, 0x955b, 0xed51, 0x1, 0x1);
        gbc.writeMem(0xecea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1793);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0x29);
        // CB 29 02DD
        gbc.setState(0x6aef, 0x127, 0x92c0, 0xd128, 0x89a4, 0xb8bb, 0x0, 0x0);
        gbc.writeMem(0x6aef, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x127);
        EXPECT(gbc.pc(), 0x6af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02DF
        gbc.setState(0x1e26, 0xff2a, 0x1d90, 0xf206, 0x409b, 0x3b1b, 0x1, 0x0);
        gbc.writeMem(0x1e26, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xff2a);
        EXPECT(gbc.pc(), 0x1e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02E0
        gbc.setState(0x8502, 0xed36, 0x36d0, 0xdcff, 0x8ca2, 0x1648, 0x1, 0x1);
        gbc.writeMem(0x8502, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xed36);
        EXPECT(gbc.pc(), 0x8504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8502), 0xcb);
        EXPECT(gbc.readMem(0x8503), 0x29);
        // CB 29 02E1
        gbc.setState(0x64b9, 0x2b13, 0xe510, 0x73fa, 0x1126, 0xe8b6, 0x1, 0x1);
        gbc.writeMem(0x64b9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2b13);
        EXPECT(gbc.pc(), 0x64bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02E2
        gbc.setState(0x8f60, 0x7391, 0xa110, 0x954e, 0xb0e0, 0x2cd3, 0x1, 0x1);
        gbc.writeMem(0x8f60, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7391);
        EXPECT(gbc.pc(), 0x8f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f60), 0xcb);
        EXPECT(gbc.readMem(0x8f61), 0x29);
        // CB 29 02E4
        gbc.setState(0xe621, 0xa8f9, 0xbec0, 0xae2b, 0xa2ef, 0xd5b4, 0x0, 0x0);
        gbc.writeMem(0xe621, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0xe623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe621), 0xcb);
        EXPECT(gbc.readMem(0xe622), 0x29);
        // CB 29 02E5
        gbc.setState(0xb519, 0x57b7, 0xbee0, 0xc361, 0x160e, 0xc689, 0x1, 0x0);
        gbc.writeMem(0xb519, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x57b7);
        EXPECT(gbc.pc(), 0xb51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb519), 0xcb);
        EXPECT(gbc.readMem(0xb51a), 0x29);
        // CB 29 02E6
        gbc.setState(0x1fc, 0xe691, 0xfa50, 0xb9, 0x3bc7, 0x9959, 0x1, 0x0);
        gbc.writeMem(0x1fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe691);
        EXPECT(gbc.pc(), 0x1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02E7
        gbc.setState(0xd7d2, 0x8cdc, 0xfbb0, 0xb8a0, 0x2fce, 0xb6d7, 0x0, 0x1);
        gbc.writeMem(0xd7d2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8cdc);
        EXPECT(gbc.pc(), 0xd7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d2), 0xcb);
        EXPECT(gbc.readMem(0xd7d3), 0x29);
        // CB 29 02E8
        gbc.setState(0x7b74, 0x3fad, 0xc210, 0x432c, 0x7c7e, 0x8628, 0x1, 0x1);
        gbc.writeMem(0x7b74, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3fad);
        EXPECT(gbc.pc(), 0x7b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02E9
        gbc.setState(0xe41e, 0x776, 0x140, 0xee92, 0x8899, 0xacd0, 0x1, 0x0);
        gbc.writeMem(0xe41e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x776);
        EXPECT(gbc.pc(), 0xe420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41e), 0xcb);
        EXPECT(gbc.readMem(0xe41f), 0x29);
        // CB 29 02EA
        gbc.setState(0x3462, 0x2f21, 0x1d70, 0x1966, 0x68d1, 0x3fd6, 0x0, 0x0);
        gbc.writeMem(0x3462, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2f21);
        EXPECT(gbc.pc(), 0x3464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02EB
        gbc.setState(0xc209, 0xfda2, 0x560, 0x3650, 0xf8fa, 0x3016, 0x1, 0x0);
        gbc.writeMem(0xc209, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfda2);
        EXPECT(gbc.pc(), 0xc20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc209), 0xcb);
        EXPECT(gbc.readMem(0xc20a), 0x29);
        // CB 29 02EC
        gbc.setState(0xe635, 0x2082, 0x7570, 0xdbba, 0x7a68, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xe635, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2082);
        EXPECT(gbc.pc(), 0xe637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe635), 0xcb);
        EXPECT(gbc.readMem(0xe636), 0x29);
        // CB 29 02ED
        gbc.setState(0x2706, 0x6a57, 0x1fc0, 0xf280, 0x91d3, 0x7808, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6a57);
        EXPECT(gbc.pc(), 0x2708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02EE
        gbc.setState(0xbe10, 0xa990, 0xad40, 0x85a8, 0xe14a, 0xf838, 0x0, 0x0);
        gbc.writeMem(0xbe10, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa990);
        EXPECT(gbc.pc(), 0xbe12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe10), 0xcb);
        EXPECT(gbc.readMem(0xbe11), 0x29);
        // CB 29 02EF
        gbc.setState(0x60bd, 0x30e6, 0x4160, 0x1c5e, 0xd1, 0xf652, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x30e6);
        EXPECT(gbc.pc(), 0x60bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02F1
        gbc.setState(0x4dd7, 0xaf23, 0xc0, 0xb756, 0x1584, 0xde81, 0x1, 0x1);
        gbc.writeMem(0x4dd7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xaf23);
        EXPECT(gbc.pc(), 0x4dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02F2
        gbc.setState(0xe75, 0x2e22, 0xbf0, 0x5165, 0xa965, 0xd950, 0x1, 0x1);
        gbc.writeMem(0xe75, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2e22);
        EXPECT(gbc.pc(), 0xe77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02F3
        gbc.setState(0x70cf, 0x3db2, 0x30e0, 0xd751, 0xa21b, 0x80ed, 0x0, 0x0);
        gbc.writeMem(0x70cf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3db2);
        EXPECT(gbc.pc(), 0x70d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02F4
        gbc.setState(0x3e45, 0xf0af, 0xf70, 0xfe23, 0x87f5, 0x2d70, 0x1, 0x1);
        gbc.writeMem(0x3e45, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf0af);
        EXPECT(gbc.pc(), 0x3e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02F5
        gbc.setState(0x64dc, 0xc454, 0xeeb0, 0xcd8d, 0x2365, 0xa7ec, 0x0, 0x1);
        gbc.writeMem(0x64dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc454);
        EXPECT(gbc.pc(), 0x64de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02F6
        gbc.setState(0x93a4, 0x8e33, 0x8160, 0xccf4, 0x3a27, 0x646c, 0x1, 0x0);
        gbc.writeMem(0x93a4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8e33);
        EXPECT(gbc.pc(), 0x93a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a4), 0xcb);
        EXPECT(gbc.readMem(0x93a5), 0x29);
        // CB 29 02F7
        gbc.setState(0x6773, 0xd88, 0x3ce0, 0x33bd, 0xe82c, 0x3a43, 0x0, 0x0);
        gbc.writeMem(0x6773, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd88);
        EXPECT(gbc.pc(), 0x6775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02F8
        gbc.setState(0xe53b, 0xf8a, 0x9060, 0xf54, 0xcd33, 0x2bda, 0x0, 0x0);
        gbc.writeMem(0xe53b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf8a);
        EXPECT(gbc.pc(), 0xe53d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53b), 0xcb);
        EXPECT(gbc.readMem(0xe53c), 0x29);
        // CB 29 02F9
        gbc.setState(0x113a, 0xcaf0, 0xc090, 0xefbe, 0xa241, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x113a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcaf0);
        EXPECT(gbc.pc(), 0x113c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02FA
        gbc.setState(0x5c88, 0xd9f4, 0xec50, 0xdf92, 0x8f85, 0x3711, 0x0, 0x1);
        gbc.writeMem(0x5c88, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd9f4);
        EXPECT(gbc.pc(), 0x5c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02FB
        gbc.setState(0x6bbc, 0x8104, 0x2980, 0x2051, 0x315, 0x4186, 0x0, 0x0);
        gbc.writeMem(0x6bbc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8104);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02FC
        gbc.setState(0x592, 0xd9d8, 0x9760, 0x9bfb, 0xb6c, 0xcd43, 0x1, 0x0);
        gbc.writeMem(0x592, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0x594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 02FD
        gbc.setState(0x368e, 0x88ec, 0xeff0, 0xe68c, 0x8f73, 0x7f21, 0x1, 0x0);
        gbc.writeMem(0x368e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x88ec);
        EXPECT(gbc.pc(), 0x3690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02FE
        gbc.setState(0x58a5, 0x515a, 0xa0d0, 0xd022, 0xe835, 0x6263, 0x0, 0x1);
        gbc.writeMem(0x58a5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x515a);
        EXPECT(gbc.pc(), 0x58a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 02FF
        gbc.setState(0xb852, 0x4d6e, 0x10f0, 0x754, 0xc818, 0xae59, 0x1, 0x1);
        gbc.writeMem(0xb852, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4d6e);
        EXPECT(gbc.pc(), 0xb854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb852), 0xcb);
        EXPECT(gbc.readMem(0xb853), 0x29);
        // CB 29 0300
        gbc.setState(0x6d3e, 0xf397, 0xcb60, 0xed22, 0xe286, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x6d3e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0x6d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0301
        gbc.setState(0x5b91, 0x957a, 0x2e30, 0xe99b, 0x9528, 0xd68, 0x1, 0x1);
        gbc.writeMem(0x5b91, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x957a);
        EXPECT(gbc.pc(), 0x5b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0302
        gbc.setState(0x7441, 0xcbe6, 0xd570, 0x20fb, 0x4b19, 0x7261, 0x0, 0x1);
        gbc.writeMem(0x7441, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcbe6);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0303
        gbc.setState(0x1480, 0x41cf, 0x2b10, 0x8722, 0x4e1c, 0xa3e7, 0x1, 0x1);
        gbc.writeMem(0x1480, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x41cf);
        EXPECT(gbc.pc(), 0x1482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0304
        gbc.setState(0xa8f5, 0x203b, 0xbdf0, 0xd18a, 0xd91e, 0xdf3a, 0x1, 0x0);
        gbc.writeMem(0xa8f5, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x203b);
        EXPECT(gbc.pc(), 0xa8f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f5), 0xcb);
        EXPECT(gbc.readMem(0xa8f6), 0x29);
        // CB 29 0305
        gbc.setState(0xbd4a, 0xa670, 0x5910, 0x90f6, 0xb81a, 0x9d76, 0x0, 0x1);
        gbc.writeMem(0xbd4a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa670);
        EXPECT(gbc.pc(), 0xbd4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4a), 0xcb);
        EXPECT(gbc.readMem(0xbd4b), 0x29);
        // CB 29 0306
        gbc.setState(0x3233, 0x100d, 0xa710, 0x5628, 0x65af, 0xa445, 0x0, 0x0);
        gbc.writeMem(0x3233, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x100d);
        EXPECT(gbc.pc(), 0x3235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0307
        gbc.setState(0xcfae, 0xe9b, 0xce50, 0xedd5, 0x15cc, 0xf848, 0x1, 0x1);
        gbc.writeMem(0xcfae, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe9b);
        EXPECT(gbc.pc(), 0xcfb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfae), 0xcb);
        EXPECT(gbc.readMem(0xcfaf), 0x29);
        // CB 29 0308
        gbc.setState(0x5bfc, 0x5e06, 0xcee0, 0xce4d, 0xb9c5, 0x72aa, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5e06);
        EXPECT(gbc.pc(), 0x5bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0309
        gbc.setState(0x8c7, 0x7be2, 0xff80, 0xdc5e, 0x6db8, 0xe6f1, 0x1, 0x0);
        gbc.writeMem(0x8c7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7be2);
        EXPECT(gbc.pc(), 0x8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 030A
        gbc.setState(0x6a95, 0xb05c, 0xd650, 0xde93, 0xa618, 0x9614, 0x0, 0x0);
        gbc.writeMem(0x6a95, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb05c);
        EXPECT(gbc.pc(), 0x6a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 030B
        gbc.setState(0x13a1, 0x7737, 0x1a20, 0xa101, 0xc90a, 0x92f9, 0x1, 0x1);
        gbc.writeMem(0x13a1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7737);
        EXPECT(gbc.pc(), 0x13a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 030C
        gbc.setState(0x57ae, 0x3e32, 0x6ca0, 0xb1cc, 0xc750, 0xb81a, 0x0, 0x1);
        gbc.writeMem(0x57ae, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3e32);
        EXPECT(gbc.pc(), 0x57b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 030D
        gbc.setState(0x3f1a, 0x6940, 0xbc70, 0xc6a6, 0x3b87, 0x70c7, 0x1, 0x1);
        gbc.writeMem(0x3f1a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6940);
        EXPECT(gbc.pc(), 0x3f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 030E
        gbc.setState(0x3d2c, 0x2601, 0xe7f0, 0x72da, 0xe4c4, 0x2d4a, 0x0, 0x1);
        gbc.writeMem(0x3d2c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2601);
        EXPECT(gbc.pc(), 0x3d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0310
        gbc.setState(0xcfde, 0xdca2, 0x3e50, 0xe90f, 0x275b, 0xad47, 0x0, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdca2);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfde), 0xcb);
        EXPECT(gbc.readMem(0xcfdf), 0x29);
        // CB 29 0311
        gbc.setState(0x8fd7, 0x58ff, 0xcc40, 0x6fda, 0xa94d, 0x306f, 0x1, 0x1);
        gbc.writeMem(0x8fd7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x58ff);
        EXPECT(gbc.pc(), 0x8fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd7), 0xcb);
        EXPECT(gbc.readMem(0x8fd8), 0x29);
        // CB 29 0313
        gbc.setState(0x1c9f, 0x8a62, 0x6930, 0xfb3, 0xf155, 0x9429, 0x1, 0x1);
        gbc.writeMem(0x1c9f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8a62);
        EXPECT(gbc.pc(), 0x1ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0314
        gbc.setState(0x34cf, 0xd707, 0xf540, 0xf17a, 0x19ec, 0x5f78, 0x0, 0x0);
        gbc.writeMem(0x34cf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd707);
        EXPECT(gbc.pc(), 0x34d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0315
        gbc.setState(0xc2b1, 0x3801, 0x1450, 0x842b, 0x23e3, 0x511, 0x0, 0x0);
        gbc.writeMem(0xc2b1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3801);
        EXPECT(gbc.pc(), 0xc2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b1), 0xcb);
        EXPECT(gbc.readMem(0xc2b2), 0x29);
        // CB 29 0316
        gbc.setState(0x12c9, 0xc62e, 0xdc00, 0x3963, 0x75b2, 0x9a91, 0x0, 0x0);
        gbc.writeMem(0x12c9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc62e);
        EXPECT(gbc.pc(), 0x12cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0317
        gbc.setState(0x5d0b, 0xeea7, 0x7470, 0x5029, 0x367c, 0x60c9, 0x0, 0x1);
        gbc.writeMem(0x5d0b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xeea7);
        EXPECT(gbc.pc(), 0x5d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0318
        gbc.setState(0x9639, 0x5682, 0x62e0, 0xda3d, 0xb4ee, 0xbdb5, 0x1, 0x0);
        gbc.writeMem(0x9639, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5682);
        EXPECT(gbc.pc(), 0x963b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9639), 0xcb);
        EXPECT(gbc.readMem(0x963a), 0x29);
        // CB 29 0319
        gbc.setState(0x3cfe, 0xe178, 0x5690, 0xfa13, 0x1449, 0x200f, 0x0, 0x0);
        gbc.writeMem(0x3cfe, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe178);
        EXPECT(gbc.pc(), 0x3d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 031A
        gbc.setState(0x8cac, 0xb32d, 0xf200, 0xf380, 0x444d, 0x79f8, 0x0, 0x1);
        gbc.writeMem(0x8cac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb32d);
        EXPECT(gbc.pc(), 0x8cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cac), 0xcb);
        EXPECT(gbc.readMem(0x8cad), 0x29);
        // CB 29 031B
        gbc.setState(0xe7ff, 0x56f8, 0x9690, 0x4adf, 0x3036, 0xb68f, 0x0, 0x1);
        gbc.writeMem(0xe7ff, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x56f8);
        EXPECT(gbc.pc(), 0xe801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ff), 0xcb);
        EXPECT(gbc.readMem(0xe800), 0x29);
        // CB 29 031C
        gbc.setState(0xdf55, 0xb23e, 0x3e50, 0x397d, 0x1f32, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0xdf55, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb23e);
        EXPECT(gbc.pc(), 0xdf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf55), 0xcb);
        EXPECT(gbc.readMem(0xdf56), 0x29);
        // CB 29 031D
        gbc.setState(0x6d6b, 0x8f87, 0x130, 0x9728, 0xd4a4, 0x383d, 0x1, 0x1);
        gbc.writeMem(0x6d6b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8f87);
        EXPECT(gbc.pc(), 0x6d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 031E
        gbc.setState(0x8724, 0x5ac2, 0xde70, 0xd3e7, 0x57ae, 0xa100, 0x1, 0x0);
        gbc.writeMem(0x8724, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5ac2);
        EXPECT(gbc.pc(), 0x8726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8724), 0xcb);
        EXPECT(gbc.readMem(0x8725), 0x29);
        // CB 29 031F
        gbc.setState(0xb24d, 0xa44f, 0x7560, 0x6791, 0xeb08, 0x8525, 0x1, 0x1);
        gbc.writeMem(0xb24d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa44f);
        EXPECT(gbc.pc(), 0xb24f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24d), 0xcb);
        EXPECT(gbc.readMem(0xb24e), 0x29);
        // CB 29 0320
        gbc.setState(0x2018, 0xfee, 0xb6b0, 0x21da, 0x8b96, 0x197e, 0x0, 0x1);
        gbc.writeMem(0x2018, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfee);
        EXPECT(gbc.pc(), 0x201a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0321
        gbc.setState(0x859c, 0x557c, 0x4510, 0xb5ce, 0x5b06, 0xe10a, 0x0, 0x0);
        gbc.writeMem(0x859c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x557c);
        EXPECT(gbc.pc(), 0x859e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0xcb);
        EXPECT(gbc.readMem(0x859d), 0x29);
        // CB 29 0322
        gbc.setState(0xb36, 0x1e61, 0x63c0, 0x70fe, 0xfe98, 0x2a40, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1e61);
        EXPECT(gbc.pc(), 0xb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0323
        gbc.setState(0x2e0d, 0xdea7, 0x6ca0, 0x4c72, 0x7342, 0xa3b9, 0x1, 0x0);
        gbc.writeMem(0x2e0d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdea7);
        EXPECT(gbc.pc(), 0x2e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0324
        gbc.setState(0xa06f, 0x1eb, 0x9b00, 0x91d2, 0x1700, 0x8a5a, 0x1, 0x0);
        gbc.writeMem(0xa06f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0xa071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06f), 0xcb);
        EXPECT(gbc.readMem(0xa070), 0x29);
        // CB 29 0325
        gbc.setState(0xc4af, 0xf7c8, 0x78d0, 0xfcc7, 0x8ae5, 0xe00d, 0x1, 0x0);
        gbc.writeMem(0xc4af, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf7c8);
        EXPECT(gbc.pc(), 0xc4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4af), 0xcb);
        EXPECT(gbc.readMem(0xc4b0), 0x29);
        // CB 29 0326
        gbc.setState(0x37ca, 0xf5a, 0x64a0, 0xc21f, 0xa779, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0x37ca, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf5a);
        EXPECT(gbc.pc(), 0x37cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0327
        gbc.setState(0x8b5f, 0x4de3, 0xcf50, 0x5724, 0x8f89, 0x5c86, 0x0, 0x1);
        gbc.writeMem(0x8b5f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4de3);
        EXPECT(gbc.pc(), 0x8b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5f), 0xcb);
        EXPECT(gbc.readMem(0x8b60), 0x29);
        // CB 29 0328
        gbc.setState(0x4436, 0xaa15, 0x5b00, 0xc8a2, 0x3e58, 0x5e9c, 0x0, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xaa15);
        EXPECT(gbc.pc(), 0x4438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0329
        gbc.setState(0xe455, 0x3bee, 0x20b0, 0x4134, 0xf4fa, 0x1959, 0x1, 0x0);
        gbc.writeMem(0xe455, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3bee);
        EXPECT(gbc.pc(), 0xe457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe455), 0xcb);
        EXPECT(gbc.readMem(0xe456), 0x29);
        // CB 29 032A
        gbc.setState(0xd1f8, 0xa514, 0x3300, 0xfd44, 0x54a3, 0xe27, 0x1, 0x0);
        gbc.writeMem(0xd1f8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa514);
        EXPECT(gbc.pc(), 0xd1fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f8), 0xcb);
        EXPECT(gbc.readMem(0xd1f9), 0x29);
        // CB 29 032B
        gbc.setState(0xbd0f, 0x3ea7, 0xee40, 0x5aae, 0xb1fe, 0x6ef4, 0x0, 0x0);
        gbc.writeMem(0xbd0f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3ea7);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0f), 0xcb);
        EXPECT(gbc.readMem(0xbd10), 0x29);
        // CB 29 032C
        gbc.setState(0x1cd3, 0x655f, 0xb090, 0x81a3, 0xf0f2, 0xdb75, 0x1, 0x0);
        gbc.writeMem(0x1cd3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x655f);
        EXPECT(gbc.pc(), 0x1cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 032D
        gbc.setState(0x1de0, 0xc929, 0x46f0, 0xb4fe, 0x54a2, 0x664f, 0x0, 0x1);
        gbc.writeMem(0x1de0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc929);
        EXPECT(gbc.pc(), 0x1de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 032E
        gbc.setState(0x8bb8, 0x757f, 0xff40, 0x3f5f, 0x5dd0, 0xce21, 0x0, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x757f);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0x29);
        // CB 29 032F
        gbc.setState(0xc887, 0xdbeb, 0x9ab0, 0xd025, 0x7f6c, 0x9e02, 0x0, 0x1);
        gbc.writeMem(0xc887, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdbeb);
        EXPECT(gbc.pc(), 0xc889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc887), 0xcb);
        EXPECT(gbc.readMem(0xc888), 0x29);
        // CB 29 0330
        gbc.setState(0x7e96, 0x34e5, 0x18f0, 0xe3c3, 0x815c, 0x432d, 0x0, 0x0);
        gbc.writeMem(0x7e96, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x34e5);
        EXPECT(gbc.pc(), 0x7e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0331
        gbc.setState(0x5a47, 0xfba7, 0xa8a0, 0xb5f7, 0x470a, 0xa8f, 0x1, 0x1);
        gbc.writeMem(0x5a47, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfba7);
        EXPECT(gbc.pc(), 0x5a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0332
        gbc.setState(0xe2bf, 0x3bda, 0x6c10, 0x8b66, 0xf740, 0xd189, 0x0, 0x1);
        gbc.writeMem(0xe2bf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3bda);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bf), 0xcb);
        EXPECT(gbc.readMem(0xe2c0), 0x29);
        // CB 29 0333
        gbc.setState(0x74ff, 0x4815, 0x26d0, 0xb2f5, 0xa94c, 0x5992, 0x1, 0x0);
        gbc.writeMem(0x74ff, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4815);
        EXPECT(gbc.pc(), 0x7501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0334
        gbc.setState(0x11ee, 0x2a2, 0xea0, 0x4370, 0xee41, 0xa2ca, 0x0, 0x0);
        gbc.writeMem(0x11ee, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2a2);
        EXPECT(gbc.pc(), 0x11f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0335
        gbc.setState(0xc8e4, 0x1ca2, 0x56d0, 0x2a91, 0x9dee, 0xa660, 0x0, 0x1);
        gbc.writeMem(0xc8e4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1ca2);
        EXPECT(gbc.pc(), 0xc8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e4), 0xcb);
        EXPECT(gbc.readMem(0xc8e5), 0x29);
        // CB 29 0336
        gbc.setState(0xcf9d, 0xbcba, 0xb840, 0xac9, 0x5470, 0xc918, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbcba);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0x29);
        // CB 29 0337
        gbc.setState(0x9136, 0xcf44, 0x4c0, 0x6e95, 0x6962, 0x58d8, 0x0, 0x0);
        gbc.writeMem(0x9136, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcf44);
        EXPECT(gbc.pc(), 0x9138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9136), 0xcb);
        EXPECT(gbc.readMem(0x9137), 0x29);
        // CB 29 0338
        gbc.setState(0x50b0, 0x243e, 0x650, 0xafbf, 0x91a3, 0x88c5, 0x1, 0x0);
        gbc.writeMem(0x50b0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x243e);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0339
        gbc.setState(0x6d18, 0x6fe1, 0x33d0, 0xd27c, 0x6632, 0x227e, 0x1, 0x1);
        gbc.writeMem(0x6d18, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6fe1);
        EXPECT(gbc.pc(), 0x6d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 033A
        gbc.setState(0xc42f, 0xa0d0, 0x19a0, 0x2676, 0x695e, 0x344a, 0x0, 0x1);
        gbc.writeMem(0xc42f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa0d0);
        EXPECT(gbc.pc(), 0xc431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42f), 0xcb);
        EXPECT(gbc.readMem(0xc430), 0x29);
        // CB 29 033B
        gbc.setState(0x85ad, 0xc9f6, 0x4d0, 0x3c50, 0x2991, 0x553d, 0x1, 0x1);
        gbc.writeMem(0x85ad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc9f6);
        EXPECT(gbc.pc(), 0x85af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ad), 0xcb);
        EXPECT(gbc.readMem(0x85ae), 0x29);
        // CB 29 033C
        gbc.setState(0xd142, 0x525b, 0x7960, 0xdab6, 0x3bd8, 0xdd84, 0x0, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x525b);
        EXPECT(gbc.pc(), 0xd144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd142), 0xcb);
        EXPECT(gbc.readMem(0xd143), 0x29);
        // CB 29 033D
        gbc.setState(0x16cd, 0x8bcf, 0x7d50, 0x7957, 0x582a, 0x76e, 0x0, 0x0);
        gbc.writeMem(0x16cd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8bcf);
        EXPECT(gbc.pc(), 0x16cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 033E
        gbc.setState(0xefbd, 0x3409, 0x65d0, 0x2b95, 0x5dcd, 0x96d7, 0x1, 0x1);
        gbc.writeMem(0xefbd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3409);
        EXPECT(gbc.pc(), 0xefbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbd), 0xcb);
        EXPECT(gbc.readMem(0xefbe), 0x29);
        // CB 29 033F
        gbc.setState(0xe91, 0xf311, 0xfe10, 0xbac3, 0x3faf, 0x498d, 0x0, 0x0);
        gbc.writeMem(0xe91, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf311);
        EXPECT(gbc.pc(), 0xe93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0340
        gbc.setState(0x645b, 0xd166, 0x6f90, 0xfba6, 0xfa06, 0x9c3d, 0x0, 0x0);
        gbc.writeMem(0x645b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd166);
        EXPECT(gbc.pc(), 0x645d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0341
        gbc.setState(0x4645, 0xe7e, 0x9900, 0x7058, 0xa989, 0x8574, 0x1, 0x0);
        gbc.writeMem(0x4645, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe7e);
        EXPECT(gbc.pc(), 0x4647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0342
        gbc.setState(0xaa8b, 0xc271, 0x480, 0x4037, 0x23ee, 0x421a, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc271);
        EXPECT(gbc.pc(), 0xaa8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8b), 0xcb);
        EXPECT(gbc.readMem(0xaa8c), 0x29);
        // CB 29 0343
        gbc.setState(0xa6cc, 0x828a, 0xaa40, 0x7dba, 0xa523, 0x4cb5, 0x0, 0x0);
        gbc.writeMem(0xa6cc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0xa6ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cc), 0xcb);
        EXPECT(gbc.readMem(0xa6cd), 0x29);
        // CB 29 0344
        gbc.setState(0xeca9, 0x21f2, 0x2960, 0x78c8, 0xad00, 0x3833, 0x1, 0x1);
        gbc.writeMem(0xeca9, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x21f2);
        EXPECT(gbc.pc(), 0xecab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca9), 0xcb);
        EXPECT(gbc.readMem(0xecaa), 0x29);
        // CB 29 0345
        gbc.setState(0xa61e, 0x6737, 0xf90, 0xaf1e, 0x8b2e, 0x6867, 0x1, 0x1);
        gbc.writeMem(0xa61e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6737);
        EXPECT(gbc.pc(), 0xa620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61e), 0xcb);
        EXPECT(gbc.readMem(0xa61f), 0x29);
        // CB 29 0346
        gbc.setState(0x6713, 0x8719, 0xb520, 0xac70, 0xeac1, 0x530a, 0x0, 0x0);
        gbc.writeMem(0x6713, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8719);
        EXPECT(gbc.pc(), 0x6715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0347
        gbc.setState(0xc13a, 0xe5d4, 0x43e0, 0xbda2, 0xe901, 0x2e9b, 0x1, 0x0);
        gbc.writeMem(0xc13a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe5d4);
        EXPECT(gbc.pc(), 0xc13c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13a), 0xcb);
        EXPECT(gbc.readMem(0xc13b), 0x29);
        // CB 29 0348
        gbc.setState(0x4c2e, 0x6e8c, 0xcf80, 0x2190, 0x838f, 0xf59a, 0x1, 0x1);
        gbc.writeMem(0x4c2e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0x4c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0349
        gbc.setState(0xe2e, 0x64f2, 0x5240, 0xeebe, 0x9506, 0x4c8d, 0x1, 0x0);
        gbc.writeMem(0xe2e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x64f2);
        EXPECT(gbc.pc(), 0xe30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 034B
        gbc.setState(0xc304, 0xd8f1, 0xced0, 0xe8c0, 0x64aa, 0x8756, 0x0, 0x0);
        gbc.writeMem(0xc304, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd8f1);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0x29);
        // CB 29 034D
        gbc.setState(0x32dc, 0x33df, 0x1fe0, 0x4495, 0xb525, 0x14c, 0x0, 0x1);
        gbc.writeMem(0x32dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x33df);
        EXPECT(gbc.pc(), 0x32de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 034E
        gbc.setState(0x866f, 0x302f, 0x8820, 0xb468, 0x3295, 0x406d, 0x0, 0x1);
        gbc.writeMem(0x866f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0x8671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866f), 0xcb);
        EXPECT(gbc.readMem(0x8670), 0x29);
        // CB 29 034F
        gbc.setState(0xbdf0, 0xd09d, 0x57f0, 0x11f5, 0x8d1b, 0xd0c6, 0x1, 0x1);
        gbc.writeMem(0xbdf0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd09d);
        EXPECT(gbc.pc(), 0xbdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf0), 0xcb);
        EXPECT(gbc.readMem(0xbdf1), 0x29);
        // CB 29 0350
        gbc.setState(0xc8e4, 0xade4, 0x5c90, 0x52e7, 0xc9c7, 0x9261, 0x0, 0x0);
        gbc.writeMem(0xc8e4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xade4);
        EXPECT(gbc.pc(), 0xc8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e4), 0xcb);
        EXPECT(gbc.readMem(0xc8e5), 0x29);
        // CB 29 0351
        gbc.setState(0x5957, 0xf17, 0xae40, 0x9740, 0x6f8f, 0xff5a, 0x1, 0x0);
        gbc.writeMem(0x5957, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0x5959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0352
        gbc.setState(0xdf70, 0xe590, 0x370, 0xc1eb, 0xab01, 0xca0f, 0x1, 0x0);
        gbc.writeMem(0xdf70, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe590);
        EXPECT(gbc.pc(), 0xdf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf70), 0xcb);
        EXPECT(gbc.readMem(0xdf71), 0x29);
        // CB 29 0353
        gbc.setState(0x52, 0xcb62, 0x6370, 0xaf4b, 0x7fd1, 0x2254, 0x1, 0x1);
        gbc.writeMem(0x52, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcb62);
        EXPECT(gbc.pc(), 0x54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0354
        gbc.setState(0x8e2c, 0x8d28, 0x4890, 0x4626, 0x72fe, 0x7a86, 0x0, 0x0);
        gbc.writeMem(0x8e2c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8d28);
        EXPECT(gbc.pc(), 0x8e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2c), 0xcb);
        EXPECT(gbc.readMem(0x8e2d), 0x29);
        // CB 29 0355
        gbc.setState(0xdf99, 0xc198, 0x70e0, 0x30cf, 0x9343, 0x612c, 0x0, 0x0);
        gbc.writeMem(0xdf99, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc198);
        EXPECT(gbc.pc(), 0xdf9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf99), 0xcb);
        EXPECT(gbc.readMem(0xdf9a), 0x29);
        // CB 29 0356
        gbc.setState(0x932c, 0x9988, 0xc360, 0xef1d, 0x4cf4, 0x70ab, 0x0, 0x0);
        gbc.writeMem(0x932c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9988);
        EXPECT(gbc.pc(), 0x932e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932c), 0xcb);
        EXPECT(gbc.readMem(0x932d), 0x29);
        // CB 29 0357
        gbc.setState(0xc014, 0x8aca, 0x2ff0, 0xcf1e, 0x2a41, 0xa832, 0x0, 0x1);
        gbc.writeMem(0xc014, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8aca);
        EXPECT(gbc.pc(), 0xc016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc014), 0xcb);
        EXPECT(gbc.readMem(0xc015), 0x29);
        // CB 29 0358
        gbc.setState(0x20fc, 0xca1, 0xe200, 0x2df, 0x283a, 0xb53e, 0x0, 0x1);
        gbc.writeMem(0x20fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xca1);
        EXPECT(gbc.pc(), 0x20fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0359
        gbc.setState(0xd7d3, 0xa0b2, 0xc0e0, 0x17a7, 0x4a8a, 0x5cb7, 0x0, 0x0);
        gbc.writeMem(0xd7d3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa0b2);
        EXPECT(gbc.pc(), 0xd7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d3), 0xcb);
        EXPECT(gbc.readMem(0xd7d4), 0x29);
        // CB 29 035A
        gbc.setState(0xbc5a, 0x68f, 0xdd20, 0xeac4, 0x8883, 0x5c2f, 0x1, 0x0);
        gbc.writeMem(0xbc5a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x68f);
        EXPECT(gbc.pc(), 0xbc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5a), 0xcb);
        EXPECT(gbc.readMem(0xbc5b), 0x29);
        // CB 29 035B
        gbc.setState(0xdbac, 0xe4fc, 0x7160, 0xb264, 0x82e, 0xa641, 0x0, 0x1);
        gbc.writeMem(0xdbac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe4fc);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbac), 0xcb);
        EXPECT(gbc.readMem(0xdbad), 0x29);
        // CB 29 035C
        gbc.setState(0x236f, 0xde5c, 0x6310, 0x2a76, 0xaa00, 0x6990, 0x1, 0x1);
        gbc.writeMem(0x236f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xde5c);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 035D
        gbc.setState(0x2757, 0x2a4a, 0xc70, 0xd709, 0xed97, 0x7ab, 0x1, 0x1);
        gbc.writeMem(0x2757, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2a4a);
        EXPECT(gbc.pc(), 0x2759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 035E
        gbc.setState(0xb17c, 0x1d97, 0xa6b0, 0x36bf, 0xbc7b, 0xbc9a, 0x1, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1d97);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17c), 0xcb);
        EXPECT(gbc.readMem(0xb17d), 0x29);
        // CB 29 035F
        gbc.setState(0xb193, 0x76f0, 0xaf80, 0x7a93, 0x710e, 0x81e8, 0x1, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x76f0);
        EXPECT(gbc.pc(), 0xb195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb193), 0xcb);
        EXPECT(gbc.readMem(0xb194), 0x29);
        // CB 29 0360
        gbc.setState(0xf44, 0x325f, 0xd670, 0xed07, 0x2209, 0x5c58, 0x0, 0x1);
        gbc.writeMem(0xf44, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x325f);
        EXPECT(gbc.pc(), 0xf46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0361
        gbc.setState(0x6c29, 0x52dd, 0x6cb0, 0x4bf6, 0xc2b2, 0xf382, 0x1, 0x1);
        gbc.writeMem(0x6c29, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x52dd);
        EXPECT(gbc.pc(), 0x6c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0363
        gbc.setState(0x1607, 0xd469, 0x7d70, 0x43dd, 0xf28c, 0x63a3, 0x0, 0x0);
        gbc.writeMem(0x1607, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd469);
        EXPECT(gbc.pc(), 0x1609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0364
        gbc.setState(0xe3fa, 0x7e04, 0xbcf0, 0xfa8d, 0x98c3, 0x39b6, 0x0, 0x1);
        gbc.writeMem(0xe3fa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fa), 0xcb);
        EXPECT(gbc.readMem(0xe3fb), 0x29);
        // CB 29 0365
        gbc.setState(0x71d2, 0x5c60, 0x4460, 0xa04f, 0x3840, 0xdf27, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0366
        gbc.setState(0x5d8d, 0x759b, 0x5960, 0xca5f, 0x24dc, 0x5f54, 0x1, 0x1);
        gbc.writeMem(0x5d8d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x759b);
        EXPECT(gbc.pc(), 0x5d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0367
        gbc.setState(0x75f1, 0xed9, 0xcc10, 0x5d19, 0x9443, 0xc173, 0x1, 0x1);
        gbc.writeMem(0x75f1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xed9);
        EXPECT(gbc.pc(), 0x75f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0368
        gbc.setState(0xca43, 0x42e5, 0x2680, 0xac03, 0xb2cf, 0x10d8, 0x1, 0x0);
        gbc.writeMem(0xca43, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x42e5);
        EXPECT(gbc.pc(), 0xca45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca43), 0xcb);
        EXPECT(gbc.readMem(0xca44), 0x29);
        // CB 29 0369
        gbc.setState(0xd6e6, 0xe9f1, 0x19e0, 0x898e, 0x10de, 0x87ff, 0x1, 0x1);
        gbc.writeMem(0xd6e6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe9f1);
        EXPECT(gbc.pc(), 0xd6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e6), 0xcb);
        EXPECT(gbc.readMem(0xd6e7), 0x29);
        // CB 29 036A
        gbc.setState(0x9d72, 0x6cfe, 0xca40, 0xf583, 0x24ba, 0xaced, 0x0, 0x1);
        gbc.writeMem(0x9d72, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6cfe);
        EXPECT(gbc.pc(), 0x9d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d72), 0xcb);
        EXPECT(gbc.readMem(0x9d73), 0x29);
        // CB 29 036B
        gbc.setState(0x2537, 0x38f0, 0xa9f0, 0xd2e4, 0xb73e, 0x408b, 0x0, 0x0);
        gbc.writeMem(0x2537, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0x2539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 036C
        gbc.setState(0x2dc1, 0x47c7, 0xe7b0, 0x7dfc, 0xf106, 0xfd05, 0x0, 0x1);
        gbc.writeMem(0x2dc1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x47c7);
        EXPECT(gbc.pc(), 0x2dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 036D
        gbc.setState(0x4633, 0x1b5b, 0xa940, 0xc782, 0x945, 0x7248, 0x1, 0x1);
        gbc.writeMem(0x4633, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1b5b);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 036E
        gbc.setState(0xd3eb, 0xd93b, 0xba60, 0xa4cb, 0xb630, 0x82a4, 0x0, 0x0);
        gbc.writeMem(0xd3eb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd93b);
        EXPECT(gbc.pc(), 0xd3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3eb), 0xcb);
        EXPECT(gbc.readMem(0xd3ec), 0x29);
        // CB 29 036F
        gbc.setState(0xd53b, 0x314b, 0xfbc0, 0x1880, 0x81e5, 0x8a73, 0x1, 0x1);
        gbc.writeMem(0xd53b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x314b);
        EXPECT(gbc.pc(), 0xd53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53b), 0xcb);
        EXPECT(gbc.readMem(0xd53c), 0x29);
        // CB 29 0370
        gbc.setState(0xa3b4, 0x6fcd, 0x3f20, 0x4a2f, 0x8068, 0x625d, 0x0, 0x1);
        gbc.writeMem(0xa3b4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6fcd);
        EXPECT(gbc.pc(), 0xa3b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b4), 0xcb);
        EXPECT(gbc.readMem(0xa3b5), 0x29);
        // CB 29 0371
        gbc.setState(0xa3ab, 0xcc74, 0xdb50, 0xac9d, 0x38b1, 0x233b, 0x0, 0x0);
        gbc.writeMem(0xa3ab, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcc74);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ab), 0xcb);
        EXPECT(gbc.readMem(0xa3ac), 0x29);
        // CB 29 0372
        gbc.setState(0x9a81, 0xdf4b, 0x9770, 0x4328, 0x29b0, 0x4eb4, 0x0, 0x1);
        gbc.writeMem(0x9a81, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdf4b);
        EXPECT(gbc.pc(), 0x9a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a81), 0xcb);
        EXPECT(gbc.readMem(0x9a82), 0x29);
        // CB 29 0373
        gbc.setState(0x8e4e, 0xfbf6, 0xfcb0, 0xd553, 0xbb47, 0x4ce9, 0x0, 0x0);
        gbc.writeMem(0x8e4e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfbf6);
        EXPECT(gbc.pc(), 0x8e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4e), 0xcb);
        EXPECT(gbc.readMem(0x8e4f), 0x29);
        // CB 29 0374
        gbc.setState(0x247d, 0xc168, 0xe2a0, 0x3071, 0x6b88, 0xbec8, 0x1, 0x1);
        gbc.writeMem(0x247d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc168);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0375
        gbc.setState(0xde78, 0x7303, 0x7e30, 0xc2f9, 0x4c16, 0x8670, 0x1, 0x1);
        gbc.writeMem(0xde78, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7303);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde78), 0xcb);
        EXPECT(gbc.readMem(0xde79), 0x29);
        // CB 29 0376
        gbc.setState(0xa3d7, 0x4075, 0x7c30, 0xc03a, 0xac4e, 0x892a, 0x1, 0x0);
        gbc.writeMem(0xa3d7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4075);
        EXPECT(gbc.pc(), 0xa3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d7), 0xcb);
        EXPECT(gbc.readMem(0xa3d8), 0x29);
        // CB 29 0377
        gbc.setState(0x437d, 0x20d7, 0x50b0, 0xbccb, 0xde92, 0xbd3f, 0x1, 0x0);
        gbc.writeMem(0x437d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x20d7);
        EXPECT(gbc.pc(), 0x437f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0378
        gbc.setState(0x9f4c, 0x4d22, 0x35f0, 0x7409, 0xcc17, 0xe55f, 0x0, 0x0);
        gbc.writeMem(0x9f4c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4d22);
        EXPECT(gbc.pc(), 0x9f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4c), 0xcb);
        EXPECT(gbc.readMem(0x9f4d), 0x29);
        // CB 29 0379
        gbc.setState(0x754e, 0x7144, 0xa580, 0x1256, 0x5dfe, 0x8f2b, 0x0, 0x1);
        gbc.writeMem(0x754e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7144);
        EXPECT(gbc.pc(), 0x7550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 037A
        gbc.setState(0xa1b1, 0x5b21, 0x8f80, 0x6f48, 0x1b14, 0xb005, 0x1, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5b21);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b1), 0xcb);
        EXPECT(gbc.readMem(0xa1b2), 0x29);
        // CB 29 037B
        gbc.setState(0xcb00, 0x6d9a, 0x63b0, 0x1eb6, 0xa5e6, 0xc953, 0x1, 0x1);
        gbc.writeMem(0xcb00, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6d9a);
        EXPECT(gbc.pc(), 0xcb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb00), 0xcb);
        EXPECT(gbc.readMem(0xcb01), 0x29);
        // CB 29 037D
        gbc.setState(0xbaaa, 0x2224, 0x9680, 0x9155, 0x273e, 0x68a9, 0x1, 0x1);
        gbc.writeMem(0xbaaa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2224);
        EXPECT(gbc.pc(), 0xbaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaaa), 0xcb);
        EXPECT(gbc.readMem(0xbaab), 0x29);
        // CB 29 037E
        gbc.setState(0xaf11, 0xcc8f, 0xf9c0, 0x840a, 0xe109, 0x1adb, 0x1, 0x0);
        gbc.writeMem(0xaf11, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcc8f);
        EXPECT(gbc.pc(), 0xaf13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf11), 0xcb);
        EXPECT(gbc.readMem(0xaf12), 0x29);
        // CB 29 037F
        gbc.setState(0x9440, 0xa584, 0x9c0, 0x5d43, 0xaf31, 0x4427, 0x1, 0x0);
        gbc.writeMem(0x9440, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa584);
        EXPECT(gbc.pc(), 0x9442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9440), 0xcb);
        EXPECT(gbc.readMem(0x9441), 0x29);
        // CB 29 0380
        gbc.setState(0x2f33, 0x84bf, 0x73d0, 0xccae, 0xcc9d, 0xae27, 0x1, 0x1);
        gbc.writeMem(0x2f33, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x84bf);
        EXPECT(gbc.pc(), 0x2f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0381
        gbc.setState(0xe32a, 0x6f91, 0xc530, 0x4ead, 0x34da, 0x6cf3, 0x0, 0x0);
        gbc.writeMem(0xe32a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6f91);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32a), 0xcb);
        EXPECT(gbc.readMem(0xe32b), 0x29);
        // CB 29 0382
        gbc.setState(0x4edd, 0xfa37, 0x5cb0, 0x45af, 0xbb80, 0x8136, 0x1, 0x0);
        gbc.writeMem(0x4edd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfa37);
        EXPECT(gbc.pc(), 0x4edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0383
        gbc.setState(0x4943, 0xdd90, 0xe370, 0x84b8, 0x681c, 0x4cd4, 0x0, 0x1);
        gbc.writeMem(0x4943, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x4945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0384
        gbc.setState(0xa103, 0x9488, 0xd020, 0x2f3c, 0xe494, 0xcbd6, 0x0, 0x0);
        gbc.writeMem(0xa103, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9488);
        EXPECT(gbc.pc(), 0xa105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa103), 0xcb);
        EXPECT(gbc.readMem(0xa104), 0x29);
        // CB 29 0385
        gbc.setState(0x3c2f, 0x42e7, 0xf570, 0x342b, 0x1a92, 0x8c92, 0x0, 0x1);
        gbc.writeMem(0x3c2f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x42e7);
        EXPECT(gbc.pc(), 0x3c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0386
        gbc.setState(0x1206, 0x1c31, 0x73a0, 0xe324, 0x59e, 0x28ad, 0x0, 0x0);
        gbc.writeMem(0x1206, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1c31);
        EXPECT(gbc.pc(), 0x1208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0387
        gbc.setState(0x7b26, 0xc86e, 0xa660, 0xf29, 0xcbd2, 0x682b, 0x0, 0x0);
        gbc.writeMem(0x7b26, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc86e);
        EXPECT(gbc.pc(), 0x7b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0388
        gbc.setState(0x992f, 0x8d2a, 0x7950, 0x42e3, 0xe51b, 0xf0f, 0x0, 0x1);
        gbc.writeMem(0x992f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8d2a);
        EXPECT(gbc.pc(), 0x9931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992f), 0xcb);
        EXPECT(gbc.readMem(0x9930), 0x29);
        // CB 29 0389
        gbc.setState(0x3cad, 0xf282, 0x1740, 0x4e3, 0x88bc, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x3cad, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf282);
        EXPECT(gbc.pc(), 0x3caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 038A
        gbc.setState(0x8787, 0x9592, 0xf380, 0xca3e, 0xbc56, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x8787, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9592);
        EXPECT(gbc.pc(), 0x8789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8787), 0xcb);
        EXPECT(gbc.readMem(0x8788), 0x29);
        // CB 29 038C
        gbc.setState(0x52f3, 0xfc3, 0x4a90, 0x83f6, 0x81d9, 0xe894, 0x0, 0x0);
        gbc.writeMem(0x52f3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfc3);
        EXPECT(gbc.pc(), 0x52f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 038D
        gbc.setState(0x3ce6, 0xb732, 0x490, 0x66dd, 0x4ee7, 0x903d, 0x1, 0x0);
        gbc.writeMem(0x3ce6, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb732);
        EXPECT(gbc.pc(), 0x3ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 038E
        gbc.setState(0x3c24, 0xa18d, 0x3140, 0x9f28, 0xe2e0, 0x9ad8, 0x0, 0x0);
        gbc.writeMem(0x3c24, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa18d);
        EXPECT(gbc.pc(), 0x3c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 038F
        gbc.setState(0x6bba, 0x1a46, 0x47a0, 0xec1, 0xef04, 0xc58e, 0x1, 0x0);
        gbc.writeMem(0x6bba, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0x6bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0390
        gbc.setState(0xd58, 0x794f, 0x2a30, 0x8dd7, 0xa576, 0xb172, 0x0, 0x1);
        gbc.writeMem(0xd58, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x794f);
        EXPECT(gbc.pc(), 0xd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0391
        gbc.setState(0x8a53, 0x729c, 0x8750, 0xae26, 0xe5c, 0xe770, 0x1, 0x1);
        gbc.writeMem(0x8a53, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x729c);
        EXPECT(gbc.pc(), 0x8a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a53), 0xcb);
        EXPECT(gbc.readMem(0x8a54), 0x29);
        // CB 29 0392
        gbc.setState(0x2, 0xc9a4, 0x3c80, 0x3b63, 0x42ce, 0xfac5, 0x0, 0x1);
        gbc.writeMem(0x2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc9a4);
        EXPECT(gbc.pc(), 0x4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0393
        gbc.setState(0x4feb, 0xa6d8, 0x1700, 0xdf47, 0xc56f, 0xbd7a, 0x0, 0x0);
        gbc.writeMem(0x4feb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa6d8);
        EXPECT(gbc.pc(), 0x4fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0394
        gbc.setState(0xa9cf, 0xca0d, 0xf5f0, 0x1eb3, 0x56de, 0x5756, 0x0, 0x1);
        gbc.writeMem(0xa9cf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xca0d);
        EXPECT(gbc.pc(), 0xa9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cf), 0xcb);
        EXPECT(gbc.readMem(0xa9d0), 0x29);
        // CB 29 0395
        gbc.setState(0xa6ae, 0x42c, 0xba0, 0xbe, 0xcbd5, 0x662e, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x42c);
        EXPECT(gbc.pc(), 0xa6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ae), 0xcb);
        EXPECT(gbc.readMem(0xa6af), 0x29);
        // CB 29 0396
        gbc.setState(0xbcaa, 0xd520, 0x1de0, 0x4167, 0x8f82, 0x5719, 0x0, 0x1);
        gbc.writeMem(0xbcaa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd520);
        EXPECT(gbc.pc(), 0xbcac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcaa), 0xcb);
        EXPECT(gbc.readMem(0xbcab), 0x29);
        // CB 29 0397
        gbc.setState(0xccd, 0x9632, 0x62d0, 0x78c7, 0xee45, 0xf4ea, 0x1, 0x0);
        gbc.writeMem(0xccd, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9632);
        EXPECT(gbc.pc(), 0xccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 0398
        gbc.setState(0x64f3, 0xe84b, 0xe6d0, 0x17ac, 0xe03f, 0x672f, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe84b);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 0399
        gbc.setState(0xb48e, 0xfa46, 0x36f0, 0xd3e4, 0xf04d, 0x18e9, 0x0, 0x0);
        gbc.writeMem(0xb48e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfa46);
        EXPECT(gbc.pc(), 0xb490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48e), 0xcb);
        EXPECT(gbc.readMem(0xb48f), 0x29);
        // CB 29 039A
        gbc.setState(0x3d49, 0xd907, 0x81a0, 0x3aa8, 0x6f8d, 0x2b47, 0x1, 0x0);
        gbc.writeMem(0x3d49, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd907);
        EXPECT(gbc.pc(), 0x3d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 039B
        gbc.setState(0x158c, 0x1b30, 0xb10, 0x3cad, 0xe, 0x9cc7, 0x1, 0x0);
        gbc.writeMem(0x158c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1b30);
        EXPECT(gbc.pc(), 0x158e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 039C
        gbc.setState(0x8c05, 0x81ab, 0x16a0, 0x177, 0x36d7, 0x8aa9, 0x0, 0x1);
        gbc.writeMem(0x8c05, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x81ab);
        EXPECT(gbc.pc(), 0x8c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c05), 0xcb);
        EXPECT(gbc.readMem(0x8c06), 0x29);
        // CB 29 039D
        gbc.setState(0xd953, 0x65e9, 0x2300, 0x69ac, 0x1ff2, 0x5c4e, 0x0, 0x0);
        gbc.writeMem(0xd953, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0xd955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd953), 0xcb);
        EXPECT(gbc.readMem(0xd954), 0x29);
        // CB 29 039E
        gbc.setState(0x1b75, 0x4604, 0x4450, 0xb1d1, 0x9b97, 0xcc44, 0x1, 0x1);
        gbc.writeMem(0x1b75, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4604);
        EXPECT(gbc.pc(), 0x1b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 039F
        gbc.setState(0x5821, 0xb48b, 0x7970, 0xf4a6, 0x8517, 0x4071, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb48b);
        EXPECT(gbc.pc(), 0x5823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03A0
        gbc.setState(0xc4fc, 0x4ee4, 0xeac0, 0x8108, 0x6669, 0xa27b, 0x0, 0x1);
        gbc.writeMem(0xc4fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4ee4);
        EXPECT(gbc.pc(), 0xc4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fc), 0xcb);
        EXPECT(gbc.readMem(0xc4fd), 0x29);
        // CB 29 03A1
        gbc.setState(0x3716, 0x4ead, 0x1d70, 0x8efa, 0x96a7, 0xb73, 0x1, 0x1);
        gbc.writeMem(0x3716, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4ead);
        EXPECT(gbc.pc(), 0x3718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03A2
        gbc.setState(0x9db, 0xd748, 0x260, 0x4965, 0xa597, 0xccc5, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd748);
        EXPECT(gbc.pc(), 0x9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03A4
        gbc.setState(0x9ccc, 0x882d, 0x8c90, 0x3d59, 0xd7c7, 0x9fbe, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x882d);
        EXPECT(gbc.pc(), 0x9cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccc), 0xcb);
        EXPECT(gbc.readMem(0x9ccd), 0x29);
        // CB 29 03A5
        gbc.setState(0xd003, 0x2977, 0xf4a0, 0xf536, 0x94a6, 0x56e2, 0x0, 0x0);
        gbc.writeMem(0xd003, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2977);
        EXPECT(gbc.pc(), 0xd005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd003), 0xcb);
        EXPECT(gbc.readMem(0xd004), 0x29);
        // CB 29 03A6
        gbc.setState(0xe449, 0x507c, 0x2fd0, 0x7188, 0xd536, 0x3c6b, 0x0, 0x1);
        gbc.writeMem(0xe449, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x507c);
        EXPECT(gbc.pc(), 0xe44b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe449), 0xcb);
        EXPECT(gbc.readMem(0xe44a), 0x29);
        // CB 29 03A7
        gbc.setState(0x1e2f, 0x60af, 0xd860, 0x98c1, 0xcb24, 0x5901, 0x0, 0x1);
        gbc.writeMem(0x1e2f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x60af);
        EXPECT(gbc.pc(), 0x1e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03A8
        gbc.setState(0xaa5a, 0x5408, 0x7e10, 0x8883, 0x8485, 0x84bb, 0x1, 0x0);
        gbc.writeMem(0xaa5a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5408);
        EXPECT(gbc.pc(), 0xaa5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5a), 0xcb);
        EXPECT(gbc.readMem(0xaa5b), 0x29);
        // CB 29 03A9
        gbc.setState(0x26ea, 0xc67b, 0xd3c0, 0xbdfc, 0xb041, 0xdd2d, 0x1, 0x0);
        gbc.writeMem(0x26ea, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc67b);
        EXPECT(gbc.pc(), 0x26ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03AA
        gbc.setState(0xee99, 0xa8f6, 0xd30, 0xdea3, 0xf0c8, 0xa2e8, 0x1, 0x0);
        gbc.writeMem(0xee99, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa8f6);
        EXPECT(gbc.pc(), 0xee9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee99), 0xcb);
        EXPECT(gbc.readMem(0xee9a), 0x29);
        // CB 29 03AB
        gbc.setState(0x9be2, 0x6458, 0x5780, 0xdd1c, 0xdfb8, 0xf33, 0x1, 0x0);
        gbc.writeMem(0x9be2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6458);
        EXPECT(gbc.pc(), 0x9be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be2), 0xcb);
        EXPECT(gbc.readMem(0x9be3), 0x29);
        // CB 29 03AC
        gbc.setState(0x563, 0xbb96, 0x73f0, 0x2355, 0xc9ce, 0x7919, 0x1, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03AD
        gbc.setState(0x76c4, 0xd670, 0xe690, 0x2c7, 0x7b84, 0xa4a1, 0x1, 0x0);
        gbc.writeMem(0x76c4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd670);
        EXPECT(gbc.pc(), 0x76c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03AE
        gbc.setState(0x9e9e, 0xd338, 0x7eb0, 0x59c4, 0xf94a, 0xa0c8, 0x1, 0x1);
        gbc.writeMem(0x9e9e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd338);
        EXPECT(gbc.pc(), 0x9ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9e), 0xcb);
        EXPECT(gbc.readMem(0x9e9f), 0x29);
        // CB 29 03AF
        gbc.setState(0x63cc, 0xdcc2, 0xa160, 0xcd87, 0x4460, 0xb447, 0x0, 0x0);
        gbc.writeMem(0x63cc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdcc2);
        EXPECT(gbc.pc(), 0x63ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B0
        gbc.setState(0x3279, 0xb992, 0x9820, 0x429b, 0xb51b, 0x57c2, 0x0, 0x0);
        gbc.writeMem(0x3279, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb992);
        EXPECT(gbc.pc(), 0x327b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B1
        gbc.setState(0xead2, 0x380b, 0x7550, 0x4aaa, 0x1e1, 0xc4ff, 0x0, 0x0);
        gbc.writeMem(0xead2, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x380b);
        EXPECT(gbc.pc(), 0xead4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead2), 0xcb);
        EXPECT(gbc.readMem(0xead3), 0x29);
        // CB 29 03B2
        gbc.setState(0x70b0, 0xc93f, 0x3e70, 0x27d, 0x185c, 0x830d, 0x1, 0x0);
        gbc.writeMem(0x70b0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc93f);
        EXPECT(gbc.pc(), 0x70b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B3
        gbc.setState(0x5e77, 0xeda3, 0x7390, 0xad87, 0x796e, 0x55ca, 0x0, 0x1);
        gbc.writeMem(0x5e77, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeda3);
        EXPECT(gbc.pc(), 0x5e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B4
        gbc.setState(0x15dc, 0xddc8, 0x6980, 0x8a59, 0xdde3, 0x9a7f, 0x1, 0x1);
        gbc.writeMem(0x15dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xddc8);
        EXPECT(gbc.pc(), 0x15de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B5
        gbc.setState(0x53fb, 0x447a, 0xa300, 0xe9eb, 0xa921, 0x425a, 0x0, 0x1);
        gbc.writeMem(0x53fb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x447a);
        EXPECT(gbc.pc(), 0x53fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B6
        gbc.setState(0x32cf, 0x2ae7, 0x5960, 0xaf0f, 0xc1a3, 0xa0de, 0x0, 0x1);
        gbc.writeMem(0x32cf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2ae7);
        EXPECT(gbc.pc(), 0x32d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03B7
        gbc.setState(0xafc0, 0xea08, 0xbb50, 0x4d23, 0xda3b, 0xa453, 0x0, 0x1);
        gbc.writeMem(0xafc0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xea08);
        EXPECT(gbc.pc(), 0xafc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc0), 0xcb);
        EXPECT(gbc.readMem(0xafc1), 0x29);
        // CB 29 03B8
        gbc.setState(0x8c8a, 0x1d30, 0xf950, 0x4db8, 0x8cce, 0xc77f, 0x1, 0x1);
        gbc.writeMem(0x8c8a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1d30);
        EXPECT(gbc.pc(), 0x8c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8a), 0xcb);
        EXPECT(gbc.readMem(0x8c8b), 0x29);
        // CB 29 03B9
        gbc.setState(0x7d4f, 0xc20c, 0x7c30, 0x7f07, 0xf497, 0x6e70, 0x0, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc20c);
        EXPECT(gbc.pc(), 0x7d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03BA
        gbc.setState(0xb376, 0xd061, 0x6c00, 0xd6cb, 0x3bcf, 0x14bf, 0x0, 0x0);
        gbc.writeMem(0xb376, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd061);
        EXPECT(gbc.pc(), 0xb378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb376), 0xcb);
        EXPECT(gbc.readMem(0xb377), 0x29);
        // CB 29 03BB
        gbc.setState(0x481c, 0xa032, 0xb00, 0x696d, 0xc6b1, 0xfddf, 0x1, 0x1);
        gbc.writeMem(0x481c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa032);
        EXPECT(gbc.pc(), 0x481e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03BC
        gbc.setState(0x6d28, 0xa20, 0xdf30, 0x4e8, 0xb415, 0x5f92, 0x0, 0x0);
        gbc.writeMem(0x6d28, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03BD
        gbc.setState(0xeb64, 0xc0cb, 0xae60, 0xfc93, 0xca1b, 0x3fa9, 0x0, 0x1);
        gbc.writeMem(0xeb64, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc0cb);
        EXPECT(gbc.pc(), 0xeb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb64), 0xcb);
        EXPECT(gbc.readMem(0xeb65), 0x29);
        // CB 29 03BE
        gbc.setState(0xc5ac, 0xe9d, 0xb080, 0x36c, 0x8e03, 0x586c, 0x1, 0x1);
        gbc.writeMem(0xc5ac, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe9d);
        EXPECT(gbc.pc(), 0xc5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ac), 0xcb);
        EXPECT(gbc.readMem(0xc5ad), 0x29);
        // CB 29 03BF
        gbc.setState(0xb726, 0x46ca, 0xb8b0, 0x2a6f, 0xe595, 0xdc24, 0x0, 0x0);
        gbc.writeMem(0xb726, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x46ca);
        EXPECT(gbc.pc(), 0xb728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb726), 0xcb);
        EXPECT(gbc.readMem(0xb727), 0x29);
        // CB 29 03C0
        gbc.setState(0x866b, 0x16b3, 0xbe90, 0x6383, 0x4e25, 0x6729, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x16b3);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866b), 0xcb);
        EXPECT(gbc.readMem(0x866c), 0x29);
        // CB 29 03C1
        gbc.setState(0x8bf, 0x3841, 0xeb0, 0x5aad, 0xe70b, 0x5aab, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3841);
        EXPECT(gbc.pc(), 0x8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03C2
        gbc.setState(0x900f, 0x94f0, 0x7870, 0xab3d, 0x9ee1, 0x9c47, 0x1, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x94f0);
        EXPECT(gbc.pc(), 0x9011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900f), 0xcb);
        EXPECT(gbc.readMem(0x9010), 0x29);
        // CB 29 03C3
        gbc.setState(0xcc1c, 0x878d, 0x270, 0xc4d1, 0x5694, 0xafc7, 0x0, 0x1);
        gbc.writeMem(0xcc1c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x878d);
        EXPECT(gbc.pc(), 0xcc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1c), 0xcb);
        EXPECT(gbc.readMem(0xcc1d), 0x29);
        // CB 29 03C5
        gbc.setState(0x5546, 0x79b8, 0x1d80, 0x62a5, 0x903b, 0xf368, 0x1, 0x1);
        gbc.writeMem(0x5546, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0x5548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03C6
        gbc.setState(0xb9cc, 0xb82d, 0xd920, 0x5cef, 0xbe37, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0xb9cc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9cc), 0xcb);
        EXPECT(gbc.readMem(0xb9cd), 0x29);
        // CB 29 03C7
        gbc.setState(0x4e3b, 0x943, 0x3890, 0xf8ad, 0x8a1d, 0xc204, 0x1, 0x1);
        gbc.writeMem(0x4e3b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x943);
        EXPECT(gbc.pc(), 0x4e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03C8
        gbc.setState(0xa696, 0xdaa5, 0x9820, 0x8f06, 0x9a9c, 0xb0c3, 0x1, 0x1);
        gbc.writeMem(0xa696, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdaa5);
        EXPECT(gbc.pc(), 0xa698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa696), 0xcb);
        EXPECT(gbc.readMem(0xa697), 0x29);
        // CB 29 03C9
        gbc.setState(0xa535, 0x281d, 0x95f0, 0x633f, 0x40e7, 0x5182, 0x1, 0x1);
        gbc.writeMem(0xa535, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x281d);
        EXPECT(gbc.pc(), 0xa537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa535), 0xcb);
        EXPECT(gbc.readMem(0xa536), 0x29);
        // CB 29 03CA
        gbc.setState(0x3a39, 0x3c24, 0xaee0, 0xa491, 0xb3a, 0x4c31, 0x0, 0x1);
        gbc.writeMem(0x3a39, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3c24);
        EXPECT(gbc.pc(), 0x3a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03CB
        gbc.setState(0x3920, 0x5108, 0x7680, 0xa25a, 0xae7f, 0x558d, 0x1, 0x1);
        gbc.writeMem(0x3920, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5108);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03CC
        gbc.setState(0x80a, 0xe86c, 0x100, 0x1e6, 0xb1c, 0x56dd, 0x0, 0x1);
        gbc.writeMem(0x80a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe86c);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03CD
        gbc.setState(0x8903, 0x3ff7, 0xab80, 0x46dc, 0x60e2, 0xcf33, 0x1, 0x1);
        gbc.writeMem(0x8903, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3ff7);
        EXPECT(gbc.pc(), 0x8905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8903), 0xcb);
        EXPECT(gbc.readMem(0x8904), 0x29);
        // CB 29 03CE
        gbc.setState(0x27bc, 0x38dc, 0x3780, 0x58e2, 0xdf32, 0xc703, 0x1, 0x1);
        gbc.writeMem(0x27bc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0x27be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03CF
        gbc.setState(0x42bb, 0x9753, 0x72a0, 0x41d4, 0x1858, 0xb488, 0x0, 0x0);
        gbc.writeMem(0x42bb, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9753);
        EXPECT(gbc.pc(), 0x42bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03D0
        gbc.setState(0x6b11, 0xc7a7, 0xa770, 0xbe05, 0x7c2c, 0x117d, 0x0, 0x1);
        gbc.writeMem(0x6b11, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc7a7);
        EXPECT(gbc.pc(), 0x6b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03D1
        gbc.setState(0xe30a, 0xf1d8, 0x3bd0, 0x35f0, 0x1d3d, 0x777a, 0x0, 0x0);
        gbc.writeMem(0xe30a, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf1d8);
        EXPECT(gbc.pc(), 0xe30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30a), 0xcb);
        EXPECT(gbc.readMem(0xe30b), 0x29);
        // CB 29 03D2
        gbc.setState(0x3c27, 0x458, 0x51b0, 0x904, 0x712, 0x3f63, 0x1, 0x0);
        gbc.writeMem(0x3c27, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x458);
        EXPECT(gbc.pc(), 0x3c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03D3
        gbc.setState(0xd173, 0x4e14, 0x4600, 0x269b, 0x2608, 0x29f6, 0x1, 0x0);
        gbc.writeMem(0xd173, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4e14);
        EXPECT(gbc.pc(), 0xd175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd173), 0xcb);
        EXPECT(gbc.readMem(0xd174), 0x29);
        // CB 29 03D4
        gbc.setState(0x46d4, 0x2324, 0xa790, 0xcf74, 0xcadc, 0x48d2, 0x1, 0x1);
        gbc.writeMem(0x46d4, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2324);
        EXPECT(gbc.pc(), 0x46d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03D5
        gbc.setState(0x71fc, 0x9a6, 0x1650, 0xdf9, 0xe68, 0x5395, 0x0, 0x1);
        gbc.writeMem(0x71fc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9a6);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03D6
        gbc.setState(0x8305, 0x69a5, 0x2770, 0x4e6a, 0x927e, 0x7252, 0x1, 0x0);
        gbc.writeMem(0x8305, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x69a5);
        EXPECT(gbc.pc(), 0x8307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8305), 0xcb);
        EXPECT(gbc.readMem(0x8306), 0x29);
        // CB 29 03D7
        gbc.setState(0x82d7, 0x4bb2, 0x99f0, 0xf06b, 0x6a60, 0x3192, 0x0, 0x1);
        gbc.writeMem(0x82d7, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4bb2);
        EXPECT(gbc.pc(), 0x82d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d7), 0xcb);
        EXPECT(gbc.readMem(0x82d8), 0x29);
        // CB 29 03D8
        gbc.setState(0x4e9e, 0x1b38, 0xeb70, 0x887c, 0x79ec, 0xb6df, 0x0, 0x0);
        gbc.writeMem(0x4e9e, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1b38);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03D9
        gbc.setState(0x1f84, 0xfb4d, 0x5d70, 0xb54f, 0x43fb, 0x36f1, 0x0, 0x0);
        gbc.writeMem(0x1f84, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfb4d);
        EXPECT(gbc.pc(), 0x1f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03DA
        gbc.setState(0x429d, 0xc4fa, 0xa2d0, 0x58df, 0xca4c, 0x6df0, 0x0, 0x1);
        gbc.writeMem(0x429d, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x429f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03DB
        gbc.setState(0x640c, 0x9912, 0xb7c0, 0xb80a, 0x209f, 0xa5b5, 0x0, 0x1);
        gbc.writeMem(0x640c, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03DC
        gbc.setState(0xe45b, 0x3efb, 0xb880, 0xc1a0, 0x4231, 0xe748, 0x0, 0x0);
        gbc.writeMem(0xe45b, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3efb);
        EXPECT(gbc.pc(), 0xe45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45b), 0xcb);
        EXPECT(gbc.readMem(0xe45c), 0x29);
        // CB 29 03DD
        gbc.setState(0xb8f0, 0x4af6, 0x41c0, 0xa5e2, 0x26d2, 0x29c3, 0x0, 0x1);
        gbc.writeMem(0xb8f0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4af6);
        EXPECT(gbc.pc(), 0xb8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f0), 0xcb);
        EXPECT(gbc.readMem(0xb8f1), 0x29);
        // CB 29 03DE
        gbc.setState(0x2e0, 0xbb95, 0x3fe0, 0x243f, 0xad77, 0x6ef, 0x1, 0x1);
        gbc.writeMem(0x2e0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbb95);
        EXPECT(gbc.pc(), 0x2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03DF
        gbc.setState(0xb9c3, 0xe860, 0x9e40, 0xf9c2, 0x7748, 0x19e7, 0x1, 0x1);
        gbc.writeMem(0xb9c3, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe860);
        EXPECT(gbc.pc(), 0xb9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c3), 0xcb);
        EXPECT(gbc.readMem(0xb9c4), 0x29);
        // CB 29 03E0
        gbc.setState(0x2ad0, 0x600, 0x2370, 0x6412, 0x1c42, 0x91c0, 0x1, 0x1);
        gbc.writeMem(0x2ad0, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x600);
        EXPECT(gbc.pc(), 0x2ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03E1
        gbc.setState(0x7a54, 0xa8f2, 0xb080, 0x8634, 0x61c2, 0xd76, 0x0, 0x0);
        gbc.writeMem(0x7a54, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa8f2);
        EXPECT(gbc.pc(), 0x7a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03E2
        gbc.setState(0x6de1, 0x9dbb, 0x8fb0, 0x61be, 0xa77f, 0x46fc, 0x0, 0x1);
        gbc.writeMem(0x6de1, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9dbb);
        EXPECT(gbc.pc(), 0x6de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 29 03E3
        gbc.setState(0x2482, 0x3c72, 0x9160, 0xfbd3, 0xdf36, 0x4897, 0x1, 0x0);
        gbc.writeMem(0x2482, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3c72);
        EXPECT(gbc.pc(), 0x2484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03E5
        gbc.setState(0x9456, 0xe9fd, 0xa190, 0xfe2, 0xa000, 0xc01e, 0x1, 0x0);
        gbc.writeMem(0x9456, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe9fd);
        EXPECT(gbc.pc(), 0x9458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9456), 0xcb);
        EXPECT(gbc.readMem(0x9457), 0x29);
        // CB 29 03E6
        gbc.setState(0x6eaa, 0xfb86, 0x2c40, 0xf553, 0xaf88, 0x82d7, 0x1, 0x0);
        gbc.writeMem(0x6eaa, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfb86);
        EXPECT(gbc.pc(), 0x6eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 29 03E7
        gbc.setState(0x71dc, 0xfebe, 0xfc50, 0x58bf, 0xf51a, 0x7f7a, 0x1, 0x0);
        gbc.writeMem(0x71dc, { 0xcb, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfebe);
        EXPECT(gbc.pc(), 0x71de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
