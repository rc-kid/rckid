    TEST(gbcemu, opcode_d6) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D6 0000
        gbc.setState(0x938b, 0x247b, 0xbec0, 0x91f9, 0x5e28, 0xa119, 0x1, 0x1);
        gbc.writeMem(0x938b, { 0xd6, 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0x938d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x938b));
        EXPECT(0xbf, gbc.readMem(0x938c));
        // D6 0001
        gbc.setState(0x7b98, 0xaa5c, 0x82c0, 0x85b4, 0xfe21, 0x7836, 0x0, 0x0);
        gbc.writeMem(0x7b98, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0x7b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0002
        gbc.setState(0xa8a6, 0x7e16, 0x5f70, 0x12b8, 0x99c8, 0xa54b, 0x1, 0x1);
        gbc.writeMem(0xa8a6, { 0xd6, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0xa8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa8a6));
        EXPECT(0x44, gbc.readMem(0xa8a7));
        // D6 0003
        gbc.setState(0xeeeb, 0xe0a3, 0xb7f0, 0x8a14, 0x86a3, 0x2d18, 0x1, 0x0);
        gbc.writeMem(0xeeeb, { 0xd6, 0xcf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0xeeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeeeb));
        EXPECT(0xcf, gbc.readMem(0xeeec));
        // D6 0004
        gbc.setState(0x482a, 0x94b8, 0xc0a0, 0xc26a, 0x4213, 0x455, 0x0, 0x0);
        gbc.writeMem(0x482a, { 0xd6, 0xc4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x482c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0005
        gbc.setState(0xd720, 0xf2af, 0x1d20, 0xad04, 0xbcf5, 0x5389, 0x0, 0x1);
        gbc.writeMem(0xd720, { 0xd6, 0x83 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd720));
        EXPECT(0x83, gbc.readMem(0xd721));
        // D6 0006
        gbc.setState(0x502d, 0x7684, 0x4b30, 0x4ff8, 0x6020, 0x3448, 0x0, 0x0);
        gbc.writeMem(0x502d, { 0xd6, 0xc9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7684, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0007
        gbc.setState(0xcb3d, 0x19d0, 0xca20, 0x16e9, 0x9f37, 0xa233, 0x0, 0x0);
        gbc.writeMem(0xcb3d, { 0xd6, 0x51 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcb3d));
        EXPECT(0x51, gbc.readMem(0xcb3e));
        // D6 0008
        gbc.setState(0x5001, 0x839c, 0xaa70, 0x1db, 0xe448, 0xfb11, 0x1, 0x0);
        gbc.writeMem(0x5001, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x839c, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0009
        gbc.setState(0x54a3, 0x6a67, 0xe080, 0xe024, 0x99eb, 0xaa3e, 0x1, 0x0);
        gbc.writeMem(0x54a3, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6a67, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 000A
        gbc.setState(0xb9, 0x6577, 0x76d0, 0x71c0, 0x5549, 0x6e07, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 000B
        gbc.setState(0x8f71, 0xc17f, 0x7af0, 0x6369, 0x835f, 0x8f71, 0x0, 0x0);
        gbc.writeMem(0x8f71, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8f71));
        EXPECT(0x47, gbc.readMem(0x8f72));
        // D6 000C
        gbc.setState(0xeb71, 0x7a7a, 0xf690, 0x64a3, 0x94db, 0x509d, 0x1, 0x0);
        gbc.writeMem(0xeb71, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeb71));
        EXPECT(0x52, gbc.readMem(0xeb72));
        // D6 000D
        gbc.setState(0xe51e, 0x3f73, 0x25a0, 0xe01b, 0x5aa5, 0x560, 0x0, 0x1);
        gbc.writeMem(0xe51e, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3f73, gbc.sp());
        EXPECT(0xe520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe51e));
        EXPECT(0x4a, gbc.readMem(0xe51f));
        // D6 000E
        gbc.setState(0xcae2, 0x7964, 0x20d0, 0x669d, 0x8eaa, 0xc51, 0x0, 0x1);
        gbc.writeMem(0xcae2, { 0xd6, 0x57 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0xcae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcae2));
        EXPECT(0x57, gbc.readMem(0xcae3));
        // D6 000F
        gbc.setState(0x4ed2, 0x7221, 0xd610, 0x7a58, 0xd5c, 0xa0e, 0x1, 0x0);
        gbc.writeMem(0x4ed2, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x4ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0010
        gbc.setState(0x4b98, 0xed4d, 0x1970, 0xd370, 0x4d86, 0x204b, 0x0, 0x1);
        gbc.writeMem(0x4b98, { 0xd6, 0xc6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0x4b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0011
        gbc.setState(0xd860, 0x9f3b, 0xd2d0, 0xe7e1, 0xb9c9, 0x5e53, 0x1, 0x0);
        gbc.writeMem(0xd860, { 0xd6, 0x6b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9f3b, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd860));
        EXPECT(0x6b, gbc.readMem(0xd861));
        // D6 0012
        gbc.setState(0x7906, 0x9e23, 0x1b00, 0x53c5, 0x6347, 0x32f0, 0x0, 0x0);
        gbc.writeMem(0x7906, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e23, gbc.sp());
        EXPECT(0x7908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0013
        gbc.setState(0x3ba0, 0x5109, 0x71c0, 0x673c, 0x46bd, 0x741e, 0x1, 0x0);
        gbc.writeMem(0x3ba0, { 0xd6, 0xf2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0x3ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0014
        gbc.setState(0xc272, 0x7033, 0x4d20, 0x3c85, 0xd8ac, 0x3ed2, 0x1, 0x1);
        gbc.writeMem(0xc272, { 0xd6, 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7033, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc272));
        EXPECT(0x38, gbc.readMem(0xc273));
        // D6 0015
        gbc.setState(0x672e, 0xdb0f, 0x1990, 0x41ca, 0x43fe, 0x42a0, 0x0, 0x1);
        gbc.writeMem(0x672e, { 0xd6, 0x1e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdb0f, gbc.sp());
        EXPECT(0x6730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0016
        gbc.setState(0x443f, 0xffc9, 0x18a0, 0x1df4, 0xf9d3, 0x4226, 0x1, 0x0);
        gbc.writeMem(0x443f, { 0xd6, 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xffc9, gbc.sp());
        EXPECT(0x4441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0017
        gbc.setState(0xdcc0, 0x18db, 0x2b40, 0x4dba, 0x24ba, 0x2dca, 0x1, 0x0);
        gbc.writeMem(0xdcc0, { 0xd6, 0x18 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x18db, gbc.sp());
        EXPECT(0xdcc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdcc0));
        EXPECT(0x18, gbc.readMem(0xdcc1));
        // D6 0018
        gbc.setState(0xb5ca, 0xa805, 0x56a0, 0xe721, 0x4210, 0xcf5b, 0x1, 0x0);
        gbc.writeMem(0xb5ca, { 0xd6, 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb5ca));
        EXPECT(0x17, gbc.readMem(0xb5cb));
        // D6 0019
        gbc.setState(0x5a12, 0xf8fd, 0x7b90, 0x4030, 0x16ad, 0x1505, 0x0, 0x0);
        gbc.writeMem(0x5a12, { 0xd6, 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf8fd, gbc.sp());
        EXPECT(0x5a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 001A
        gbc.setState(0x46f1, 0x346e, 0x6470, 0x876b, 0x8be2, 0xbba9, 0x1, 0x1);
        gbc.writeMem(0x46f1, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x346e, gbc.sp());
        EXPECT(0x46f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 001B
        gbc.setState(0xd881, 0x727e, 0xc940, 0x2d6f, 0xce8a, 0x1c88, 0x0, 0x0);
        gbc.writeMem(0xd881, { 0xd6, 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0xd883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd881));
        EXPECT(0xd2, gbc.readMem(0xd882));
        // D6 001C
        gbc.setState(0xe194, 0x771a, 0x95b0, 0x9751, 0x5c66, 0x8ba4, 0x0, 0x0);
        gbc.writeMem(0xe194, { 0xd6, 0xa6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0xe196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe194));
        EXPECT(0xa6, gbc.readMem(0xe195));
        // D6 001D
        gbc.setState(0x4da7, 0x7f7f, 0xc0b0, 0x1ee9, 0x8b9e, 0x13e4, 0x1, 0x0);
        gbc.writeMem(0x4da7, { 0xd6, 0xfc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f7f, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 001E
        gbc.setState(0xe690, 0x94da, 0x7330, 0x903c, 0xd40d, 0x4f2b, 0x0, 0x1);
        gbc.writeMem(0xe690, { 0xd6, 0x6a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe690));
        EXPECT(0x6a, gbc.readMem(0xe691));
        // D6 001F
        gbc.setState(0x7859, 0x72da, 0x3a40, 0x5559, 0xd5a8, 0x717a, 0x1, 0x1);
        gbc.writeMem(0x7859, { 0xd6, 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0020
        gbc.setState(0xbe36, 0xc869, 0x4e70, 0x75c4, 0x84d1, 0xb652, 0x1, 0x1);
        gbc.writeMem(0xbe36, { 0xd6, 0x22 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0xbe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbe36));
        EXPECT(0x22, gbc.readMem(0xbe37));
        // D6 0021
        gbc.setState(0xbc9f, 0x7e8f, 0xdf50, 0x202, 0x84ee, 0xbeb9, 0x1, 0x1);
        gbc.writeMem(0xbc9f, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0xbca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbc9f));
        EXPECT(0x4c, gbc.readMem(0xbca0));
        // D6 0022
        gbc.setState(0xbf3b, 0xe4d3, 0x78d0, 0x34ba, 0x4bef, 0x5cc6, 0x0, 0x1);
        gbc.writeMem(0xbf3b, { 0xd6, 0x5b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe4d3, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbf3b));
        EXPECT(0x5b, gbc.readMem(0xbf3c));
        // D6 0023
        gbc.setState(0x9a3e, 0x680d, 0xf170, 0x7fd2, 0x4e6d, 0x190, 0x1, 0x1);
        gbc.writeMem(0x9a3e, { 0xd6, 0x81 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9a3e));
        EXPECT(0x81, gbc.readMem(0x9a3f));
        // D6 0024
        gbc.setState(0x3bb5, 0xe5be, 0xe880, 0x3d6f, 0x60f9, 0x3d04, 0x1, 0x0);
        gbc.writeMem(0x3bb5, { 0xd6, 0xde });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe5be, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0025
        gbc.setState(0xd19c, 0x774b, 0xe7e0, 0x2645, 0xea68, 0x729f, 0x0, 0x0);
        gbc.writeMem(0xd19c, { 0xd6, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0xd19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd19c));
        EXPECT(0xb8, gbc.readMem(0xd19d));
        // D6 0026
        gbc.setState(0x73ee, 0xb099, 0xe140, 0xbc60, 0x1d0b, 0x53a, 0x1, 0x0);
        gbc.writeMem(0x73ee, { 0xd6, 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb099, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0027
        gbc.setState(0x25d4, 0x7b0e, 0xe770, 0x13f9, 0x4042, 0x1ec3, 0x0, 0x1);
        gbc.writeMem(0x25d4, { 0xd6, 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7b0e, gbc.sp());
        EXPECT(0x25d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0028
        gbc.setState(0xc52f, 0x92a6, 0xc6d0, 0x4c73, 0xf748, 0x19c1, 0x1, 0x1);
        gbc.writeMem(0xc52f, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0xc531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc52f));
        EXPECT(0x16, gbc.readMem(0xc530));
        // D6 0029
        gbc.setState(0xa3d7, 0x17a9, 0x9f10, 0x5712, 0xb5b8, 0xf7d, 0x0, 0x1);
        gbc.writeMem(0xa3d7, { 0xd6, 0x18 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x17a9, gbc.sp());
        EXPECT(0xa3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa3d7));
        EXPECT(0x18, gbc.readMem(0xa3d8));
        // D6 002A
        gbc.setState(0xd5df, 0x6498, 0xb480, 0xfeec, 0x1042, 0x635c, 0x1, 0x1);
        gbc.writeMem(0xd5df, { 0xd6, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0xd5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd5df));
        EXPECT(0x63, gbc.readMem(0xd5e0));
        // D6 002B
        gbc.setState(0x6e80, 0x83a5, 0x1820, 0xb06e, 0xb420, 0xe87c, 0x0, 0x0);
        gbc.writeMem(0x6e80, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x83a5, gbc.sp());
        EXPECT(0x6e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 002C
        gbc.setState(0x6403, 0x1aab, 0xb1d0, 0x5fef, 0xab9f, 0xf750, 0x1, 0x1);
        gbc.writeMem(0x6403, { 0xd6, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1aab, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 002D
        gbc.setState(0xc790, 0x7890, 0xc010, 0xa95, 0xba1a, 0xad0e, 0x0, 0x1);
        gbc.writeMem(0xc790, { 0xd6, 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0xc792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc790));
        EXPECT(0x5d, gbc.readMem(0xc791));
        // D6 002E
        gbc.setState(0xc065, 0x3624, 0xf2d0, 0x619, 0xfdd9, 0xc20f, 0x0, 0x1);
        gbc.writeMem(0xc065, { 0xd6, 0x5b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc065));
        EXPECT(0x5b, gbc.readMem(0xc066));
        // D6 002F
        gbc.setState(0x6a3e, 0x6b98, 0xf00, 0xde17, 0x23e8, 0xde9, 0x0, 0x0);
        gbc.writeMem(0x6a3e, { 0xd6, 0xaa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0030
        gbc.setState(0x70f1, 0xb678, 0x2280, 0xecb4, 0x2a1e, 0x4581, 0x0, 0x1);
        gbc.writeMem(0x70f1, { 0xd6, 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0031
        gbc.setState(0x6496, 0x7b45, 0xcce0, 0x20f0, 0xe51e, 0x6265, 0x1, 0x1);
        gbc.writeMem(0x6496, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0x6498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0032
        gbc.setState(0x6632, 0x2b68, 0x94a0, 0x7b55, 0xa823, 0xb133, 0x0, 0x1);
        gbc.writeMem(0x6632, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b68, gbc.sp());
        EXPECT(0x6634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0034
        gbc.setState(0x5d8b, 0xd31d, 0xa20, 0x54af, 0xa09b, 0x169c, 0x0, 0x0);
        gbc.writeMem(0x5d8b, { 0xd6, 0x43 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0x5d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0035
        gbc.setState(0x61c5, 0xd85c, 0x2030, 0x8ef3, 0xa309, 0xe036, 0x1, 0x0);
        gbc.writeMem(0x61c5, { 0xd6, 0x80 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd85c, gbc.sp());
        EXPECT(0x61c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0036
        gbc.setState(0xd527, 0x671b, 0x9050, 0x501c, 0xb20c, 0x8d05, 0x1, 0x0);
        gbc.writeMem(0xd527, { 0xd6, 0xb4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0xd529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd527));
        EXPECT(0xb4, gbc.readMem(0xd528));
        // D6 0037
        gbc.setState(0x5649, 0xcb8d, 0x92d0, 0x9aa, 0xf371, 0x96c5, 0x1, 0x0);
        gbc.writeMem(0x5649, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcb8d, gbc.sp());
        EXPECT(0x564b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0039
        gbc.setState(0x96cb, 0xf6b1, 0x2840, 0x2045, 0x803e, 0x6e5d, 0x0, 0x0);
        gbc.writeMem(0x96cb, { 0xd6, 0xf9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x96cb));
        EXPECT(0xf9, gbc.readMem(0x96cc));
        // D6 003A
        gbc.setState(0xad53, 0x578c, 0xe190, 0xdaf6, 0x3d84, 0xda58, 0x0, 0x1);
        gbc.writeMem(0xad53, { 0xd6, 0x8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x578c, gbc.sp());
        EXPECT(0xad55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad53));
        EXPECT(0x8, gbc.readMem(0xad54));
        // D6 003B
        gbc.setState(0xe093, 0xd791, 0xc20, 0x277, 0x61a, 0x9994, 0x0, 0x1);
        gbc.writeMem(0xe093, { 0xd6, 0xd3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd791, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe093));
        EXPECT(0xd3, gbc.readMem(0xe094));
        // D6 003C
        gbc.setState(0xe9e4, 0xfb45, 0x27d0, 0x3a11, 0x19f9, 0x4dac, 0x0, 0x0);
        gbc.writeMem(0xe9e4, { 0xd6, 0x73 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb45, gbc.sp());
        EXPECT(0xe9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe9e4));
        EXPECT(0x73, gbc.readMem(0xe9e5));
        // D6 003D
        gbc.setState(0x85ca, 0xda92, 0x6330, 0xa5a, 0x319b, 0x42d6, 0x0, 0x0);
        gbc.writeMem(0x85ca, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xda92, gbc.sp());
        EXPECT(0x85cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x85ca));
        EXPECT(0xfb, gbc.readMem(0x85cb));
        // D6 003E
        gbc.setState(0xe91f, 0x1ee8, 0xa80, 0x9ad6, 0x5a2b, 0x6280, 0x1, 0x1);
        gbc.writeMem(0xe91f, { 0xd6, 0x51 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe91f));
        EXPECT(0x51, gbc.readMem(0xe920));
        // D6 003F
        gbc.setState(0x981c, 0xe257, 0xe7f0, 0x6cfb, 0xe172, 0x7ef7, 0x0, 0x1);
        gbc.writeMem(0x981c, { 0xd6, 0xc3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe257, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x981c));
        EXPECT(0xc3, gbc.readMem(0x981d));
        // D6 0040
        gbc.setState(0x6b16, 0x409b, 0x2230, 0xdf6c, 0xad00, 0x100f, 0x1, 0x1);
        gbc.writeMem(0x6b16, { 0xd6, 0x5f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x409b, gbc.sp());
        EXPECT(0x6b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0041
        gbc.setState(0xb6ba, 0x2ee7, 0x91b0, 0x268e, 0x8a5e, 0x9762, 0x1, 0x1);
        gbc.writeMem(0xb6ba, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb6ba));
        EXPECT(0xa4, gbc.readMem(0xb6bb));
        // D6 0042
        gbc.setState(0x2180, 0x954c, 0xd910, 0x4fc8, 0x7773, 0x15ea, 0x1, 0x1);
        gbc.writeMem(0x2180, { 0xd6, 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0x2182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0043
        gbc.setState(0x4902, 0x9a1, 0x2490, 0x6b51, 0x74ba, 0xd1f2, 0x0, 0x1);
        gbc.writeMem(0x4902, { 0xd6, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9a1, gbc.sp());
        EXPECT(0x4904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0044
        gbc.setState(0x9ab0, 0x6421, 0x8ba0, 0xdd42, 0xcd5e, 0xe11, 0x0, 0x0);
        gbc.writeMem(0x9ab0, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9ab0));
        EXPECT(0xd0, gbc.readMem(0x9ab1));
        // D6 0045
        gbc.setState(0xddf1, 0x6f14, 0xdc90, 0x42e0, 0x82d9, 0x63aa, 0x1, 0x1);
        gbc.writeMem(0xddf1, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6f14, gbc.sp());
        EXPECT(0xddf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xddf1));
        EXPECT(0x69, gbc.readMem(0xddf2));
        // D6 0046
        gbc.setState(0x3eb8, 0x9b33, 0xbbe0, 0x7aee, 0x8b28, 0x3d2d, 0x0, 0x0);
        gbc.writeMem(0x3eb8, { 0xd6, 0xab });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b33, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0047
        gbc.setState(0x26c8, 0x9398, 0x7810, 0x14d, 0x3403, 0xf9fa, 0x0, 0x0);
        gbc.writeMem(0x26c8, { 0xd6, 0x35 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x26ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0048
        gbc.setState(0x3494, 0xdbec, 0xb6d0, 0x1a3e, 0x11bf, 0x7dcd, 0x0, 0x1);
        gbc.writeMem(0x3494, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 004A
        gbc.setState(0x5677, 0xe7fd, 0x8210, 0xb904, 0x40fa, 0xb443, 0x0, 0x1);
        gbc.writeMem(0x5677, { 0xd6, 0x78 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe7fd, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 004B
        gbc.setState(0x7778, 0x6991, 0x7170, 0x5803, 0xaf67, 0x7e26, 0x0, 0x1);
        gbc.writeMem(0x7778, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6991, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 004C
        gbc.setState(0xc40f, 0x8528, 0x2cf0, 0xe83f, 0xbb31, 0xd190, 0x0, 0x1);
        gbc.writeMem(0xc40f, { 0xd6, 0xf0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8528, gbc.sp());
        EXPECT(0xc411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc40f));
        EXPECT(0xf0, gbc.readMem(0xc410));
        // D6 004D
        gbc.setState(0xd80b, 0x20ab, 0x5490, 0xb8ad, 0x2981, 0x21dc, 0x1, 0x1);
        gbc.writeMem(0xd80b, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd80b));
        EXPECT(0xa, gbc.readMem(0xd80c));
        // D6 004E
        gbc.setState(0xe14, 0x4054, 0x6a60, 0x8f06, 0x79d8, 0x13f3, 0x1, 0x0);
        gbc.writeMem(0xe14, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0xe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 004F
        gbc.setState(0xc9da, 0xd283, 0xb3b0, 0x5d1, 0xe4b8, 0xbc2f, 0x1, 0x0);
        gbc.writeMem(0xc9da, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0xc9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc9da));
        EXPECT(0x1f, gbc.readMem(0xc9db));
        // D6 0050
        gbc.setState(0xc0d1, 0x6fe3, 0x60b0, 0x3a21, 0x9641, 0x3d71, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0xc0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc0d1));
        EXPECT(0xb0, gbc.readMem(0xc0d2));
        // D6 0051
        gbc.setState(0xa1be, 0x2ffd, 0x4d00, 0x3682, 0x9bfb, 0x92b, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0xd6, 0x70 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2ffd, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa1be));
        EXPECT(0x70, gbc.readMem(0xa1bf));
        // D6 0052
        gbc.setState(0x5cf5, 0x50e3, 0x8c50, 0xc471, 0x2e9b, 0x44ca, 0x1, 0x0);
        gbc.writeMem(0x5cf5, { 0xd6, 0xa8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0053
        gbc.setState(0xafe2, 0x442c, 0x7f40, 0xd8d5, 0x3ca3, 0xb9e8, 0x1, 0x1);
        gbc.writeMem(0xafe2, { 0xd6, 0x18 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0xafe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xafe2));
        EXPECT(0x18, gbc.readMem(0xafe3));
        // D6 0054
        gbc.setState(0x62e8, 0x7f9b, 0xf9c0, 0xd6e, 0x368d, 0x11eb, 0x1, 0x1);
        gbc.writeMem(0x62e8, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7f9b, gbc.sp());
        EXPECT(0x62ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0056
        gbc.setState(0x77c4, 0x2e07, 0xf7b0, 0x79ec, 0xec53, 0xe4d2, 0x0, 0x0);
        gbc.writeMem(0x77c4, { 0xd6, 0x66 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0x77c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0057
        gbc.setState(0x752e, 0xf5f, 0x57f0, 0xd6db, 0x4a7a, 0x5b11, 0x0, 0x0);
        gbc.writeMem(0x752e, { 0xd6, 0x58 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x7530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0059
        gbc.setState(0x5d40, 0xd1cc, 0xa030, 0x1c24, 0x55ab, 0xd430, 0x0, 0x0);
        gbc.writeMem(0x5d40, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd1cc, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 005A
        gbc.setState(0x2024, 0x629a, 0xac20, 0xeef1, 0x62d3, 0xc461, 0x1, 0x0);
        gbc.writeMem(0x2024, { 0xd6, 0x26 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 005B
        gbc.setState(0xdb2c, 0x8c9a, 0xe5a0, 0xfe6f, 0x8f0, 0xd35a, 0x1, 0x0);
        gbc.writeMem(0xdb2c, { 0xd6, 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8c9a, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdb2c));
        EXPECT(0x77, gbc.readMem(0xdb2d));
        // D6 005C
        gbc.setState(0xad11, 0x9fdc, 0x9760, 0xa498, 0x94d7, 0x930d, 0x1, 0x0);
        gbc.writeMem(0xad11, { 0xd6, 0xee });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9fdc, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad11));
        EXPECT(0xee, gbc.readMem(0xad12));
        // D6 005D
        gbc.setState(0x573a, 0x2ac5, 0xa490, 0x3d2a, 0xc6ec, 0x787f, 0x0, 0x1);
        gbc.writeMem(0x573a, { 0xd6, 0x73 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2ac5, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 005E
        gbc.setState(0x7a2a, 0x6633, 0xb9b0, 0x6ec9, 0xfa80, 0xbb1, 0x0, 0x1);
        gbc.writeMem(0x7a2a, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 005F
        gbc.setState(0x366e, 0x46a6, 0x2800, 0xbbac, 0xde8d, 0x236e, 0x1, 0x0);
        gbc.writeMem(0x366e, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x46a6, gbc.sp());
        EXPECT(0x3670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0060
        gbc.setState(0xd785, 0x6ecc, 0xc130, 0x8607, 0xec86, 0x7cc2, 0x1, 0x0);
        gbc.writeMem(0xd785, { 0xd6, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6ecc, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd785));
        EXPECT(0xb1, gbc.readMem(0xd786));
        // D6 0061
        gbc.setState(0xabf6, 0x4cba, 0xaca0, 0x1d06, 0x9cfb, 0x275, 0x0, 0x0);
        gbc.writeMem(0xabf6, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4cba, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xabf6));
        EXPECT(0xf3, gbc.readMem(0xabf7));
        // D6 0062
        gbc.setState(0xc54c, 0x63ba, 0x3fe0, 0xf34f, 0xc071, 0x716e, 0x0, 0x0);
        gbc.writeMem(0xc54c, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x63ba, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc54c));
        EXPECT(0x4c, gbc.readMem(0xc54d));
        // D6 0063
        gbc.setState(0xc975, 0xb13f, 0xf5c0, 0x49b7, 0xa5f0, 0x1b7a, 0x0, 0x0);
        gbc.writeMem(0xc975, { 0xd6, 0x5f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc975));
        EXPECT(0x5f, gbc.readMem(0xc976));
        // D6 0065
        gbc.setState(0x4d81, 0x9fd8, 0xe130, 0xec75, 0x7946, 0x3463, 0x1, 0x1);
        gbc.writeMem(0x4d81, { 0xd6, 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x4d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0066
        gbc.setState(0x2f76, 0x804f, 0x2d90, 0x30de, 0x6199, 0xb6d3, 0x1, 0x1);
        gbc.writeMem(0x2f76, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x2f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0067
        gbc.setState(0x1dc4, 0x3ac6, 0xa90, 0x6ab5, 0xb51f, 0xd899, 0x1, 0x0);
        gbc.writeMem(0x1dc4, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3ac6, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0068
        gbc.setState(0x5a34, 0x54ef, 0xfc00, 0x9eac, 0x912c, 0x3662, 0x0, 0x1);
        gbc.writeMem(0x5a34, { 0xd6, 0xc0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0x5a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0069
        gbc.setState(0x2d24, 0x8841, 0x8690, 0x842f, 0xf065, 0x14b8, 0x0, 0x0);
        gbc.writeMem(0x2d24, { 0xd6, 0x4e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8841, gbc.sp());
        EXPECT(0x2d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 006B
        gbc.setState(0x3fbb, 0xdfe9, 0xb7a0, 0xee6a, 0xa3af, 0xb1a9, 0x1, 0x0);
        gbc.writeMem(0x3fbb, { 0xd6, 0xed });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0x3fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 006C
        gbc.setState(0x1b48, 0x2a36, 0xfa30, 0xdadf, 0x32de, 0x2862, 0x1, 0x0);
        gbc.writeMem(0x1b48, { 0xd6, 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2a36, gbc.sp());
        EXPECT(0x1b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 006D
        gbc.setState(0xc85c, 0x5eb1, 0x5a90, 0xadf, 0x553b, 0xae50, 0x1, 0x1);
        gbc.writeMem(0xc85c, { 0xd6, 0x25 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5eb1, gbc.sp());
        EXPECT(0xc85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc85c));
        EXPECT(0x25, gbc.readMem(0xc85d));
        // D6 006E
        gbc.setState(0x14e9, 0x24c5, 0x2c10, 0x41e3, 0x2531, 0x7d69, 0x1, 0x0);
        gbc.writeMem(0x14e9, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x24c5, gbc.sp());
        EXPECT(0x14eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0070
        gbc.setState(0x8583, 0x1848, 0xd690, 0x9cec, 0xd6c4, 0x122e, 0x1, 0x1);
        gbc.writeMem(0x8583, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1848, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8583));
        EXPECT(0xd4, gbc.readMem(0x8584));
        // D6 0071
        gbc.setState(0x3209, 0xaf8a, 0x7580, 0x74ac, 0x9f26, 0x56e9, 0x0, 0x0);
        gbc.writeMem(0x3209, { 0xd6, 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaf8a, gbc.sp());
        EXPECT(0x320b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0072
        gbc.setState(0x6135, 0xc195, 0x5910, 0x53c7, 0x6033, 0xe592, 0x1, 0x1);
        gbc.writeMem(0x6135, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x6137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0073
        gbc.setState(0x9d13, 0x9fd5, 0x63b0, 0x9377, 0x15bb, 0xdf4f, 0x0, 0x0);
        gbc.writeMem(0x9d13, { 0xd6, 0xe0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9fd5, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9d13));
        EXPECT(0xe0, gbc.readMem(0x9d14));
        // D6 0074
        gbc.setState(0xe82e, 0xcbbc, 0xc8f0, 0x86fc, 0x497, 0x5dc5, 0x1, 0x0);
        gbc.writeMem(0xe82e, { 0xd6, 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0xe830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe82e));
        EXPECT(0x3d, gbc.readMem(0xe82f));
        // D6 0075
        gbc.setState(0x8101, 0x7f82, 0xc500, 0xe137, 0xc094, 0xffb5, 0x1, 0x0);
        gbc.writeMem(0x8101, { 0xd6, 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7f82, gbc.sp());
        EXPECT(0x8103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8101));
        EXPECT(0x49, gbc.readMem(0x8102));
        // D6 0076
        gbc.setState(0x911a, 0xe6c4, 0x8f90, 0x2c93, 0x3c02, 0x2bec, 0x0, 0x0);
        gbc.writeMem(0x911a, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0x911c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x911a));
        EXPECT(0x53, gbc.readMem(0x911b));
        // D6 0077
        gbc.setState(0x5f87, 0x9b2e, 0x5670, 0x50e0, 0x1bdf, 0xee3d, 0x1, 0x0);
        gbc.writeMem(0x5f87, { 0xd6, 0x45 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0078
        gbc.setState(0x5f20, 0x5075, 0x2e00, 0x47a1, 0xfdc3, 0x7816, 0x0, 0x0);
        gbc.writeMem(0x5f20, { 0xd6, 0x3d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5075, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0079
        gbc.setState(0xc920, 0xe635, 0xbf70, 0xbf7e, 0x5273, 0x9949, 0x1, 0x1);
        gbc.writeMem(0xc920, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc920));
        EXPECT(0x52, gbc.readMem(0xc921));
        // D6 007A
        gbc.setState(0xdd5, 0xea1f, 0x1eb0, 0xd3fd, 0x7bb9, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0xdd5, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0xdd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 007B
        gbc.setState(0xeced, 0x43e3, 0x70, 0x738a, 0x4590, 0xfed5, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xd6, 0x4f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x43e3, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeced));
        EXPECT(0x4f, gbc.readMem(0xecee));
        // D6 007C
        gbc.setState(0x48ca, 0xdb0a, 0x920, 0xc9af, 0x500e, 0x7273, 0x1, 0x1);
        gbc.writeMem(0x48ca, { 0xd6, 0x2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdb0a, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 007D
        gbc.setState(0xeea4, 0x7271, 0x52e0, 0x47b9, 0x659e, 0x5586, 0x0, 0x0);
        gbc.writeMem(0xeea4, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7271, gbc.sp());
        EXPECT(0xeea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeea4));
        EXPECT(0x5, gbc.readMem(0xeea5));
        // D6 007E
        gbc.setState(0xa8ad, 0xd208, 0xbb80, 0xf8ff, 0x993f, 0x75a8, 0x1, 0x1);
        gbc.writeMem(0xa8ad, { 0xd6, 0x78 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa8ad));
        EXPECT(0x78, gbc.readMem(0xa8ae));
        // D6 007F
        gbc.setState(0x4eed, 0xa1b5, 0xbd20, 0x7eb9, 0xdfa4, 0xc4b8, 0x1, 0x1);
        gbc.writeMem(0x4eed, { 0xd6, 0x30 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0x4eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0080
        gbc.setState(0x5e24, 0x5b34, 0xbf10, 0x9333, 0xc704, 0xab8f, 0x0, 0x0);
        gbc.writeMem(0x5e24, { 0xd6, 0xb2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5b34, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0081
        gbc.setState(0xa8ae, 0x5fde, 0x68f0, 0x7b72, 0x5459, 0x932d, 0x0, 0x1);
        gbc.writeMem(0xa8ae, { 0xd6, 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0xa8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa8ae));
        EXPECT(0x19, gbc.readMem(0xa8af));
        // D6 0082
        gbc.setState(0xf0d, 0xee27, 0xd560, 0x92cf, 0xa903, 0x2963, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0xd6, 0x2a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xee27, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0083
        gbc.setState(0x79d9, 0x5d2a, 0xccc0, 0xa3cf, 0x600c, 0x4798, 0x1, 0x1);
        gbc.writeMem(0x79d9, { 0xd6, 0xb8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x79db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0084
        gbc.setState(0x1204, 0x9f, 0x6930, 0xc409, 0x785a, 0xbdfd, 0x0, 0x1);
        gbc.writeMem(0x1204, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0x1206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0085
        gbc.setState(0xb122, 0xb93b, 0xc780, 0x867, 0xe890, 0x1cff, 0x1, 0x0);
        gbc.writeMem(0xb122, { 0xd6, 0xde });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0xb124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb122));
        EXPECT(0xde, gbc.readMem(0xb123));
        // D6 0086
        gbc.setState(0x94c3, 0x667, 0x27e0, 0x4e71, 0x76db, 0x3ba9, 0x0, 0x1);
        gbc.writeMem(0x94c3, { 0xd6, 0xfd });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x667, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x94c3));
        EXPECT(0xfd, gbc.readMem(0x94c4));
        // D6 0087
        gbc.setState(0x2d82, 0x807, 0x9920, 0x1d13, 0x8593, 0x2ee6, 0x1, 0x1);
        gbc.writeMem(0x2d82, { 0xd6, 0x75 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0088
        gbc.setState(0xd474, 0x15a1, 0x68c0, 0x5768, 0xed3b, 0x7808, 0x0, 0x1);
        gbc.writeMem(0xd474, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x15a1, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd474));
        EXPECT(0x48, gbc.readMem(0xd475));
        // D6 0089
        gbc.setState(0xafa7, 0x245e, 0xf980, 0xb2b5, 0x1d35, 0xbdf6, 0x0, 0x1);
        gbc.writeMem(0xafa7, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x245e, gbc.sp());
        EXPECT(0xafa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xafa7));
        EXPECT(0xf3, gbc.readMem(0xafa8));
        // D6 008A
        gbc.setState(0x1c90, 0xd601, 0x9370, 0xf23a, 0xe411, 0xac75, 0x1, 0x1);
        gbc.writeMem(0x1c90, { 0xd6, 0xcb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd601, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 008C
        gbc.setState(0xd240, 0xaf66, 0xe20, 0x5a1c, 0x32e6, 0xc42b, 0x0, 0x0);
        gbc.writeMem(0xd240, { 0xd6, 0x6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaf66, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd240));
        EXPECT(0x6, gbc.readMem(0xd241));
        // D6 008D
        gbc.setState(0x50d4, 0x7153, 0x4430, 0xa9a8, 0xb01d, 0xa49b, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7153, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 008E
        gbc.setState(0xb043, 0xe4cc, 0x9260, 0x3618, 0x38cf, 0xe38d, 0x0, 0x1);
        gbc.writeMem(0xb043, { 0xd6, 0x7e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe4cc, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb043));
        EXPECT(0x7e, gbc.readMem(0xb044));
        // D6 008F
        gbc.setState(0x109, 0x80f6, 0xde0, 0xb3c9, 0x531f, 0x2def, 0x0, 0x1);
        gbc.writeMem(0x109, { 0xd6, 0x8d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0090
        gbc.setState(0x9a4, 0xfd1, 0x18a0, 0x97dd, 0xa9b2, 0x7335, 0x0, 0x1);
        gbc.writeMem(0x9a4, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd1, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0091
        gbc.setState(0xbc23, 0x3c1d, 0x94f0, 0x3de1, 0xad39, 0x4604, 0x1, 0x0);
        gbc.writeMem(0xbc23, { 0xd6, 0xfe });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0xbc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbc23));
        EXPECT(0xfe, gbc.readMem(0xbc24));
        // D6 0092
        gbc.setState(0x46c4, 0x27d6, 0x9590, 0x4cf4, 0x7397, 0x52b6, 0x0, 0x1);
        gbc.writeMem(0x46c4, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x27d6, gbc.sp());
        EXPECT(0x46c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0093
        gbc.setState(0x3093, 0x4607, 0x18a0, 0xd29e, 0x9789, 0x1579, 0x0, 0x1);
        gbc.writeMem(0x3093, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4607, gbc.sp());
        EXPECT(0x3095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0094
        gbc.setState(0x7a1e, 0x9fb9, 0x7500, 0xfbb6, 0x83f2, 0xff83, 0x1, 0x0);
        gbc.writeMem(0x7a1e, { 0xd6, 0x79 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0095
        gbc.setState(0x3ae0, 0x2aae, 0xe1b0, 0x2f6, 0x24b4, 0x7bd0, 0x0, 0x0);
        gbc.writeMem(0x3ae0, { 0xd6, 0xfe });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2aae, gbc.sp());
        EXPECT(0x3ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0096
        gbc.setState(0xe65, 0x6266, 0x63e0, 0xc55d, 0x1d90, 0x504f, 0x0, 0x0);
        gbc.writeMem(0xe65, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6266, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0097
        gbc.setState(0xa5b0, 0x6421, 0xd350, 0x4c6, 0xf458, 0x73f9, 0x1, 0x0);
        gbc.writeMem(0xa5b0, { 0xd6, 0x23 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0xa5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa5b0));
        EXPECT(0x23, gbc.readMem(0xa5b1));
        // D6 0098
        gbc.setState(0x138a, 0x1411, 0x43c0, 0xe8e0, 0xefb, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x138a, { 0xd6, 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0x138c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0099
        gbc.setState(0x494b, 0xd348, 0x5540, 0xf27e, 0xd9aa, 0x7416, 0x0, 0x0);
        gbc.writeMem(0x494b, { 0xd6, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd348, gbc.sp());
        EXPECT(0x494d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 009B
        gbc.setState(0x8c6f, 0x23bf, 0x2d40, 0x7423, 0x85e2, 0x6981, 0x0, 0x0);
        gbc.writeMem(0x8c6f, { 0xd6, 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8c6f));
        EXPECT(0x9c, gbc.readMem(0x8c70));
        // D6 009C
        gbc.setState(0x9af9, 0xaa0a, 0xe810, 0x9ddf, 0xceec, 0x1683, 0x0, 0x0);
        gbc.writeMem(0x9af9, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa0a, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9af9));
        EXPECT(0xa, gbc.readMem(0x9afa));
        // D6 009D
        gbc.setState(0x53c4, 0x88, 0xb9b0, 0xa955, 0xa83d, 0x762e, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0xd6, 0xab });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x88, gbc.sp());
        EXPECT(0x53c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 009E
        gbc.setState(0x2b3a, 0x508f, 0x3350, 0x7281, 0xb0fa, 0x6183, 0x0, 0x1);
        gbc.writeMem(0x2b3a, { 0xd6, 0xdf });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0x2b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 009F
        gbc.setState(0x316a, 0x14c6, 0x1dc0, 0xc65, 0xe5b0, 0xadd8, 0x1, 0x1);
        gbc.writeMem(0x316a, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00A0
        gbc.setState(0x849, 0x7677, 0x4120, 0xa4e8, 0xd55e, 0x7db, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xd6, 0x1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7677, gbc.sp());
        EXPECT(0x84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00A1
        gbc.setState(0x7785, 0xa9f0, 0xd1c0, 0xda35, 0x3031, 0xc994, 0x1, 0x1);
        gbc.writeMem(0x7785, { 0xd6, 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa9f0, gbc.sp());
        EXPECT(0x7787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00A2
        gbc.setState(0xbece, 0xdf6a, 0x4b70, 0xa62f, 0xa638, 0xe921, 0x1, 0x1);
        gbc.writeMem(0xbece, { 0xd6, 0x30 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbece));
        EXPECT(0x30, gbc.readMem(0xbecf));
        // D6 00A3
        gbc.setState(0xa59e, 0xca7c, 0xd740, 0x8660, 0x3e60, 0x4008, 0x0, 0x1);
        gbc.writeMem(0xa59e, { 0xd6, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa59e));
        EXPECT(0xc9, gbc.readMem(0xa59f));
        // D6 00A4
        gbc.setState(0x1184, 0xf35, 0xfd80, 0x5e67, 0x9ba2, 0x9649, 0x0, 0x1);
        gbc.writeMem(0x1184, { 0xd6, 0x46 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf35, gbc.sp());
        EXPECT(0x1186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00A5
        gbc.setState(0x8310, 0xe0f6, 0xa170, 0x8aea, 0xdfcc, 0x34fc, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8310));
        EXPECT(0x36, gbc.readMem(0x8311));
        // D6 00A6
        gbc.setState(0x6093, 0xef8, 0x5c90, 0x74ed, 0xba09, 0xe9a9, 0x0, 0x1);
        gbc.writeMem(0x6093, { 0xd6, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00A7
        gbc.setState(0x78e0, 0x7e27, 0xbcb0, 0x243c, 0xad9, 0x371a, 0x1, 0x1);
        gbc.writeMem(0x78e0, { 0xd6, 0xb6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0x78e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00A8
        gbc.setState(0xe5d1, 0x3f90, 0xbc70, 0x91ea, 0xca19, 0x8b98, 0x1, 0x0);
        gbc.writeMem(0xe5d1, { 0xd6, 0x97 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3f90, gbc.sp());
        EXPECT(0xe5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe5d1));
        EXPECT(0x97, gbc.readMem(0xe5d2));
        // D6 00A9
        gbc.setState(0x68e1, 0x2950, 0x9600, 0xbdf0, 0xf5b5, 0xe5e4, 0x1, 0x0);
        gbc.writeMem(0x68e1, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00AA
        gbc.setState(0xc41, 0x6721, 0x8f60, 0xd1cd, 0x9dca, 0x3b46, 0x1, 0x1);
        gbc.writeMem(0xc41, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00AB
        gbc.setState(0x765b, 0x6c8b, 0x82d0, 0x3a82, 0x6646, 0x3d68, 0x1, 0x0);
        gbc.writeMem(0x765b, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00AC
        gbc.setState(0x1d3b, 0x7316, 0xd6e0, 0x5bde, 0x7c78, 0x1d21, 0x1, 0x0);
        gbc.writeMem(0x1d3b, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x1d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00AD
        gbc.setState(0x9d87, 0xebe4, 0x7860, 0x7584, 0xdf91, 0xcec3, 0x0, 0x1);
        gbc.writeMem(0x9d87, { 0xd6, 0x79 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xebe4, gbc.sp());
        EXPECT(0x9d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9d87));
        EXPECT(0x79, gbc.readMem(0x9d88));
        // D6 00AE
        gbc.setState(0xc0ca, 0x82ae, 0x8da0, 0x7795, 0x3336, 0x2285, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xd6, 0x8d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x82ae, gbc.sp());
        EXPECT(0xc0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc0ca));
        EXPECT(0x8d, gbc.readMem(0xc0cb));
        // D6 00B0
        gbc.setState(0x731a, 0xad82, 0xd0a0, 0x5f82, 0x162b, 0xa99a, 0x1, 0x0);
        gbc.writeMem(0x731a, { 0xd6, 0x81 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x731c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00B1
        gbc.setState(0x7e05, 0xe263, 0x6d50, 0xb442, 0x2dc3, 0xe57a, 0x1, 0x0);
        gbc.writeMem(0x7e05, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe263, gbc.sp());
        EXPECT(0x7e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00B2
        gbc.setState(0x32a6, 0x6d01, 0x1410, 0x98f8, 0xfbc9, 0x6a34, 0x1, 0x0);
        gbc.writeMem(0x32a6, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6d01, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00B3
        gbc.setState(0x6819, 0xff5a, 0x3ec0, 0x3c58, 0x489a, 0xc08f, 0x0, 0x1);
        gbc.writeMem(0x6819, { 0xd6, 0xb1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0x681b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00B4
        gbc.setState(0xc61d, 0xb81a, 0xdc60, 0x32d5, 0xc147, 0xbd83, 0x0, 0x0);
        gbc.writeMem(0xc61d, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0xc61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc61d));
        EXPECT(0xd4, gbc.readMem(0xc61e));
        // D6 00B5
        gbc.setState(0x1e10, 0x8795, 0xaa70, 0xd7be, 0x7de6, 0xf3b2, 0x0, 0x1);
        gbc.writeMem(0x1e10, { 0xd6, 0x1e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8795, gbc.sp());
        EXPECT(0x1e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00B6
        gbc.setState(0xaff3, 0x2ac9, 0x8b00, 0x42ad, 0xb441, 0xafda, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xd6, 0x76 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2ac9, gbc.sp());
        EXPECT(0xaff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaff3));
        EXPECT(0x76, gbc.readMem(0xaff4));
        // D6 00B7
        gbc.setState(0xd3d, 0xddf5, 0xa9f0, 0x9e1b, 0x277d, 0xefcf, 0x1, 0x1);
        gbc.writeMem(0xd3d, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xddf5, gbc.sp());
        EXPECT(0xd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00B8
        gbc.setState(0x12d4, 0x733b, 0x7550, 0x944c, 0x403, 0x2fc3, 0x0, 0x0);
        gbc.writeMem(0x12d4, { 0xd6, 0x73 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x733b, gbc.sp());
        EXPECT(0x12d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00B9
        gbc.setState(0xa70d, 0x1ef6, 0x3f30, 0x1d5e, 0xe891, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0xa70d, { 0xd6, 0x6c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1ef6, gbc.sp());
        EXPECT(0xa70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa70d));
        EXPECT(0x6c, gbc.readMem(0xa70e));
        // D6 00BA
        gbc.setState(0x176c, 0xb812, 0xba40, 0x887c, 0x9128, 0xe8e6, 0x0, 0x0);
        gbc.writeMem(0x176c, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb812, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00BB
        gbc.setState(0x9e4b, 0x86f9, 0xdc50, 0x8204, 0xd6a2, 0xa4f0, 0x1, 0x0);
        gbc.writeMem(0x9e4b, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x86f9, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9e4b));
        EXPECT(0x36, gbc.readMem(0x9e4c));
        // D6 00BC
        gbc.setState(0xdc07, 0x3e0e, 0x3c00, 0xafe1, 0xe36f, 0xaa59, 0x0, 0x0);
        gbc.writeMem(0xdc07, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdc07));
        EXPECT(0x16, gbc.readMem(0xdc08));
        // D6 00BD
        gbc.setState(0x459a, 0x48e3, 0x7c80, 0xf0f4, 0xe6b5, 0xe9f1, 0x0, 0x0);
        gbc.writeMem(0x459a, { 0xd6, 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x48e3, gbc.sp());
        EXPECT(0x459c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00BE
        gbc.setState(0x126a, 0x9919, 0xf890, 0x8a18, 0xacde, 0xae62, 0x1, 0x0);
        gbc.writeMem(0x126a, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00BF
        gbc.setState(0xb3a9, 0xf22e, 0x5b90, 0x1abc, 0xcad5, 0x643a, 0x1, 0x0);
        gbc.writeMem(0xb3a9, { 0xd6, 0xdd });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf22e, gbc.sp());
        EXPECT(0xb3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb3a9));
        EXPECT(0xdd, gbc.readMem(0xb3aa));
        // D6 00C0
        gbc.setState(0x1483, 0x684, 0xe740, 0x2c07, 0x6151, 0xd261, 0x1, 0x0);
        gbc.writeMem(0x1483, { 0xd6, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x684, gbc.sp());
        EXPECT(0x1485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00C1
        gbc.setState(0xcb0f, 0x4037, 0x4320, 0x3bb7, 0x7737, 0x177c, 0x1, 0x0);
        gbc.writeMem(0xcb0f, { 0xd6, 0xdf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4037, gbc.sp());
        EXPECT(0xcb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcb0f));
        EXPECT(0xdf, gbc.readMem(0xcb10));
        // D6 00C2
        gbc.setState(0x50b9, 0xa3cb, 0xaa0, 0x9611, 0x4efe, 0x936, 0x0, 0x1);
        gbc.writeMem(0x50b9, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa3cb, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00C3
        gbc.setState(0x6a6e, 0x5e26, 0x3820, 0xd558, 0x5914, 0xf1f0, 0x0, 0x0);
        gbc.writeMem(0x6a6e, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00C4
        gbc.setState(0x4f47, 0x856f, 0x4870, 0xad71, 0xbc84, 0xce9a, 0x1, 0x1);
        gbc.writeMem(0x4f47, { 0xd6, 0xb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00C5
        gbc.setState(0x3c31, 0x3297, 0x1030, 0xe816, 0xeba9, 0xd631, 0x0, 0x0);
        gbc.writeMem(0x3c31, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3297, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00C6
        gbc.setState(0x6e43, 0x3e44, 0xd530, 0xd9f7, 0x6fc7, 0xb267, 0x0, 0x1);
        gbc.writeMem(0x6e43, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e44, gbc.sp());
        EXPECT(0x6e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00C7
        gbc.setState(0x2e45, 0xc627, 0x5b00, 0xf24f, 0xf4a5, 0x1f37, 0x1, 0x0);
        gbc.writeMem(0x2e45, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0x2e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00C8
        gbc.setState(0x5950, 0x1351, 0x9d20, 0x5674, 0xcaf, 0xaafd, 0x0, 0x0);
        gbc.writeMem(0x5950, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1351, gbc.sp());
        EXPECT(0x5952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00C9
        gbc.setState(0xcd2c, 0x40ec, 0xb620, 0xd1d0, 0x57e6, 0x8379, 0x1, 0x0);
        gbc.writeMem(0xcd2c, { 0xd6, 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x40ec, gbc.sp());
        EXPECT(0xcd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcd2c));
        EXPECT(0x6c, gbc.readMem(0xcd2d));
        // D6 00CA
        gbc.setState(0xc3c, 0x4091, 0xc830, 0xe05f, 0x5e77, 0xf198, 0x0, 0x0);
        gbc.writeMem(0xc3c, { 0xd6, 0x90 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4091, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00CB
        gbc.setState(0x5d34, 0xa3b5, 0x1e90, 0xa24a, 0xfbdd, 0xe556, 0x0, 0x1);
        gbc.writeMem(0x5d34, { 0xd6, 0x20 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0x5d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00CC
        gbc.setState(0x773e, 0x26e4, 0x86d0, 0x8c90, 0x810a, 0xead4, 0x1, 0x0);
        gbc.writeMem(0x773e, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00CD
        gbc.setState(0xb64a, 0x7813, 0x1a80, 0xec67, 0x3b48, 0x9355, 0x0, 0x1);
        gbc.writeMem(0xb64a, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb64a));
        EXPECT(0xa3, gbc.readMem(0xb64b));
        // D6 00CE
        gbc.setState(0x7354, 0xe28f, 0xa5c0, 0x3ae0, 0x8ebb, 0x378f, 0x0, 0x1);
        gbc.writeMem(0x7354, { 0xd6, 0x3d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe28f, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00CF
        gbc.setState(0xce60, 0xc670, 0x8c90, 0x5074, 0xb9b9, 0x1507, 0x0, 0x1);
        gbc.writeMem(0xce60, { 0xd6, 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc670, gbc.sp());
        EXPECT(0xce62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xce60));
        EXPECT(0xc8, gbc.readMem(0xce61));
        // D6 00D0
        gbc.setState(0x9b03, 0x2cf2, 0x3c00, 0xb6e5, 0x161e, 0xa41e, 0x1, 0x1);
        gbc.writeMem(0x9b03, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2cf2, gbc.sp());
        EXPECT(0x9b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9b03));
        EXPECT(0xe7, gbc.readMem(0x9b04));
        // D6 00D1
        gbc.setState(0x8b63, 0x4d06, 0x2800, 0xe3ee, 0x8571, 0x8893, 0x0, 0x0);
        gbc.writeMem(0x8b63, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4d06, gbc.sp());
        EXPECT(0x8b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8b63));
        EXPECT(0x3e, gbc.readMem(0x8b64));
        // D6 00D2
        gbc.setState(0x9182, 0xf581, 0x3bc0, 0x2f29, 0x5cbf, 0xb17a, 0x1, 0x1);
        gbc.writeMem(0x9182, { 0xd6, 0xab });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9182));
        EXPECT(0xab, gbc.readMem(0x9183));
        // D6 00D3
        gbc.setState(0xe87a, 0xd5a3, 0xc3e0, 0x6f93, 0x7232, 0x4dbd, 0x1, 0x1);
        gbc.writeMem(0xe87a, { 0xd6, 0xfc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0xe87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe87a));
        EXPECT(0xfc, gbc.readMem(0xe87b));
        // D6 00D4
        gbc.setState(0x8551, 0x99fd, 0x7370, 0xf53f, 0x3209, 0xd895, 0x1, 0x1);
        gbc.writeMem(0x8551, { 0xd6, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0x8553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8551));
        EXPECT(0xb4, gbc.readMem(0x8552));
        // D6 00D5
        gbc.setState(0x7358, 0xce39, 0x25d0, 0x45f5, 0xea32, 0x97cf, 0x0, 0x1);
        gbc.writeMem(0x7358, { 0xd6, 0x86 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xce39, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00D6
        gbc.setState(0xbcda, 0xf3f9, 0xfd60, 0x8e9, 0xa182, 0xa311, 0x1, 0x1);
        gbc.writeMem(0xbcda, { 0xd6, 0x5e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf3f9, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbcda));
        EXPECT(0x5e, gbc.readMem(0xbcdb));
        // D6 00D7
        gbc.setState(0x3bc4, 0x6f99, 0x4f50, 0x7c86, 0xb954, 0xe8f7, 0x0, 0x0);
        gbc.writeMem(0x3bc4, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6f99, gbc.sp());
        EXPECT(0x3bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00D8
        gbc.setState(0x128d, 0x64b0, 0xc3f0, 0xc3fc, 0xc640, 0x9d60, 0x1, 0x1);
        gbc.writeMem(0x128d, { 0xd6, 0xa8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x64b0, gbc.sp());
        EXPECT(0x128f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00DA
        gbc.setState(0x3ce4, 0xa20c, 0xc270, 0x8f40, 0x386f, 0x3ef5, 0x0, 0x0);
        gbc.writeMem(0x3ce4, { 0xd6, 0x6f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa20c, gbc.sp());
        EXPECT(0x3ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00DB
        gbc.setState(0x86d1, 0xb0a3, 0xa790, 0x9db1, 0x9c31, 0x8ce6, 0x1, 0x0);
        gbc.writeMem(0x86d1, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x86d1));
        EXPECT(0xae, gbc.readMem(0x86d2));
        // D6 00DC
        gbc.setState(0x1a8d, 0x878d, 0xf860, 0x3ef5, 0xfb40, 0xef07, 0x0, 0x1);
        gbc.writeMem(0x1a8d, { 0xd6, 0xca });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x878d, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00DD
        gbc.setState(0xd0f7, 0xc3fe, 0xef0, 0x2054, 0x28e4, 0x93e0, 0x0, 0x1);
        gbc.writeMem(0xd0f7, { 0xd6, 0x86 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc3fe, gbc.sp());
        EXPECT(0xd0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd0f7));
        EXPECT(0x86, gbc.readMem(0xd0f8));
        // D6 00DE
        gbc.setState(0x4e65, 0x38d8, 0xcd40, 0x8447, 0x13ec, 0x82aa, 0x0, 0x0);
        gbc.writeMem(0x4e65, { 0xd6, 0xd8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x38d8, gbc.sp());
        EXPECT(0x4e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00DF
        gbc.setState(0xd466, 0xe6f5, 0x4e40, 0x390c, 0xbb99, 0xdfc1, 0x0, 0x0);
        gbc.writeMem(0xd466, { 0xd6, 0x2a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe6f5, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd466));
        EXPECT(0x2a, gbc.readMem(0xd467));
        // D6 00E0
        gbc.setState(0x7f4e, 0xaa87, 0x4330, 0x4cd2, 0x60e9, 0xd10d, 0x1, 0x0);
        gbc.writeMem(0x7f4e, { 0xd6, 0xd2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa87, gbc.sp());
        EXPECT(0x7f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00E1
        gbc.setState(0x175c, 0x231a, 0x2820, 0xe2ff, 0x471c, 0x642f, 0x0, 0x1);
        gbc.writeMem(0x175c, { 0xd6, 0xf1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00E2
        gbc.setState(0x9db, 0xa12e, 0x93f0, 0x37ab, 0x87ec, 0xea5d, 0x0, 0x0);
        gbc.writeMem(0x9db, { 0xd6, 0xde });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00E4
        gbc.setState(0x9809, 0x7fb4, 0x1e50, 0x11ed, 0x4ca8, 0x217f, 0x0, 0x1);
        gbc.writeMem(0x9809, { 0xd6, 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7fb4, gbc.sp());
        EXPECT(0x980b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9809));
        EXPECT(0x49, gbc.readMem(0x980a));
        // D6 00E5
        gbc.setState(0x6, 0xf73e, 0x6da0, 0x9878, 0x58af, 0x7b3e, 0x0, 0x0);
        gbc.writeMem(0x6, { 0xd6, 0x6c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00E6
        gbc.setState(0x43a1, 0x586a, 0x16e0, 0xc6e, 0xf305, 0xe127, 0x0, 0x0);
        gbc.writeMem(0x43a1, { 0xd6, 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x586a, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00E7
        gbc.setState(0xb015, 0xcd1b, 0x61b0, 0xcda9, 0xe263, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0xd6, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb015));
        EXPECT(0xe0, gbc.readMem(0xb016));
        // D6 00E8
        gbc.setState(0x1aff, 0xeb06, 0xb800, 0x1e66, 0x4a50, 0xda1, 0x1, 0x0);
        gbc.writeMem(0x1aff, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00EC
        gbc.setState(0x43b3, 0x9a79, 0xee30, 0x4068, 0xa4e6, 0x6308, 0x0, 0x1);
        gbc.writeMem(0x43b3, { 0xd6, 0xba });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00ED
        gbc.setState(0x1270, 0xb4e2, 0x1850, 0x76e1, 0xc053, 0xc368, 0x0, 0x0);
        gbc.writeMem(0x1270, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x1272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00EE
        gbc.setState(0x33d2, 0xc263, 0x31a0, 0x9049, 0xa2c8, 0xe03c, 0x0, 0x0);
        gbc.writeMem(0x33d2, { 0xd6, 0x9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x33d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00EF
        gbc.setState(0x2899, 0x4419, 0x2de0, 0xd96c, 0x367d, 0xe055, 0x0, 0x1);
        gbc.writeMem(0x2899, { 0xd6, 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4419, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00F0
        gbc.setState(0xe28e, 0x133, 0x5800, 0xe60, 0xc6e0, 0x7316, 0x1, 0x1);
        gbc.writeMem(0xe28e, { 0xd6, 0xaa });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x133, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe28e));
        EXPECT(0xaa, gbc.readMem(0xe28f));
        // D6 00F1
        gbc.setState(0xecf0, 0xec3, 0x9950, 0xde11, 0x9bdf, 0x5825, 0x0, 0x1);
        gbc.writeMem(0xecf0, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xec3, gbc.sp());
        EXPECT(0xecf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xecf0));
        EXPECT(0xe7, gbc.readMem(0xecf1));
        // D6 00F2
        gbc.setState(0x6398, 0xb9c5, 0x33e0, 0xe238, 0x20b2, 0x7a89, 0x1, 0x0);
        gbc.writeMem(0x6398, { 0xd6, 0xf2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x639a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00F3
        gbc.setState(0x970, 0x35eb, 0x92c0, 0x3128, 0x3e28, 0xf708, 0x0, 0x1);
        gbc.writeMem(0x970, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0x972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00F4
        gbc.setState(0xd9c3, 0x5a2, 0xbfe0, 0xfa91, 0x8ceb, 0xa72e, 0x0, 0x1);
        gbc.writeMem(0xd9c3, { 0xd6, 0x3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5a2, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd9c3));
        EXPECT(0x3, gbc.readMem(0xd9c4));
        // D6 00F5
        gbc.setState(0x48f1, 0xa24b, 0xa1a0, 0xcb14, 0xbe4e, 0x5a3b, 0x0, 0x1);
        gbc.writeMem(0x48f1, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0x48f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00F6
        gbc.setState(0xcbd0, 0x81e6, 0xa050, 0x8999, 0xd3e6, 0xa9b6, 0x0, 0x0);
        gbc.writeMem(0xcbd0, { 0xd6, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x81e6, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcbd0));
        EXPECT(0x1, gbc.readMem(0xcbd1));
        // D6 00F8
        gbc.setState(0x9e87, 0xbba1, 0xf8c0, 0x7650, 0x4a47, 0x6c78, 0x0, 0x1);
        gbc.writeMem(0x9e87, { 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbba1, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9e87));
        EXPECT(0xe4, gbc.readMem(0x9e88));
        // D6 00F9
        gbc.setState(0x382b, 0xbd30, 0x4e60, 0x3a83, 0x2b3e, 0x513e, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0xd6, 0xcc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd30, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00FA
        gbc.setState(0x8b20, 0x99cf, 0x4560, 0xa82a, 0x712d, 0xeffe, 0x0, 0x1);
        gbc.writeMem(0x8b20, { 0xd6, 0x7f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8b20));
        EXPECT(0x7f, gbc.readMem(0x8b21));
        // D6 00FB
        gbc.setState(0x2ad7, 0x4eb, 0xc350, 0x34a4, 0x6047, 0x7a2, 0x0, 0x1);
        gbc.writeMem(0x2ad7, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4eb, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00FC
        gbc.setState(0xc1a, 0x60e7, 0x22e0, 0x990d, 0x1583, 0xc121, 0x0, 0x0);
        gbc.writeMem(0xc1a, { 0xd6, 0x3a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 00FD
        gbc.setState(0xdda0, 0x4968, 0x78d0, 0x5471, 0xa157, 0xdf4e, 0x0, 0x1);
        gbc.writeMem(0xdda0, { 0xd6, 0xa2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4968, gbc.sp());
        EXPECT(0xdda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdda0));
        EXPECT(0xa2, gbc.readMem(0xdda1));
        // D6 00FE
        gbc.setState(0x5bf0, 0x94b2, 0xc8d0, 0x87c4, 0x779c, 0xd200, 0x1, 0x0);
        gbc.writeMem(0x5bf0, { 0xd6, 0x66 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 00FF
        gbc.setState(0xc33d, 0xceb8, 0x4640, 0x4c18, 0x28f4, 0xdfa9, 0x0, 0x1);
        gbc.writeMem(0xc33d, { 0xd6, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc33d));
        EXPECT(0x72, gbc.readMem(0xc33e));
        // D6 0100
        gbc.setState(0x337b, 0x9e39, 0xf00, 0x9fc0, 0x6fde, 0xa65e, 0x1, 0x1);
        gbc.writeMem(0x337b, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x337d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0101
        gbc.setState(0xaf70, 0x9f99, 0x7e90, 0xa994, 0x218e, 0xc042, 0x1, 0x1);
        gbc.writeMem(0xaf70, { 0xd6, 0x4e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9f99, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaf70));
        EXPECT(0x4e, gbc.readMem(0xaf71));
        // D6 0102
        gbc.setState(0xdaa4, 0x2626, 0x9880, 0x6d73, 0x408e, 0x6060, 0x1, 0x0);
        gbc.writeMem(0xdaa4, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2626, gbc.sp());
        EXPECT(0xdaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdaa4));
        EXPECT(0xc5, gbc.readMem(0xdaa5));
        // D6 0103
        gbc.setState(0xa3b0, 0x561f, 0xf210, 0x7c1b, 0x2d6c, 0x310f, 0x1, 0x1);
        gbc.writeMem(0xa3b0, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0xa3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa3b0));
        EXPECT(0x53, gbc.readMem(0xa3b1));
        // D6 0104
        gbc.setState(0xa34, 0x35bc, 0x7320, 0x1236, 0xe462, 0xc675, 0x0, 0x1);
        gbc.writeMem(0xa34, { 0xd6, 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0xa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0106
        gbc.setState(0x1ead, 0xd107, 0x6030, 0xc9ba, 0xac85, 0xa1ae, 0x1, 0x0);
        gbc.writeMem(0x1ead, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd107, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0107
        gbc.setState(0x1872, 0x5462, 0x6e10, 0xe93, 0x6e45, 0x8244, 0x0, 0x0);
        gbc.writeMem(0x1872, { 0xd6, 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5462, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0108
        gbc.setState(0x8fa1, 0x5258, 0xced0, 0x30cc, 0xbd3d, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x8fa1, { 0xd6, 0x4d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5258, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8fa1));
        EXPECT(0x4d, gbc.readMem(0x8fa2));
        // D6 0109
        gbc.setState(0x2b60, 0xcd07, 0x8790, 0x2bb8, 0x1f6d, 0x1467, 0x0, 0x1);
        gbc.writeMem(0x2b60, { 0xd6, 0x6d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x2b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 010A
        gbc.setState(0x6848, 0x610e, 0xae10, 0xc392, 0xe05f, 0x62af, 0x1, 0x1);
        gbc.writeMem(0x6848, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x610e, gbc.sp());
        EXPECT(0x684a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 010B
        gbc.setState(0xde6, 0x7b5a, 0xa130, 0x3abf, 0x7b50, 0xc957, 0x1, 0x1);
        gbc.writeMem(0xde6, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0xde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 010C
        gbc.setState(0x1a5a, 0x5b82, 0x150, 0x5a91, 0xd1b1, 0x6f66, 0x0, 0x1);
        gbc.writeMem(0x1a5a, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5b82, gbc.sp());
        EXPECT(0x1a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 010D
        gbc.setState(0x16e, 0x2760, 0xfa90, 0xab3b, 0x9cdc, 0xf150, 0x0, 0x0);
        gbc.writeMem(0x16e, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 010E
        gbc.setState(0xcfa8, 0xde2b, 0xe210, 0xc024, 0x17ad, 0x9e4d, 0x1, 0x0);
        gbc.writeMem(0xcfa8, { 0xd6, 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xde2b, gbc.sp());
        EXPECT(0xcfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcfa8));
        EXPECT(0x7e, gbc.readMem(0xcfa9));
        // D6 010F
        gbc.setState(0x16e, 0x9dbf, 0x6010, 0xee7, 0x147e, 0xb82f, 0x0, 0x0);
        gbc.writeMem(0x16e, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0110
        gbc.setState(0xa837, 0xb2af, 0x22c0, 0x16fb, 0x475b, 0x50f4, 0x0, 0x1);
        gbc.writeMem(0xa837, { 0xd6, 0xcd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb2af, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa837));
        EXPECT(0xcd, gbc.readMem(0xa838));
        // D6 0111
        gbc.setState(0x3d2e, 0xd705, 0x7b70, 0x15d, 0xf64f, 0xd91f, 0x1, 0x0);
        gbc.writeMem(0x3d2e, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd705, gbc.sp());
        EXPECT(0x3d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0112
        gbc.setState(0x429d, 0x82b7, 0x11e0, 0x85b6, 0x27ed, 0x6030, 0x0, 0x0);
        gbc.writeMem(0x429d, { 0xd6, 0x19 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0113
        gbc.setState(0x2014, 0x273b, 0x8610, 0x83c2, 0x72b3, 0x8e5, 0x1, 0x1);
        gbc.writeMem(0x2014, { 0xd6, 0x65 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0x2016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0115
        gbc.setState(0x6a97, 0x4652, 0x3270, 0xaf93, 0x2803, 0xc573, 0x1, 0x1);
        gbc.writeMem(0x6a97, { 0xd6, 0x66 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4652, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0116
        gbc.setState(0x3fd8, 0xb52f, 0x84a0, 0x9f93, 0x26c4, 0x1bb8, 0x0, 0x1);
        gbc.writeMem(0x3fd8, { 0xd6, 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb52f, gbc.sp());
        EXPECT(0x3fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0117
        gbc.setState(0xb293, 0x74cf, 0x7d0, 0x7f70, 0x9f18, 0x2a9d, 0x0, 0x1);
        gbc.writeMem(0xb293, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb293));
        EXPECT(0x93, gbc.readMem(0xb294));
        // D6 0118
        gbc.setState(0x8dee, 0x9e48, 0xb780, 0xc171, 0x30f1, 0x97a3, 0x0, 0x1);
        gbc.writeMem(0x8dee, { 0xd6, 0xf9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0x8df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8dee));
        EXPECT(0xf9, gbc.readMem(0x8def));
        // D6 0119
        gbc.setState(0xcb07, 0x8c40, 0x7680, 0xaa7e, 0xd2ab, 0x79fa, 0x1, 0x0);
        gbc.writeMem(0xcb07, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0xcb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcb07));
        EXPECT(0xe7, gbc.readMem(0xcb08));
        // D6 011A
        gbc.setState(0xe33b, 0x3708, 0x2490, 0x2eb, 0x157, 0xcc9a, 0x1, 0x1);
        gbc.writeMem(0xe33b, { 0xd6, 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3708, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe33b));
        EXPECT(0x21, gbc.readMem(0xe33c));
        // D6 011B
        gbc.setState(0x5df7, 0xd9f2, 0x38d0, 0xade0, 0x7773, 0xedd1, 0x0, 0x0);
        gbc.writeMem(0x5df7, { 0xd6, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd9f2, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 011C
        gbc.setState(0x6cad, 0xd29e, 0x8d80, 0x100f, 0x4a80, 0xb73f, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0xd6, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0x6caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 011D
        gbc.setState(0x479b, 0xbaa9, 0xdb20, 0x40d9, 0x76ff, 0x42b6, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xd6, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbaa9, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 011E
        gbc.setState(0x8b28, 0x175d, 0xb2c0, 0x4182, 0xc361, 0xe3c, 0x0, 0x0);
        gbc.writeMem(0x8b28, { 0xd6, 0xc8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x175d, gbc.sp());
        EXPECT(0x8b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8b28));
        EXPECT(0xc8, gbc.readMem(0x8b29));
        // D6 011F
        gbc.setState(0x7add, 0x1caa, 0x3700, 0x5e9e, 0x1a31, 0x3307, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1caa, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0120
        gbc.setState(0xdce4, 0x8f4d, 0x5c20, 0xf5c8, 0xa673, 0xfdc7, 0x1, 0x1);
        gbc.writeMem(0xdce4, { 0xd6, 0x38 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8f4d, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdce4));
        EXPECT(0x38, gbc.readMem(0xdce5));
        // D6 0121
        gbc.setState(0x57c1, 0x9066, 0xc0e0, 0xb706, 0x3b2c, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0x57c1, { 0xd6, 0x3a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x57c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0122
        gbc.setState(0x9e81, 0xb70, 0xdd90, 0x4184, 0x15e5, 0xcbf6, 0x0, 0x1);
        gbc.writeMem(0x9e81, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb70, gbc.sp());
        EXPECT(0x9e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9e81));
        EXPECT(0xb5, gbc.readMem(0x9e82));
        // D6 0123
        gbc.setState(0x1e64, 0x445e, 0xa310, 0xeae3, 0xf741, 0x75d8, 0x1, 0x1);
        gbc.writeMem(0x1e64, { 0xd6, 0x4f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x445e, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0124
        gbc.setState(0xa7d, 0xc80d, 0x4a50, 0xbc38, 0x6d18, 0x7a95, 0x0, 0x1);
        gbc.writeMem(0xa7d, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0xa7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0125
        gbc.setState(0x7a54, 0x1f8c, 0x4240, 0xe97b, 0xccdf, 0x6bdd, 0x1, 0x0);
        gbc.writeMem(0x7a54, { 0xd6, 0xef });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0126
        gbc.setState(0xde25, 0xe96e, 0x63e0, 0x15db, 0x4ed5, 0xd515, 0x1, 0x1);
        gbc.writeMem(0xde25, { 0xd6, 0xc6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe96e, gbc.sp());
        EXPECT(0xde27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xde25));
        EXPECT(0xc6, gbc.readMem(0xde26));
        // D6 0127
        gbc.setState(0xabba, 0x8748, 0xddc0, 0xb440, 0x88dd, 0xe454, 0x1, 0x1);
        gbc.writeMem(0xabba, { 0xd6, 0x90 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8748, gbc.sp());
        EXPECT(0xabbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xabba));
        EXPECT(0x90, gbc.readMem(0xabbb));
        // D6 0128
        gbc.setState(0x3a79, 0x705a, 0xcc50, 0x3fe6, 0xf649, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x3a79, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x705a, gbc.sp());
        EXPECT(0x3a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0129
        gbc.setState(0x150f, 0x8d1, 0x8920, 0x80, 0x5491, 0x2492, 0x0, 0x0);
        gbc.writeMem(0x150f, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8d1, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 012A
        gbc.setState(0x7587, 0xb755, 0xd5a0, 0x5f1, 0xf406, 0xcf86, 0x0, 0x0);
        gbc.writeMem(0x7587, { 0xd6, 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb755, gbc.sp());
        EXPECT(0x7589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 012B
        gbc.setState(0x7f7f, 0x8be, 0xf430, 0xdc82, 0x9e62, 0x5b33, 0x0, 0x0);
        gbc.writeMem(0x7f7f, { 0xd6, 0xc1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8be, gbc.sp());
        EXPECT(0x7f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 012C
        gbc.setState(0xe17b, 0x1830, 0x63a0, 0x4424, 0x3f7, 0x878e, 0x1, 0x0);
        gbc.writeMem(0xe17b, { 0xd6, 0x65 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1830, gbc.sp());
        EXPECT(0xe17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe17b));
        EXPECT(0x65, gbc.readMem(0xe17c));
        // D6 012D
        gbc.setState(0xd2ef, 0xf1e5, 0xe150, 0x6f31, 0xac85, 0xe526, 0x0, 0x0);
        gbc.writeMem(0xd2ef, { 0xd6, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf1e5, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd2ef));
        EXPECT(0xc9, gbc.readMem(0xd2f0));
        // D6 012E
        gbc.setState(0x7fec, 0x9b50, 0xc340, 0x6c91, 0x4738, 0x5ce, 0x1, 0x1);
        gbc.writeMem(0x7fec, { 0xd6, 0x6f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9b50, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 012F
        gbc.setState(0x54b3, 0x97f8, 0x6dd0, 0x8ed6, 0xad0e, 0x6137, 0x1, 0x0);
        gbc.writeMem(0x54b3, { 0xd6, 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x54b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0130
        gbc.setState(0x8438, 0x642f, 0x2870, 0x32f4, 0x9746, 0x31eb, 0x0, 0x1);
        gbc.writeMem(0x8438, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8438));
        EXPECT(0x42, gbc.readMem(0x8439));
        // D6 0131
        gbc.setState(0xaed8, 0xabce, 0xe060, 0x8cc, 0x54fa, 0xa6d9, 0x0, 0x1);
        gbc.writeMem(0xaed8, { 0xd6, 0x4e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0xaeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaed8));
        EXPECT(0x4e, gbc.readMem(0xaed9));
        // D6 0132
        gbc.setState(0x3ea9, 0xa597, 0xa650, 0x7302, 0x5920, 0xe5ce, 0x1, 0x1);
        gbc.writeMem(0x3ea9, { 0xd6, 0xd });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0133
        gbc.setState(0x885b, 0x9f4a, 0x6990, 0x73b6, 0x8702, 0xd992, 0x1, 0x0);
        gbc.writeMem(0x885b, { 0xd6, 0x6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9f4a, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x885b));
        EXPECT(0x6, gbc.readMem(0x885c));
        // D6 0134
        gbc.setState(0x215d, 0x7bfd, 0x9010, 0xfd7e, 0x1887, 0x7ef5, 0x0, 0x0);
        gbc.writeMem(0x215d, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0x215f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0136
        gbc.setState(0x442f, 0x8491, 0xdc00, 0x74cc, 0x4faa, 0x1894, 0x1, 0x0);
        gbc.writeMem(0x442f, { 0xd6, 0x2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8491, gbc.sp());
        EXPECT(0x4431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0137
        gbc.setState(0x2334, 0xf86a, 0xb520, 0xd168, 0x89b5, 0x3103, 0x1, 0x0);
        gbc.writeMem(0x2334, { 0xd6, 0xf4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0x2336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0138
        gbc.setState(0x85b8, 0xf468, 0xa8d0, 0xf79c, 0x29e0, 0x601a, 0x0, 0x1);
        gbc.writeMem(0x85b8, { 0xd6, 0xba });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x85b8));
        EXPECT(0xba, gbc.readMem(0x85b9));
        // D6 0139
        gbc.setState(0xc664, 0xc63, 0xa780, 0x9987, 0xc331, 0xa886, 0x0, 0x1);
        gbc.writeMem(0xc664, { 0xd6, 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc63, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc664));
        EXPECT(0x7b, gbc.readMem(0xc665));
        // D6 013B
        gbc.setState(0x8eea, 0xc81a, 0xfe40, 0xee13, 0x79ea, 0xd574, 0x0, 0x0);
        gbc.writeMem(0x8eea, { 0xd6, 0x60 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x8eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8eea));
        EXPECT(0x60, gbc.readMem(0x8eeb));
        // D6 013C
        gbc.setState(0x715e, 0x4a42, 0x2920, 0x847e, 0xc316, 0xcd38, 0x1, 0x1);
        gbc.writeMem(0x715e, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4a42, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 013D
        gbc.setState(0xdafd, 0x846a, 0x5580, 0xc537, 0xf524, 0x482d, 0x1, 0x0);
        gbc.writeMem(0xdafd, { 0xd6, 0xf8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x846a, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdafd));
        EXPECT(0xf8, gbc.readMem(0xdafe));
        // D6 013E
        gbc.setState(0xa65f, 0x98d1, 0xb40, 0xd35f, 0xfa7b, 0x9bb2, 0x0, 0x0);
        gbc.writeMem(0xa65f, { 0xd6, 0x4d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x98d1, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa65f));
        EXPECT(0x4d, gbc.readMem(0xa660));
        // D6 013F
        gbc.setState(0xdbcb, 0xf468, 0x2e0, 0x4267, 0xf4a2, 0x7635, 0x0, 0x0);
        gbc.writeMem(0xdbcb, { 0xd6, 0x22 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0xdbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdbcb));
        EXPECT(0x22, gbc.readMem(0xdbcc));
        // D6 0140
        gbc.setState(0xc287, 0x8f12, 0xc170, 0xf702, 0x5a28, 0xad8b, 0x0, 0x0);
        gbc.writeMem(0xc287, { 0xd6, 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8f12, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc287));
        EXPECT(0x50, gbc.readMem(0xc288));
        // D6 0141
        gbc.setState(0x7fe7, 0x3e43, 0x94f0, 0x66c1, 0xf2be, 0x753f, 0x0, 0x1);
        gbc.writeMem(0x7fe7, { 0xd6, 0xe1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3e43, gbc.sp());
        EXPECT(0x7fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0142
        gbc.setState(0xefe8, 0xd31e, 0xeb80, 0x7c5f, 0x9bd9, 0xa0af, 0x1, 0x0);
        gbc.writeMem(0xefe8, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0xefea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xefe8));
        EXPECT(0xce, gbc.readMem(0xefe9));
        // D6 0143
        gbc.setState(0x5559, 0x12cd, 0x6380, 0xb41e, 0x63f, 0x177d, 0x0, 0x1);
        gbc.writeMem(0x5559, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x12cd, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0144
        gbc.setState(0xc874, 0x37a0, 0xf340, 0x9933, 0xa9c, 0x7bb8, 0x1, 0x1);
        gbc.writeMem(0xc874, { 0xd6, 0x73 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x37a0, gbc.sp());
        EXPECT(0xc876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc874));
        EXPECT(0x73, gbc.readMem(0xc875));
        // D6 0145
        gbc.setState(0x580c, 0xe80, 0xad10, 0x1ef8, 0x7d2c, 0x1069, 0x1, 0x0);
        gbc.writeMem(0x580c, { 0xd6, 0x40 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe80, gbc.sp());
        EXPECT(0x580e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0146
        gbc.setState(0x4d9b, 0x7b84, 0x8300, 0x44b5, 0xb594, 0x8aa3, 0x0, 0x1);
        gbc.writeMem(0x4d9b, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0147
        gbc.setState(0x4716, 0xa8ed, 0xf730, 0x58c7, 0xd347, 0x9a14, 0x0, 0x1);
        gbc.writeMem(0x4716, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0148
        gbc.setState(0xe192, 0xf7e5, 0xbcc0, 0x51a4, 0x6e38, 0x207d, 0x0, 0x1);
        gbc.writeMem(0xe192, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7e5, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe192));
        EXPECT(0x48, gbc.readMem(0xe193));
        // D6 0149
        gbc.setState(0x1af8, 0x405d, 0x1040, 0xb388, 0xdd99, 0x2ab, 0x0, 0x0);
        gbc.writeMem(0x1af8, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x1afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 014A
        gbc.setState(0x309e, 0x5bbb, 0x5040, 0x5e9a, 0xa288, 0xc9d8, 0x0, 0x0);
        gbc.writeMem(0x309e, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0x30a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 014B
        gbc.setState(0x5fdd, 0xb846, 0x4ac0, 0x60c9, 0x7040, 0x9da6, 0x1, 0x1);
        gbc.writeMem(0x5fdd, { 0xd6, 0x98 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 014C
        gbc.setState(0x12fb, 0x41a9, 0xe5d0, 0xda78, 0x11a, 0x991e, 0x1, 0x1);
        gbc.writeMem(0x12fb, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x41a9, gbc.sp());
        EXPECT(0x12fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 014D
        gbc.setState(0x2905, 0xb422, 0xc8d0, 0xb74b, 0x1aa5, 0xbedf, 0x1, 0x0);
        gbc.writeMem(0x2905, { 0xd6, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0x2907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 014E
        gbc.setState(0x57c8, 0x4d10, 0x36d0, 0x4fc0, 0x2a4d, 0xec3, 0x1, 0x1);
        gbc.writeMem(0x57c8, { 0xd6, 0x50 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d10, gbc.sp());
        EXPECT(0x57ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 014F
        gbc.setState(0xc29f, 0x6901, 0x4ca0, 0x2197, 0xf6d0, 0x33c8, 0x0, 0x1);
        gbc.writeMem(0xc29f, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0xc2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc29f));
        EXPECT(0xbc, gbc.readMem(0xc2a0));
        // D6 0150
        gbc.setState(0xd1da, 0x2508, 0xd1e0, 0x841, 0xad14, 0xbe5d, 0x0, 0x0);
        gbc.writeMem(0xd1da, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd1da));
        EXPECT(0xaf, gbc.readMem(0xd1db));
        // D6 0151
        gbc.setState(0x119d, 0x1c54, 0xf00, 0xa259, 0x4dc, 0x5295, 0x1, 0x0);
        gbc.writeMem(0x119d, { 0xd6, 0x3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1c54, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0152
        gbc.setState(0x364e, 0x4745, 0x1180, 0x723a, 0x189c, 0x453c, 0x1, 0x1);
        gbc.writeMem(0x364e, { 0xd6, 0x86 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0153
        gbc.setState(0x6d59, 0xb0bf, 0xd140, 0xd509, 0xb416, 0xf3b2, 0x0, 0x1);
        gbc.writeMem(0x6d59, { 0xd6, 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb0bf, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0154
        gbc.setState(0xd4fb, 0x1a5c, 0xd6d0, 0xbf5c, 0xdc49, 0x6f62, 0x0, 0x0);
        gbc.writeMem(0xd4fb, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd4fb));
        EXPECT(0x47, gbc.readMem(0xd4fc));
        // D6 0155
        gbc.setState(0xe7d5, 0x4f68, 0x7c0, 0x334e, 0xf7b9, 0xa816, 0x1, 0x1);
        gbc.writeMem(0xe7d5, { 0xd6, 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4f68, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe7d5));
        EXPECT(0x61, gbc.readMem(0xe7d6));
        // D6 0156
        gbc.setState(0xcd42, 0xa523, 0x3510, 0xbba2, 0x8b00, 0xf7e8, 0x1, 0x0);
        gbc.writeMem(0xcd42, { 0xd6, 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcd42));
        EXPECT(0x15, gbc.readMem(0xcd43));
        // D6 0157
        gbc.setState(0xba4e, 0xf1f5, 0x7190, 0xb0b2, 0xad6b, 0x4e0b, 0x1, 0x0);
        gbc.writeMem(0xba4e, { 0xd6, 0x1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0xba50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xba4e));
        EXPECT(0x1, gbc.readMem(0xba4f));
        // D6 0158
        gbc.setState(0xbcd0, 0x5969, 0x5210, 0xe4e9, 0xefce, 0x1eb2, 0x0, 0x1);
        gbc.writeMem(0xbcd0, { 0xd6, 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5969, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbcd0));
        EXPECT(0x19, gbc.readMem(0xbcd1));
        // D6 0159
        gbc.setState(0xe58b, 0xc237, 0xbb10, 0x975d, 0x779, 0x5b0d, 0x0, 0x0);
        gbc.writeMem(0xe58b, { 0xd6, 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0xe58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe58b));
        EXPECT(0x3c, gbc.readMem(0xe58c));
        // D6 015A
        gbc.setState(0xb139, 0xdf91, 0xd610, 0x30ec, 0xcbeb, 0x8e8b, 0x1, 0x1);
        gbc.writeMem(0xb139, { 0xd6, 0x96 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdf91, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb139));
        EXPECT(0x96, gbc.readMem(0xb13a));
        // D6 015B
        gbc.setState(0xb544, 0x27f6, 0x520, 0x370c, 0x866b, 0xf511, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0xd6, 0x28 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0xb546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb544));
        EXPECT(0x28, gbc.readMem(0xb545));
        // D6 015C
        gbc.setState(0x2580, 0x84cf, 0xcc70, 0xf0f9, 0x612d, 0xd456, 0x1, 0x1);
        gbc.writeMem(0x2580, { 0xd6, 0x83 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 015D
        gbc.setState(0x3864, 0x2a66, 0x2ed0, 0x14a4, 0x8105, 0x1c02, 0x0, 0x0);
        gbc.writeMem(0x3864, { 0xd6, 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2a66, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 015E
        gbc.setState(0x7e4f, 0x212b, 0xf970, 0x6dc6, 0x1521, 0xcf38, 0x1, 0x0);
        gbc.writeMem(0x7e4f, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x212b, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 015F
        gbc.setState(0x8638, 0xbc16, 0x1210, 0xf931, 0x11f2, 0x2606, 0x1, 0x0);
        gbc.writeMem(0x8638, { 0xd6, 0x87 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8638));
        EXPECT(0x87, gbc.readMem(0x8639));
        // D6 0160
        gbc.setState(0x74fe, 0xc652, 0xa240, 0x3542, 0x59e0, 0xaffd, 0x0, 0x1);
        gbc.writeMem(0x74fe, { 0xd6, 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0161
        gbc.setState(0x4953, 0xea4c, 0x10, 0x9d6, 0x341b, 0xd4bb, 0x1, 0x0);
        gbc.writeMem(0x4953, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0163
        gbc.setState(0xe519, 0x6bcc, 0x2840, 0xf4bc, 0x821e, 0x8369, 0x0, 0x0);
        gbc.writeMem(0xe519, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6bcc, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe519));
        EXPECT(0x10, gbc.readMem(0xe51a));
        // D6 0164
        gbc.setState(0x486d, 0xf544, 0x1b30, 0xed5, 0x882d, 0xf91d, 0x1, 0x1);
        gbc.writeMem(0x486d, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0x486f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0165
        gbc.setState(0x7059, 0xb688, 0xa40, 0x26a2, 0x1d63, 0xc07d, 0x1, 0x0);
        gbc.writeMem(0x7059, { 0xd6, 0x1d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0166
        gbc.setState(0xb41, 0x1d4, 0x3a40, 0x44de, 0x606b, 0xfa2b, 0x1, 0x1);
        gbc.writeMem(0xb41, { 0xd6, 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d4, gbc.sp());
        EXPECT(0xb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0167
        gbc.setState(0x5b7f, 0xcda1, 0x5a0, 0x4552, 0xd20e, 0x11ce, 0x1, 0x0);
        gbc.writeMem(0x5b7f, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcda1, gbc.sp());
        EXPECT(0x5b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0168
        gbc.setState(0x1cc7, 0xfb56, 0x4930, 0x7cdc, 0x4630, 0xde6c, 0x1, 0x1);
        gbc.writeMem(0x1cc7, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb56, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0169
        gbc.setState(0x73b5, 0x4343, 0x85a0, 0xc893, 0x3455, 0xc56a, 0x1, 0x0);
        gbc.writeMem(0x73b5, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 016A
        gbc.setState(0xe533, 0xc35e, 0xa890, 0x6f0, 0x3c22, 0x9e25, 0x1, 0x1);
        gbc.writeMem(0xe533, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc35e, gbc.sp());
        EXPECT(0xe535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe533));
        EXPECT(0xf3, gbc.readMem(0xe534));
        // D6 016B
        gbc.setState(0xb672, 0x88f4, 0xc930, 0x7f26, 0xf065, 0x407e, 0x1, 0x1);
        gbc.writeMem(0xb672, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb672));
        EXPECT(0xf3, gbc.readMem(0xb673));
        // D6 016C
        gbc.setState(0xb838, 0xa47f, 0x7870, 0x7b34, 0x1ab5, 0x1c4d, 0x1, 0x0);
        gbc.writeMem(0xb838, { 0xd6, 0x83 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa47f, gbc.sp());
        EXPECT(0xb83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb838));
        EXPECT(0x83, gbc.readMem(0xb839));
        // D6 016D
        gbc.setState(0x59b2, 0xc2d5, 0x2350, 0x8ef5, 0xf6e4, 0xe47, 0x0, 0x0);
        gbc.writeMem(0x59b2, { 0xd6, 0x31 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0x59b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 016F
        gbc.setState(0x4c75, 0x419d, 0xd5a0, 0x8477, 0xfb03, 0x7bc7, 0x0, 0x0);
        gbc.writeMem(0x4c75, { 0xd6, 0xa9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0170
        gbc.setState(0x568e, 0x1dd7, 0xb90, 0xc7a1, 0xb717, 0xfe8e, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xd6, 0xec });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1dd7, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0171
        gbc.setState(0x3820, 0xff07, 0x3050, 0xe446, 0xc5ee, 0xfab5, 0x1, 0x0);
        gbc.writeMem(0x3820, { 0xd6, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xff07, gbc.sp());
        EXPECT(0x3822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0172
        gbc.setState(0x4b7b, 0x2d38, 0x5840, 0xf0d3, 0x74bb, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0x4b7b, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x4b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0173
        gbc.setState(0x2e7c, 0x99c7, 0xaff0, 0xed6b, 0x5180, 0x8731, 0x0, 0x0);
        gbc.writeMem(0x2e7c, { 0xd6, 0x15 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0174
        gbc.setState(0x276a, 0x8991, 0xa10, 0x242c, 0x8ce3, 0x7cba, 0x0, 0x0);
        gbc.writeMem(0x276a, { 0xd6, 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0x276c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0176
        gbc.setState(0x9343, 0xea2e, 0xc9c0, 0xc721, 0xc551, 0xf7fc, 0x1, 0x0);
        gbc.writeMem(0x9343, { 0xd6, 0x9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea2e, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9343));
        EXPECT(0x9, gbc.readMem(0x9344));
        // D6 0177
        gbc.setState(0xdff0, 0xeb78, 0xa1e0, 0x3639, 0xd51b, 0x420c, 0x0, 0x1);
        gbc.writeMem(0xdff0, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeb78, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdff0));
        EXPECT(0xd9, gbc.readMem(0xdff1));
        // D6 0178
        gbc.setState(0x40b1, 0x12bc, 0x51c0, 0x1b57, 0x2550, 0x6df3, 0x1, 0x0);
        gbc.writeMem(0x40b1, { 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x12bc, gbc.sp());
        EXPECT(0x40b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0179
        gbc.setState(0x560d, 0x302a, 0x4030, 0x2a75, 0xbc6c, 0x1e1a, 0x1, 0x1);
        gbc.writeMem(0x560d, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x302a, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 017A
        gbc.setState(0xaec3, 0x424c, 0x24f0, 0x87ab, 0x328a, 0x23fc, 0x0, 0x1);
        gbc.writeMem(0xaec3, { 0xd6, 0xe5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaec3));
        EXPECT(0xe5, gbc.readMem(0xaec4));
        // D6 017B
        gbc.setState(0x95de, 0x93ff, 0xd0b0, 0x7250, 0xab36, 0x71ce, 0x1, 0x0);
        gbc.writeMem(0x95de, { 0xd6, 0x30 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0x95e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x95de));
        EXPECT(0x30, gbc.readMem(0x95df));
        // D6 017C
        gbc.setState(0x573e, 0x263c, 0x6e20, 0x1f5, 0x5017, 0xd314, 0x1, 0x1);
        gbc.writeMem(0x573e, { 0xd6, 0xab });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0x5740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 017D
        gbc.setState(0x8c44, 0x6e7d, 0xd4b0, 0x2f7c, 0xae83, 0xfce8, 0x1, 0x0);
        gbc.writeMem(0x8c44, { 0xd6, 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x8c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8c44));
        EXPECT(0x72, gbc.readMem(0x8c45));
        // D6 017E
        gbc.setState(0xef4c, 0xcbd6, 0xa3f0, 0x473d, 0x7480, 0x9dee, 0x0, 0x0);
        gbc.writeMem(0xef4c, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xef4c));
        EXPECT(0xce, gbc.readMem(0xef4d));
        // D6 017F
        gbc.setState(0x41ff, 0x8b90, 0xca50, 0x237b, 0x7fde, 0x1f7e, 0x0, 0x0);
        gbc.writeMem(0x41ff, { 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8b90, gbc.sp());
        EXPECT(0x4201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0180
        gbc.setState(0x993e, 0x3565, 0x1770, 0xac0e, 0xb541, 0x37c4, 0x1, 0x1);
        gbc.writeMem(0x993e, { 0xd6, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3565, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x993e));
        EXPECT(0xba, gbc.readMem(0x993f));
        // D6 0181
        gbc.setState(0x6db1, 0xbcb9, 0xd460, 0xf9e, 0x2c01, 0x5e6, 0x0, 0x1);
        gbc.writeMem(0x6db1, { 0xd6, 0x2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0182
        gbc.setState(0x754a, 0x9d5b, 0xabe0, 0x9207, 0xac52, 0xb377, 0x1, 0x1);
        gbc.writeMem(0x754a, { 0xd6, 0x98 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9d5b, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0183
        gbc.setState(0x8d63, 0xbe46, 0x4460, 0x97c4, 0x9fef, 0x9498, 0x0, 0x1);
        gbc.writeMem(0x8d63, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8d63));
        EXPECT(0x3e, gbc.readMem(0x8d64));
        // D6 0184
        gbc.setState(0x1d19, 0x5447, 0x7960, 0x1dea, 0x1ad3, 0xbfad, 0x1, 0x0);
        gbc.writeMem(0x1d19, { 0xd6, 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5447, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0185
        gbc.setState(0xcfaa, 0xa170, 0x6a90, 0xbc24, 0x6420, 0x8f37, 0x0, 0x1);
        gbc.writeMem(0xcfaa, { 0xd6, 0x23 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa170, gbc.sp());
        EXPECT(0xcfac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcfaa));
        EXPECT(0x23, gbc.readMem(0xcfab));
        // D6 0186
        gbc.setState(0x5cc7, 0x2c07, 0x2760, 0x5a69, 0x5b0d, 0xd3a9, 0x0, 0x0);
        gbc.writeMem(0x5cc7, { 0xd6, 0x2b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x5cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0187
        gbc.setState(0x15ec, 0xd22c, 0x3e60, 0x3e97, 0x1fdc, 0xbd93, 0x1, 0x1);
        gbc.writeMem(0x15ec, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd22c, gbc.sp());
        EXPECT(0x15ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0188
        gbc.setState(0x1ea3, 0xd36e, 0x6f90, 0x6d6c, 0xddec, 0x5a6c, 0x1, 0x0);
        gbc.writeMem(0x1ea3, { 0xd6, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd36e, gbc.sp());
        EXPECT(0x1ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0189
        gbc.setState(0xefbf, 0x6d24, 0xc490, 0x10fe, 0x3b1a, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0xefbf, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6d24, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xefbf));
        EXPECT(0xfb, gbc.readMem(0xefc0));
        // D6 018A
        gbc.setState(0x284f, 0x3031, 0xe970, 0x9c5b, 0x98cd, 0xc20b, 0x0, 0x0);
        gbc.writeMem(0x284f, { 0xd6, 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0x2851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 018B
        gbc.setState(0x6857, 0x99c9, 0xba60, 0xa0a6, 0x924, 0xfddc, 0x0, 0x0);
        gbc.writeMem(0x6857, { 0xd6, 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x99c9, gbc.sp());
        EXPECT(0x6859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 018C
        gbc.setState(0xe8bf, 0x1be4, 0x92b0, 0x15fa, 0xc0f1, 0xf833, 0x1, 0x1);
        gbc.writeMem(0xe8bf, { 0xd6, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1be4, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe8bf));
        EXPECT(0xea, gbc.readMem(0xe8c0));
        // D6 018F
        gbc.setState(0x61cb, 0xc27e, 0xdd90, 0x1999, 0x9451, 0x1140, 0x1, 0x1);
        gbc.writeMem(0x61cb, { 0xd6, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc27e, gbc.sp());
        EXPECT(0x61cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0190
        gbc.setState(0x1ce7, 0x3132, 0xbfb0, 0x73e0, 0x7d8f, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0x1ce7, { 0xd6, 0x68 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0x1ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0191
        gbc.setState(0xb2eb, 0x16d3, 0x35a0, 0x503, 0xd63e, 0xb7cc, 0x0, 0x1);
        gbc.writeMem(0xb2eb, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x16d3, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb2eb));
        EXPECT(0xe2, gbc.readMem(0xb2ec));
        // D6 0192
        gbc.setState(0xc302, 0x1bc7, 0xfaf0, 0x1fa6, 0x3aa5, 0x4207, 0x1, 0x0);
        gbc.writeMem(0xc302, { 0xd6, 0x31 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0xc304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc302));
        EXPECT(0x31, gbc.readMem(0xc303));
        // D6 0193
        gbc.setState(0x2637, 0x3322, 0x6350, 0x4ea5, 0x6288, 0x9c53, 0x0, 0x0);
        gbc.writeMem(0x2637, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3322, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0194
        gbc.setState(0x4dc5, 0xef9a, 0xb530, 0xefd6, 0x20c0, 0x2544, 0x0, 0x1);
        gbc.writeMem(0x4dc5, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xef9a, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0195
        gbc.setState(0x9fba, 0xf595, 0xf2f0, 0xe1da, 0xf5a0, 0x1cb6, 0x1, 0x0);
        gbc.writeMem(0x9fba, { 0xd6, 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf595, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9fba));
        EXPECT(0x9c, gbc.readMem(0x9fbb));
        // D6 0196
        gbc.setState(0xeef1, 0xb6ce, 0x6cf0, 0x95b2, 0xa946, 0x8524, 0x0, 0x0);
        gbc.writeMem(0xeef1, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeef1));
        EXPECT(0x93, gbc.readMem(0xeef2));
        // D6 0197
        gbc.setState(0x895a, 0xb202, 0x2d50, 0xaf25, 0x216c, 0xce65, 0x1, 0x1);
        gbc.writeMem(0x895a, { 0xd6, 0x2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0x895c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x895a));
        EXPECT(0x2, gbc.readMem(0x895b));
        // D6 0198
        gbc.setState(0x102d, 0xf6bc, 0x69c0, 0x752d, 0xacb3, 0xb4c3, 0x0, 0x1);
        gbc.writeMem(0x102d, { 0xd6, 0xbb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf6bc, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0199
        gbc.setState(0x9653, 0x8182, 0xa4e0, 0x4572, 0x444a, 0xaa94, 0x0, 0x0);
        gbc.writeMem(0x9653, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9653));
        EXPECT(0x10, gbc.readMem(0x9654));
        // D6 019A
        gbc.setState(0xdd2b, 0xf992, 0x6440, 0x9180, 0x84, 0xd412, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xd6, 0xda });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdd2b));
        EXPECT(0xda, gbc.readMem(0xdd2c));
        // D6 019C
        gbc.setState(0x726a, 0x5ab3, 0x1880, 0x788, 0x9028, 0xb7fc, 0x0, 0x0);
        gbc.writeMem(0x726a, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0x726c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 019D
        gbc.setState(0x66ec, 0x447d, 0x2d80, 0xaf6c, 0xfd2f, 0xde3f, 0x1, 0x0);
        gbc.writeMem(0x66ec, { 0xd6, 0xb1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 019E
        gbc.setState(0x8781, 0x7d9b, 0x3410, 0xe14e, 0x56f0, 0x86e, 0x1, 0x0);
        gbc.writeMem(0x8781, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7d9b, gbc.sp());
        EXPECT(0x8783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8781));
        EXPECT(0xa4, gbc.readMem(0x8782));
        // D6 019F
        gbc.setState(0xd6f3, 0x27e3, 0x3c10, 0x1ab3, 0x5fe9, 0x2140, 0x1, 0x1);
        gbc.writeMem(0xd6f3, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd6f3));
        EXPECT(0xe2, gbc.readMem(0xd6f4));
        // D6 01A0
        gbc.setState(0x5725, 0xc19b, 0xdc60, 0xbe45, 0x3332, 0x14d1, 0x1, 0x0);
        gbc.writeMem(0x5725, { 0xd6, 0x54 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x5727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01A1
        gbc.setState(0x87d7, 0x20c2, 0x8f30, 0x9f5e, 0x3eff, 0x36d8, 0x0, 0x1);
        gbc.writeMem(0x87d7, { 0xd6, 0x3a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x20c2, gbc.sp());
        EXPECT(0x87d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x87d7));
        EXPECT(0x3a, gbc.readMem(0x87d8));
        // D6 01A2
        gbc.setState(0xbb80, 0x2045, 0x7cf0, 0xc0aa, 0xf0be, 0x811b, 0x0, 0x1);
        gbc.writeMem(0xbb80, { 0xd6, 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2045, gbc.sp());
        EXPECT(0xbb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbb80));
        EXPECT(0x3c, gbc.readMem(0xbb81));
        // D6 01A3
        gbc.setState(0x671a, 0xda8b, 0x93c0, 0x2066, 0x3b63, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0x671a, { 0xd6, 0x77 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda8b, gbc.sp());
        EXPECT(0x671c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01A4
        gbc.setState(0x8775, 0x9cb8, 0x8de0, 0xde66, 0xa0bc, 0xc353, 0x1, 0x0);
        gbc.writeMem(0x8775, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8775));
        EXPECT(0x99, gbc.readMem(0x8776));
        // D6 01A5
        gbc.setState(0xd8c2, 0xa65f, 0x2980, 0x1dc4, 0x2747, 0xfb25, 0x1, 0x1);
        gbc.writeMem(0xd8c2, { 0xd6, 0xf8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa65f, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd8c2));
        EXPECT(0xf8, gbc.readMem(0xd8c3));
        // D6 01A6
        gbc.setState(0x44b, 0x78d1, 0x5570, 0x8469, 0x7332, 0xa4da, 0x1, 0x0);
        gbc.writeMem(0x44b, { 0xd6, 0xf0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01A7
        gbc.setState(0x157, 0x6b1d, 0x3000, 0x34f2, 0x7acd, 0x6df0, 0x0, 0x0);
        gbc.writeMem(0x157, { 0xd6, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0x159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01A8
        gbc.setState(0xbb2b, 0xc8ef, 0x1d20, 0x9d45, 0xf9aa, 0x3243, 0x1, 0x1);
        gbc.writeMem(0xbb2b, { 0xd6, 0xcd });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc8ef, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbb2b));
        EXPECT(0xcd, gbc.readMem(0xbb2c));
        // D6 01A9
        gbc.setState(0xcb2c, 0x3b69, 0xd310, 0x899, 0xaa0a, 0x32bb, 0x0, 0x1);
        gbc.writeMem(0xcb2c, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcb2c));
        EXPECT(0x1b, gbc.readMem(0xcb2d));
        // D6 01AA
        gbc.setState(0xc089, 0x648, 0xda00, 0x660a, 0x3b54, 0xb9f4, 0x1, 0x1);
        gbc.writeMem(0xc089, { 0xd6, 0x11 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x648, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc089));
        EXPECT(0x11, gbc.readMem(0xc08a));
        // D6 01AB
        gbc.setState(0x4631, 0xb1c2, 0x3a10, 0x8ef8, 0x792e, 0xa958, 0x0, 0x0);
        gbc.writeMem(0x4631, { 0xd6, 0x70 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01AC
        gbc.setState(0x469c, 0xa5ea, 0xd270, 0xc84d, 0x52cb, 0x389e, 0x1, 0x0);
        gbc.writeMem(0x469c, { 0xd6, 0xc6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa5ea, gbc.sp());
        EXPECT(0x469e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01AD
        gbc.setState(0xa2b8, 0x6ce0, 0x56c0, 0x3bcc, 0x5a5b, 0x612e, 0x1, 0x0);
        gbc.writeMem(0xa2b8, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0xa2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa2b8));
        EXPECT(0xb5, gbc.readMem(0xa2b9));
        // D6 01AE
        gbc.setState(0xc596, 0x9103, 0xa880, 0x66ed, 0xa9d4, 0x553c, 0x0, 0x1);
        gbc.writeMem(0xc596, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9103, gbc.sp());
        EXPECT(0xc598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc596));
        EXPECT(0x47, gbc.readMem(0xc597));
        // D6 01AF
        gbc.setState(0xd1fd, 0x918b, 0x8790, 0xcdc7, 0xb2f4, 0x515a, 0x0, 0x1);
        gbc.writeMem(0xd1fd, { 0xd6, 0xf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0xd1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd1fd));
        EXPECT(0xf, gbc.readMem(0xd1fe));
        // D6 01B0
        gbc.setState(0x1d15, 0xed5d, 0x41e0, 0x1fa4, 0x93ed, 0xcaa1, 0x0, 0x0);
        gbc.writeMem(0x1d15, { 0xd6, 0xf1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01B1
        gbc.setState(0x4b1, 0xbba8, 0x2e70, 0xe1f0, 0x844e, 0x3ffc, 0x0, 0x0);
        gbc.writeMem(0x4b1, { 0xd6, 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01B2
        gbc.setState(0x6e13, 0x6a27, 0x2100, 0x7f33, 0xe272, 0xe280, 0x0, 0x0);
        gbc.writeMem(0x6e13, { 0xd6, 0xd6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6a27, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01B3
        gbc.setState(0xe0ac, 0xc842, 0x3690, 0xdc0b, 0x1a3c, 0xd5cd, 0x0, 0x1);
        gbc.writeMem(0xe0ac, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc842, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe0ac));
        EXPECT(0x4c, gbc.readMem(0xe0ad));
        // D6 01B4
        gbc.setState(0x85e8, 0xaf7a, 0x6c70, 0x6103, 0x8c21, 0xcebc, 0x1, 0x0);
        gbc.writeMem(0x85e8, { 0xd6, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaf7a, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x85e8));
        EXPECT(0x6e, gbc.readMem(0x85e9));
        // D6 01B5
        gbc.setState(0x2966, 0x1d74, 0xc480, 0x71b, 0xe68a, 0x7c06, 0x0, 0x1);
        gbc.writeMem(0x2966, { 0xd6, 0xd3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1d74, gbc.sp());
        EXPECT(0x2968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01B6
        gbc.setState(0x98c4, 0xe0f6, 0x2eb0, 0xe90a, 0x42b1, 0xfddc, 0x1, 0x0);
        gbc.writeMem(0x98c4, { 0xd6, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0x98c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x98c4));
        EXPECT(0x4b, gbc.readMem(0x98c5));
        // D6 01B7
        gbc.setState(0xe4f3, 0xfbac, 0x3a20, 0xdca4, 0x26d4, 0x70a6, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe4f3));
        EXPECT(0x1f, gbc.readMem(0xe4f4));
        // D6 01B8
        gbc.setState(0xe57a, 0x93f7, 0xf300, 0xb3bc, 0xfbea, 0x148f, 0x1, 0x1);
        gbc.writeMem(0xe57a, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe57a));
        EXPECT(0x99, gbc.readMem(0xe57b));
        // D6 01B9
        gbc.setState(0x315b, 0x2a8b, 0x83b0, 0xf55c, 0xee77, 0xd4ae, 0x1, 0x0);
        gbc.writeMem(0x315b, { 0xd6, 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0x315d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01BA
        gbc.setState(0xe7b3, 0xb20, 0xd690, 0xc012, 0xe76f, 0x8e39, 0x1, 0x0);
        gbc.writeMem(0xe7b3, { 0xd6, 0x26 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb20, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe7b3));
        EXPECT(0x26, gbc.readMem(0xe7b4));
        // D6 01BB
        gbc.setState(0xbd14, 0xb559, 0xc540, 0xfc01, 0xcde, 0xfe3f, 0x1, 0x0);
        gbc.writeMem(0xbd14, { 0xd6, 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0xbd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbd14));
        EXPECT(0x37, gbc.readMem(0xbd15));
        // D6 01BC
        gbc.setState(0x46e1, 0x5886, 0x3a80, 0x4991, 0x6b3e, 0xabe9, 0x1, 0x1);
        gbc.writeMem(0x46e1, { 0xd6, 0xfa });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0x46e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01BD
        gbc.setState(0x12f, 0x7add, 0x1970, 0x1742, 0xead2, 0xa725, 0x1, 0x1);
        gbc.writeMem(0x12f, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7add, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01BE
        gbc.setState(0xa799, 0x9434, 0x76a0, 0x8e0, 0xc9b4, 0x11ad, 0x1, 0x0);
        gbc.writeMem(0xa799, { 0xd6, 0xab });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9434, gbc.sp());
        EXPECT(0xa79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa799));
        EXPECT(0xab, gbc.readMem(0xa79a));
        // D6 01BF
        gbc.setState(0x1304, 0x9878, 0xfe10, 0x24f8, 0x8e76, 0x78d2, 0x0, 0x1);
        gbc.writeMem(0x1304, { 0xd6, 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0x1306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01C0
        gbc.setState(0x631a, 0xed4, 0x9d70, 0xcafd, 0xb486, 0x78c, 0x0, 0x1);
        gbc.writeMem(0x631a, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xed4, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01C1
        gbc.setState(0x49f3, 0x9c40, 0xfce0, 0xa4f9, 0xa6bd, 0xe902, 0x1, 0x0);
        gbc.writeMem(0x49f3, { 0xd6, 0x1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9c40, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01C3
        gbc.setState(0x7b6e, 0x8443, 0xd40, 0xa5d9, 0x9d53, 0xf081, 0x1, 0x0);
        gbc.writeMem(0x7b6e, { 0xd6, 0xee });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8443, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01C4
        gbc.setState(0xa343, 0x8d81, 0xba50, 0x9ded, 0xeeeb, 0x18b3, 0x0, 0x0);
        gbc.writeMem(0xa343, { 0xd6, 0x25 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8d81, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa343));
        EXPECT(0x25, gbc.readMem(0xa344));
        // D6 01C5
        gbc.setState(0x3688, 0xeb6e, 0x5630, 0xdb0b, 0xde1e, 0x6813, 0x0, 0x0);
        gbc.writeMem(0x3688, { 0xd6, 0x80 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeb6e, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01C6
        gbc.setState(0x5a73, 0xa344, 0x2160, 0xb685, 0x65f, 0x445b, 0x1, 0x0);
        gbc.writeMem(0x5a73, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa344, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01C9
        gbc.setState(0xc0fd, 0x2486, 0xa650, 0xc7f8, 0x5b86, 0x4784, 0x0, 0x1);
        gbc.writeMem(0xc0fd, { 0xd6, 0xbc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2486, gbc.sp());
        EXPECT(0xc0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc0fd));
        EXPECT(0xbc, gbc.readMem(0xc0fe));
        // D6 01CA
        gbc.setState(0x5379, 0x36e0, 0x9dc0, 0xbb4f, 0x4e83, 0xa089, 0x0, 0x1);
        gbc.writeMem(0x5379, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x36e0, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01CB
        gbc.setState(0x5e1f, 0xb9d9, 0x7b0, 0x7b50, 0xc7c, 0x1d8f, 0x1, 0x0);
        gbc.writeMem(0x5e1f, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01CC
        gbc.setState(0x3235, 0x28fb, 0x34a0, 0xc359, 0x6a1f, 0xb16, 0x0, 0x0);
        gbc.writeMem(0x3235, { 0xd6, 0xdb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x28fb, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01CD
        gbc.setState(0xd8c7, 0x6491, 0x40, 0x56cf, 0xaf52, 0x355, 0x1, 0x0);
        gbc.writeMem(0xd8c7, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd8c7));
        EXPECT(0xd5, gbc.readMem(0xd8c8));
        // D6 01CE
        gbc.setState(0x2374, 0x1a9e, 0xf9e0, 0xbb97, 0xc974, 0xf229, 0x1, 0x1);
        gbc.writeMem(0x2374, { 0xd6, 0x5c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1a9e, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01CF
        gbc.setState(0xd88c, 0x5257, 0x6b30, 0xfdba, 0xa00b, 0xc3c5, 0x1, 0x0);
        gbc.writeMem(0xd88c, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5257, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd88c));
        EXPECT(0x10, gbc.readMem(0xd88d));
        // D6 01D0
        gbc.setState(0xd7f7, 0xd619, 0x82f0, 0x3775, 0x3677, 0xd9ad, 0x1, 0x1);
        gbc.writeMem(0xd7f7, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd619, gbc.sp());
        EXPECT(0xd7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd7f7));
        EXPECT(0x42, gbc.readMem(0xd7f8));
        // D6 01D1
        gbc.setState(0xe315, 0x655b, 0x1a30, 0xec1e, 0x8efd, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0xe315, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x655b, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe315));
        EXPECT(0x2f, gbc.readMem(0xe316));
        // D6 01D2
        gbc.setState(0xaaa7, 0x29e2, 0x5760, 0x1ceb, 0xc0df, 0x1d96, 0x0, 0x1);
        gbc.writeMem(0xaaa7, { 0xd6, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x29e2, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaaa7));
        EXPECT(0xe9, gbc.readMem(0xaaa8));
        // D6 01D4
        gbc.setState(0x2f03, 0xcbf9, 0x1e00, 0x6a68, 0x9fa7, 0x62de, 0x0, 0x0);
        gbc.writeMem(0x2f03, { 0xd6, 0x46 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcbf9, gbc.sp());
        EXPECT(0x2f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01D5
        gbc.setState(0xb655, 0xd4a9, 0xc490, 0x981b, 0x416a, 0x46d4, 0x0, 0x1);
        gbc.writeMem(0xb655, { 0xd6, 0x7c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd4a9, gbc.sp());
        EXPECT(0xb657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb655));
        EXPECT(0x7c, gbc.readMem(0xb656));
        // D6 01D6
        gbc.setState(0x6017, 0x9323, 0x1d50, 0x2ef5, 0xeedc, 0x4ed7, 0x0, 0x1);
        gbc.writeMem(0x6017, { 0xd6, 0x75 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9323, gbc.sp());
        EXPECT(0x6019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01D7
        gbc.setState(0xba41, 0xb309, 0x4f00, 0x4aa6, 0x918, 0x3bef, 0x0, 0x0);
        gbc.writeMem(0xba41, { 0xd6, 0x28 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb309, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xba41));
        EXPECT(0x28, gbc.readMem(0xba42));
        // D6 01D8
        gbc.setState(0x411f, 0xc0e, 0x8d30, 0x6871, 0x4519, 0xda00, 0x0, 0x0);
        gbc.writeMem(0x411f, { 0xd6, 0xb3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0x4121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01D9
        gbc.setState(0x95fe, 0xaf96, 0x39f0, 0xfb50, 0xf94f, 0xcdb6, 0x1, 0x0);
        gbc.writeMem(0x95fe, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x9600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x95fe));
        EXPECT(0x91, gbc.readMem(0x95ff));
        // D6 01DA
        gbc.setState(0x3636, 0xd8d9, 0x2760, 0x5a28, 0xc499, 0xa22, 0x0, 0x0);
        gbc.writeMem(0x3636, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01DB
        gbc.setState(0x9c13, 0x22b3, 0x1cf0, 0xe022, 0x9bd4, 0xa14a, 0x1, 0x1);
        gbc.writeMem(0x9c13, { 0xd6, 0x5b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x22b3, gbc.sp());
        EXPECT(0x9c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9c13));
        EXPECT(0x5b, gbc.readMem(0x9c14));
        // D6 01DC
        gbc.setState(0x370a, 0x606a, 0xbad0, 0x7eb, 0xabd1, 0x7e94, 0x0, 0x1);
        gbc.writeMem(0x370a, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x606a, gbc.sp());
        EXPECT(0x370c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01DD
        gbc.setState(0x4062, 0xedcb, 0xd30, 0xd4f2, 0xdc9f, 0x55f7, 0x0, 0x1);
        gbc.writeMem(0x4062, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xedcb, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01DE
        gbc.setState(0x201a, 0xd8dd, 0xfd50, 0x5f3a, 0xb161, 0xbc27, 0x1, 0x1);
        gbc.writeMem(0x201a, { 0xd6, 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd8dd, gbc.sp());
        EXPECT(0x201c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01DF
        gbc.setState(0xba93, 0xac62, 0xc210, 0x34d2, 0xd294, 0x81d8, 0x0, 0x1);
        gbc.writeMem(0xba93, { 0xd6, 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xba93));
        EXPECT(0x3a, gbc.readMem(0xba94));
        // D6 01E0
        gbc.setState(0xdf5, 0xde0f, 0xeab0, 0x4db4, 0x104d, 0xf2f, 0x0, 0x1);
        gbc.writeMem(0xdf5, { 0xd6, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xde0f, gbc.sp());
        EXPECT(0xdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01E1
        gbc.setState(0xa8b, 0xcdbb, 0xe100, 0x1a10, 0xb6ad, 0x48e2, 0x0, 0x0);
        gbc.writeMem(0xa8b, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0xa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01E2
        gbc.setState(0x3a60, 0xf2e3, 0xf6f0, 0x749e, 0xe1b4, 0xbf5e, 0x1, 0x0);
        gbc.writeMem(0x3a60, { 0xd6, 0x20 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf2e3, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01E3
        gbc.setState(0x3512, 0x87b, 0x5b00, 0x4469, 0x5adb, 0xddb1, 0x0, 0x1);
        gbc.writeMem(0x3512, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x87b, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01E4
        gbc.setState(0xbe5e, 0xa9f0, 0x2710, 0x979f, 0xad57, 0x4bb1, 0x1, 0x0);
        gbc.writeMem(0xbe5e, { 0xd6, 0xe1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa9f0, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbe5e));
        EXPECT(0xe1, gbc.readMem(0xbe5f));
        // D6 01E6
        gbc.setState(0xbb93, 0x17d9, 0xb960, 0xcff0, 0xb1e7, 0x3dd8, 0x1, 0x1);
        gbc.writeMem(0xbb93, { 0xd6, 0x83 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17d9, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbb93));
        EXPECT(0x83, gbc.readMem(0xbb94));
        // D6 01E7
        gbc.setState(0xa27f, 0xc053, 0x61b0, 0xc461, 0x1a2e, 0xb554, 0x0, 0x1);
        gbc.writeMem(0xa27f, { 0xd6, 0xca });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0xa281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa27f));
        EXPECT(0xca, gbc.readMem(0xa280));
        // D6 01E8
        gbc.setState(0xd3a5, 0x33f8, 0x240, 0x2e4e, 0x359f, 0xe71a, 0x0, 0x0);
        gbc.writeMem(0xd3a5, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x33f8, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd3a5));
        EXPECT(0xf7, gbc.readMem(0xd3a6));
        // D6 01E9
        gbc.setState(0x5f49, 0xe9c6, 0xbae0, 0xfe55, 0x7668, 0x1db9, 0x1, 0x0);
        gbc.writeMem(0x5f49, { 0xd6, 0x7c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe9c6, gbc.sp());
        EXPECT(0x5f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01EA
        gbc.setState(0xac26, 0x4629, 0x18b0, 0xdb6b, 0xaf58, 0xca3b, 0x0, 0x0);
        gbc.writeMem(0xac26, { 0xd6, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4629, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac26));
        EXPECT(0x97, gbc.readMem(0xac27));
        // D6 01EB
        gbc.setState(0xc92e, 0x3fd7, 0x2060, 0x9cec, 0xc0c, 0x718a, 0x0, 0x1);
        gbc.writeMem(0xc92e, { 0xd6, 0x76 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3fd7, gbc.sp());
        EXPECT(0xc930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc92e));
        EXPECT(0x76, gbc.readMem(0xc92f));
        // D6 01ED
        gbc.setState(0x3f48, 0xdcbe, 0xfb10, 0xd34d, 0xdc31, 0x8eb2, 0x1, 0x1);
        gbc.writeMem(0x3f48, { 0xd6, 0x40 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdcbe, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01EE
        gbc.setState(0x8c90, 0x95df, 0xb640, 0xfe5b, 0xd81f, 0x4af3, 0x0, 0x1);
        gbc.writeMem(0x8c90, { 0xd6, 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x95df, gbc.sp());
        EXPECT(0x8c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8c90));
        EXPECT(0x1a, gbc.readMem(0x8c91));
        // D6 01EF
        gbc.setState(0xdb4f, 0xcea0, 0xa310, 0x149f, 0xd057, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0xdb4f, { 0xd6, 0xbe });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcea0, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdb4f));
        EXPECT(0xbe, gbc.readMem(0xdb50));
        // D6 01F0
        gbc.setState(0xaf50, 0x481d, 0x3b80, 0x1bdf, 0x5510, 0xa018, 0x1, 0x0);
        gbc.writeMem(0xaf50, { 0xd6, 0xff });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0xaf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaf50));
        EXPECT(0xff, gbc.readMem(0xaf51));
        // D6 01F1
        gbc.setState(0x5527, 0xb25, 0xace0, 0xf11a, 0xb6ab, 0xc93e, 0x0, 0x0);
        gbc.writeMem(0x5527, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb25, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01F2
        gbc.setState(0x4d4c, 0xd7fc, 0x47b0, 0x5c78, 0xc5b, 0x77ad, 0x1, 0x0);
        gbc.writeMem(0x4d4c, { 0xd6, 0x43 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01F3
        gbc.setState(0xe384, 0x9786, 0x8bc0, 0x3e61, 0xb686, 0xbf94, 0x1, 0x1);
        gbc.writeMem(0xe384, { 0xd6, 0xa6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9786, gbc.sp());
        EXPECT(0xe386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe384));
        EXPECT(0xa6, gbc.readMem(0xe385));
        // D6 01F4
        gbc.setState(0xc0cd, 0xe8f4, 0x9880, 0xe57d, 0x2e6a, 0x36bf, 0x0, 0x0);
        gbc.writeMem(0xc0cd, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe8f4, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc0cd));
        EXPECT(0x52, gbc.readMem(0xc0ce));
        // D6 01F5
        gbc.setState(0xe11c, 0x2457, 0xd1e0, 0x1a4c, 0x4989, 0x3eb2, 0x0, 0x1);
        gbc.writeMem(0xe11c, { 0xd6, 0xea });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2457, gbc.sp());
        EXPECT(0xe11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe11c));
        EXPECT(0xea, gbc.readMem(0xe11d));
        // D6 01F6
        gbc.setState(0x9ac, 0xc8b8, 0xdce0, 0xa157, 0x75a9, 0x9849, 0x1, 0x0);
        gbc.writeMem(0x9ac, { 0xd6, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc8b8, gbc.sp());
        EXPECT(0x9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01F8
        gbc.setState(0x2e9d, 0xfb1b, 0x3070, 0x638e, 0x2116, 0x1f06, 0x0, 0x0);
        gbc.writeMem(0x2e9d, { 0xd6, 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0x2e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01F9
        gbc.setState(0xd85b, 0xcc0b, 0xf540, 0x15bc, 0x17a8, 0x2c97, 0x0, 0x0);
        gbc.writeMem(0xd85b, { 0xd6, 0x65 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcc0b, gbc.sp());
        EXPECT(0xd85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd85b));
        EXPECT(0x65, gbc.readMem(0xd85c));
        // D6 01FA
        gbc.setState(0x522, 0x9529, 0xc830, 0x54d4, 0x410b, 0xc938, 0x0, 0x1);
        gbc.writeMem(0x522, { 0xd6, 0xea });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9529, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01FB
        gbc.setState(0x9261, 0x9db3, 0x94e0, 0x659b, 0xfa80, 0x315d, 0x1, 0x1);
        gbc.writeMem(0x9261, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9db3, gbc.sp());
        EXPECT(0x9263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9261));
        EXPECT(0x59, gbc.readMem(0x9262));
        // D6 01FC
        gbc.setState(0x540a, 0x77bd, 0xe00, 0x3e4e, 0x597f, 0x786e, 0x1, 0x1);
        gbc.writeMem(0x540a, { 0xd6, 0x21 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0x540c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 01FD
        gbc.setState(0x5b52, 0x9cd5, 0xe590, 0x1bad, 0xc91d, 0xc32, 0x1, 0x0);
        gbc.writeMem(0x5b52, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9cd5, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 01FE
        gbc.setState(0x1a06, 0x4d18, 0x8350, 0xe3bb, 0x4f6a, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0x1a06, { 0xd6, 0xa6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4d18, gbc.sp());
        EXPECT(0x1a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0200
        gbc.setState(0x2aa6, 0x166f, 0xf9f0, 0x23d3, 0x58a2, 0x89ff, 0x1, 0x1);
        gbc.writeMem(0x2aa6, { 0xd6, 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x166f, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0201
        gbc.setState(0x6697, 0x17d5, 0x92c0, 0x61f2, 0xb1cf, 0x9fba, 0x1, 0x1);
        gbc.writeMem(0x6697, { 0xd6, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0x6699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0202
        gbc.setState(0x3cd4, 0x9a95, 0x7d70, 0x6d4, 0xc506, 0xb0c6, 0x0, 0x0);
        gbc.writeMem(0x3cd4, { 0xd6, 0xf0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9a95, gbc.sp());
        EXPECT(0x3cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0203
        gbc.setState(0xbf42, 0x393a, 0x2460, 0x2f36, 0x5525, 0xc821, 0x1, 0x0);
        gbc.writeMem(0xbf42, { 0xd6, 0x3d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbf42));
        EXPECT(0x3d, gbc.readMem(0xbf43));
        // D6 0204
        gbc.setState(0x6d86, 0xbb28, 0x81f0, 0x40d5, 0x4ad6, 0x13b3, 0x0, 0x1);
        gbc.writeMem(0x6d86, { 0xd6, 0x4f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0205
        gbc.setState(0x9872, 0xb522, 0x4b20, 0xdcca, 0xc7ba, 0x762, 0x1, 0x0);
        gbc.writeMem(0x9872, { 0xd6, 0xc4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb522, gbc.sp());
        EXPECT(0x9874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9872));
        EXPECT(0xc4, gbc.readMem(0x9873));
        // D6 0207
        gbc.setState(0x8ff7, 0x16a2, 0xd840, 0x595a, 0x3fcc, 0x7dae, 0x1, 0x1);
        gbc.writeMem(0x8ff7, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x8ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8ff7));
        EXPECT(0x36, gbc.readMem(0x8ff8));
        // D6 0208
        gbc.setState(0x2f25, 0x4cd2, 0x2580, 0x5a7d, 0xfd31, 0x3204, 0x1, 0x1);
        gbc.writeMem(0x2f25, { 0xd6, 0x14 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4cd2, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0209
        gbc.setState(0x24a8, 0x33c2, 0xbf70, 0x8d79, 0x7fe1, 0x6d63, 0x1, 0x1);
        gbc.writeMem(0x24a8, { 0xd6, 0x4d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x33c2, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 020B
        gbc.setState(0x63ad, 0x9dea, 0xf910, 0x984b, 0x7ac6, 0xcb21, 0x0, 0x0);
        gbc.writeMem(0x63ad, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x63af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 020C
        gbc.setState(0x32c8, 0x9eae, 0xf170, 0xe16f, 0xda73, 0x8b84, 0x1, 0x0);
        gbc.writeMem(0x32c8, { 0xd6, 0x18 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9eae, gbc.sp());
        EXPECT(0x32ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 020D
        gbc.setState(0x4c9b, 0x17f, 0x1a20, 0x31c3, 0x242f, 0xad6f, 0x0, 0x0);
        gbc.writeMem(0x4c9b, { 0xd6, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x17f, gbc.sp());
        EXPECT(0x4c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 020E
        gbc.setState(0xc935, 0x28c9, 0x71f0, 0x92c3, 0xfcfd, 0x82f, 0x0, 0x1);
        gbc.writeMem(0xc935, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x28c9, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc935));
        EXPECT(0xd7, gbc.readMem(0xc936));
        // D6 020F
        gbc.setState(0x1857, 0xa4f2, 0xefb0, 0x6987, 0xb47b, 0x547e, 0x1, 0x0);
        gbc.writeMem(0x1857, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0x1859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0210
        gbc.setState(0x9e6a, 0x6a8, 0x70e0, 0x94cb, 0x78fd, 0x8d6a, 0x1, 0x1);
        gbc.writeMem(0x9e6a, { 0xd6, 0xde });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9e6a));
        EXPECT(0xde, gbc.readMem(0x9e6b));
        // D6 0211
        gbc.setState(0xe02a, 0xa72a, 0xf780, 0xc1e2, 0x4ce3, 0x565c, 0x1, 0x0);
        gbc.writeMem(0xe02a, { 0xd6, 0x9b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0xe02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe02a));
        EXPECT(0x9b, gbc.readMem(0xe02b));
        // D6 0212
        gbc.setState(0xb44a, 0x7aa5, 0xea10, 0xeeaa, 0xf3eb, 0xd1e2, 0x1, 0x1);
        gbc.writeMem(0xb44a, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xb44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb44a));
        EXPECT(0x16, gbc.readMem(0xb44b));
        // D6 0213
        gbc.setState(0x576b, 0x438e, 0x6480, 0x7832, 0x879d, 0x34b1, 0x0, 0x1);
        gbc.writeMem(0x576b, { 0xd6, 0xc0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0x576d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0215
        gbc.setState(0x8c6a, 0x2dd4, 0x2860, 0x9eb6, 0x7e5b, 0xa5ff, 0x0, 0x1);
        gbc.writeMem(0x8c6a, { 0xd6, 0x57 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2dd4, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8c6a));
        EXPECT(0x57, gbc.readMem(0x8c6b));
        // D6 0216
        gbc.setState(0xbad6, 0xfa27, 0xde40, 0xca56, 0xe979, 0x51fb, 0x0, 0x0);
        gbc.writeMem(0xbad6, { 0xd6, 0x26 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbad6));
        EXPECT(0x26, gbc.readMem(0xbad7));
        // D6 0217
        gbc.setState(0x940f, 0x2988, 0xe4b0, 0x2c61, 0xd157, 0xfa03, 0x0, 0x0);
        gbc.writeMem(0x940f, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2988, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x940f));
        EXPECT(0xf3, gbc.readMem(0x9410));
        // D6 0218
        gbc.setState(0x9dd3, 0xab6b, 0xe620, 0xc912, 0x3598, 0x75f8, 0x0, 0x0);
        gbc.writeMem(0x9dd3, { 0xd6, 0x54 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab6b, gbc.sp());
        EXPECT(0x9dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9dd3));
        EXPECT(0x54, gbc.readMem(0x9dd4));
        // D6 0219
        gbc.setState(0xa39d, 0x9811, 0x2710, 0x730f, 0x1152, 0x1e35, 0x0, 0x0);
        gbc.writeMem(0xa39d, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9811, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa39d));
        EXPECT(0x42, gbc.readMem(0xa39e));
        // D6 021A
        gbc.setState(0x1d3b, 0xdc1c, 0xe080, 0x2dfc, 0xe704, 0xcc24, 0x1, 0x0);
        gbc.writeMem(0x1d3b, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x1d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 021B
        gbc.setState(0x752, 0xa812, 0xae60, 0x194b, 0xdbec, 0x4fc4, 0x0, 0x1);
        gbc.writeMem(0x752, { 0xd6, 0x55 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa812, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 021C
        gbc.setState(0x6f2f, 0x56e, 0xd1e0, 0x25b3, 0x64c3, 0xa315, 0x0, 0x1);
        gbc.writeMem(0x6f2f, { 0xd6, 0x8b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x56e, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 021E
        gbc.setState(0x590c, 0x4af9, 0xfce0, 0x65db, 0xc7cf, 0x7f82, 0x1, 0x0);
        gbc.writeMem(0x590c, { 0xd6, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4af9, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 021F
        gbc.setState(0xcdfb, 0xd940, 0x1770, 0xa582, 0x9c5f, 0x3047, 0x0, 0x1);
        gbc.writeMem(0xcdfb, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcdfb));
        EXPECT(0x2f, gbc.readMem(0xcdfc));
        // D6 0220
        gbc.setState(0x56d3, 0xd25c, 0xe270, 0x564, 0x943, 0x6833, 0x0, 0x1);
        gbc.writeMem(0x56d3, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0221
        gbc.setState(0xad80, 0xdc0b, 0x3c10, 0x9066, 0x3eff, 0xc4b1, 0x0, 0x0);
        gbc.writeMem(0xad80, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad80));
        EXPECT(0x1b, gbc.readMem(0xad81));
        // D6 0222
        gbc.setState(0x4302, 0x7311, 0x66d0, 0x73cb, 0x17e7, 0xa46, 0x0, 0x1);
        gbc.writeMem(0x4302, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0x4304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0223
        gbc.setState(0xc42, 0x875, 0x8eb0, 0xd895, 0x4ae5, 0xb757, 0x0, 0x0);
        gbc.writeMem(0xc42, { 0xd6, 0x81 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x875, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0224
        gbc.setState(0x75cd, 0xdacc, 0xfc00, 0x8168, 0xd8b7, 0x79fb, 0x0, 0x1);
        gbc.writeMem(0x75cd, { 0xd6, 0xd8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0225
        gbc.setState(0x87c8, 0xa394, 0x1e80, 0x3bfc, 0x239d, 0x1993, 0x0, 0x1);
        gbc.writeMem(0x87c8, { 0xd6, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa394, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x87c8));
        EXPECT(0xb9, gbc.readMem(0x87c9));
        // D6 0226
        gbc.setState(0x3180, 0x9555, 0x9bf0, 0x560a, 0xd037, 0x5659, 0x0, 0x1);
        gbc.writeMem(0x3180, { 0xd6, 0xa7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9555, gbc.sp());
        EXPECT(0x3182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0227
        gbc.setState(0x498c, 0xcccf, 0x4600, 0xf761, 0x26da, 0x4896, 0x1, 0x0);
        gbc.writeMem(0x498c, { 0xd6, 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcccf, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0228
        gbc.setState(0xb22c, 0x329c, 0xf7a0, 0xb073, 0xdb5c, 0x29d3, 0x0, 0x0);
        gbc.writeMem(0xb22c, { 0xd6, 0xb2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0xb22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb22c));
        EXPECT(0xb2, gbc.readMem(0xb22d));
        // D6 0229
        gbc.setState(0x69a6, 0x6981, 0xee90, 0x3391, 0x476b, 0x9552, 0x1, 0x0);
        gbc.writeMem(0x69a6, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6981, gbc.sp());
        EXPECT(0x69a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 022A
        gbc.setState(0x6ac4, 0x1ded, 0xc330, 0x1212, 0x4776, 0xba5, 0x0, 0x0);
        gbc.writeMem(0x6ac4, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 022C
        gbc.setState(0x2de4, 0xb3ab, 0x2d90, 0xeefe, 0x5bb8, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0x2de4, { 0xd6, 0x15 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb3ab, gbc.sp());
        EXPECT(0x2de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 022D
        gbc.setState(0x65cc, 0x136b, 0xe670, 0x42f8, 0x544a, 0xe1c3, 0x0, 0x1);
        gbc.writeMem(0x65cc, { 0xd6, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 022E
        gbc.setState(0x139c, 0xe29c, 0xf9c0, 0xd7ea, 0x6d73, 0x1e01, 0x1, 0x1);
        gbc.writeMem(0x139c, { 0xd6, 0x30 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe29c, gbc.sp());
        EXPECT(0x139e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0230
        gbc.setState(0x310f, 0xcda7, 0x3450, 0xad21, 0x78e6, 0xa1c4, 0x1, 0x1);
        gbc.writeMem(0x310f, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0231
        gbc.setState(0x4f5f, 0x27b6, 0x5970, 0x9483, 0xb2fe, 0x671c, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x27b6, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0232
        gbc.setState(0x2d34, 0x3f46, 0x8870, 0x537e, 0x7400, 0x7919, 0x0, 0x1);
        gbc.writeMem(0x2d34, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0233
        gbc.setState(0x3078, 0x700d, 0xae20, 0xa62b, 0x86f6, 0xd596, 0x0, 0x1);
        gbc.writeMem(0x3078, { 0xd6, 0xc3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x700d, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0234
        gbc.setState(0x83ab, 0x1534, 0x8860, 0xfb03, 0xb4a7, 0xa878, 0x1, 0x0);
        gbc.writeMem(0x83ab, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1534, gbc.sp());
        EXPECT(0x83ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x83ab));
        EXPECT(0xb0, gbc.readMem(0x83ac));
        // D6 0235
        gbc.setState(0x2c4b, 0xdd69, 0x6270, 0x5de, 0xc16a, 0x7ef0, 0x1, 0x0);
        gbc.writeMem(0x2c4b, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdd69, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0236
        gbc.setState(0x54d5, 0x516b, 0xed40, 0xb320, 0xaf4, 0x28ae, 0x1, 0x1);
        gbc.writeMem(0x54d5, { 0xd6, 0x8c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0238
        gbc.setState(0xa229, 0xab5, 0x7e20, 0x8373, 0x48cd, 0x4b16, 0x0, 0x1);
        gbc.writeMem(0xa229, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0xa22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa229));
        EXPECT(0x33, gbc.readMem(0xa22a));
        // D6 0239
        gbc.setState(0x50ab, 0x271a, 0xda90, 0x9a2d, 0x1450, 0xed08, 0x1, 0x0);
        gbc.writeMem(0x50ab, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x271a, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 023A
        gbc.setState(0x77ea, 0x1916, 0x4d00, 0x4782, 0xe621, 0x7fdf, 0x0, 0x1);
        gbc.writeMem(0x77ea, { 0xd6, 0xeb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1916, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 023B
        gbc.setState(0xac10, 0xecd4, 0x6bc0, 0x27ba, 0x4c29, 0xcfca, 0x0, 0x0);
        gbc.writeMem(0xac10, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0xac12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac10));
        EXPECT(0x69, gbc.readMem(0xac11));
        // D6 023C
        gbc.setState(0xbe9, 0x898e, 0x2b30, 0x67ad, 0xf306, 0x30ed, 0x0, 0x1);
        gbc.writeMem(0xbe9, { 0xd6, 0x9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0xbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 023D
        gbc.setState(0x327d, 0xd875, 0x2c0, 0x129d, 0x5495, 0x55d1, 0x0, 0x1);
        gbc.writeMem(0x327d, { 0xd6, 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0x327f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 023E
        gbc.setState(0xb79c, 0x328a, 0xe800, 0x2cde, 0x5c70, 0x62ff, 0x0, 0x0);
        gbc.writeMem(0xb79c, { 0xd6, 0xcf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x328a, gbc.sp());
        EXPECT(0xb79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb79c));
        EXPECT(0xcf, gbc.readMem(0xb79d));
        // D6 023F
        gbc.setState(0x557b, 0x3aa9, 0xb660, 0x9498, 0xb970, 0x400a, 0x0, 0x0);
        gbc.writeMem(0x557b, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3aa9, gbc.sp());
        EXPECT(0x557d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0240
        gbc.setState(0x5bb9, 0xa50b, 0x7510, 0x9ec5, 0xa058, 0x367c, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa50b, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0241
        gbc.setState(0x5a7c, 0x211d, 0xb660, 0x2394, 0x97d3, 0xcc20, 0x0, 0x1);
        gbc.writeMem(0x5a7c, { 0xd6, 0xe });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x211d, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0242
        gbc.setState(0x7b6e, 0x2261, 0x8500, 0x2218, 0x53ad, 0xc1e3, 0x1, 0x1);
        gbc.writeMem(0x7b6e, { 0xd6, 0xee });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0243
        gbc.setState(0x8dd4, 0x62c2, 0x9510, 0x2289, 0x1b53, 0x494e, 0x1, 0x1);
        gbc.writeMem(0x8dd4, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x62c2, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8dd4));
        EXPECT(0x84, gbc.readMem(0x8dd5));
        // D6 0244
        gbc.setState(0x5984, 0xd6c4, 0x6160, 0x8568, 0xb83, 0xd4b0, 0x0, 0x1);
        gbc.writeMem(0x5984, { 0xd6, 0x32 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd6c4, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0245
        gbc.setState(0xeb67, 0xf4db, 0xb340, 0xb626, 0xe8a4, 0x565d, 0x1, 0x1);
        gbc.writeMem(0xeb67, { 0xd6, 0xb3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0xeb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeb67));
        EXPECT(0xb3, gbc.readMem(0xeb68));
        // D6 0246
        gbc.setState(0xa9b0, 0xac44, 0x2e60, 0xa37b, 0xaac4, 0xebf1, 0x0, 0x0);
        gbc.writeMem(0xa9b0, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xac44, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa9b0));
        EXPECT(0xaf, gbc.readMem(0xa9b1));
        // D6 0247
        gbc.setState(0xda3e, 0x6be9, 0x6230, 0xa3b4, 0x2948, 0x7a32, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xda3e));
        EXPECT(0x33, gbc.readMem(0xda3f));
        // D6 0248
        gbc.setState(0x5c38, 0xf278, 0xc860, 0xf113, 0xa1fa, 0x7ee0, 0x0, 0x0);
        gbc.writeMem(0x5c38, { 0xd6, 0x5f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0249
        gbc.setState(0x6cd2, 0xcae5, 0x1100, 0x8b3, 0x6d7b, 0xd7a0, 0x0, 0x0);
        gbc.writeMem(0x6cd2, { 0xd6, 0xf4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcae5, gbc.sp());
        EXPECT(0x6cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 024A
        gbc.setState(0x6271, 0xa113, 0x5b50, 0xe44, 0xf97c, 0x268b, 0x0, 0x1);
        gbc.writeMem(0x6271, { 0xd6, 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa113, gbc.sp());
        EXPECT(0x6273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 024B
        gbc.setState(0x36eb, 0x7108, 0x180, 0x9a8c, 0x14c7, 0x9df5, 0x1, 0x1);
        gbc.writeMem(0x36eb, { 0xd6, 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7108, gbc.sp());
        EXPECT(0x36ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 024C
        gbc.setState(0xe75b, 0x1524, 0x5010, 0x59d0, 0x810b, 0x21bf, 0x1, 0x1);
        gbc.writeMem(0xe75b, { 0xd6, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xe75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe75b));
        EXPECT(0x12, gbc.readMem(0xe75c));
        // D6 024F
        gbc.setState(0x5c3e, 0x5e62, 0xc5a0, 0xbc18, 0x7c04, 0xdb43, 0x0, 0x0);
        gbc.writeMem(0x5c3e, { 0xd6, 0x21 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0250
        gbc.setState(0x345c, 0xcb47, 0x6c80, 0x462e, 0x4e65, 0xeb7b, 0x0, 0x1);
        gbc.writeMem(0x345c, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcb47, gbc.sp());
        EXPECT(0x345e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0251
        gbc.setState(0x4910, 0x3b8, 0x7320, 0x29ab, 0xaa4f, 0xd168, 0x1, 0x0);
        gbc.writeMem(0x4910, { 0xd6, 0xb1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3b8, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0252
        gbc.setState(0x3f36, 0x6349, 0x17c0, 0x7624, 0xd80b, 0xdfe9, 0x0, 0x0);
        gbc.writeMem(0x3f36, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0253
        gbc.setState(0x2ae, 0x5e97, 0x9ef0, 0x24c7, 0xddf4, 0xb3ab, 0x0, 0x0);
        gbc.writeMem(0x2ae, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0x2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0254
        gbc.setState(0x1997, 0xe5af, 0xa210, 0x102e, 0x3a6e, 0x4ea1, 0x0, 0x0);
        gbc.writeMem(0x1997, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe5af, gbc.sp());
        EXPECT(0x1999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0255
        gbc.setState(0x3ae5, 0x8020, 0x9fd0, 0x9983, 0xfe71, 0x45cc, 0x0, 0x0);
        gbc.writeMem(0x3ae5, { 0xd6, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0x3ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0256
        gbc.setState(0x5d3f, 0xe116, 0x22d0, 0xd05e, 0xa0d2, 0x6f51, 0x0, 0x1);
        gbc.writeMem(0x5d3f, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe116, gbc.sp());
        EXPECT(0x5d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0258
        gbc.setState(0x2494, 0x6289, 0xa5f0, 0xafb7, 0x78b0, 0x2fb0, 0x1, 0x1);
        gbc.writeMem(0x2494, { 0xd6, 0xb1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x2496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0259
        gbc.setState(0xde3f, 0x6fed, 0xec0, 0xc33f, 0x7ff4, 0x59ef, 0x1, 0x1);
        gbc.writeMem(0xde3f, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0xde41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xde3f));
        EXPECT(0xad, gbc.readMem(0xde40));
        // D6 025A
        gbc.setState(0x63da, 0xceaf, 0x9000, 0x2a30, 0xd551, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0x63da, { 0xd6, 0xe1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xceaf, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 025B
        gbc.setState(0x2f10, 0x8ff3, 0x81e0, 0xe60d, 0x844b, 0x66a, 0x0, 0x1);
        gbc.writeMem(0x2f10, { 0xd6, 0xb8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8ff3, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 025D
        gbc.setState(0x4e2a, 0x5d1c, 0x550, 0x442a, 0x3be4, 0x1b39, 0x0, 0x1);
        gbc.writeMem(0x4e2a, { 0xd6, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d1c, gbc.sp());
        EXPECT(0x4e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 025E
        gbc.setState(0x8669, 0xe36b, 0xbdb0, 0x39e9, 0xe6e7, 0xde7c, 0x0, 0x0);
        gbc.writeMem(0x8669, { 0xd6, 0xee });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8669));
        EXPECT(0xee, gbc.readMem(0x866a));
        // D6 0260
        gbc.setState(0x9e6, 0x8005, 0xabb0, 0xea8c, 0xd506, 0x6e9d, 0x0, 0x0);
        gbc.writeMem(0x9e6, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8005, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0261
        gbc.setState(0xecf, 0xed6e, 0x4080, 0x7d6, 0xe163, 0xe03, 0x1, 0x1);
        gbc.writeMem(0xecf, { 0xd6, 0x17 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xed6e, gbc.sp());
        EXPECT(0xed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0262
        gbc.setState(0x85bf, 0x1c22, 0x8d30, 0xed1b, 0x7f86, 0x1d4d, 0x1, 0x1);
        gbc.writeMem(0x85bf, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x85c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x85bf));
        EXPECT(0x69, gbc.readMem(0x85c0));
        // D6 0264
        gbc.setState(0x5fda, 0xc99d, 0xc720, 0x208b, 0x5a21, 0x9519, 0x1, 0x0);
        gbc.writeMem(0x5fda, { 0xd6, 0x96 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x5fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0265
        gbc.setState(0x46d2, 0xca5e, 0x68a0, 0x1e85, 0x6ab, 0x35c8, 0x1, 0x0);
        gbc.writeMem(0x46d2, { 0xd6, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xca5e, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0266
        gbc.setState(0x6086, 0x5ea1, 0x2ef0, 0x2e0c, 0x4680, 0xa4f7, 0x0, 0x1);
        gbc.writeMem(0x6086, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5ea1, gbc.sp());
        EXPECT(0x6088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0267
        gbc.setState(0x36e, 0x309b, 0x95f0, 0x8e9d, 0x37be, 0x973c, 0x1, 0x1);
        gbc.writeMem(0x36e, { 0xd6, 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x309b, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0268
        gbc.setState(0x1f33, 0xbd61, 0xbbb0, 0xf715, 0x3694, 0x6d80, 0x1, 0x0);
        gbc.writeMem(0x1f33, { 0xd6, 0x79 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0269
        gbc.setState(0x9df6, 0xdad, 0xcf30, 0x710b, 0x1bf3, 0xa12a, 0x0, 0x0);
        gbc.writeMem(0x9df6, { 0xd6, 0x40 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9df6));
        EXPECT(0x40, gbc.readMem(0x9df7));
        // D6 026A
        gbc.setState(0x9d6c, 0xadde, 0x74e0, 0xb9b2, 0x27da, 0x82e5, 0x1, 0x1);
        gbc.writeMem(0x9d6c, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadde, gbc.sp());
        EXPECT(0x9d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9d6c));
        EXPECT(0xad, gbc.readMem(0x9d6d));
        // D6 026B
        gbc.setState(0xe3c8, 0xe378, 0xe000, 0xca8e, 0x39ab, 0x3b1, 0x0, 0x0);
        gbc.writeMem(0xe3c8, { 0xd6, 0x67 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe378, gbc.sp());
        EXPECT(0xe3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe3c8));
        EXPECT(0x67, gbc.readMem(0xe3c9));
        // D6 026C
        gbc.setState(0x2f31, 0xd446, 0x3a10, 0x845b, 0xb460, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0x2f31, { 0xd6, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x2f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 026D
        gbc.setState(0xc650, 0xd6ab, 0x3da0, 0xadfb, 0x968e, 0x5aa0, 0x0, 0x0);
        gbc.writeMem(0xc650, { 0xd6, 0x62 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd6ab, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc650));
        EXPECT(0x62, gbc.readMem(0xc651));
        // D6 026E
        gbc.setState(0x6fc3, 0xbfc3, 0xa850, 0x6039, 0x6e34, 0x8644, 0x0, 0x0);
        gbc.writeMem(0x6fc3, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbfc3, gbc.sp());
        EXPECT(0x6fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 026F
        gbc.setState(0x7627, 0xade9, 0xe650, 0xe431, 0x4240, 0xd65d, 0x0, 0x0);
        gbc.writeMem(0x7627, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xade9, gbc.sp());
        EXPECT(0x7629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0270
        gbc.setState(0xe7df, 0x6dbf, 0x5f40, 0x7f62, 0xd36c, 0x6d5c, 0x0, 0x1);
        gbc.writeMem(0xe7df, { 0xd6, 0x6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0xe7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe7df));
        EXPECT(0x6, gbc.readMem(0xe7e0));
        // D6 0271
        gbc.setState(0x2538, 0xb46d, 0xb7e0, 0x2878, 0x3491, 0xd0dd, 0x1, 0x0);
        gbc.writeMem(0x2538, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb46d, gbc.sp());
        EXPECT(0x253a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0272
        gbc.setState(0xb5d3, 0x3935, 0xd120, 0xd43e, 0x8362, 0xd8ee, 0x0, 0x0);
        gbc.writeMem(0xb5d3, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3935, gbc.sp());
        EXPECT(0xb5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb5d3));
        EXPECT(0x99, gbc.readMem(0xb5d4));
        // D6 0273
        gbc.setState(0x4092, 0x257e, 0x1bd0, 0x6b71, 0xd3ad, 0xca2e, 0x1, 0x0);
        gbc.writeMem(0x4092, { 0xd6, 0xde });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0274
        gbc.setState(0xe4b6, 0x7cb8, 0x7890, 0xd689, 0xfb08, 0xa6b1, 0x0, 0x1);
        gbc.writeMem(0xe4b6, { 0xd6, 0x46 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0xe4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe4b6));
        EXPECT(0x46, gbc.readMem(0xe4b7));
        // D6 0275
        gbc.setState(0x7d6d, 0xeb00, 0x4710, 0x3034, 0x4864, 0xde2c, 0x0, 0x0);
        gbc.writeMem(0x7d6d, { 0xd6, 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeb00, gbc.sp());
        EXPECT(0x7d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0276
        gbc.setState(0x1742, 0xd2b5, 0xa500, 0x8aa5, 0xb697, 0x7110, 0x1, 0x1);
        gbc.writeMem(0x1742, { 0xd6, 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0277
        gbc.setState(0xf1e, 0xf27d, 0x68b0, 0x1cc2, 0x9bff, 0x7c3a, 0x1, 0x0);
        gbc.writeMem(0xf1e, { 0xd6, 0xc4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0xf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0278
        gbc.setState(0xe1fb, 0x2be9, 0x1710, 0xa194, 0x3105, 0xc77d, 0x0, 0x1);
        gbc.writeMem(0xe1fb, { 0xd6, 0x75 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe1fb));
        EXPECT(0x75, gbc.readMem(0xe1fc));
        // D6 0279
        gbc.setState(0x690d, 0x2c3a, 0x1da0, 0xb5fb, 0x21a4, 0x733b, 0x1, 0x0);
        gbc.writeMem(0x690d, { 0xd6, 0x38 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2c3a, gbc.sp());
        EXPECT(0x690f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 027A
        gbc.setState(0x2e1f, 0xef20, 0xc530, 0x1c20, 0xd182, 0x2cc3, 0x0, 0x1);
        gbc.writeMem(0x2e1f, { 0xd6, 0x34 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xef20, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 027B
        gbc.setState(0x5c23, 0x3cfa, 0x42f0, 0xb5f, 0xd77e, 0x9f7, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xd6, 0xcd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3cfa, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 027C
        gbc.setState(0x3c8d, 0xe818, 0x4990, 0xc55f, 0x921d, 0x7400, 0x0, 0x1);
        gbc.writeMem(0x3c8d, { 0xd6, 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe818, gbc.sp());
        EXPECT(0x3c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 027D
        gbc.setState(0xb66f, 0xe35f, 0x6a00, 0x1a03, 0x2453, 0xb987, 0x1, 0x1);
        gbc.writeMem(0xb66f, { 0xd6, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0xb671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb66f));
        EXPECT(0x7, gbc.readMem(0xb670));
        // D6 027F
        gbc.setState(0xa021, 0xd9fc, 0x17a0, 0xab7b, 0x7dba, 0x5ebc, 0x1, 0x0);
        gbc.writeMem(0xa021, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd9fc, gbc.sp());
        EXPECT(0xa023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa021));
        EXPECT(0xc5, gbc.readMem(0xa022));
        // D6 0280
        gbc.setState(0xb91, 0xfb49, 0xc4f0, 0xb9eb, 0x8e85, 0x9492, 0x0, 0x0);
        gbc.writeMem(0xb91, { 0xd6, 0x20 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0xb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0281
        gbc.setState(0x697, 0xec49, 0x6fc0, 0x3770, 0xcc17, 0xe51c, 0x1, 0x0);
        gbc.writeMem(0x697, { 0xd6, 0x11 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0282
        gbc.setState(0x7ec, 0x22bb, 0xc940, 0x7c47, 0xf83, 0xb949, 0x0, 0x1);
        gbc.writeMem(0x7ec, { 0xd6, 0x86 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0283
        gbc.setState(0xa3f7, 0xd305, 0x8ae0, 0x440d, 0x23bb, 0xf29d, 0x1, 0x1);
        gbc.writeMem(0xa3f7, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd305, gbc.sp());
        EXPECT(0xa3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa3f7));
        EXPECT(0x3b, gbc.readMem(0xa3f8));
        // D6 0284
        gbc.setState(0x597c, 0x34b7, 0x9db0, 0x1ab7, 0xc4a, 0xef11, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0xd6, 0xf2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x34b7, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0285
        gbc.setState(0xeef5, 0xa474, 0x9aa0, 0x629b, 0xb242, 0x779f, 0x0, 0x1);
        gbc.writeMem(0xeef5, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeef5));
        EXPECT(0x39, gbc.readMem(0xeef6));
        // D6 0286
        gbc.setState(0x5ae2, 0x3799, 0xa650, 0x58f8, 0xf510, 0xab56, 0x1, 0x1);
        gbc.writeMem(0x5ae2, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3799, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0287
        gbc.setState(0xddda, 0x42fa, 0xb280, 0xb0d2, 0x7b96, 0x42c9, 0x1, 0x1);
        gbc.writeMem(0xddda, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x42fa, gbc.sp());
        EXPECT(0xdddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xddda));
        EXPECT(0x39, gbc.readMem(0xdddb));
        // D6 0288
        gbc.setState(0xc523, 0xe780, 0x4a10, 0x41ef, 0x4913, 0xa439, 0x1, 0x1);
        gbc.writeMem(0xc523, { 0xd6, 0x95 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0xc525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc523));
        EXPECT(0x95, gbc.readMem(0xc524));
        // D6 0289
        gbc.setState(0x5f6d, 0x475d, 0xb3d0, 0x6972, 0x5177, 0xb7e7, 0x0, 0x0);
        gbc.writeMem(0x5f6d, { 0xd6, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x475d, gbc.sp());
        EXPECT(0x5f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 028A
        gbc.setState(0x241f, 0xc5de, 0xb170, 0x776a, 0xacca, 0xb1dd, 0x0, 0x0);
        gbc.writeMem(0x241f, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0x2421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 028B
        gbc.setState(0x5b09, 0xe093, 0x8190, 0x21d4, 0xf73, 0x53a2, 0x0, 0x0);
        gbc.writeMem(0x5b09, { 0xd6, 0xf2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0x5b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 028D
        gbc.setState(0xcbe6, 0xafb6, 0x96b0, 0x7a1d, 0x8f9c, 0x21cb, 0x0, 0x1);
        gbc.writeMem(0xcbe6, { 0xd6, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0xcbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcbe6));
        EXPECT(0x9b, gbc.readMem(0xcbe7));
        // D6 028E
        gbc.setState(0x10ed, 0x6f8e, 0xba70, 0x3f2, 0x17c, 0xf647, 0x1, 0x0);
        gbc.writeMem(0x10ed, { 0xd6, 0xbe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6f8e, gbc.sp());
        EXPECT(0x10ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0290
        gbc.setState(0x22e2, 0x22dd, 0x4c70, 0x3162, 0x559c, 0xe212, 0x0, 0x0);
        gbc.writeMem(0x22e2, { 0xd6, 0xe3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x22dd, gbc.sp());
        EXPECT(0x22e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0291
        gbc.setState(0xe42c, 0x1868, 0xff00, 0x9c5, 0xc120, 0x6f2b, 0x0, 0x0);
        gbc.writeMem(0xe42c, { 0xd6, 0xcb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1868, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe42c));
        EXPECT(0xcb, gbc.readMem(0xe42d));
        // D6 0292
        gbc.setState(0xb68, 0xc8fd, 0x9a00, 0x4693, 0xa51c, 0xd262, 0x1, 0x1);
        gbc.writeMem(0xb68, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0xb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0293
        gbc.setState(0xe975, 0xed35, 0x9480, 0x294e, 0x257a, 0x1132, 0x1, 0x0);
        gbc.writeMem(0xe975, { 0xd6, 0x6e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xed35, gbc.sp());
        EXPECT(0xe977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe975));
        EXPECT(0x6e, gbc.readMem(0xe976));
        // D6 0294
        gbc.setState(0x2fc8, 0x81c3, 0x64c0, 0x36a7, 0x160a, 0xd030, 0x1, 0x0);
        gbc.writeMem(0x2fc8, { 0xd6, 0x78 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0295
        gbc.setState(0x315f, 0xa41c, 0x8060, 0xbd51, 0x78d2, 0x82ce, 0x1, 0x0);
        gbc.writeMem(0x315f, { 0xd6, 0xb3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x3161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0296
        gbc.setState(0x6842, 0x857a, 0x4630, 0xfaaa, 0x2916, 0xadf7, 0x0, 0x0);
        gbc.writeMem(0x6842, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x857a, gbc.sp());
        EXPECT(0x6844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0298
        gbc.setState(0x8e28, 0xc7c2, 0x8860, 0x17eb, 0x924b, 0x4fd, 0x0, 0x0);
        gbc.writeMem(0x8e28, { 0xd6, 0x47 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8e28));
        EXPECT(0x47, gbc.readMem(0x8e29));
        // D6 0299
        gbc.setState(0x1c0, 0xc78a, 0xf0e0, 0x400d, 0x4cb4, 0x4ffe, 0x1, 0x0);
        gbc.writeMem(0x1c0, { 0xd6, 0x9d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc78a, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 029A
        gbc.setState(0x789e, 0x963, 0x7780, 0x1113, 0x1acb, 0xd8be, 0x0, 0x0);
        gbc.writeMem(0x789e, { 0xd6, 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x963, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 029B
        gbc.setState(0x8923, 0x3ee4, 0xf920, 0xcce1, 0xf953, 0xfecc, 0x0, 0x1);
        gbc.writeMem(0x8923, { 0xd6, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3ee4, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8923));
        EXPECT(0x37, gbc.readMem(0x8924));
        // D6 029C
        gbc.setState(0x1598, 0x5521, 0x4d50, 0x8778, 0xe2be, 0xb118, 0x1, 0x0);
        gbc.writeMem(0x1598, { 0xd6, 0x34 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 029D
        gbc.setState(0x250e, 0xbc86, 0xd400, 0x6b84, 0x2a4c, 0xeace, 0x0, 0x1);
        gbc.writeMem(0x250e, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbc86, gbc.sp());
        EXPECT(0x2510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 029F
        gbc.setState(0xc56f, 0x5664, 0x3b30, 0xbdfc, 0x6b9e, 0x3420, 0x0, 0x1);
        gbc.writeMem(0xc56f, { 0xd6, 0xdd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5664, gbc.sp());
        EXPECT(0xc571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc56f));
        EXPECT(0xdd, gbc.readMem(0xc570));
        // D6 02A0
        gbc.setState(0x585d, 0x98a8, 0xb100, 0x57af, 0x96e7, 0xf318, 0x0, 0x1);
        gbc.writeMem(0x585d, { 0xd6, 0x38 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x98a8, gbc.sp());
        EXPECT(0x585f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02A1
        gbc.setState(0xcddf, 0xaecb, 0x3800, 0xc9d7, 0x41ac, 0x3139, 0x0, 0x0);
        gbc.writeMem(0xcddf, { 0xd6, 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaecb, gbc.sp());
        EXPECT(0xcde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcddf));
        EXPECT(0x7a, gbc.readMem(0xcde0));
        // D6 02A2
        gbc.setState(0x16d, 0x5aca, 0xef10, 0xf7ac, 0x3c99, 0xcbcc, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0xd6, 0xe1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02A3
        gbc.setState(0x1a39, 0xe8ee, 0x2660, 0x47c2, 0x569d, 0x3dae, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xd6, 0xc6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02A4
        gbc.setState(0xc9d6, 0x52ee, 0x5bd0, 0xa40f, 0x700, 0x53ee, 0x0, 0x0);
        gbc.writeMem(0xc9d6, { 0xd6, 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x52ee, gbc.sp());
        EXPECT(0xc9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc9d6));
        EXPECT(0x1d, gbc.readMem(0xc9d7));
        // D6 02A5
        gbc.setState(0xc2ea, 0xc4ba, 0xf270, 0x148c, 0xb5c2, 0x55ec, 0x1, 0x1);
        gbc.writeMem(0xc2ea, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc4ba, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc2ea));
        EXPECT(0xe7, gbc.readMem(0xc2eb));
        // D6 02A6
        gbc.setState(0x43c7, 0xd8c4, 0x7920, 0xee6a, 0xd051, 0xf8f7, 0x0, 0x1);
        gbc.writeMem(0x43c7, { 0xd6, 0x9f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd8c4, gbc.sp());
        EXPECT(0x43c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02A7
        gbc.setState(0xb790, 0xd414, 0x5340, 0xedac, 0xc52, 0xefde, 0x1, 0x0);
        gbc.writeMem(0xb790, { 0xd6, 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0xb792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb790));
        EXPECT(0x7a, gbc.readMem(0xb791));
        // D6 02A8
        gbc.setState(0xe16c, 0x36b2, 0x54a0, 0xf0f9, 0x475f, 0xaacd, 0x0, 0x1);
        gbc.writeMem(0xe16c, { 0xd6, 0x6c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x36b2, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe16c));
        EXPECT(0x6c, gbc.readMem(0xe16d));
        // D6 02A9
        gbc.setState(0xad00, 0x172b, 0xf700, 0xcd68, 0x1436, 0xea05, 0x1, 0x1);
        gbc.writeMem(0xad00, { 0xd6, 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x172b, gbc.sp());
        EXPECT(0xad02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xad00));
        EXPECT(0x94, gbc.readMem(0xad01));
        // D6 02AA
        gbc.setState(0x5837, 0x7c68, 0xe110, 0x6b24, 0xbeef, 0xeb51, 0x0, 0x1);
        gbc.writeMem(0x5837, { 0xd6, 0xa7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7c68, gbc.sp());
        EXPECT(0x5839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02AB
        gbc.setState(0x6ee7, 0xe101, 0xb5e0, 0x6267, 0xb276, 0x493b, 0x1, 0x1);
        gbc.writeMem(0x6ee7, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe101, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02AC
        gbc.setState(0x7042, 0x1351, 0x3530, 0x523c, 0x72bc, 0x94fe, 0x0, 0x0);
        gbc.writeMem(0x7042, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1351, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02AD
        gbc.setState(0x9767, 0x5096, 0x52c0, 0x7fe5, 0x3437, 0x386d, 0x1, 0x1);
        gbc.writeMem(0x9767, { 0xd6, 0x62 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5096, gbc.sp());
        EXPECT(0x9769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9767));
        EXPECT(0x62, gbc.readMem(0x9768));
        // D6 02AE
        gbc.setState(0x295b, 0x9ecc, 0x4d60, 0x214a, 0x292e, 0x49bc, 0x1, 0x0);
        gbc.writeMem(0x295b, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0x295d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B0
        gbc.setState(0x6841, 0xdc89, 0x6ee0, 0x4021, 0x2fb9, 0x9514, 0x1, 0x0);
        gbc.writeMem(0x6841, { 0xd6, 0x5a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdc89, gbc.sp());
        EXPECT(0x6843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B1
        gbc.setState(0x5393, 0x1c45, 0xa610, 0x70c8, 0xbc81, 0x5ba9, 0x1, 0x0);
        gbc.writeMem(0x5393, { 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x5395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B2
        gbc.setState(0x79c8, 0x9eef, 0xcae0, 0xac77, 0x1c24, 0x848e, 0x0, 0x0);
        gbc.writeMem(0x79c8, { 0xd6, 0xb6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9eef, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B3
        gbc.setState(0x75cc, 0x913c, 0x4780, 0x8d9d, 0xbf35, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0x75cc, { 0xd6, 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0x75ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02B4
        gbc.setState(0xd9a8, 0x650e, 0x77d0, 0x5283, 0xc4e3, 0xbc50, 0x1, 0x0);
        gbc.writeMem(0xd9a8, { 0xd6, 0x4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd9a8));
        EXPECT(0x4, gbc.readMem(0xd9a9));
        // D6 02B5
        gbc.setState(0xc08, 0x6c0f, 0xe950, 0xbc67, 0xf7ed, 0x9577, 0x1, 0x1);
        gbc.writeMem(0xc08, { 0xd6, 0x12 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6c0f, gbc.sp());
        EXPECT(0xc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B6
        gbc.setState(0x1cdd, 0x5dd3, 0xba20, 0x5cf1, 0xfac6, 0x131b, 0x1, 0x0);
        gbc.writeMem(0x1cdd, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5dd3, gbc.sp());
        EXPECT(0x1cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B7
        gbc.setState(0x9b7f, 0x987e, 0x72d0, 0x15e8, 0x7fb3, 0x1513, 0x1, 0x0);
        gbc.writeMem(0x9b7f, { 0xd6, 0xfd });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0x9b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9b7f));
        EXPECT(0xfd, gbc.readMem(0x9b80));
        // D6 02B8
        gbc.setState(0xa2, 0x1608, 0xe0e0, 0xcf21, 0xc018, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0xa2, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0xa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02B9
        gbc.setState(0xd7c2, 0xe34, 0xca40, 0x9e92, 0x9c28, 0xd2c1, 0x1, 0x1);
        gbc.writeMem(0xd7c2, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe34, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd7c2));
        EXPECT(0x5, gbc.readMem(0xd7c3));
        // D6 02BA
        gbc.setState(0xdbab, 0xc417, 0xdb60, 0xe381, 0x7bcb, 0x799a, 0x0, 0x0);
        gbc.writeMem(0xdbab, { 0xd6, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc417, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xdbab));
        EXPECT(0x4b, gbc.readMem(0xdbac));
        // D6 02BB
        gbc.setState(0xefba, 0x2fa9, 0xb30, 0x7b35, 0x283d, 0xeac0, 0x0, 0x0);
        gbc.writeMem(0xefba, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xefba));
        EXPECT(0x48, gbc.readMem(0xefbb));
        // D6 02BC
        gbc.setState(0x6e60, 0x406, 0x4070, 0x11a6, 0x5325, 0xeb82, 0x0, 0x0);
        gbc.writeMem(0x6e60, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x6e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02BD
        gbc.setState(0xf12, 0x2fd7, 0xf000, 0xea9, 0xff, 0x2668, 0x1, 0x0);
        gbc.writeMem(0xf12, { 0xd6, 0x30 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0xf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02BE
        gbc.setState(0x76f0, 0x7614, 0x5d00, 0x3a1c, 0xcb1e, 0xbc58, 0x0, 0x0);
        gbc.writeMem(0x76f0, { 0xd6, 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02BF
        gbc.setState(0xb424, 0xe97f, 0x3de0, 0x2709, 0xa5e, 0xf2ba, 0x1, 0x1);
        gbc.writeMem(0xb424, { 0xd6, 0x9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe97f, gbc.sp());
        EXPECT(0xb426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb424));
        EXPECT(0x9, gbc.readMem(0xb425));
        // D6 02C0
        gbc.setState(0xd1dd, 0xd3b9, 0x75b0, 0xb6ef, 0xf6d0, 0xd13e, 0x0, 0x0);
        gbc.writeMem(0xd1dd, { 0xd6, 0x90 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0xd1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd1dd));
        EXPECT(0x90, gbc.readMem(0xd1de));
        // D6 02C1
        gbc.setState(0x5f19, 0xc05b, 0xb6b0, 0x8c2, 0xe5f7, 0xa888, 0x1, 0x0);
        gbc.writeMem(0x5f19, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc05b, gbc.sp());
        EXPECT(0x5f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02C2
        gbc.setState(0x85ad, 0xc05a, 0xcad0, 0xc8cf, 0xe09b, 0x3516, 0x0, 0x1);
        gbc.writeMem(0x85ad, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x85ad));
        EXPECT(0xc5, gbc.readMem(0x85ae));
        // D6 02C3
        gbc.setState(0x5f75, 0xd034, 0xa4f0, 0xb3d3, 0x30c2, 0x39b4, 0x0, 0x0);
        gbc.writeMem(0x5f75, { 0xd6, 0xa6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd034, gbc.sp());
        EXPECT(0x5f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02C4
        gbc.setState(0xa61b, 0x3484, 0x3270, 0xad22, 0x694b, 0xcd9c, 0x1, 0x1);
        gbc.writeMem(0xa61b, { 0xd6, 0x40 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3484, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa61b));
        EXPECT(0x40, gbc.readMem(0xa61c));
        // D6 02C5
        gbc.setState(0x565e, 0x9cde, 0xa2d0, 0x6b2e, 0xcf56, 0xba1, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9cde, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02C6
        gbc.setState(0xef6d, 0x9267, 0xd220, 0xe778, 0x1c74, 0xa514, 0x0, 0x1);
        gbc.writeMem(0xef6d, { 0xd6, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xef6d));
        EXPECT(0x97, gbc.readMem(0xef6e));
        // D6 02C7
        gbc.setState(0x6c01, 0xc871, 0x8300, 0x2a31, 0x4860, 0xf437, 0x0, 0x1);
        gbc.writeMem(0x6c01, { 0xd6, 0xb8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0x6c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02C9
        gbc.setState(0x9458, 0x210c, 0xebd0, 0x3ad0, 0xf2ab, 0x260f, 0x0, 0x0);
        gbc.writeMem(0x9458, { 0xd6, 0xe5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x210c, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9458));
        EXPECT(0xe5, gbc.readMem(0x9459));
        // D6 02CA
        gbc.setState(0xe20f, 0x2003, 0x8650, 0x760e, 0x2a59, 0xa23d, 0x0, 0x1);
        gbc.writeMem(0xe20f, { 0xd6, 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe20f));
        EXPECT(0x61, gbc.readMem(0xe210));
        // D6 02CB
        gbc.setState(0x6476, 0x5b61, 0x9450, 0xf876, 0x8ee8, 0xc855, 0x0, 0x1);
        gbc.writeMem(0x6476, { 0xd6, 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b61, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02CC
        gbc.setState(0x92ac, 0x9ff6, 0x66c0, 0xbc9c, 0xa23e, 0xa8d1, 0x1, 0x1);
        gbc.writeMem(0x92ac, { 0xd6, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x92ac));
        EXPECT(0x7b, gbc.readMem(0x92ad));
        // D6 02CD
        gbc.setState(0xc688, 0xb15e, 0xa740, 0x480b, 0x3c56, 0xae23, 0x1, 0x0);
        gbc.writeMem(0xc688, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc688));
        EXPECT(0xa3, gbc.readMem(0xc689));
        // D6 02CE
        gbc.setState(0x660, 0x1b09, 0xef60, 0xfdae, 0x4c54, 0x559e, 0x0, 0x1);
        gbc.writeMem(0x660, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1b09, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02CF
        gbc.setState(0x35b9, 0x796d, 0x1ae0, 0x9928, 0xcca4, 0xbf20, 0x0, 0x1);
        gbc.writeMem(0x35b9, { 0xd6, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x796d, gbc.sp());
        EXPECT(0x35bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02D0
        gbc.setState(0xc97b, 0xdf33, 0xa2a0, 0x8b88, 0x48d9, 0x9385, 0x0, 0x0);
        gbc.writeMem(0xc97b, { 0xd6, 0x6e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0xc97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc97b));
        EXPECT(0x6e, gbc.readMem(0xc97c));
        // D6 02D1
        gbc.setState(0x951e, 0xe28a, 0x1870, 0xe0d4, 0xd423, 0x3dbc, 0x0, 0x0);
        gbc.writeMem(0x951e, { 0xd6, 0x5a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0x9520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x951e));
        EXPECT(0x5a, gbc.readMem(0x951f));
        // D6 02D2
        gbc.setState(0x7860, 0xebdc, 0xdbd0, 0xf4a6, 0x8083, 0x5c5a, 0x0, 0x1);
        gbc.writeMem(0x7860, { 0xd6, 0x77 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xebdc, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02D3
        gbc.setState(0xd7ac, 0x6103, 0xc2d0, 0x22e8, 0x1f95, 0x803d, 0x1, 0x0);
        gbc.writeMem(0xd7ac, { 0xd6, 0xcb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6103, gbc.sp());
        EXPECT(0xd7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd7ac));
        EXPECT(0xcb, gbc.readMem(0xd7ad));
        // D6 02D4
        gbc.setState(0xd4ff, 0x62a, 0x64b0, 0xf2cf, 0x8e6c, 0x8de7, 0x0, 0x0);
        gbc.writeMem(0xd4ff, { 0xd6, 0xdd });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd4ff));
        EXPECT(0xdd, gbc.readMem(0xd500));
        // D6 02D5
        gbc.setState(0x11b3, 0x5055, 0xf1c0, 0xac59, 0xb9f6, 0x12dc, 0x1, 0x0);
        gbc.writeMem(0x11b3, { 0xd6, 0x1c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x11b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02D6
        gbc.setState(0x660, 0x6d02, 0x11b0, 0xd172, 0xcfce, 0x423b, 0x1, 0x1);
        gbc.writeMem(0x660, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02D7
        gbc.setState(0xa0da, 0x7f74, 0x89c0, 0x7c2, 0x2469, 0x37d0, 0x1, 0x1);
        gbc.writeMem(0xa0da, { 0xd6, 0x78 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f74, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa0da));
        EXPECT(0x78, gbc.readMem(0xa0db));
        // D6 02D8
        gbc.setState(0x1309, 0x2fdf, 0x7880, 0xa13a, 0x4d34, 0xeddf, 0x1, 0x1);
        gbc.writeMem(0x1309, { 0xd6, 0x8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2fdf, gbc.sp());
        EXPECT(0x130b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02DA
        gbc.setState(0x2c91, 0x4623, 0xfdc0, 0x51fb, 0xdc0f, 0x6a2e, 0x1, 0x1);
        gbc.writeMem(0x2c91, { 0xd6, 0xeb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02DB
        gbc.setState(0xa620, 0x6804, 0x7ea0, 0x4743, 0x29e9, 0x9e5e, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0xd6, 0xc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6804, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa620));
        EXPECT(0xc, gbc.readMem(0xa621));
        // D6 02DC
        gbc.setState(0x9ce6, 0x9183, 0x2480, 0x6fc2, 0x7f0e, 0x791a, 0x1, 0x0);
        gbc.writeMem(0x9ce6, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9183, gbc.sp());
        EXPECT(0x9ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9ce6));
        EXPECT(0x36, gbc.readMem(0x9ce7));
        // D6 02DE
        gbc.setState(0x69a, 0xf681, 0x3bd0, 0x96be, 0xfc8d, 0x475d, 0x1, 0x0);
        gbc.writeMem(0x69a, { 0xd6, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02DF
        gbc.setState(0x91d0, 0xd581, 0xb820, 0xf4c0, 0x134b, 0xa133, 0x0, 0x1);
        gbc.writeMem(0x91d0, { 0xd6, 0x11 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd581, gbc.sp());
        EXPECT(0x91d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x91d0));
        EXPECT(0x11, gbc.readMem(0x91d1));
        // D6 02E0
        gbc.setState(0xd71f, 0xba1b, 0x77e0, 0x6755, 0xb81d, 0x444d, 0x0, 0x1);
        gbc.writeMem(0xd71f, { 0xd6, 0xc6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xba1b, gbc.sp());
        EXPECT(0xd721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd71f));
        EXPECT(0xc6, gbc.readMem(0xd720));
        // D6 02E1
        gbc.setState(0x2cbf, 0xe7ed, 0x1e30, 0x5df5, 0x5b9a, 0x3902, 0x1, 0x1);
        gbc.writeMem(0x2cbf, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe7ed, gbc.sp());
        EXPECT(0x2cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02E2
        gbc.setState(0x4052, 0x5cd, 0x6820, 0xd18b, 0xc79d, 0xc2a5, 0x0, 0x0);
        gbc.writeMem(0x4052, { 0xd6, 0x23 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5cd, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02E4
        gbc.setState(0x79fb, 0x984e, 0x9d60, 0x6b7c, 0xf77e, 0xaaad, 0x0, 0x0);
        gbc.writeMem(0x79fb, { 0xd6, 0x9e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x984e, gbc.sp());
        EXPECT(0x79fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02E5
        gbc.setState(0xa656, 0x53b8, 0x9710, 0xf7d3, 0x6ebe, 0x6404, 0x0, 0x0);
        gbc.writeMem(0xa656, { 0xd6, 0x17 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x53b8, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa656));
        EXPECT(0x17, gbc.readMem(0xa657));
        // D6 02E6
        gbc.setState(0x3d00, 0x914d, 0xd460, 0xc9d8, 0xe45a, 0xe172, 0x1, 0x1);
        gbc.writeMem(0x3d00, { 0xd6, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x3d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02E7
        gbc.setState(0x6381, 0x9072, 0x4ef0, 0x1a54, 0x8470, 0xc514, 0x0, 0x0);
        gbc.writeMem(0x6381, { 0xd6, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0x6383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02E8
        gbc.setState(0xbb16, 0x3b89, 0x13f0, 0x7591, 0x72a7, 0x8a9f, 0x0, 0x1);
        gbc.writeMem(0xbb16, { 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0xbb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbb16));
        EXPECT(0xe4, gbc.readMem(0xbb17));
        // D6 02E9
        gbc.setState(0xb525, 0xa799, 0x2b20, 0x5ed3, 0x42, 0x3d84, 0x0, 0x1);
        gbc.writeMem(0xb525, { 0xd6, 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0xb527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb525));
        EXPECT(0x8a, gbc.readMem(0xb526));
        // D6 02EA
        gbc.setState(0x27d, 0xcdb8, 0xb260, 0x5356, 0xbb78, 0xa903, 0x0, 0x0);
        gbc.writeMem(0x27d, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02EB
        gbc.setState(0xee09, 0x60b6, 0xd4c0, 0xf58d, 0x6bb5, 0xecb7, 0x1, 0x1);
        gbc.writeMem(0xee09, { 0xd6, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xee09));
        EXPECT(0xd2, gbc.readMem(0xee0a));
        // D6 02EC
        gbc.setState(0x42d8, 0xa118, 0x3e60, 0xfd35, 0xcb07, 0x76a9, 0x0, 0x0);
        gbc.writeMem(0x42d8, { 0xd6, 0x95 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02ED
        gbc.setState(0xbd70, 0xdb92, 0x3e20, 0x9c, 0x5751, 0x51bd, 0x1, 0x1);
        gbc.writeMem(0xbd70, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0xbd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbd70));
        EXPECT(0xf7, gbc.readMem(0xbd71));
        // D6 02EE
        gbc.setState(0x642d, 0x16f1, 0x4bf0, 0x2e4f, 0xfafb, 0x7536, 0x1, 0x0);
        gbc.writeMem(0x642d, { 0xd6, 0x27 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x16f1, gbc.sp());
        EXPECT(0x642f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02EF
        gbc.setState(0xd474, 0x8a46, 0xffd0, 0x423e, 0x31a7, 0xd396, 0x0, 0x1);
        gbc.writeMem(0xd474, { 0xd6, 0x48 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8a46, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd474));
        EXPECT(0x48, gbc.readMem(0xd475));
        // D6 02F0
        gbc.setState(0x83b, 0x6ae3, 0x9370, 0x1fd, 0x7176, 0xc0c, 0x0, 0x1);
        gbc.writeMem(0x83b, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ae3, gbc.sp());
        EXPECT(0x83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02F1
        gbc.setState(0xcd83, 0x3375, 0x78e0, 0x14e4, 0xc774, 0x9238, 0x1, 0x1);
        gbc.writeMem(0xcd83, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcd83));
        EXPECT(0x93, gbc.readMem(0xcd84));
        // D6 02F2
        gbc.setState(0xcbfe, 0xd3b, 0xacd0, 0x19dc, 0x6e24, 0x25f8, 0x1, 0x0);
        gbc.writeMem(0xcbfe, { 0xd6, 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd3b, gbc.sp());
        EXPECT(0xcc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcbfe));
        EXPECT(0x65, gbc.readMem(0xcbff));
        // D6 02F3
        gbc.setState(0x38e1, 0xa95a, 0x9710, 0x7c82, 0xb2eb, 0x7fcf, 0x1, 0x1);
        gbc.writeMem(0x38e1, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa95a, gbc.sp());
        EXPECT(0x38e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02F5
        gbc.setState(0xb41b, 0x8a5c, 0x8690, 0xe719, 0xaa96, 0x3d1d, 0x0, 0x1);
        gbc.writeMem(0xb41b, { 0xd6, 0x58 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8a5c, gbc.sp());
        EXPECT(0xb41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb41b));
        EXPECT(0x58, gbc.readMem(0xb41c));
        // D6 02F7
        gbc.setState(0x2091, 0x764, 0x4b10, 0x8608, 0xea56, 0xb94b, 0x1, 0x1);
        gbc.writeMem(0x2091, { 0xd6, 0x1e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x2093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02F8
        gbc.setState(0xc0da, 0x7e6b, 0xe270, 0x484d, 0xe3cf, 0x8b0f, 0x0, 0x0);
        gbc.writeMem(0xc0da, { 0xd6, 0x62 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0xc0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc0da));
        EXPECT(0x62, gbc.readMem(0xc0db));
        // D6 02FA
        gbc.setState(0x332, 0xea18, 0xb7d0, 0x424, 0x9eab, 0x350a, 0x1, 0x1);
        gbc.writeMem(0x332, { 0xd6, 0x2a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xea18, gbc.sp());
        EXPECT(0x334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02FB
        gbc.setState(0xc54b, 0xc298, 0xbab0, 0xb8c3, 0x78b0, 0xe329, 0x1, 0x0);
        gbc.writeMem(0xc54b, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc298, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc54b));
        EXPECT(0x39, gbc.readMem(0xc54c));
        // D6 02FC
        gbc.setState(0xea28, 0x298e, 0x9510, 0xbacd, 0x434c, 0xe335, 0x1, 0x0);
        gbc.writeMem(0xea28, { 0xd6, 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x298e, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xea28));
        EXPECT(0x85, gbc.readMem(0xea29));
        // D6 02FD
        gbc.setState(0x1ff2, 0x3930, 0xf020, 0x3ff6, 0x7277, 0x6904, 0x0, 0x0);
        gbc.writeMem(0x1ff2, { 0xd6, 0xd6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3930, gbc.sp());
        EXPECT(0x1ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 02FE
        gbc.setState(0x3a92, 0xe4b, 0x30f0, 0x9b66, 0x294f, 0xb654, 0x1, 0x0);
        gbc.writeMem(0x3a92, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 02FF
        gbc.setState(0xecdf, 0xae61, 0xa8f0, 0x880d, 0xc8b0, 0x3c76, 0x1, 0x0);
        gbc.writeMem(0xecdf, { 0xd6, 0x2e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0xece1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xecdf));
        EXPECT(0x2e, gbc.readMem(0xece0));
        // D6 0300
        gbc.setState(0x8f96, 0xa266, 0x3ea0, 0x212d, 0xb5b5, 0xa1b6, 0x1, 0x0);
        gbc.writeMem(0x8f96, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa266, gbc.sp());
        EXPECT(0x8f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8f96));
        EXPECT(0xc5, gbc.readMem(0x8f97));
        // D6 0301
        gbc.setState(0x55a4, 0x2a78, 0x7990, 0x5d40, 0xa40f, 0x2cb1, 0x1, 0x1);
        gbc.writeMem(0x55a4, { 0xd6, 0xf3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a78, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0302
        gbc.setState(0x3fed, 0x53bf, 0x7bb0, 0x7c1a, 0x46d3, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0xd6, 0xc0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x53bf, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0303
        gbc.setState(0x4905, 0x9a36, 0x8e10, 0x3425, 0xc8b0, 0x3993, 0x0, 0x0);
        gbc.writeMem(0x4905, { 0xd6, 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0304
        gbc.setState(0x358b, 0x8c52, 0xbdf0, 0x7729, 0x6c86, 0xa243, 0x0, 0x0);
        gbc.writeMem(0x358b, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8c52, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0305
        gbc.setState(0x8da7, 0x6d9e, 0xa630, 0x6dd9, 0xd876, 0x7361, 0x1, 0x0);
        gbc.writeMem(0x8da7, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6d9e, gbc.sp());
        EXPECT(0x8da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8da7));
        EXPECT(0xad, gbc.readMem(0x8da8));
        // D6 0306
        gbc.setState(0x643a, 0xcc37, 0xe360, 0xa9cc, 0x6303, 0xb885, 0x1, 0x1);
        gbc.writeMem(0x643a, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcc37, gbc.sp());
        EXPECT(0x643c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0307
        gbc.setState(0xcbc5, 0x220a, 0xbfc0, 0x2f30, 0xe281, 0xaf64, 0x0, 0x1);
        gbc.writeMem(0xcbc5, { 0xd6, 0x3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x220a, gbc.sp());
        EXPECT(0xcbc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcbc5));
        EXPECT(0x3, gbc.readMem(0xcbc6));
        // D6 0308
        gbc.setState(0xb40b, 0x4e0b, 0x8c40, 0x3beb, 0x8701, 0x9709, 0x1, 0x0);
        gbc.writeMem(0xb40b, { 0xd6, 0xb6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0xb40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb40b));
        EXPECT(0xb6, gbc.readMem(0xb40c));
        // D6 0309
        gbc.setState(0xa5df, 0xb2d0, 0xd190, 0xdec2, 0xd898, 0x4a52, 0x1, 0x1);
        gbc.writeMem(0xa5df, { 0xd6, 0x14 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa5df));
        EXPECT(0x14, gbc.readMem(0xa5e0));
        // D6 030A
        gbc.setState(0x3066, 0x6ec0, 0x7f00, 0x64c1, 0x826a, 0x24b2, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0xd6, 0x93 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6ec0, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 030B
        gbc.setState(0xb6cd, 0xab3, 0xe940, 0xc7e6, 0xf81c, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0xb6cd, { 0xd6, 0xd9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0xb6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb6cd));
        EXPECT(0xd9, gbc.readMem(0xb6ce));
        // D6 030D
        gbc.setState(0xb621, 0x1e1f, 0x1020, 0xd406, 0x7501, 0x1a51, 0x1, 0x0);
        gbc.writeMem(0xb621, { 0xd6, 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1e1f, gbc.sp());
        EXPECT(0xb623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb621));
        EXPECT(0xbd, gbc.readMem(0xb622));
        // D6 030E
        gbc.setState(0xe554, 0x2155, 0xc120, 0xd23e, 0x1c25, 0x48a9, 0x1, 0x1);
        gbc.writeMem(0xe554, { 0xd6, 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe554));
        EXPECT(0x43, gbc.readMem(0xe555));
        // D6 030F
        gbc.setState(0xb7b, 0x7368, 0x13c0, 0x443b, 0x1666, 0x4117, 0x1, 0x1);
        gbc.writeMem(0xb7b, { 0xd6, 0x64 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7368, gbc.sp());
        EXPECT(0xb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0310
        gbc.setState(0xaac9, 0x3e94, 0xaa80, 0x1294, 0xfc53, 0x48ad, 0x0, 0x0);
        gbc.writeMem(0xaac9, { 0xd6, 0x2b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3e94, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaac9));
        EXPECT(0x2b, gbc.readMem(0xaaca));
        // D6 0311
        gbc.setState(0x303f, 0x4eea, 0xef0, 0xef57, 0xfe10, 0x3596, 0x1, 0x1);
        gbc.writeMem(0x303f, { 0xd6, 0xda });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0x3041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0312
        gbc.setState(0xc32d, 0xed9f, 0x3da0, 0x1da6, 0x7227, 0xc297, 0x0, 0x0);
        gbc.writeMem(0xc32d, { 0xd6, 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xed9f, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc32d));
        EXPECT(0x9b, gbc.readMem(0xc32e));
        // D6 0313
        gbc.setState(0xd8ae, 0xef67, 0xd530, 0xf5, 0x56c4, 0xc2c1, 0x1, 0x0);
        gbc.writeMem(0xd8ae, { 0xd6, 0x45 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef67, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd8ae));
        EXPECT(0x45, gbc.readMem(0xd8af));
        // D6 0314
        gbc.setState(0x6b00, 0x6eff, 0x50a0, 0x5ce2, 0xbc70, 0xfbcd, 0x1, 0x1);
        gbc.writeMem(0x6b00, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0315
        gbc.setState(0x522f, 0x5083, 0xe10, 0x54a7, 0xdf82, 0x81bf, 0x1, 0x1);
        gbc.writeMem(0x522f, { 0xd6, 0x77 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0x5231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0316
        gbc.setState(0x2979, 0xc4ba, 0xb2c0, 0x66fe, 0x8d9f, 0x863a, 0x1, 0x1);
        gbc.writeMem(0x2979, { 0xd6, 0xae });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc4ba, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0317
        gbc.setState(0x1a56, 0x4504, 0xa130, 0x7cc, 0x695a, 0xaf06, 0x1, 0x0);
        gbc.writeMem(0x1a56, { 0xd6, 0xf6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4504, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0319
        gbc.setState(0x22f6, 0xe5d7, 0xd90, 0x96fe, 0xdf2, 0xa444, 0x1, 0x0);
        gbc.writeMem(0x22f6, { 0xd6, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe5d7, gbc.sp());
        EXPECT(0x22f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 031A
        gbc.setState(0x6c84, 0xede9, 0x8ed0, 0x7929, 0x49d, 0x47e1, 0x0, 0x0);
        gbc.writeMem(0x6c84, { 0xd6, 0x4e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xede9, gbc.sp());
        EXPECT(0x6c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 031B
        gbc.setState(0x8d89, 0xfd65, 0x3960, 0x3a01, 0xc710, 0xac3e, 0x1, 0x1);
        gbc.writeMem(0x8d89, { 0xd6, 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfd65, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8d89));
        EXPECT(0x79, gbc.readMem(0x8d8a));
        // D6 031C
        gbc.setState(0x4a8b, 0xeb86, 0x22f0, 0xd3a3, 0xd0e2, 0x6bb7, 0x1, 0x1);
        gbc.writeMem(0x4a8b, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeb86, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 031D
        gbc.setState(0x2029, 0x9e5b, 0x8740, 0xfe4c, 0xd3ef, 0x6ec7, 0x1, 0x1);
        gbc.writeMem(0x2029, { 0xd6, 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9e5b, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 031E
        gbc.setState(0x2668, 0x8145, 0x7af0, 0x6963, 0xd349, 0xb7d9, 0x0, 0x1);
        gbc.writeMem(0x2668, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0x266a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 031F
        gbc.setState(0xab04, 0xb736, 0x9da0, 0x6b73, 0x21d0, 0xace, 0x1, 0x1);
        gbc.writeMem(0xab04, { 0xd6, 0x9d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb736, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xab04));
        EXPECT(0x9d, gbc.readMem(0xab05));
        // D6 0320
        gbc.setState(0x811d, 0x2f66, 0x5b50, 0x9187, 0xdaba, 0x83aa, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f66, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x811d));
        EXPECT(0x16, gbc.readMem(0x811e));
        // D6 0321
        gbc.setState(0xc4b8, 0x20dd, 0x1310, 0xe6ae, 0xe7c6, 0x781f, 0x0, 0x1);
        gbc.writeMem(0xc4b8, { 0xd6, 0x3a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x20dd, gbc.sp());
        EXPECT(0xc4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc4b8));
        EXPECT(0x3a, gbc.readMem(0xc4b9));
        // D6 0322
        gbc.setState(0x3cf5, 0xde9b, 0x3910, 0x6a29, 0x340f, 0x4646, 0x0, 0x1);
        gbc.writeMem(0x3cf5, { 0xd6, 0x6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xde9b, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0323
        gbc.setState(0x9fe3, 0x4ab1, 0xb940, 0xf786, 0x6a69, 0x4075, 0x0, 0x0);
        gbc.writeMem(0x9fe3, { 0xd6, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4ab1, gbc.sp());
        EXPECT(0x9fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9fe3));
        EXPECT(0x0, gbc.readMem(0x9fe4));
        // D6 0324
        gbc.setState(0x74be, 0x44e9, 0xbd10, 0x619a, 0x9088, 0xf06e, 0x0, 0x0);
        gbc.writeMem(0x74be, { 0xd6, 0x4c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x44e9, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0325
        gbc.setState(0xa58, 0xfb71, 0xbed0, 0x75a4, 0xcb86, 0xaa09, 0x1, 0x1);
        gbc.writeMem(0xa58, { 0xd6, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0xa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0326
        gbc.setState(0x9ae0, 0x49ce, 0xbad0, 0x4636, 0x1ab1, 0xe6c, 0x1, 0x1);
        gbc.writeMem(0x9ae0, { 0xd6, 0x64 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x49ce, gbc.sp());
        EXPECT(0x9ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9ae0));
        EXPECT(0x64, gbc.readMem(0x9ae1));
        // D6 0327
        gbc.setState(0x7dfd, 0x3a3a, 0x88f0, 0x258d, 0x91f9, 0xa375, 0x0, 0x1);
        gbc.writeMem(0x7dfd, { 0xd6, 0xce });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a3a, gbc.sp());
        EXPECT(0x7dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0328
        gbc.setState(0x5ab8, 0xdec0, 0x1300, 0x6ed3, 0xb59d, 0x7a03, 0x0, 0x0);
        gbc.writeMem(0x5ab8, { 0xd6, 0x2b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdec0, gbc.sp());
        EXPECT(0x5aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0329
        gbc.setState(0x5d3e, 0xd506, 0x300, 0x7482, 0x850f, 0xb2b8, 0x0, 0x1);
        gbc.writeMem(0x5d3e, { 0xd6, 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0x5d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 032A
        gbc.setState(0x4d8d, 0xb49d, 0x3130, 0x32f3, 0x14f5, 0x1571, 0x1, 0x0);
        gbc.writeMem(0x4d8d, { 0xd6, 0xe7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb49d, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 032B
        gbc.setState(0x35c5, 0x6d33, 0x4a80, 0xe8d5, 0xc768, 0xd3ca, 0x0, 0x0);
        gbc.writeMem(0x35c5, { 0xd6, 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6d33, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 032C
        gbc.setState(0xefe6, 0x1f71, 0x3940, 0xb50e, 0x8ada, 0x6453, 0x1, 0x0);
        gbc.writeMem(0xefe6, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xefe6));
        EXPECT(0x1f, gbc.readMem(0xefe7));
        // D6 032D
        gbc.setState(0x3961, 0x1916, 0xd5e0, 0x9393, 0x5dbb, 0xcc10, 0x1, 0x1);
        gbc.writeMem(0x3961, { 0xd6, 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1916, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 032E
        gbc.setState(0x3350, 0x9183, 0x38c0, 0x56f5, 0x33cf, 0xd937, 0x1, 0x0);
        gbc.writeMem(0x3350, { 0xd6, 0x99 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9183, gbc.sp());
        EXPECT(0x3352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 032F
        gbc.setState(0x7fea, 0xcf75, 0x3e90, 0xef13, 0xfe55, 0xa7eb, 0x1, 0x0);
        gbc.writeMem(0x7fea, { 0xd6, 0x55 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0x7fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0330
        gbc.setState(0x2f4f, 0xbc57, 0xf050, 0xd598, 0x5e13, 0x9aef, 0x1, 0x0);
        gbc.writeMem(0x2f4f, { 0xd6, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc57, gbc.sp());
        EXPECT(0x2f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0331
        gbc.setState(0xe942, 0xd73c, 0x8f90, 0x34fd, 0x8f9a, 0x750f, 0x0, 0x1);
        gbc.writeMem(0xe942, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd73c, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe942));
        EXPECT(0xd0, gbc.readMem(0xe943));
        // D6 0332
        gbc.setState(0x2adf, 0x6e26, 0xc2a0, 0x8165, 0x77fa, 0x595e, 0x1, 0x0);
        gbc.writeMem(0x2adf, { 0xd6, 0xfc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6e26, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0333
        gbc.setState(0x3f67, 0x5ccf, 0xd340, 0xd89c, 0xdcab, 0x6ded, 0x0, 0x0);
        gbc.writeMem(0x3f67, { 0xd6, 0x5a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5ccf, gbc.sp());
        EXPECT(0x3f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0334
        gbc.setState(0xe9d1, 0xaccd, 0xf610, 0x27a3, 0xee1c, 0xcca5, 0x0, 0x0);
        gbc.writeMem(0xe9d1, { 0xd6, 0x88 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaccd, gbc.sp());
        EXPECT(0xe9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe9d1));
        EXPECT(0x88, gbc.readMem(0xe9d2));
        // D6 0335
        gbc.setState(0x4298, 0xb07b, 0x8a70, 0x6323, 0x3db4, 0xe711, 0x1, 0x0);
        gbc.writeMem(0x4298, { 0xd6, 0x50 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb07b, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0336
        gbc.setState(0x5045, 0x777e, 0xcdb0, 0xa5cb, 0xfb16, 0x3920, 0x0, 0x1);
        gbc.writeMem(0x5045, { 0xd6, 0x2f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0337
        gbc.setState(0xb9e7, 0x7ffd, 0x1a40, 0xeb5d, 0x73d8, 0x9171, 0x0, 0x1);
        gbc.writeMem(0xb9e7, { 0xd6, 0xf5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7ffd, gbc.sp());
        EXPECT(0xb9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb9e7));
        EXPECT(0xf5, gbc.readMem(0xb9e8));
        // D6 0338
        gbc.setState(0x6a88, 0x828c, 0x88d0, 0xefb4, 0x583b, 0xbc5c, 0x1, 0x0);
        gbc.writeMem(0x6a88, { 0xd6, 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x828c, gbc.sp());
        EXPECT(0x6a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0339
        gbc.setState(0x115e, 0x5402, 0x69b0, 0xa15c, 0xd1b, 0x441c, 0x0, 0x1);
        gbc.writeMem(0x115e, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5402, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 033A
        gbc.setState(0x1364, 0xbdc4, 0x1790, 0xfbcc, 0x62cf, 0xa14f, 0x1, 0x0);
        gbc.writeMem(0x1364, { 0xd6, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbdc4, gbc.sp());
        EXPECT(0x1366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 033B
        gbc.setState(0x46f2, 0x3b, 0x1e30, 0x2a14, 0xa30, 0xafc3, 0x1, 0x0);
        gbc.writeMem(0x46f2, { 0xd6, 0x32 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3b, gbc.sp());
        EXPECT(0x46f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 033D
        gbc.setState(0xeed, 0xe1cc, 0x4540, 0x6d8f, 0x3089, 0xc295, 0x0, 0x1);
        gbc.writeMem(0xeed, { 0xd6, 0x90 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe1cc, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 033E
        gbc.setState(0xa1f0, 0x99d, 0x98d0, 0x9418, 0x78e1, 0x80df, 0x0, 0x0);
        gbc.writeMem(0xa1f0, { 0xd6, 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa1f0));
        EXPECT(0x7d, gbc.readMem(0xa1f1));
        // D6 033F
        gbc.setState(0x71e6, 0xfbe0, 0x2330, 0x5c78, 0x8862, 0xdfb3, 0x0, 0x1);
        gbc.writeMem(0x71e6, { 0xd6, 0x2e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x71e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0340
        gbc.setState(0xe5e9, 0xb04f, 0x3220, 0x706e, 0x56f7, 0x2887, 0x0, 0x1);
        gbc.writeMem(0xe5e9, { 0xd6, 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb04f, gbc.sp());
        EXPECT(0xe5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe5e9));
        EXPECT(0xb7, gbc.readMem(0xe5ea));
        // D6 0341
        gbc.setState(0x1fbf, 0x1005, 0xad50, 0xb847, 0x905c, 0x6b69, 0x0, 0x1);
        gbc.writeMem(0x1fbf, { 0xd6, 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1005, gbc.sp());
        EXPECT(0x1fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0342
        gbc.setState(0x166f, 0xe79, 0x1000, 0x741a, 0xe17c, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe79, gbc.sp());
        EXPECT(0x1671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0343
        gbc.setState(0xafbf, 0x8f90, 0xb890, 0x56a4, 0x1a1f, 0x8cb, 0x1, 0x1);
        gbc.writeMem(0xafbf, { 0xd6, 0xe2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8f90, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xafbf));
        EXPECT(0xe2, gbc.readMem(0xafc0));
        // D6 0344
        gbc.setState(0xee3a, 0x483d, 0x3010, 0x15ce, 0xa178, 0x9b0c, 0x1, 0x0);
        gbc.writeMem(0xee3a, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xee3a));
        EXPECT(0xd7, gbc.readMem(0xee3b));
        // D6 0345
        gbc.setState(0x7a61, 0x5988, 0x14f0, 0xf944, 0xc75b, 0x50ce, 0x0, 0x0);
        gbc.writeMem(0x7a61, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5988, gbc.sp());
        EXPECT(0x7a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0346
        gbc.setState(0x54b, 0x9653, 0x7100, 0x1c0d, 0x4cd, 0x6413, 0x1, 0x1);
        gbc.writeMem(0x54b, { 0xd6, 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9653, gbc.sp());
        EXPECT(0x54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0348
        gbc.setState(0x5665, 0xa737, 0xfc30, 0x492, 0x8dcf, 0xc48d, 0x1, 0x0);
        gbc.writeMem(0x5665, { 0xd6, 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0x5667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0349
        gbc.setState(0x7111, 0x4ea3, 0xec60, 0xef93, 0x2b52, 0x2ccd, 0x1, 0x0);
        gbc.writeMem(0x7111, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0x7113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 034A
        gbc.setState(0x84fb, 0x48d1, 0xb3f0, 0x253b, 0x94bd, 0x1fd7, 0x0, 0x0);
        gbc.writeMem(0x84fb, { 0xd6, 0x71 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x48d1, gbc.sp());
        EXPECT(0x84fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x84fb));
        EXPECT(0x71, gbc.readMem(0x84fc));
        // D6 034B
        gbc.setState(0x8653, 0xa50c, 0xd870, 0x7b7b, 0x9762, 0x7e73, 0x0, 0x0);
        gbc.writeMem(0x8653, { 0xd6, 0xa9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8653));
        EXPECT(0xa9, gbc.readMem(0x8654));
        // D6 034C
        gbc.setState(0x772, 0x4152, 0x32a0, 0x84b9, 0xbd1c, 0x38db, 0x0, 0x0);
        gbc.writeMem(0x772, { 0xd6, 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4152, gbc.sp());
        EXPECT(0x774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 034D
        gbc.setState(0x7eb7, 0xcf3d, 0xafd0, 0x93fb, 0xed14, 0x768d, 0x0, 0x0);
        gbc.writeMem(0x7eb7, { 0xd6, 0x1e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 034E
        gbc.setState(0xa5f1, 0xc520, 0x5190, 0x8e61, 0xeca4, 0xbc89, 0x1, 0x0);
        gbc.writeMem(0xa5f1, { 0xd6, 0xe6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc520, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa5f1));
        EXPECT(0xe6, gbc.readMem(0xa5f2));
        // D6 034F
        gbc.setState(0x39ef, 0x7681, 0x24b0, 0xb25a, 0x771b, 0x32ba, 0x1, 0x0);
        gbc.writeMem(0x39ef, { 0xd6, 0xc7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7681, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0350
        gbc.setState(0x54fc, 0xf27, 0x3320, 0x8c63, 0x54e1, 0xb2b9, 0x1, 0x0);
        gbc.writeMem(0x54fc, { 0xd6, 0xfb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf27, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0351
        gbc.setState(0xcb93, 0x4fad, 0x5e90, 0x8b6d, 0x5a15, 0xc1bb, 0x1, 0x0);
        gbc.writeMem(0xcb93, { 0xd6, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4fad, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcb93));
        EXPECT(0x12, gbc.readMem(0xcb94));
        // D6 0352
        gbc.setState(0xd89, 0xbb0e, 0x3c40, 0xb27b, 0x6db7, 0x1047, 0x1, 0x1);
        gbc.writeMem(0xd89, { 0xd6, 0xca });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbb0e, gbc.sp());
        EXPECT(0xd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0353
        gbc.setState(0x9ecc, 0xee63, 0x9fc0, 0xfe66, 0x36b5, 0x95b3, 0x0, 0x1);
        gbc.writeMem(0x9ecc, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xee63, gbc.sp());
        EXPECT(0x9ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9ecc));
        EXPECT(0xaf, gbc.readMem(0x9ecd));
        // D6 0354
        gbc.setState(0xb1ef, 0x51b0, 0xb9f0, 0x9830, 0x7476, 0x8018, 0x0, 0x1);
        gbc.writeMem(0xb1ef, { 0xd6, 0x22 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x51b0, gbc.sp());
        EXPECT(0xb1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb1ef));
        EXPECT(0x22, gbc.readMem(0xb1f0));
        // D6 0355
        gbc.setState(0x9564, 0x5695, 0x9c70, 0xa32a, 0x5bfd, 0x7199, 0x1, 0x0);
        gbc.writeMem(0x9564, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5695, gbc.sp());
        EXPECT(0x9566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9564));
        EXPECT(0x3b, gbc.readMem(0x9565));
        // D6 0356
        gbc.setState(0x937b, 0xae82, 0xe690, 0xef84, 0x891d, 0x79e1, 0x1, 0x0);
        gbc.writeMem(0x937b, { 0xd6, 0xc4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0x937d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x937b));
        EXPECT(0xc4, gbc.readMem(0x937c));
        // D6 0358
        gbc.setState(0x1e39, 0x4b76, 0xfc90, 0xe2a6, 0x1098, 0x67f9, 0x1, 0x0);
        gbc.writeMem(0x1e39, { 0xd6, 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0359
        gbc.setState(0xa37, 0x55d7, 0xa500, 0x268, 0x4e93, 0x89be, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x55d7, gbc.sp());
        EXPECT(0xa39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 035A
        gbc.setState(0x71dd, 0x26be, 0x46f0, 0x22aa, 0x49fc, 0xe1e9, 0x0, 0x1);
        gbc.writeMem(0x71dd, { 0xd6, 0x92 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0x71df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 035C
        gbc.setState(0x9933, 0x6fda, 0x2070, 0x5354, 0xfea5, 0x1a8a, 0x0, 0x1);
        gbc.writeMem(0x9933, { 0xd6, 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0x9935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9933));
        EXPECT(0xb7, gbc.readMem(0x9934));
        // D6 035D
        gbc.setState(0x9d43, 0x6570, 0x6130, 0xb59, 0xe86d, 0x9b6d, 0x0, 0x0);
        gbc.writeMem(0x9d43, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6570, gbc.sp());
        EXPECT(0x9d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9d43));
        EXPECT(0x53, gbc.readMem(0x9d44));
        // D6 035E
        gbc.setState(0x8e14, 0x8690, 0x5950, 0x8dc4, 0xe5ff, 0xcf34, 0x1, 0x1);
        gbc.writeMem(0x8e14, { 0xd6, 0x84 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8690, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8e14));
        EXPECT(0x84, gbc.readMem(0x8e15));
        // D6 035F
        gbc.setState(0x28c9, 0xfcb6, 0x3970, 0x3565, 0x7a88, 0x6f3c, 0x0, 0x0);
        gbc.writeMem(0x28c9, { 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfcb6, gbc.sp());
        EXPECT(0x28cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0360
        gbc.setState(0x5209, 0x5744, 0x71d0, 0x4475, 0x1447, 0x8949, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xd6, 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5744, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0361
        gbc.setState(0x1aba, 0xe2ce, 0x32a0, 0xfbcd, 0x11dc, 0x5b59, 0x1, 0x0);
        gbc.writeMem(0x1aba, { 0xd6, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe2ce, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0362
        gbc.setState(0x2060, 0x9650, 0x7d10, 0xbd2d, 0xa549, 0x967e, 0x0, 0x1);
        gbc.writeMem(0x2060, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x2062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0363
        gbc.setState(0x527e, 0xb722, 0x3440, 0x2fac, 0xd127, 0x552a, 0x0, 0x1);
        gbc.writeMem(0x527e, { 0xd6, 0x60 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0364
        gbc.setState(0x18e5, 0x7a3, 0xcff0, 0x450b, 0x6c63, 0xcd77, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7a3, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0365
        gbc.setState(0x7ab5, 0xaf9c, 0x5470, 0x68b1, 0x429b, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0x7ab5, { 0xd6, 0xca });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaf9c, gbc.sp());
        EXPECT(0x7ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0366
        gbc.setState(0x305, 0x41d2, 0x5090, 0xd22f, 0xcaa, 0x5c03, 0x1, 0x1);
        gbc.writeMem(0x305, { 0xd6, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x41d2, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0367
        gbc.setState(0x5317, 0x61ca, 0xb250, 0xe496, 0x878d, 0x331, 0x0, 0x1);
        gbc.writeMem(0x5317, { 0xd6, 0xc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x61ca, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0368
        gbc.setState(0xce9d, 0x63eb, 0xb040, 0x7e90, 0xaeef, 0x327a, 0x0, 0x1);
        gbc.writeMem(0xce9d, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x63eb, gbc.sp());
        EXPECT(0xce9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xce9d));
        EXPECT(0x36, gbc.readMem(0xce9e));
        // D6 036A
        gbc.setState(0x9ca6, 0x4571, 0xa4f0, 0xc440, 0x75ae, 0x9061, 0x1, 0x1);
        gbc.writeMem(0x9ca6, { 0xd6, 0xe6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4571, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9ca6));
        EXPECT(0xe6, gbc.readMem(0x9ca7));
        // D6 036B
        gbc.setState(0x4d3b, 0x8bb5, 0xbf00, 0x8c06, 0xc4b7, 0x704a, 0x0, 0x0);
        gbc.writeMem(0x4d3b, { 0xd6, 0xdf });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8bb5, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 036C
        gbc.setState(0xa3ad, 0x978b, 0xc6b0, 0x22d7, 0x3697, 0xd1f4, 0x0, 0x1);
        gbc.writeMem(0xa3ad, { 0xd6, 0xa6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa3ad));
        EXPECT(0xa6, gbc.readMem(0xa3ae));
        // D6 036D
        gbc.setState(0x5a42, 0xe9b3, 0xeb80, 0xe248, 0x8169, 0xbb39, 0x0, 0x0);
        gbc.writeMem(0x5a42, { 0xd6, 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0x5a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 036E
        gbc.setState(0xa657, 0x4b79, 0x5290, 0xcfe7, 0xc6db, 0x8fba, 0x1, 0x1);
        gbc.writeMem(0xa657, { 0xd6, 0x5c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4b79, gbc.sp());
        EXPECT(0xa659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa657));
        EXPECT(0x5c, gbc.readMem(0xa658));
        // D6 036F
        gbc.setState(0xe72b, 0x8d21, 0xcad0, 0xa129, 0x3ce5, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0xe72b, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8d21, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe72b));
        EXPECT(0xa3, gbc.readMem(0xe72c));
        // D6 0370
        gbc.setState(0x168d, 0x89a9, 0xa6f0, 0x39c7, 0xeb19, 0xd56, 0x1, 0x1);
        gbc.writeMem(0x168d, { 0xd6, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x89a9, gbc.sp());
        EXPECT(0x168f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0371
        gbc.setState(0x6263, 0xdda5, 0x17d0, 0xe548, 0x9c6e, 0x4522, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0xd6, 0x6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0x6265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0372
        gbc.setState(0xb381, 0x917b, 0x5150, 0x3ce8, 0x4ceb, 0x16aa, 0x0, 0x0);
        gbc.writeMem(0xb381, { 0xd6, 0x58 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb381));
        EXPECT(0x58, gbc.readMem(0xb382));
        // D6 0373
        gbc.setState(0x8ffe, 0x2f7, 0xac60, 0x441, 0x1767, 0x61a0, 0x1, 0x0);
        gbc.writeMem(0x8ffe, { 0xd6, 0xec });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2f7, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8ffe));
        EXPECT(0xec, gbc.readMem(0x8fff));
        // D6 0374
        gbc.setState(0xa571, 0x5697, 0xc8b0, 0x3ff5, 0xf21d, 0xc6b5, 0x0, 0x0);
        gbc.writeMem(0xa571, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5697, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa571));
        EXPECT(0xa, gbc.readMem(0xa572));
        // D6 0375
        gbc.setState(0x4bbd, 0xaa, 0xf820, 0xedd4, 0x5b3, 0x15b4, 0x1, 0x1);
        gbc.writeMem(0x4bbd, { 0xd6, 0xeb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaa, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0376
        gbc.setState(0x653d, 0x9e28, 0xbe80, 0x5a67, 0x88dc, 0x7a7e, 0x0, 0x1);
        gbc.writeMem(0x653d, { 0xd6, 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9e28, gbc.sp());
        EXPECT(0x653f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0377
        gbc.setState(0x105b, 0x33ae, 0x67b0, 0xf497, 0x9659, 0xa674, 0x1, 0x1);
        gbc.writeMem(0x105b, { 0xd6, 0xc7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x33ae, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0378
        gbc.setState(0x59ca, 0x49bd, 0x56a0, 0x7c35, 0x39f, 0x60f2, 0x0, 0x0);
        gbc.writeMem(0x59ca, { 0xd6, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0x59cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0379
        gbc.setState(0x72e3, 0x493e, 0xc1f0, 0x2c6c, 0x39fc, 0x9bb5, 0x1, 0x1);
        gbc.writeMem(0x72e3, { 0xd6, 0x5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x493e, gbc.sp());
        EXPECT(0x72e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 037A
        gbc.setState(0x2596, 0x1011, 0x5e60, 0x74d8, 0x43bd, 0x4c4d, 0x0, 0x0);
        gbc.writeMem(0x2596, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1011, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 037B
        gbc.setState(0x271b, 0xa683, 0x580, 0x698f, 0x7526, 0x26b6, 0x1, 0x1);
        gbc.writeMem(0x271b, { 0xd6, 0x4a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa683, gbc.sp());
        EXPECT(0x271d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 037C
        gbc.setState(0x55c5, 0x5157, 0x5c10, 0x3698, 0x44d9, 0x5649, 0x0, 0x1);
        gbc.writeMem(0x55c5, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5157, gbc.sp());
        EXPECT(0x55c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 037D
        gbc.setState(0xb25d, 0x89b9, 0xb7e0, 0x8f1b, 0x3b0d, 0xfc99, 0x1, 0x0);
        gbc.writeMem(0xb25d, { 0xd6, 0x6d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb25d));
        EXPECT(0x6d, gbc.readMem(0xb25e));
        // D6 037E
        gbc.setState(0x5353, 0xe161, 0xee60, 0x2949, 0x6a07, 0xc548, 0x1, 0x1);
        gbc.writeMem(0x5353, { 0xd6, 0x6e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 037F
        gbc.setState(0x1b20, 0xc6f9, 0xb6a0, 0x751c, 0x89, 0x9b8e, 0x0, 0x1);
        gbc.writeMem(0x1b20, { 0xd6, 0x1b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc6f9, gbc.sp());
        EXPECT(0x1b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0380
        gbc.setState(0xc384, 0xb100, 0xd680, 0xf46c, 0x6866, 0x3869, 0x0, 0x0);
        gbc.writeMem(0xc384, { 0xd6, 0xa1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb100, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc384));
        EXPECT(0xa1, gbc.readMem(0xc385));
        // D6 0381
        gbc.setState(0x5853, 0xd6a8, 0x55d0, 0xd484, 0xc8d8, 0x99c6, 0x0, 0x0);
        gbc.writeMem(0x5853, { 0xd6, 0xe6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0x5855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0382
        gbc.setState(0x18fe, 0x6109, 0x6ad0, 0x8c6c, 0xa3a2, 0xa23b, 0x1, 0x1);
        gbc.writeMem(0x18fe, { 0xd6, 0x1a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x1900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0383
        gbc.setState(0x7fd6, 0x8cf9, 0xfc40, 0xb8d9, 0xb8, 0xabce, 0x0, 0x1);
        gbc.writeMem(0x7fd6, { 0xd6, 0x42 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8cf9, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0384
        gbc.setState(0x6c0d, 0x25, 0x6f60, 0x6194, 0xf068, 0x6849, 0x0, 0x1);
        gbc.writeMem(0x6c0d, { 0xd6, 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x25, gbc.sp());
        EXPECT(0x6c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0385
        gbc.setState(0x76a9, 0xf815, 0x30, 0xbd74, 0x5bf3, 0x77f5, 0x1, 0x0);
        gbc.writeMem(0x76a9, { 0xd6, 0x63 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0x76ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0386
        gbc.setState(0xa28b, 0x2180, 0x2cd0, 0xf8a7, 0xd55e, 0xdbd1, 0x1, 0x0);
        gbc.writeMem(0xa28b, { 0xd6, 0x76 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa28b));
        EXPECT(0x76, gbc.readMem(0xa28c));
        // D6 0387
        gbc.setState(0xa0fd, 0x2ec2, 0x1160, 0x5280, 0x1ed2, 0x9ff1, 0x0, 0x1);
        gbc.writeMem(0xa0fd, { 0xd6, 0x7c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2ec2, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa0fd));
        EXPECT(0x7c, gbc.readMem(0xa0fe));
        // D6 0389
        gbc.setState(0xaae6, 0x17a1, 0xf6a0, 0x6a9c, 0xc5f1, 0xb080, 0x0, 0x0);
        gbc.writeMem(0xaae6, { 0xd6, 0xd6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x17a1, gbc.sp());
        EXPECT(0xaae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaae6));
        EXPECT(0xd6, gbc.readMem(0xaae7));
        // D6 038A
        gbc.setState(0x4a4e, 0x26f, 0xd680, 0x6706, 0xd11d, 0x53c6, 0x1, 0x1);
        gbc.writeMem(0x4a4e, { 0xd6, 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 038B
        gbc.setState(0xd8ad, 0x29a1, 0x89e0, 0x329d, 0x10ea, 0x9e40, 0x0, 0x0);
        gbc.writeMem(0xd8ad, { 0xd6, 0x52 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd8ad));
        EXPECT(0x52, gbc.readMem(0xd8ae));
        // D6 038C
        gbc.setState(0xea0c, 0x9519, 0xdde0, 0x241d, 0xd234, 0x3282, 0x1, 0x1);
        gbc.writeMem(0xea0c, { 0xd6, 0x25 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9519, gbc.sp());
        EXPECT(0xea0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xea0c));
        EXPECT(0x25, gbc.readMem(0xea0d));
        // D6 038D
        gbc.setState(0x7bf8, 0x7a85, 0xb1a0, 0x908c, 0xf59b, 0xd31d, 0x0, 0x0);
        gbc.writeMem(0x7bf8, { 0xd6, 0x36 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 038E
        gbc.setState(0xc40f, 0x9500, 0x4db0, 0x279d, 0x6c9d, 0xbe4d, 0x1, 0x0);
        gbc.writeMem(0xc40f, { 0xd6, 0xf0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9500, gbc.sp());
        EXPECT(0xc411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc40f));
        EXPECT(0xf0, gbc.readMem(0xc410));
        // D6 038F
        gbc.setState(0xd6a8, 0xeafc, 0xb930, 0x199b, 0xa10a, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0xd6a8, { 0xd6, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeafc, gbc.sp());
        EXPECT(0xd6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd6a8));
        EXPECT(0x97, gbc.readMem(0xd6a9));
        // D6 0390
        gbc.setState(0x97cc, 0x3c1d, 0xdb0, 0x5de, 0x6b99, 0xf7f5, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0xd6, 0xd7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x97cc));
        EXPECT(0xd7, gbc.readMem(0x97cd));
        // D6 0391
        gbc.setState(0x8320, 0x8073, 0x31a0, 0x62c3, 0x8d72, 0xab4e, 0x0, 0x0);
        gbc.writeMem(0x8320, { 0xd6, 0x16 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8073, gbc.sp());
        EXPECT(0x8322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8320));
        EXPECT(0x16, gbc.readMem(0x8321));
        // D6 0392
        gbc.setState(0x7369, 0xcc87, 0xddd0, 0x9542, 0x903d, 0x372a, 0x0, 0x0);
        gbc.writeMem(0x7369, { 0xd6, 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcc87, gbc.sp());
        EXPECT(0x736b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0393
        gbc.setState(0xeeb7, 0x4e58, 0x6e30, 0xf42c, 0x17f2, 0xd02, 0x1, 0x0);
        gbc.writeMem(0xeeb7, { 0xd6, 0xa0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4e58, gbc.sp());
        EXPECT(0xeeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeeb7));
        EXPECT(0xa0, gbc.readMem(0xeeb8));
        // D6 0394
        gbc.setState(0x3ec7, 0xf3dd, 0x38d0, 0x45f8, 0x57a4, 0x2396, 0x0, 0x1);
        gbc.writeMem(0x3ec7, { 0xd6, 0xc0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0395
        gbc.setState(0x9389, 0xd156, 0xdd70, 0xa051, 0xe5ee, 0xd143, 0x1, 0x1);
        gbc.writeMem(0x9389, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd156, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9389));
        EXPECT(0xf7, gbc.readMem(0x938a));
        // D6 0396
        gbc.setState(0x146, 0x2f01, 0xd450, 0x4b2f, 0xc847, 0xeb9b, 0x1, 0x0);
        gbc.writeMem(0x146, { 0xd6, 0xa4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2f01, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0397
        gbc.setState(0x3e5d, 0x91f, 0x2680, 0xd6d3, 0x192a, 0x5f03, 0x0, 0x1);
        gbc.writeMem(0x3e5d, { 0xd6, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x91f, gbc.sp());
        EXPECT(0x3e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 0398
        gbc.setState(0x7882, 0x69cb, 0xb490, 0x5df, 0x2cac, 0x8e3e, 0x0, 0x0);
        gbc.writeMem(0x7882, { 0xd6, 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x69cb, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 0399
        gbc.setState(0x64b, 0xbd71, 0x710, 0xbe7e, 0x6057, 0xffaa, 0x0, 0x0);
        gbc.writeMem(0x64b, { 0xd6, 0x71 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbd71, gbc.sp());
        EXPECT(0x64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 039A
        gbc.setState(0x671f, 0xb6cb, 0x70d0, 0x12e1, 0x920b, 0x8af3, 0x0, 0x0);
        gbc.writeMem(0x671f, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb6cb, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 039B
        gbc.setState(0xda4c, 0x56b5, 0x1520, 0x187c, 0xba06, 0xbb1f, 0x1, 0x1);
        gbc.writeMem(0xda4c, { 0xd6, 0x3b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0xda4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xda4c));
        EXPECT(0x3b, gbc.readMem(0xda4d));
        // D6 039C
        gbc.setState(0x91db, 0xf85, 0xd400, 0xbad2, 0x55a5, 0x984b, 0x0, 0x1);
        gbc.writeMem(0x91db, { 0xd6, 0xdc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf85, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x91db));
        EXPECT(0xdc, gbc.readMem(0x91dc));
        // D6 039D
        gbc.setState(0xa2a, 0xb13e, 0x2e40, 0x23c2, 0xd3a8, 0xbfdb, 0x0, 0x1);
        gbc.writeMem(0xa2a, { 0xd6, 0x59 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0xa2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 039E
        gbc.setState(0x64c3, 0xd14a, 0x19b0, 0xc093, 0x56e0, 0xeff9, 0x1, 0x0);
        gbc.writeMem(0x64c3, { 0xd6, 0x64 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 039F
        gbc.setState(0x560d, 0x2d74, 0x1bf0, 0xedb1, 0x8d52, 0xd023, 0x0, 0x1);
        gbc.writeMem(0x560d, { 0xd6, 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2d74, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03A0
        gbc.setState(0x3cd7, 0xdf15, 0xe170, 0x78e9, 0x68c0, 0x85ad, 0x0, 0x1);
        gbc.writeMem(0x3cd7, { 0xd6, 0xd3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdf15, gbc.sp());
        EXPECT(0x3cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A1
        gbc.setState(0x1fa9, 0xf17b, 0xb4d0, 0xb4dd, 0x603e, 0xde75, 0x1, 0x1);
        gbc.writeMem(0x1fa9, { 0xd6, 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0x1fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A2
        gbc.setState(0x585e, 0xf75, 0xe4a0, 0x2bf1, 0x874d, 0xff72, 0x0, 0x0);
        gbc.writeMem(0x585e, { 0xd6, 0x3d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0x5860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A3
        gbc.setState(0x324, 0x633c, 0x4b20, 0x95da, 0x4b36, 0xbeb7, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xd6, 0xd });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A4
        gbc.setState(0xd8d5, 0x4bc7, 0xdc30, 0x9691, 0x9c2b, 0x4677, 0x1, 0x0);
        gbc.writeMem(0xd8d5, { 0xd6, 0x6c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4bc7, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd8d5));
        EXPECT(0x6c, gbc.readMem(0xd8d6));
        // D6 03A5
        gbc.setState(0x78e2, 0x786e, 0xfb40, 0xf7a6, 0xdb4d, 0x6cbc, 0x0, 0x0);
        gbc.writeMem(0x78e2, { 0xd6, 0xe5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0x78e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A6
        gbc.setState(0x75d6, 0x709e, 0x4a20, 0x9fa2, 0xd37d, 0x8492, 0x0, 0x0);
        gbc.writeMem(0x75d6, { 0xd6, 0x7c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0x75d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03A7
        gbc.setState(0xa19, 0x80a8, 0xe790, 0x9264, 0x6160, 0x38fc, 0x1, 0x1);
        gbc.writeMem(0xa19, { 0xd6, 0x9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03A8
        gbc.setState(0xb8e9, 0xb8e2, 0x97e0, 0x7022, 0x6d25, 0x1000, 0x0, 0x0);
        gbc.writeMem(0xb8e9, { 0xd6, 0x8c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb8e9));
        EXPECT(0x8c, gbc.readMem(0xb8ea));
        // D6 03A9
        gbc.setState(0x5589, 0xa9c2, 0x2cf0, 0x528, 0x739a, 0x4c77, 0x1, 0x0);
        gbc.writeMem(0x5589, { 0xd6, 0xbe });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9c2, gbc.sp());
        EXPECT(0x558b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03AA
        gbc.setState(0x36fc, 0xdd64, 0x5af0, 0xd85, 0xe402, 0x914, 0x0, 0x1);
        gbc.writeMem(0x36fc, { 0xd6, 0x1f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03AB
        gbc.setState(0xee10, 0x9cf9, 0xddc0, 0x8c2e, 0x3f33, 0xb901, 0x1, 0x1);
        gbc.writeMem(0xee10, { 0xd6, 0x2e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xee10));
        EXPECT(0x2e, gbc.readMem(0xee11));
        // D6 03AC
        gbc.setState(0x8609, 0xd9be, 0x61b0, 0xed03, 0xdcaf, 0xfbc1, 0x0, 0x1);
        gbc.writeMem(0x8609, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8609));
        EXPECT(0x3e, gbc.readMem(0x860a));
        // D6 03AD
        gbc.setState(0x3e3c, 0xc27c, 0x6f70, 0xca29, 0x9009, 0x638b, 0x0, 0x0);
        gbc.writeMem(0x3e3c, { 0xd6, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0x3e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03AE
        gbc.setState(0xa674, 0xa04c, 0x6810, 0x4b89, 0xca22, 0xd9ff, 0x1, 0x1);
        gbc.writeMem(0xa674, { 0xd6, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa674));
        EXPECT(0x9b, gbc.readMem(0xa675));
        // D6 03B0
        gbc.setState(0x25d1, 0x47c1, 0xfa10, 0x3437, 0x7512, 0x78e, 0x0, 0x1);
        gbc.writeMem(0x25d1, { 0xd6, 0xc5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0x25d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03B1
        gbc.setState(0x83d6, 0x17, 0xe7a0, 0x1940, 0x8dcf, 0x99b, 0x0, 0x1);
        gbc.writeMem(0x83d6, { 0xd6, 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x17, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x83d6));
        EXPECT(0xa3, gbc.readMem(0x83d7));
        // D6 03B2
        gbc.setState(0x762b, 0x1061, 0xfdb0, 0x6dc2, 0x55e6, 0x72d1, 0x1, 0x0);
        gbc.writeMem(0x762b, { 0xd6, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1061, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03B3
        gbc.setState(0xbc34, 0x833b, 0xb860, 0x36fc, 0xf20b, 0x22a5, 0x0, 0x0);
        gbc.writeMem(0xbc34, { 0xd6, 0xb5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x833b, gbc.sp());
        EXPECT(0xbc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbc34));
        EXPECT(0xb5, gbc.readMem(0xbc35));
        // D6 03B4
        gbc.setState(0x5e0b, 0xb8cd, 0x7d60, 0xf35f, 0xbd52, 0xa1c4, 0x0, 0x0);
        gbc.writeMem(0x5e0b, { 0xd6, 0xf7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb8cd, gbc.sp());
        EXPECT(0x5e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03B5
        gbc.setState(0xdf8, 0xa5ca, 0x7e60, 0xebf5, 0xef14, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0xdf8, { 0xd6, 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0xdfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03B6
        gbc.setState(0x624f, 0xf2c1, 0xfa70, 0x848d, 0x9485, 0x60fa, 0x1, 0x1);
        gbc.writeMem(0x624f, { 0xd6, 0x1d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0x6251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03B7
        gbc.setState(0xbd1c, 0xa203, 0xea70, 0xab59, 0x9ab3, 0x1a38, 0x0, 0x0);
        gbc.writeMem(0xbd1c, { 0xd6, 0x5f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa203, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbd1c));
        EXPECT(0x5f, gbc.readMem(0xbd1d));
        // D6 03B8
        gbc.setState(0x7dff, 0x58c4, 0xa990, 0xa91e, 0xe22d, 0xc4ad, 0x1, 0x1);
        gbc.writeMem(0x7dff, { 0xd6, 0x8b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0x7e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03B9
        gbc.setState(0xa5ea, 0x56ac, 0x70d0, 0x37cc, 0xaa2f, 0xcd92, 0x0, 0x0);
        gbc.writeMem(0xa5ea, { 0xd6, 0x1e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x56ac, gbc.sp());
        EXPECT(0xa5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa5ea));
        EXPECT(0x1e, gbc.readMem(0xa5eb));
        // D6 03BA
        gbc.setState(0x9f8f, 0x3954, 0x67b0, 0x7b3, 0x8065, 0x1800, 0x0, 0x0);
        gbc.writeMem(0x9f8f, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3954, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9f8f));
        EXPECT(0xb0, gbc.readMem(0x9f90));
        // D6 03BB
        gbc.setState(0x230f, 0xe716, 0x5b40, 0x765b, 0xb57b, 0x6f3b, 0x0, 0x1);
        gbc.writeMem(0x230f, { 0xd6, 0x7e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe716, gbc.sp());
        EXPECT(0x2311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03BC
        gbc.setState(0xe946, 0x9df7, 0xa710, 0x6b23, 0xd66d, 0xf756, 0x1, 0x1);
        gbc.writeMem(0xe946, { 0xd6, 0x43 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe946));
        EXPECT(0x43, gbc.readMem(0xe947));
        // D6 03BD
        gbc.setState(0x53c2, 0xd9be, 0xa870, 0x4eda, 0xcdbb, 0xaa52, 0x1, 0x1);
        gbc.writeMem(0x53c2, { 0xd6, 0xb0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9be, gbc.sp());
        EXPECT(0x53c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03BE
        gbc.setState(0x7313, 0x56c0, 0x9590, 0x3928, 0xe29d, 0x8569, 0x0, 0x1);
        gbc.writeMem(0x7313, { 0xd6, 0x79 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x56c0, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03BF
        gbc.setState(0xa80d, 0xeeff, 0x4cb0, 0xa9e1, 0x8ba9, 0x2b69, 0x1, 0x1);
        gbc.writeMem(0xa80d, { 0xd6, 0xa2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeeff, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa80d));
        EXPECT(0xa2, gbc.readMem(0xa80e));
        // D6 03C0
        gbc.setState(0x3707, 0xe237, 0xe8c0, 0x93e, 0xde99, 0x8ddb, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0xd6, 0x43 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe237, gbc.sp());
        EXPECT(0x3709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03C1
        gbc.setState(0xef79, 0x4324, 0xd190, 0x8bcd, 0xc784, 0x3e70, 0x0, 0x1);
        gbc.writeMem(0xef79, { 0xd6, 0x46 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4324, gbc.sp());
        EXPECT(0xef7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xef79));
        EXPECT(0x46, gbc.readMem(0xef7a));
        // D6 03C2
        gbc.setState(0xc8bc, 0x5947, 0x23b0, 0xe7df, 0x408f, 0x9357, 0x0, 0x1);
        gbc.writeMem(0xc8bc, { 0xd6, 0x66 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5947, gbc.sp());
        EXPECT(0xc8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc8bc));
        EXPECT(0x66, gbc.readMem(0xc8bd));
        // D6 03C3
        gbc.setState(0xed07, 0x9035, 0x3dd0, 0xc90a, 0x10fe, 0x6ecf, 0x1, 0x1);
        gbc.writeMem(0xed07, { 0xd6, 0x54 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9035, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xed07));
        EXPECT(0x54, gbc.readMem(0xed08));
        // D6 03C4
        gbc.setState(0x2bd, 0x856f, 0xa40, 0x13c, 0x97b8, 0x54ce, 0x1, 0x1);
        gbc.writeMem(0x2bd, { 0xd6, 0x3e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03C5
        gbc.setState(0x40fa, 0x4fc7, 0xbea0, 0x6ad9, 0x2a87, 0x25ab, 0x1, 0x1);
        gbc.writeMem(0x40fa, { 0xd6, 0xd4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4fc7, gbc.sp());
        EXPECT(0x40fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03C6
        gbc.setState(0x3dc8, 0x628d, 0x7560, 0x9bb1, 0x33ad, 0x49e3, 0x0, 0x0);
        gbc.writeMem(0x3dc8, { 0xd6, 0xc0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03C7
        gbc.setState(0x727c, 0xfe2b, 0xe5f0, 0x83f8, 0x8730, 0x2633, 0x1, 0x0);
        gbc.writeMem(0x727c, { 0xd6, 0xaf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfe2b, gbc.sp());
        EXPECT(0x727e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03C8
        gbc.setState(0x7fbf, 0x425c, 0xaad0, 0xdb98, 0x1443, 0xb63b, 0x0, 0x1);
        gbc.writeMem(0x7fbf, { 0xd6, 0x2a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x425c, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03C9
        gbc.setState(0x51df, 0x1f8e, 0x2c50, 0x8072, 0x1e30, 0xf14e, 0x0, 0x1);
        gbc.writeMem(0x51df, { 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0x51e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03CA
        gbc.setState(0x23ba, 0x8045, 0x8120, 0x6188, 0xe99b, 0x6ee9, 0x1, 0x1);
        gbc.writeMem(0x23ba, { 0xd6, 0xd5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03CB
        gbc.setState(0x3340, 0xb6c7, 0xb6e0, 0x16ab, 0xbd8f, 0x3ad4, 0x1, 0x0);
        gbc.writeMem(0x3340, { 0xd6, 0xbd });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0x3342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03CC
        gbc.setState(0xed8a, 0x9415, 0x81d0, 0x9e71, 0xc01e, 0xd5fe, 0x1, 0x0);
        gbc.writeMem(0xed8a, { 0xd6, 0xdc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9415, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xed8a));
        EXPECT(0xdc, gbc.readMem(0xed8b));
        // D6 03CD
        gbc.setState(0x1160, 0xef1a, 0x1ba0, 0xaf4, 0x4cd8, 0x2dee, 0x1, 0x1);
        gbc.writeMem(0x1160, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03CE
        gbc.setState(0x9962, 0xd36b, 0x8620, 0x20bc, 0xbac5, 0xd298, 0x1, 0x0);
        gbc.writeMem(0x9962, { 0xd6, 0x69 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9962));
        EXPECT(0x69, gbc.readMem(0x9963));
        // D6 03CF
        gbc.setState(0x1de8, 0x2b09, 0xd190, 0x4998, 0xc2d8, 0x9ed1, 0x1, 0x0);
        gbc.writeMem(0x1de8, { 0xd6, 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03D0
        gbc.setState(0xa1fb, 0x85a2, 0x79d0, 0xf977, 0xaed6, 0xb7b2, 0x0, 0x1);
        gbc.writeMem(0xa1fb, { 0xd6, 0x14 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x85a2, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa1fb));
        EXPECT(0x14, gbc.readMem(0xa1fc));
        // D6 03D1
        gbc.setState(0x5782, 0x30ce, 0x2c30, 0x6a50, 0x318b, 0xe07c, 0x1, 0x0);
        gbc.writeMem(0x5782, { 0xd6, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x30ce, gbc.sp());
        EXPECT(0x5784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03D2
        gbc.setState(0x31c, 0x664, 0x62e0, 0x323, 0x2ec, 0x77, 0x0, 0x1);
        gbc.writeMem(0x31c, { 0xd6, 0xe5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x664, gbc.sp());
        EXPECT(0x31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03D3
        gbc.setState(0xd84f, 0x2de6, 0x4a0, 0x9b30, 0xefbb, 0x61f8, 0x0, 0x0);
        gbc.writeMem(0xd84f, { 0xd6, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd84f));
        EXPECT(0x72, gbc.readMem(0xd850));
        // D6 03D4
        gbc.setState(0x36cf, 0xeb42, 0x8420, 0x167a, 0x7672, 0xf07c, 0x0, 0x1);
        gbc.writeMem(0x36cf, { 0xd6, 0xa0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x36d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03D5
        gbc.setState(0xeab4, 0x14b4, 0xe080, 0x3662, 0x521c, 0x737c, 0x0, 0x1);
        gbc.writeMem(0xeab4, { 0xd6, 0x17 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x14b4, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xeab4));
        EXPECT(0x17, gbc.readMem(0xeab5));
        // D6 03D6
        gbc.setState(0x5f6a, 0x9f70, 0x29a0, 0xdf6a, 0xafaa, 0x892d, 0x0, 0x1);
        gbc.writeMem(0x5f6a, { 0xd6, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f70, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03D7
        gbc.setState(0xa877, 0x7b96, 0xcf80, 0x2021, 0xc5bd, 0xf3d5, 0x1, 0x1);
        gbc.writeMem(0xa877, { 0xd6, 0x6b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa877));
        EXPECT(0x6b, gbc.readMem(0xa878));
        // D6 03D8
        gbc.setState(0xc3a5, 0xf37f, 0x3fd0, 0xb1aa, 0xda63, 0xbdf4, 0x0, 0x0);
        gbc.writeMem(0xc3a5, { 0xd6, 0x39 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0xc3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc3a5));
        EXPECT(0x39, gbc.readMem(0xc3a6));
        // D6 03D9
        gbc.setState(0x2d09, 0x247a, 0xca00, 0x24f0, 0xebeb, 0xb837, 0x0, 0x0);
        gbc.writeMem(0x2d09, { 0xd6, 0xe4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x247a, gbc.sp());
        EXPECT(0x2d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03DA
        gbc.setState(0x60fd, 0xbf9b, 0x82e0, 0x6ecc, 0xab7c, 0x22e8, 0x0, 0x0);
        gbc.writeMem(0x60fd, { 0xd6, 0x56 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbf9b, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03DB
        gbc.setState(0xbafd, 0xcf4, 0x8b40, 0x2a87, 0x8415, 0x15a3, 0x1, 0x0);
        gbc.writeMem(0xbafd, { 0xd6, 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbafd));
        EXPECT(0xa, gbc.readMem(0xbafe));
        // D6 03DC
        gbc.setState(0x94eb, 0x4156, 0x4d80, 0xed35, 0x737d, 0x404c, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xd6, 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4156, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x94eb));
        EXPECT(0x15, gbc.readMem(0x94ec));
        // D6 03DD
        gbc.setState(0x4d50, 0x792c, 0x8ba0, 0x87ad, 0x4cbe, 0x7d85, 0x1, 0x0);
        gbc.writeMem(0x4d50, { 0xd6, 0xbb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x792c, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03DE
        gbc.setState(0x7cc4, 0xfc26, 0x7670, 0xa9e, 0x9ad5, 0x9cd, 0x1, 0x1);
        gbc.writeMem(0x7cc4, { 0xd6, 0xe });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0x7cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // D6 03DF
        gbc.setState(0xa481, 0x62c, 0xe0b0, 0x764d, 0xf7e0, 0x3166, 0x0, 0x1);
        gbc.writeMem(0xa481, { 0xd6, 0x8c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0xa483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa481));
        EXPECT(0x8c, gbc.readMem(0xa482));
        // D6 03E0
        gbc.setState(0x3487, 0x68be, 0x7de0, 0x663, 0x1c7c, 0x8b0f, 0x0, 0x0);
        gbc.writeMem(0x3487, { 0xd6, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x68be, gbc.sp());
        EXPECT(0x3489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03E1
        gbc.setState(0xa2c9, 0x7b5b, 0x5d50, 0x2e19, 0x1231, 0xf5c9, 0x0, 0x1);
        gbc.writeMem(0xa2c9, { 0xd6, 0x1d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7b5b, gbc.sp());
        EXPECT(0xa2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa2c9));
        EXPECT(0x1d, gbc.readMem(0xa2ca));
        // D6 03E2
        gbc.setState(0xbc2d, 0x8b24, 0xcc50, 0x52bc, 0xf2b, 0xf084, 0x0, 0x1);
        gbc.writeMem(0xbc2d, { 0xd6, 0xe0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8b24, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbc2d));
        EXPECT(0xe0, gbc.readMem(0xbc2e));
        // D6 03E4
        gbc.setState(0xde0f, 0xe9fe, 0xe090, 0x7e53, 0xa757, 0x2557, 0x1, 0x0);
        gbc.writeMem(0xde0f, { 0xd6, 0x41 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0xde11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xde0f));
        EXPECT(0x41, gbc.readMem(0xde10));
        // D6 03E5
        gbc.setState(0xa08d, 0xb68a, 0x91e0, 0x5574, 0x7911, 0xabf, 0x1, 0x1);
        gbc.writeMem(0xa08d, { 0xd6, 0x8e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb68a, gbc.sp());
        EXPECT(0xa08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa08d));
        EXPECT(0x8e, gbc.readMem(0xa08e));
        // D6 03E6
        gbc.setState(0x4cb8, 0x352e, 0x5580, 0xbe92, 0xaedd, 0x7b30, 0x1, 0x1);
        gbc.writeMem(0x4cb8, { 0xd6, 0x5b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x352e, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D6 03E7
        gbc.setState(0x3980, 0x82b8, 0xdbb0, 0xed3c, 0x332c, 0xe624, 0x0, 0x0);
        gbc.writeMem(0x3980, { 0xd6, 0x46 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
