    TEST(gbcemu, opcode_cb_39) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 39 0000
        gbc.setState(0x2ae6, 0x2298, 0x1b50, 0xe26e, 0x6bb4, 0x14da, 0x1, 0x0);
        gbc.writeMem(0x2ae6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2298, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0001
        gbc.setState(0x6c00, 0xc452, 0x9440, 0x7cd0, 0xfae0, 0xf5ef, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc452, gbc.sp());
        EXPECT(0x6c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0002
        gbc.setState(0xe127, 0x59d6, 0xeef0, 0x2bbe, 0xe094, 0x2898, 0x1, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xe129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe127));
        EXPECT(0x39, gbc.readMem(0xe128));
        // CB 39 0003
        gbc.setState(0x6b2f, 0x3922, 0x8240, 0x13f, 0xc196, 0x903d, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0005
        gbc.setState(0x2044, 0xc754, 0x8ff0, 0xbd24, 0xf872, 0xcdd2, 0x1, 0x0);
        gbc.writeMem(0x2044, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc754, gbc.sp());
        EXPECT(0x2046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0006
        gbc.setState(0xedd2, 0xa585, 0x3bc0, 0x53a4, 0x2da2, 0xe3b, 0x1, 0x1);
        gbc.writeMem(0xedd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa585, gbc.sp());
        EXPECT(0xedd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd2));
        EXPECT(0x39, gbc.readMem(0xedd3));
        // CB 39 0007
        gbc.setState(0x8222, 0xe82d, 0x3d80, 0x22a8, 0x4057, 0xef65, 0x1, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe82d, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0x39, gbc.readMem(0x8223));
        // CB 39 0008
        gbc.setState(0xd8bd, 0x7554, 0xc580, 0x70eb, 0x595f, 0x2df5, 0x0, 0x1);
        gbc.writeMem(0xd8bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7554, gbc.sp());
        EXPECT(0xd8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bd));
        EXPECT(0x39, gbc.readMem(0xd8be));
        // CB 39 0009
        gbc.setState(0x94b2, 0x8058, 0xf70, 0xcf80, 0x254, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x94b2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8058, gbc.sp());
        EXPECT(0x94b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b2));
        EXPECT(0x39, gbc.readMem(0x94b3));
        // CB 39 000A
        gbc.setState(0x222d, 0x1513, 0xaa90, 0x5070, 0x1672, 0x454, 0x1, 0x1);
        gbc.writeMem(0x222d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 000B
        gbc.setState(0x7d7f, 0x5b0e, 0x8880, 0xbbee, 0xd001, 0x6669, 0x0, 0x0);
        gbc.writeMem(0x7d7f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5b0e, gbc.sp());
        EXPECT(0x7d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 000C
        gbc.setState(0x514b, 0x814b, 0xe9f0, 0x379c, 0xc0a3, 0xb978, 0x1, 0x0);
        gbc.writeMem(0x514b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x514d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 000D
        gbc.setState(0x2787, 0xcecb, 0x7570, 0x7b5c, 0x90a0, 0x4a28, 0x0, 0x0);
        gbc.writeMem(0x2787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0x2789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 000E
        gbc.setState(0x8720, 0xa70a, 0x8370, 0xf983, 0x10ba, 0x1231, 0x0, 0x1);
        gbc.writeMem(0x8720, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa70a, gbc.sp());
        EXPECT(0x8722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8720));
        EXPECT(0x39, gbc.readMem(0x8721));
        // CB 39 000F
        gbc.setState(0x22c5, 0x801f, 0xada0, 0x9ec5, 0x5c34, 0x7ef8, 0x0, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0x22c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0010
        gbc.setState(0xdf8c, 0x9f78, 0xa1f0, 0x5914, 0x5127, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0xdf8c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f78, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8c));
        EXPECT(0x39, gbc.readMem(0xdf8d));
        // CB 39 0011
        gbc.setState(0xd44b, 0x6d79, 0x2fc0, 0xeb06, 0x27c1, 0xafc7, 0x0, 0x1);
        gbc.writeMem(0xd44b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6d79, gbc.sp());
        EXPECT(0xd44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44b));
        EXPECT(0x39, gbc.readMem(0xd44c));
        // CB 39 0012
        gbc.setState(0x93bf, 0x95f, 0x99f0, 0xf482, 0x8435, 0x705, 0x1, 0x0);
        gbc.writeMem(0x93bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bf));
        EXPECT(0x39, gbc.readMem(0x93c0));
        // CB 39 0013
        gbc.setState(0x8638, 0x118f, 0x4860, 0xe061, 0xa8f2, 0x5e1b, 0x0, 0x0);
        gbc.writeMem(0x8638, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x118f, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8638));
        EXPECT(0x39, gbc.readMem(0x8639));
        // CB 39 0014
        gbc.setState(0x4400, 0xd76b, 0x7310, 0x6bf9, 0xc44e, 0xb073, 0x0, 0x0);
        gbc.writeMem(0x4400, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0015
        gbc.setState(0x6be3, 0xbe3a, 0x2d10, 0x5391, 0x6f26, 0x3ed2, 0x1, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0016
        gbc.setState(0x7375, 0xac5e, 0xc420, 0x2e41, 0x8150, 0xfadc, 0x0, 0x1);
        gbc.writeMem(0x7375, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xac5e, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0017
        gbc.setState(0x784b, 0x6bea, 0xe6b0, 0xc2be, 0x9e21, 0x7fab, 0x0, 0x1);
        gbc.writeMem(0x784b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6bea, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0018
        gbc.setState(0x813c, 0xfae8, 0x4a60, 0xabf9, 0x8eac, 0xf267, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0x813e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813c));
        EXPECT(0x39, gbc.readMem(0x813d));
        // CB 39 0019
        gbc.setState(0xda7a, 0x4023, 0x34b0, 0x9f1a, 0x6ed, 0xe128, 0x0, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4023, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0x39, gbc.readMem(0xda7b));
        // CB 39 001A
        gbc.setState(0xd6d2, 0x658, 0x6f20, 0x9923, 0xbae2, 0xa985, 0x1, 0x1);
        gbc.writeMem(0xd6d2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0xd6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d2));
        EXPECT(0x39, gbc.readMem(0xd6d3));
        // CB 39 001B
        gbc.setState(0xc9eb, 0xf74e, 0x2790, 0xcf26, 0xd511, 0x67e0, 0x1, 0x0);
        gbc.writeMem(0xc9eb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9eb));
        EXPECT(0x39, gbc.readMem(0xc9ec));
        // CB 39 001C
        gbc.setState(0xaaa9, 0x5f61, 0x3d0, 0x5988, 0xc4e1, 0xf8d9, 0x1, 0x0);
        gbc.writeMem(0xaaa9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5f61, gbc.sp());
        EXPECT(0xaaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa9));
        EXPECT(0x39, gbc.readMem(0xaaaa));
        // CB 39 001D
        gbc.setState(0x78c, 0xd974, 0xc980, 0x5c10, 0x4438, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0x78c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd974, gbc.sp());
        EXPECT(0x78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 001E
        gbc.setState(0x9c89, 0x9f55, 0x5d50, 0xfd79, 0xbb77, 0x42f5, 0x0, 0x0);
        gbc.writeMem(0x9c89, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9f55, gbc.sp());
        EXPECT(0x9c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c89));
        EXPECT(0x39, gbc.readMem(0x9c8a));
        // CB 39 001F
        gbc.setState(0x7e55, 0x854f, 0x5790, 0x89da, 0x85ff, 0x26b8, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x854f, gbc.sp());
        EXPECT(0x7e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0020
        gbc.setState(0xc592, 0xe0ea, 0x5c70, 0x3d3a, 0xa867, 0x8787, 0x1, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe0ea, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc592));
        EXPECT(0x39, gbc.readMem(0xc593));
        // CB 39 0021
        gbc.setState(0xa84, 0xa4a7, 0xca50, 0xa636, 0x5c75, 0x9dab, 0x0, 0x1);
        gbc.writeMem(0xa84, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0022
        gbc.setState(0x1c50, 0xf197, 0x40d0, 0x235, 0xb3d0, 0x8ef, 0x1, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf197, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0024
        gbc.setState(0xd27f, 0xfba8, 0xdb20, 0xc915, 0xbe4e, 0x3438, 0x1, 0x0);
        gbc.writeMem(0xd27f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfba8, gbc.sp());
        EXPECT(0xd281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27f));
        EXPECT(0x39, gbc.readMem(0xd280));
        // CB 39 0025
        gbc.setState(0x6869, 0xdb32, 0xac50, 0x4a06, 0x8aeb, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdb32, gbc.sp());
        EXPECT(0x686b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0026
        gbc.setState(0x5117, 0x7dfc, 0x36c0, 0xed23, 0x7548, 0x76c9, 0x1, 0x0);
        gbc.writeMem(0x5117, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7dfc, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0027
        gbc.setState(0x9e0, 0x178e, 0xea60, 0x535b, 0xef80, 0xab26, 0x0, 0x1);
        gbc.writeMem(0x9e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0028
        gbc.setState(0x6056, 0xebfe, 0xe80, 0xbd1e, 0xbfb2, 0x8a18, 0x1, 0x1);
        gbc.writeMem(0x6056, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebfe, gbc.sp());
        EXPECT(0x6058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0029
        gbc.setState(0xa7b7, 0x7af8, 0x8bc0, 0x53, 0xda85, 0xd104, 0x1, 0x1);
        gbc.writeMem(0xa7b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7af8, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b7));
        EXPECT(0x39, gbc.readMem(0xa7b8));
        // CB 39 002B
        gbc.setState(0x3257, 0xd4b9, 0xe750, 0xeb3c, 0x20fc, 0x7ed5, 0x1, 0x0);
        gbc.writeMem(0x3257, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0x3259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 002C
        gbc.setState(0x70bd, 0x82d3, 0xf690, 0x6fbf, 0x5678, 0xfa7a, 0x1, 0x0);
        gbc.writeMem(0x70bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x70bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 002D
        gbc.setState(0x21e5, 0xa1ee, 0x81b0, 0x5483, 0x15e7, 0x94f1, 0x0, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0x21e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 002E
        gbc.setState(0x75ad, 0xc727, 0xa2b0, 0xaf66, 0xf46c, 0x3488, 0x1, 0x0);
        gbc.writeMem(0x75ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc727, gbc.sp());
        EXPECT(0x75af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 002F
        gbc.setState(0x2b22, 0x1881, 0xef20, 0x1d89, 0x8907, 0x8b9c, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0030
        gbc.setState(0x4ff7, 0x9ad7, 0xf560, 0xba98, 0x61fc, 0x2cb, 0x1, 0x0);
        gbc.writeMem(0x4ff7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0x4ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0031
        gbc.setState(0x52b7, 0xaa78, 0x2640, 0x8205, 0x3750, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x52b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0032
        gbc.setState(0x82b, 0x1e61, 0x3350, 0xab37, 0x46aa, 0x9de7, 0x1, 0x0);
        gbc.writeMem(0x82b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1e61, gbc.sp());
        EXPECT(0x82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0033
        gbc.setState(0xc79, 0x9239, 0x370, 0x8a32, 0x989c, 0x5b82, 0x0, 0x0);
        gbc.writeMem(0xc79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0xc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0035
        gbc.setState(0x415a, 0x6e75, 0xd2e0, 0x270b, 0x793b, 0x35da, 0x1, 0x0);
        gbc.writeMem(0x415a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x415c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0036
        gbc.setState(0x65e0, 0xd2b1, 0x410, 0xf64a, 0xbf7b, 0xaecc, 0x0, 0x0);
        gbc.writeMem(0x65e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd2b1, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0037
        gbc.setState(0x6bc, 0x30c4, 0xd940, 0x1375, 0xf066, 0xe6ce, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x30c4, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0038
        gbc.setState(0x9d1, 0xa079, 0xe320, 0x696b, 0x62bc, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0x9d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa079, gbc.sp());
        EXPECT(0x9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0039
        gbc.setState(0x5f25, 0xfe1a, 0x97d0, 0x6e2e, 0xdfed, 0x9417, 0x1, 0x1);
        gbc.writeMem(0x5f25, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0x5f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 003B
        gbc.setState(0x7de9, 0xe1e8, 0x1ac0, 0x3bad, 0x14cd, 0xe9, 0x0, 0x1);
        gbc.writeMem(0x7de9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe1e8, gbc.sp());
        EXPECT(0x7deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 003C
        gbc.setState(0x91b4, 0xb4f3, 0xbe40, 0xe7b4, 0xb332, 0x31d1, 0x1, 0x0);
        gbc.writeMem(0x91b4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b4));
        EXPECT(0x39, gbc.readMem(0x91b5));
        // CB 39 003D
        gbc.setState(0x675a, 0x4e77, 0x1570, 0x4399, 0x831e, 0xd4d9, 0x1, 0x1);
        gbc.writeMem(0x675a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4e77, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 003E
        gbc.setState(0x5d5, 0xfa23, 0x9390, 0x117d, 0x488c, 0x1a61, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfa23, gbc.sp());
        EXPECT(0x5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 003F
        gbc.setState(0x2d2, 0xf480, 0xe3a0, 0x2659, 0xa9d9, 0x4353, 0x1, 0x0);
        gbc.writeMem(0x2d2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0x2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0040
        gbc.setState(0x3850, 0x72d8, 0x2ae0, 0x906f, 0xf8dd, 0x148b, 0x1, 0x1);
        gbc.writeMem(0x3850, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x3852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0041
        gbc.setState(0x33d3, 0x701b, 0x3a20, 0x8d1d, 0x8470, 0x8a20, 0x1, 0x1);
        gbc.writeMem(0x33d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0x33d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0042
        gbc.setState(0xe374, 0x80e4, 0x7b40, 0x5146, 0x8cb, 0xe553, 0x0, 0x0);
        gbc.writeMem(0xe374, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe374));
        EXPECT(0x39, gbc.readMem(0xe375));
        // CB 39 0043
        gbc.setState(0x298a, 0x6d21, 0xde00, 0x42ad, 0x117d, 0x4ce7, 0x0, 0x0);
        gbc.writeMem(0x298a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6d21, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0044
        gbc.setState(0x21da, 0xb3cc, 0xa770, 0x7e9c, 0xdc8, 0x41db, 0x0, 0x1);
        gbc.writeMem(0x21da, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb3cc, gbc.sp());
        EXPECT(0x21dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0045
        gbc.setState(0x9613, 0x4950, 0x14c0, 0xc8cd, 0x74fe, 0x6aa7, 0x0, 0x0);
        gbc.writeMem(0x9613, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4950, gbc.sp());
        EXPECT(0x9615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9613));
        EXPECT(0x39, gbc.readMem(0x9614));
        // CB 39 0046
        gbc.setState(0x8f0a, 0x7e3b, 0x1310, 0xf161, 0x6645, 0x8773, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7e3b, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0a));
        EXPECT(0x39, gbc.readMem(0x8f0b));
        // CB 39 0047
        gbc.setState(0x45a5, 0x45fb, 0xca80, 0x7016, 0xdd19, 0x5d2, 0x0, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x45fb, gbc.sp());
        EXPECT(0x45a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0048
        gbc.setState(0x129, 0xfce6, 0x5b80, 0xd952, 0x3814, 0xa9cc, 0x0, 0x1);
        gbc.writeMem(0x129, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0x12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0049
        gbc.setState(0x474e, 0x87b1, 0x9e60, 0x98e, 0xce3f, 0x9cdc, 0x1, 0x1);
        gbc.writeMem(0x474e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x87b1, gbc.sp());
        EXPECT(0x4750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 004A
        gbc.setState(0x2143, 0x251a, 0xc6f0, 0xab3, 0xbd1a, 0x4213, 0x0, 0x0);
        gbc.writeMem(0x2143, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x251a, gbc.sp());
        EXPECT(0x2145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 004B
        gbc.setState(0x4eb0, 0xb25b, 0x9070, 0xede, 0x7e28, 0xc70b, 0x1, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb25b, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 004C
        gbc.setState(0x699b, 0x14d, 0x9bb0, 0x2d8, 0xabf3, 0xc7d6, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 004D
        gbc.setState(0x36a1, 0x1f60, 0x16c0, 0x57b, 0x8b3b, 0x80c0, 0x0, 0x0);
        gbc.writeMem(0x36a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1f60, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 004E
        gbc.setState(0x86de, 0x2a5a, 0x8ff0, 0x88ca, 0x46f2, 0x74d4, 0x1, 0x1);
        gbc.writeMem(0x86de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2a5a, gbc.sp());
        EXPECT(0x86e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86de));
        EXPECT(0x39, gbc.readMem(0x86df));
        // CB 39 004F
        gbc.setState(0x5df5, 0x617, 0x39a0, 0x463, 0x6ad0, 0xe5b2, 0x0, 0x0);
        gbc.writeMem(0x5df5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0x5df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0050
        gbc.setState(0xacf8, 0x2465, 0x5b60, 0x881e, 0x84c4, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0xacf8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0xacfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf8));
        EXPECT(0x39, gbc.readMem(0xacf9));
        // CB 39 0051
        gbc.setState(0x3e47, 0xdf31, 0xbab0, 0xcc5e, 0xd168, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0x3e47, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0x3e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0052
        gbc.setState(0x8454, 0x7a07, 0xe620, 0xaa4e, 0x94e3, 0xf161, 0x0, 0x1);
        gbc.writeMem(0x8454, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7a07, gbc.sp());
        EXPECT(0x8456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8454));
        EXPECT(0x39, gbc.readMem(0x8455));
        // CB 39 0053
        gbc.setState(0x3dd9, 0x36c7, 0xd130, 0xdda9, 0x2e5b, 0xe564, 0x0, 0x0);
        gbc.writeMem(0x3dd9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x36c7, gbc.sp());
        EXPECT(0x3ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0054
        gbc.setState(0xb60a, 0xd50f, 0x1520, 0xec6d, 0x7777, 0xa08e, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd50f, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60a));
        EXPECT(0x39, gbc.readMem(0xb60b));
        // CB 39 0055
        gbc.setState(0x2397, 0x286b, 0xba70, 0xe2fe, 0x29dd, 0xe840, 0x0, 0x0);
        gbc.writeMem(0x2397, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x2399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0056
        gbc.setState(0x3a79, 0x9c35, 0xc470, 0x9c63, 0x587d, 0x824a, 0x1, 0x1);
        gbc.writeMem(0x3a79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9c35, gbc.sp());
        EXPECT(0x3a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0057
        gbc.setState(0xe64d, 0x8b2f, 0xe7f0, 0x3dca, 0x6e1e, 0xd5ef, 0x0, 0x1);
        gbc.writeMem(0xe64d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8b2f, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64d));
        EXPECT(0x39, gbc.readMem(0xe64e));
        // CB 39 0058
        gbc.setState(0x4caa, 0xdf61, 0x7960, 0x99ca, 0xb905, 0x9b8d, 0x1, 0x0);
        gbc.writeMem(0x4caa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0x4cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0059
        gbc.setState(0x8a9c, 0x4e8d, 0x6400, 0x6940, 0xf512, 0xdbc4, 0x1, 0x1);
        gbc.writeMem(0x8a9c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4e8d, gbc.sp());
        EXPECT(0x8a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9c));
        EXPECT(0x39, gbc.readMem(0x8a9d));
        // CB 39 005A
        gbc.setState(0xaa32, 0xcc87, 0x5320, 0xa2ea, 0xb74, 0x2e25, 0x1, 0x1);
        gbc.writeMem(0xaa32, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcc87, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa32));
        EXPECT(0x39, gbc.readMem(0xaa33));
        // CB 39 005B
        gbc.setState(0xe658, 0xcbca, 0x6980, 0xcf6a, 0x5431, 0xc7ac, 0x1, 0x0);
        gbc.writeMem(0xe658, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcbca, gbc.sp());
        EXPECT(0xe65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe658));
        EXPECT(0x39, gbc.readMem(0xe659));
        // CB 39 005C
        gbc.setState(0x428d, 0x5b58, 0xe890, 0x29d3, 0x2bef, 0xe9f9, 0x1, 0x0);
        gbc.writeMem(0x428d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5b58, gbc.sp());
        EXPECT(0x428f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 005D
        gbc.setState(0xc554, 0x26a8, 0xc6d0, 0xe1ab, 0xe382, 0x900c, 0x1, 0x1);
        gbc.writeMem(0xc554, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0xc556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc554));
        EXPECT(0x39, gbc.readMem(0xc555));
        // CB 39 005E
        gbc.setState(0xb31e, 0xab25, 0xe870, 0x7655, 0x7f1a, 0x266f, 0x1, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xab25, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0x39, gbc.readMem(0xb31f));
        // CB 39 005F
        gbc.setState(0xc8, 0xbad2, 0x8dc0, 0x304f, 0x6aec, 0xbe2b, 0x0, 0x1);
        gbc.writeMem(0xc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0060
        gbc.setState(0x55d8, 0xcf91, 0x95d0, 0x87a3, 0xae5, 0x7759, 0x0, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcf91, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0061
        gbc.setState(0xd1d9, 0xa8f4, 0x4d20, 0x4e61, 0xc25a, 0xfec0, 0x0, 0x1);
        gbc.writeMem(0xd1d9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa8f4, gbc.sp());
        EXPECT(0xd1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d9));
        EXPECT(0x39, gbc.readMem(0xd1da));
        // CB 39 0062
        gbc.setState(0xdced, 0xee9, 0xdaa0, 0x2f11, 0xac31, 0xa80, 0x0, 0x0);
        gbc.writeMem(0xdced, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee9, gbc.sp());
        EXPECT(0xdcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdced));
        EXPECT(0x39, gbc.readMem(0xdcee));
        // CB 39 0063
        gbc.setState(0x4fc4, 0xbba, 0xc9a0, 0x3dd2, 0x67a4, 0xf4b7, 0x1, 0x1);
        gbc.writeMem(0x4fc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0064
        gbc.setState(0x6451, 0xa6c2, 0x8600, 0x50dd, 0xb5cd, 0x1bd, 0x1, 0x0);
        gbc.writeMem(0x6451, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0066
        gbc.setState(0x8666, 0x62c7, 0xcd90, 0x67ec, 0xe9ae, 0x50d5, 0x1, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x62c7, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8666));
        EXPECT(0x39, gbc.readMem(0x8667));
        // CB 39 0067
        gbc.setState(0x6993, 0x294b, 0xc890, 0x3e75, 0xea47, 0x427b, 0x0, 0x1);
        gbc.writeMem(0x6993, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x294b, gbc.sp());
        EXPECT(0x6995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0068
        gbc.setState(0xda2d, 0x5cd5, 0xedb0, 0xfae9, 0x2175, 0xac59, 0x1, 0x1);
        gbc.writeMem(0xda2d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5cd5, gbc.sp());
        EXPECT(0xda2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2d));
        EXPECT(0x39, gbc.readMem(0xda2e));
        // CB 39 0069
        gbc.setState(0x9920, 0x4c88, 0xe160, 0xfd84, 0x57b5, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0x9920, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4c88, gbc.sp());
        EXPECT(0x9922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9920));
        EXPECT(0x39, gbc.readMem(0x9921));
        // CB 39 006A
        gbc.setState(0x5ad5, 0x420, 0xbe90, 0x7dc4, 0x2fa5, 0xce73, 0x0, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x420, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 006B
        gbc.setState(0xb8a, 0x8105, 0x2180, 0x37d9, 0xcf47, 0xa98c, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 006C
        gbc.setState(0x722e, 0x15c5, 0xf50, 0x8a77, 0xa8a8, 0x15a4, 0x1, 0x1);
        gbc.writeMem(0x722e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x15c5, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 006D
        gbc.setState(0x3e18, 0x4ef1, 0xa790, 0x83ac, 0x78a0, 0x4aa6, 0x1, 0x1);
        gbc.writeMem(0x3e18, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0x3e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 006E
        gbc.setState(0x8a5b, 0xda1e, 0x5430, 0xcb9e, 0xe56d, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0x8a5b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xda1e, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5b));
        EXPECT(0x39, gbc.readMem(0x8a5c));
        // CB 39 006F
        gbc.setState(0x1d36, 0x2d2, 0x44b0, 0x3a52, 0xa4e2, 0x9afc, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2d2, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0070
        gbc.setState(0xc661, 0xb820, 0x72a0, 0x7d7e, 0xe4d6, 0x1b7e, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc661));
        EXPECT(0x39, gbc.readMem(0xc662));
        // CB 39 0071
        gbc.setState(0x14ab, 0x528b, 0x32e0, 0xfba0, 0xf706, 0x2ef, 0x1, 0x1);
        gbc.writeMem(0x14ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0072
        gbc.setState(0xad4a, 0x746f, 0xd410, 0xe60b, 0x8898, 0x5800, 0x0, 0x0);
        gbc.writeMem(0xad4a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x746f, gbc.sp());
        EXPECT(0xad4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4a));
        EXPECT(0x39, gbc.readMem(0xad4b));
        // CB 39 0073
        gbc.setState(0x9713, 0x8274, 0x8640, 0x6475, 0xb8ce, 0x4f9a, 0x1, 0x0);
        gbc.writeMem(0x9713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0x9715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9713));
        EXPECT(0x39, gbc.readMem(0x9714));
        // CB 39 0074
        gbc.setState(0x8e9, 0xd0ef, 0xa480, 0x4ca9, 0x963f, 0xb792, 0x0, 0x1);
        gbc.writeMem(0x8e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0075
        gbc.setState(0x2e97, 0xdf6b, 0xa4b0, 0xe742, 0x2b95, 0x8979, 0x0, 0x0);
        gbc.writeMem(0x2e97, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdf6b, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0076
        gbc.setState(0x29c5, 0x4d5, 0xbd60, 0xd118, 0xa317, 0xdd53, 0x1, 0x0);
        gbc.writeMem(0x29c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0077
        gbc.setState(0xdfc5, 0x2852, 0xc570, 0xcb7a, 0x53f, 0xc15b, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2852, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0x39, gbc.readMem(0xdfc6));
        // CB 39 0078
        gbc.setState(0x229, 0x2697, 0xbd80, 0x9c63, 0xa97d, 0xf36, 0x1, 0x0);
        gbc.writeMem(0x229, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2697, gbc.sp());
        EXPECT(0x22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0079
        gbc.setState(0xbed0, 0x69d, 0x1700, 0x9b2d, 0xccbb, 0x2e31, 0x0, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x69d, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0x39, gbc.readMem(0xbed1));
        // CB 39 007A
        gbc.setState(0xd6c1, 0x2bff, 0xf310, 0xb948, 0x42c1, 0xa579, 0x0, 0x1);
        gbc.writeMem(0xd6c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2bff, gbc.sp());
        EXPECT(0xd6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c1));
        EXPECT(0x39, gbc.readMem(0xd6c2));
        // CB 39 007B
        gbc.setState(0x68c1, 0x6e16, 0x310, 0xbec, 0xc939, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x68c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6e16, gbc.sp());
        EXPECT(0x68c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 007C
        gbc.setState(0x169b, 0x401f, 0x4ea0, 0xd4cf, 0xd5c4, 0x4c1e, 0x1, 0x1);
        gbc.writeMem(0x169b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x401f, gbc.sp());
        EXPECT(0x169d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 007D
        gbc.setState(0xbe73, 0xf1d2, 0x56c0, 0xfb12, 0xb282, 0x534c, 0x1, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf1d2, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0x39, gbc.readMem(0xbe74));
        // CB 39 007E
        gbc.setState(0x28af, 0x6a4, 0x8780, 0xecc7, 0x49d3, 0xa19f, 0x1, 0x0);
        gbc.writeMem(0x28af, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6a4, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 007F
        gbc.setState(0x30ec, 0x4e5, 0xd3a0, 0xf385, 0x671c, 0x636e, 0x0, 0x1);
        gbc.writeMem(0x30ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4e5, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0080
        gbc.setState(0x695d, 0x8d3c, 0xe30, 0x1555, 0xd293, 0x2a0a, 0x0, 0x1);
        gbc.writeMem(0x695d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0081
        gbc.setState(0x5746, 0xe9e7, 0xcd10, 0x3ad4, 0xf329, 0x6738, 0x0, 0x0);
        gbc.writeMem(0x5746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe9e7, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0082
        gbc.setState(0x6d7d, 0xbbc6, 0x5f90, 0x2e24, 0x6859, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbbc6, gbc.sp());
        EXPECT(0x6d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0083
        gbc.setState(0x34f6, 0x237c, 0x9860, 0x51da, 0x4bbe, 0xf2c0, 0x1, 0x0);
        gbc.writeMem(0x34f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0x34f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0084
        gbc.setState(0x68a1, 0x874c, 0x1ff0, 0x4dd6, 0x3930, 0xc43d, 0x1, 0x1);
        gbc.writeMem(0x68a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x874c, gbc.sp());
        EXPECT(0x68a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0085
        gbc.setState(0x305, 0xe248, 0x9460, 0x7810, 0x5d91, 0xbcc, 0x1, 0x1);
        gbc.writeMem(0x305, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe248, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0086
        gbc.setState(0x726b, 0x93d1, 0x4ff0, 0xb985, 0xf89c, 0x3482, 0x0, 0x1);
        gbc.writeMem(0x726b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0x726d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0087
        gbc.setState(0x2e4d, 0x49f1, 0x4670, 0xda94, 0xbcc5, 0x9a15, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x49f1, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0088
        gbc.setState(0xcf31, 0xb912, 0x5890, 0x136, 0x3e82, 0xd595, 0x1, 0x1);
        gbc.writeMem(0xcf31, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb912, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf31));
        EXPECT(0x39, gbc.readMem(0xcf32));
        // CB 39 0089
        gbc.setState(0x27c1, 0x410e, 0x7100, 0x8c5c, 0x2fe3, 0x55f0, 0x0, 0x0);
        gbc.writeMem(0x27c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x27c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 008A
        gbc.setState(0x22ff, 0x6f6c, 0xe620, 0xe984, 0x3416, 0x75a2, 0x0, 0x0);
        gbc.writeMem(0x22ff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0x2301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 008B
        gbc.setState(0x68f3, 0xfeef, 0xa9f0, 0xeaa7, 0x6cc3, 0x684e, 0x1, 0x1);
        gbc.writeMem(0x68f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfeef, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 008C
        gbc.setState(0x2e92, 0xaf7b, 0x5f70, 0xbc88, 0x29d, 0x806c, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 008D
        gbc.setState(0x7204, 0x5104, 0xda80, 0x174f, 0x95eb, 0x2922, 0x1, 0x0);
        gbc.writeMem(0x7204, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5104, gbc.sp());
        EXPECT(0x7206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 008E
        gbc.setState(0xc309, 0xc248, 0xbe90, 0xdd0d, 0xf4ff, 0xf9, 0x0, 0x0);
        gbc.writeMem(0xc309, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc309));
        EXPECT(0x39, gbc.readMem(0xc30a));
        // CB 39 008F
        gbc.setState(0x88bc, 0x1ef0, 0xdf00, 0x6f78, 0x1461, 0x6604, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1ef0, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bc));
        EXPECT(0x39, gbc.readMem(0x88bd));
        // CB 39 0090
        gbc.setState(0x4deb, 0xff60, 0x9560, 0x5ba9, 0x6d3c, 0xbe1b, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0091
        gbc.setState(0xd20c, 0xb6f8, 0x1450, 0x48ea, 0x8281, 0x2be6, 0x1, 0x0);
        gbc.writeMem(0xd20c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb6f8, gbc.sp());
        EXPECT(0xd20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20c));
        EXPECT(0x39, gbc.readMem(0xd20d));
        // CB 39 0092
        gbc.setState(0x3629, 0x1eb0, 0xcdc0, 0x8632, 0x68ed, 0x5ab, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1eb0, gbc.sp());
        EXPECT(0x362b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0093
        gbc.setState(0x64de, 0xcb04, 0x1830, 0x886a, 0x6480, 0xc0ca, 0x1, 0x0);
        gbc.writeMem(0x64de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x64e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0094
        gbc.setState(0x8c7, 0xf849, 0x7930, 0x708a, 0xe577, 0x6e48, 0x0, 0x1);
        gbc.writeMem(0x8c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf849, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0095
        gbc.setState(0x890e, 0x5f9e, 0x6900, 0x6eab, 0xfc82, 0x279f, 0x0, 0x0);
        gbc.writeMem(0x890e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x8910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890e));
        EXPECT(0x39, gbc.readMem(0x890f));
        // CB 39 0096
        gbc.setState(0x1293, 0x1425, 0x3160, 0x62f9, 0x660b, 0x9452, 0x0, 0x0);
        gbc.writeMem(0x1293, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1425, gbc.sp());
        EXPECT(0x1295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0097
        gbc.setState(0xd24, 0xd4fb, 0x2d70, 0xb43b, 0xca34, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0xd24, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0098
        gbc.setState(0xa72d, 0x566f, 0xa050, 0x8fd7, 0xd2cb, 0x41b, 0x1, 0x1);
        gbc.writeMem(0xa72d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x566f, gbc.sp());
        EXPECT(0xa72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72d));
        EXPECT(0x39, gbc.readMem(0xa72e));
        // CB 39 0099
        gbc.setState(0x1356, 0xc01e, 0x91b0, 0x766f, 0xd942, 0xbb84, 0x1, 0x0);
        gbc.writeMem(0x1356, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc01e, gbc.sp());
        EXPECT(0x1358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 009A
        gbc.setState(0xabc8, 0x2a78, 0xbd10, 0x5c18, 0x3efd, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0xabc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2a78, gbc.sp());
        EXPECT(0xabca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc8));
        EXPECT(0x39, gbc.readMem(0xabc9));
        // CB 39 009B
        gbc.setState(0x98b4, 0x646f, 0x53c0, 0x5281, 0x1ab6, 0x9d0f, 0x0, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b4));
        EXPECT(0x39, gbc.readMem(0x98b5));
        // CB 39 009C
        gbc.setState(0x4438, 0x9280, 0x6840, 0x4e25, 0xd034, 0xcd9b, 0x1, 0x0);
        gbc.writeMem(0x4438, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9280, gbc.sp());
        EXPECT(0x443a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 009D
        gbc.setState(0x2c62, 0xe902, 0xcac0, 0xd6ea, 0x9a1b, 0xf07e, 0x1, 0x0);
        gbc.writeMem(0x2c62, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 009E
        gbc.setState(0x4e42, 0xa93, 0x3280, 0x4a1b, 0x7154, 0x456a, 0x1, 0x1);
        gbc.writeMem(0x4e42, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 009F
        gbc.setState(0x9690, 0xdb52, 0x5230, 0x5617, 0x5727, 0x4ec, 0x1, 0x1);
        gbc.writeMem(0x9690, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9690));
        EXPECT(0x39, gbc.readMem(0x9691));
        // CB 39 00A0
        gbc.setState(0x9b09, 0x1994, 0x9f20, 0x7422, 0xd87, 0x988, 0x0, 0x0);
        gbc.writeMem(0x9b09, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1994, gbc.sp());
        EXPECT(0x9b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b09));
        EXPECT(0x39, gbc.readMem(0x9b0a));
        // CB 39 00A1
        gbc.setState(0x3f4d, 0xcb5b, 0x1500, 0x4028, 0x7f86, 0xd158, 0x1, 0x0);
        gbc.writeMem(0x3f4d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcb5b, gbc.sp());
        EXPECT(0x3f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00A2
        gbc.setState(0x5684, 0x520, 0x4590, 0x9c81, 0x99ae, 0xcf94, 0x1, 0x0);
        gbc.writeMem(0x5684, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x5686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00A3
        gbc.setState(0xc352, 0xa90c, 0x9f0, 0x9755, 0x1daa, 0xe13e, 0x0, 0x0);
        gbc.writeMem(0xc352, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0xc354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc352));
        EXPECT(0x39, gbc.readMem(0xc353));
        // CB 39 00A4
        gbc.setState(0xeaf, 0x94b1, 0x61f0, 0x181d, 0x8bab, 0x9d0, 0x0, 0x0);
        gbc.writeMem(0xeaf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x94b1, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00A5
        gbc.setState(0xe85e, 0x6930, 0xb710, 0x5bad, 0xa7c, 0x2882, 0x0, 0x1);
        gbc.writeMem(0xe85e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85e));
        EXPECT(0x39, gbc.readMem(0xe85f));
        // CB 39 00A6
        gbc.setState(0xf35, 0xb183, 0xa330, 0xfdcf, 0x32cc, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0xf35, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb183, gbc.sp());
        EXPECT(0xf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00A7
        gbc.setState(0x3e74, 0xdac1, 0xc600, 0xbc46, 0x6131, 0x1d6c, 0x0, 0x0);
        gbc.writeMem(0x3e74, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdac1, gbc.sp());
        EXPECT(0x3e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00A8
        gbc.setState(0x3beb, 0x8b77, 0x2e60, 0x258f, 0xddd8, 0x981b, 0x0, 0x1);
        gbc.writeMem(0x3beb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8b77, gbc.sp());
        EXPECT(0x3bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00A9
        gbc.setState(0x558f, 0x50f9, 0x33b0, 0x534b, 0xcc54, 0x47bd, 0x0, 0x1);
        gbc.writeMem(0x558f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x5591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00AB
        gbc.setState(0x5c3, 0xab50, 0xfdc0, 0xaefd, 0x9fad, 0x2852, 0x0, 0x1);
        gbc.writeMem(0x5c3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00AC
        gbc.setState(0xa325, 0xa006, 0x14c0, 0xd9f1, 0xb7f5, 0x2bb4, 0x1, 0x1);
        gbc.writeMem(0xa325, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0xa327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa325));
        EXPECT(0x39, gbc.readMem(0xa326));
        // CB 39 00AE
        gbc.setState(0x9151, 0x2155, 0x7cf0, 0xbc3b, 0x2648, 0x42cd, 0x1, 0x0);
        gbc.writeMem(0x9151, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0x9153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9151));
        EXPECT(0x39, gbc.readMem(0x9152));
        // CB 39 00AF
        gbc.setState(0x7774, 0x5bd1, 0xaff0, 0x8e88, 0x8502, 0x5e88, 0x0, 0x0);
        gbc.writeMem(0x7774, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00B0
        gbc.setState(0xb8c7, 0x2baf, 0xc330, 0x3bf8, 0xf780, 0x7507, 0x1, 0x0);
        gbc.writeMem(0xb8c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0xb8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c7));
        EXPECT(0x39, gbc.readMem(0xb8c8));
        // CB 39 00B1
        gbc.setState(0xb252, 0xc698, 0x850, 0xa059, 0x5ae4, 0xd105, 0x0, 0x1);
        gbc.writeMem(0xb252, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0xb254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb252));
        EXPECT(0x39, gbc.readMem(0xb253));
        // CB 39 00B2
        gbc.setState(0x612c, 0xae47, 0x5b60, 0x27c6, 0x1f4a, 0xd421, 0x0, 0x1);
        gbc.writeMem(0x612c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00B3
        gbc.setState(0xb0a9, 0x51f9, 0x8be0, 0x93b3, 0x7828, 0xf93e, 0x0, 0x1);
        gbc.writeMem(0xb0a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0xb0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a9));
        EXPECT(0x39, gbc.readMem(0xb0aa));
        // CB 39 00B4
        gbc.setState(0x6800, 0x6469, 0x61c0, 0x252f, 0x884e, 0x71e, 0x1, 0x0);
        gbc.writeMem(0x6800, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6469, gbc.sp());
        EXPECT(0x6802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00B5
        gbc.setState(0xd94e, 0x14ae, 0xdf20, 0x6c30, 0x6752, 0x9f3f, 0x0, 0x0);
        gbc.writeMem(0xd94e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0xd950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94e));
        EXPECT(0x39, gbc.readMem(0xd94f));
        // CB 39 00B6
        gbc.setState(0x24de, 0x48ec, 0x9310, 0xbe6f, 0x3cb6, 0x1cd9, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x48ec, gbc.sp());
        EXPECT(0x24e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00B7
        gbc.setState(0xd7a6, 0x22cd, 0xbda0, 0xd24, 0x2164, 0xfc34, 0x1, 0x0);
        gbc.writeMem(0xd7a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a6));
        EXPECT(0x39, gbc.readMem(0xd7a7));
        // CB 39 00B8
        gbc.setState(0x7a2d, 0x708a, 0x8270, 0x8f75, 0xef6f, 0xc8e3, 0x1, 0x1);
        gbc.writeMem(0x7a2d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0x7a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00B9
        gbc.setState(0x29ec, 0xda14, 0xda70, 0xfe50, 0xfb97, 0x2474, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xda14, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00BA
        gbc.setState(0xd2e0, 0x365b, 0x81d0, 0xd699, 0x5d02, 0x4ece, 0x1, 0x0);
        gbc.writeMem(0xd2e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x365b, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e0));
        EXPECT(0x39, gbc.readMem(0xd2e1));
        // CB 39 00BB
        gbc.setState(0x4be4, 0x8907, 0x3b20, 0x87f, 0x9956, 0x80ee, 0x1, 0x1);
        gbc.writeMem(0x4be4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8907, gbc.sp());
        EXPECT(0x4be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00BC
        gbc.setState(0xe06b, 0xaf90, 0xeae0, 0xc67e, 0x9231, 0x446d, 0x0, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf90, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0x39, gbc.readMem(0xe06c));
        // CB 39 00BD
        gbc.setState(0x6fb2, 0xf1d, 0xbc80, 0xb95, 0x9950, 0xbb38, 0x0, 0x0);
        gbc.writeMem(0x6fb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf1d, gbc.sp());
        EXPECT(0x6fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00BE
        gbc.setState(0xe017, 0x3b, 0x1130, 0x5bbb, 0xc636, 0xb4a0, 0x1, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3b, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0x39, gbc.readMem(0xe018));
        // CB 39 00BF
        gbc.setState(0x2deb, 0x60ca, 0x9430, 0xcaf8, 0x6ddc, 0xedbd, 0x1, 0x0);
        gbc.writeMem(0x2deb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x60ca, gbc.sp());
        EXPECT(0x2ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00C0
        gbc.setState(0x6700, 0x88f2, 0x8740, 0x66a2, 0x1d7c, 0x3a36, 0x1, 0x1);
        gbc.writeMem(0x6700, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x88f2, gbc.sp());
        EXPECT(0x6702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00C1
        gbc.setState(0xa851, 0xb4cb, 0x5dc0, 0x70b2, 0xd5e8, 0x1057, 0x0, 0x1);
        gbc.writeMem(0xa851, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0xa853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa851));
        EXPECT(0x39, gbc.readMem(0xa852));
        // CB 39 00C2
        gbc.setState(0x2e6b, 0xc43d, 0x21a0, 0x4b2c, 0xed17, 0xbb0b, 0x0, 0x1);
        gbc.writeMem(0x2e6b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc43d, gbc.sp());
        EXPECT(0x2e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00C3
        gbc.setState(0x30f, 0xde9b, 0x45e0, 0x8936, 0xb045, 0x9191, 0x0, 0x1);
        gbc.writeMem(0x30f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xde9b, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00C4
        gbc.setState(0xead1, 0xc1d5, 0xb9e0, 0xd036, 0x5cba, 0x67f8, 0x1, 0x1);
        gbc.writeMem(0xead1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc1d5, gbc.sp());
        EXPECT(0xead3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead1));
        EXPECT(0x39, gbc.readMem(0xead2));
        // CB 39 00C5
        gbc.setState(0xe4c, 0x3cc6, 0x7620, 0x2ab2, 0xa131, 0x5cfe, 0x1, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3cc6, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00C6
        gbc.setState(0x7fd2, 0x63a9, 0x3cd0, 0x47fd, 0xc28d, 0xe4a5, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x63a9, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00C7
        gbc.setState(0x63f6, 0xfd1f, 0xdd80, 0x3947, 0xfc9a, 0x4654, 0x1, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0x63f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00C8
        gbc.setState(0x9084, 0xba19, 0xed0, 0x5f42, 0x2b27, 0x366c, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0x9086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9084));
        EXPECT(0x39, gbc.readMem(0x9085));
        // CB 39 00C9
        gbc.setState(0xb05f, 0x1ad8, 0xd480, 0xb0c8, 0x3b9, 0xd3ab, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ad8, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0x39, gbc.readMem(0xb060));
        // CB 39 00CA
        gbc.setState(0x518b, 0x1aa1, 0xd440, 0x9c69, 0x1a8f, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0x518b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0x518d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00CB
        gbc.setState(0x628d, 0xd41e, 0x8a10, 0xb565, 0x523c, 0x701d, 0x1, 0x0);
        gbc.writeMem(0x628d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x628f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00CC
        gbc.setState(0x3c71, 0xb003, 0x3160, 0x6908, 0xf021, 0x5238, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00CD
        gbc.setState(0x7ea3, 0xea7, 0x140, 0x4f7a, 0xf49, 0x2acc, 0x1, 0x1);
        gbc.writeMem(0x7ea3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0x7ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00CE
        gbc.setState(0x85fe, 0xd171, 0x23f0, 0xb943, 0x8e62, 0x4a53, 0x1, 0x1);
        gbc.writeMem(0x85fe, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fe));
        EXPECT(0x39, gbc.readMem(0x85ff));
        // CB 39 00CF
        gbc.setState(0xa0a1, 0x9050, 0xbb00, 0x9edf, 0xe45c, 0x5311, 0x0, 0x0);
        gbc.writeMem(0xa0a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0xa0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a1));
        EXPECT(0x39, gbc.readMem(0xa0a2));
        // CB 39 00D0
        gbc.setState(0x45bc, 0x648a, 0x4ef0, 0xa9a9, 0xe2f1, 0x5e2e, 0x1, 0x1);
        gbc.writeMem(0x45bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x648a, gbc.sp());
        EXPECT(0x45be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00D2
        gbc.setState(0x53de, 0x2a11, 0xba60, 0xa177, 0xac6e, 0xd8c2, 0x1, 0x1);
        gbc.writeMem(0x53de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2a11, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00D3
        gbc.setState(0xe4c9, 0x40f6, 0xa90, 0x8631, 0x5def, 0x427a, 0x1, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x40f6, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c9));
        EXPECT(0x39, gbc.readMem(0xe4ca));
        // CB 39 00D4
        gbc.setState(0x6c75, 0xc059, 0x400, 0x5c7, 0xadfb, 0xc21, 0x0, 0x1);
        gbc.writeMem(0x6c75, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc059, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00D5
        gbc.setState(0xbcb6, 0xe9ff, 0x9f00, 0x76f9, 0xa072, 0x126, 0x1, 0x1);
        gbc.writeMem(0xbcb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe9ff, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb6));
        EXPECT(0x39, gbc.readMem(0xbcb7));
        // CB 39 00D6
        gbc.setState(0xa0e4, 0x7f10, 0xbf00, 0x9ed7, 0x956b, 0x3df6, 0x0, 0x0);
        gbc.writeMem(0xa0e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0xa0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e4));
        EXPECT(0x39, gbc.readMem(0xa0e5));
        // CB 39 00D7
        gbc.setState(0x4cd7, 0x8309, 0x6b80, 0x609a, 0x33f1, 0x1f23, 0x0, 0x1);
        gbc.writeMem(0x4cd7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00D8
        gbc.setState(0x1c38, 0x4270, 0xdb60, 0x48db, 0xabf, 0x21d2, 0x1, 0x1);
        gbc.writeMem(0x1c38, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4270, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00D9
        gbc.setState(0xe55, 0x1ef7, 0xb300, 0xbbb4, 0x7d27, 0xedbe, 0x0, 0x0);
        gbc.writeMem(0xe55, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1ef7, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00DA
        gbc.setState(0xc4d6, 0x744f, 0x8df0, 0x49ae, 0xa3a8, 0xc036, 0x1, 0x1);
        gbc.writeMem(0xc4d6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x744f, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d6));
        EXPECT(0x39, gbc.readMem(0xc4d7));
        // CB 39 00DB
        gbc.setState(0xc87c, 0x6280, 0x55d0, 0xb242, 0x3fde, 0x4fa5, 0x1, 0x1);
        gbc.writeMem(0xc87c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6280, gbc.sp());
        EXPECT(0xc87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87c));
        EXPECT(0x39, gbc.readMem(0xc87d));
        // CB 39 00DC
        gbc.setState(0xa065, 0x2239, 0x75f0, 0x846a, 0x26dc, 0x7264, 0x1, 0x0);
        gbc.writeMem(0xa065, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2239, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa065));
        EXPECT(0x39, gbc.readMem(0xa066));
        // CB 39 00DD
        gbc.setState(0xa0e2, 0x759c, 0x8a50, 0x340e, 0xef16, 0xb778, 0x1, 0x0);
        gbc.writeMem(0xa0e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x759c, gbc.sp());
        EXPECT(0xa0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e2));
        EXPECT(0x39, gbc.readMem(0xa0e3));
        // CB 39 00DE
        gbc.setState(0x6019, 0xfdd, 0xab80, 0x19a8, 0xc9c5, 0xfa15, 0x0, 0x0);
        gbc.writeMem(0x6019, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x601b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00DF
        gbc.setState(0x67ab, 0x171a, 0x5a80, 0xc814, 0x1352, 0x6802, 0x1, 0x0);
        gbc.writeMem(0x67ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0x67ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00E0
        gbc.setState(0xaae2, 0xa6d2, 0x7640, 0x3eef, 0x94ae, 0xbad7, 0x1, 0x1);
        gbc.writeMem(0xaae2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae2));
        EXPECT(0x39, gbc.readMem(0xaae3));
        // CB 39 00E1
        gbc.setState(0x3412, 0x4126, 0x1ca0, 0xece, 0x7711, 0x2244, 0x1, 0x1);
        gbc.writeMem(0x3412, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0x3414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00E2
        gbc.setState(0x15e, 0x1d47, 0xedf0, 0x7050, 0xc229, 0x2302, 0x0, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1d47, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00E3
        gbc.setState(0xae45, 0xae97, 0x5a40, 0x1492, 0xee45, 0xdba, 0x1, 0x0);
        gbc.writeMem(0xae45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xae97, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae45));
        EXPECT(0x39, gbc.readMem(0xae46));
        // CB 39 00E4
        gbc.setState(0xb759, 0x91f0, 0x5280, 0x7c3e, 0x76df, 0x7107, 0x1, 0x0);
        gbc.writeMem(0xb759, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x91f0, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb759));
        EXPECT(0x39, gbc.readMem(0xb75a));
        // CB 39 00E5
        gbc.setState(0xaf11, 0x7b94, 0x470, 0x6c6, 0x1746, 0x7102, 0x0, 0x1);
        gbc.writeMem(0xaf11, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7b94, gbc.sp());
        EXPECT(0xaf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf11));
        EXPECT(0x39, gbc.readMem(0xaf12));
        // CB 39 00E6
        gbc.setState(0xa650, 0xcaf3, 0xce80, 0x97c7, 0xe1af, 0x290d, 0x0, 0x0);
        gbc.writeMem(0xa650, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0xa652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa650));
        EXPECT(0x39, gbc.readMem(0xa651));
        // CB 39 00E7
        gbc.setState(0xa871, 0x75cd, 0x5100, 0x7eef, 0xe99f, 0x1c10, 0x1, 0x1);
        gbc.writeMem(0xa871, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x75cd, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0x39, gbc.readMem(0xa872));
        // CB 39 00E8
        gbc.setState(0x40d1, 0x25f0, 0x1fc0, 0xd806, 0xcc53, 0x664a, 0x1, 0x1);
        gbc.writeMem(0x40d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x25f0, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00E9
        gbc.setState(0x1368, 0xe489, 0xb8e0, 0x86f8, 0xec60, 0x579, 0x0, 0x0);
        gbc.writeMem(0x1368, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe489, gbc.sp());
        EXPECT(0x136a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00EA
        gbc.setState(0xc75b, 0xbd7b, 0x1f0, 0xbc44, 0xe960, 0x2ca5, 0x1, 0x0);
        gbc.writeMem(0xc75b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbd7b, gbc.sp());
        EXPECT(0xc75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75b));
        EXPECT(0x39, gbc.readMem(0xc75c));
        // CB 39 00EB
        gbc.setState(0x9528, 0xd877, 0x6750, 0x3652, 0x158b, 0xdb2, 0x1, 0x1);
        gbc.writeMem(0x9528, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0x952a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9528));
        EXPECT(0x39, gbc.readMem(0x9529));
        // CB 39 00EC
        gbc.setState(0xbc92, 0x3639, 0x3e70, 0x7081, 0xac2f, 0xc48b, 0x1, 0x1);
        gbc.writeMem(0xbc92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0xbc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc92));
        EXPECT(0x39, gbc.readMem(0xbc93));
        // CB 39 00ED
        gbc.setState(0x4a42, 0xa8ab, 0x8720, 0x4671, 0x1d6e, 0x93ea, 0x1, 0x0);
        gbc.writeMem(0x4a42, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa8ab, gbc.sp());
        EXPECT(0x4a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00EE
        gbc.setState(0x9934, 0xc4a5, 0x6810, 0x1554, 0x6e3b, 0xfbdb, 0x0, 0x0);
        gbc.writeMem(0x9934, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0x9936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9934));
        EXPECT(0x39, gbc.readMem(0x9935));
        // CB 39 00EF
        gbc.setState(0x5390, 0xe89b, 0xa880, 0xbf65, 0x1d00, 0x2737, 0x1, 0x1);
        gbc.writeMem(0x5390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe89b, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00F0
        gbc.setState(0xd208, 0x7434, 0x2220, 0xd5f8, 0x553b, 0x3539, 0x0, 0x0);
        gbc.writeMem(0xd208, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7434, gbc.sp());
        EXPECT(0xd20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd208));
        EXPECT(0x39, gbc.readMem(0xd209));
        // CB 39 00F1
        gbc.setState(0xe9bf, 0xa75, 0xf2d0, 0x5f39, 0x8f1e, 0x37d0, 0x0, 0x0);
        gbc.writeMem(0xe9bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa75, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bf));
        EXPECT(0x39, gbc.readMem(0xe9c0));
        // CB 39 00F2
        gbc.setState(0x5183, 0x3d20, 0xbbe0, 0x9f44, 0xf102, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0x5183, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0x5185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00F3
        gbc.setState(0xde6, 0xe1c9, 0xd2c0, 0x58e2, 0xcc47, 0x1aee, 0x1, 0x0);
        gbc.writeMem(0xde6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0xde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00F4
        gbc.setState(0x69fa, 0xd1e3, 0x9c90, 0x1c10, 0xb2ae, 0xb030, 0x1, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd1e3, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00F5
        gbc.setState(0x1c08, 0x60cc, 0x7660, 0xf98f, 0x7e49, 0x98ca, 0x0, 0x0);
        gbc.writeMem(0x1c08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x60cc, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00F6
        gbc.setState(0x229f, 0xbb4e, 0xa650, 0x6058, 0x1f37, 0x9c14, 0x1, 0x1);
        gbc.writeMem(0x229f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00F9
        gbc.setState(0x68ee, 0x4a98, 0x7b80, 0xf53e, 0x4a58, 0x65bf, 0x0, 0x0);
        gbc.writeMem(0x68ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4a98, gbc.sp());
        EXPECT(0x68f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00FA
        gbc.setState(0x67bf, 0xfe9, 0x1760, 0x4291, 0xb69f, 0x7d69, 0x0, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0x67c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00FB
        gbc.setState(0x2c33, 0x2a4c, 0x8010, 0x31f6, 0x7564, 0x259a, 0x1, 0x0);
        gbc.writeMem(0x2c33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2a4c, gbc.sp());
        EXPECT(0x2c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00FC
        gbc.setState(0xe1f0, 0x32d9, 0x1d70, 0xb769, 0x494d, 0x78c7, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f0));
        EXPECT(0x39, gbc.readMem(0xe1f1));
        // CB 39 00FD
        gbc.setState(0x2639, 0xf317, 0xaa60, 0xdef2, 0xcf93, 0x7ee1, 0x0, 0x1);
        gbc.writeMem(0x2639, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf317, gbc.sp());
        EXPECT(0x263b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 00FE
        gbc.setState(0x6961, 0xc3cb, 0x3b70, 0xb3f9, 0x6132, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0x6961, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc3cb, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 00FF
        gbc.setState(0xb087, 0xd3fc, 0xe020, 0xfcc6, 0x68c3, 0xb385, 0x0, 0x1);
        gbc.writeMem(0xb087, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd3fc, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb087));
        EXPECT(0x39, gbc.readMem(0xb088));
        // CB 39 0100
        gbc.setState(0x6a05, 0x722b, 0x4ca0, 0x8c1e, 0x72f1, 0x5b9f, 0x1, 0x1);
        gbc.writeMem(0x6a05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x722b, gbc.sp());
        EXPECT(0x6a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0101
        gbc.setState(0x634b, 0x35ff, 0x3ae0, 0x7443, 0x9b99, 0x321, 0x1, 0x0);
        gbc.writeMem(0x634b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0103
        gbc.setState(0x6a0d, 0x6080, 0x2b80, 0xca98, 0x1eb3, 0xada6, 0x0, 0x0);
        gbc.writeMem(0x6a0d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0104
        gbc.setState(0xae57, 0xd206, 0x9230, 0x451d, 0x79d2, 0x400e, 0x1, 0x0);
        gbc.writeMem(0xae57, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0xae59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae57));
        EXPECT(0x39, gbc.readMem(0xae58));
        // CB 39 0105
        gbc.setState(0x4c, 0x6e0, 0x90f0, 0x9147, 0x456, 0xe915, 0x0, 0x1);
        gbc.writeMem(0x4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6e0, gbc.sp());
        EXPECT(0x4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0106
        gbc.setState(0xef7d, 0x57c3, 0x8ec0, 0x9919, 0x8f55, 0x3c44, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x57c3, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0x39, gbc.readMem(0xef7e));
        // CB 39 0107
        gbc.setState(0x2b25, 0xc9b7, 0x5ae0, 0xeea4, 0xea03, 0xb43f, 0x0, 0x0);
        gbc.writeMem(0x2b25, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x2b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0108
        gbc.setState(0x96ff, 0x3cfb, 0xf3e0, 0xa673, 0x1146, 0xadc3, 0x1, 0x0);
        gbc.writeMem(0x96ff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0x9701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ff));
        EXPECT(0x39, gbc.readMem(0x9700));
        // CB 39 0109
        gbc.setState(0xe860, 0xf315, 0x23e0, 0x6976, 0xd42d, 0x7ec5, 0x1, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe860));
        EXPECT(0x39, gbc.readMem(0xe861));
        // CB 39 010A
        gbc.setState(0x4f85, 0xa055, 0x5210, 0x1cd5, 0x4017, 0xe47a, 0x0, 0x0);
        gbc.writeMem(0x4f85, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa055, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 010B
        gbc.setState(0x3f0a, 0xe0cf, 0x340, 0xa991, 0x497c, 0xddd0, 0x1, 0x0);
        gbc.writeMem(0x3f0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0x3f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 010D
        gbc.setState(0xa6f2, 0x4612, 0x2af0, 0x1566, 0x1e9a, 0x83f, 0x0, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0x39, gbc.readMem(0xa6f3));
        // CB 39 010E
        gbc.setState(0x6021, 0xfee8, 0x3850, 0x412e, 0x36ca, 0x69f6, 0x1, 0x1);
        gbc.writeMem(0x6021, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 010F
        gbc.setState(0xe9a1, 0xb2a, 0x5d30, 0xd532, 0x1948, 0x379c, 0x1, 0x1);
        gbc.writeMem(0xe9a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0xe9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a1));
        EXPECT(0x39, gbc.readMem(0xe9a2));
        // CB 39 0110
        gbc.setState(0xacd2, 0xff5e, 0x100, 0x105d, 0xa2b3, 0x7d7d, 0x1, 0x0);
        gbc.writeMem(0xacd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0xacd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd2));
        EXPECT(0x39, gbc.readMem(0xacd3));
        // CB 39 0111
        gbc.setState(0xaab2, 0x7c75, 0x52c0, 0x65f3, 0xc275, 0xd576, 0x0, 0x1);
        gbc.writeMem(0xaab2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7c75, gbc.sp());
        EXPECT(0xaab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab2));
        EXPECT(0x39, gbc.readMem(0xaab3));
        // CB 39 0112
        gbc.setState(0xddc9, 0x6013, 0x8c10, 0x7bc1, 0x7223, 0x3def, 0x0, 0x0);
        gbc.writeMem(0xddc9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6013, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0x39, gbc.readMem(0xddca));
        // CB 39 0113
        gbc.setState(0x6664, 0xcd83, 0xf8c0, 0x7b53, 0x62a0, 0x8c1c, 0x1, 0x1);
        gbc.writeMem(0x6664, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcd83, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0114
        gbc.setState(0x3b21, 0x24b6, 0xa9c0, 0xe79e, 0xc68a, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0x3b21, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x24b6, gbc.sp());
        EXPECT(0x3b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0115
        gbc.setState(0x60b, 0xdb0c, 0x38e0, 0xeecb, 0x1e86, 0xc634, 0x0, 0x1);
        gbc.writeMem(0x60b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0x60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0117
        gbc.setState(0x49df, 0xa9f9, 0x15c0, 0xb2ec, 0xa0be, 0x98cf, 0x0, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa9f9, gbc.sp());
        EXPECT(0x49e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0118
        gbc.setState(0xe86b, 0x8ffc, 0x92e0, 0xe920, 0x6e32, 0x1095, 0x0, 0x1);
        gbc.writeMem(0xe86b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8ffc, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86b));
        EXPECT(0x39, gbc.readMem(0xe86c));
        // CB 39 0119
        gbc.setState(0xae1, 0xf044, 0x300, 0xd9fe, 0xb672, 0xf5c7, 0x1, 0x1);
        gbc.writeMem(0xae1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 011A
        gbc.setState(0x854d, 0xdb70, 0x7b20, 0x1874, 0x6a20, 0xafc, 0x0, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdb70, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x39, gbc.readMem(0x854e));
        // CB 39 011B
        gbc.setState(0x95f9, 0xf74a, 0x1f20, 0xcca7, 0x2f30, 0x8e90, 0x1, 0x0);
        gbc.writeMem(0x95f9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf74a, gbc.sp());
        EXPECT(0x95fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f9));
        EXPECT(0x39, gbc.readMem(0x95fa));
        // CB 39 011D
        gbc.setState(0x3162, 0x383d, 0xd290, 0xd12b, 0x69c, 0x4ae6, 0x0, 0x1);
        gbc.writeMem(0x3162, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 011E
        gbc.setState(0xa52, 0x940a, 0x230, 0xa35d, 0xa04, 0xb883, 0x0, 0x0);
        gbc.writeMem(0xa52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0xa54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 011F
        gbc.setState(0xc541, 0x7d68, 0x83c0, 0xc7d5, 0x7c7a, 0x6915, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0xc543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc541));
        EXPECT(0x39, gbc.readMem(0xc542));
        // CB 39 0121
        gbc.setState(0x346d, 0x2b34, 0xf430, 0xc4f, 0x8724, 0x625b, 0x1, 0x1);
        gbc.writeMem(0x346d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0122
        gbc.setState(0xcf1, 0x9733, 0xedb0, 0xf240, 0x66a4, 0x2e4e, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9733, gbc.sp());
        EXPECT(0xcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0123
        gbc.setState(0xe827, 0x2228, 0x5e80, 0x19b8, 0x9f70, 0x389b, 0x0, 0x1);
        gbc.writeMem(0xe827, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2228, gbc.sp());
        EXPECT(0xe829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe827));
        EXPECT(0x39, gbc.readMem(0xe828));
        // CB 39 0125
        gbc.setState(0xe6a7, 0xd7e4, 0x31f0, 0xebec, 0x754c, 0x6e5c, 0x0, 0x1);
        gbc.writeMem(0xe6a7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd7e4, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a7));
        EXPECT(0x39, gbc.readMem(0xe6a8));
        // CB 39 0127
        gbc.setState(0x746, 0xa55e, 0x1680, 0x8e7f, 0xfbc6, 0x5, 0x1, 0x0);
        gbc.writeMem(0x746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa55e, gbc.sp());
        EXPECT(0x748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0128
        gbc.setState(0xf23, 0xc473, 0x9290, 0x15a2, 0xe238, 0xead2, 0x1, 0x0);
        gbc.writeMem(0xf23, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0xf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0129
        gbc.setState(0x399e, 0xbf9f, 0x3810, 0x4c61, 0x2904, 0x6363, 0x0, 0x1);
        gbc.writeMem(0x399e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0x39a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 012A
        gbc.setState(0x12b2, 0xd61c, 0x39b0, 0x337f, 0xa084, 0x3905, 0x1, 0x1);
        gbc.writeMem(0x12b2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd61c, gbc.sp());
        EXPECT(0x12b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 012B
        gbc.setState(0xd481, 0x6db0, 0xeb80, 0x8ff3, 0x7ff1, 0x6e20, 0x1, 0x1);
        gbc.writeMem(0xd481, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6db0, gbc.sp());
        EXPECT(0xd483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd481));
        EXPECT(0x39, gbc.readMem(0xd482));
        // CB 39 012C
        gbc.setState(0xf2f, 0xcbd6, 0x76f0, 0xe3a, 0xdba3, 0x829, 0x1, 0x1);
        gbc.writeMem(0xf2f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcbd6, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 012D
        gbc.setState(0xc998, 0xb462, 0x4d40, 0x327c, 0x1b07, 0xacb1, 0x0, 0x1);
        gbc.writeMem(0xc998, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb462, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc998));
        EXPECT(0x39, gbc.readMem(0xc999));
        // CB 39 012E
        gbc.setState(0x3dff, 0x62b2, 0xeff0, 0x2178, 0xf439, 0xf8f4, 0x1, 0x0);
        gbc.writeMem(0x3dff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 012F
        gbc.setState(0xadbc, 0xfced, 0xdd40, 0xf821, 0xcf54, 0xc2ef, 0x0, 0x1);
        gbc.writeMem(0xadbc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfced, gbc.sp());
        EXPECT(0xadbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbc));
        EXPECT(0x39, gbc.readMem(0xadbd));
        // CB 39 0131
        gbc.setState(0xbf50, 0xfb43, 0xfa80, 0xcbbc, 0x37a, 0x4c75, 0x1, 0x0);
        gbc.writeMem(0xbf50, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0xbf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf50));
        EXPECT(0x39, gbc.readMem(0xbf51));
        // CB 39 0132
        gbc.setState(0x1dd7, 0x9a8b, 0x94f0, 0xd51a, 0xd3d5, 0xb5c8, 0x0, 0x0);
        gbc.writeMem(0x1dd7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9a8b, gbc.sp());
        EXPECT(0x1dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0133
        gbc.setState(0xd8f4, 0x6c99, 0xa400, 0x52bd, 0x82ba, 0x5455, 0x0, 0x0);
        gbc.writeMem(0xd8f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6c99, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f4));
        EXPECT(0x39, gbc.readMem(0xd8f5));
        // CB 39 0134
        gbc.setState(0x9bb1, 0x4131, 0xd630, 0x8ae1, 0x6ebc, 0xc511, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4131, gbc.sp());
        EXPECT(0x9bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb1));
        EXPECT(0x39, gbc.readMem(0x9bb2));
        // CB 39 0135
        gbc.setState(0xe331, 0x954f, 0x5fc0, 0x5ed0, 0xd2f2, 0x2167, 0x1, 0x1);
        gbc.writeMem(0xe331, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x954f, gbc.sp());
        EXPECT(0xe333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe331));
        EXPECT(0x39, gbc.readMem(0xe332));
        // CB 39 0136
        gbc.setState(0x35e4, 0xee13, 0x4600, 0xdb, 0xc4f7, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x35e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xee13, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0137
        gbc.setState(0x3a9a, 0x1c8d, 0x8210, 0xe828, 0x1b1f, 0xa9ff, 0x0, 0x1);
        gbc.writeMem(0x3a9a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0138
        gbc.setState(0x9f3b, 0x3401, 0x5dd0, 0x8da0, 0xa930, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x9f3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3401, gbc.sp());
        EXPECT(0x9f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3b));
        EXPECT(0x39, gbc.readMem(0x9f3c));
        // CB 39 0139
        gbc.setState(0x9647, 0x5f0f, 0x1ed0, 0x8b36, 0xc898, 0x58db, 0x0, 0x1);
        gbc.writeMem(0x9647, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5f0f, gbc.sp());
        EXPECT(0x9649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9647));
        EXPECT(0x39, gbc.readMem(0x9648));
        // CB 39 013A
        gbc.setState(0x14b0, 0xa47a, 0xf2c0, 0x6a11, 0x75b6, 0x964e, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 013B
        gbc.setState(0x1b9f, 0xe56f, 0x46e0, 0xc414, 0x8ef9, 0x22c6, 0x1, 0x0);
        gbc.writeMem(0x1b9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe56f, gbc.sp());
        EXPECT(0x1ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 013C
        gbc.setState(0xa578, 0x90da, 0xc880, 0xfdd5, 0x956a, 0xd507, 0x1, 0x0);
        gbc.writeMem(0xa578, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x90da, gbc.sp());
        EXPECT(0xa57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa578));
        EXPECT(0x39, gbc.readMem(0xa579));
        // CB 39 013D
        gbc.setState(0x1f20, 0xf28, 0x8470, 0x9c6, 0xe94c, 0x65bc, 0x1, 0x1);
        gbc.writeMem(0x1f20, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 013E
        gbc.setState(0x48ee, 0x9749, 0xb2a0, 0xf0f7, 0x5122, 0xf1b4, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9749, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 013F
        gbc.setState(0xe7b6, 0x64b2, 0x5c00, 0x227e, 0xe590, 0x4e52, 0x0, 0x0);
        gbc.writeMem(0xe7b6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x64b2, gbc.sp());
        EXPECT(0xe7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b6));
        EXPECT(0x39, gbc.readMem(0xe7b7));
        // CB 39 0140
        gbc.setState(0xbfb2, 0x987d, 0x5380, 0x84c0, 0x5e9d, 0xc956, 0x0, 0x0);
        gbc.writeMem(0xbfb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x987d, gbc.sp());
        EXPECT(0xbfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb2));
        EXPECT(0x39, gbc.readMem(0xbfb3));
        // CB 39 0141
        gbc.setState(0x2d9d, 0x122c, 0x5640, 0x13cc, 0x4211, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x2d9d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0142
        gbc.setState(0x2ce3, 0x2eab, 0x8680, 0x64f1, 0x870a, 0x63e1, 0x1, 0x1);
        gbc.writeMem(0x2ce3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0143
        gbc.setState(0xd207, 0xbd47, 0x6f90, 0x6717, 0x677b, 0x5a5, 0x0, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0xd209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd207));
        EXPECT(0x39, gbc.readMem(0xd208));
        // CB 39 0144
        gbc.setState(0xe806, 0xf22a, 0xa500, 0x76d8, 0x3fd, 0x90c0, 0x1, 0x1);
        gbc.writeMem(0xe806, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0xe808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe806));
        EXPECT(0x39, gbc.readMem(0xe807));
        // CB 39 0145
        gbc.setState(0xe142, 0x8a2, 0xf8f0, 0x9349, 0xedc3, 0x198, 0x0, 0x0);
        gbc.writeMem(0xe142, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8a2, gbc.sp());
        EXPECT(0xe144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe142));
        EXPECT(0x39, gbc.readMem(0xe143));
        // CB 39 0146
        gbc.setState(0xa8df, 0xcf2, 0x9a40, 0x5a17, 0x833b, 0xfdc1, 0x1, 0x1);
        gbc.writeMem(0xa8df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcf2, gbc.sp());
        EXPECT(0xa8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8df));
        EXPECT(0x39, gbc.readMem(0xa8e0));
        // CB 39 0147
        gbc.setState(0x84f8, 0x30f9, 0xd180, 0x3ee0, 0x8459, 0x948a, 0x0, 0x1);
        gbc.writeMem(0x84f8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x30f9, gbc.sp());
        EXPECT(0x84fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f8));
        EXPECT(0x39, gbc.readMem(0x84f9));
        // CB 39 0148
        gbc.setState(0x8834, 0xb8a4, 0x5e90, 0xe99c, 0x8b20, 0x2694, 0x0, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0x39, gbc.readMem(0x8835));
        // CB 39 014A
        gbc.setState(0xb7c3, 0xfffe, 0xf210, 0x2ce8, 0x3cb1, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfffe, gbc.sp());
        EXPECT(0xb7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c3));
        EXPECT(0x39, gbc.readMem(0xb7c4));
        // CB 39 014B
        gbc.setState(0x15e, 0xab59, 0x1d70, 0x1883, 0xb073, 0xc2f8, 0x1, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 014C
        gbc.setState(0x4a14, 0x1a3d, 0xee20, 0xd358, 0xd324, 0x9668, 0x0, 0x1);
        gbc.writeMem(0x4a14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1a3d, gbc.sp());
        EXPECT(0x4a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 014D
        gbc.setState(0x1ddf, 0xba63, 0xb7b0, 0x653f, 0x272, 0x5614, 0x1, 0x1);
        gbc.writeMem(0x1ddf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xba63, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 014E
        gbc.setState(0x52, 0xc477, 0xe710, 0x6661, 0x3456, 0x775e, 0x1, 0x0);
        gbc.writeMem(0x52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 014F
        gbc.setState(0xc795, 0xb3d5, 0xe350, 0xaa5, 0x7e91, 0x8830, 0x0, 0x0);
        gbc.writeMem(0xc795, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0xc797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc795));
        EXPECT(0x39, gbc.readMem(0xc796));
        // CB 39 0150
        gbc.setState(0xe0bb, 0x2a6c, 0x1560, 0x830, 0xab0c, 0x93d6, 0x0, 0x0);
        gbc.writeMem(0xe0bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2a6c, gbc.sp());
        EXPECT(0xe0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bb));
        EXPECT(0x39, gbc.readMem(0xe0bc));
        // CB 39 0151
        gbc.setState(0xa390, 0xe2bc, 0x29b0, 0xd263, 0xa5d5, 0x27d, 0x0, 0x1);
        gbc.writeMem(0xa390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0xa392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa390));
        EXPECT(0x39, gbc.readMem(0xa391));
        // CB 39 0152
        gbc.setState(0x6476, 0x6d46, 0x7a10, 0xa757, 0x302b, 0x7a74, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6d46, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0153
        gbc.setState(0x4d2a, 0xcbb1, 0x3090, 0x2b99, 0xcdb1, 0xd1f2, 0x1, 0x1);
        gbc.writeMem(0x4d2a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcbb1, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0154
        gbc.setState(0x23f4, 0x46e8, 0x4b50, 0x2e85, 0x805b, 0x9290, 0x1, 0x0);
        gbc.writeMem(0x23f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0155
        gbc.setState(0x59bd, 0x55e4, 0x3660, 0xa09, 0x5fc, 0xf5a4, 0x0, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0156
        gbc.setState(0x909e, 0x32c, 0x80b0, 0xa75, 0x6327, 0x8a4e, 0x0, 0x1);
        gbc.writeMem(0x909e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909e));
        EXPECT(0x39, gbc.readMem(0x909f));
        // CB 39 0157
        gbc.setState(0xb095, 0x6902, 0x80, 0x463e, 0x6eb1, 0x420f, 0x0, 0x0);
        gbc.writeMem(0xb095, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0xb097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb095));
        EXPECT(0x39, gbc.readMem(0xb096));
        // CB 39 0158
        gbc.setState(0x678e, 0x4bea, 0x8320, 0xd36b, 0xb7e8, 0x4585, 0x0, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0159
        gbc.setState(0x4aa, 0xad7e, 0xe1a0, 0xa9fb, 0xa5bc, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x4aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xad7e, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 015A
        gbc.setState(0xc8b5, 0x979f, 0x1790, 0xa065, 0xecbb, 0x5ffd, 0x0, 0x0);
        gbc.writeMem(0xc8b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x979f, gbc.sp());
        EXPECT(0xc8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b5));
        EXPECT(0x39, gbc.readMem(0xc8b6));
        // CB 39 015B
        gbc.setState(0xf04, 0xecd4, 0x290, 0xd6b2, 0x7492, 0x8dfb, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xecd4, gbc.sp());
        EXPECT(0xf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 015C
        gbc.setState(0x36b1, 0xbcf5, 0xff60, 0x68f1, 0xef21, 0xbab8, 0x1, 0x1);
        gbc.writeMem(0x36b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbcf5, gbc.sp());
        EXPECT(0x36b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 015D
        gbc.setState(0x6423, 0xfc12, 0xbd70, 0xa3ca, 0x883a, 0x8d71, 0x1, 0x1);
        gbc.writeMem(0x6423, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 015E
        gbc.setState(0x7623, 0x1870, 0x9590, 0xedb, 0x27f, 0x4c6f, 0x0, 0x0);
        gbc.writeMem(0x7623, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 015F
        gbc.setState(0x51d1, 0x3d53, 0xd520, 0x62c6, 0x6151, 0x5460, 0x1, 0x0);
        gbc.writeMem(0x51d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0x51d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0160
        gbc.setState(0x8748, 0x5049, 0x6680, 0xdcc8, 0xc1c2, 0x3f1c, 0x1, 0x1);
        gbc.writeMem(0x8748, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0x874a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8748));
        EXPECT(0x39, gbc.readMem(0x8749));
        // CB 39 0161
        gbc.setState(0xb322, 0xa2e4, 0x8310, 0xacfa, 0xbf63, 0x777c, 0x1, 0x1);
        gbc.writeMem(0xb322, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa2e4, gbc.sp());
        EXPECT(0xb324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb322));
        EXPECT(0x39, gbc.readMem(0xb323));
        // CB 39 0162
        gbc.setState(0x6e31, 0xbc2, 0xdc50, 0x3e99, 0x9604, 0x9520, 0x0, 0x0);
        gbc.writeMem(0x6e31, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbc2, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0163
        gbc.setState(0x4c7c, 0xe4c9, 0x9530, 0x3582, 0x1213, 0x874b, 0x0, 0x0);
        gbc.writeMem(0x4c7c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe4c9, gbc.sp());
        EXPECT(0x4c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0164
        gbc.setState(0xe78c, 0x1619, 0x2d50, 0x3775, 0x8e24, 0xfb22, 0x1, 0x0);
        gbc.writeMem(0xe78c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1619, gbc.sp());
        EXPECT(0xe78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78c));
        EXPECT(0x39, gbc.readMem(0xe78d));
        // CB 39 0165
        gbc.setState(0x35e8, 0x850, 0x26f0, 0xecbb, 0x627, 0xc781, 0x0, 0x1);
        gbc.writeMem(0x35e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x850, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0166
        gbc.setState(0x5d33, 0x63c8, 0x72a0, 0x872d, 0xff36, 0x8dbd, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63c8, gbc.sp());
        EXPECT(0x5d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0167
        gbc.setState(0x525e, 0xc871, 0xba70, 0xa564, 0x4041, 0x128c, 0x1, 0x1);
        gbc.writeMem(0x525e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc871, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0168
        gbc.setState(0x64b1, 0xbe01, 0x85c0, 0x70c0, 0xf3b9, 0xef36, 0x1, 0x1);
        gbc.writeMem(0x64b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbe01, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0169
        gbc.setState(0x5bc0, 0x65b7, 0x8ae0, 0x5aca, 0x5761, 0xf79, 0x1, 0x1);
        gbc.writeMem(0x5bc0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x65b7, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 016A
        gbc.setState(0x4ef0, 0x7e72, 0x7600, 0x4351, 0x20fd, 0x909b, 0x0, 0x0);
        gbc.writeMem(0x4ef0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7e72, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 016B
        gbc.setState(0x603e, 0x9c34, 0x5570, 0x2071, 0x8293, 0xbfa7, 0x1, 0x1);
        gbc.writeMem(0x603e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9c34, gbc.sp());
        EXPECT(0x6040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 016C
        gbc.setState(0x6ae0, 0xdbc2, 0x8e40, 0x677d, 0xf470, 0xe819, 0x0, 0x0);
        gbc.writeMem(0x6ae0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdbc2, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 016D
        gbc.setState(0xa93f, 0xef29, 0x3400, 0xabb, 0x150, 0xf522, 0x1, 0x0);
        gbc.writeMem(0xa93f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93f));
        EXPECT(0x39, gbc.readMem(0xa940));
        // CB 39 016E
        gbc.setState(0x8648, 0x49d7, 0x9f80, 0xa733, 0xdd49, 0x60fd, 0x1, 0x0);
        gbc.writeMem(0x8648, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49d7, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8648));
        EXPECT(0x39, gbc.readMem(0x8649));
        // CB 39 016F
        gbc.setState(0xd82c, 0xaa00, 0xdb40, 0xe617, 0xd00e, 0xed71, 0x0, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaa00, gbc.sp());
        EXPECT(0xd82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82c));
        EXPECT(0x39, gbc.readMem(0xd82d));
        // CB 39 0170
        gbc.setState(0x7e0a, 0x9105, 0xe4c0, 0x2142, 0x88f, 0x8662, 0x1, 0x0);
        gbc.writeMem(0x7e0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x7e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0171
        gbc.setState(0xd806, 0x9182, 0x55c0, 0x81e4, 0x84f8, 0xd2a3, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9182, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd806));
        EXPECT(0x39, gbc.readMem(0xd807));
        // CB 39 0172
        gbc.setState(0x8760, 0xccdf, 0x6f30, 0x8a1c, 0x1749, 0xe7cd, 0x0, 0x0);
        gbc.writeMem(0x8760, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xccdf, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8760));
        EXPECT(0x39, gbc.readMem(0x8761));
        // CB 39 0173
        gbc.setState(0x3306, 0xcb0e, 0xe4d0, 0x1444, 0x3699, 0x7930, 0x1, 0x0);
        gbc.writeMem(0x3306, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcb0e, gbc.sp());
        EXPECT(0x3308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0175
        gbc.setState(0x44d7, 0x2544, 0x1760, 0x2798, 0xbaf, 0x2ec2, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0176
        gbc.setState(0x8db3, 0x1541, 0x2240, 0xf3f8, 0x7178, 0x5db, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0x39, gbc.readMem(0x8db4));
        // CB 39 0177
        gbc.setState(0x77b1, 0x86b9, 0x2250, 0x9b50, 0xaa00, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x77b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0178
        gbc.setState(0x2e82, 0x9459, 0x6b20, 0xe034, 0x151d, 0x1d96, 0x0, 0x1);
        gbc.writeMem(0x2e82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x2e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0179
        gbc.setState(0x6f2b, 0x4b7f, 0xa750, 0xd955, 0xdb87, 0x3e37, 0x0, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4b7f, gbc.sp());
        EXPECT(0x6f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 017C
        gbc.setState(0x8f12, 0x61f, 0xe380, 0xf73e, 0x161c, 0x4286, 0x0, 0x0);
        gbc.writeMem(0x8f12, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x61f, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f12));
        EXPECT(0x39, gbc.readMem(0x8f13));
        // CB 39 017D
        gbc.setState(0xe5c0, 0x4340, 0xd600, 0xf12e, 0xbbc4, 0xfd97, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4340, gbc.sp());
        EXPECT(0xe5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c0));
        EXPECT(0x39, gbc.readMem(0xe5c1));
        // CB 39 017E
        gbc.setState(0x947e, 0x1a21, 0x83e0, 0x4447, 0xc11e, 0x50f4, 0x1, 0x1);
        gbc.writeMem(0x947e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x9480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947e));
        EXPECT(0x39, gbc.readMem(0x947f));
        // CB 39 017F
        gbc.setState(0x9b5b, 0x2a9c, 0x9810, 0x5918, 0xde45, 0x2ef8, 0x0, 0x0);
        gbc.writeMem(0x9b5b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x9b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5b));
        EXPECT(0x39, gbc.readMem(0x9b5c));
        // CB 39 0180
        gbc.setState(0x6d86, 0x17b1, 0xb2b0, 0x5ef8, 0x157, 0x75fc, 0x0, 0x0);
        gbc.writeMem(0x6d86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x17b1, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0181
        gbc.setState(0xb8ce, 0x45b7, 0xe9b0, 0x3ead, 0x9a, 0x1eca, 0x0, 0x1);
        gbc.writeMem(0xb8ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ce));
        EXPECT(0x39, gbc.readMem(0xb8cf));
        // CB 39 0182
        gbc.setState(0x6cb0, 0xaaac, 0x4960, 0x5ca4, 0x66f7, 0x3373, 0x0, 0x0);
        gbc.writeMem(0x6cb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0183
        gbc.setState(0xef58, 0x3a5b, 0xbe50, 0x7e7a, 0x86be, 0x3a75, 0x1, 0x1);
        gbc.writeMem(0xef58, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef58));
        EXPECT(0x39, gbc.readMem(0xef59));
        // CB 39 0184
        gbc.setState(0x46f1, 0x1ace, 0x7e00, 0xe5d, 0x6220, 0xe809, 0x0, 0x1);
        gbc.writeMem(0x46f1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0x46f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0185
        gbc.setState(0x3c8d, 0xc8bb, 0x16e0, 0x11e0, 0xdd94, 0xd26d, 0x1, 0x1);
        gbc.writeMem(0x3c8d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x3c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0186
        gbc.setState(0x1174, 0x6bd7, 0xc540, 0x7ba1, 0x7002, 0xcdd1, 0x1, 0x0);
        gbc.writeMem(0x1174, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0187
        gbc.setState(0xa9b, 0xc0e5, 0xe7e0, 0x5524, 0x187c, 0xa466, 0x0, 0x0);
        gbc.writeMem(0xa9b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0189
        gbc.setState(0xc42d, 0x6d16, 0x9ca0, 0x5873, 0xb946, 0x2b8, 0x1, 0x1);
        gbc.writeMem(0xc42d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6d16, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42d));
        EXPECT(0x39, gbc.readMem(0xc42e));
        // CB 39 018A
        gbc.setState(0xe3be, 0xda52, 0x4960, 0xcf6e, 0x2ed1, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0xe3be, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xda52, gbc.sp());
        EXPECT(0xe3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3be));
        EXPECT(0x39, gbc.readMem(0xe3bf));
        // CB 39 018B
        gbc.setState(0x6a9a, 0xadec, 0x2a40, 0x5cd, 0x19f1, 0x8585, 0x1, 0x1);
        gbc.writeMem(0x6a9a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xadec, gbc.sp());
        EXPECT(0x6a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 018C
        gbc.setState(0xdbe6, 0xee71, 0x94c0, 0x2405, 0xb266, 0x1e45, 0x1, 0x0);
        gbc.writeMem(0xdbe6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe6));
        EXPECT(0x39, gbc.readMem(0xdbe7));
        // CB 39 018D
        gbc.setState(0x749f, 0x3370, 0x3e60, 0x12b4, 0x3e52, 0x1a25, 0x0, 0x1);
        gbc.writeMem(0x749f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x74a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 018E
        gbc.setState(0x673a, 0x95ed, 0xb7f0, 0x4f9b, 0x8f6b, 0x9350, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x95ed, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 018F
        gbc.setState(0xb0d3, 0x25c4, 0x9d90, 0xf3a1, 0x16aa, 0x7147, 0x0, 0x0);
        gbc.writeMem(0xb0d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x25c4, gbc.sp());
        EXPECT(0xb0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d3));
        EXPECT(0x39, gbc.readMem(0xb0d4));
        // CB 39 0190
        gbc.setState(0xbf5e, 0xf985, 0xf6a0, 0xde3, 0x5a79, 0x525f, 0x1, 0x0);
        gbc.writeMem(0xbf5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5e));
        EXPECT(0x39, gbc.readMem(0xbf5f));
        // CB 39 0191
        gbc.setState(0x598f, 0xbc22, 0x63f0, 0xa430, 0xe766, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0x598f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0192
        gbc.setState(0x7a64, 0x7dbf, 0xa470, 0xc6f3, 0x9c5e, 0xf6a6, 0x0, 0x1);
        gbc.writeMem(0x7a64, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x7a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0193
        gbc.setState(0x8530, 0xf428, 0x4c60, 0x3f86, 0xafd7, 0xa259, 0x0, 0x1);
        gbc.writeMem(0x8530, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf428, gbc.sp());
        EXPECT(0x8532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8530));
        EXPECT(0x39, gbc.readMem(0x8531));
        // CB 39 0194
        gbc.setState(0xb78, 0xacf7, 0x82c0, 0xc4ba, 0xd888, 0x69f9, 0x0, 0x1);
        gbc.writeMem(0xb78, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0195
        gbc.setState(0x4b9f, 0x530e, 0x3440, 0x89f7, 0x7ffd, 0xb65e, 0x1, 0x0);
        gbc.writeMem(0x4b9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0196
        gbc.setState(0x21fc, 0x7b7c, 0x3060, 0xcf06, 0x590b, 0x3676, 0x1, 0x1);
        gbc.writeMem(0x21fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0x21fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0197
        gbc.setState(0x8be5, 0xa774, 0xe290, 0x41c, 0xa98, 0xa2c, 0x0, 0x1);
        gbc.writeMem(0x8be5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa774, gbc.sp());
        EXPECT(0x8be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be5));
        EXPECT(0x39, gbc.readMem(0x8be6));
        // CB 39 0198
        gbc.setState(0x9b82, 0x61e7, 0xfd80, 0xeaf5, 0x90c9, 0x6747, 0x0, 0x0);
        gbc.writeMem(0x9b82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b82));
        EXPECT(0x39, gbc.readMem(0x9b83));
        // CB 39 019A
        gbc.setState(0x13a6, 0x4910, 0x4cc0, 0x3adc, 0xc15c, 0x1c4, 0x0, 0x0);
        gbc.writeMem(0x13a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4910, gbc.sp());
        EXPECT(0x13a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 019B
        gbc.setState(0x7565, 0xd850, 0xcf30, 0xe178, 0xd568, 0xa103, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0x7567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 019C
        gbc.setState(0xe275, 0x4ce, 0x9d70, 0x63e2, 0xcf63, 0x9226, 0x0, 0x1);
        gbc.writeMem(0xe275, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe275));
        EXPECT(0x39, gbc.readMem(0xe276));
        // CB 39 019D
        gbc.setState(0xeb39, 0x871d, 0x84e0, 0xe586, 0x1662, 0xc9ab, 0x0, 0x1);
        gbc.writeMem(0xeb39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0xeb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb39));
        EXPECT(0x39, gbc.readMem(0xeb3a));
        // CB 39 019E
        gbc.setState(0x8c3a, 0x9d14, 0x87d0, 0xfda, 0xfd3c, 0xdcff, 0x0, 0x1);
        gbc.writeMem(0x8c3a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3a));
        EXPECT(0x39, gbc.readMem(0x8c3b));
        // CB 39 01A0
        gbc.setState(0x4e70, 0x2452, 0x26f0, 0xbae4, 0x1a37, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0x4e70, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2452, gbc.sp());
        EXPECT(0x4e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01A1
        gbc.setState(0x169c, 0x702, 0xe8d0, 0x4c29, 0xdaea, 0x5458, 0x1, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01A2
        gbc.setState(0x98fa, 0xc601, 0x2220, 0x82a2, 0x4981, 0x57de, 0x1, 0x1);
        gbc.writeMem(0x98fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc601, gbc.sp());
        EXPECT(0x98fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fa));
        EXPECT(0x39, gbc.readMem(0x98fb));
        // CB 39 01A3
        gbc.setState(0x554b, 0x158d, 0x8300, 0x947b, 0x4151, 0xcef9, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0x554d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01A4
        gbc.setState(0xe7fc, 0xd2db, 0xe890, 0x26cf, 0x2fb7, 0x5d6b, 0x0, 0x1);
        gbc.writeMem(0xe7fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd2db, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fc));
        EXPECT(0x39, gbc.readMem(0xe7fd));
        // CB 39 01A5
        gbc.setState(0x6053, 0xdf50, 0xee90, 0x150d, 0xe21, 0xcd73, 0x1, 0x1);
        gbc.writeMem(0x6053, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdf50, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01A7
        gbc.setState(0x9bb6, 0xa919, 0x4f00, 0xe70d, 0xdcaa, 0x74d9, 0x1, 0x1);
        gbc.writeMem(0x9bb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa919, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb6));
        EXPECT(0x39, gbc.readMem(0x9bb7));
        // CB 39 01A8
        gbc.setState(0x8a56, 0xa34d, 0x6150, 0x2ce5, 0xf4da, 0xc699, 0x1, 0x1);
        gbc.writeMem(0x8a56, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a56));
        EXPECT(0x39, gbc.readMem(0x8a57));
        // CB 39 01AB
        gbc.setState(0x5378, 0xed3c, 0xc5c0, 0x2f29, 0x56b, 0x8396, 0x1, 0x1);
        gbc.writeMem(0x5378, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x537a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01AC
        gbc.setState(0xc54c, 0x4a57, 0xcc20, 0x30b8, 0x7d6f, 0x6685, 0x1, 0x1);
        gbc.writeMem(0xc54c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54c));
        EXPECT(0x39, gbc.readMem(0xc54d));
        // CB 39 01AD
        gbc.setState(0x8a3e, 0x432d, 0x1a10, 0x487, 0x2cbd, 0x3594, 0x0, 0x0);
        gbc.writeMem(0x8a3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x432d, gbc.sp());
        EXPECT(0x8a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3e));
        EXPECT(0x39, gbc.readMem(0x8a3f));
        // CB 39 01AE
        gbc.setState(0xefde, 0x5b61, 0x3b70, 0xd1fd, 0x18d4, 0x9009, 0x1, 0x1);
        gbc.writeMem(0xefde, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5b61, gbc.sp());
        EXPECT(0xefe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefde));
        EXPECT(0x39, gbc.readMem(0xefdf));
        // CB 39 01AF
        gbc.setState(0xaab6, 0x99ec, 0xf870, 0x679b, 0xdbac, 0xdec, 0x1, 0x1);
        gbc.writeMem(0xaab6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab6));
        EXPECT(0x39, gbc.readMem(0xaab7));
        // CB 39 01B1
        gbc.setState(0xbf1, 0x49e1, 0x9050, 0x517d, 0xe9e9, 0x8f14, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x49e1, gbc.sp());
        EXPECT(0xbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01B2
        gbc.setState(0x52a2, 0x5a24, 0x8440, 0x2ef4, 0x3b4a, 0xa811, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01B3
        gbc.setState(0xa028, 0x7066, 0x4380, 0x3f4e, 0xfcba, 0xa3cc, 0x1, 0x0);
        gbc.writeMem(0xa028, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7066, gbc.sp());
        EXPECT(0xa02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa028));
        EXPECT(0x39, gbc.readMem(0xa029));
        // CB 39 01B4
        gbc.setState(0x2f06, 0x2b3f, 0x6210, 0x1f70, 0x3b33, 0x5f27, 0x0, 0x0);
        gbc.writeMem(0x2f06, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2b3f, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01B5
        gbc.setState(0xd848, 0xb09c, 0xdb0, 0x793a, 0x7ed4, 0x774a, 0x0, 0x0);
        gbc.writeMem(0xd848, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0xd84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd848));
        EXPECT(0x39, gbc.readMem(0xd849));
        // CB 39 01B6
        gbc.setState(0x165b, 0x2e7c, 0x5b60, 0x9a96, 0xff91, 0xea4f, 0x0, 0x1);
        gbc.writeMem(0x165b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x165d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01B8
        gbc.setState(0x488f, 0x6aa6, 0x90, 0xe363, 0x2408, 0xe37d, 0x0, 0x0);
        gbc.writeMem(0x488f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6aa6, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01B9
        gbc.setState(0x7a3b, 0x49a2, 0x4580, 0x76e9, 0x4012, 0x736, 0x0, 0x0);
        gbc.writeMem(0x7a3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x49a2, gbc.sp());
        EXPECT(0x7a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01BA
        gbc.setState(0x5007, 0x8e1f, 0xaae0, 0xcf7a, 0x80b2, 0xdb89, 0x0, 0x1);
        gbc.writeMem(0x5007, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8e1f, gbc.sp());
        EXPECT(0x5009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01BB
        gbc.setState(0x2a3b, 0xf55f, 0xa7c0, 0x71ed, 0x61c8, 0x5efb, 0x1, 0x1);
        gbc.writeMem(0x2a3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0x2a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01BC
        gbc.setState(0x746, 0x9c7, 0x6360, 0xf70e, 0x550a, 0x3414, 0x0, 0x1);
        gbc.writeMem(0x746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0x748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01BD
        gbc.setState(0x3c5f, 0x7b4a, 0x3e20, 0x53b7, 0xa030, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0x3c5f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0x3c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01BE
        gbc.setState(0x2dff, 0x4ec5, 0x4c60, 0xf607, 0x3d78, 0x205b, 0x1, 0x1);
        gbc.writeMem(0x2dff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4ec5, gbc.sp());
        EXPECT(0x2e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01BF
        gbc.setState(0xc39b, 0x3ef8, 0x7250, 0xec84, 0x952a, 0x3a92, 0x1, 0x0);
        gbc.writeMem(0xc39b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3ef8, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39b));
        EXPECT(0x39, gbc.readMem(0xc39c));
        // CB 39 01C0
        gbc.setState(0x42e8, 0x9607, 0xf670, 0x7fe8, 0x4045, 0x6de9, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9607, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01C1
        gbc.setState(0x9313, 0xf128, 0xd6c0, 0xc740, 0x2d07, 0x8121, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf128, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9313));
        EXPECT(0x39, gbc.readMem(0x9314));
        // CB 39 01C2
        gbc.setState(0x50c4, 0x5414, 0xda10, 0xd30a, 0x6f0c, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0x50c4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5414, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01C3
        gbc.setState(0xb9ac, 0x5eab, 0xd30, 0x69e8, 0x56dc, 0x54ca, 0x0, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ac));
        EXPECT(0x39, gbc.readMem(0xb9ad));
        // CB 39 01C4
        gbc.setState(0x2fa, 0x13a, 0xdb70, 0x7327, 0xe8d2, 0x8434, 0x0, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x13a, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01C5
        gbc.setState(0xd6e7, 0x1df0, 0xaf30, 0x456, 0x87e6, 0xbf08, 0x0, 0x1);
        gbc.writeMem(0xd6e7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0xd6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e7));
        EXPECT(0x39, gbc.readMem(0xd6e8));
        // CB 39 01C6
        gbc.setState(0x6ee6, 0x9ab2, 0x7f0, 0xfa49, 0xd651, 0x3785, 0x0, 0x1);
        gbc.writeMem(0x6ee6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9ab2, gbc.sp());
        EXPECT(0x6ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01C7
        gbc.setState(0x15ed, 0xcd87, 0xa980, 0x603b, 0x1707, 0x366a, 0x0, 0x0);
        gbc.writeMem(0x15ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x15ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01C8
        gbc.setState(0xaad0, 0x19e1, 0xae20, 0x58ca, 0xcbc, 0xe228, 0x0, 0x0);
        gbc.writeMem(0xaad0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x19e1, gbc.sp());
        EXPECT(0xaad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad0));
        EXPECT(0x39, gbc.readMem(0xaad1));
        // CB 39 01C9
        gbc.setState(0xa67d, 0x21f2, 0x69f0, 0xfff, 0x7108, 0xc6ad, 0x0, 0x0);
        gbc.writeMem(0xa67d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x21f2, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67d));
        EXPECT(0x39, gbc.readMem(0xa67e));
        // CB 39 01CB
        gbc.setState(0xff7, 0xab70, 0xa3a0, 0x48e0, 0x7bea, 0x7db0, 0x0, 0x1);
        gbc.writeMem(0xff7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0xff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01CC
        gbc.setState(0x8473, 0xc59e, 0x16f0, 0xe943, 0xba2b, 0xad78, 0x1, 0x0);
        gbc.writeMem(0x8473, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc59e, gbc.sp());
        EXPECT(0x8475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8473));
        EXPECT(0x39, gbc.readMem(0x8474));
        // CB 39 01CD
        gbc.setState(0x74a4, 0xa018, 0xd120, 0x5621, 0xa88e, 0xe39c, 0x0, 0x0);
        gbc.writeMem(0x74a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa018, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01CE
        gbc.setState(0x8a72, 0x11a8, 0xe860, 0x1b1a, 0xb24, 0x5349, 0x1, 0x1);
        gbc.writeMem(0x8a72, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x11a8, gbc.sp());
        EXPECT(0x8a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a72));
        EXPECT(0x39, gbc.readMem(0x8a73));
        // CB 39 01CF
        gbc.setState(0xda0d, 0x33ee, 0x3110, 0x3dec, 0x97ea, 0xb79c, 0x0, 0x1);
        gbc.writeMem(0xda0d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x33ee, gbc.sp());
        EXPECT(0xda0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0d));
        EXPECT(0x39, gbc.readMem(0xda0e));
        // CB 39 01D0
        gbc.setState(0x7263, 0x4210, 0x41d0, 0x203d, 0x665, 0x9377, 0x0, 0x1);
        gbc.writeMem(0x7263, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4210, gbc.sp());
        EXPECT(0x7265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01D1
        gbc.setState(0x4832, 0xaca5, 0x68a0, 0x7f20, 0x91f8, 0x8159, 0x0, 0x0);
        gbc.writeMem(0x4832, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaca5, gbc.sp());
        EXPECT(0x4834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01D3
        gbc.setState(0xecf6, 0xb84e, 0x6070, 0xafef, 0x8b05, 0x2300, 0x1, 0x0);
        gbc.writeMem(0xecf6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0xecf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf6));
        EXPECT(0x39, gbc.readMem(0xecf7));
        // CB 39 01D4
        gbc.setState(0x8c5, 0xb9bc, 0xb350, 0x8459, 0x3970, 0x3b1b, 0x0, 0x0);
        gbc.writeMem(0x8c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb9bc, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01D5
        gbc.setState(0xca92, 0x19a1, 0x7ae0, 0x426c, 0x4b1e, 0xeb12, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca92));
        EXPECT(0x39, gbc.readMem(0xca93));
        // CB 39 01D6
        gbc.setState(0x13dc, 0xadc, 0xa080, 0xaa2, 0xdfe1, 0x4ba7, 0x0, 0x1);
        gbc.writeMem(0x13dc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xadc, gbc.sp());
        EXPECT(0x13de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01D7
        gbc.setState(0x4d23, 0xab67, 0x6130, 0x6674, 0x91cc, 0x9b49, 0x1, 0x1);
        gbc.writeMem(0x4d23, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab67, gbc.sp());
        EXPECT(0x4d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01D9
        gbc.setState(0x7467, 0x3c7f, 0x7ba0, 0xb61c, 0x6fea, 0x84a9, 0x0, 0x0);
        gbc.writeMem(0x7467, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c7f, gbc.sp());
        EXPECT(0x7469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01DA
        gbc.setState(0xcd94, 0x2da9, 0x7220, 0xae85, 0x71aa, 0x2def, 0x0, 0x0);
        gbc.writeMem(0xcd94, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2da9, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd94));
        EXPECT(0x39, gbc.readMem(0xcd95));
        // CB 39 01DB
        gbc.setState(0x8f1f, 0xc6fd, 0x4d90, 0xb6ca, 0x187a, 0x2db5, 0x1, 0x1);
        gbc.writeMem(0x8f1f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc6fd, gbc.sp());
        EXPECT(0x8f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1f));
        EXPECT(0x39, gbc.readMem(0x8f20));
        // CB 39 01DC
        gbc.setState(0x5e26, 0x9416, 0xc310, 0x79be, 0x6579, 0xa293, 0x0, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01DD
        gbc.setState(0x63d5, 0x5c26, 0xc0e0, 0x2e09, 0xbc29, 0x8aa, 0x1, 0x0);
        gbc.writeMem(0x63d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5c26, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01DE
        gbc.setState(0x99e9, 0xfd36, 0x4fe0, 0x6d18, 0xa539, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfd36, gbc.sp());
        EXPECT(0x99eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e9));
        EXPECT(0x39, gbc.readMem(0x99ea));
        // CB 39 01DF
        gbc.setState(0x5c70, 0x3055, 0x6b20, 0x3859, 0xf5fd, 0xa0d3, 0x1, 0x0);
        gbc.writeMem(0x5c70, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x5c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01E0
        gbc.setState(0x9355, 0xfe0a, 0xa0b0, 0x6a82, 0xaa30, 0xbb90, 0x1, 0x1);
        gbc.writeMem(0x9355, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfe0a, gbc.sp());
        EXPECT(0x9357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9355));
        EXPECT(0x39, gbc.readMem(0x9356));
        // CB 39 01E1
        gbc.setState(0xecc4, 0xf82e, 0x5ed0, 0xa4f0, 0xd1d9, 0xadb8, 0x1, 0x0);
        gbc.writeMem(0xecc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf82e, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc4));
        EXPECT(0x39, gbc.readMem(0xecc5));
        // CB 39 01E2
        gbc.setState(0xb178, 0x7861, 0x2420, 0xfce7, 0x2e6a, 0xed, 0x1, 0x0);
        gbc.writeMem(0xb178, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb178));
        EXPECT(0x39, gbc.readMem(0xb179));
        // CB 39 01E3
        gbc.setState(0x4809, 0x2f21, 0xda30, 0x195a, 0xa487, 0xd93a, 0x0, 0x0);
        gbc.writeMem(0x4809, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2f21, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01E4
        gbc.setState(0x940c, 0x865f, 0xbdc0, 0x38b4, 0xebe7, 0x1d93, 0x1, 0x0);
        gbc.writeMem(0x940c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x940e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940c));
        EXPECT(0x39, gbc.readMem(0x940d));
        // CB 39 01E5
        gbc.setState(0x8a41, 0x4050, 0x8240, 0x880, 0xb1ff, 0xb040, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a41));
        EXPECT(0x39, gbc.readMem(0x8a42));
        // CB 39 01E6
        gbc.setState(0x887a, 0xd1be, 0x53d0, 0x4fad, 0x4e72, 0x8f36, 0x0, 0x1);
        gbc.writeMem(0x887a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd1be, gbc.sp());
        EXPECT(0x887c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887a));
        EXPECT(0x39, gbc.readMem(0x887b));
        // CB 39 01E7
        gbc.setState(0x8191, 0xb6bf, 0x5c50, 0x3b2c, 0x1265, 0x9575, 0x1, 0x1);
        gbc.writeMem(0x8191, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8191));
        EXPECT(0x39, gbc.readMem(0x8192));
        // CB 39 01E8
        gbc.setState(0xa934, 0xf626, 0xc810, 0x52d1, 0x7404, 0x8dd8, 0x1, 0x0);
        gbc.writeMem(0xa934, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0xa936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa934));
        EXPECT(0x39, gbc.readMem(0xa935));
        // CB 39 01E9
        gbc.setState(0x5713, 0xb4dc, 0xb900, 0x2116, 0x3cc2, 0xce1a, 0x1, 0x0);
        gbc.writeMem(0x5713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01EA
        gbc.setState(0x1f6e, 0xaa3c, 0xb7e0, 0x4b53, 0x4937, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x1f6e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaa3c, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01EB
        gbc.setState(0xdc8b, 0xbd9a, 0xa8c0, 0xef72, 0xe50b, 0xfd01, 0x1, 0x0);
        gbc.writeMem(0xdc8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0xdc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8b));
        EXPECT(0x39, gbc.readMem(0xdc8c));
        // CB 39 01ED
        gbc.setState(0x858, 0x53e2, 0x3b70, 0xcf9c, 0x1b9b, 0x56d4, 0x0, 0x1);
        gbc.writeMem(0x858, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01EE
        gbc.setState(0x25bd, 0xb15d, 0x4fb0, 0xb1, 0x8cea, 0xaea2, 0x1, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb15d, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01EF
        gbc.setState(0x85c7, 0xedc6, 0x2f60, 0x438e, 0xefa2, 0x7f12, 0x1, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xedc6, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0x39, gbc.readMem(0x85c8));
        // CB 39 01F0
        gbc.setState(0x1b08, 0x6db1, 0x8950, 0xd49d, 0x4270, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x1b08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01F1
        gbc.setState(0x154b, 0x97c9, 0x2d0, 0xbaa5, 0x88a, 0x678c, 0x0, 0x0);
        gbc.writeMem(0x154b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0x154d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01F3
        gbc.setState(0x9926, 0xc7fb, 0xd170, 0xadae, 0xd349, 0x111, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc7fb, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9926));
        EXPECT(0x39, gbc.readMem(0x9927));
        // CB 39 01F4
        gbc.setState(0xd790, 0xb6c2, 0xb30, 0x55d2, 0x644, 0x4459, 0x1, 0x0);
        gbc.writeMem(0xd790, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0xd792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd790));
        EXPECT(0x39, gbc.readMem(0xd791));
        // CB 39 01F5
        gbc.setState(0x74b7, 0x196a, 0x8d60, 0xe4b, 0xad0e, 0xe68e, 0x1, 0x0);
        gbc.writeMem(0x74b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0x74b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01F6
        gbc.setState(0x60a9, 0x9fd1, 0xca00, 0xda6, 0x539e, 0x1c07, 0x0, 0x1);
        gbc.writeMem(0x60a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9fd1, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01F7
        gbc.setState(0xb458, 0x137b, 0x3d40, 0x4873, 0xe511, 0x7674, 0x1, 0x0);
        gbc.writeMem(0xb458, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0xb45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb458));
        EXPECT(0x39, gbc.readMem(0xb459));
        // CB 39 01F8
        gbc.setState(0x92bb, 0x1875, 0x8560, 0xf751, 0x8bd3, 0xe681, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1875, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0x39, gbc.readMem(0x92bc));
        // CB 39 01F9
        gbc.setState(0xd336, 0xe3cf, 0x7e30, 0x94ce, 0xe57e, 0xa82c, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe3cf, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd336));
        EXPECT(0x39, gbc.readMem(0xd337));
        // CB 39 01FA
        gbc.setState(0x8484, 0x1020, 0x3220, 0xe550, 0x4c4a, 0xfe0, 0x1, 0x1);
        gbc.writeMem(0x8484, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1020, gbc.sp());
        EXPECT(0x8486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8484));
        EXPECT(0x39, gbc.readMem(0x8485));
        // CB 39 01FB
        gbc.setState(0xbe41, 0x69f, 0x7240, 0xc4fb, 0xf8ec, 0x5bf6, 0x0, 0x0);
        gbc.writeMem(0xbe41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe41));
        EXPECT(0x39, gbc.readMem(0xbe42));
        // CB 39 01FC
        gbc.setState(0x3560, 0xcee6, 0x1ce0, 0x38e2, 0x7509, 0x700, 0x1, 0x0);
        gbc.writeMem(0x3560, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 01FD
        gbc.setState(0x3dd0, 0x3994, 0x49e0, 0xad61, 0x5866, 0x6e9d, 0x0, 0x1);
        gbc.writeMem(0x3dd0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x3dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 01FE
        gbc.setState(0xaaa5, 0xdc99, 0xf490, 0xfd51, 0x44d9, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0xaaa5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0xaaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa5));
        EXPECT(0x39, gbc.readMem(0xaaa6));
        // CB 39 01FF
        gbc.setState(0x9e5, 0x100e, 0x8950, 0xf405, 0x7f2a, 0xb09a, 0x0, 0x1);
        gbc.writeMem(0x9e5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x100e, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0200
        gbc.setState(0x6847, 0xf39e, 0x7af0, 0x414f, 0x6845, 0xb1c, 0x0, 0x1);
        gbc.writeMem(0x6847, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf39e, gbc.sp());
        EXPECT(0x6849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0201
        gbc.setState(0xabff, 0xc11b, 0xa760, 0xe1d4, 0x75bc, 0xc9da, 0x0, 0x0);
        gbc.writeMem(0xabff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc11b, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabff));
        EXPECT(0x39, gbc.readMem(0xac00));
        // CB 39 0202
        gbc.setState(0xdb41, 0x8572, 0xfa0, 0xb56e, 0x508c, 0xbdb9, 0x1, 0x0);
        gbc.writeMem(0xdb41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8572, gbc.sp());
        EXPECT(0xdb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb41));
        EXPECT(0x39, gbc.readMem(0xdb42));
        // CB 39 0204
        gbc.setState(0x3b3e, 0xfa46, 0x5af0, 0xca9e, 0x885b, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x3b3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfa46, gbc.sp());
        EXPECT(0x3b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0205
        gbc.setState(0x7a0e, 0x6a75, 0x5ef0, 0x93cb, 0xfa23, 0x9399, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6a75, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0206
        gbc.setState(0xecea, 0xfec3, 0x26d0, 0x5f33, 0x585, 0xf2f1, 0x0, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0xecec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecea));
        EXPECT(0x39, gbc.readMem(0xeceb));
        // CB 39 0207
        gbc.setState(0xb763, 0x5197, 0xb7b0, 0xa5dd, 0xe219, 0x4dbf, 0x0, 0x0);
        gbc.writeMem(0xb763, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5197, gbc.sp());
        EXPECT(0xb765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb763));
        EXPECT(0x39, gbc.readMem(0xb764));
        // CB 39 0208
        gbc.setState(0x6f8b, 0x5267, 0xbc70, 0xce, 0x653a, 0xa151, 0x1, 0x0);
        gbc.writeMem(0x6f8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0x6f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 020A
        gbc.setState(0xd3aa, 0x707a, 0x5160, 0x4448, 0x2c21, 0x8e1e, 0x0, 0x0);
        gbc.writeMem(0xd3aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x707a, gbc.sp());
        EXPECT(0xd3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3aa));
        EXPECT(0x39, gbc.readMem(0xd3ab));
        // CB 39 020B
        gbc.setState(0xb299, 0xc9d7, 0xe9f0, 0x5a97, 0x680c, 0x4681, 0x1, 0x1);
        gbc.writeMem(0xb299, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc9d7, gbc.sp());
        EXPECT(0xb29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb299));
        EXPECT(0x39, gbc.readMem(0xb29a));
        // CB 39 020C
        gbc.setState(0xe76e, 0x253c, 0x6640, 0xab35, 0xf1a9, 0xaf95, 0x0, 0x0);
        gbc.writeMem(0xe76e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76e));
        EXPECT(0x39, gbc.readMem(0xe76f));
        // CB 39 020D
        gbc.setState(0x4d14, 0x1394, 0x7040, 0xdb5f, 0xbbca, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x4d14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0x4d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 020E
        gbc.setState(0xb08d, 0x7b8f, 0x3c60, 0xfcb8, 0x11ab, 0xbe6e, 0x1, 0x0);
        gbc.writeMem(0xb08d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b8f, gbc.sp());
        EXPECT(0xb08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08d));
        EXPECT(0x39, gbc.readMem(0xb08e));
        // CB 39 020F
        gbc.setState(0x6935, 0x9aba, 0x1b60, 0x9ca9, 0x4263, 0x8be6, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9aba, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0210
        gbc.setState(0xaaab, 0xa0ec, 0x76c0, 0x77dd, 0x13f2, 0xade4, 0x0, 0x1);
        gbc.writeMem(0xaaab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0xaaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaab));
        EXPECT(0x39, gbc.readMem(0xaaac));
        // CB 39 0211
        gbc.setState(0x95ce, 0xeca8, 0x2340, 0xb80, 0xb43e, 0xd256, 0x1, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0x39, gbc.readMem(0x95cf));
        // CB 39 0212
        gbc.setState(0xce5e, 0x60e7, 0xb8b0, 0x4712, 0x964d, 0x265e, 0x0, 0x0);
        gbc.writeMem(0xce5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0xce60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5e));
        EXPECT(0x39, gbc.readMem(0xce5f));
        // CB 39 0213
        gbc.setState(0xbeb6, 0x8964, 0x8a80, 0x8744, 0xdc1c, 0xfc68, 0x0, 0x1);
        gbc.writeMem(0xbeb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8964, gbc.sp());
        EXPECT(0xbeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb6));
        EXPECT(0x39, gbc.readMem(0xbeb7));
        // CB 39 0214
        gbc.setState(0x7fed, 0x344e, 0x7210, 0x1d72, 0xdd2e, 0xb126, 0x0, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0215
        gbc.setState(0x3416, 0xb56e, 0x4550, 0x97b9, 0xda61, 0xd690, 0x0, 0x1);
        gbc.writeMem(0x3416, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0x3418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0216
        gbc.setState(0x252e, 0x851d, 0x48e0, 0x7c18, 0x1e7f, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0x252e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x851d, gbc.sp());
        EXPECT(0x2530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0217
        gbc.setState(0x9754, 0x73af, 0x56f0, 0x8fc6, 0xd0ca, 0x7dac, 0x0, 0x0);
        gbc.writeMem(0x9754, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x73af, gbc.sp());
        EXPECT(0x9756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9754));
        EXPECT(0x39, gbc.readMem(0x9755));
        // CB 39 0218
        gbc.setState(0xb516, 0xf265, 0xb4e0, 0xd9eb, 0x1305, 0xab61, 0x1, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf265, gbc.sp());
        EXPECT(0xb518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb516));
        EXPECT(0x39, gbc.readMem(0xb517));
        // CB 39 0219
        gbc.setState(0x176c, 0x8500, 0x570, 0x90b2, 0x6d63, 0xb329, 0x1, 0x1);
        gbc.writeMem(0x176c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 021A
        gbc.setState(0x9814, 0x6585, 0xeb20, 0xd54a, 0x701f, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0x9814, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6585, gbc.sp());
        EXPECT(0x9816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9814));
        EXPECT(0x39, gbc.readMem(0x9815));
        // CB 39 021B
        gbc.setState(0x31d, 0xc64, 0x4600, 0xdde1, 0xaec1, 0x60c2, 0x1, 0x1);
        gbc.writeMem(0x31d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc64, gbc.sp());
        EXPECT(0x31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 021C
        gbc.setState(0xbbe1, 0x3fe7, 0x9ad0, 0xf93b, 0xc706, 0x7733, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xbbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe1));
        EXPECT(0x39, gbc.readMem(0xbbe2));
        // CB 39 021D
        gbc.setState(0x369f, 0x1722, 0xfb80, 0x7888, 0xfd98, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0x369f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1722, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 021E
        gbc.setState(0x98bb, 0xdd4c, 0x3ad0, 0x343e, 0xfdd6, 0x5416, 0x1, 0x1);
        gbc.writeMem(0x98bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0x39, gbc.readMem(0x98bc));
        // CB 39 021F
        gbc.setState(0x9132, 0x47c7, 0x4360, 0xf12a, 0x3d84, 0xc7c1, 0x1, 0x1);
        gbc.writeMem(0x9132, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0x9134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9132));
        EXPECT(0x39, gbc.readMem(0x9133));
        // CB 39 0220
        gbc.setState(0x9b35, 0x3a50, 0x6190, 0x273, 0x42dc, 0x83de, 0x1, 0x1);
        gbc.writeMem(0x9b35, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b35));
        EXPECT(0x39, gbc.readMem(0x9b36));
        // CB 39 0221
        gbc.setState(0xb841, 0x743, 0xdb70, 0x1fdc, 0x6770, 0xe50e, 0x0, 0x0);
        gbc.writeMem(0xb841, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb841));
        EXPECT(0x39, gbc.readMem(0xb842));
        // CB 39 0222
        gbc.setState(0x38e3, 0xb019, 0x6290, 0x68dd, 0xe69c, 0x627e, 0x1, 0x0);
        gbc.writeMem(0x38e3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb019, gbc.sp());
        EXPECT(0x38e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0223
        gbc.setState(0x1cec, 0xd42, 0x3220, 0x1d1b, 0xbb4e, 0xb061, 0x0, 0x1);
        gbc.writeMem(0x1cec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd42, gbc.sp());
        EXPECT(0x1cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0224
        gbc.setState(0x4e74, 0x91a2, 0x21f0, 0xbe86, 0x57ff, 0xa953, 0x0, 0x1);
        gbc.writeMem(0x4e74, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x91a2, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0225
        gbc.setState(0xb9cf, 0xdf32, 0x6240, 0x19f4, 0xf524, 0x4091, 0x1, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf32, gbc.sp());
        EXPECT(0xb9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cf));
        EXPECT(0x39, gbc.readMem(0xb9d0));
        // CB 39 0226
        gbc.setState(0x3338, 0xed0a, 0xe450, 0x31e1, 0xe547, 0xe115, 0x1, 0x0);
        gbc.writeMem(0x3338, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0x333a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0227
        gbc.setState(0xd4b8, 0x5289, 0xda30, 0x8f01, 0x3cd3, 0x99bb, 0x1, 0x0);
        gbc.writeMem(0xd4b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5289, gbc.sp());
        EXPECT(0xd4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b8));
        EXPECT(0x39, gbc.readMem(0xd4b9));
        // CB 39 0228
        gbc.setState(0x7b5e, 0x3d5d, 0xcb80, 0x6461, 0x759c, 0x5a18, 0x0, 0x0);
        gbc.writeMem(0x7b5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3d5d, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0229
        gbc.setState(0x20ed, 0x2c8f, 0x4370, 0x2935, 0xd884, 0xe943, 0x0, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0x20ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 022A
        gbc.setState(0xba2e, 0x124f, 0x9000, 0x9aef, 0xc294, 0x2e49, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x124f, gbc.sp());
        EXPECT(0xba30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2e));
        EXPECT(0x39, gbc.readMem(0xba2f));
        // CB 39 022B
        gbc.setState(0x16ce, 0x600c, 0x79d0, 0x87f3, 0xa1b5, 0x6a3a, 0x1, 0x0);
        gbc.writeMem(0x16ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0x16d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 022C
        gbc.setState(0xb0d5, 0xa816, 0xdde0, 0x8f0a, 0xa14c, 0x36ac, 0x1, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa816, gbc.sp());
        EXPECT(0xb0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d5));
        EXPECT(0x39, gbc.readMem(0xb0d6));
        // CB 39 022D
        gbc.setState(0x213d, 0x6fef, 0x27c0, 0x36da, 0x90e8, 0xc0ed, 0x1, 0x0);
        gbc.writeMem(0x213d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6fef, gbc.sp());
        EXPECT(0x213f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 022E
        gbc.setState(0x75dc, 0xd96a, 0xade0, 0x2678, 0x67e0, 0x6ffe, 0x1, 0x1);
        gbc.writeMem(0x75dc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 022F
        gbc.setState(0x9ec7, 0x7f45, 0xc550, 0xf11b, 0xec47, 0x22f, 0x0, 0x1);
        gbc.writeMem(0x9ec7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7f45, gbc.sp());
        EXPECT(0x9ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec7));
        EXPECT(0x39, gbc.readMem(0x9ec8));
        // CB 39 0230
        gbc.setState(0xedc, 0x19c, 0x1100, 0xb6fa, 0x1ad6, 0xcc12, 0x1, 0x0);
        gbc.writeMem(0xedc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x19c, gbc.sp());
        EXPECT(0xede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0231
        gbc.setState(0xc7e1, 0x34b9, 0xe2f0, 0x15a4, 0x16ee, 0xff28, 0x1, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0xc7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e1));
        EXPECT(0x39, gbc.readMem(0xc7e2));
        // CB 39 0232
        gbc.setState(0x782e, 0x2e68, 0x3d90, 0x3f3d, 0x43da, 0x615b, 0x0, 0x1);
        gbc.writeMem(0x782e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2e68, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0233
        gbc.setState(0x286d, 0x4382, 0x7c50, 0x4823, 0xbd32, 0x434a, 0x0, 0x0);
        gbc.writeMem(0x286d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4382, gbc.sp());
        EXPECT(0x286f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0234
        gbc.setState(0xd97c, 0xeaa, 0x75a0, 0xffc, 0xf87c, 0x981f, 0x0, 0x1);
        gbc.writeMem(0xd97c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xd97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97c));
        EXPECT(0x39, gbc.readMem(0xd97d));
        // CB 39 0235
        gbc.setState(0x7c52, 0xfcfd, 0xc9b0, 0xe2d2, 0x8dee, 0xd070, 0x0, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0236
        gbc.setState(0x85c8, 0xb462, 0xef50, 0xcf78, 0x1eaf, 0x3856, 0x0, 0x0);
        gbc.writeMem(0x85c8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb462, gbc.sp());
        EXPECT(0x85ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c8));
        EXPECT(0x39, gbc.readMem(0x85c9));
        // CB 39 0237
        gbc.setState(0xd5f3, 0xf5b3, 0x3de0, 0x6ca9, 0x54b5, 0x5dfd, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f3));
        EXPECT(0x39, gbc.readMem(0xd5f4));
        // CB 39 0238
        gbc.setState(0x35c4, 0x2515, 0xea10, 0x41c7, 0xffc1, 0x9aab, 0x0, 0x0);
        gbc.writeMem(0x35c4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2515, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0239
        gbc.setState(0x2edf, 0x4984, 0x5790, 0xf5fc, 0x88ed, 0x6937, 0x1, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4984, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 023A
        gbc.setState(0xdbf7, 0x8089, 0xc6b0, 0xf25b, 0x6dee, 0x4232, 0x1, 0x1);
        gbc.writeMem(0xdbf7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf7));
        EXPECT(0x39, gbc.readMem(0xdbf8));
        // CB 39 023B
        gbc.setState(0x52a9, 0x6314, 0xfd10, 0x7a0f, 0xc3b4, 0xeb75, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6314, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 023C
        gbc.setState(0xa216, 0x54d4, 0xc310, 0x9f00, 0x7f16, 0x1b3e, 0x0, 0x0);
        gbc.writeMem(0xa216, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0xa218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa216));
        EXPECT(0x39, gbc.readMem(0xa217));
        // CB 39 023D
        gbc.setState(0x8ed7, 0x98ed, 0x64c0, 0xb158, 0x4f7a, 0xd665, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0x8ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed7));
        EXPECT(0x39, gbc.readMem(0x8ed8));
        // CB 39 023E
        gbc.setState(0x5ac5, 0x98cf, 0x8650, 0x9e67, 0xdb0c, 0xcaa0, 0x1, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x98cf, gbc.sp());
        EXPECT(0x5ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 023F
        gbc.setState(0x80e2, 0xbbad, 0x69c0, 0xf25, 0x5797, 0x5b51, 0x0, 0x1);
        gbc.writeMem(0x80e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0x80e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e2));
        EXPECT(0x39, gbc.readMem(0x80e3));
        // CB 39 0240
        gbc.setState(0x75a4, 0xdf49, 0xa050, 0x9bbf, 0xfcd1, 0xa3c2, 0x0, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdf49, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0241
        gbc.setState(0x6998, 0x7e25, 0x6470, 0x3428, 0x8645, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x699a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0242
        gbc.setState(0xec45, 0xd9ac, 0xb40, 0x7ac2, 0x96a6, 0xd851, 0x0, 0x1);
        gbc.writeMem(0xec45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd9ac, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec45));
        EXPECT(0x39, gbc.readMem(0xec46));
        // CB 39 0244
        gbc.setState(0x450c, 0xc124, 0xabe0, 0xac3b, 0x32ab, 0xa887, 0x0, 0x1);
        gbc.writeMem(0x450c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc124, gbc.sp());
        EXPECT(0x450e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0245
        gbc.setState(0xd4db, 0xa643, 0x4f60, 0x98f2, 0xd362, 0x2490, 0x1, 0x0);
        gbc.writeMem(0xd4db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa643, gbc.sp());
        EXPECT(0xd4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4db));
        EXPECT(0x39, gbc.readMem(0xd4dc));
        // CB 39 0246
        gbc.setState(0x2991, 0x6013, 0x1770, 0xbc8a, 0x8d47, 0xc027, 0x1, 0x0);
        gbc.writeMem(0x2991, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6013, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0247
        gbc.setState(0xe6e0, 0xcdc9, 0xfdb0, 0xb6d1, 0xe686, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0xe6e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e0));
        EXPECT(0x39, gbc.readMem(0xe6e1));
        // CB 39 0248
        gbc.setState(0x3a08, 0x7b9f, 0x11a0, 0xd74a, 0xf1ce, 0xeb90, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7b9f, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0249
        gbc.setState(0x7334, 0x2600, 0xe850, 0x2d61, 0x4ede, 0x78ab, 0x1, 0x0);
        gbc.writeMem(0x7334, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2600, gbc.sp());
        EXPECT(0x7336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 024A
        gbc.setState(0xa58e, 0x68d8, 0x8e00, 0x372c, 0xc04c, 0xc1e8, 0x0, 0x0);
        gbc.writeMem(0xa58e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x68d8, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58e));
        EXPECT(0x39, gbc.readMem(0xa58f));
        // CB 39 024B
        gbc.setState(0xa56, 0x9b2e, 0x4520, 0xbbf7, 0xb200, 0x618, 0x0, 0x0);
        gbc.writeMem(0xa56, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 024C
        gbc.setState(0x2c9d, 0xbbab, 0xbe50, 0xf1ed, 0xd02e, 0x4ba2, 0x0, 0x1);
        gbc.writeMem(0x2c9d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0x2c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 024E
        gbc.setState(0x1500, 0x4384, 0x8bb0, 0xf865, 0x5128, 0xd6bd, 0x0, 0x1);
        gbc.writeMem(0x1500, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4384, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 024F
        gbc.setState(0x3365, 0x9fe4, 0xda70, 0x1fc6, 0xdd3f, 0x65e2, 0x0, 0x1);
        gbc.writeMem(0x3365, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0x3367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0250
        gbc.setState(0x1972, 0x5eda, 0xbc00, 0xd399, 0xd5d5, 0x84dc, 0x0, 0x1);
        gbc.writeMem(0x1972, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0251
        gbc.setState(0xe6a, 0xd3c7, 0x4b80, 0xd1c1, 0xa1ec, 0x660, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0xe6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0252
        gbc.setState(0xaf6a, 0x43e4, 0x5090, 0x9d52, 0xb8ab, 0xfc05, 0x1, 0x0);
        gbc.writeMem(0xaf6a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6a));
        EXPECT(0x39, gbc.readMem(0xaf6b));
        // CB 39 0253
        gbc.setState(0xbe7a, 0x161d, 0x7e80, 0xa12, 0xc795, 0xa3e2, 0x1, 0x0);
        gbc.writeMem(0xbe7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x161d, gbc.sp());
        EXPECT(0xbe7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7a));
        EXPECT(0x39, gbc.readMem(0xbe7b));
        // CB 39 0254
        gbc.setState(0xab99, 0xbd9a, 0x56a0, 0x2f4, 0x451, 0x1c03, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0xab9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab99));
        EXPECT(0x39, gbc.readMem(0xab9a));
        // CB 39 0255
        gbc.setState(0xe90a, 0x6723, 0x18f0, 0xa9f1, 0xf6a0, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0xe90a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6723, gbc.sp());
        EXPECT(0xe90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90a));
        EXPECT(0x39, gbc.readMem(0xe90b));
        // CB 39 0256
        gbc.setState(0x8535, 0xdeee, 0x1ec0, 0xd4ac, 0xdd9a, 0x2781, 0x0, 0x0);
        gbc.writeMem(0x8535, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdeee, gbc.sp());
        EXPECT(0x8537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8535));
        EXPECT(0x39, gbc.readMem(0x8536));
        // CB 39 0257
        gbc.setState(0xd05, 0x53a5, 0x5970, 0xcbb8, 0xb13e, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0xd05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0xd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0258
        gbc.setState(0x9a75, 0x5f54, 0x48b0, 0x4591, 0x8fde, 0x67d0, 0x0, 0x1);
        gbc.writeMem(0x9a75, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5f54, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a75));
        EXPECT(0x39, gbc.readMem(0x9a76));
        // CB 39 0259
        gbc.setState(0xedd1, 0xfea, 0x3090, 0x872, 0x6795, 0x1f13, 0x1, 0x0);
        gbc.writeMem(0xedd1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfea, gbc.sp());
        EXPECT(0xedd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd1));
        EXPECT(0x39, gbc.readMem(0xedd2));
        // CB 39 025A
        gbc.setState(0x44c5, 0x702a, 0xf890, 0x2a64, 0x6c25, 0xb731, 0x1, 0x1);
        gbc.writeMem(0x44c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0x44c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 025C
        gbc.setState(0xcd05, 0xe158, 0x1dc0, 0xd392, 0x6a96, 0x186a, 0x1, 0x0);
        gbc.writeMem(0xcd05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0xcd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd05));
        EXPECT(0x39, gbc.readMem(0xcd06));
        // CB 39 025D
        gbc.setState(0xa0f7, 0x96f6, 0x6870, 0x6a3d, 0xd605, 0x2ae0, 0x1, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x96f6, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f7));
        EXPECT(0x39, gbc.readMem(0xa0f8));
        // CB 39 025E
        gbc.setState(0x92ed, 0x5227, 0x110, 0x6095, 0x8b4e, 0x36af, 0x1, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5227, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ed));
        EXPECT(0x39, gbc.readMem(0x92ee));
        // CB 39 025F
        gbc.setState(0xe5b8, 0x3bd6, 0xa3e0, 0x9f92, 0xb1a7, 0x78b1, 0x0, 0x1);
        gbc.writeMem(0xe5b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0xe5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b8));
        EXPECT(0x39, gbc.readMem(0xe5b9));
        // CB 39 0260
        gbc.setState(0x7eb2, 0x610d, 0xc8c0, 0x45cc, 0x642e, 0x4816, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0261
        gbc.setState(0x9824, 0x905e, 0x2110, 0xdbb4, 0x4a5e, 0x4204, 0x0, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0x9826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9824));
        EXPECT(0x39, gbc.readMem(0x9825));
        // CB 39 0262
        gbc.setState(0xbad8, 0xeff8, 0xb7c0, 0x7089, 0x96a7, 0xe254, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad8));
        EXPECT(0x39, gbc.readMem(0xbad9));
        // CB 39 0263
        gbc.setState(0x270b, 0x6d9a, 0xd5f0, 0xb4ca, 0x8b7d, 0x51d9, 0x1, 0x0);
        gbc.writeMem(0x270b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0264
        gbc.setState(0x37df, 0xc32b, 0xe4d0, 0x8bc2, 0x99ee, 0x9e3e, 0x1, 0x1);
        gbc.writeMem(0x37df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc32b, gbc.sp());
        EXPECT(0x37e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0265
        gbc.setState(0x3713, 0x8830, 0xe010, 0x67cf, 0xd2ba, 0x53a5, 0x0, 0x1);
        gbc.writeMem(0x3713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x3715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0266
        gbc.setState(0x6578, 0x6058, 0x9c30, 0x7f2f, 0x8015, 0x957e, 0x0, 0x0);
        gbc.writeMem(0x6578, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x657a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0267
        gbc.setState(0x3d40, 0x30da, 0x5100, 0x339e, 0x3d6c, 0xe828, 0x1, 0x1);
        gbc.writeMem(0x3d40, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x30da, gbc.sp());
        EXPECT(0x3d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0268
        gbc.setState(0x74ec, 0x9036, 0x6f40, 0x40bc, 0x8c2e, 0xc515, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9036, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0269
        gbc.setState(0x2dc4, 0x9aeb, 0xf960, 0x5b74, 0x6fd6, 0x4265, 0x0, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9aeb, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 026A
        gbc.setState(0x2cae, 0x9131, 0xf6f0, 0x3815, 0x7c12, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x2cae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0x2cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 026B
        gbc.setState(0xccb9, 0x7f94, 0xb5e0, 0x2b3e, 0x5f67, 0x7c71, 0x1, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f94, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb9));
        EXPECT(0x39, gbc.readMem(0xccba));
        // CB 39 026C
        gbc.setState(0xae4e, 0xc41, 0x2a0, 0xc523, 0x9ff5, 0xc58b, 0x0, 0x1);
        gbc.writeMem(0xae4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0xae50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4e));
        EXPECT(0x39, gbc.readMem(0xae4f));
        // CB 39 026D
        gbc.setState(0x66f6, 0x8ee7, 0x7a20, 0x3f6, 0xbe2f, 0x1faa, 0x0, 0x0);
        gbc.writeMem(0x66f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 026E
        gbc.setState(0x6227, 0xfad6, 0x720, 0x77b5, 0xe3d9, 0x1583, 0x1, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfad6, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 026F
        gbc.setState(0x5787, 0xb33c, 0xc950, 0x9f59, 0x6567, 0x7e82, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0x5789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0270
        gbc.setState(0x9cbf, 0x5ce5, 0x1e80, 0x1b09, 0x484c, 0x4732, 0x1, 0x1);
        gbc.writeMem(0x9cbf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbf));
        EXPECT(0x39, gbc.readMem(0x9cc0));
        // CB 39 0271
        gbc.setState(0x5740, 0x196b, 0x6a60, 0x92b0, 0xddb9, 0xa522, 0x1, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0272
        gbc.setState(0xef28, 0xce84, 0xab0, 0xfd1e, 0x7698, 0x7961, 0x0, 0x1);
        gbc.writeMem(0xef28, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xce84, gbc.sp());
        EXPECT(0xef2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef28));
        EXPECT(0x39, gbc.readMem(0xef29));
        // CB 39 0273
        gbc.setState(0x604d, 0xf25, 0xec00, 0x4e2a, 0xea10, 0x5935, 0x0, 0x1);
        gbc.writeMem(0x604d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf25, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0274
        gbc.setState(0xe880, 0x3941, 0x7140, 0x6402, 0x15d3, 0x9ba0, 0x0, 0x0);
        gbc.writeMem(0xe880, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe880));
        EXPECT(0x39, gbc.readMem(0xe881));
        // CB 39 0275
        gbc.setState(0x8cf1, 0x69c9, 0xbc40, 0x27b9, 0x7e0e, 0x975c, 0x0, 0x1);
        gbc.writeMem(0x8cf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x69c9, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf1));
        EXPECT(0x39, gbc.readMem(0x8cf2));
        // CB 39 0276
        gbc.setState(0x4e38, 0xa9f5, 0x2740, 0x1e32, 0x7850, 0xe4b0, 0x1, 0x1);
        gbc.writeMem(0x4e38, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa9f5, gbc.sp());
        EXPECT(0x4e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0277
        gbc.setState(0xdbdc, 0xfd08, 0x6b80, 0xb476, 0x1b83, 0xba32, 0x1, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfd08, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdc));
        EXPECT(0x39, gbc.readMem(0xdbdd));
        // CB 39 0278
        gbc.setState(0xa2a6, 0x269a, 0xd0, 0xd747, 0xb633, 0x4cf8, 0x1, 0x1);
        gbc.writeMem(0xa2a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x269a, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a6));
        EXPECT(0x39, gbc.readMem(0xa2a7));
        // CB 39 0279
        gbc.setState(0x72d8, 0xa1bb, 0x4810, 0x28ef, 0x3a52, 0x69ee, 0x1, 0x1);
        gbc.writeMem(0x72d8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa1bb, gbc.sp());
        EXPECT(0x72da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 027A
        gbc.setState(0x9b9, 0x2ac2, 0xe080, 0x67f, 0x5ab0, 0x87c1, 0x1, 0x0);
        gbc.writeMem(0x9b9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 027B
        gbc.setState(0x317a, 0xc29e, 0x20b0, 0xeea5, 0x68e2, 0x635d, 0x0, 0x1);
        gbc.writeMem(0x317a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc29e, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 027C
        gbc.setState(0xec4c, 0x4cb9, 0x9e40, 0xc0cd, 0xeec6, 0x7b4c, 0x0, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4cb9, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0x39, gbc.readMem(0xec4d));
        // CB 39 027D
        gbc.setState(0xead5, 0x5626, 0xb260, 0x10f9, 0xd782, 0x6b56, 0x1, 0x0);
        gbc.writeMem(0xead5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5626, gbc.sp());
        EXPECT(0xead7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead5));
        EXPECT(0x39, gbc.readMem(0xead6));
        // CB 39 027E
        gbc.setState(0x969, 0xfacb, 0x8550, 0xd098, 0x81f8, 0x979a, 0x1, 0x0);
        gbc.writeMem(0x969, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 027F
        gbc.setState(0xa45c, 0xbf1d, 0x4bc0, 0xdae2, 0x981a, 0x48a1, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbf1d, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0x39, gbc.readMem(0xa45d));
        // CB 39 0280
        gbc.setState(0x3322, 0x15d9, 0xb310, 0xed9c, 0x29d2, 0xf909, 0x1, 0x0);
        gbc.writeMem(0x3322, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0x3324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0281
        gbc.setState(0x6b54, 0x4949, 0xccf0, 0xb0e1, 0x1903, 0x5711, 0x0, 0x1);
        gbc.writeMem(0x6b54, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4949, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0282
        gbc.setState(0x4a45, 0xadc1, 0x9b80, 0x2c6f, 0x61d9, 0x37f6, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0283
        gbc.setState(0x3715, 0x762b, 0x4230, 0x6311, 0x1be7, 0x1392, 0x1, 0x1);
        gbc.writeMem(0x3715, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0x3717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0284
        gbc.setState(0xb72d, 0xd14a, 0x72e0, 0xabae, 0xbfe7, 0xcb0d, 0x0, 0x0);
        gbc.writeMem(0xb72d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0x39, gbc.readMem(0xb72e));
        // CB 39 0286
        gbc.setState(0x9f64, 0xb57b, 0xbff0, 0x5c86, 0x5adb, 0xc4a6, 0x0, 0x1);
        gbc.writeMem(0x9f64, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb57b, gbc.sp());
        EXPECT(0x9f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f64));
        EXPECT(0x39, gbc.readMem(0x9f65));
        // CB 39 0287
        gbc.setState(0x8b1d, 0x832f, 0x27d0, 0x46f9, 0x7c5, 0x8cb7, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x832f, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0x39, gbc.readMem(0x8b1e));
        // CB 39 0288
        gbc.setState(0x6d63, 0xeb60, 0x6670, 0x2e6a, 0x344e, 0xf0c8, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0289
        gbc.setState(0xef39, 0x3321, 0x2990, 0xbbd8, 0x8f6f, 0x587d, 0x0, 0x0);
        gbc.writeMem(0xef39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef39));
        EXPECT(0x39, gbc.readMem(0xef3a));
        // CB 39 028A
        gbc.setState(0x280a, 0xde21, 0xb7a0, 0xd1d0, 0x55d8, 0x5917, 0x1, 0x1);
        gbc.writeMem(0x280a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xde21, gbc.sp());
        EXPECT(0x280c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 028B
        gbc.setState(0x8216, 0xf4f3, 0x95f0, 0xedc3, 0xfdc6, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf4f3, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8216));
        EXPECT(0x39, gbc.readMem(0x8217));
        // CB 39 028C
        gbc.setState(0xb38d, 0xcc3b, 0x7670, 0xe211, 0x8b31, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0xb38d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc3b, gbc.sp());
        EXPECT(0xb38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38d));
        EXPECT(0x39, gbc.readMem(0xb38e));
        // CB 39 028D
        gbc.setState(0x7c1, 0x6421, 0x55d0, 0xd976, 0x2f2c, 0xc136, 0x1, 0x1);
        gbc.writeMem(0x7c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0x7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 028E
        gbc.setState(0xde8b, 0xbcd6, 0xe100, 0x80b, 0x5a5e, 0x37f, 0x1, 0x1);
        gbc.writeMem(0xde8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbcd6, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8b));
        EXPECT(0x39, gbc.readMem(0xde8c));
        // CB 39 028F
        gbc.setState(0x727b, 0x87c2, 0x1750, 0xfb14, 0x229b, 0x7ec9, 0x1, 0x0);
        gbc.writeMem(0x727b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x87c2, gbc.sp());
        EXPECT(0x727d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0290
        gbc.setState(0x83cf, 0xe49e, 0xea90, 0x4767, 0xe0f8, 0x3155, 0x1, 0x0);
        gbc.writeMem(0x83cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe49e, gbc.sp());
        EXPECT(0x83d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cf));
        EXPECT(0x39, gbc.readMem(0x83d0));
        // CB 39 0291
        gbc.setState(0xa869, 0x764f, 0xd080, 0x67d3, 0x81a8, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0xa869, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0xa86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa869));
        EXPECT(0x39, gbc.readMem(0xa86a));
        // CB 39 0292
        gbc.setState(0x692c, 0x6e47, 0xd890, 0x9afb, 0xca57, 0x4dfa, 0x1, 0x1);
        gbc.writeMem(0x692c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e47, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0293
        gbc.setState(0xbae, 0x895e, 0xee10, 0xde16, 0xa2c1, 0x9290, 0x0, 0x1);
        gbc.writeMem(0xbae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0294
        gbc.setState(0x22e4, 0x5f9e, 0x33d0, 0xabf6, 0xe404, 0x9921, 0x0, 0x1);
        gbc.writeMem(0x22e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0295
        gbc.setState(0xcbe4, 0x467e, 0x4e70, 0x9c4d, 0xcbcd, 0xb2e7, 0x0, 0x0);
        gbc.writeMem(0xcbe4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x467e, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe4));
        EXPECT(0x39, gbc.readMem(0xcbe5));
        // CB 39 0296
        gbc.setState(0x6dd, 0x5b90, 0xc330, 0x5706, 0x7b69, 0x2585, 0x1, 0x1);
        gbc.writeMem(0x6dd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0297
        gbc.setState(0xe09e, 0x7586, 0x81c0, 0x26f9, 0x3561, 0xe5aa, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09e));
        EXPECT(0x39, gbc.readMem(0xe09f));
        // CB 39 0298
        gbc.setState(0x3959, 0x78ce, 0x7b70, 0x562f, 0x407a, 0x91a, 0x0, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x78ce, gbc.sp());
        EXPECT(0x395b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0299
        gbc.setState(0x1c88, 0x3dc5, 0x8cd0, 0xa848, 0xa56e, 0x1189, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3dc5, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 029A
        gbc.setState(0xbe14, 0xb4f8, 0x4ca0, 0x7437, 0xfaa0, 0x155f, 0x0, 0x0);
        gbc.writeMem(0xbe14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe14));
        EXPECT(0x39, gbc.readMem(0xbe15));
        // CB 39 029B
        gbc.setState(0x63a4, 0xd468, 0x8db0, 0x1790, 0x69bf, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0x63a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd468, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 029C
        gbc.setState(0xa847, 0x424e, 0x2ec0, 0x184b, 0xf30c, 0xcba0, 0x1, 0x0);
        gbc.writeMem(0xa847, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0xa849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa847));
        EXPECT(0x39, gbc.readMem(0xa848));
        // CB 39 029D
        gbc.setState(0x7e8, 0x8c8f, 0xf4f0, 0xa03, 0xac7, 0x3237, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8c8f, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 029E
        gbc.setState(0xb856, 0x4fa2, 0x1cc0, 0xbfec, 0x1fab, 0xa506, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb856));
        EXPECT(0x39, gbc.readMem(0xb857));
        // CB 39 029F
        gbc.setState(0xeecc, 0x2314, 0xc5c0, 0x800b, 0x72dc, 0x9535, 0x1, 0x1);
        gbc.writeMem(0xeecc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2314, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecc));
        EXPECT(0x39, gbc.readMem(0xeecd));
        // CB 39 02A0
        gbc.setState(0x68a5, 0x8f0e, 0x2e60, 0xd9fd, 0xc004, 0xc93d, 0x0, 0x1);
        gbc.writeMem(0x68a5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8f0e, gbc.sp());
        EXPECT(0x68a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02A1
        gbc.setState(0xdd0c, 0x27fc, 0xa4b0, 0xc065, 0xc481, 0x779c, 0x0, 0x0);
        gbc.writeMem(0xdd0c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0c));
        EXPECT(0x39, gbc.readMem(0xdd0d));
        // CB 39 02A2
        gbc.setState(0x24b3, 0x3aff, 0x11e0, 0xaee5, 0x46c, 0x5917, 0x1, 0x0);
        gbc.writeMem(0x24b3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3aff, gbc.sp());
        EXPECT(0x24b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02A3
        gbc.setState(0x16ee, 0x709b, 0x26e0, 0xfac4, 0xae5e, 0xb0ee, 0x0, 0x1);
        gbc.writeMem(0x16ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x709b, gbc.sp());
        EXPECT(0x16f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02A4
        gbc.setState(0xdde2, 0xcfe1, 0x16b0, 0x75e5, 0xe54c, 0xb289, 0x1, 0x0);
        gbc.writeMem(0xdde2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcfe1, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0x39, gbc.readMem(0xdde3));
        // CB 39 02A5
        gbc.setState(0xe895, 0x5266, 0x68f0, 0x78c4, 0x4563, 0x719a, 0x1, 0x1);
        gbc.writeMem(0xe895, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe895));
        EXPECT(0x39, gbc.readMem(0xe896));
        // CB 39 02A6
        gbc.setState(0xcdad, 0x5a34, 0x2d40, 0x3a2e, 0x4a9f, 0xa3b0, 0x1, 0x0);
        gbc.writeMem(0xcdad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5a34, gbc.sp());
        EXPECT(0xcdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdad));
        EXPECT(0x39, gbc.readMem(0xcdae));
        // CB 39 02A7
        gbc.setState(0xc390, 0xac1d, 0x20a0, 0x4b9b, 0xa329, 0xc46c, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xac1d, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0x39, gbc.readMem(0xc391));
        // CB 39 02A8
        gbc.setState(0xa787, 0x8ffb, 0xe30, 0x2505, 0x55ad, 0x112d, 0x0, 0x0);
        gbc.writeMem(0xa787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8ffb, gbc.sp());
        EXPECT(0xa789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa787));
        EXPECT(0x39, gbc.readMem(0xa788));
        // CB 39 02A9
        gbc.setState(0x3ec8, 0x1dcb, 0x4370, 0xa78c, 0xed95, 0xea41, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02AA
        gbc.setState(0xa86f, 0x81e1, 0x5f40, 0xed9b, 0x610a, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x81e1, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86f));
        EXPECT(0x39, gbc.readMem(0xa870));
        // CB 39 02AB
        gbc.setState(0xbad0, 0x2d0c, 0x4650, 0x8cff, 0xb33f, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xbad0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2d0c, gbc.sp());
        EXPECT(0xbad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad0));
        EXPECT(0x39, gbc.readMem(0xbad1));
        // CB 39 02AC
        gbc.setState(0xcd4e, 0x141, 0xd440, 0xd5c8, 0x2c52, 0xcf63, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x141, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4e));
        EXPECT(0x39, gbc.readMem(0xcd4f));
        // CB 39 02AD
        gbc.setState(0x9387, 0xbfe7, 0xdd80, 0xb03d, 0xad47, 0xb1fd, 0x0, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9387));
        EXPECT(0x39, gbc.readMem(0x9388));
        // CB 39 02AE
        gbc.setState(0x7d6f, 0x2859, 0x6cd0, 0x16ff, 0x77c2, 0x5977, 0x0, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2859, gbc.sp());
        EXPECT(0x7d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02AF
        gbc.setState(0xb397, 0xe8ba, 0xbdc0, 0x60d7, 0x574e, 0x804f, 0x1, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe8ba, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb397));
        EXPECT(0x39, gbc.readMem(0xb398));
        // CB 39 02B0
        gbc.setState(0x2289, 0xc3f0, 0xf770, 0x3b4a, 0xb4e0, 0x777b, 0x1, 0x1);
        gbc.writeMem(0x2289, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc3f0, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02B1
        gbc.setState(0x2bd6, 0xf511, 0x6550, 0xfb39, 0x2d11, 0xa753, 0x0, 0x1);
        gbc.writeMem(0x2bd6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0x2bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02B2
        gbc.setState(0xb865, 0xb6c7, 0x23d0, 0x3927, 0x48ba, 0xe830, 0x1, 0x0);
        gbc.writeMem(0xb865, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb865));
        EXPECT(0x39, gbc.readMem(0xb866));
        // CB 39 02B3
        gbc.setState(0x2c00, 0xdca7, 0x8940, 0x216c, 0x84d1, 0x6cc3, 0x1, 0x1);
        gbc.writeMem(0x2c00, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdca7, gbc.sp());
        EXPECT(0x2c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02B4
        gbc.setState(0x527e, 0xfd27, 0xd1f0, 0xee7a, 0x68f5, 0x3dd5, 0x1, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02B5
        gbc.setState(0x9b71, 0x104e, 0xe7f0, 0x75ec, 0x2b65, 0x6b04, 0x0, 0x0);
        gbc.writeMem(0x9b71, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b71));
        EXPECT(0x39, gbc.readMem(0x9b72));
        // CB 39 02B6
        gbc.setState(0x8eb1, 0xf1dc, 0x9bc0, 0xe42e, 0xf2a0, 0xdfc4, 0x1, 0x1);
        gbc.writeMem(0x8eb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf1dc, gbc.sp());
        EXPECT(0x8eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb1));
        EXPECT(0x39, gbc.readMem(0x8eb2));
        // CB 39 02B7
        gbc.setState(0x8c30, 0xb4a8, 0x7470, 0x55c3, 0xad9b, 0xa3b6, 0x0, 0x0);
        gbc.writeMem(0x8c30, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb4a8, gbc.sp());
        EXPECT(0x8c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c30));
        EXPECT(0x39, gbc.readMem(0x8c31));
        // CB 39 02B8
        gbc.setState(0x9e73, 0x1ff5, 0x9f60, 0xae37, 0x9d98, 0xd78, 0x0, 0x1);
        gbc.writeMem(0x9e73, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1ff5, gbc.sp());
        EXPECT(0x9e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e73));
        EXPECT(0x39, gbc.readMem(0x9e74));
        // CB 39 02B9
        gbc.setState(0x934a, 0x2ef3, 0xb680, 0x52d5, 0xb7b, 0x484c, 0x1, 0x0);
        gbc.writeMem(0x934a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934a));
        EXPECT(0x39, gbc.readMem(0x934b));
        // CB 39 02BA
        gbc.setState(0x1d21, 0xd074, 0x1e90, 0x75de, 0xd9de, 0x942c, 0x0, 0x1);
        gbc.writeMem(0x1d21, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd074, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02BB
        gbc.setState(0xc211, 0x4c70, 0x8aa0, 0x2208, 0x2d4a, 0xaf30, 0x0, 0x1);
        gbc.writeMem(0xc211, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc211));
        EXPECT(0x39, gbc.readMem(0xc212));
        // CB 39 02BC
        gbc.setState(0x8c90, 0xf942, 0x5990, 0x9b8c, 0x3be1, 0x5e1c, 0x1, 0x1);
        gbc.writeMem(0x8c90, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf942, gbc.sp());
        EXPECT(0x8c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c90));
        EXPECT(0x39, gbc.readMem(0x8c91));
        // CB 39 02BD
        gbc.setState(0xbfc1, 0xbab8, 0x93d0, 0xa50e, 0x3b64, 0x4a67, 0x1, 0x1);
        gbc.writeMem(0xbfc1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0xbfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc1));
        EXPECT(0x39, gbc.readMem(0xbfc2));
        // CB 39 02BE
        gbc.setState(0x5e4e, 0xa2d6, 0x9b10, 0x241c, 0xd848, 0xa3fb, 0x0, 0x1);
        gbc.writeMem(0x5e4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x5e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02BF
        gbc.setState(0x7a7f, 0x5b99, 0x190, 0x2703, 0xd733, 0xbffc, 0x0, 0x0);
        gbc.writeMem(0x7a7f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5b99, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02C0
        gbc.setState(0x3bb1, 0x427, 0xd7f0, 0x7972, 0xc342, 0x1739, 0x0, 0x1);
        gbc.writeMem(0x3bb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x3bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02C1
        gbc.setState(0xdaf7, 0xb10, 0x5520, 0x4b3b, 0x8919, 0x9bb4, 0x1, 0x0);
        gbc.writeMem(0xdaf7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xdaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf7));
        EXPECT(0x39, gbc.readMem(0xdaf8));
        // CB 39 02C2
        gbc.setState(0x75af, 0xe2e1, 0x7350, 0xff2a, 0x5529, 0xaa2f, 0x1, 0x0);
        gbc.writeMem(0x75af, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x75b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02C3
        gbc.setState(0x217d, 0xdd1c, 0x7130, 0xb544, 0x863c, 0x345c, 0x1, 0x0);
        gbc.writeMem(0x217d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x217f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02C4
        gbc.setState(0x446, 0x605f, 0xeb10, 0xdfd1, 0xf98d, 0x9ccd, 0x0, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x605f, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02C5
        gbc.setState(0x6c91, 0x5714, 0x9320, 0xbf09, 0xe089, 0x6129, 0x0, 0x0);
        gbc.writeMem(0x6c91, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0x6c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02C6
        gbc.setState(0x1e3e, 0x7fe7, 0x6290, 0xebf7, 0x3903, 0xd2e3, 0x1, 0x0);
        gbc.writeMem(0x1e3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7fe7, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02C7
        gbc.setState(0xb0b1, 0xc833, 0xd650, 0x4705, 0xec67, 0xc44c, 0x0, 0x1);
        gbc.writeMem(0xb0b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0xb0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b1));
        EXPECT(0x39, gbc.readMem(0xb0b2));
        // CB 39 02C8
        gbc.setState(0x1801, 0x71d8, 0x13d0, 0xe974, 0x45f5, 0x5704, 0x1, 0x0);
        gbc.writeMem(0x1801, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x71d8, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02C9
        gbc.setState(0xb2ac, 0xc765, 0x1c10, 0xdd17, 0x3a08, 0xcccf, 0x1, 0x0);
        gbc.writeMem(0xb2ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc765, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ac));
        EXPECT(0x39, gbc.readMem(0xb2ad));
        // CB 39 02CA
        gbc.setState(0xeba2, 0xb616, 0x2a10, 0xf883, 0xec25, 0x2163, 0x0, 0x0);
        gbc.writeMem(0xeba2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb616, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba2));
        EXPECT(0x39, gbc.readMem(0xeba3));
        // CB 39 02CC
        gbc.setState(0xaea4, 0x485f, 0x4580, 0xdb52, 0x25d0, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0xaea4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xaea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea4));
        EXPECT(0x39, gbc.readMem(0xaea5));
        // CB 39 02CD
        gbc.setState(0x37e3, 0xf4ff, 0xaec0, 0x6441, 0xc797, 0x5720, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02CE
        gbc.setState(0x3adc, 0xbc76, 0x1820, 0x4ac7, 0xb19e, 0xcddc, 0x1, 0x0);
        gbc.writeMem(0x3adc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbc76, gbc.sp());
        EXPECT(0x3ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02CF
        gbc.setState(0x1d86, 0xa8f5, 0xbcc0, 0xbaad, 0xfe07, 0x73c7, 0x0, 0x0);
        gbc.writeMem(0x1d86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa8f5, gbc.sp());
        EXPECT(0x1d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02D0
        gbc.setState(0x8c16, 0x4fb7, 0x7f10, 0x53f2, 0xdf71, 0xea02, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c16));
        EXPECT(0x39, gbc.readMem(0x8c17));
        // CB 39 02D1
        gbc.setState(0xb349, 0xc6ad, 0xf30, 0x7c18, 0x6764, 0xf984, 0x1, 0x1);
        gbc.writeMem(0xb349, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc6ad, gbc.sp());
        EXPECT(0xb34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb349));
        EXPECT(0x39, gbc.readMem(0xb34a));
        // CB 39 02D2
        gbc.setState(0x4ac8, 0x3817, 0xf6a0, 0x9f91, 0xa46, 0x8ee, 0x0, 0x1);
        gbc.writeMem(0x4ac8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3817, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02D3
        gbc.setState(0x2496, 0x8e85, 0x18e0, 0x6fbb, 0x9a12, 0xbe2b, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8e85, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02D4
        gbc.setState(0x24e, 0xd9aa, 0xebc0, 0x7d41, 0x8fb6, 0x5478, 0x1, 0x1);
        gbc.writeMem(0x24e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0x250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02D5
        gbc.setState(0x15cf, 0xdf5c, 0x7940, 0x1b09, 0xe9ca, 0x8033, 0x1, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdf5c, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02D6
        gbc.setState(0xe3c5, 0x6a32, 0x2930, 0x5f45, 0xd99a, 0xef74, 0x0, 0x0);
        gbc.writeMem(0xe3c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a32, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c5));
        EXPECT(0x39, gbc.readMem(0xe3c6));
        // CB 39 02D7
        gbc.setState(0x3703, 0x1c63, 0xd720, 0xa91a, 0xb74a, 0x2a6b, 0x0, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02D8
        gbc.setState(0x9f69, 0x4ccc, 0x6ea0, 0x6ade, 0x505a, 0x6162, 0x0, 0x1);
        gbc.writeMem(0x9f69, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0x9f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f69));
        EXPECT(0x39, gbc.readMem(0x9f6a));
        // CB 39 02D9
        gbc.setState(0x3ff1, 0xdffb, 0x4220, 0xd06f, 0x3306, 0x8447, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02DA
        gbc.setState(0x5791, 0xeb02, 0xc2a0, 0xfc11, 0xf92f, 0xd2df, 0x1, 0x1);
        gbc.writeMem(0x5791, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeb02, gbc.sp());
        EXPECT(0x5793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02DB
        gbc.setState(0xc04a, 0xcc51, 0xe220, 0xdecf, 0x5e8f, 0xa0c2, 0x1, 0x1);
        gbc.writeMem(0xc04a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcc51, gbc.sp());
        EXPECT(0xc04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04a));
        EXPECT(0x39, gbc.readMem(0xc04b));
        // CB 39 02DC
        gbc.setState(0x861c, 0x13f3, 0xde00, 0xe9f6, 0x6e93, 0x6fe1, 0x1, 0x0);
        gbc.writeMem(0x861c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x13f3, gbc.sp());
        EXPECT(0x861e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861c));
        EXPECT(0x39, gbc.readMem(0x861d));
        // CB 39 02DD
        gbc.setState(0xe05e, 0x2b54, 0xc3d0, 0xb59, 0x590f, 0x4c3b, 0x0, 0x0);
        gbc.writeMem(0xe05e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05e));
        EXPECT(0x39, gbc.readMem(0xe05f));
        // CB 39 02DE
        gbc.setState(0xb614, 0x468b, 0x82c0, 0x4e20, 0x5bf1, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0xb614, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0xb616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb614));
        EXPECT(0x39, gbc.readMem(0xb615));
        // CB 39 02DF
        gbc.setState(0xde2a, 0x88f5, 0xea80, 0x406b, 0x3ca5, 0x1886, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x88f5, gbc.sp());
        EXPECT(0xde2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2a));
        EXPECT(0x39, gbc.readMem(0xde2b));
        // CB 39 02E0
        gbc.setState(0xd9a8, 0x1c6b, 0xfe80, 0x5c21, 0x324c, 0x8a3, 0x0, 0x1);
        gbc.writeMem(0xd9a8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a8));
        EXPECT(0x39, gbc.readMem(0xd9a9));
        // CB 39 02E1
        gbc.setState(0xc387, 0xff06, 0x2090, 0x70bb, 0xc31b, 0xccc, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xff06, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0x39, gbc.readMem(0xc388));
        // CB 39 02E2
        gbc.setState(0xa8d5, 0xca43, 0x2810, 0x57a2, 0xb858, 0x5445, 0x0, 0x1);
        gbc.writeMem(0xa8d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0xa8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d5));
        EXPECT(0x39, gbc.readMem(0xa8d6));
        // CB 39 02E3
        gbc.setState(0x406e, 0x4b81, 0x6780, 0x94ea, 0x5213, 0x7437, 0x1, 0x0);
        gbc.writeMem(0x406e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0x4070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02E4
        gbc.setState(0xd316, 0x77da, 0x88d0, 0x3421, 0xcdf0, 0x620e, 0x0, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x77da, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd316));
        EXPECT(0x39, gbc.readMem(0xd317));
        // CB 39 02E5
        gbc.setState(0x227f, 0x5ba0, 0x4850, 0xe395, 0x5701, 0x89d2, 0x0, 0x1);
        gbc.writeMem(0x227f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5ba0, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02E6
        gbc.setState(0x509d, 0x41e2, 0xb9f0, 0x9db, 0x99c5, 0x702a, 0x0, 0x1);
        gbc.writeMem(0x509d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x41e2, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02E7
        gbc.setState(0x1193, 0xb5f6, 0x7900, 0x4301, 0xcd6d, 0xf40e, 0x0, 0x1);
        gbc.writeMem(0x1193, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x1195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02E8
        gbc.setState(0x221c, 0xf175, 0x9520, 0xdfe2, 0xe542, 0xe344, 0x0, 0x0);
        gbc.writeMem(0x221c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf175, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02E9
        gbc.setState(0xba7a, 0x750c, 0xcd70, 0xcd8c, 0x575, 0x8745, 0x0, 0x1);
        gbc.writeMem(0xba7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x750c, gbc.sp());
        EXPECT(0xba7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7a));
        EXPECT(0x39, gbc.readMem(0xba7b));
        // CB 39 02EA
        gbc.setState(0x3388, 0xd40a, 0xf240, 0xa47, 0xfd92, 0xdc3a, 0x1, 0x1);
        gbc.writeMem(0x3388, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd40a, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02EB
        gbc.setState(0x9462, 0xe73b, 0xc860, 0xe844, 0xa0ae, 0x3ff2, 0x1, 0x0);
        gbc.writeMem(0x9462, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe73b, gbc.sp());
        EXPECT(0x9464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9462));
        EXPECT(0x39, gbc.readMem(0x9463));
        // CB 39 02EC
        gbc.setState(0xdc96, 0x9db7, 0x91a0, 0x64c6, 0xb61e, 0xfdc8, 0x1, 0x1);
        gbc.writeMem(0xdc96, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0xdc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc96));
        EXPECT(0x39, gbc.readMem(0xdc97));
        // CB 39 02ED
        gbc.setState(0x804a, 0x427, 0x1bf0, 0xf0dd, 0x4775, 0xb39d, 0x1, 0x1);
        gbc.writeMem(0x804a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x804c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804a));
        EXPECT(0x39, gbc.readMem(0x804b));
        // CB 39 02EE
        gbc.setState(0x2e4f, 0x6975, 0xbf10, 0xf642, 0xb1f2, 0x4107, 0x0, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0x2e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02EF
        gbc.setState(0x44a4, 0x6509, 0x69c0, 0x4a30, 0xed89, 0xefe0, 0x0, 0x1);
        gbc.writeMem(0x44a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6509, gbc.sp());
        EXPECT(0x44a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02F0
        gbc.setState(0x357d, 0x61a5, 0x80f0, 0xda1c, 0xdffc, 0x89f6, 0x0, 0x1);
        gbc.writeMem(0x357d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02F1
        gbc.setState(0x2677, 0xb799, 0x5c30, 0xb717, 0x810e, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x2677, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb799, gbc.sp());
        EXPECT(0x2679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02F2
        gbc.setState(0xbd33, 0x82b9, 0x2d60, 0xc676, 0xd375, 0x6ffd, 0x0, 0x1);
        gbc.writeMem(0xbd33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x82b9, gbc.sp());
        EXPECT(0xbd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd33));
        EXPECT(0x39, gbc.readMem(0xbd34));
        // CB 39 02F3
        gbc.setState(0x9a39, 0x8f5e, 0x7370, 0xe245, 0x65c4, 0x42b5, 0x0, 0x0);
        gbc.writeMem(0x9a39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8f5e, gbc.sp());
        EXPECT(0x9a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a39));
        EXPECT(0x39, gbc.readMem(0x9a3a));
        // CB 39 02F4
        gbc.setState(0x25cc, 0x3275, 0xdce0, 0x8c6, 0x26aa, 0xc95e, 0x0, 0x0);
        gbc.writeMem(0x25cc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0x25ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 02F5
        gbc.setState(0xa6d4, 0x83d1, 0x8510, 0xf899, 0x9727, 0x89b0, 0x0, 0x0);
        gbc.writeMem(0xa6d4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x83d1, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d4));
        EXPECT(0x39, gbc.readMem(0xa6d5));
        // CB 39 02F7
        gbc.setState(0x5995, 0x93ad, 0x1dc0, 0xa71f, 0x639a, 0xcc19, 0x1, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x93ad, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 02F8
        gbc.setState(0xca4f, 0x704, 0x7360, 0x2afe, 0x90d5, 0xa678, 0x0, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x704, gbc.sp());
        EXPECT(0xca51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4f));
        EXPECT(0x39, gbc.readMem(0xca50));
        // CB 39 02F9
        gbc.setState(0xc5f0, 0xe4c1, 0x4570, 0xdde8, 0x425d, 0x5c8d, 0x1, 0x1);
        gbc.writeMem(0xc5f0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe4c1, gbc.sp());
        EXPECT(0xc5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f0));
        EXPECT(0x39, gbc.readMem(0xc5f1));
        // CB 39 02FB
        gbc.setState(0xb5f3, 0xb29f, 0xc010, 0xde10, 0x66e4, 0x4b25, 0x1, 0x0);
        gbc.writeMem(0xb5f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb29f, gbc.sp());
        EXPECT(0xb5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f3));
        EXPECT(0x39, gbc.readMem(0xb5f4));
        // CB 39 02FC
        gbc.setState(0xdea8, 0x69be, 0xd3b0, 0xc29f, 0xa2c4, 0x1131, 0x1, 0x0);
        gbc.writeMem(0xdea8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x69be, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea8));
        EXPECT(0x39, gbc.readMem(0xdea9));
        // CB 39 02FD
        gbc.setState(0xa931, 0x776b, 0x81b0, 0xfbfa, 0x424d, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x776b, gbc.sp());
        EXPECT(0xa933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa931));
        EXPECT(0x39, gbc.readMem(0xa932));
        // CB 39 02FE
        gbc.setState(0xec80, 0x4f02, 0x37c0, 0xe9d8, 0x3ebd, 0x30d3, 0x1, 0x1);
        gbc.writeMem(0xec80, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4f02, gbc.sp());
        EXPECT(0xec82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec80));
        EXPECT(0x39, gbc.readMem(0xec81));
        // CB 39 02FF
        gbc.setState(0x5aa8, 0xb4b7, 0xbdb0, 0xf715, 0xa675, 0xcac9, 0x1, 0x1);
        gbc.writeMem(0x5aa8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0300
        gbc.setState(0xe3ad, 0x1dd8, 0x890, 0xbcef, 0xd223, 0xd589, 0x0, 0x0);
        gbc.writeMem(0xe3ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0xe3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ad));
        EXPECT(0x39, gbc.readMem(0xe3ae));
        // CB 39 0301
        gbc.setState(0x30db, 0xf087, 0x1680, 0xa929, 0x91c2, 0xf6d3, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0302
        gbc.setState(0x5a9, 0x781f, 0x5c60, 0xcda2, 0x53fc, 0xb0a4, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0303
        gbc.setState(0x423b, 0x7984, 0xfeb0, 0xa0a6, 0x25c1, 0xadda, 0x0, 0x1);
        gbc.writeMem(0x423b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7984, gbc.sp());
        EXPECT(0x423d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0304
        gbc.setState(0xd796, 0x2809, 0x64d0, 0xe9e0, 0x6f35, 0xca36, 0x1, 0x0);
        gbc.writeMem(0xd796, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd796));
        EXPECT(0x39, gbc.readMem(0xd797));
        // CB 39 0305
        gbc.setState(0x6bc5, 0xddfd, 0xc5f0, 0xdbcf, 0xd08f, 0xe09f, 0x1, 0x0);
        gbc.writeMem(0x6bc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xddfd, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0306
        gbc.setState(0x4692, 0x970b, 0xd2f0, 0x8fa2, 0x1873, 0x34c1, 0x0, 0x1);
        gbc.writeMem(0x4692, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x970b, gbc.sp());
        EXPECT(0x4694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0307
        gbc.setState(0xd4ac, 0xa138, 0x8ab0, 0x70d9, 0xf3df, 0xac58, 0x0, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa138, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ac));
        EXPECT(0x39, gbc.readMem(0xd4ad));
        // CB 39 0308
        gbc.setState(0xef3e, 0x7802, 0xdfb0, 0xae29, 0x824e, 0x4507, 0x1, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0x39, gbc.readMem(0xef3f));
        // CB 39 0309
        gbc.setState(0x4b41, 0xc497, 0xf770, 0xecf5, 0x150c, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0x4b41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x4b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 030B
        gbc.setState(0x1bcf, 0xf1e7, 0x7870, 0x18c7, 0xee93, 0x9afd, 0x0, 0x0);
        gbc.writeMem(0x1bcf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf1e7, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 030C
        gbc.setState(0x8b7c, 0xa92c, 0x3130, 0x6497, 0x6749, 0x5e9c, 0x0, 0x0);
        gbc.writeMem(0x8b7c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa92c, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7c));
        EXPECT(0x39, gbc.readMem(0x8b7d));
        // CB 39 030D
        gbc.setState(0x8c06, 0x7935, 0x2820, 0x77b9, 0x775e, 0x277e, 0x1, 0x1);
        gbc.writeMem(0x8c06, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7935, gbc.sp());
        EXPECT(0x8c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c06));
        EXPECT(0x39, gbc.readMem(0x8c07));
        // CB 39 030E
        gbc.setState(0x2aaf, 0x87cd, 0xc860, 0x8cfb, 0x4ea4, 0x11e1, 0x1, 0x0);
        gbc.writeMem(0x2aaf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x2ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 030F
        gbc.setState(0x6ab3, 0x5dcd, 0xae30, 0xb57b, 0x5c79, 0x96ce, 0x0, 0x0);
        gbc.writeMem(0x6ab3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5dcd, gbc.sp());
        EXPECT(0x6ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0310
        gbc.setState(0x5fc, 0x4782, 0xb140, 0x929a, 0xd201, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0x5fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0311
        gbc.setState(0x74d9, 0xa34d, 0xed20, 0xd814, 0x6c05, 0x6667, 0x0, 0x0);
        gbc.writeMem(0x74d9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0312
        gbc.setState(0xda14, 0x9f81, 0xc5b0, 0x3da8, 0xfee3, 0x260b, 0x1, 0x0);
        gbc.writeMem(0xda14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9f81, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda14));
        EXPECT(0x39, gbc.readMem(0xda15));
        // CB 39 0313
        gbc.setState(0x2bae, 0xcb21, 0x3ee0, 0x9039, 0xe7f0, 0x8605, 0x0, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0314
        gbc.setState(0x507a, 0x2403, 0xaa80, 0xe271, 0xc4c4, 0x80a6, 0x1, 0x0);
        gbc.writeMem(0x507a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2403, gbc.sp());
        EXPECT(0x507c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0316
        gbc.setState(0xc970, 0x5a13, 0x9f10, 0xa031, 0xb4a0, 0x4b59, 0x1, 0x0);
        gbc.writeMem(0xc970, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc970));
        EXPECT(0x39, gbc.readMem(0xc971));
        // CB 39 0317
        gbc.setState(0x5768, 0x6625, 0xf390, 0x8884, 0xe62a, 0xe7a7, 0x1, 0x1);
        gbc.writeMem(0x5768, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x576a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0318
        gbc.setState(0xa5aa, 0xd5ba, 0xe0b0, 0x2d66, 0xa732, 0xef80, 0x0, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd5ba, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5aa));
        EXPECT(0x39, gbc.readMem(0xa5ab));
        // CB 39 031A
        gbc.setState(0xda81, 0x8bf0, 0x5550, 0x267b, 0x9f02, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xda81, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0x39, gbc.readMem(0xda82));
        // CB 39 031B
        gbc.setState(0x1b3d, 0xd3c8, 0xbfe0, 0xdd5a, 0xfc37, 0x6c5c, 0x0, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd3c8, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 031C
        gbc.setState(0x28f3, 0xac3a, 0xea80, 0x1a6f, 0x5c5e, 0xd05e, 0x1, 0x1);
        gbc.writeMem(0x28f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xac3a, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 031D
        gbc.setState(0x4526, 0x600c, 0x51a0, 0x199e, 0x2a0e, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0x4526, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 031E
        gbc.setState(0xd7ee, 0x2566, 0xe8e0, 0x7915, 0x9e5a, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0xd7ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2566, gbc.sp());
        EXPECT(0xd7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ee));
        EXPECT(0x39, gbc.readMem(0xd7ef));
        // CB 39 031F
        gbc.setState(0x6ef0, 0x4f4a, 0x9d70, 0x16f0, 0x2fb3, 0xe10, 0x0, 0x0);
        gbc.writeMem(0x6ef0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4f4a, gbc.sp());
        EXPECT(0x6ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0320
        gbc.setState(0x9744, 0x78eb, 0x8480, 0x367e, 0x992e, 0x3660, 0x0, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9744));
        EXPECT(0x39, gbc.readMem(0x9745));
        // CB 39 0322
        gbc.setState(0xdfc8, 0x870c, 0x8030, 0x6914, 0x66a4, 0x40de, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0xdfca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc8));
        EXPECT(0x39, gbc.readMem(0xdfc9));
        // CB 39 0323
        gbc.setState(0x8972, 0xffc6, 0x8940, 0x1873, 0xef6, 0x1e3c, 0x1, 0x1);
        gbc.writeMem(0x8972, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xffc6, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8972));
        EXPECT(0x39, gbc.readMem(0x8973));
        // CB 39 0325
        gbc.setState(0x78a9, 0x887e, 0x380, 0xea11, 0x3d53, 0xf665, 0x0, 0x1);
        gbc.writeMem(0x78a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0326
        gbc.setState(0x99fb, 0xde32, 0x7210, 0x881f, 0x3f18, 0x5b12, 0x0, 0x0);
        gbc.writeMem(0x99fb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xde32, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fb));
        EXPECT(0x39, gbc.readMem(0x99fc));
        // CB 39 0327
        gbc.setState(0x14df, 0xa52d, 0xda0, 0x18df, 0x1bd, 0x10e9, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0x14e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0328
        gbc.setState(0x7b40, 0x82b7, 0x1df0, 0xf845, 0x8657, 0xa810, 0x0, 0x0);
        gbc.writeMem(0x7b40, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0x7b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0329
        gbc.setState(0x9409, 0xe32c, 0x4d60, 0x5a8f, 0xdc04, 0x77a7, 0x0, 0x0);
        gbc.writeMem(0x9409, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe32c, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9409));
        EXPECT(0x39, gbc.readMem(0x940a));
        // CB 39 032A
        gbc.setState(0xbf85, 0x4c44, 0xec30, 0xddf4, 0xcbf9, 0xae37, 0x0, 0x0);
        gbc.writeMem(0xbf85, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4c44, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf85));
        EXPECT(0x39, gbc.readMem(0xbf86));
        // CB 39 032B
        gbc.setState(0x675d, 0x13d9, 0x3fc0, 0xde07, 0x307e, 0x4d67, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x13d9, gbc.sp());
        EXPECT(0x675f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 032C
        gbc.setState(0x38e0, 0x70ba, 0x9390, 0xad1f, 0x3c8d, 0xe059, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x70ba, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 032D
        gbc.setState(0x5019, 0x46a, 0xdae0, 0xac13, 0x687a, 0x7a0d, 0x1, 0x1);
        gbc.writeMem(0x5019, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x46a, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 032E
        gbc.setState(0xd031, 0xd42a, 0xcf00, 0x9e6b, 0x593d, 0xb64c, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd031));
        EXPECT(0x39, gbc.readMem(0xd032));
        // CB 39 032F
        gbc.setState(0xcc16, 0x1aef, 0x7f00, 0xae2a, 0x2529, 0xceb2, 0x0, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0x39, gbc.readMem(0xcc17));
        // CB 39 0330
        gbc.setState(0xee88, 0xfa79, 0xb630, 0x5861, 0xaa26, 0xb47, 0x0, 0x1);
        gbc.writeMem(0xee88, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0xee8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee88));
        EXPECT(0x39, gbc.readMem(0xee89));
        // CB 39 0331
        gbc.setState(0xe21f, 0x58c1, 0xb7c0, 0x98a5, 0x427b, 0x3fe4, 0x0, 0x1);
        gbc.writeMem(0xe21f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0xe221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21f));
        EXPECT(0x39, gbc.readMem(0xe220));
        // CB 39 0332
        gbc.setState(0xce5f, 0x1653, 0x9380, 0x3de, 0x59d3, 0xd939, 0x0, 0x0);
        gbc.writeMem(0xce5f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1653, gbc.sp());
        EXPECT(0xce61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5f));
        EXPECT(0x39, gbc.readMem(0xce60));
        // CB 39 0333
        gbc.setState(0xdc51, 0xd16b, 0x1e00, 0x56e7, 0xaadb, 0xbbf2, 0x0, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd16b, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0x39, gbc.readMem(0xdc52));
        // CB 39 0334
        gbc.setState(0x495b, 0xefc9, 0x4b40, 0x6b00, 0xbe9a, 0x6a5a, 0x0, 0x0);
        gbc.writeMem(0x495b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x495d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0335
        gbc.setState(0x9e6e, 0xcd28, 0xca60, 0x2743, 0xd9, 0x5eac, 0x0, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd28, gbc.sp());
        EXPECT(0x9e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6e));
        EXPECT(0x39, gbc.readMem(0x9e6f));
        // CB 39 0336
        gbc.setState(0xc194, 0x2663, 0x8640, 0x1b13, 0x15ac, 0x5a80, 0x1, 0x0);
        gbc.writeMem(0xc194, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2663, gbc.sp());
        EXPECT(0xc196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc194));
        EXPECT(0x39, gbc.readMem(0xc195));
        // CB 39 0338
        gbc.setState(0x6375, 0x8eec, 0x8e70, 0x308b, 0x689b, 0x83e1, 0x0, 0x1);
        gbc.writeMem(0x6375, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0x6377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0339
        gbc.setState(0x9990, 0xa93c, 0xadc0, 0x2e65, 0x6239, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa93c, gbc.sp());
        EXPECT(0x9992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9990));
        EXPECT(0x39, gbc.readMem(0x9991));
        // CB 39 033A
        gbc.setState(0x9bfa, 0x2ac7, 0x1910, 0x9aef, 0x2504, 0x40d0, 0x0, 0x1);
        gbc.writeMem(0x9bfa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2ac7, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfa));
        EXPECT(0x39, gbc.readMem(0x9bfb));
        // CB 39 033B
        gbc.setState(0xd97b, 0x2040, 0x2070, 0x5fc9, 0x5685, 0x4e51, 0x1, 0x0);
        gbc.writeMem(0xd97b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2040, gbc.sp());
        EXPECT(0xd97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97b));
        EXPECT(0x39, gbc.readMem(0xd97c));
        // CB 39 033C
        gbc.setState(0x208d, 0xeb96, 0x82d0, 0x5904, 0xb793, 0xd1fe, 0x0, 0x1);
        gbc.writeMem(0x208d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0x208f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 033D
        gbc.setState(0x9a4, 0xb8f6, 0x2a80, 0xf24b, 0xbac1, 0x1427, 0x1, 0x1);
        gbc.writeMem(0x9a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb8f6, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 033E
        gbc.setState(0x5bdd, 0xf300, 0xfc30, 0x570b, 0xffd1, 0x40ad, 0x0, 0x0);
        gbc.writeMem(0x5bdd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf300, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 033F
        gbc.setState(0x1531, 0xd44b, 0xab0, 0xc4f7, 0x6caf, 0x1320, 0x1, 0x1);
        gbc.writeMem(0x1531, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd44b, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0340
        gbc.setState(0x412c, 0x1639, 0x9c90, 0x7f6b, 0xa2c0, 0x5c17, 0x0, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1639, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0341
        gbc.setState(0x7816, 0x6d81, 0x56c0, 0xe355, 0x1275, 0xe7ad, 0x0, 0x0);
        gbc.writeMem(0x7816, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x7818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0342
        gbc.setState(0x32bd, 0xda5e, 0xcdb0, 0x58b7, 0x5afd, 0x21d4, 0x0, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0343
        gbc.setState(0xd89f, 0xae63, 0x8870, 0x83a3, 0x19d7, 0x2f1f, 0x0, 0x0);
        gbc.writeMem(0xd89f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xae63, gbc.sp());
        EXPECT(0xd8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89f));
        EXPECT(0x39, gbc.readMem(0xd8a0));
        // CB 39 0344
        gbc.setState(0xeadc, 0xdc38, 0xab60, 0x3e00, 0xaa6a, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0xeadc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdc38, gbc.sp());
        EXPECT(0xeade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadc));
        EXPECT(0x39, gbc.readMem(0xeadd));
        // CB 39 0345
        gbc.setState(0x2e1b, 0xf65a, 0xcfd0, 0x6ad5, 0xb1fc, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0x2e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0346
        gbc.setState(0xc614, 0x1ea8, 0x5de0, 0x5295, 0x885f, 0x5378, 0x0, 0x1);
        gbc.writeMem(0xc614, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1ea8, gbc.sp());
        EXPECT(0xc616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc614));
        EXPECT(0x39, gbc.readMem(0xc615));
        // CB 39 0347
        gbc.setState(0xb26a, 0x5a64, 0xf020, 0xa41, 0x3d44, 0x8a67, 0x1, 0x0);
        gbc.writeMem(0xb26a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0xb26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26a));
        EXPECT(0x39, gbc.readMem(0xb26b));
        // CB 39 0348
        gbc.setState(0x834f, 0xf09a, 0xb830, 0x1648, 0xefe9, 0xcc1e, 0x1, 0x0);
        gbc.writeMem(0x834f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf09a, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834f));
        EXPECT(0x39, gbc.readMem(0x8350));
        // CB 39 0349
        gbc.setState(0xd912, 0xf8b9, 0x57f0, 0x1d70, 0x194c, 0x512, 0x1, 0x0);
        gbc.writeMem(0xd912, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd912));
        EXPECT(0x39, gbc.readMem(0xd913));
        // CB 39 034A
        gbc.setState(0xdcad, 0xe00a, 0xd00, 0x7a9b, 0xabe0, 0x685b, 0x0, 0x1);
        gbc.writeMem(0xdcad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcad));
        EXPECT(0x39, gbc.readMem(0xdcae));
        // CB 39 034B
        gbc.setState(0xe7c5, 0xf590, 0x8810, 0xc6a5, 0xe715, 0x303b, 0x1, 0x1);
        gbc.writeMem(0xe7c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0xe7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c5));
        EXPECT(0x39, gbc.readMem(0xe7c6));
        // CB 39 034C
        gbc.setState(0x869d, 0xa84b, 0xcbd0, 0x4307, 0xd7fc, 0xa797, 0x0, 0x1);
        gbc.writeMem(0x869d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa84b, gbc.sp());
        EXPECT(0x869f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869d));
        EXPECT(0x39, gbc.readMem(0x869e));
        // CB 39 034D
        gbc.setState(0x6618, 0xd6d1, 0xb5e0, 0x3999, 0xea10, 0xe9c0, 0x1, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 034E
        gbc.setState(0x3c2c, 0x7a47, 0x1f70, 0x9a4e, 0xa9b5, 0x3e5b, 0x0, 0x1);
        gbc.writeMem(0x3c2c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x3c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 034F
        gbc.setState(0x2d34, 0x8612, 0xaaa0, 0xf45c, 0x8245, 0xf74b, 0x0, 0x1);
        gbc.writeMem(0x2d34, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8612, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0350
        gbc.setState(0xa729, 0x63f8, 0xe4a0, 0x40f6, 0x99db, 0xef34, 0x1, 0x1);
        gbc.writeMem(0xa729, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x63f8, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa729));
        EXPECT(0x39, gbc.readMem(0xa72a));
        // CB 39 0351
        gbc.setState(0x3bfc, 0xf6c3, 0x700, 0xf527, 0x74ad, 0xce6a, 0x0, 0x1);
        gbc.writeMem(0x3bfc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0x3bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0352
        gbc.setState(0xd3fc, 0x8537, 0xf6a0, 0x69e0, 0x2b95, 0x1f27, 0x1, 0x1);
        gbc.writeMem(0xd3fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fc));
        EXPECT(0x39, gbc.readMem(0xd3fd));
        // CB 39 0353
        gbc.setState(0xc7b8, 0xc49, 0x5b20, 0x42d8, 0xf855, 0x64f2, 0x0, 0x0);
        gbc.writeMem(0xc7b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc49, gbc.sp());
        EXPECT(0xc7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b8));
        EXPECT(0x39, gbc.readMem(0xc7b9));
        // CB 39 0354
        gbc.setState(0x243, 0x3131, 0x880, 0x2368, 0x3d9e, 0x7a51, 0x1, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0355
        gbc.setState(0x5616, 0x1652, 0xd7d0, 0xcd67, 0x1e41, 0xe8b3, 0x1, 0x1);
        gbc.writeMem(0x5616, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0x5618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0356
        gbc.setState(0xb8ad, 0x8ee7, 0xdfb0, 0xe7a0, 0x477a, 0x3bc4, 0x1, 0x0);
        gbc.writeMem(0xb8ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0xb8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ad));
        EXPECT(0x39, gbc.readMem(0xb8ae));
        // CB 39 0357
        gbc.setState(0xbdc5, 0xace7, 0x6ab0, 0x4395, 0xee5, 0x6724, 0x1, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xace7, gbc.sp());
        EXPECT(0xbdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc5));
        EXPECT(0x39, gbc.readMem(0xbdc6));
        // CB 39 0358
        gbc.setState(0xbdd3, 0x2396, 0x2970, 0x2085, 0x1664, 0x3b9d, 0x0, 0x0);
        gbc.writeMem(0xbdd3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0xbdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd3));
        EXPECT(0x39, gbc.readMem(0xbdd4));
        // CB 39 0359
        gbc.setState(0x79a0, 0xcdc5, 0xc020, 0x13ce, 0xb4ee, 0x163c, 0x1, 0x1);
        gbc.writeMem(0x79a0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcdc5, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 035A
        gbc.setState(0x1fc7, 0x8ce5, 0xd9e0, 0xa7e7, 0xe192, 0x72b9, 0x0, 0x0);
        gbc.writeMem(0x1fc7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8ce5, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 035B
        gbc.setState(0x2209, 0x58bc, 0xbcf0, 0xe289, 0x559d, 0xd6eb, 0x1, 0x0);
        gbc.writeMem(0x2209, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x58bc, gbc.sp());
        EXPECT(0x220b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 035C
        gbc.setState(0xbc2c, 0xd90c, 0x1b0, 0x8b5a, 0xde7a, 0x86a7, 0x0, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0xbc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2c));
        EXPECT(0x39, gbc.readMem(0xbc2d));
        // CB 39 035D
        gbc.setState(0xe0b1, 0x5892, 0x76e0, 0xb617, 0xdf87, 0xa2a5, 0x0, 0x0);
        gbc.writeMem(0xe0b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5892, gbc.sp());
        EXPECT(0xe0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b1));
        EXPECT(0x39, gbc.readMem(0xe0b2));
        // CB 39 035E
        gbc.setState(0xc460, 0xe9f4, 0xcf30, 0x5013, 0x1db5, 0x1ced, 0x0, 0x0);
        gbc.writeMem(0xc460, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0xc462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc460));
        EXPECT(0x39, gbc.readMem(0xc461));
        // CB 39 035F
        gbc.setState(0x7269, 0xa13b, 0x5800, 0x3da4, 0xbdd0, 0xeb37, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0x726b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0360
        gbc.setState(0xd227, 0x738e, 0x4ae0, 0xe495, 0x25f1, 0xbe97, 0x1, 0x0);
        gbc.writeMem(0xd227, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x738e, gbc.sp());
        EXPECT(0xd229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd227));
        EXPECT(0x39, gbc.readMem(0xd228));
        // CB 39 0361
        gbc.setState(0x41f6, 0x1387, 0x4e50, 0x73f7, 0x30fd, 0x3787, 0x0, 0x1);
        gbc.writeMem(0x41f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1387, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0362
        gbc.setState(0x68db, 0x132e, 0xa440, 0x3896, 0xb7b7, 0x30a3, 0x1, 0x1);
        gbc.writeMem(0x68db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x132e, gbc.sp());
        EXPECT(0x68dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0363
        gbc.setState(0xd290, 0x3739, 0x7bf0, 0xaa2c, 0xc1f0, 0x3115, 0x0, 0x0);
        gbc.writeMem(0xd290, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd290));
        EXPECT(0x39, gbc.readMem(0xd291));
        // CB 39 0364
        gbc.setState(0xb23d, 0x2b9, 0xc770, 0x9db6, 0xa521, 0xe130, 0x1, 0x1);
        gbc.writeMem(0xb23d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0xb23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23d));
        EXPECT(0x39, gbc.readMem(0xb23e));
        // CB 39 0365
        gbc.setState(0x2459, 0x82d3, 0x9610, 0x8561, 0xa7e0, 0x4617, 0x1, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x245b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0366
        gbc.setState(0x2452, 0xe1a4, 0x8cf0, 0xcf7, 0x72bc, 0xc733, 0x0, 0x1);
        gbc.writeMem(0x2452, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe1a4, gbc.sp());
        EXPECT(0x2454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0368
        gbc.setState(0xc1b1, 0x752d, 0x6170, 0xc78e, 0xa011, 0x49ec, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b1));
        EXPECT(0x39, gbc.readMem(0xc1b2));
        // CB 39 0369
        gbc.setState(0x1fc5, 0x209a, 0xf0d0, 0x52a2, 0x517, 0xb1ca, 0x0, 0x0);
        gbc.writeMem(0x1fc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x209a, gbc.sp());
        EXPECT(0x1fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 036A
        gbc.setState(0xd0e2, 0x6b52, 0xc90, 0x61f8, 0x6816, 0xc20, 0x1, 0x0);
        gbc.writeMem(0xd0e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6b52, gbc.sp());
        EXPECT(0xd0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e2));
        EXPECT(0x39, gbc.readMem(0xd0e3));
        // CB 39 036C
        gbc.setState(0x9fe1, 0xbb53, 0x7850, 0x2a10, 0xa187, 0xc81e, 0x0, 0x0);
        gbc.writeMem(0x9fe1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe1));
        EXPECT(0x39, gbc.readMem(0x9fe2));
        // CB 39 036D
        gbc.setState(0x755d, 0xf4da, 0x3f10, 0xf17, 0x3349, 0x64da, 0x1, 0x0);
        gbc.writeMem(0x755d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0x755f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 036E
        gbc.setState(0x276e, 0xd74d, 0x4a50, 0x1a8, 0xf105, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0x276e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0x2770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 036F
        gbc.setState(0x35ce, 0x2544, 0x5e30, 0x2531, 0x6ec5, 0xa32f, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0370
        gbc.setState(0x8b51, 0xf0d8, 0xfad0, 0x997c, 0x36f3, 0x97b2, 0x0, 0x1);
        gbc.writeMem(0x8b51, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0x8b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b51));
        EXPECT(0x39, gbc.readMem(0x8b52));
        // CB 39 0371
        gbc.setState(0xe8c5, 0x6067, 0x8f60, 0x86dc, 0x8dc1, 0xa789, 0x0, 0x0);
        gbc.writeMem(0xe8c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6067, gbc.sp());
        EXPECT(0xe8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c5));
        EXPECT(0x39, gbc.readMem(0xe8c6));
        // CB 39 0372
        gbc.setState(0x7f3, 0xc42f, 0x39f0, 0x2c2f, 0x16a2, 0x1e5a, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc42f, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0373
        gbc.setState(0xe0db, 0x4e27, 0x4150, 0xca8b, 0x9e32, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xe0db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e27, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0db));
        EXPECT(0x39, gbc.readMem(0xe0dc));
        // CB 39 0374
        gbc.setState(0x7b1e, 0xd06d, 0x1040, 0xdf85, 0xef86, 0x7107, 0x0, 0x1);
        gbc.writeMem(0x7b1e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd06d, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0375
        gbc.setState(0x4015, 0xe3b2, 0x1b40, 0x6798, 0x598, 0xa2a0, 0x0, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0376
        gbc.setState(0x21de, 0xd081, 0x2bf0, 0xccb9, 0x855f, 0x355e, 0x1, 0x1);
        gbc.writeMem(0x21de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd081, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0377
        gbc.setState(0x9247, 0xaa21, 0x420, 0x32f4, 0x7cb4, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0x9247, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaa21, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9247));
        EXPECT(0x39, gbc.readMem(0x9248));
        // CB 39 0378
        gbc.setState(0x40a1, 0xb3f2, 0xe450, 0x7cb4, 0x554f, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0x40a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb3f2, gbc.sp());
        EXPECT(0x40a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0379
        gbc.setState(0x2ccc, 0x3a70, 0xc770, 0x4cc2, 0xfe95, 0x300d, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a70, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 037A
        gbc.setState(0x9250, 0x2a64, 0x5750, 0xbfd0, 0xb057, 0x7b71, 0x0, 0x1);
        gbc.writeMem(0x9250, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0x9252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9250));
        EXPECT(0x39, gbc.readMem(0x9251));
        // CB 39 037B
        gbc.setState(0xfb0, 0xe12, 0x7ba0, 0x8234, 0x59dd, 0x9f02, 0x1, 0x0);
        gbc.writeMem(0xfb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0xfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 037C
        gbc.setState(0xeedd, 0x32c, 0x7b10, 0x369c, 0x8455, 0x42f7, 0x0, 0x1);
        gbc.writeMem(0xeedd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0xeedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedd));
        EXPECT(0x39, gbc.readMem(0xeede));
        // CB 39 037D
        gbc.setState(0x6423, 0x356f, 0xc8d0, 0xcde2, 0x92bd, 0x1a73, 0x0, 0x0);
        gbc.writeMem(0x6423, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 037E
        gbc.setState(0xc639, 0x93d2, 0x89a0, 0x4fbd, 0xd6c4, 0xec7e, 0x0, 0x1);
        gbc.writeMem(0xc639, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x93d2, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc639));
        EXPECT(0x39, gbc.readMem(0xc63a));
        // CB 39 0380
        gbc.setState(0x7a86, 0x3836, 0x5bd0, 0x3c6c, 0x2408, 0xa958, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0381
        gbc.setState(0x4fc3, 0xbaa7, 0x3c60, 0xa32, 0x267, 0x47ec, 0x1, 0x1);
        gbc.writeMem(0x4fc3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0x4fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0382
        gbc.setState(0xed8c, 0x5a35, 0xfb0, 0xdf94, 0x40f5, 0xa489, 0x0, 0x1);
        gbc.writeMem(0xed8c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0xed8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8c));
        EXPECT(0x39, gbc.readMem(0xed8d));
        // CB 39 0383
        gbc.setState(0x29ed, 0x34c9, 0x20c0, 0x7358, 0x8218, 0xfb20, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x34c9, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0384
        gbc.setState(0x7562, 0x5f1c, 0xfd60, 0x1633, 0x3769, 0xd81e, 0x1, 0x1);
        gbc.writeMem(0x7562, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5f1c, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0385
        gbc.setState(0xae8, 0x86be, 0x82f0, 0x5da, 0xbb51, 0x6bda, 0x1, 0x0);
        gbc.writeMem(0xae8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x86be, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0386
        gbc.setState(0x1569, 0x3a94, 0x61f0, 0xd720, 0xd765, 0x11a0, 0x1, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3a94, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0387
        gbc.setState(0xb497, 0xb45b, 0xab20, 0xd449, 0xb114, 0x1e0, 0x1, 0x1);
        gbc.writeMem(0xb497, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0x39, gbc.readMem(0xb498));
        // CB 39 0388
        gbc.setState(0xb89e, 0xea16, 0xbf50, 0xa925, 0x7d6d, 0x213c, 0x1, 0x1);
        gbc.writeMem(0xb89e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xea16, gbc.sp());
        EXPECT(0xb8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89e));
        EXPECT(0x39, gbc.readMem(0xb89f));
        // CB 39 038A
        gbc.setState(0x57e2, 0xe0e3, 0x3b30, 0x2912, 0x8a61, 0xb31e, 0x0, 0x0);
        gbc.writeMem(0x57e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe0e3, gbc.sp());
        EXPECT(0x57e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 038B
        gbc.setState(0x3113, 0xcdef, 0x5d0, 0x6044, 0xc1d5, 0x6c8d, 0x0, 0x0);
        gbc.writeMem(0x3113, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 038C
        gbc.setState(0xabb9, 0x5da3, 0xc200, 0xefe1, 0xefd0, 0x4c2d, 0x0, 0x0);
        gbc.writeMem(0xabb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5da3, gbc.sp());
        EXPECT(0xabbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb9));
        EXPECT(0x39, gbc.readMem(0xabba));
        // CB 39 038D
        gbc.setState(0x1768, 0x1b, 0xd0f0, 0xdbdc, 0x5979, 0xb8b5, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 038E
        gbc.setState(0x67d6, 0x4ff3, 0x7a20, 0xbf37, 0x89bc, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0x67d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 038F
        gbc.setState(0x75b5, 0xdbb0, 0xe470, 0xb192, 0xfbcb, 0x47b, 0x1, 0x0);
        gbc.writeMem(0x75b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdbb0, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 0390
        gbc.setState(0xb234, 0x187e, 0x17f0, 0xa18c, 0xce00, 0xfb6b, 0x0, 0x0);
        gbc.writeMem(0xb234, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x187e, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb234));
        EXPECT(0x39, gbc.readMem(0xb235));
        // CB 39 0391
        gbc.setState(0x82c6, 0x6, 0xf150, 0x54e0, 0x2adb, 0xff68, 0x0, 0x0);
        gbc.writeMem(0x82c6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6, gbc.sp());
        EXPECT(0x82c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c6));
        EXPECT(0x39, gbc.readMem(0x82c7));
        // CB 39 0392
        gbc.setState(0xc158, 0xc2bf, 0xf060, 0x28a0, 0x9057, 0x3d86, 0x0, 0x0);
        gbc.writeMem(0xc158, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc2bf, gbc.sp());
        EXPECT(0xc15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc158));
        EXPECT(0x39, gbc.readMem(0xc159));
        // CB 39 0393
        gbc.setState(0x90bf, 0x3a2c, 0x6890, 0x7e4a, 0x18a8, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x90bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3a2c, gbc.sp());
        EXPECT(0x90c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bf));
        EXPECT(0x39, gbc.readMem(0x90c0));
        // CB 39 0395
        gbc.setState(0x89b5, 0xa43e, 0x9840, 0x8fda, 0x465, 0x5d92, 0x1, 0x1);
        gbc.writeMem(0x89b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa43e, gbc.sp());
        EXPECT(0x89b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b5));
        EXPECT(0x39, gbc.readMem(0x89b6));
        // CB 39 0396
        gbc.setState(0xb001, 0x9c04, 0x42e0, 0xfa07, 0xc75b, 0xf3ff, 0x0, 0x0);
        gbc.writeMem(0xb001, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9c04, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb001));
        EXPECT(0x39, gbc.readMem(0xb002));
        // CB 39 0397
        gbc.setState(0x2496, 0xc4ab, 0x3b60, 0x715b, 0x7a97, 0x97da, 0x0, 0x1);
        gbc.writeMem(0x2496, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc4ab, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0398
        gbc.setState(0x4988, 0x7dce, 0xc790, 0x3311, 0x67ce, 0x7671, 0x1, 0x0);
        gbc.writeMem(0x4988, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7dce, gbc.sp());
        EXPECT(0x498a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 0399
        gbc.setState(0x6cf5, 0xe3d4, 0xe450, 0x773e, 0x42a0, 0x7381, 0x1, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe3d4, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 039A
        gbc.setState(0x4c9f, 0x4e2d, 0x88e0, 0xbe1e, 0x4bb0, 0xf2a0, 0x1, 0x0);
        gbc.writeMem(0x4c9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x4ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 039B
        gbc.setState(0x64a, 0x6485, 0xb990, 0x5316, 0x21d2, 0x4a54, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 039C
        gbc.setState(0x873e, 0xf689, 0x7630, 0xd060, 0xc754, 0x42f9, 0x1, 0x1);
        gbc.writeMem(0x873e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf689, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873e));
        EXPECT(0x39, gbc.readMem(0x873f));
        // CB 39 039D
        gbc.setState(0x6cef, 0x6c54, 0xc8c0, 0x9808, 0xfa6f, 0x5687, 0x0, 0x1);
        gbc.writeMem(0x6cef, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6c54, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 039E
        gbc.setState(0xa2d3, 0x3ec4, 0x4a60, 0xaa9b, 0xb756, 0x86ff, 0x1, 0x0);
        gbc.writeMem(0xa2d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3ec4, gbc.sp());
        EXPECT(0xa2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d3));
        EXPECT(0x39, gbc.readMem(0xa2d4));
        // CB 39 039F
        gbc.setState(0x2242, 0x95cb, 0x6e90, 0xe92b, 0x819f, 0xabda, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0x2244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03A0
        gbc.setState(0xe27f, 0xc751, 0x7640, 0x2099, 0x5fe4, 0xf4a7, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0xe281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27f));
        EXPECT(0x39, gbc.readMem(0xe280));
        // CB 39 03A1
        gbc.setState(0xec79, 0x7540, 0xf230, 0xd2ef, 0xe48c, 0x5454, 0x0, 0x0);
        gbc.writeMem(0xec79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec79));
        EXPECT(0x39, gbc.readMem(0xec7a));
        // CB 39 03A2
        gbc.setState(0x2d76, 0x8056, 0x4320, 0xabb4, 0xb48b, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x2d76, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8056, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03A3
        gbc.setState(0xc773, 0xdbf9, 0xc0b0, 0xda59, 0xaa5f, 0x61b9, 0x1, 0x0);
        gbc.writeMem(0xc773, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc773));
        EXPECT(0x39, gbc.readMem(0xc774));
        // CB 39 03A4
        gbc.setState(0xa629, 0x1b47, 0xc400, 0x427e, 0xa3b3, 0xf69b, 0x1, 0x1);
        gbc.writeMem(0xa629, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1b47, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa629));
        EXPECT(0x39, gbc.readMem(0xa62a));
        // CB 39 03A5
        gbc.setState(0x47ca, 0x5348, 0xd840, 0x60f6, 0xe857, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0x47ca, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5348, gbc.sp());
        EXPECT(0x47cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03A6
        gbc.setState(0x31df, 0xd602, 0xe00, 0x9fb4, 0x803a, 0x6b09, 0x1, 0x0);
        gbc.writeMem(0x31df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x31e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03A7
        gbc.setState(0x65c0, 0xe30, 0x2ce0, 0x819b, 0xd24a, 0xddd7, 0x0, 0x0);
        gbc.writeMem(0x65c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe30, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03A8
        gbc.setState(0x15d0, 0x2214, 0x5130, 0x2eca, 0x625b, 0x32a5, 0x0, 0x1);
        gbc.writeMem(0x15d0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x15d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03A9
        gbc.setState(0x9e82, 0xb721, 0x9e0, 0x43e8, 0xc8ee, 0x2c71, 0x1, 0x0);
        gbc.writeMem(0x9e82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x9e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e82));
        EXPECT(0x39, gbc.readMem(0x9e83));
        // CB 39 03AA
        gbc.setState(0x7eed, 0x3f2b, 0x7140, 0x9d12, 0x2073, 0xd1c7, 0x0, 0x0);
        gbc.writeMem(0x7eed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3f2b, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03AB
        gbc.setState(0x4921, 0x1d13, 0xfec0, 0xe157, 0x3acf, 0xd2f1, 0x0, 0x1);
        gbc.writeMem(0x4921, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x4923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03AC
        gbc.setState(0x3855, 0xf8b2, 0xf770, 0xb9ec, 0x90f3, 0xafe9, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf8b2, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03AF
        gbc.setState(0xc26e, 0x6e80, 0xfc20, 0x970e, 0x33b5, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0xc26e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0xc270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26e));
        EXPECT(0x39, gbc.readMem(0xc26f));
        // CB 39 03B0
        gbc.setState(0xaed, 0x6809, 0x2400, 0xbb63, 0x637b, 0xf81a, 0x1, 0x1);
        gbc.writeMem(0xaed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03B1
        gbc.setState(0xb551, 0x3960, 0x6f50, 0xfdbe, 0x52c, 0x4f56, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3960, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb551));
        EXPECT(0x39, gbc.readMem(0xb552));
        // CB 39 03B2
        gbc.setState(0x1111, 0x731b, 0x90e0, 0xe2f3, 0xcd4e, 0x885d, 0x0, 0x1);
        gbc.writeMem(0x1111, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x731b, gbc.sp());
        EXPECT(0x1113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03B3
        gbc.setState(0x3007, 0x50f2, 0x6240, 0x6585, 0xa8e3, 0xc465, 0x1, 0x1);
        gbc.writeMem(0x3007, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0x3009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03B4
        gbc.setState(0x2943, 0x22f1, 0x1410, 0xb829, 0xe55, 0x1728, 0x0, 0x0);
        gbc.writeMem(0x2943, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x22f1, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03B5
        gbc.setState(0xd134, 0x2db5, 0x4800, 0x430d, 0xbc8b, 0xe8c6, 0x1, 0x0);
        gbc.writeMem(0xd134, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2db5, gbc.sp());
        EXPECT(0xd136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd134));
        EXPECT(0x39, gbc.readMem(0xd135));
        // CB 39 03B6
        gbc.setState(0xb8c0, 0xab44, 0xeb30, 0xdc3c, 0x9f76, 0x7927, 0x0, 0x1);
        gbc.writeMem(0xb8c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0xb8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c0));
        EXPECT(0x39, gbc.readMem(0xb8c1));
        // CB 39 03B7
        gbc.setState(0x9f07, 0xa70f, 0x7750, 0xc26, 0xc727, 0xfdae, 0x0, 0x0);
        gbc.writeMem(0x9f07, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f07));
        EXPECT(0x39, gbc.readMem(0x9f08));
        // CB 39 03B8
        gbc.setState(0xcaf5, 0x7da0, 0x3f60, 0x6271, 0x176b, 0x8234, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7da0, gbc.sp());
        EXPECT(0xcaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf5));
        EXPECT(0x39, gbc.readMem(0xcaf6));
        // CB 39 03B9
        gbc.setState(0x2cee, 0x2d3, 0x2ab0, 0xbfb, 0xa7d0, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x2cee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d3, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03BA
        gbc.setState(0xe144, 0x5066, 0x8030, 0x229, 0x70fb, 0xb4ac, 0x1, 0x1);
        gbc.writeMem(0xe144, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5066, gbc.sp());
        EXPECT(0xe146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe144));
        EXPECT(0x39, gbc.readMem(0xe145));
        // CB 39 03BC
        gbc.setState(0x9eec, 0xa2b4, 0xee50, 0x69cc, 0x7677, 0x6b0c, 0x1, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa2b4, gbc.sp());
        EXPECT(0x9eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eec));
        EXPECT(0x39, gbc.readMem(0x9eed));
        // CB 39 03BD
        gbc.setState(0x9f4, 0x7f00, 0x3860, 0x4652, 0xcfdf, 0xfd9f, 0x1, 0x1);
        gbc.writeMem(0x9f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03BE
        gbc.setState(0x9f7d, 0xefc2, 0x5e20, 0xbb8c, 0xa71c, 0x6366, 0x1, 0x1);
        gbc.writeMem(0x9f7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7d));
        EXPECT(0x39, gbc.readMem(0x9f7e));
        // CB 39 03BF
        gbc.setState(0xb2ec, 0xc40d, 0x8840, 0x155a, 0x78f6, 0x8fae, 0x0, 0x1);
        gbc.writeMem(0xb2ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc40d, gbc.sp());
        EXPECT(0xb2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ec));
        EXPECT(0x39, gbc.readMem(0xb2ed));
        // CB 39 03C0
        gbc.setState(0x25ab, 0xa91b, 0xd860, 0xabb1, 0x5442, 0xab83, 0x0, 0x1);
        gbc.writeMem(0x25ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03C1
        gbc.setState(0x8783, 0xdc13, 0x160, 0xf8de, 0xf528, 0x6fd6, 0x0, 0x0);
        gbc.writeMem(0x8783, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdc13, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8783));
        EXPECT(0x39, gbc.readMem(0x8784));
        // CB 39 03C2
        gbc.setState(0x57fd, 0x3815, 0xb730, 0x3d98, 0x2342, 0xff20, 0x1, 0x0);
        gbc.writeMem(0x57fd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3815, gbc.sp());
        EXPECT(0x57ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03C3
        gbc.setState(0x93a2, 0xd433, 0x4a80, 0x2037, 0x7ac4, 0x47d6, 0x0, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd433, gbc.sp());
        EXPECT(0x93a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a2));
        EXPECT(0x39, gbc.readMem(0x93a3));
        // CB 39 03C4
        gbc.setState(0x38b3, 0xc2aa, 0xd010, 0x4001, 0xb5b7, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0x38b3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc2aa, gbc.sp());
        EXPECT(0x38b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03C5
        gbc.setState(0xe1d7, 0xc17a, 0x8a30, 0x2c88, 0xa4ea, 0x7247, 0x0, 0x0);
        gbc.writeMem(0xe1d7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d7));
        EXPECT(0x39, gbc.readMem(0xe1d8));
        // CB 39 03C6
        gbc.setState(0x4b53, 0x1d90, 0x5440, 0x5328, 0x8bdc, 0x30ed, 0x1, 0x1);
        gbc.writeMem(0x4b53, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1d90, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03C7
        gbc.setState(0xd490, 0xd4e0, 0xffd0, 0xba3f, 0xc0, 0x4ee, 0x0, 0x1);
        gbc.writeMem(0xd490, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd4e0, gbc.sp());
        EXPECT(0xd492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd490));
        EXPECT(0x39, gbc.readMem(0xd491));
        // CB 39 03C9
        gbc.setState(0x118f, 0x2842, 0x2dc0, 0x3008, 0xcb85, 0x3c60, 0x0, 0x1);
        gbc.writeMem(0x118f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2842, gbc.sp());
        EXPECT(0x1191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03CA
        gbc.setState(0xb677, 0x67b6, 0x5900, 0x78, 0x7e15, 0xce0, 0x1, 0x1);
        gbc.writeMem(0xb677, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb677));
        EXPECT(0x39, gbc.readMem(0xb678));
        // CB 39 03CB
        gbc.setState(0x8ac2, 0x3d14, 0xa4f0, 0x6db5, 0x5969, 0xb186, 0x0, 0x0);
        gbc.writeMem(0x8ac2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3d14, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac2));
        EXPECT(0x39, gbc.readMem(0x8ac3));
        // CB 39 03CD
        gbc.setState(0x8bd, 0x9f73, 0x69d0, 0x587c, 0xa0ea, 0x70db, 0x1, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9f73, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03CE
        gbc.setState(0x183e, 0xf0, 0x86d0, 0x22ba, 0x8112, 0xabfe, 0x0, 0x0);
        gbc.writeMem(0x183e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03CF
        gbc.setState(0x5713, 0xcdf4, 0xec40, 0x801f, 0xaca8, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x5713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcdf4, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03D0
        gbc.setState(0x8fa3, 0x91b, 0xa6e0, 0xfd6b, 0x672, 0x5389, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x91b, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa3));
        EXPECT(0x39, gbc.readMem(0x8fa4));
        // CB 39 03D1
        gbc.setState(0x8e94, 0xda90, 0x25b0, 0xf9cf, 0x2412, 0x97c5, 0x1, 0x1);
        gbc.writeMem(0x8e94, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0x8e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e94));
        EXPECT(0x39, gbc.readMem(0x8e95));
        // CB 39 03D2
        gbc.setState(0x57fa, 0x3534, 0x40, 0x3959, 0xff9e, 0x94fc, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3534, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03D3
        gbc.setState(0x6466, 0xcc05, 0x8cd0, 0x58e5, 0xb400, 0xd9b2, 0x1, 0x0);
        gbc.writeMem(0x6466, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcc05, gbc.sp());
        EXPECT(0x6468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03D4
        gbc.setState(0x48d5, 0x599b, 0xa50, 0x352a, 0x6490, 0x8a53, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0x48d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03D5
        gbc.setState(0x569, 0xde0b, 0x4380, 0x96de, 0x46e2, 0xbe2d, 0x1, 0x1);
        gbc.writeMem(0x569, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xde0b, gbc.sp());
        EXPECT(0x56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03D6
        gbc.setState(0xdbf0, 0x72cb, 0x1e60, 0x8e8f, 0xa346, 0x111f, 0x0, 0x0);
        gbc.writeMem(0xdbf0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0xdbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf0));
        EXPECT(0x39, gbc.readMem(0xdbf1));
        // CB 39 03D7
        gbc.setState(0xc0fa, 0x8ffa, 0x42c0, 0xcc1c, 0xc99f, 0x8253, 0x1, 0x1);
        gbc.writeMem(0xc0fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8ffa, gbc.sp());
        EXPECT(0xc0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fa));
        EXPECT(0x39, gbc.readMem(0xc0fb));
        // CB 39 03D8
        gbc.setState(0xa610, 0x9590, 0xd250, 0x3d14, 0xbe80, 0x44ed, 0x1, 0x0);
        gbc.writeMem(0xa610, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa610));
        EXPECT(0x39, gbc.readMem(0xa611));
        // CB 39 03D9
        gbc.setState(0x86ed, 0x84ba, 0x7a00, 0x29ac, 0xb97f, 0x47d0, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0x86ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ed));
        EXPECT(0x39, gbc.readMem(0x86ee));
        // CB 39 03DA
        gbc.setState(0x2368, 0xc5e6, 0xb350, 0x17ac, 0x7598, 0x955b, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03DB
        gbc.setState(0xc713, 0xc6c4, 0x7500, 0x87c4, 0x105b, 0x8c71, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc713));
        EXPECT(0x39, gbc.readMem(0xc714));
        // CB 39 03DC
        gbc.setState(0x10b9, 0x5e96, 0x3020, 0xc8bc, 0x5d20, 0x2dc8, 0x0, 0x1);
        gbc.writeMem(0x10b9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5e96, gbc.sp());
        EXPECT(0x10bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03DD
        gbc.setState(0x54b, 0xd54c, 0xe4c0, 0xa9dc, 0x152e, 0x2a6e, 0x0, 0x1);
        gbc.writeMem(0x54b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd54c, gbc.sp());
        EXPECT(0x54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03DE
        gbc.setState(0x7e9, 0x7f6c, 0x38a0, 0x3a5d, 0xf3a8, 0x766e, 0x0, 0x0);
        gbc.writeMem(0x7e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03DF
        gbc.setState(0x2eac, 0xcb65, 0x6bf0, 0x204e, 0xa7c4, 0x3930, 0x0, 0x1);
        gbc.writeMem(0x2eac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcb65, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03E0
        gbc.setState(0x26e8, 0x5c76, 0x3270, 0x25f2, 0xb886, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03E1
        gbc.setState(0x2eb9, 0xb99c, 0xae70, 0x6f70, 0x5bbe, 0x3dc4, 0x1, 0x1);
        gbc.writeMem(0x2eb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0x2ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03E2
        gbc.setState(0x509b, 0x7e4b, 0x6b10, 0x493a, 0x160f, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x509b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0x509d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03E3
        gbc.setState(0xf82, 0x350c, 0xcf90, 0x9aba, 0x376a, 0x3cf0, 0x0, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 39 03E4
        gbc.setState(0x4b30, 0x6959, 0xf30, 0x3775, 0xcfcc, 0x519a, 0x1, 0x1);
        gbc.writeMem(0x4b30, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0x4b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 39 03E5
        gbc.setState(0x85d3, 0xc51b, 0x9df0, 0x3162, 0x9c57, 0xe507, 0x0, 0x0);
        gbc.writeMem(0x85d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0x85d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d3));
        EXPECT(0x39, gbc.readMem(0x85d4));
        // CB 39 03E6
        gbc.setState(0x93a7, 0x6f8e, 0x7580, 0x133e, 0xa7ad, 0x1a1b, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6f8e, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a7));
        EXPECT(0x39, gbc.readMem(0x93a8));
        // CB 39 03E7
        gbc.setState(0x5d9c, 0x1450, 0x9250, 0x6055, 0x3341, 0xc3d6, 0x1, 0x0);
        gbc.writeMem(0x5d9c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
