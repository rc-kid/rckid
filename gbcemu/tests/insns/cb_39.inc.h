    TEST(gbcemu, opcode_cb_39) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 39 0000
        gbc.setState(0x2ae6, 0x2298, 0x1b50, 0xe26e, 0x6bb4, 0x14da, 0x1, 0x0);
        gbc.writeMem(0x2ae6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2298);
        EXPECT(gbc.pc(), 0x2ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0001
        gbc.setState(0x6c00, 0xc452, 0x9440, 0x7cd0, 0xfae0, 0xf5ef, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc452);
        EXPECT(gbc.pc(), 0x6c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0002
        gbc.setState(0xe127, 0x59d6, 0xeef0, 0x2bbe, 0xe094, 0x2898, 0x1, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x59d6);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe127), 0xcb);
        EXPECT(gbc.readMem(0xe128), 0x39);
        // CB 39 0003
        gbc.setState(0x6b2f, 0x3922, 0x8240, 0x13f, 0xc196, 0x903d, 0x0, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3922);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0005
        gbc.setState(0x2044, 0xc754, 0x8ff0, 0xbd24, 0xf872, 0xcdd2, 0x1, 0x0);
        gbc.writeMem(0x2044, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc754);
        EXPECT(gbc.pc(), 0x2046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0006
        gbc.setState(0xedd2, 0xa585, 0x3bc0, 0x53a4, 0x2da2, 0xe3b, 0x1, 0x1);
        gbc.writeMem(0xedd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa585);
        EXPECT(gbc.pc(), 0xedd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd2), 0xcb);
        EXPECT(gbc.readMem(0xedd3), 0x39);
        // CB 39 0007
        gbc.setState(0x8222, 0xe82d, 0x3d80, 0x22a8, 0x4057, 0xef65, 0x1, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe82d);
        EXPECT(gbc.pc(), 0x8224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8222), 0xcb);
        EXPECT(gbc.readMem(0x8223), 0x39);
        // CB 39 0008
        gbc.setState(0xd8bd, 0x7554, 0xc580, 0x70eb, 0x595f, 0x2df5, 0x0, 0x1);
        gbc.writeMem(0xd8bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7554);
        EXPECT(gbc.pc(), 0xd8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bd), 0xcb);
        EXPECT(gbc.readMem(0xd8be), 0x39);
        // CB 39 0009
        gbc.setState(0x94b2, 0x8058, 0xf70, 0xcf80, 0x254, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x94b2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8058);
        EXPECT(gbc.pc(), 0x94b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b2), 0xcb);
        EXPECT(gbc.readMem(0x94b3), 0x39);
        // CB 39 000A
        gbc.setState(0x222d, 0x1513, 0xaa90, 0x5070, 0x1672, 0x454, 0x1, 0x1);
        gbc.writeMem(0x222d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1513);
        EXPECT(gbc.pc(), 0x222f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 000B
        gbc.setState(0x7d7f, 0x5b0e, 0x8880, 0xbbee, 0xd001, 0x6669, 0x0, 0x0);
        gbc.writeMem(0x7d7f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5b0e);
        EXPECT(gbc.pc(), 0x7d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 000C
        gbc.setState(0x514b, 0x814b, 0xe9f0, 0x379c, 0xc0a3, 0xb978, 0x1, 0x0);
        gbc.writeMem(0x514b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x814b);
        EXPECT(gbc.pc(), 0x514d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 000D
        gbc.setState(0x2787, 0xcecb, 0x7570, 0x7b5c, 0x90a0, 0x4a28, 0x0, 0x0);
        gbc.writeMem(0x2787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcecb);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 000E
        gbc.setState(0x8720, 0xa70a, 0x8370, 0xf983, 0x10ba, 0x1231, 0x0, 0x1);
        gbc.writeMem(0x8720, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa70a);
        EXPECT(gbc.pc(), 0x8722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8720), 0xcb);
        EXPECT(gbc.readMem(0x8721), 0x39);
        // CB 39 000F
        gbc.setState(0x22c5, 0x801f, 0xada0, 0x9ec5, 0x5c34, 0x7ef8, 0x0, 0x0);
        gbc.writeMem(0x22c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x801f);
        EXPECT(gbc.pc(), 0x22c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0010
        gbc.setState(0xdf8c, 0x9f78, 0xa1f0, 0x5914, 0x5127, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0xdf8c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9f78);
        EXPECT(gbc.pc(), 0xdf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8c), 0xcb);
        EXPECT(gbc.readMem(0xdf8d), 0x39);
        // CB 39 0011
        gbc.setState(0xd44b, 0x6d79, 0x2fc0, 0xeb06, 0x27c1, 0xafc7, 0x0, 0x1);
        gbc.writeMem(0xd44b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6d79);
        EXPECT(gbc.pc(), 0xd44d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd44b), 0xcb);
        EXPECT(gbc.readMem(0xd44c), 0x39);
        // CB 39 0012
        gbc.setState(0x93bf, 0x95f, 0x99f0, 0xf482, 0x8435, 0x705, 0x1, 0x0);
        gbc.writeMem(0x93bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x95f);
        EXPECT(gbc.pc(), 0x93c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bf), 0xcb);
        EXPECT(gbc.readMem(0x93c0), 0x39);
        // CB 39 0013
        gbc.setState(0x8638, 0x118f, 0x4860, 0xe061, 0xa8f2, 0x5e1b, 0x0, 0x0);
        gbc.writeMem(0x8638, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x118f);
        EXPECT(gbc.pc(), 0x863a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8638), 0xcb);
        EXPECT(gbc.readMem(0x8639), 0x39);
        // CB 39 0014
        gbc.setState(0x4400, 0xd76b, 0x7310, 0x6bf9, 0xc44e, 0xb073, 0x0, 0x0);
        gbc.writeMem(0x4400, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd76b);
        EXPECT(gbc.pc(), 0x4402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0015
        gbc.setState(0x6be3, 0xbe3a, 0x2d10, 0x5391, 0x6f26, 0x3ed2, 0x1, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbe3a);
        EXPECT(gbc.pc(), 0x6be5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0016
        gbc.setState(0x7375, 0xac5e, 0xc420, 0x2e41, 0x8150, 0xfadc, 0x0, 0x1);
        gbc.writeMem(0x7375, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xac5e);
        EXPECT(gbc.pc(), 0x7377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0017
        gbc.setState(0x784b, 0x6bea, 0xe6b0, 0xc2be, 0x9e21, 0x7fab, 0x0, 0x1);
        gbc.writeMem(0x784b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6bea);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0018
        gbc.setState(0x813c, 0xfae8, 0x4a60, 0xabf9, 0x8eac, 0xf267, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfae8);
        EXPECT(gbc.pc(), 0x813e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813c), 0xcb);
        EXPECT(gbc.readMem(0x813d), 0x39);
        // CB 39 0019
        gbc.setState(0xda7a, 0x4023, 0x34b0, 0x9f1a, 0x6ed, 0xe128, 0x0, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4023);
        EXPECT(gbc.pc(), 0xda7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7a), 0xcb);
        EXPECT(gbc.readMem(0xda7b), 0x39);
        // CB 39 001A
        gbc.setState(0xd6d2, 0x658, 0x6f20, 0x9923, 0xbae2, 0xa985, 0x1, 0x1);
        gbc.writeMem(0xd6d2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x658);
        EXPECT(gbc.pc(), 0xd6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d2), 0xcb);
        EXPECT(gbc.readMem(0xd6d3), 0x39);
        // CB 39 001B
        gbc.setState(0xc9eb, 0xf74e, 0x2790, 0xcf26, 0xd511, 0x67e0, 0x1, 0x0);
        gbc.writeMem(0xc9eb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf74e);
        EXPECT(gbc.pc(), 0xc9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9eb), 0xcb);
        EXPECT(gbc.readMem(0xc9ec), 0x39);
        // CB 39 001C
        gbc.setState(0xaaa9, 0x5f61, 0x3d0, 0x5988, 0xc4e1, 0xf8d9, 0x1, 0x0);
        gbc.writeMem(0xaaa9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5f61);
        EXPECT(gbc.pc(), 0xaaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa9), 0xcb);
        EXPECT(gbc.readMem(0xaaaa), 0x39);
        // CB 39 001D
        gbc.setState(0x78c, 0xd974, 0xc980, 0x5c10, 0x4438, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0x78c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd974);
        EXPECT(gbc.pc(), 0x78e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 001E
        gbc.setState(0x9c89, 0x9f55, 0x5d50, 0xfd79, 0xbb77, 0x42f5, 0x0, 0x0);
        gbc.writeMem(0x9c89, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9f55);
        EXPECT(gbc.pc(), 0x9c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c89), 0xcb);
        EXPECT(gbc.readMem(0x9c8a), 0x39);
        // CB 39 001F
        gbc.setState(0x7e55, 0x854f, 0x5790, 0x89da, 0x85ff, 0x26b8, 0x0, 0x0);
        gbc.writeMem(0x7e55, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x854f);
        EXPECT(gbc.pc(), 0x7e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0020
        gbc.setState(0xc592, 0xe0ea, 0x5c70, 0x3d3a, 0xa867, 0x8787, 0x1, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe0ea);
        EXPECT(gbc.pc(), 0xc594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc592), 0xcb);
        EXPECT(gbc.readMem(0xc593), 0x39);
        // CB 39 0021
        gbc.setState(0xa84, 0xa4a7, 0xca50, 0xa636, 0x5c75, 0x9dab, 0x0, 0x1);
        gbc.writeMem(0xa84, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa4a7);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0022
        gbc.setState(0x1c50, 0xf197, 0x40d0, 0x235, 0xb3d0, 0x8ef, 0x1, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf197);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0024
        gbc.setState(0xd27f, 0xfba8, 0xdb20, 0xc915, 0xbe4e, 0x3438, 0x1, 0x0);
        gbc.writeMem(0xd27f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfba8);
        EXPECT(gbc.pc(), 0xd281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27f), 0xcb);
        EXPECT(gbc.readMem(0xd280), 0x39);
        // CB 39 0025
        gbc.setState(0x6869, 0xdb32, 0xac50, 0x4a06, 0x8aeb, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdb32);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0026
        gbc.setState(0x5117, 0x7dfc, 0x36c0, 0xed23, 0x7548, 0x76c9, 0x1, 0x0);
        gbc.writeMem(0x5117, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7dfc);
        EXPECT(gbc.pc(), 0x5119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0027
        gbc.setState(0x9e0, 0x178e, 0xea60, 0x535b, 0xef80, 0xab26, 0x0, 0x1);
        gbc.writeMem(0x9e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x178e);
        EXPECT(gbc.pc(), 0x9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0028
        gbc.setState(0x6056, 0xebfe, 0xe80, 0xbd1e, 0xbfb2, 0x8a18, 0x1, 0x1);
        gbc.writeMem(0x6056, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xebfe);
        EXPECT(gbc.pc(), 0x6058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0029
        gbc.setState(0xa7b7, 0x7af8, 0x8bc0, 0x53, 0xda85, 0xd104, 0x1, 0x1);
        gbc.writeMem(0xa7b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7af8);
        EXPECT(gbc.pc(), 0xa7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b7), 0xcb);
        EXPECT(gbc.readMem(0xa7b8), 0x39);
        // CB 39 002B
        gbc.setState(0x3257, 0xd4b9, 0xe750, 0xeb3c, 0x20fc, 0x7ed5, 0x1, 0x0);
        gbc.writeMem(0x3257, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd4b9);
        EXPECT(gbc.pc(), 0x3259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 002C
        gbc.setState(0x70bd, 0x82d3, 0xf690, 0x6fbf, 0x5678, 0xfa7a, 0x1, 0x0);
        gbc.writeMem(0x70bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0x70bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 002D
        gbc.setState(0x21e5, 0xa1ee, 0x81b0, 0x5483, 0x15e7, 0x94f1, 0x0, 0x1);
        gbc.writeMem(0x21e5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa1ee);
        EXPECT(gbc.pc(), 0x21e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 002E
        gbc.setState(0x75ad, 0xc727, 0xa2b0, 0xaf66, 0xf46c, 0x3488, 0x1, 0x0);
        gbc.writeMem(0x75ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc727);
        EXPECT(gbc.pc(), 0x75af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 002F
        gbc.setState(0x2b22, 0x1881, 0xef20, 0x1d89, 0x8907, 0x8b9c, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1881);
        EXPECT(gbc.pc(), 0x2b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0030
        gbc.setState(0x4ff7, 0x9ad7, 0xf560, 0xba98, 0x61fc, 0x2cb, 0x1, 0x0);
        gbc.writeMem(0x4ff7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9ad7);
        EXPECT(gbc.pc(), 0x4ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0031
        gbc.setState(0x52b7, 0xaa78, 0x2640, 0x8205, 0x3750, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x52b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaa78);
        EXPECT(gbc.pc(), 0x52b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0032
        gbc.setState(0x82b, 0x1e61, 0x3350, 0xab37, 0x46aa, 0x9de7, 0x1, 0x0);
        gbc.writeMem(0x82b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1e61);
        EXPECT(gbc.pc(), 0x82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0033
        gbc.setState(0xc79, 0x9239, 0x370, 0x8a32, 0x989c, 0x5b82, 0x0, 0x0);
        gbc.writeMem(0xc79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9239);
        EXPECT(gbc.pc(), 0xc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0035
        gbc.setState(0x415a, 0x6e75, 0xd2e0, 0x270b, 0x793b, 0x35da, 0x1, 0x0);
        gbc.writeMem(0x415a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6e75);
        EXPECT(gbc.pc(), 0x415c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0036
        gbc.setState(0x65e0, 0xd2b1, 0x410, 0xf64a, 0xbf7b, 0xaecc, 0x0, 0x0);
        gbc.writeMem(0x65e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd2b1);
        EXPECT(gbc.pc(), 0x65e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0037
        gbc.setState(0x6bc, 0x30c4, 0xd940, 0x1375, 0xf066, 0xe6ce, 0x0, 0x0);
        gbc.writeMem(0x6bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x30c4);
        EXPECT(gbc.pc(), 0x6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0038
        gbc.setState(0x9d1, 0xa079, 0xe320, 0x696b, 0x62bc, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0x9d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa079);
        EXPECT(gbc.pc(), 0x9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0039
        gbc.setState(0x5f25, 0xfe1a, 0x97d0, 0x6e2e, 0xdfed, 0x9417, 0x1, 0x1);
        gbc.writeMem(0x5f25, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfe1a);
        EXPECT(gbc.pc(), 0x5f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 003B
        gbc.setState(0x7de9, 0xe1e8, 0x1ac0, 0x3bad, 0x14cd, 0xe9, 0x0, 0x1);
        gbc.writeMem(0x7de9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe1e8);
        EXPECT(gbc.pc(), 0x7deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 003C
        gbc.setState(0x91b4, 0xb4f3, 0xbe40, 0xe7b4, 0xb332, 0x31d1, 0x1, 0x0);
        gbc.writeMem(0x91b4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb4f3);
        EXPECT(gbc.pc(), 0x91b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b4), 0xcb);
        EXPECT(gbc.readMem(0x91b5), 0x39);
        // CB 39 003D
        gbc.setState(0x675a, 0x4e77, 0x1570, 0x4399, 0x831e, 0xd4d9, 0x1, 0x1);
        gbc.writeMem(0x675a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4e77);
        EXPECT(gbc.pc(), 0x675c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 003E
        gbc.setState(0x5d5, 0xfa23, 0x9390, 0x117d, 0x488c, 0x1a61, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xfa23);
        EXPECT(gbc.pc(), 0x5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 003F
        gbc.setState(0x2d2, 0xf480, 0xe3a0, 0x2659, 0xa9d9, 0x4353, 0x1, 0x0);
        gbc.writeMem(0x2d2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0x2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0040
        gbc.setState(0x3850, 0x72d8, 0x2ae0, 0x906f, 0xf8dd, 0x148b, 0x1, 0x1);
        gbc.writeMem(0x3850, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x72d8);
        EXPECT(gbc.pc(), 0x3852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0041
        gbc.setState(0x33d3, 0x701b, 0x3a20, 0x8d1d, 0x8470, 0x8a20, 0x1, 0x1);
        gbc.writeMem(0x33d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x701b);
        EXPECT(gbc.pc(), 0x33d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0042
        gbc.setState(0xe374, 0x80e4, 0x7b40, 0x5146, 0x8cb, 0xe553, 0x0, 0x0);
        gbc.writeMem(0xe374, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe374), 0xcb);
        EXPECT(gbc.readMem(0xe375), 0x39);
        // CB 39 0043
        gbc.setState(0x298a, 0x6d21, 0xde00, 0x42ad, 0x117d, 0x4ce7, 0x0, 0x0);
        gbc.writeMem(0x298a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6d21);
        EXPECT(gbc.pc(), 0x298c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0044
        gbc.setState(0x21da, 0xb3cc, 0xa770, 0x7e9c, 0xdc8, 0x41db, 0x0, 0x1);
        gbc.writeMem(0x21da, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb3cc);
        EXPECT(gbc.pc(), 0x21dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0045
        gbc.setState(0x9613, 0x4950, 0x14c0, 0xc8cd, 0x74fe, 0x6aa7, 0x0, 0x0);
        gbc.writeMem(0x9613, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4950);
        EXPECT(gbc.pc(), 0x9615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9613), 0xcb);
        EXPECT(gbc.readMem(0x9614), 0x39);
        // CB 39 0046
        gbc.setState(0x8f0a, 0x7e3b, 0x1310, 0xf161, 0x6645, 0x8773, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7e3b);
        EXPECT(gbc.pc(), 0x8f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0a), 0xcb);
        EXPECT(gbc.readMem(0x8f0b), 0x39);
        // CB 39 0047
        gbc.setState(0x45a5, 0x45fb, 0xca80, 0x7016, 0xdd19, 0x5d2, 0x0, 0x1);
        gbc.writeMem(0x45a5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0048
        gbc.setState(0x129, 0xfce6, 0x5b80, 0xd952, 0x3814, 0xa9cc, 0x0, 0x1);
        gbc.writeMem(0x129, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfce6);
        EXPECT(gbc.pc(), 0x12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0049
        gbc.setState(0x474e, 0x87b1, 0x9e60, 0x98e, 0xce3f, 0x9cdc, 0x1, 0x1);
        gbc.writeMem(0x474e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0x4750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 004A
        gbc.setState(0x2143, 0x251a, 0xc6f0, 0xab3, 0xbd1a, 0x4213, 0x0, 0x0);
        gbc.writeMem(0x2143, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x251a);
        EXPECT(gbc.pc(), 0x2145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 004B
        gbc.setState(0x4eb0, 0xb25b, 0x9070, 0xede, 0x7e28, 0xc70b, 0x1, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb25b);
        EXPECT(gbc.pc(), 0x4eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 004C
        gbc.setState(0x699b, 0x14d, 0x9bb0, 0x2d8, 0xabf3, 0xc7d6, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x14d);
        EXPECT(gbc.pc(), 0x699d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 004D
        gbc.setState(0x36a1, 0x1f60, 0x16c0, 0x57b, 0x8b3b, 0x80c0, 0x0, 0x0);
        gbc.writeMem(0x36a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1f60);
        EXPECT(gbc.pc(), 0x36a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 004E
        gbc.setState(0x86de, 0x2a5a, 0x8ff0, 0x88ca, 0x46f2, 0x74d4, 0x1, 0x1);
        gbc.writeMem(0x86de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2a5a);
        EXPECT(gbc.pc(), 0x86e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86de), 0xcb);
        EXPECT(gbc.readMem(0x86df), 0x39);
        // CB 39 004F
        gbc.setState(0x5df5, 0x617, 0x39a0, 0x463, 0x6ad0, 0xe5b2, 0x0, 0x0);
        gbc.writeMem(0x5df5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x617);
        EXPECT(gbc.pc(), 0x5df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0050
        gbc.setState(0xacf8, 0x2465, 0x5b60, 0x881e, 0x84c4, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0xacf8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2465);
        EXPECT(gbc.pc(), 0xacfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf8), 0xcb);
        EXPECT(gbc.readMem(0xacf9), 0x39);
        // CB 39 0051
        gbc.setState(0x3e47, 0xdf31, 0xbab0, 0xcc5e, 0xd168, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0x3e47, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdf31);
        EXPECT(gbc.pc(), 0x3e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0052
        gbc.setState(0x8454, 0x7a07, 0xe620, 0xaa4e, 0x94e3, 0xf161, 0x0, 0x1);
        gbc.writeMem(0x8454, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7a07);
        EXPECT(gbc.pc(), 0x8456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8454), 0xcb);
        EXPECT(gbc.readMem(0x8455), 0x39);
        // CB 39 0053
        gbc.setState(0x3dd9, 0x36c7, 0xd130, 0xdda9, 0x2e5b, 0xe564, 0x0, 0x0);
        gbc.writeMem(0x3dd9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x36c7);
        EXPECT(gbc.pc(), 0x3ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0054
        gbc.setState(0xb60a, 0xd50f, 0x1520, 0xec6d, 0x7777, 0xa08e, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd50f);
        EXPECT(gbc.pc(), 0xb60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        EXPECT(gbc.readMem(0xb60b), 0x39);
        // CB 39 0055
        gbc.setState(0x2397, 0x286b, 0xba70, 0xe2fe, 0x29dd, 0xe840, 0x0, 0x0);
        gbc.writeMem(0x2397, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x286b);
        EXPECT(gbc.pc(), 0x2399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0056
        gbc.setState(0x3a79, 0x9c35, 0xc470, 0x9c63, 0x587d, 0x824a, 0x1, 0x1);
        gbc.writeMem(0x3a79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9c35);
        EXPECT(gbc.pc(), 0x3a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0057
        gbc.setState(0xe64d, 0x8b2f, 0xe7f0, 0x3dca, 0x6e1e, 0xd5ef, 0x0, 0x1);
        gbc.writeMem(0xe64d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8b2f);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64d), 0xcb);
        EXPECT(gbc.readMem(0xe64e), 0x39);
        // CB 39 0058
        gbc.setState(0x4caa, 0xdf61, 0x7960, 0x99ca, 0xb905, 0x9b8d, 0x1, 0x0);
        gbc.writeMem(0x4caa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdf61);
        EXPECT(gbc.pc(), 0x4cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0059
        gbc.setState(0x8a9c, 0x4e8d, 0x6400, 0x6940, 0xf512, 0xdbc4, 0x1, 0x1);
        gbc.writeMem(0x8a9c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4e8d);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9c), 0xcb);
        EXPECT(gbc.readMem(0x8a9d), 0x39);
        // CB 39 005A
        gbc.setState(0xaa32, 0xcc87, 0x5320, 0xa2ea, 0xb74, 0x2e25, 0x1, 0x1);
        gbc.writeMem(0xaa32, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcc87);
        EXPECT(gbc.pc(), 0xaa34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa32), 0xcb);
        EXPECT(gbc.readMem(0xaa33), 0x39);
        // CB 39 005B
        gbc.setState(0xe658, 0xcbca, 0x6980, 0xcf6a, 0x5431, 0xc7ac, 0x1, 0x0);
        gbc.writeMem(0xe658, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcbca);
        EXPECT(gbc.pc(), 0xe65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe658), 0xcb);
        EXPECT(gbc.readMem(0xe659), 0x39);
        // CB 39 005C
        gbc.setState(0x428d, 0x5b58, 0xe890, 0x29d3, 0x2bef, 0xe9f9, 0x1, 0x0);
        gbc.writeMem(0x428d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5b58);
        EXPECT(gbc.pc(), 0x428f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 005D
        gbc.setState(0xc554, 0x26a8, 0xc6d0, 0xe1ab, 0xe382, 0x900c, 0x1, 0x1);
        gbc.writeMem(0xc554, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x26a8);
        EXPECT(gbc.pc(), 0xc556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc554), 0xcb);
        EXPECT(gbc.readMem(0xc555), 0x39);
        // CB 39 005E
        gbc.setState(0xb31e, 0xab25, 0xe870, 0x7655, 0x7f1a, 0x266f, 0x1, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xab25);
        EXPECT(gbc.pc(), 0xb320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31e), 0xcb);
        EXPECT(gbc.readMem(0xb31f), 0x39);
        // CB 39 005F
        gbc.setState(0xc8, 0xbad2, 0x8dc0, 0x304f, 0x6aec, 0xbe2b, 0x0, 0x1);
        gbc.writeMem(0xc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0xca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0060
        gbc.setState(0x55d8, 0xcf91, 0x95d0, 0x87a3, 0xae5, 0x7759, 0x0, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcf91);
        EXPECT(gbc.pc(), 0x55da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0061
        gbc.setState(0xd1d9, 0xa8f4, 0x4d20, 0x4e61, 0xc25a, 0xfec0, 0x0, 0x1);
        gbc.writeMem(0xd1d9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa8f4);
        EXPECT(gbc.pc(), 0xd1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d9), 0xcb);
        EXPECT(gbc.readMem(0xd1da), 0x39);
        // CB 39 0062
        gbc.setState(0xdced, 0xee9, 0xdaa0, 0x2f11, 0xac31, 0xa80, 0x0, 0x0);
        gbc.writeMem(0xdced, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xee9);
        EXPECT(gbc.pc(), 0xdcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdced), 0xcb);
        EXPECT(gbc.readMem(0xdcee), 0x39);
        // CB 39 0063
        gbc.setState(0x4fc4, 0xbba, 0xc9a0, 0x3dd2, 0x67a4, 0xf4b7, 0x1, 0x1);
        gbc.writeMem(0x4fc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbba);
        EXPECT(gbc.pc(), 0x4fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0064
        gbc.setState(0x6451, 0xa6c2, 0x8600, 0x50dd, 0xb5cd, 0x1bd, 0x1, 0x0);
        gbc.writeMem(0x6451, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa6c2);
        EXPECT(gbc.pc(), 0x6453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0066
        gbc.setState(0x8666, 0x62c7, 0xcd90, 0x67ec, 0xe9ae, 0x50d5, 0x1, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x62c7);
        EXPECT(gbc.pc(), 0x8668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8666), 0xcb);
        EXPECT(gbc.readMem(0x8667), 0x39);
        // CB 39 0067
        gbc.setState(0x6993, 0x294b, 0xc890, 0x3e75, 0xea47, 0x427b, 0x0, 0x1);
        gbc.writeMem(0x6993, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x294b);
        EXPECT(gbc.pc(), 0x6995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0068
        gbc.setState(0xda2d, 0x5cd5, 0xedb0, 0xfae9, 0x2175, 0xac59, 0x1, 0x1);
        gbc.writeMem(0xda2d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5cd5);
        EXPECT(gbc.pc(), 0xda2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2d), 0xcb);
        EXPECT(gbc.readMem(0xda2e), 0x39);
        // CB 39 0069
        gbc.setState(0x9920, 0x4c88, 0xe160, 0xfd84, 0x57b5, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0x9920, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4c88);
        EXPECT(gbc.pc(), 0x9922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9920), 0xcb);
        EXPECT(gbc.readMem(0x9921), 0x39);
        // CB 39 006A
        gbc.setState(0x5ad5, 0x420, 0xbe90, 0x7dc4, 0x2fa5, 0xce73, 0x0, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x420);
        EXPECT(gbc.pc(), 0x5ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 006B
        gbc.setState(0xb8a, 0x8105, 0x2180, 0x37d9, 0xcf47, 0xa98c, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8105);
        EXPECT(gbc.pc(), 0xb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 006C
        gbc.setState(0x722e, 0x15c5, 0xf50, 0x8a77, 0xa8a8, 0x15a4, 0x1, 0x1);
        gbc.writeMem(0x722e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x15c5);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 006D
        gbc.setState(0x3e18, 0x4ef1, 0xa790, 0x83ac, 0x78a0, 0x4aa6, 0x1, 0x1);
        gbc.writeMem(0x3e18, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4ef1);
        EXPECT(gbc.pc(), 0x3e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 006E
        gbc.setState(0x8a5b, 0xda1e, 0x5430, 0xcb9e, 0xe56d, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0x8a5b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xda1e);
        EXPECT(gbc.pc(), 0x8a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5b), 0xcb);
        EXPECT(gbc.readMem(0x8a5c), 0x39);
        // CB 39 006F
        gbc.setState(0x1d36, 0x2d2, 0x44b0, 0x3a52, 0xa4e2, 0x9afc, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2d2);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0070
        gbc.setState(0xc661, 0xb820, 0x72a0, 0x7d7e, 0xe4d6, 0x1b7e, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb820);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc661), 0xcb);
        EXPECT(gbc.readMem(0xc662), 0x39);
        // CB 39 0071
        gbc.setState(0x14ab, 0x528b, 0x32e0, 0xfba0, 0xf706, 0x2ef, 0x1, 0x1);
        gbc.writeMem(0x14ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x528b);
        EXPECT(gbc.pc(), 0x14ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0072
        gbc.setState(0xad4a, 0x746f, 0xd410, 0xe60b, 0x8898, 0x5800, 0x0, 0x0);
        gbc.writeMem(0xad4a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x746f);
        EXPECT(gbc.pc(), 0xad4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4a), 0xcb);
        EXPECT(gbc.readMem(0xad4b), 0x39);
        // CB 39 0073
        gbc.setState(0x9713, 0x8274, 0x8640, 0x6475, 0xb8ce, 0x4f9a, 0x1, 0x0);
        gbc.writeMem(0x9713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8274);
        EXPECT(gbc.pc(), 0x9715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9713), 0xcb);
        EXPECT(gbc.readMem(0x9714), 0x39);
        // CB 39 0074
        gbc.setState(0x8e9, 0xd0ef, 0xa480, 0x4ca9, 0x963f, 0xb792, 0x0, 0x1);
        gbc.writeMem(0x8e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd0ef);
        EXPECT(gbc.pc(), 0x8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0075
        gbc.setState(0x2e97, 0xdf6b, 0xa4b0, 0xe742, 0x2b95, 0x8979, 0x0, 0x0);
        gbc.writeMem(0x2e97, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdf6b);
        EXPECT(gbc.pc(), 0x2e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0076
        gbc.setState(0x29c5, 0x4d5, 0xbd60, 0xd118, 0xa317, 0xdd53, 0x1, 0x0);
        gbc.writeMem(0x29c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4d5);
        EXPECT(gbc.pc(), 0x29c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0077
        gbc.setState(0xdfc5, 0x2852, 0xc570, 0xcb7a, 0x53f, 0xc15b, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2852);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0x39);
        // CB 39 0078
        gbc.setState(0x229, 0x2697, 0xbd80, 0x9c63, 0xa97d, 0xf36, 0x1, 0x0);
        gbc.writeMem(0x229, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2697);
        EXPECT(gbc.pc(), 0x22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0079
        gbc.setState(0xbed0, 0x69d, 0x1700, 0x9b2d, 0xccbb, 0x2e31, 0x0, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x69d);
        EXPECT(gbc.pc(), 0xbed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed0), 0xcb);
        EXPECT(gbc.readMem(0xbed1), 0x39);
        // CB 39 007A
        gbc.setState(0xd6c1, 0x2bff, 0xf310, 0xb948, 0x42c1, 0xa579, 0x0, 0x1);
        gbc.writeMem(0xd6c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0xd6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c1), 0xcb);
        EXPECT(gbc.readMem(0xd6c2), 0x39);
        // CB 39 007B
        gbc.setState(0x68c1, 0x6e16, 0x310, 0xbec, 0xc939, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x68c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6e16);
        EXPECT(gbc.pc(), 0x68c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 007C
        gbc.setState(0x169b, 0x401f, 0x4ea0, 0xd4cf, 0xd5c4, 0x4c1e, 0x1, 0x1);
        gbc.writeMem(0x169b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x401f);
        EXPECT(gbc.pc(), 0x169d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 007D
        gbc.setState(0xbe73, 0xf1d2, 0x56c0, 0xfb12, 0xb282, 0x534c, 0x1, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf1d2);
        EXPECT(gbc.pc(), 0xbe75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe73), 0xcb);
        EXPECT(gbc.readMem(0xbe74), 0x39);
        // CB 39 007E
        gbc.setState(0x28af, 0x6a4, 0x8780, 0xecc7, 0x49d3, 0xa19f, 0x1, 0x0);
        gbc.writeMem(0x28af, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6a4);
        EXPECT(gbc.pc(), 0x28b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 007F
        gbc.setState(0x30ec, 0x4e5, 0xd3a0, 0xf385, 0x671c, 0x636e, 0x0, 0x1);
        gbc.writeMem(0x30ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4e5);
        EXPECT(gbc.pc(), 0x30ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0080
        gbc.setState(0x695d, 0x8d3c, 0xe30, 0x1555, 0xd293, 0x2a0a, 0x0, 0x1);
        gbc.writeMem(0x695d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0081
        gbc.setState(0x5746, 0xe9e7, 0xcd10, 0x3ad4, 0xf329, 0x6738, 0x0, 0x0);
        gbc.writeMem(0x5746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe9e7);
        EXPECT(gbc.pc(), 0x5748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0082
        gbc.setState(0x6d7d, 0xbbc6, 0x5f90, 0x2e24, 0x6859, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0x6d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0083
        gbc.setState(0x34f6, 0x237c, 0x9860, 0x51da, 0x4bbe, 0xf2c0, 0x1, 0x0);
        gbc.writeMem(0x34f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x237c);
        EXPECT(gbc.pc(), 0x34f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0084
        gbc.setState(0x68a1, 0x874c, 0x1ff0, 0x4dd6, 0x3930, 0xc43d, 0x1, 0x1);
        gbc.writeMem(0x68a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x874c);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0085
        gbc.setState(0x305, 0xe248, 0x9460, 0x7810, 0x5d91, 0xbcc, 0x1, 0x1);
        gbc.writeMem(0x305, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe248);
        EXPECT(gbc.pc(), 0x307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0086
        gbc.setState(0x726b, 0x93d1, 0x4ff0, 0xb985, 0xf89c, 0x3482, 0x0, 0x1);
        gbc.writeMem(0x726b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x93d1);
        EXPECT(gbc.pc(), 0x726d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0087
        gbc.setState(0x2e4d, 0x49f1, 0x4670, 0xda94, 0xbcc5, 0x9a15, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x49f1);
        EXPECT(gbc.pc(), 0x2e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0088
        gbc.setState(0xcf31, 0xb912, 0x5890, 0x136, 0x3e82, 0xd595, 0x1, 0x1);
        gbc.writeMem(0xcf31, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb912);
        EXPECT(gbc.pc(), 0xcf33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf31), 0xcb);
        EXPECT(gbc.readMem(0xcf32), 0x39);
        // CB 39 0089
        gbc.setState(0x27c1, 0x410e, 0x7100, 0x8c5c, 0x2fe3, 0x55f0, 0x0, 0x0);
        gbc.writeMem(0x27c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x410e);
        EXPECT(gbc.pc(), 0x27c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 008A
        gbc.setState(0x22ff, 0x6f6c, 0xe620, 0xe984, 0x3416, 0x75a2, 0x0, 0x0);
        gbc.writeMem(0x22ff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6f6c);
        EXPECT(gbc.pc(), 0x2301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 008B
        gbc.setState(0x68f3, 0xfeef, 0xa9f0, 0xeaa7, 0x6cc3, 0x684e, 0x1, 0x1);
        gbc.writeMem(0x68f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfeef);
        EXPECT(gbc.pc(), 0x68f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 008C
        gbc.setState(0x2e92, 0xaf7b, 0x5f70, 0xbc88, 0x29d, 0x806c, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaf7b);
        EXPECT(gbc.pc(), 0x2e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 008D
        gbc.setState(0x7204, 0x5104, 0xda80, 0x174f, 0x95eb, 0x2922, 0x1, 0x0);
        gbc.writeMem(0x7204, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x7206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 008E
        gbc.setState(0xc309, 0xc248, 0xbe90, 0xdd0d, 0xf4ff, 0xf9, 0x0, 0x0);
        gbc.writeMem(0xc309, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc248);
        EXPECT(gbc.pc(), 0xc30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc309), 0xcb);
        EXPECT(gbc.readMem(0xc30a), 0x39);
        // CB 39 008F
        gbc.setState(0x88bc, 0x1ef0, 0xdf00, 0x6f78, 0x1461, 0x6604, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1ef0);
        EXPECT(gbc.pc(), 0x88be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bc), 0xcb);
        EXPECT(gbc.readMem(0x88bd), 0x39);
        // CB 39 0090
        gbc.setState(0x4deb, 0xff60, 0x9560, 0x5ba9, 0x6d3c, 0xbe1b, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xff60);
        EXPECT(gbc.pc(), 0x4ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0091
        gbc.setState(0xd20c, 0xb6f8, 0x1450, 0x48ea, 0x8281, 0x2be6, 0x1, 0x0);
        gbc.writeMem(0xd20c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb6f8);
        EXPECT(gbc.pc(), 0xd20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20c), 0xcb);
        EXPECT(gbc.readMem(0xd20d), 0x39);
        // CB 39 0092
        gbc.setState(0x3629, 0x1eb0, 0xcdc0, 0x8632, 0x68ed, 0x5ab, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1eb0);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0093
        gbc.setState(0x64de, 0xcb04, 0x1830, 0x886a, 0x6480, 0xc0ca, 0x1, 0x0);
        gbc.writeMem(0x64de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcb04);
        EXPECT(gbc.pc(), 0x64e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0094
        gbc.setState(0x8c7, 0xf849, 0x7930, 0x708a, 0xe577, 0x6e48, 0x0, 0x1);
        gbc.writeMem(0x8c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf849);
        EXPECT(gbc.pc(), 0x8c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0095
        gbc.setState(0x890e, 0x5f9e, 0x6900, 0x6eab, 0xfc82, 0x279f, 0x0, 0x0);
        gbc.writeMem(0x890e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0x8910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890e), 0xcb);
        EXPECT(gbc.readMem(0x890f), 0x39);
        // CB 39 0096
        gbc.setState(0x1293, 0x1425, 0x3160, 0x62f9, 0x660b, 0x9452, 0x0, 0x0);
        gbc.writeMem(0x1293, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0x1295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0097
        gbc.setState(0xd24, 0xd4fb, 0x2d70, 0xb43b, 0xca34, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0xd24, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0xd26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0098
        gbc.setState(0xa72d, 0x566f, 0xa050, 0x8fd7, 0xd2cb, 0x41b, 0x1, 0x1);
        gbc.writeMem(0xa72d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x566f);
        EXPECT(gbc.pc(), 0xa72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72d), 0xcb);
        EXPECT(gbc.readMem(0xa72e), 0x39);
        // CB 39 0099
        gbc.setState(0x1356, 0xc01e, 0x91b0, 0x766f, 0xd942, 0xbb84, 0x1, 0x0);
        gbc.writeMem(0x1356, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc01e);
        EXPECT(gbc.pc(), 0x1358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 009A
        gbc.setState(0xabc8, 0x2a78, 0xbd10, 0x5c18, 0x3efd, 0xf5c1, 0x0, 0x0);
        gbc.writeMem(0xabc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2a78);
        EXPECT(gbc.pc(), 0xabca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc8), 0xcb);
        EXPECT(gbc.readMem(0xabc9), 0x39);
        // CB 39 009B
        gbc.setState(0x98b4, 0x646f, 0x53c0, 0x5281, 0x1ab6, 0x9d0f, 0x0, 0x0);
        gbc.writeMem(0x98b4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x646f);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b4), 0xcb);
        EXPECT(gbc.readMem(0x98b5), 0x39);
        // CB 39 009C
        gbc.setState(0x4438, 0x9280, 0x6840, 0x4e25, 0xd034, 0xcd9b, 0x1, 0x0);
        gbc.writeMem(0x4438, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9280);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 009D
        gbc.setState(0x2c62, 0xe902, 0xcac0, 0xd6ea, 0x9a1b, 0xf07e, 0x1, 0x0);
        gbc.writeMem(0x2c62, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0x2c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 009E
        gbc.setState(0x4e42, 0xa93, 0x3280, 0x4a1b, 0x7154, 0x456a, 0x1, 0x1);
        gbc.writeMem(0x4e42, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa93);
        EXPECT(gbc.pc(), 0x4e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 009F
        gbc.setState(0x9690, 0xdb52, 0x5230, 0x5617, 0x5727, 0x4ec, 0x1, 0x1);
        gbc.writeMem(0x9690, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdb52);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9690), 0xcb);
        EXPECT(gbc.readMem(0x9691), 0x39);
        // CB 39 00A0
        gbc.setState(0x9b09, 0x1994, 0x9f20, 0x7422, 0xd87, 0x988, 0x0, 0x0);
        gbc.writeMem(0x9b09, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1994);
        EXPECT(gbc.pc(), 0x9b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b09), 0xcb);
        EXPECT(gbc.readMem(0x9b0a), 0x39);
        // CB 39 00A1
        gbc.setState(0x3f4d, 0xcb5b, 0x1500, 0x4028, 0x7f86, 0xd158, 0x1, 0x0);
        gbc.writeMem(0x3f4d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcb5b);
        EXPECT(gbc.pc(), 0x3f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00A2
        gbc.setState(0x5684, 0x520, 0x4590, 0x9c81, 0x99ae, 0xcf94, 0x1, 0x0);
        gbc.writeMem(0x5684, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x520);
        EXPECT(gbc.pc(), 0x5686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00A3
        gbc.setState(0xc352, 0xa90c, 0x9f0, 0x9755, 0x1daa, 0xe13e, 0x0, 0x0);
        gbc.writeMem(0xc352, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa90c);
        EXPECT(gbc.pc(), 0xc354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc352), 0xcb);
        EXPECT(gbc.readMem(0xc353), 0x39);
        // CB 39 00A4
        gbc.setState(0xeaf, 0x94b1, 0x61f0, 0x181d, 0x8bab, 0x9d0, 0x0, 0x0);
        gbc.writeMem(0xeaf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x94b1);
        EXPECT(gbc.pc(), 0xeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00A5
        gbc.setState(0xe85e, 0x6930, 0xb710, 0x5bad, 0xa7c, 0x2882, 0x0, 0x1);
        gbc.writeMem(0xe85e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6930);
        EXPECT(gbc.pc(), 0xe860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85e), 0xcb);
        EXPECT(gbc.readMem(0xe85f), 0x39);
        // CB 39 00A6
        gbc.setState(0xf35, 0xb183, 0xa330, 0xfdcf, 0x32cc, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0xf35, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb183);
        EXPECT(gbc.pc(), 0xf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00A7
        gbc.setState(0x3e74, 0xdac1, 0xc600, 0xbc46, 0x6131, 0x1d6c, 0x0, 0x0);
        gbc.writeMem(0x3e74, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdac1);
        EXPECT(gbc.pc(), 0x3e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00A8
        gbc.setState(0x3beb, 0x8b77, 0x2e60, 0x258f, 0xddd8, 0x981b, 0x0, 0x1);
        gbc.writeMem(0x3beb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8b77);
        EXPECT(gbc.pc(), 0x3bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00A9
        gbc.setState(0x558f, 0x50f9, 0x33b0, 0x534b, 0xcc54, 0x47bd, 0x0, 0x1);
        gbc.writeMem(0x558f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x50f9);
        EXPECT(gbc.pc(), 0x5591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00AB
        gbc.setState(0x5c3, 0xab50, 0xfdc0, 0xaefd, 0x9fad, 0x2852, 0x0, 0x1);
        gbc.writeMem(0x5c3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xab50);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00AC
        gbc.setState(0xa325, 0xa006, 0x14c0, 0xd9f1, 0xb7f5, 0x2bb4, 0x1, 0x1);
        gbc.writeMem(0xa325, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa006);
        EXPECT(gbc.pc(), 0xa327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa325), 0xcb);
        EXPECT(gbc.readMem(0xa326), 0x39);
        // CB 39 00AE
        gbc.setState(0x9151, 0x2155, 0x7cf0, 0xbc3b, 0x2648, 0x42cd, 0x1, 0x0);
        gbc.writeMem(0x9151, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2155);
        EXPECT(gbc.pc(), 0x9153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9151), 0xcb);
        EXPECT(gbc.readMem(0x9152), 0x39);
        // CB 39 00AF
        gbc.setState(0x7774, 0x5bd1, 0xaff0, 0x8e88, 0x8502, 0x5e88, 0x0, 0x0);
        gbc.writeMem(0x7774, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5bd1);
        EXPECT(gbc.pc(), 0x7776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00B0
        gbc.setState(0xb8c7, 0x2baf, 0xc330, 0x3bf8, 0xf780, 0x7507, 0x1, 0x0);
        gbc.writeMem(0xb8c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2baf);
        EXPECT(gbc.pc(), 0xb8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c7), 0xcb);
        EXPECT(gbc.readMem(0xb8c8), 0x39);
        // CB 39 00B1
        gbc.setState(0xb252, 0xc698, 0x850, 0xa059, 0x5ae4, 0xd105, 0x0, 0x1);
        gbc.writeMem(0xb252, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc698);
        EXPECT(gbc.pc(), 0xb254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb252), 0xcb);
        EXPECT(gbc.readMem(0xb253), 0x39);
        // CB 39 00B2
        gbc.setState(0x612c, 0xae47, 0x5b60, 0x27c6, 0x1f4a, 0xd421, 0x0, 0x1);
        gbc.writeMem(0x612c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0x612e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00B3
        gbc.setState(0xb0a9, 0x51f9, 0x8be0, 0x93b3, 0x7828, 0xf93e, 0x0, 0x1);
        gbc.writeMem(0xb0a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x51f9);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a9), 0xcb);
        EXPECT(gbc.readMem(0xb0aa), 0x39);
        // CB 39 00B4
        gbc.setState(0x6800, 0x6469, 0x61c0, 0x252f, 0x884e, 0x71e, 0x1, 0x0);
        gbc.writeMem(0x6800, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6469);
        EXPECT(gbc.pc(), 0x6802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00B5
        gbc.setState(0xd94e, 0x14ae, 0xdf20, 0x6c30, 0x6752, 0x9f3f, 0x0, 0x0);
        gbc.writeMem(0xd94e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x14ae);
        EXPECT(gbc.pc(), 0xd950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94e), 0xcb);
        EXPECT(gbc.readMem(0xd94f), 0x39);
        // CB 39 00B6
        gbc.setState(0x24de, 0x48ec, 0x9310, 0xbe6f, 0x3cb6, 0x1cd9, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x48ec);
        EXPECT(gbc.pc(), 0x24e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00B7
        gbc.setState(0xd7a6, 0x22cd, 0xbda0, 0xd24, 0x2164, 0xfc34, 0x1, 0x0);
        gbc.writeMem(0xd7a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x22cd);
        EXPECT(gbc.pc(), 0xd7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a6), 0xcb);
        EXPECT(gbc.readMem(0xd7a7), 0x39);
        // CB 39 00B8
        gbc.setState(0x7a2d, 0x708a, 0x8270, 0x8f75, 0xef6f, 0xc8e3, 0x1, 0x1);
        gbc.writeMem(0x7a2d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x708a);
        EXPECT(gbc.pc(), 0x7a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00B9
        gbc.setState(0x29ec, 0xda14, 0xda70, 0xfe50, 0xfb97, 0x2474, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xda14);
        EXPECT(gbc.pc(), 0x29ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00BA
        gbc.setState(0xd2e0, 0x365b, 0x81d0, 0xd699, 0x5d02, 0x4ece, 0x1, 0x0);
        gbc.writeMem(0xd2e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x365b);
        EXPECT(gbc.pc(), 0xd2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e0), 0xcb);
        EXPECT(gbc.readMem(0xd2e1), 0x39);
        // CB 39 00BB
        gbc.setState(0x4be4, 0x8907, 0x3b20, 0x87f, 0x9956, 0x80ee, 0x1, 0x1);
        gbc.writeMem(0x4be4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8907);
        EXPECT(gbc.pc(), 0x4be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00BC
        gbc.setState(0xe06b, 0xaf90, 0xeae0, 0xc67e, 0x9231, 0x446d, 0x0, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xaf90);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06b), 0xcb);
        EXPECT(gbc.readMem(0xe06c), 0x39);
        // CB 39 00BD
        gbc.setState(0x6fb2, 0xf1d, 0xbc80, 0xb95, 0x9950, 0xbb38, 0x0, 0x0);
        gbc.writeMem(0x6fb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf1d);
        EXPECT(gbc.pc(), 0x6fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00BE
        gbc.setState(0xe017, 0x3b, 0x1130, 0x5bbb, 0xc636, 0xb4a0, 0x1, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3b);
        EXPECT(gbc.pc(), 0xe019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe017), 0xcb);
        EXPECT(gbc.readMem(0xe018), 0x39);
        // CB 39 00BF
        gbc.setState(0x2deb, 0x60ca, 0x9430, 0xcaf8, 0x6ddc, 0xedbd, 0x1, 0x0);
        gbc.writeMem(0x2deb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x60ca);
        EXPECT(gbc.pc(), 0x2ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00C0
        gbc.setState(0x6700, 0x88f2, 0x8740, 0x66a2, 0x1d7c, 0x3a36, 0x1, 0x1);
        gbc.writeMem(0x6700, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x88f2);
        EXPECT(gbc.pc(), 0x6702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00C1
        gbc.setState(0xa851, 0xb4cb, 0x5dc0, 0x70b2, 0xd5e8, 0x1057, 0x0, 0x1);
        gbc.writeMem(0xa851, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb4cb);
        EXPECT(gbc.pc(), 0xa853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa851), 0xcb);
        EXPECT(gbc.readMem(0xa852), 0x39);
        // CB 39 00C2
        gbc.setState(0x2e6b, 0xc43d, 0x21a0, 0x4b2c, 0xed17, 0xbb0b, 0x0, 0x1);
        gbc.writeMem(0x2e6b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc43d);
        EXPECT(gbc.pc(), 0x2e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00C3
        gbc.setState(0x30f, 0xde9b, 0x45e0, 0x8936, 0xb045, 0x9191, 0x0, 0x1);
        gbc.writeMem(0x30f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xde9b);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00C4
        gbc.setState(0xead1, 0xc1d5, 0xb9e0, 0xd036, 0x5cba, 0x67f8, 0x1, 0x1);
        gbc.writeMem(0xead1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc1d5);
        EXPECT(gbc.pc(), 0xead3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead1), 0xcb);
        EXPECT(gbc.readMem(0xead2), 0x39);
        // CB 39 00C5
        gbc.setState(0xe4c, 0x3cc6, 0x7620, 0x2ab2, 0xa131, 0x5cfe, 0x1, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3cc6);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00C6
        gbc.setState(0x7fd2, 0x63a9, 0x3cd0, 0x47fd, 0xc28d, 0xe4a5, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x63a9);
        EXPECT(gbc.pc(), 0x7fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00C7
        gbc.setState(0x63f6, 0xfd1f, 0xdd80, 0x3947, 0xfc9a, 0x4654, 0x1, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfd1f);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00C8
        gbc.setState(0x9084, 0xba19, 0xed0, 0x5f42, 0x2b27, 0x366c, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xba19);
        EXPECT(gbc.pc(), 0x9086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9084), 0xcb);
        EXPECT(gbc.readMem(0x9085), 0x39);
        // CB 39 00C9
        gbc.setState(0xb05f, 0x1ad8, 0xd480, 0xb0c8, 0x3b9, 0xd3ab, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ad8);
        EXPECT(gbc.pc(), 0xb061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05f), 0xcb);
        EXPECT(gbc.readMem(0xb060), 0x39);
        // CB 39 00CA
        gbc.setState(0x518b, 0x1aa1, 0xd440, 0x9c69, 0x1a8f, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0x518b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1aa1);
        EXPECT(gbc.pc(), 0x518d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00CB
        gbc.setState(0x628d, 0xd41e, 0x8a10, 0xb565, 0x523c, 0x701d, 0x1, 0x0);
        gbc.writeMem(0x628d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd41e);
        EXPECT(gbc.pc(), 0x628f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00CC
        gbc.setState(0x3c71, 0xb003, 0x3160, 0x6908, 0xf021, 0x5238, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb003);
        EXPECT(gbc.pc(), 0x3c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00CD
        gbc.setState(0x7ea3, 0xea7, 0x140, 0x4f7a, 0xf49, 0x2acc, 0x1, 0x1);
        gbc.writeMem(0x7ea3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xea7);
        EXPECT(gbc.pc(), 0x7ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00CE
        gbc.setState(0x85fe, 0xd171, 0x23f0, 0xb943, 0x8e62, 0x4a53, 0x1, 0x1);
        gbc.writeMem(0x85fe, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd171);
        EXPECT(gbc.pc(), 0x8600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fe), 0xcb);
        EXPECT(gbc.readMem(0x85ff), 0x39);
        // CB 39 00CF
        gbc.setState(0xa0a1, 0x9050, 0xbb00, 0x9edf, 0xe45c, 0x5311, 0x0, 0x0);
        gbc.writeMem(0xa0a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9050);
        EXPECT(gbc.pc(), 0xa0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a1), 0xcb);
        EXPECT(gbc.readMem(0xa0a2), 0x39);
        // CB 39 00D0
        gbc.setState(0x45bc, 0x648a, 0x4ef0, 0xa9a9, 0xe2f1, 0x5e2e, 0x1, 0x1);
        gbc.writeMem(0x45bc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x648a);
        EXPECT(gbc.pc(), 0x45be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00D2
        gbc.setState(0x53de, 0x2a11, 0xba60, 0xa177, 0xac6e, 0xd8c2, 0x1, 0x1);
        gbc.writeMem(0x53de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2a11);
        EXPECT(gbc.pc(), 0x53e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00D3
        gbc.setState(0xe4c9, 0x40f6, 0xa90, 0x8631, 0x5def, 0x427a, 0x1, 0x1);
        gbc.writeMem(0xe4c9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x40f6);
        EXPECT(gbc.pc(), 0xe4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c9), 0xcb);
        EXPECT(gbc.readMem(0xe4ca), 0x39);
        // CB 39 00D4
        gbc.setState(0x6c75, 0xc059, 0x400, 0x5c7, 0xadfb, 0xc21, 0x0, 0x1);
        gbc.writeMem(0x6c75, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x6c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00D5
        gbc.setState(0xbcb6, 0xe9ff, 0x9f00, 0x76f9, 0xa072, 0x126, 0x1, 0x1);
        gbc.writeMem(0xbcb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe9ff);
        EXPECT(gbc.pc(), 0xbcb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb6), 0xcb);
        EXPECT(gbc.readMem(0xbcb7), 0x39);
        // CB 39 00D6
        gbc.setState(0xa0e4, 0x7f10, 0xbf00, 0x9ed7, 0x956b, 0x3df6, 0x0, 0x0);
        gbc.writeMem(0xa0e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0xa0e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e4), 0xcb);
        EXPECT(gbc.readMem(0xa0e5), 0x39);
        // CB 39 00D7
        gbc.setState(0x4cd7, 0x8309, 0x6b80, 0x609a, 0x33f1, 0x1f23, 0x0, 0x1);
        gbc.writeMem(0x4cd7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8309);
        EXPECT(gbc.pc(), 0x4cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00D8
        gbc.setState(0x1c38, 0x4270, 0xdb60, 0x48db, 0xabf, 0x21d2, 0x1, 0x1);
        gbc.writeMem(0x1c38, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4270);
        EXPECT(gbc.pc(), 0x1c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00D9
        gbc.setState(0xe55, 0x1ef7, 0xb300, 0xbbb4, 0x7d27, 0xedbe, 0x0, 0x0);
        gbc.writeMem(0xe55, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1ef7);
        EXPECT(gbc.pc(), 0xe57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00DA
        gbc.setState(0xc4d6, 0x744f, 0x8df0, 0x49ae, 0xa3a8, 0xc036, 0x1, 0x1);
        gbc.writeMem(0xc4d6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x744f);
        EXPECT(gbc.pc(), 0xc4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d6), 0xcb);
        EXPECT(gbc.readMem(0xc4d7), 0x39);
        // CB 39 00DB
        gbc.setState(0xc87c, 0x6280, 0x55d0, 0xb242, 0x3fde, 0x4fa5, 0x1, 0x1);
        gbc.writeMem(0xc87c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6280);
        EXPECT(gbc.pc(), 0xc87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87c), 0xcb);
        EXPECT(gbc.readMem(0xc87d), 0x39);
        // CB 39 00DC
        gbc.setState(0xa065, 0x2239, 0x75f0, 0x846a, 0x26dc, 0x7264, 0x1, 0x0);
        gbc.writeMem(0xa065, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2239);
        EXPECT(gbc.pc(), 0xa067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa065), 0xcb);
        EXPECT(gbc.readMem(0xa066), 0x39);
        // CB 39 00DD
        gbc.setState(0xa0e2, 0x759c, 0x8a50, 0x340e, 0xef16, 0xb778, 0x1, 0x0);
        gbc.writeMem(0xa0e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x759c);
        EXPECT(gbc.pc(), 0xa0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e2), 0xcb);
        EXPECT(gbc.readMem(0xa0e3), 0x39);
        // CB 39 00DE
        gbc.setState(0x6019, 0xfdd, 0xab80, 0x19a8, 0xc9c5, 0xfa15, 0x0, 0x0);
        gbc.writeMem(0x6019, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfdd);
        EXPECT(gbc.pc(), 0x601b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00DF
        gbc.setState(0x67ab, 0x171a, 0x5a80, 0xc814, 0x1352, 0x6802, 0x1, 0x0);
        gbc.writeMem(0x67ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0x67ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00E0
        gbc.setState(0xaae2, 0xa6d2, 0x7640, 0x3eef, 0x94ae, 0xbad7, 0x1, 0x1);
        gbc.writeMem(0xaae2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa6d2);
        EXPECT(gbc.pc(), 0xaae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae2), 0xcb);
        EXPECT(gbc.readMem(0xaae3), 0x39);
        // CB 39 00E1
        gbc.setState(0x3412, 0x4126, 0x1ca0, 0xece, 0x7711, 0x2244, 0x1, 0x1);
        gbc.writeMem(0x3412, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4126);
        EXPECT(gbc.pc(), 0x3414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00E2
        gbc.setState(0x15e, 0x1d47, 0xedf0, 0x7050, 0xc229, 0x2302, 0x0, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1d47);
        EXPECT(gbc.pc(), 0x160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00E3
        gbc.setState(0xae45, 0xae97, 0x5a40, 0x1492, 0xee45, 0xdba, 0x1, 0x0);
        gbc.writeMem(0xae45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xae97);
        EXPECT(gbc.pc(), 0xae47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae45), 0xcb);
        EXPECT(gbc.readMem(0xae46), 0x39);
        // CB 39 00E4
        gbc.setState(0xb759, 0x91f0, 0x5280, 0x7c3e, 0x76df, 0x7107, 0x1, 0x0);
        gbc.writeMem(0xb759, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x91f0);
        EXPECT(gbc.pc(), 0xb75b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb759), 0xcb);
        EXPECT(gbc.readMem(0xb75a), 0x39);
        // CB 39 00E5
        gbc.setState(0xaf11, 0x7b94, 0x470, 0x6c6, 0x1746, 0x7102, 0x0, 0x1);
        gbc.writeMem(0xaf11, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7b94);
        EXPECT(gbc.pc(), 0xaf13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf11), 0xcb);
        EXPECT(gbc.readMem(0xaf12), 0x39);
        // CB 39 00E6
        gbc.setState(0xa650, 0xcaf3, 0xce80, 0x97c7, 0xe1af, 0x290d, 0x0, 0x0);
        gbc.writeMem(0xa650, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcaf3);
        EXPECT(gbc.pc(), 0xa652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa650), 0xcb);
        EXPECT(gbc.readMem(0xa651), 0x39);
        // CB 39 00E7
        gbc.setState(0xa871, 0x75cd, 0x5100, 0x7eef, 0xe99f, 0x1c10, 0x1, 0x1);
        gbc.writeMem(0xa871, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x75cd);
        EXPECT(gbc.pc(), 0xa873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa871), 0xcb);
        EXPECT(gbc.readMem(0xa872), 0x39);
        // CB 39 00E8
        gbc.setState(0x40d1, 0x25f0, 0x1fc0, 0xd806, 0xcc53, 0x664a, 0x1, 0x1);
        gbc.writeMem(0x40d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x25f0);
        EXPECT(gbc.pc(), 0x40d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00E9
        gbc.setState(0x1368, 0xe489, 0xb8e0, 0x86f8, 0xec60, 0x579, 0x0, 0x0);
        gbc.writeMem(0x1368, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0x136a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00EA
        gbc.setState(0xc75b, 0xbd7b, 0x1f0, 0xbc44, 0xe960, 0x2ca5, 0x1, 0x0);
        gbc.writeMem(0xc75b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbd7b);
        EXPECT(gbc.pc(), 0xc75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75b), 0xcb);
        EXPECT(gbc.readMem(0xc75c), 0x39);
        // CB 39 00EB
        gbc.setState(0x9528, 0xd877, 0x6750, 0x3652, 0x158b, 0xdb2, 0x1, 0x1);
        gbc.writeMem(0x9528, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd877);
        EXPECT(gbc.pc(), 0x952a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9528), 0xcb);
        EXPECT(gbc.readMem(0x9529), 0x39);
        // CB 39 00EC
        gbc.setState(0xbc92, 0x3639, 0x3e70, 0x7081, 0xac2f, 0xc48b, 0x1, 0x1);
        gbc.writeMem(0xbc92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3639);
        EXPECT(gbc.pc(), 0xbc94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc92), 0xcb);
        EXPECT(gbc.readMem(0xbc93), 0x39);
        // CB 39 00ED
        gbc.setState(0x4a42, 0xa8ab, 0x8720, 0x4671, 0x1d6e, 0x93ea, 0x1, 0x0);
        gbc.writeMem(0x4a42, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa8ab);
        EXPECT(gbc.pc(), 0x4a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00EE
        gbc.setState(0x9934, 0xc4a5, 0x6810, 0x1554, 0x6e3b, 0xfbdb, 0x0, 0x0);
        gbc.writeMem(0x9934, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc4a5);
        EXPECT(gbc.pc(), 0x9936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9934), 0xcb);
        EXPECT(gbc.readMem(0x9935), 0x39);
        // CB 39 00EF
        gbc.setState(0x5390, 0xe89b, 0xa880, 0xbf65, 0x1d00, 0x2737, 0x1, 0x1);
        gbc.writeMem(0x5390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe89b);
        EXPECT(gbc.pc(), 0x5392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00F0
        gbc.setState(0xd208, 0x7434, 0x2220, 0xd5f8, 0x553b, 0x3539, 0x0, 0x0);
        gbc.writeMem(0xd208, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7434);
        EXPECT(gbc.pc(), 0xd20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd208), 0xcb);
        EXPECT(gbc.readMem(0xd209), 0x39);
        // CB 39 00F1
        gbc.setState(0xe9bf, 0xa75, 0xf2d0, 0x5f39, 0x8f1e, 0x37d0, 0x0, 0x0);
        gbc.writeMem(0xe9bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa75);
        EXPECT(gbc.pc(), 0xe9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9bf), 0xcb);
        EXPECT(gbc.readMem(0xe9c0), 0x39);
        // CB 39 00F2
        gbc.setState(0x5183, 0x3d20, 0xbbe0, 0x9f44, 0xf102, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0x5183, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3d20);
        EXPECT(gbc.pc(), 0x5185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00F3
        gbc.setState(0xde6, 0xe1c9, 0xd2c0, 0x58e2, 0xcc47, 0x1aee, 0x1, 0x0);
        gbc.writeMem(0xde6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe1c9);
        EXPECT(gbc.pc(), 0xde8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00F4
        gbc.setState(0x69fa, 0xd1e3, 0x9c90, 0x1c10, 0xb2ae, 0xb030, 0x1, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd1e3);
        EXPECT(gbc.pc(), 0x69fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00F5
        gbc.setState(0x1c08, 0x60cc, 0x7660, 0xf98f, 0x7e49, 0x98ca, 0x0, 0x0);
        gbc.writeMem(0x1c08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x60cc);
        EXPECT(gbc.pc(), 0x1c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00F6
        gbc.setState(0x229f, 0xbb4e, 0xa650, 0x6058, 0x1f37, 0x9c14, 0x1, 0x1);
        gbc.writeMem(0x229f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0x22a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00F9
        gbc.setState(0x68ee, 0x4a98, 0x7b80, 0xf53e, 0x4a58, 0x65bf, 0x0, 0x0);
        gbc.writeMem(0x68ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4a98);
        EXPECT(gbc.pc(), 0x68f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00FA
        gbc.setState(0x67bf, 0xfe9, 0x1760, 0x4291, 0xb69f, 0x7d69, 0x0, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfe9);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00FB
        gbc.setState(0x2c33, 0x2a4c, 0x8010, 0x31f6, 0x7564, 0x259a, 0x1, 0x0);
        gbc.writeMem(0x2c33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2a4c);
        EXPECT(gbc.pc(), 0x2c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00FC
        gbc.setState(0xe1f0, 0x32d9, 0x1d70, 0xb769, 0x494d, 0x78c7, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x32d9);
        EXPECT(gbc.pc(), 0xe1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f0), 0xcb);
        EXPECT(gbc.readMem(0xe1f1), 0x39);
        // CB 39 00FD
        gbc.setState(0x2639, 0xf317, 0xaa60, 0xdef2, 0xcf93, 0x7ee1, 0x0, 0x1);
        gbc.writeMem(0x2639, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf317);
        EXPECT(gbc.pc(), 0x263b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 00FE
        gbc.setState(0x6961, 0xc3cb, 0x3b70, 0xb3f9, 0x6132, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0x6961, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc3cb);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 00FF
        gbc.setState(0xb087, 0xd3fc, 0xe020, 0xfcc6, 0x68c3, 0xb385, 0x0, 0x1);
        gbc.writeMem(0xb087, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd3fc);
        EXPECT(gbc.pc(), 0xb089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb087), 0xcb);
        EXPECT(gbc.readMem(0xb088), 0x39);
        // CB 39 0100
        gbc.setState(0x6a05, 0x722b, 0x4ca0, 0x8c1e, 0x72f1, 0x5b9f, 0x1, 0x1);
        gbc.writeMem(0x6a05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x722b);
        EXPECT(gbc.pc(), 0x6a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0101
        gbc.setState(0x634b, 0x35ff, 0x3ae0, 0x7443, 0x9b99, 0x321, 0x1, 0x0);
        gbc.writeMem(0x634b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0x634d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0103
        gbc.setState(0x6a0d, 0x6080, 0x2b80, 0xca98, 0x1eb3, 0xada6, 0x0, 0x0);
        gbc.writeMem(0x6a0d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6080);
        EXPECT(gbc.pc(), 0x6a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0104
        gbc.setState(0xae57, 0xd206, 0x9230, 0x451d, 0x79d2, 0x400e, 0x1, 0x0);
        gbc.writeMem(0xae57, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0xae59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae57), 0xcb);
        EXPECT(gbc.readMem(0xae58), 0x39);
        // CB 39 0105
        gbc.setState(0x4c, 0x6e0, 0x90f0, 0x9147, 0x456, 0xe915, 0x0, 0x1);
        gbc.writeMem(0x4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6e0);
        EXPECT(gbc.pc(), 0x4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0106
        gbc.setState(0xef7d, 0x57c3, 0x8ec0, 0x9919, 0x8f55, 0x3c44, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x57c3);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0xcb);
        EXPECT(gbc.readMem(0xef7e), 0x39);
        // CB 39 0107
        gbc.setState(0x2b25, 0xc9b7, 0x5ae0, 0xeea4, 0xea03, 0xb43f, 0x0, 0x0);
        gbc.writeMem(0x2b25, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc9b7);
        EXPECT(gbc.pc(), 0x2b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0108
        gbc.setState(0x96ff, 0x3cfb, 0xf3e0, 0xa673, 0x1146, 0xadc3, 0x1, 0x0);
        gbc.writeMem(0x96ff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0x9701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ff), 0xcb);
        EXPECT(gbc.readMem(0x9700), 0x39);
        // CB 39 0109
        gbc.setState(0xe860, 0xf315, 0x23e0, 0x6976, 0xd42d, 0x7ec5, 0x1, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf315);
        EXPECT(gbc.pc(), 0xe862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe860), 0xcb);
        EXPECT(gbc.readMem(0xe861), 0x39);
        // CB 39 010A
        gbc.setState(0x4f85, 0xa055, 0x5210, 0x1cd5, 0x4017, 0xe47a, 0x0, 0x0);
        gbc.writeMem(0x4f85, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa055);
        EXPECT(gbc.pc(), 0x4f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 010B
        gbc.setState(0x3f0a, 0xe0cf, 0x340, 0xa991, 0x497c, 0xddd0, 0x1, 0x0);
        gbc.writeMem(0x3f0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe0cf);
        EXPECT(gbc.pc(), 0x3f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 010D
        gbc.setState(0xa6f2, 0x4612, 0x2af0, 0x1566, 0x1e9a, 0x83f, 0x0, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4612);
        EXPECT(gbc.pc(), 0xa6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0xcb);
        EXPECT(gbc.readMem(0xa6f3), 0x39);
        // CB 39 010E
        gbc.setState(0x6021, 0xfee8, 0x3850, 0x412e, 0x36ca, 0x69f6, 0x1, 0x1);
        gbc.writeMem(0x6021, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfee8);
        EXPECT(gbc.pc(), 0x6023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 010F
        gbc.setState(0xe9a1, 0xb2a, 0x5d30, 0xd532, 0x1948, 0x379c, 0x1, 0x1);
        gbc.writeMem(0xe9a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb2a);
        EXPECT(gbc.pc(), 0xe9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a1), 0xcb);
        EXPECT(gbc.readMem(0xe9a2), 0x39);
        // CB 39 0110
        gbc.setState(0xacd2, 0xff5e, 0x100, 0x105d, 0xa2b3, 0x7d7d, 0x1, 0x0);
        gbc.writeMem(0xacd2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xff5e);
        EXPECT(gbc.pc(), 0xacd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd2), 0xcb);
        EXPECT(gbc.readMem(0xacd3), 0x39);
        // CB 39 0111
        gbc.setState(0xaab2, 0x7c75, 0x52c0, 0x65f3, 0xc275, 0xd576, 0x0, 0x1);
        gbc.writeMem(0xaab2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7c75);
        EXPECT(gbc.pc(), 0xaab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab2), 0xcb);
        EXPECT(gbc.readMem(0xaab3), 0x39);
        // CB 39 0112
        gbc.setState(0xddc9, 0x6013, 0x8c10, 0x7bc1, 0x7223, 0x3def, 0x0, 0x0);
        gbc.writeMem(0xddc9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6013);
        EXPECT(gbc.pc(), 0xddcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc9), 0xcb);
        EXPECT(gbc.readMem(0xddca), 0x39);
        // CB 39 0113
        gbc.setState(0x6664, 0xcd83, 0xf8c0, 0x7b53, 0x62a0, 0x8c1c, 0x1, 0x1);
        gbc.writeMem(0x6664, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcd83);
        EXPECT(gbc.pc(), 0x6666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0114
        gbc.setState(0x3b21, 0x24b6, 0xa9c0, 0xe79e, 0xc68a, 0x13d5, 0x1, 0x0);
        gbc.writeMem(0x3b21, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x24b6);
        EXPECT(gbc.pc(), 0x3b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0115
        gbc.setState(0x60b, 0xdb0c, 0x38e0, 0xeecb, 0x1e86, 0xc634, 0x0, 0x1);
        gbc.writeMem(0x60b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb0c);
        EXPECT(gbc.pc(), 0x60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0117
        gbc.setState(0x49df, 0xa9f9, 0x15c0, 0xb2ec, 0xa0be, 0x98cf, 0x0, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa9f9);
        EXPECT(gbc.pc(), 0x49e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0118
        gbc.setState(0xe86b, 0x8ffc, 0x92e0, 0xe920, 0x6e32, 0x1095, 0x0, 0x1);
        gbc.writeMem(0xe86b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ffc);
        EXPECT(gbc.pc(), 0xe86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86b), 0xcb);
        EXPECT(gbc.readMem(0xe86c), 0x39);
        // CB 39 0119
        gbc.setState(0xae1, 0xf044, 0x300, 0xd9fe, 0xb672, 0xf5c7, 0x1, 0x1);
        gbc.writeMem(0xae1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf044);
        EXPECT(gbc.pc(), 0xae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 011A
        gbc.setState(0x854d, 0xdb70, 0x7b20, 0x1874, 0x6a20, 0xafc, 0x0, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdb70);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854d), 0xcb);
        EXPECT(gbc.readMem(0x854e), 0x39);
        // CB 39 011B
        gbc.setState(0x95f9, 0xf74a, 0x1f20, 0xcca7, 0x2f30, 0x8e90, 0x1, 0x0);
        gbc.writeMem(0x95f9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf74a);
        EXPECT(gbc.pc(), 0x95fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f9), 0xcb);
        EXPECT(gbc.readMem(0x95fa), 0x39);
        // CB 39 011D
        gbc.setState(0x3162, 0x383d, 0xd290, 0xd12b, 0x69c, 0x4ae6, 0x0, 0x1);
        gbc.writeMem(0x3162, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x383d);
        EXPECT(gbc.pc(), 0x3164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 011E
        gbc.setState(0xa52, 0x940a, 0x230, 0xa35d, 0xa04, 0xb883, 0x0, 0x0);
        gbc.writeMem(0xa52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x940a);
        EXPECT(gbc.pc(), 0xa54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 011F
        gbc.setState(0xc541, 0x7d68, 0x83c0, 0xc7d5, 0x7c7a, 0x6915, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7d68);
        EXPECT(gbc.pc(), 0xc543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc541), 0xcb);
        EXPECT(gbc.readMem(0xc542), 0x39);
        // CB 39 0121
        gbc.setState(0x346d, 0x2b34, 0xf430, 0xc4f, 0x8724, 0x625b, 0x1, 0x1);
        gbc.writeMem(0x346d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2b34);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0122
        gbc.setState(0xcf1, 0x9733, 0xedb0, 0xf240, 0x66a4, 0x2e4e, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9733);
        EXPECT(gbc.pc(), 0xcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0123
        gbc.setState(0xe827, 0x2228, 0x5e80, 0x19b8, 0x9f70, 0x389b, 0x0, 0x1);
        gbc.writeMem(0xe827, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2228);
        EXPECT(gbc.pc(), 0xe829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe827), 0xcb);
        EXPECT(gbc.readMem(0xe828), 0x39);
        // CB 39 0125
        gbc.setState(0xe6a7, 0xd7e4, 0x31f0, 0xebec, 0x754c, 0x6e5c, 0x0, 0x1);
        gbc.writeMem(0xe6a7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd7e4);
        EXPECT(gbc.pc(), 0xe6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a7), 0xcb);
        EXPECT(gbc.readMem(0xe6a8), 0x39);
        // CB 39 0127
        gbc.setState(0x746, 0xa55e, 0x1680, 0x8e7f, 0xfbc6, 0x5, 0x1, 0x0);
        gbc.writeMem(0x746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa55e);
        EXPECT(gbc.pc(), 0x748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0128
        gbc.setState(0xf23, 0xc473, 0x9290, 0x15a2, 0xe238, 0xead2, 0x1, 0x0);
        gbc.writeMem(0xf23, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc473);
        EXPECT(gbc.pc(), 0xf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0129
        gbc.setState(0x399e, 0xbf9f, 0x3810, 0x4c61, 0x2904, 0x6363, 0x0, 0x1);
        gbc.writeMem(0x399e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0x39a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 012A
        gbc.setState(0x12b2, 0xd61c, 0x39b0, 0x337f, 0xa084, 0x3905, 0x1, 0x1);
        gbc.writeMem(0x12b2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd61c);
        EXPECT(gbc.pc(), 0x12b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 012B
        gbc.setState(0xd481, 0x6db0, 0xeb80, 0x8ff3, 0x7ff1, 0x6e20, 0x1, 0x1);
        gbc.writeMem(0xd481, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6db0);
        EXPECT(gbc.pc(), 0xd483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd481), 0xcb);
        EXPECT(gbc.readMem(0xd482), 0x39);
        // CB 39 012C
        gbc.setState(0xf2f, 0xcbd6, 0x76f0, 0xe3a, 0xdba3, 0x829, 0x1, 0x1);
        gbc.writeMem(0xf2f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcbd6);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 012D
        gbc.setState(0xc998, 0xb462, 0x4d40, 0x327c, 0x1b07, 0xacb1, 0x0, 0x1);
        gbc.writeMem(0xc998, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb462);
        EXPECT(gbc.pc(), 0xc99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc998), 0xcb);
        EXPECT(gbc.readMem(0xc999), 0x39);
        // CB 39 012E
        gbc.setState(0x3dff, 0x62b2, 0xeff0, 0x2178, 0xf439, 0xf8f4, 0x1, 0x0);
        gbc.writeMem(0x3dff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x62b2);
        EXPECT(gbc.pc(), 0x3e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 012F
        gbc.setState(0xadbc, 0xfced, 0xdd40, 0xf821, 0xcf54, 0xc2ef, 0x0, 0x1);
        gbc.writeMem(0xadbc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfced);
        EXPECT(gbc.pc(), 0xadbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbc), 0xcb);
        EXPECT(gbc.readMem(0xadbd), 0x39);
        // CB 39 0131
        gbc.setState(0xbf50, 0xfb43, 0xfa80, 0xcbbc, 0x37a, 0x4c75, 0x1, 0x0);
        gbc.writeMem(0xbf50, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfb43);
        EXPECT(gbc.pc(), 0xbf52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf50), 0xcb);
        EXPECT(gbc.readMem(0xbf51), 0x39);
        // CB 39 0132
        gbc.setState(0x1dd7, 0x9a8b, 0x94f0, 0xd51a, 0xd3d5, 0xb5c8, 0x0, 0x0);
        gbc.writeMem(0x1dd7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9a8b);
        EXPECT(gbc.pc(), 0x1dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0133
        gbc.setState(0xd8f4, 0x6c99, 0xa400, 0x52bd, 0x82ba, 0x5455, 0x0, 0x0);
        gbc.writeMem(0xd8f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6c99);
        EXPECT(gbc.pc(), 0xd8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f4), 0xcb);
        EXPECT(gbc.readMem(0xd8f5), 0x39);
        // CB 39 0134
        gbc.setState(0x9bb1, 0x4131, 0xd630, 0x8ae1, 0x6ebc, 0xc511, 0x1, 0x1);
        gbc.writeMem(0x9bb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4131);
        EXPECT(gbc.pc(), 0x9bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb1), 0xcb);
        EXPECT(gbc.readMem(0x9bb2), 0x39);
        // CB 39 0135
        gbc.setState(0xe331, 0x954f, 0x5fc0, 0x5ed0, 0xd2f2, 0x2167, 0x1, 0x1);
        gbc.writeMem(0xe331, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x954f);
        EXPECT(gbc.pc(), 0xe333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe331), 0xcb);
        EXPECT(gbc.readMem(0xe332), 0x39);
        // CB 39 0136
        gbc.setState(0x35e4, 0xee13, 0x4600, 0xdb, 0xc4f7, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x35e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xee13);
        EXPECT(gbc.pc(), 0x35e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0137
        gbc.setState(0x3a9a, 0x1c8d, 0x8210, 0xe828, 0x1b1f, 0xa9ff, 0x0, 0x1);
        gbc.writeMem(0x3a9a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0x3a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0138
        gbc.setState(0x9f3b, 0x3401, 0x5dd0, 0x8da0, 0xa930, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x9f3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3401);
        EXPECT(gbc.pc(), 0x9f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3b), 0xcb);
        EXPECT(gbc.readMem(0x9f3c), 0x39);
        // CB 39 0139
        gbc.setState(0x9647, 0x5f0f, 0x1ed0, 0x8b36, 0xc898, 0x58db, 0x0, 0x1);
        gbc.writeMem(0x9647, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5f0f);
        EXPECT(gbc.pc(), 0x9649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9647), 0xcb);
        EXPECT(gbc.readMem(0x9648), 0x39);
        // CB 39 013A
        gbc.setState(0x14b0, 0xa47a, 0xf2c0, 0x6a11, 0x75b6, 0x964e, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa47a);
        EXPECT(gbc.pc(), 0x14b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 013B
        gbc.setState(0x1b9f, 0xe56f, 0x46e0, 0xc414, 0x8ef9, 0x22c6, 0x1, 0x0);
        gbc.writeMem(0x1b9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe56f);
        EXPECT(gbc.pc(), 0x1ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 013C
        gbc.setState(0xa578, 0x90da, 0xc880, 0xfdd5, 0x956a, 0xd507, 0x1, 0x0);
        gbc.writeMem(0xa578, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x90da);
        EXPECT(gbc.pc(), 0xa57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa578), 0xcb);
        EXPECT(gbc.readMem(0xa579), 0x39);
        // CB 39 013D
        gbc.setState(0x1f20, 0xf28, 0x8470, 0x9c6, 0xe94c, 0x65bc, 0x1, 0x1);
        gbc.writeMem(0x1f20, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf28);
        EXPECT(gbc.pc(), 0x1f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 013E
        gbc.setState(0x48ee, 0x9749, 0xb2a0, 0xf0f7, 0x5122, 0xf1b4, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9749);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 013F
        gbc.setState(0xe7b6, 0x64b2, 0x5c00, 0x227e, 0xe590, 0x4e52, 0x0, 0x0);
        gbc.writeMem(0xe7b6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x64b2);
        EXPECT(gbc.pc(), 0xe7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b6), 0xcb);
        EXPECT(gbc.readMem(0xe7b7), 0x39);
        // CB 39 0140
        gbc.setState(0xbfb2, 0x987d, 0x5380, 0x84c0, 0x5e9d, 0xc956, 0x0, 0x0);
        gbc.writeMem(0xbfb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x987d);
        EXPECT(gbc.pc(), 0xbfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb2), 0xcb);
        EXPECT(gbc.readMem(0xbfb3), 0x39);
        // CB 39 0141
        gbc.setState(0x2d9d, 0x122c, 0x5640, 0x13cc, 0x4211, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x2d9d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x122c);
        EXPECT(gbc.pc(), 0x2d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0142
        gbc.setState(0x2ce3, 0x2eab, 0x8680, 0x64f1, 0x870a, 0x63e1, 0x1, 0x1);
        gbc.writeMem(0x2ce3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2eab);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0143
        gbc.setState(0xd207, 0xbd47, 0x6f90, 0x6717, 0x677b, 0x5a5, 0x0, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbd47);
        EXPECT(gbc.pc(), 0xd209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd207), 0xcb);
        EXPECT(gbc.readMem(0xd208), 0x39);
        // CB 39 0144
        gbc.setState(0xe806, 0xf22a, 0xa500, 0x76d8, 0x3fd, 0x90c0, 0x1, 0x1);
        gbc.writeMem(0xe806, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf22a);
        EXPECT(gbc.pc(), 0xe808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe806), 0xcb);
        EXPECT(gbc.readMem(0xe807), 0x39);
        // CB 39 0145
        gbc.setState(0xe142, 0x8a2, 0xf8f0, 0x9349, 0xedc3, 0x198, 0x0, 0x0);
        gbc.writeMem(0xe142, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8a2);
        EXPECT(gbc.pc(), 0xe144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe142), 0xcb);
        EXPECT(gbc.readMem(0xe143), 0x39);
        // CB 39 0146
        gbc.setState(0xa8df, 0xcf2, 0x9a40, 0x5a17, 0x833b, 0xfdc1, 0x1, 0x1);
        gbc.writeMem(0xa8df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcf2);
        EXPECT(gbc.pc(), 0xa8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8df), 0xcb);
        EXPECT(gbc.readMem(0xa8e0), 0x39);
        // CB 39 0147
        gbc.setState(0x84f8, 0x30f9, 0xd180, 0x3ee0, 0x8459, 0x948a, 0x0, 0x1);
        gbc.writeMem(0x84f8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x30f9);
        EXPECT(gbc.pc(), 0x84fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f8), 0xcb);
        EXPECT(gbc.readMem(0x84f9), 0x39);
        // CB 39 0148
        gbc.setState(0x8834, 0xb8a4, 0x5e90, 0xe99c, 0x8b20, 0x2694, 0x0, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0x8836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8834), 0xcb);
        EXPECT(gbc.readMem(0x8835), 0x39);
        // CB 39 014A
        gbc.setState(0xb7c3, 0xfffe, 0xf210, 0x2ce8, 0x3cb1, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfffe);
        EXPECT(gbc.pc(), 0xb7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c3), 0xcb);
        EXPECT(gbc.readMem(0xb7c4), 0x39);
        // CB 39 014B
        gbc.setState(0x15e, 0xab59, 0x1d70, 0x1883, 0xb073, 0xc2f8, 0x1, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xab59);
        EXPECT(gbc.pc(), 0x160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 014C
        gbc.setState(0x4a14, 0x1a3d, 0xee20, 0xd358, 0xd324, 0x9668, 0x0, 0x1);
        gbc.writeMem(0x4a14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1a3d);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 014D
        gbc.setState(0x1ddf, 0xba63, 0xb7b0, 0x653f, 0x272, 0x5614, 0x1, 0x1);
        gbc.writeMem(0x1ddf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xba63);
        EXPECT(gbc.pc(), 0x1de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 014E
        gbc.setState(0x52, 0xc477, 0xe710, 0x6661, 0x3456, 0x775e, 0x1, 0x0);
        gbc.writeMem(0x52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc477);
        EXPECT(gbc.pc(), 0x54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 014F
        gbc.setState(0xc795, 0xb3d5, 0xe350, 0xaa5, 0x7e91, 0x8830, 0x0, 0x0);
        gbc.writeMem(0xc795, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb3d5);
        EXPECT(gbc.pc(), 0xc797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc795), 0xcb);
        EXPECT(gbc.readMem(0xc796), 0x39);
        // CB 39 0150
        gbc.setState(0xe0bb, 0x2a6c, 0x1560, 0x830, 0xab0c, 0x93d6, 0x0, 0x0);
        gbc.writeMem(0xe0bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2a6c);
        EXPECT(gbc.pc(), 0xe0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bb), 0xcb);
        EXPECT(gbc.readMem(0xe0bc), 0x39);
        // CB 39 0151
        gbc.setState(0xa390, 0xe2bc, 0x29b0, 0xd263, 0xa5d5, 0x27d, 0x0, 0x1);
        gbc.writeMem(0xa390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe2bc);
        EXPECT(gbc.pc(), 0xa392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa390), 0xcb);
        EXPECT(gbc.readMem(0xa391), 0x39);
        // CB 39 0152
        gbc.setState(0x6476, 0x6d46, 0x7a10, 0xa757, 0x302b, 0x7a74, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0x6478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0153
        gbc.setState(0x4d2a, 0xcbb1, 0x3090, 0x2b99, 0xcdb1, 0xd1f2, 0x1, 0x1);
        gbc.writeMem(0x4d2a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcbb1);
        EXPECT(gbc.pc(), 0x4d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0154
        gbc.setState(0x23f4, 0x46e8, 0x4b50, 0x2e85, 0x805b, 0x9290, 0x1, 0x0);
        gbc.writeMem(0x23f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x46e8);
        EXPECT(gbc.pc(), 0x23f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0155
        gbc.setState(0x59bd, 0x55e4, 0x3660, 0xa09, 0x5fc, 0xf5a4, 0x0, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x55e4);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0156
        gbc.setState(0x909e, 0x32c, 0x80b0, 0xa75, 0x6327, 0x8a4e, 0x0, 0x1);
        gbc.writeMem(0x909e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x32c);
        EXPECT(gbc.pc(), 0x90a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909e), 0xcb);
        EXPECT(gbc.readMem(0x909f), 0x39);
        // CB 39 0157
        gbc.setState(0xb095, 0x6902, 0x80, 0x463e, 0x6eb1, 0x420f, 0x0, 0x0);
        gbc.writeMem(0xb095, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6902);
        EXPECT(gbc.pc(), 0xb097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb095), 0xcb);
        EXPECT(gbc.readMem(0xb096), 0x39);
        // CB 39 0158
        gbc.setState(0x678e, 0x4bea, 0x8320, 0xd36b, 0xb7e8, 0x4585, 0x0, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x6790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0159
        gbc.setState(0x4aa, 0xad7e, 0xe1a0, 0xa9fb, 0xa5bc, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x4aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xad7e);
        EXPECT(gbc.pc(), 0x4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 015A
        gbc.setState(0xc8b5, 0x979f, 0x1790, 0xa065, 0xecbb, 0x5ffd, 0x0, 0x0);
        gbc.writeMem(0xc8b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x979f);
        EXPECT(gbc.pc(), 0xc8b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b5), 0xcb);
        EXPECT(gbc.readMem(0xc8b6), 0x39);
        // CB 39 015B
        gbc.setState(0xf04, 0xecd4, 0x290, 0xd6b2, 0x7492, 0x8dfb, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xecd4);
        EXPECT(gbc.pc(), 0xf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 015C
        gbc.setState(0x36b1, 0xbcf5, 0xff60, 0x68f1, 0xef21, 0xbab8, 0x1, 0x1);
        gbc.writeMem(0x36b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbcf5);
        EXPECT(gbc.pc(), 0x36b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 015D
        gbc.setState(0x6423, 0xfc12, 0xbd70, 0xa3ca, 0x883a, 0x8d71, 0x1, 0x1);
        gbc.writeMem(0x6423, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfc12);
        EXPECT(gbc.pc(), 0x6425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 015E
        gbc.setState(0x7623, 0x1870, 0x9590, 0xedb, 0x27f, 0x4c6f, 0x0, 0x0);
        gbc.writeMem(0x7623, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1870);
        EXPECT(gbc.pc(), 0x7625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 015F
        gbc.setState(0x51d1, 0x3d53, 0xd520, 0x62c6, 0x6151, 0x5460, 0x1, 0x0);
        gbc.writeMem(0x51d1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3d53);
        EXPECT(gbc.pc(), 0x51d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0160
        gbc.setState(0x8748, 0x5049, 0x6680, 0xdcc8, 0xc1c2, 0x3f1c, 0x1, 0x1);
        gbc.writeMem(0x8748, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5049);
        EXPECT(gbc.pc(), 0x874a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8748), 0xcb);
        EXPECT(gbc.readMem(0x8749), 0x39);
        // CB 39 0161
        gbc.setState(0xb322, 0xa2e4, 0x8310, 0xacfa, 0xbf63, 0x777c, 0x1, 0x1);
        gbc.writeMem(0xb322, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa2e4);
        EXPECT(gbc.pc(), 0xb324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb322), 0xcb);
        EXPECT(gbc.readMem(0xb323), 0x39);
        // CB 39 0162
        gbc.setState(0x6e31, 0xbc2, 0xdc50, 0x3e99, 0x9604, 0x9520, 0x0, 0x0);
        gbc.writeMem(0x6e31, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbc2);
        EXPECT(gbc.pc(), 0x6e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0163
        gbc.setState(0x4c7c, 0xe4c9, 0x9530, 0x3582, 0x1213, 0x874b, 0x0, 0x0);
        gbc.writeMem(0x4c7c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe4c9);
        EXPECT(gbc.pc(), 0x4c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0164
        gbc.setState(0xe78c, 0x1619, 0x2d50, 0x3775, 0x8e24, 0xfb22, 0x1, 0x0);
        gbc.writeMem(0xe78c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1619);
        EXPECT(gbc.pc(), 0xe78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78c), 0xcb);
        EXPECT(gbc.readMem(0xe78d), 0x39);
        // CB 39 0165
        gbc.setState(0x35e8, 0x850, 0x26f0, 0xecbb, 0x627, 0xc781, 0x0, 0x1);
        gbc.writeMem(0x35e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x850);
        EXPECT(gbc.pc(), 0x35ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0166
        gbc.setState(0x5d33, 0x63c8, 0x72a0, 0x872d, 0xff36, 0x8dbd, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x63c8);
        EXPECT(gbc.pc(), 0x5d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0167
        gbc.setState(0x525e, 0xc871, 0xba70, 0xa564, 0x4041, 0x128c, 0x1, 0x1);
        gbc.writeMem(0x525e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc871);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0168
        gbc.setState(0x64b1, 0xbe01, 0x85c0, 0x70c0, 0xf3b9, 0xef36, 0x1, 0x1);
        gbc.writeMem(0x64b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbe01);
        EXPECT(gbc.pc(), 0x64b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0169
        gbc.setState(0x5bc0, 0x65b7, 0x8ae0, 0x5aca, 0x5761, 0xf79, 0x1, 0x1);
        gbc.writeMem(0x5bc0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x65b7);
        EXPECT(gbc.pc(), 0x5bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 016A
        gbc.setState(0x4ef0, 0x7e72, 0x7600, 0x4351, 0x20fd, 0x909b, 0x0, 0x0);
        gbc.writeMem(0x4ef0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7e72);
        EXPECT(gbc.pc(), 0x4ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 016B
        gbc.setState(0x603e, 0x9c34, 0x5570, 0x2071, 0x8293, 0xbfa7, 0x1, 0x1);
        gbc.writeMem(0x603e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9c34);
        EXPECT(gbc.pc(), 0x6040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 016C
        gbc.setState(0x6ae0, 0xdbc2, 0x8e40, 0x677d, 0xf470, 0xe819, 0x0, 0x0);
        gbc.writeMem(0x6ae0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdbc2);
        EXPECT(gbc.pc(), 0x6ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 016D
        gbc.setState(0xa93f, 0xef29, 0x3400, 0xabb, 0x150, 0xf522, 0x1, 0x0);
        gbc.writeMem(0xa93f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xef29);
        EXPECT(gbc.pc(), 0xa941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93f), 0xcb);
        EXPECT(gbc.readMem(0xa940), 0x39);
        // CB 39 016E
        gbc.setState(0x8648, 0x49d7, 0x9f80, 0xa733, 0xdd49, 0x60fd, 0x1, 0x0);
        gbc.writeMem(0x8648, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x49d7);
        EXPECT(gbc.pc(), 0x864a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8648), 0xcb);
        EXPECT(gbc.readMem(0x8649), 0x39);
        // CB 39 016F
        gbc.setState(0xd82c, 0xaa00, 0xdb40, 0xe617, 0xd00e, 0xed71, 0x0, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xaa00);
        EXPECT(gbc.pc(), 0xd82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82c), 0xcb);
        EXPECT(gbc.readMem(0xd82d), 0x39);
        // CB 39 0170
        gbc.setState(0x7e0a, 0x9105, 0xe4c0, 0x2142, 0x88f, 0x8662, 0x1, 0x0);
        gbc.writeMem(0x7e0a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9105);
        EXPECT(gbc.pc(), 0x7e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0171
        gbc.setState(0xd806, 0x9182, 0x55c0, 0x81e4, 0x84f8, 0xd2a3, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9182);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd806), 0xcb);
        EXPECT(gbc.readMem(0xd807), 0x39);
        // CB 39 0172
        gbc.setState(0x8760, 0xccdf, 0x6f30, 0x8a1c, 0x1749, 0xe7cd, 0x0, 0x0);
        gbc.writeMem(0x8760, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xccdf);
        EXPECT(gbc.pc(), 0x8762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8760), 0xcb);
        EXPECT(gbc.readMem(0x8761), 0x39);
        // CB 39 0173
        gbc.setState(0x3306, 0xcb0e, 0xe4d0, 0x1444, 0x3699, 0x7930, 0x1, 0x0);
        gbc.writeMem(0x3306, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcb0e);
        EXPECT(gbc.pc(), 0x3308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0175
        gbc.setState(0x44d7, 0x2544, 0x1760, 0x2798, 0xbaf, 0x2ec2, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2544);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0176
        gbc.setState(0x8db3, 0x1541, 0x2240, 0xf3f8, 0x7178, 0x5db, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1541);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0x39);
        // CB 39 0177
        gbc.setState(0x77b1, 0x86b9, 0x2250, 0x9b50, 0xaa00, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x77b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x86b9);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0178
        gbc.setState(0x2e82, 0x9459, 0x6b20, 0xe034, 0x151d, 0x1d96, 0x0, 0x1);
        gbc.writeMem(0x2e82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9459);
        EXPECT(gbc.pc(), 0x2e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0179
        gbc.setState(0x6f2b, 0x4b7f, 0xa750, 0xd955, 0xdb87, 0x3e37, 0x0, 0x0);
        gbc.writeMem(0x6f2b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4b7f);
        EXPECT(gbc.pc(), 0x6f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 017C
        gbc.setState(0x8f12, 0x61f, 0xe380, 0xf73e, 0x161c, 0x4286, 0x0, 0x0);
        gbc.writeMem(0x8f12, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x61f);
        EXPECT(gbc.pc(), 0x8f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f12), 0xcb);
        EXPECT(gbc.readMem(0x8f13), 0x39);
        // CB 39 017D
        gbc.setState(0xe5c0, 0x4340, 0xd600, 0xf12e, 0xbbc4, 0xfd97, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4340);
        EXPECT(gbc.pc(), 0xe5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c0), 0xcb);
        EXPECT(gbc.readMem(0xe5c1), 0x39);
        // CB 39 017E
        gbc.setState(0x947e, 0x1a21, 0x83e0, 0x4447, 0xc11e, 0x50f4, 0x1, 0x1);
        gbc.writeMem(0x947e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1a21);
        EXPECT(gbc.pc(), 0x9480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947e), 0xcb);
        EXPECT(gbc.readMem(0x947f), 0x39);
        // CB 39 017F
        gbc.setState(0x9b5b, 0x2a9c, 0x9810, 0x5918, 0xde45, 0x2ef8, 0x0, 0x0);
        gbc.writeMem(0x9b5b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2a9c);
        EXPECT(gbc.pc(), 0x9b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5b), 0xcb);
        EXPECT(gbc.readMem(0x9b5c), 0x39);
        // CB 39 0180
        gbc.setState(0x6d86, 0x17b1, 0xb2b0, 0x5ef8, 0x157, 0x75fc, 0x0, 0x0);
        gbc.writeMem(0x6d86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x17b1);
        EXPECT(gbc.pc(), 0x6d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0181
        gbc.setState(0xb8ce, 0x45b7, 0xe9b0, 0x3ead, 0x9a, 0x1eca, 0x0, 0x1);
        gbc.writeMem(0xb8ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x45b7);
        EXPECT(gbc.pc(), 0xb8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ce), 0xcb);
        EXPECT(gbc.readMem(0xb8cf), 0x39);
        // CB 39 0182
        gbc.setState(0x6cb0, 0xaaac, 0x4960, 0x5ca4, 0x66f7, 0x3373, 0x0, 0x0);
        gbc.writeMem(0x6cb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xaaac);
        EXPECT(gbc.pc(), 0x6cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0183
        gbc.setState(0xef58, 0x3a5b, 0xbe50, 0x7e7a, 0x86be, 0x3a75, 0x1, 0x1);
        gbc.writeMem(0xef58, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0xef5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef58), 0xcb);
        EXPECT(gbc.readMem(0xef59), 0x39);
        // CB 39 0184
        gbc.setState(0x46f1, 0x1ace, 0x7e00, 0xe5d, 0x6220, 0xe809, 0x0, 0x1);
        gbc.writeMem(0x46f1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x46f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0185
        gbc.setState(0x3c8d, 0xc8bb, 0x16e0, 0x11e0, 0xdd94, 0xd26d, 0x1, 0x1);
        gbc.writeMem(0x3c8d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc8bb);
        EXPECT(gbc.pc(), 0x3c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0186
        gbc.setState(0x1174, 0x6bd7, 0xc540, 0x7ba1, 0x7002, 0xcdd1, 0x1, 0x0);
        gbc.writeMem(0x1174, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x1176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0187
        gbc.setState(0xa9b, 0xc0e5, 0xe7e0, 0x5524, 0x187c, 0xa466, 0x0, 0x0);
        gbc.writeMem(0xa9b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc0e5);
        EXPECT(gbc.pc(), 0xa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0189
        gbc.setState(0xc42d, 0x6d16, 0x9ca0, 0x5873, 0xb946, 0x2b8, 0x1, 0x1);
        gbc.writeMem(0xc42d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6d16);
        EXPECT(gbc.pc(), 0xc42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42d), 0xcb);
        EXPECT(gbc.readMem(0xc42e), 0x39);
        // CB 39 018A
        gbc.setState(0xe3be, 0xda52, 0x4960, 0xcf6e, 0x2ed1, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0xe3be, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xda52);
        EXPECT(gbc.pc(), 0xe3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3be), 0xcb);
        EXPECT(gbc.readMem(0xe3bf), 0x39);
        // CB 39 018B
        gbc.setState(0x6a9a, 0xadec, 0x2a40, 0x5cd, 0x19f1, 0x8585, 0x1, 0x1);
        gbc.writeMem(0x6a9a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xadec);
        EXPECT(gbc.pc(), 0x6a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 018C
        gbc.setState(0xdbe6, 0xee71, 0x94c0, 0x2405, 0xb266, 0x1e45, 0x1, 0x0);
        gbc.writeMem(0xdbe6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xee71);
        EXPECT(gbc.pc(), 0xdbe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe6), 0xcb);
        EXPECT(gbc.readMem(0xdbe7), 0x39);
        // CB 39 018D
        gbc.setState(0x749f, 0x3370, 0x3e60, 0x12b4, 0x3e52, 0x1a25, 0x0, 0x1);
        gbc.writeMem(0x749f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x74a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 018E
        gbc.setState(0x673a, 0x95ed, 0xb7f0, 0x4f9b, 0x8f6b, 0x9350, 0x0, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x95ed);
        EXPECT(gbc.pc(), 0x673c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 018F
        gbc.setState(0xb0d3, 0x25c4, 0x9d90, 0xf3a1, 0x16aa, 0x7147, 0x0, 0x0);
        gbc.writeMem(0xb0d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x25c4);
        EXPECT(gbc.pc(), 0xb0d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d3), 0xcb);
        EXPECT(gbc.readMem(0xb0d4), 0x39);
        // CB 39 0190
        gbc.setState(0xbf5e, 0xf985, 0xf6a0, 0xde3, 0x5a79, 0x525f, 0x1, 0x0);
        gbc.writeMem(0xbf5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0xbf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5e), 0xcb);
        EXPECT(gbc.readMem(0xbf5f), 0x39);
        // CB 39 0191
        gbc.setState(0x598f, 0xbc22, 0x63f0, 0xa430, 0xe766, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0x598f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbc22);
        EXPECT(gbc.pc(), 0x5991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0192
        gbc.setState(0x7a64, 0x7dbf, 0xa470, 0xc6f3, 0x9c5e, 0xf6a6, 0x0, 0x1);
        gbc.writeMem(0x7a64, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7dbf);
        EXPECT(gbc.pc(), 0x7a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0193
        gbc.setState(0x8530, 0xf428, 0x4c60, 0x3f86, 0xafd7, 0xa259, 0x0, 0x1);
        gbc.writeMem(0x8530, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf428);
        EXPECT(gbc.pc(), 0x8532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8530), 0xcb);
        EXPECT(gbc.readMem(0x8531), 0x39);
        // CB 39 0194
        gbc.setState(0xb78, 0xacf7, 0x82c0, 0xc4ba, 0xd888, 0x69f9, 0x0, 0x1);
        gbc.writeMem(0xb78, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xacf7);
        EXPECT(gbc.pc(), 0xb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0195
        gbc.setState(0x4b9f, 0x530e, 0x3440, 0x89f7, 0x7ffd, 0xb65e, 0x1, 0x0);
        gbc.writeMem(0x4b9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x530e);
        EXPECT(gbc.pc(), 0x4ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0196
        gbc.setState(0x21fc, 0x7b7c, 0x3060, 0xcf06, 0x590b, 0x3676, 0x1, 0x1);
        gbc.writeMem(0x21fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7b7c);
        EXPECT(gbc.pc(), 0x21fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0197
        gbc.setState(0x8be5, 0xa774, 0xe290, 0x41c, 0xa98, 0xa2c, 0x0, 0x1);
        gbc.writeMem(0x8be5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa774);
        EXPECT(gbc.pc(), 0x8be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be5), 0xcb);
        EXPECT(gbc.readMem(0x8be6), 0x39);
        // CB 39 0198
        gbc.setState(0x9b82, 0x61e7, 0xfd80, 0xeaf5, 0x90c9, 0x6747, 0x0, 0x0);
        gbc.writeMem(0x9b82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0x9b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b82), 0xcb);
        EXPECT(gbc.readMem(0x9b83), 0x39);
        // CB 39 019A
        gbc.setState(0x13a6, 0x4910, 0x4cc0, 0x3adc, 0xc15c, 0x1c4, 0x0, 0x0);
        gbc.writeMem(0x13a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4910);
        EXPECT(gbc.pc(), 0x13a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 019B
        gbc.setState(0x7565, 0xd850, 0xcf30, 0xe178, 0xd568, 0xa103, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd850);
        EXPECT(gbc.pc(), 0x7567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 019C
        gbc.setState(0xe275, 0x4ce, 0x9d70, 0x63e2, 0xcf63, 0x9226, 0x0, 0x1);
        gbc.writeMem(0xe275, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4ce);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe275), 0xcb);
        EXPECT(gbc.readMem(0xe276), 0x39);
        // CB 39 019D
        gbc.setState(0xeb39, 0x871d, 0x84e0, 0xe586, 0x1662, 0xc9ab, 0x0, 0x1);
        gbc.writeMem(0xeb39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x871d);
        EXPECT(gbc.pc(), 0xeb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb39), 0xcb);
        EXPECT(gbc.readMem(0xeb3a), 0x39);
        // CB 39 019E
        gbc.setState(0x8c3a, 0x9d14, 0x87d0, 0xfda, 0xfd3c, 0xdcff, 0x0, 0x1);
        gbc.writeMem(0x8c3a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9d14);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3a), 0xcb);
        EXPECT(gbc.readMem(0x8c3b), 0x39);
        // CB 39 01A0
        gbc.setState(0x4e70, 0x2452, 0x26f0, 0xbae4, 0x1a37, 0x1a2a, 0x1, 0x0);
        gbc.writeMem(0x4e70, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2452);
        EXPECT(gbc.pc(), 0x4e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01A1
        gbc.setState(0x169c, 0x702, 0xe8d0, 0x4c29, 0xdaea, 0x5458, 0x1, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x702);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01A2
        gbc.setState(0x98fa, 0xc601, 0x2220, 0x82a2, 0x4981, 0x57de, 0x1, 0x1);
        gbc.writeMem(0x98fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0x98fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fa), 0xcb);
        EXPECT(gbc.readMem(0x98fb), 0x39);
        // CB 39 01A3
        gbc.setState(0x554b, 0x158d, 0x8300, 0x947b, 0x4151, 0xcef9, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x158d);
        EXPECT(gbc.pc(), 0x554d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01A4
        gbc.setState(0xe7fc, 0xd2db, 0xe890, 0x26cf, 0x2fb7, 0x5d6b, 0x0, 0x1);
        gbc.writeMem(0xe7fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd2db);
        EXPECT(gbc.pc(), 0xe7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fc), 0xcb);
        EXPECT(gbc.readMem(0xe7fd), 0x39);
        // CB 39 01A5
        gbc.setState(0x6053, 0xdf50, 0xee90, 0x150d, 0xe21, 0xcd73, 0x1, 0x1);
        gbc.writeMem(0x6053, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdf50);
        EXPECT(gbc.pc(), 0x6055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01A7
        gbc.setState(0x9bb6, 0xa919, 0x4f00, 0xe70d, 0xdcaa, 0x74d9, 0x1, 0x1);
        gbc.writeMem(0x9bb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa919);
        EXPECT(gbc.pc(), 0x9bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb6), 0xcb);
        EXPECT(gbc.readMem(0x9bb7), 0x39);
        // CB 39 01A8
        gbc.setState(0x8a56, 0xa34d, 0x6150, 0x2ce5, 0xf4da, 0xc699, 0x1, 0x1);
        gbc.writeMem(0x8a56, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0x8a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a56), 0xcb);
        EXPECT(gbc.readMem(0x8a57), 0x39);
        // CB 39 01AB
        gbc.setState(0x5378, 0xed3c, 0xc5c0, 0x2f29, 0x56b, 0x8396, 0x1, 0x1);
        gbc.writeMem(0x5378, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0x537a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01AC
        gbc.setState(0xc54c, 0x4a57, 0xcc20, 0x30b8, 0x7d6f, 0x6685, 0x1, 0x1);
        gbc.writeMem(0xc54c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0xc54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54c), 0xcb);
        EXPECT(gbc.readMem(0xc54d), 0x39);
        // CB 39 01AD
        gbc.setState(0x8a3e, 0x432d, 0x1a10, 0x487, 0x2cbd, 0x3594, 0x0, 0x0);
        gbc.writeMem(0x8a3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x432d);
        EXPECT(gbc.pc(), 0x8a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3e), 0xcb);
        EXPECT(gbc.readMem(0x8a3f), 0x39);
        // CB 39 01AE
        gbc.setState(0xefde, 0x5b61, 0x3b70, 0xd1fd, 0x18d4, 0x9009, 0x1, 0x1);
        gbc.writeMem(0xefde, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5b61);
        EXPECT(gbc.pc(), 0xefe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefde), 0xcb);
        EXPECT(gbc.readMem(0xefdf), 0x39);
        // CB 39 01AF
        gbc.setState(0xaab6, 0x99ec, 0xf870, 0x679b, 0xdbac, 0xdec, 0x1, 0x1);
        gbc.writeMem(0xaab6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x99ec);
        EXPECT(gbc.pc(), 0xaab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab6), 0xcb);
        EXPECT(gbc.readMem(0xaab7), 0x39);
        // CB 39 01B1
        gbc.setState(0xbf1, 0x49e1, 0x9050, 0x517d, 0xe9e9, 0x8f14, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x49e1);
        EXPECT(gbc.pc(), 0xbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01B2
        gbc.setState(0x52a2, 0x5a24, 0x8440, 0x2ef4, 0x3b4a, 0xa811, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01B3
        gbc.setState(0xa028, 0x7066, 0x4380, 0x3f4e, 0xfcba, 0xa3cc, 0x1, 0x0);
        gbc.writeMem(0xa028, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7066);
        EXPECT(gbc.pc(), 0xa02a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa028), 0xcb);
        EXPECT(gbc.readMem(0xa029), 0x39);
        // CB 39 01B4
        gbc.setState(0x2f06, 0x2b3f, 0x6210, 0x1f70, 0x3b33, 0x5f27, 0x0, 0x0);
        gbc.writeMem(0x2f06, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2b3f);
        EXPECT(gbc.pc(), 0x2f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01B5
        gbc.setState(0xd848, 0xb09c, 0xdb0, 0x793a, 0x7ed4, 0x774a, 0x0, 0x0);
        gbc.writeMem(0xd848, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb09c);
        EXPECT(gbc.pc(), 0xd84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd848), 0xcb);
        EXPECT(gbc.readMem(0xd849), 0x39);
        // CB 39 01B6
        gbc.setState(0x165b, 0x2e7c, 0x5b60, 0x9a96, 0xff91, 0xea4f, 0x0, 0x1);
        gbc.writeMem(0x165b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0x165d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01B8
        gbc.setState(0x488f, 0x6aa6, 0x90, 0xe363, 0x2408, 0xe37d, 0x0, 0x0);
        gbc.writeMem(0x488f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6aa6);
        EXPECT(gbc.pc(), 0x4891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01B9
        gbc.setState(0x7a3b, 0x49a2, 0x4580, 0x76e9, 0x4012, 0x736, 0x0, 0x0);
        gbc.writeMem(0x7a3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0x7a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01BA
        gbc.setState(0x5007, 0x8e1f, 0xaae0, 0xcf7a, 0x80b2, 0xdb89, 0x0, 0x1);
        gbc.writeMem(0x5007, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8e1f);
        EXPECT(gbc.pc(), 0x5009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01BB
        gbc.setState(0x2a3b, 0xf55f, 0xa7c0, 0x71ed, 0x61c8, 0x5efb, 0x1, 0x1);
        gbc.writeMem(0x2a3b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf55f);
        EXPECT(gbc.pc(), 0x2a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01BC
        gbc.setState(0x746, 0x9c7, 0x6360, 0xf70e, 0x550a, 0x3414, 0x0, 0x1);
        gbc.writeMem(0x746, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9c7);
        EXPECT(gbc.pc(), 0x748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01BD
        gbc.setState(0x3c5f, 0x7b4a, 0x3e20, 0x53b7, 0xa030, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0x3c5f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0x3c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01BE
        gbc.setState(0x2dff, 0x4ec5, 0x4c60, 0xf607, 0x3d78, 0x205b, 0x1, 0x1);
        gbc.writeMem(0x2dff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4ec5);
        EXPECT(gbc.pc(), 0x2e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01BF
        gbc.setState(0xc39b, 0x3ef8, 0x7250, 0xec84, 0x952a, 0x3a92, 0x1, 0x0);
        gbc.writeMem(0xc39b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3ef8);
        EXPECT(gbc.pc(), 0xc39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39b), 0xcb);
        EXPECT(gbc.readMem(0xc39c), 0x39);
        // CB 39 01C0
        gbc.setState(0x42e8, 0x9607, 0xf670, 0x7fe8, 0x4045, 0x6de9, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0x42ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01C1
        gbc.setState(0x9313, 0xf128, 0xd6c0, 0xc740, 0x2d07, 0x8121, 0x1, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf128);
        EXPECT(gbc.pc(), 0x9315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9313), 0xcb);
        EXPECT(gbc.readMem(0x9314), 0x39);
        // CB 39 01C2
        gbc.setState(0x50c4, 0x5414, 0xda10, 0xd30a, 0x6f0c, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0x50c4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5414);
        EXPECT(gbc.pc(), 0x50c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01C3
        gbc.setState(0xb9ac, 0x5eab, 0xd30, 0x69e8, 0x56dc, 0x54ca, 0x0, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5eab);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ac), 0xcb);
        EXPECT(gbc.readMem(0xb9ad), 0x39);
        // CB 39 01C4
        gbc.setState(0x2fa, 0x13a, 0xdb70, 0x7327, 0xe8d2, 0x8434, 0x0, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0x2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01C5
        gbc.setState(0xd6e7, 0x1df0, 0xaf30, 0x456, 0x87e6, 0xbf08, 0x0, 0x1);
        gbc.writeMem(0xd6e7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1df0);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e7), 0xcb);
        EXPECT(gbc.readMem(0xd6e8), 0x39);
        // CB 39 01C6
        gbc.setState(0x6ee6, 0x9ab2, 0x7f0, 0xfa49, 0xd651, 0x3785, 0x0, 0x1);
        gbc.writeMem(0x6ee6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9ab2);
        EXPECT(gbc.pc(), 0x6ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01C7
        gbc.setState(0x15ed, 0xcd87, 0xa980, 0x603b, 0x1707, 0x366a, 0x0, 0x0);
        gbc.writeMem(0x15ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcd87);
        EXPECT(gbc.pc(), 0x15ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01C8
        gbc.setState(0xaad0, 0x19e1, 0xae20, 0x58ca, 0xcbc, 0xe228, 0x0, 0x0);
        gbc.writeMem(0xaad0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x19e1);
        EXPECT(gbc.pc(), 0xaad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad0), 0xcb);
        EXPECT(gbc.readMem(0xaad1), 0x39);
        // CB 39 01C9
        gbc.setState(0xa67d, 0x21f2, 0x69f0, 0xfff, 0x7108, 0xc6ad, 0x0, 0x0);
        gbc.writeMem(0xa67d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x21f2);
        EXPECT(gbc.pc(), 0xa67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67d), 0xcb);
        EXPECT(gbc.readMem(0xa67e), 0x39);
        // CB 39 01CB
        gbc.setState(0xff7, 0xab70, 0xa3a0, 0x48e0, 0x7bea, 0x7db0, 0x0, 0x1);
        gbc.writeMem(0xff7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xab70);
        EXPECT(gbc.pc(), 0xff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01CC
        gbc.setState(0x8473, 0xc59e, 0x16f0, 0xe943, 0xba2b, 0xad78, 0x1, 0x0);
        gbc.writeMem(0x8473, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc59e);
        EXPECT(gbc.pc(), 0x8475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8473), 0xcb);
        EXPECT(gbc.readMem(0x8474), 0x39);
        // CB 39 01CD
        gbc.setState(0x74a4, 0xa018, 0xd120, 0x5621, 0xa88e, 0xe39c, 0x0, 0x0);
        gbc.writeMem(0x74a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa018);
        EXPECT(gbc.pc(), 0x74a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01CE
        gbc.setState(0x8a72, 0x11a8, 0xe860, 0x1b1a, 0xb24, 0x5349, 0x1, 0x1);
        gbc.writeMem(0x8a72, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x11a8);
        EXPECT(gbc.pc(), 0x8a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a72), 0xcb);
        EXPECT(gbc.readMem(0x8a73), 0x39);
        // CB 39 01CF
        gbc.setState(0xda0d, 0x33ee, 0x3110, 0x3dec, 0x97ea, 0xb79c, 0x0, 0x1);
        gbc.writeMem(0xda0d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x33ee);
        EXPECT(gbc.pc(), 0xda0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0d), 0xcb);
        EXPECT(gbc.readMem(0xda0e), 0x39);
        // CB 39 01D0
        gbc.setState(0x7263, 0x4210, 0x41d0, 0x203d, 0x665, 0x9377, 0x0, 0x1);
        gbc.writeMem(0x7263, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4210);
        EXPECT(gbc.pc(), 0x7265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01D1
        gbc.setState(0x4832, 0xaca5, 0x68a0, 0x7f20, 0x91f8, 0x8159, 0x0, 0x0);
        gbc.writeMem(0x4832, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xaca5);
        EXPECT(gbc.pc(), 0x4834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01D3
        gbc.setState(0xecf6, 0xb84e, 0x6070, 0xafef, 0x8b05, 0x2300, 0x1, 0x0);
        gbc.writeMem(0xecf6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb84e);
        EXPECT(gbc.pc(), 0xecf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf6), 0xcb);
        EXPECT(gbc.readMem(0xecf7), 0x39);
        // CB 39 01D4
        gbc.setState(0x8c5, 0xb9bc, 0xb350, 0x8459, 0x3970, 0x3b1b, 0x0, 0x0);
        gbc.writeMem(0x8c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb9bc);
        EXPECT(gbc.pc(), 0x8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01D5
        gbc.setState(0xca92, 0x19a1, 0x7ae0, 0x426c, 0x4b1e, 0xeb12, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x19a1);
        EXPECT(gbc.pc(), 0xca94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca92), 0xcb);
        EXPECT(gbc.readMem(0xca93), 0x39);
        // CB 39 01D6
        gbc.setState(0x13dc, 0xadc, 0xa080, 0xaa2, 0xdfe1, 0x4ba7, 0x0, 0x1);
        gbc.writeMem(0x13dc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xadc);
        EXPECT(gbc.pc(), 0x13de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01D7
        gbc.setState(0x4d23, 0xab67, 0x6130, 0x6674, 0x91cc, 0x9b49, 0x1, 0x1);
        gbc.writeMem(0x4d23, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xab67);
        EXPECT(gbc.pc(), 0x4d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01D9
        gbc.setState(0x7467, 0x3c7f, 0x7ba0, 0xb61c, 0x6fea, 0x84a9, 0x0, 0x0);
        gbc.writeMem(0x7467, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3c7f);
        EXPECT(gbc.pc(), 0x7469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01DA
        gbc.setState(0xcd94, 0x2da9, 0x7220, 0xae85, 0x71aa, 0x2def, 0x0, 0x0);
        gbc.writeMem(0xcd94, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2da9);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd94), 0xcb);
        EXPECT(gbc.readMem(0xcd95), 0x39);
        // CB 39 01DB
        gbc.setState(0x8f1f, 0xc6fd, 0x4d90, 0xb6ca, 0x187a, 0x2db5, 0x1, 0x1);
        gbc.writeMem(0x8f1f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0x8f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1f), 0xcb);
        EXPECT(gbc.readMem(0x8f20), 0x39);
        // CB 39 01DC
        gbc.setState(0x5e26, 0x9416, 0xc310, 0x79be, 0x6579, 0xa293, 0x0, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01DD
        gbc.setState(0x63d5, 0x5c26, 0xc0e0, 0x2e09, 0xbc29, 0x8aa, 0x1, 0x0);
        gbc.writeMem(0x63d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5c26);
        EXPECT(gbc.pc(), 0x63d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01DE
        gbc.setState(0x99e9, 0xfd36, 0x4fe0, 0x6d18, 0xa539, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0x99eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e9), 0xcb);
        EXPECT(gbc.readMem(0x99ea), 0x39);
        // CB 39 01DF
        gbc.setState(0x5c70, 0x3055, 0x6b20, 0x3859, 0xf5fd, 0xa0d3, 0x1, 0x0);
        gbc.writeMem(0x5c70, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3055);
        EXPECT(gbc.pc(), 0x5c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01E0
        gbc.setState(0x9355, 0xfe0a, 0xa0b0, 0x6a82, 0xaa30, 0xbb90, 0x1, 0x1);
        gbc.writeMem(0x9355, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfe0a);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9355), 0xcb);
        EXPECT(gbc.readMem(0x9356), 0x39);
        // CB 39 01E1
        gbc.setState(0xecc4, 0xf82e, 0x5ed0, 0xa4f0, 0xd1d9, 0xadb8, 0x1, 0x0);
        gbc.writeMem(0xecc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf82e);
        EXPECT(gbc.pc(), 0xecc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc4), 0xcb);
        EXPECT(gbc.readMem(0xecc5), 0x39);
        // CB 39 01E2
        gbc.setState(0xb178, 0x7861, 0x2420, 0xfce7, 0x2e6a, 0xed, 0x1, 0x0);
        gbc.writeMem(0xb178, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7861);
        EXPECT(gbc.pc(), 0xb17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb178), 0xcb);
        EXPECT(gbc.readMem(0xb179), 0x39);
        // CB 39 01E3
        gbc.setState(0x4809, 0x2f21, 0xda30, 0x195a, 0xa487, 0xd93a, 0x0, 0x0);
        gbc.writeMem(0x4809, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2f21);
        EXPECT(gbc.pc(), 0x480b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01E4
        gbc.setState(0x940c, 0x865f, 0xbdc0, 0x38b4, 0xebe7, 0x1d93, 0x1, 0x0);
        gbc.writeMem(0x940c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x865f);
        EXPECT(gbc.pc(), 0x940e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940c), 0xcb);
        EXPECT(gbc.readMem(0x940d), 0x39);
        // CB 39 01E5
        gbc.setState(0x8a41, 0x4050, 0x8240, 0x880, 0xb1ff, 0xb040, 0x0, 0x0);
        gbc.writeMem(0x8a41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4050);
        EXPECT(gbc.pc(), 0x8a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a41), 0xcb);
        EXPECT(gbc.readMem(0x8a42), 0x39);
        // CB 39 01E6
        gbc.setState(0x887a, 0xd1be, 0x53d0, 0x4fad, 0x4e72, 0x8f36, 0x0, 0x1);
        gbc.writeMem(0x887a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd1be);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887a), 0xcb);
        EXPECT(gbc.readMem(0x887b), 0x39);
        // CB 39 01E7
        gbc.setState(0x8191, 0xb6bf, 0x5c50, 0x3b2c, 0x1265, 0x9575, 0x1, 0x1);
        gbc.writeMem(0x8191, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb6bf);
        EXPECT(gbc.pc(), 0x8193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8191), 0xcb);
        EXPECT(gbc.readMem(0x8192), 0x39);
        // CB 39 01E8
        gbc.setState(0xa934, 0xf626, 0xc810, 0x52d1, 0x7404, 0x8dd8, 0x1, 0x0);
        gbc.writeMem(0xa934, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf626);
        EXPECT(gbc.pc(), 0xa936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa934), 0xcb);
        EXPECT(gbc.readMem(0xa935), 0x39);
        // CB 39 01E9
        gbc.setState(0x5713, 0xb4dc, 0xb900, 0x2116, 0x3cc2, 0xce1a, 0x1, 0x0);
        gbc.writeMem(0x5713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb4dc);
        EXPECT(gbc.pc(), 0x5715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01EA
        gbc.setState(0x1f6e, 0xaa3c, 0xb7e0, 0x4b53, 0x4937, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x1f6e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaa3c);
        EXPECT(gbc.pc(), 0x1f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01EB
        gbc.setState(0xdc8b, 0xbd9a, 0xa8c0, 0xef72, 0xe50b, 0xfd01, 0x1, 0x0);
        gbc.writeMem(0xdc8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbd9a);
        EXPECT(gbc.pc(), 0xdc8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8b), 0xcb);
        EXPECT(gbc.readMem(0xdc8c), 0x39);
        // CB 39 01ED
        gbc.setState(0x858, 0x53e2, 0x3b70, 0xcf9c, 0x1b9b, 0x56d4, 0x0, 0x1);
        gbc.writeMem(0x858, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x53e2);
        EXPECT(gbc.pc(), 0x85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01EE
        gbc.setState(0x25bd, 0xb15d, 0x4fb0, 0xb1, 0x8cea, 0xaea2, 0x1, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb15d);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01EF
        gbc.setState(0x85c7, 0xedc6, 0x2f60, 0x438e, 0xefa2, 0x7f12, 0x1, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xedc6);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c7), 0xcb);
        EXPECT(gbc.readMem(0x85c8), 0x39);
        // CB 39 01F0
        gbc.setState(0x1b08, 0x6db1, 0x8950, 0xd49d, 0x4270, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x1b08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6db1);
        EXPECT(gbc.pc(), 0x1b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01F1
        gbc.setState(0x154b, 0x97c9, 0x2d0, 0xbaa5, 0x88a, 0x678c, 0x0, 0x0);
        gbc.writeMem(0x154b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x97c9);
        EXPECT(gbc.pc(), 0x154d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01F3
        gbc.setState(0x9926, 0xc7fb, 0xd170, 0xadae, 0xd349, 0x111, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc7fb);
        EXPECT(gbc.pc(), 0x9928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9926), 0xcb);
        EXPECT(gbc.readMem(0x9927), 0x39);
        // CB 39 01F4
        gbc.setState(0xd790, 0xb6c2, 0xb30, 0x55d2, 0x644, 0x4459, 0x1, 0x0);
        gbc.writeMem(0xd790, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb6c2);
        EXPECT(gbc.pc(), 0xd792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd790), 0xcb);
        EXPECT(gbc.readMem(0xd791), 0x39);
        // CB 39 01F5
        gbc.setState(0x74b7, 0x196a, 0x8d60, 0xe4b, 0xad0e, 0xe68e, 0x1, 0x0);
        gbc.writeMem(0x74b7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x196a);
        EXPECT(gbc.pc(), 0x74b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01F6
        gbc.setState(0x60a9, 0x9fd1, 0xca00, 0xda6, 0x539e, 0x1c07, 0x0, 0x1);
        gbc.writeMem(0x60a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9fd1);
        EXPECT(gbc.pc(), 0x60ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01F7
        gbc.setState(0xb458, 0x137b, 0x3d40, 0x4873, 0xe511, 0x7674, 0x1, 0x0);
        gbc.writeMem(0xb458, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x137b);
        EXPECT(gbc.pc(), 0xb45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb458), 0xcb);
        EXPECT(gbc.readMem(0xb459), 0x39);
        // CB 39 01F8
        gbc.setState(0x92bb, 0x1875, 0x8560, 0xf751, 0x8bd3, 0xe681, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1875);
        EXPECT(gbc.pc(), 0x92bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bb), 0xcb);
        EXPECT(gbc.readMem(0x92bc), 0x39);
        // CB 39 01F9
        gbc.setState(0xd336, 0xe3cf, 0x7e30, 0x94ce, 0xe57e, 0xa82c, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe3cf);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0x39);
        // CB 39 01FA
        gbc.setState(0x8484, 0x1020, 0x3220, 0xe550, 0x4c4a, 0xfe0, 0x1, 0x1);
        gbc.writeMem(0x8484, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1020);
        EXPECT(gbc.pc(), 0x8486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8484), 0xcb);
        EXPECT(gbc.readMem(0x8485), 0x39);
        // CB 39 01FB
        gbc.setState(0xbe41, 0x69f, 0x7240, 0xc4fb, 0xf8ec, 0x5bf6, 0x0, 0x0);
        gbc.writeMem(0xbe41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe41), 0xcb);
        EXPECT(gbc.readMem(0xbe42), 0x39);
        // CB 39 01FC
        gbc.setState(0x3560, 0xcee6, 0x1ce0, 0x38e2, 0x7509, 0x700, 0x1, 0x0);
        gbc.writeMem(0x3560, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcee6);
        EXPECT(gbc.pc(), 0x3562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 01FD
        gbc.setState(0x3dd0, 0x3994, 0x49e0, 0xad61, 0x5866, 0x6e9d, 0x0, 0x1);
        gbc.writeMem(0x3dd0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3994);
        EXPECT(gbc.pc(), 0x3dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 01FE
        gbc.setState(0xaaa5, 0xdc99, 0xf490, 0xfd51, 0x44d9, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0xaaa5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdc99);
        EXPECT(gbc.pc(), 0xaaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa5), 0xcb);
        EXPECT(gbc.readMem(0xaaa6), 0x39);
        // CB 39 01FF
        gbc.setState(0x9e5, 0x100e, 0x8950, 0xf405, 0x7f2a, 0xb09a, 0x0, 0x1);
        gbc.writeMem(0x9e5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x100e);
        EXPECT(gbc.pc(), 0x9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0200
        gbc.setState(0x6847, 0xf39e, 0x7af0, 0x414f, 0x6845, 0xb1c, 0x0, 0x1);
        gbc.writeMem(0x6847, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf39e);
        EXPECT(gbc.pc(), 0x6849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0201
        gbc.setState(0xabff, 0xc11b, 0xa760, 0xe1d4, 0x75bc, 0xc9da, 0x0, 0x0);
        gbc.writeMem(0xabff, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0xac01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabff), 0xcb);
        EXPECT(gbc.readMem(0xac00), 0x39);
        // CB 39 0202
        gbc.setState(0xdb41, 0x8572, 0xfa0, 0xb56e, 0x508c, 0xbdb9, 0x1, 0x0);
        gbc.writeMem(0xdb41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8572);
        EXPECT(gbc.pc(), 0xdb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb41), 0xcb);
        EXPECT(gbc.readMem(0xdb42), 0x39);
        // CB 39 0204
        gbc.setState(0x3b3e, 0xfa46, 0x5af0, 0xca9e, 0x885b, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x3b3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfa46);
        EXPECT(gbc.pc(), 0x3b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0205
        gbc.setState(0x7a0e, 0x6a75, 0x5ef0, 0x93cb, 0xfa23, 0x9399, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6a75);
        EXPECT(gbc.pc(), 0x7a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0206
        gbc.setState(0xecea, 0xfec3, 0x26d0, 0x5f33, 0x585, 0xf2f1, 0x0, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfec3);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0x39);
        // CB 39 0207
        gbc.setState(0xb763, 0x5197, 0xb7b0, 0xa5dd, 0xe219, 0x4dbf, 0x0, 0x0);
        gbc.writeMem(0xb763, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0xb765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb763), 0xcb);
        EXPECT(gbc.readMem(0xb764), 0x39);
        // CB 39 0208
        gbc.setState(0x6f8b, 0x5267, 0xbc70, 0xce, 0x653a, 0xa151, 0x1, 0x0);
        gbc.writeMem(0x6f8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5267);
        EXPECT(gbc.pc(), 0x6f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 020A
        gbc.setState(0xd3aa, 0x707a, 0x5160, 0x4448, 0x2c21, 0x8e1e, 0x0, 0x0);
        gbc.writeMem(0xd3aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x707a);
        EXPECT(gbc.pc(), 0xd3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3aa), 0xcb);
        EXPECT(gbc.readMem(0xd3ab), 0x39);
        // CB 39 020B
        gbc.setState(0xb299, 0xc9d7, 0xe9f0, 0x5a97, 0x680c, 0x4681, 0x1, 0x1);
        gbc.writeMem(0xb299, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc9d7);
        EXPECT(gbc.pc(), 0xb29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb299), 0xcb);
        EXPECT(gbc.readMem(0xb29a), 0x39);
        // CB 39 020C
        gbc.setState(0xe76e, 0x253c, 0x6640, 0xab35, 0xf1a9, 0xaf95, 0x0, 0x0);
        gbc.writeMem(0xe76e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x253c);
        EXPECT(gbc.pc(), 0xe770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76e), 0xcb);
        EXPECT(gbc.readMem(0xe76f), 0x39);
        // CB 39 020D
        gbc.setState(0x4d14, 0x1394, 0x7040, 0xdb5f, 0xbbca, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x4d14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1394);
        EXPECT(gbc.pc(), 0x4d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 020E
        gbc.setState(0xb08d, 0x7b8f, 0x3c60, 0xfcb8, 0x11ab, 0xbe6e, 0x1, 0x0);
        gbc.writeMem(0xb08d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7b8f);
        EXPECT(gbc.pc(), 0xb08f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08d), 0xcb);
        EXPECT(gbc.readMem(0xb08e), 0x39);
        // CB 39 020F
        gbc.setState(0x6935, 0x9aba, 0x1b60, 0x9ca9, 0x4263, 0x8be6, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9aba);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0210
        gbc.setState(0xaaab, 0xa0ec, 0x76c0, 0x77dd, 0x13f2, 0xade4, 0x0, 0x1);
        gbc.writeMem(0xaaab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0xaaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaab), 0xcb);
        EXPECT(gbc.readMem(0xaaac), 0x39);
        // CB 39 0211
        gbc.setState(0x95ce, 0xeca8, 0x2340, 0xb80, 0xb43e, 0xd256, 0x1, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0x95d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ce), 0xcb);
        EXPECT(gbc.readMem(0x95cf), 0x39);
        // CB 39 0212
        gbc.setState(0xce5e, 0x60e7, 0xb8b0, 0x4712, 0x964d, 0x265e, 0x0, 0x0);
        gbc.writeMem(0xce5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x60e7);
        EXPECT(gbc.pc(), 0xce60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5e), 0xcb);
        EXPECT(gbc.readMem(0xce5f), 0x39);
        // CB 39 0213
        gbc.setState(0xbeb6, 0x8964, 0x8a80, 0x8744, 0xdc1c, 0xfc68, 0x0, 0x1);
        gbc.writeMem(0xbeb6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8964);
        EXPECT(gbc.pc(), 0xbeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb6), 0xcb);
        EXPECT(gbc.readMem(0xbeb7), 0x39);
        // CB 39 0214
        gbc.setState(0x7fed, 0x344e, 0x7210, 0x1d72, 0xdd2e, 0xb126, 0x0, 0x0);
        gbc.writeMem(0x7fed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x344e);
        EXPECT(gbc.pc(), 0x7fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0215
        gbc.setState(0x3416, 0xb56e, 0x4550, 0x97b9, 0xda61, 0xd690, 0x0, 0x1);
        gbc.writeMem(0x3416, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb56e);
        EXPECT(gbc.pc(), 0x3418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0216
        gbc.setState(0x252e, 0x851d, 0x48e0, 0x7c18, 0x1e7f, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0x252e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x851d);
        EXPECT(gbc.pc(), 0x2530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0217
        gbc.setState(0x9754, 0x73af, 0x56f0, 0x8fc6, 0xd0ca, 0x7dac, 0x0, 0x0);
        gbc.writeMem(0x9754, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x73af);
        EXPECT(gbc.pc(), 0x9756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9754), 0xcb);
        EXPECT(gbc.readMem(0x9755), 0x39);
        // CB 39 0218
        gbc.setState(0xb516, 0xf265, 0xb4e0, 0xd9eb, 0x1305, 0xab61, 0x1, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf265);
        EXPECT(gbc.pc(), 0xb518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb516), 0xcb);
        EXPECT(gbc.readMem(0xb517), 0x39);
        // CB 39 0219
        gbc.setState(0x176c, 0x8500, 0x570, 0x90b2, 0x6d63, 0xb329, 0x1, 0x1);
        gbc.writeMem(0x176c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8500);
        EXPECT(gbc.pc(), 0x176e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 021A
        gbc.setState(0x9814, 0x6585, 0xeb20, 0xd54a, 0x701f, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0x9814, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6585);
        EXPECT(gbc.pc(), 0x9816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9814), 0xcb);
        EXPECT(gbc.readMem(0x9815), 0x39);
        // CB 39 021B
        gbc.setState(0x31d, 0xc64, 0x4600, 0xdde1, 0xaec1, 0x60c2, 0x1, 0x1);
        gbc.writeMem(0x31d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0x31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 021C
        gbc.setState(0xbbe1, 0x3fe7, 0x9ad0, 0xf93b, 0xc706, 0x7733, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3fe7);
        EXPECT(gbc.pc(), 0xbbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe1), 0xcb);
        EXPECT(gbc.readMem(0xbbe2), 0x39);
        // CB 39 021D
        gbc.setState(0x369f, 0x1722, 0xfb80, 0x7888, 0xfd98, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0x369f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1722);
        EXPECT(gbc.pc(), 0x36a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 021E
        gbc.setState(0x98bb, 0xdd4c, 0x3ad0, 0x343e, 0xfdd6, 0x5416, 0x1, 0x1);
        gbc.writeMem(0x98bb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0x98bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98bb), 0xcb);
        EXPECT(gbc.readMem(0x98bc), 0x39);
        // CB 39 021F
        gbc.setState(0x9132, 0x47c7, 0x4360, 0xf12a, 0x3d84, 0xc7c1, 0x1, 0x1);
        gbc.writeMem(0x9132, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x47c7);
        EXPECT(gbc.pc(), 0x9134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9132), 0xcb);
        EXPECT(gbc.readMem(0x9133), 0x39);
        // CB 39 0220
        gbc.setState(0x9b35, 0x3a50, 0x6190, 0x273, 0x42dc, 0x83de, 0x1, 0x1);
        gbc.writeMem(0x9b35, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3a50);
        EXPECT(gbc.pc(), 0x9b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b35), 0xcb);
        EXPECT(gbc.readMem(0x9b36), 0x39);
        // CB 39 0221
        gbc.setState(0xb841, 0x743, 0xdb70, 0x1fdc, 0x6770, 0xe50e, 0x0, 0x0);
        gbc.writeMem(0xb841, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x743);
        EXPECT(gbc.pc(), 0xb843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb841), 0xcb);
        EXPECT(gbc.readMem(0xb842), 0x39);
        // CB 39 0222
        gbc.setState(0x38e3, 0xb019, 0x6290, 0x68dd, 0xe69c, 0x627e, 0x1, 0x0);
        gbc.writeMem(0x38e3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb019);
        EXPECT(gbc.pc(), 0x38e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0223
        gbc.setState(0x1cec, 0xd42, 0x3220, 0x1d1b, 0xbb4e, 0xb061, 0x0, 0x1);
        gbc.writeMem(0x1cec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd42);
        EXPECT(gbc.pc(), 0x1cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0224
        gbc.setState(0x4e74, 0x91a2, 0x21f0, 0xbe86, 0x57ff, 0xa953, 0x0, 0x1);
        gbc.writeMem(0x4e74, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x91a2);
        EXPECT(gbc.pc(), 0x4e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0225
        gbc.setState(0xb9cf, 0xdf32, 0x6240, 0x19f4, 0xf524, 0x4091, 0x1, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdf32);
        EXPECT(gbc.pc(), 0xb9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cf), 0xcb);
        EXPECT(gbc.readMem(0xb9d0), 0x39);
        // CB 39 0226
        gbc.setState(0x3338, 0xed0a, 0xe450, 0x31e1, 0xe547, 0xe115, 0x1, 0x0);
        gbc.writeMem(0x3338, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x333a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0227
        gbc.setState(0xd4b8, 0x5289, 0xda30, 0x8f01, 0x3cd3, 0x99bb, 0x1, 0x0);
        gbc.writeMem(0xd4b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5289);
        EXPECT(gbc.pc(), 0xd4ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b8), 0xcb);
        EXPECT(gbc.readMem(0xd4b9), 0x39);
        // CB 39 0228
        gbc.setState(0x7b5e, 0x3d5d, 0xcb80, 0x6461, 0x759c, 0x5a18, 0x0, 0x0);
        gbc.writeMem(0x7b5e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3d5d);
        EXPECT(gbc.pc(), 0x7b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0229
        gbc.setState(0x20ed, 0x2c8f, 0x4370, 0x2935, 0xd884, 0xe943, 0x0, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2c8f);
        EXPECT(gbc.pc(), 0x20ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 022A
        gbc.setState(0xba2e, 0x124f, 0x9000, 0x9aef, 0xc294, 0x2e49, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x124f);
        EXPECT(gbc.pc(), 0xba30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2e), 0xcb);
        EXPECT(gbc.readMem(0xba2f), 0x39);
        // CB 39 022B
        gbc.setState(0x16ce, 0x600c, 0x79d0, 0x87f3, 0xa1b5, 0x6a3a, 0x1, 0x0);
        gbc.writeMem(0x16ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x16d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 022C
        gbc.setState(0xb0d5, 0xa816, 0xdde0, 0x8f0a, 0xa14c, 0x36ac, 0x1, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa816);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0x39);
        // CB 39 022D
        gbc.setState(0x213d, 0x6fef, 0x27c0, 0x36da, 0x90e8, 0xc0ed, 0x1, 0x0);
        gbc.writeMem(0x213d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6fef);
        EXPECT(gbc.pc(), 0x213f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 022E
        gbc.setState(0x75dc, 0xd96a, 0xade0, 0x2678, 0x67e0, 0x6ffe, 0x1, 0x1);
        gbc.writeMem(0x75dc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd96a);
        EXPECT(gbc.pc(), 0x75de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 022F
        gbc.setState(0x9ec7, 0x7f45, 0xc550, 0xf11b, 0xec47, 0x22f, 0x0, 0x1);
        gbc.writeMem(0x9ec7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7f45);
        EXPECT(gbc.pc(), 0x9ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec7), 0xcb);
        EXPECT(gbc.readMem(0x9ec8), 0x39);
        // CB 39 0230
        gbc.setState(0xedc, 0x19c, 0x1100, 0xb6fa, 0x1ad6, 0xcc12, 0x1, 0x0);
        gbc.writeMem(0xedc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x19c);
        EXPECT(gbc.pc(), 0xede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0231
        gbc.setState(0xc7e1, 0x34b9, 0xe2f0, 0x15a4, 0x16ee, 0xff28, 0x1, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x34b9);
        EXPECT(gbc.pc(), 0xc7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e1), 0xcb);
        EXPECT(gbc.readMem(0xc7e2), 0x39);
        // CB 39 0232
        gbc.setState(0x782e, 0x2e68, 0x3d90, 0x3f3d, 0x43da, 0x615b, 0x0, 0x1);
        gbc.writeMem(0x782e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2e68);
        EXPECT(gbc.pc(), 0x7830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0233
        gbc.setState(0x286d, 0x4382, 0x7c50, 0x4823, 0xbd32, 0x434a, 0x0, 0x0);
        gbc.writeMem(0x286d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4382);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0234
        gbc.setState(0xd97c, 0xeaa, 0x75a0, 0xffc, 0xf87c, 0x981f, 0x0, 0x1);
        gbc.writeMem(0xd97c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0xd97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97c), 0xcb);
        EXPECT(gbc.readMem(0xd97d), 0x39);
        // CB 39 0235
        gbc.setState(0x7c52, 0xfcfd, 0xc9b0, 0xe2d2, 0x8dee, 0xd070, 0x0, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfcfd);
        EXPECT(gbc.pc(), 0x7c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0236
        gbc.setState(0x85c8, 0xb462, 0xef50, 0xcf78, 0x1eaf, 0x3856, 0x0, 0x0);
        gbc.writeMem(0x85c8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb462);
        EXPECT(gbc.pc(), 0x85ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c8), 0xcb);
        EXPECT(gbc.readMem(0x85c9), 0x39);
        // CB 39 0237
        gbc.setState(0xd5f3, 0xf5b3, 0x3de0, 0x6ca9, 0x54b5, 0x5dfd, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf5b3);
        EXPECT(gbc.pc(), 0xd5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f3), 0xcb);
        EXPECT(gbc.readMem(0xd5f4), 0x39);
        // CB 39 0238
        gbc.setState(0x35c4, 0x2515, 0xea10, 0x41c7, 0xffc1, 0x9aab, 0x0, 0x0);
        gbc.writeMem(0x35c4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2515);
        EXPECT(gbc.pc(), 0x35c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0239
        gbc.setState(0x2edf, 0x4984, 0x5790, 0xf5fc, 0x88ed, 0x6937, 0x1, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4984);
        EXPECT(gbc.pc(), 0x2ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 023A
        gbc.setState(0xdbf7, 0x8089, 0xc6b0, 0xf25b, 0x6dee, 0x4232, 0x1, 0x1);
        gbc.writeMem(0xdbf7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8089);
        EXPECT(gbc.pc(), 0xdbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf7), 0xcb);
        EXPECT(gbc.readMem(0xdbf8), 0x39);
        // CB 39 023B
        gbc.setState(0x52a9, 0x6314, 0xfd10, 0x7a0f, 0xc3b4, 0xeb75, 0x1, 0x1);
        gbc.writeMem(0x52a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6314);
        EXPECT(gbc.pc(), 0x52ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 023C
        gbc.setState(0xa216, 0x54d4, 0xc310, 0x9f00, 0x7f16, 0x1b3e, 0x0, 0x0);
        gbc.writeMem(0xa216, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x54d4);
        EXPECT(gbc.pc(), 0xa218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa216), 0xcb);
        EXPECT(gbc.readMem(0xa217), 0x39);
        // CB 39 023D
        gbc.setState(0x8ed7, 0x98ed, 0x64c0, 0xb158, 0x4f7a, 0xd665, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0x8ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed7), 0xcb);
        EXPECT(gbc.readMem(0x8ed8), 0x39);
        // CB 39 023E
        gbc.setState(0x5ac5, 0x98cf, 0x8650, 0x9e67, 0xdb0c, 0xcaa0, 0x1, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x98cf);
        EXPECT(gbc.pc(), 0x5ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 023F
        gbc.setState(0x80e2, 0xbbad, 0x69c0, 0xf25, 0x5797, 0x5b51, 0x0, 0x1);
        gbc.writeMem(0x80e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbbad);
        EXPECT(gbc.pc(), 0x80e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e2), 0xcb);
        EXPECT(gbc.readMem(0x80e3), 0x39);
        // CB 39 0240
        gbc.setState(0x75a4, 0xdf49, 0xa050, 0x9bbf, 0xfcd1, 0xa3c2, 0x0, 0x0);
        gbc.writeMem(0x75a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdf49);
        EXPECT(gbc.pc(), 0x75a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0241
        gbc.setState(0x6998, 0x7e25, 0x6470, 0x3428, 0x8645, 0xcf59, 0x0, 0x1);
        gbc.writeMem(0x6998, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0x699a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0242
        gbc.setState(0xec45, 0xd9ac, 0xb40, 0x7ac2, 0x96a6, 0xd851, 0x0, 0x1);
        gbc.writeMem(0xec45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd9ac);
        EXPECT(gbc.pc(), 0xec47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec45), 0xcb);
        EXPECT(gbc.readMem(0xec46), 0x39);
        // CB 39 0244
        gbc.setState(0x450c, 0xc124, 0xabe0, 0xac3b, 0x32ab, 0xa887, 0x0, 0x1);
        gbc.writeMem(0x450c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc124);
        EXPECT(gbc.pc(), 0x450e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0245
        gbc.setState(0xd4db, 0xa643, 0x4f60, 0x98f2, 0xd362, 0x2490, 0x1, 0x0);
        gbc.writeMem(0xd4db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0xd4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4db), 0xcb);
        EXPECT(gbc.readMem(0xd4dc), 0x39);
        // CB 39 0246
        gbc.setState(0x2991, 0x6013, 0x1770, 0xbc8a, 0x8d47, 0xc027, 0x1, 0x0);
        gbc.writeMem(0x2991, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6013);
        EXPECT(gbc.pc(), 0x2993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0247
        gbc.setState(0xe6e0, 0xcdc9, 0xfdb0, 0xb6d1, 0xe686, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0xe6e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcdc9);
        EXPECT(gbc.pc(), 0xe6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e0), 0xcb);
        EXPECT(gbc.readMem(0xe6e1), 0x39);
        // CB 39 0248
        gbc.setState(0x3a08, 0x7b9f, 0x11a0, 0xd74a, 0xf1ce, 0xeb90, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7b9f);
        EXPECT(gbc.pc(), 0x3a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0249
        gbc.setState(0x7334, 0x2600, 0xe850, 0x2d61, 0x4ede, 0x78ab, 0x1, 0x0);
        gbc.writeMem(0x7334, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2600);
        EXPECT(gbc.pc(), 0x7336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 024A
        gbc.setState(0xa58e, 0x68d8, 0x8e00, 0x372c, 0xc04c, 0xc1e8, 0x0, 0x0);
        gbc.writeMem(0xa58e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0xa590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58e), 0xcb);
        EXPECT(gbc.readMem(0xa58f), 0x39);
        // CB 39 024B
        gbc.setState(0xa56, 0x9b2e, 0x4520, 0xbbf7, 0xb200, 0x618, 0x0, 0x0);
        gbc.writeMem(0xa56, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9b2e);
        EXPECT(gbc.pc(), 0xa58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 024C
        gbc.setState(0x2c9d, 0xbbab, 0xbe50, 0xf1ed, 0xd02e, 0x4ba2, 0x0, 0x1);
        gbc.writeMem(0x2c9d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbbab);
        EXPECT(gbc.pc(), 0x2c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 024E
        gbc.setState(0x1500, 0x4384, 0x8bb0, 0xf865, 0x5128, 0xd6bd, 0x0, 0x1);
        gbc.writeMem(0x1500, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4384);
        EXPECT(gbc.pc(), 0x1502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 024F
        gbc.setState(0x3365, 0x9fe4, 0xda70, 0x1fc6, 0xdd3f, 0x65e2, 0x0, 0x1);
        gbc.writeMem(0x3365, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9fe4);
        EXPECT(gbc.pc(), 0x3367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0250
        gbc.setState(0x1972, 0x5eda, 0xbc00, 0xd399, 0xd5d5, 0x84dc, 0x0, 0x1);
        gbc.writeMem(0x1972, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0x1974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0251
        gbc.setState(0xe6a, 0xd3c7, 0x4b80, 0xd1c1, 0xa1ec, 0x660, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd3c7);
        EXPECT(gbc.pc(), 0xe6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0252
        gbc.setState(0xaf6a, 0x43e4, 0x5090, 0x9d52, 0xb8ab, 0xfc05, 0x1, 0x0);
        gbc.writeMem(0xaf6a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x43e4);
        EXPECT(gbc.pc(), 0xaf6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6a), 0xcb);
        EXPECT(gbc.readMem(0xaf6b), 0x39);
        // CB 39 0253
        gbc.setState(0xbe7a, 0x161d, 0x7e80, 0xa12, 0xc795, 0xa3e2, 0x1, 0x0);
        gbc.writeMem(0xbe7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x161d);
        EXPECT(gbc.pc(), 0xbe7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7a), 0xcb);
        EXPECT(gbc.readMem(0xbe7b), 0x39);
        // CB 39 0254
        gbc.setState(0xab99, 0xbd9a, 0x56a0, 0x2f4, 0x451, 0x1c03, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbd9a);
        EXPECT(gbc.pc(), 0xab9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab99), 0xcb);
        EXPECT(gbc.readMem(0xab9a), 0x39);
        // CB 39 0255
        gbc.setState(0xe90a, 0x6723, 0x18f0, 0xa9f1, 0xf6a0, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0xe90a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6723);
        EXPECT(gbc.pc(), 0xe90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90a), 0xcb);
        EXPECT(gbc.readMem(0xe90b), 0x39);
        // CB 39 0256
        gbc.setState(0x8535, 0xdeee, 0x1ec0, 0xd4ac, 0xdd9a, 0x2781, 0x0, 0x0);
        gbc.writeMem(0x8535, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdeee);
        EXPECT(gbc.pc(), 0x8537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8535), 0xcb);
        EXPECT(gbc.readMem(0x8536), 0x39);
        // CB 39 0257
        gbc.setState(0xd05, 0x53a5, 0x5970, 0xcbb8, 0xb13e, 0xa2b4, 0x1, 0x0);
        gbc.writeMem(0xd05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x53a5);
        EXPECT(gbc.pc(), 0xd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0258
        gbc.setState(0x9a75, 0x5f54, 0x48b0, 0x4591, 0x8fde, 0x67d0, 0x0, 0x1);
        gbc.writeMem(0x9a75, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5f54);
        EXPECT(gbc.pc(), 0x9a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a75), 0xcb);
        EXPECT(gbc.readMem(0x9a76), 0x39);
        // CB 39 0259
        gbc.setState(0xedd1, 0xfea, 0x3090, 0x872, 0x6795, 0x1f13, 0x1, 0x0);
        gbc.writeMem(0xedd1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfea);
        EXPECT(gbc.pc(), 0xedd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd1), 0xcb);
        EXPECT(gbc.readMem(0xedd2), 0x39);
        // CB 39 025A
        gbc.setState(0x44c5, 0x702a, 0xf890, 0x2a64, 0x6c25, 0xb731, 0x1, 0x1);
        gbc.writeMem(0x44c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0x44c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 025C
        gbc.setState(0xcd05, 0xe158, 0x1dc0, 0xd392, 0x6a96, 0x186a, 0x1, 0x0);
        gbc.writeMem(0xcd05, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe158);
        EXPECT(gbc.pc(), 0xcd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd05), 0xcb);
        EXPECT(gbc.readMem(0xcd06), 0x39);
        // CB 39 025D
        gbc.setState(0xa0f7, 0x96f6, 0x6870, 0x6a3d, 0xd605, 0x2ae0, 0x1, 0x1);
        gbc.writeMem(0xa0f7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x96f6);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0x39);
        // CB 39 025E
        gbc.setState(0x92ed, 0x5227, 0x110, 0x6095, 0x8b4e, 0x36af, 0x1, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5227);
        EXPECT(gbc.pc(), 0x92ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ed), 0xcb);
        EXPECT(gbc.readMem(0x92ee), 0x39);
        // CB 39 025F
        gbc.setState(0xe5b8, 0x3bd6, 0xa3e0, 0x9f92, 0xb1a7, 0x78b1, 0x0, 0x1);
        gbc.writeMem(0xe5b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0xe5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b8), 0xcb);
        EXPECT(gbc.readMem(0xe5b9), 0x39);
        // CB 39 0260
        gbc.setState(0x7eb2, 0x610d, 0xc8c0, 0x45cc, 0x642e, 0x4816, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x610d);
        EXPECT(gbc.pc(), 0x7eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0261
        gbc.setState(0x9824, 0x905e, 0x2110, 0xdbb4, 0x4a5e, 0x4204, 0x0, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x905e);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9824), 0xcb);
        EXPECT(gbc.readMem(0x9825), 0x39);
        // CB 39 0262
        gbc.setState(0xbad8, 0xeff8, 0xb7c0, 0x7089, 0x96a7, 0xe254, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xeff8);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad8), 0xcb);
        EXPECT(gbc.readMem(0xbad9), 0x39);
        // CB 39 0263
        gbc.setState(0x270b, 0x6d9a, 0xd5f0, 0xb4ca, 0x8b7d, 0x51d9, 0x1, 0x0);
        gbc.writeMem(0x270b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6d9a);
        EXPECT(gbc.pc(), 0x270d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0264
        gbc.setState(0x37df, 0xc32b, 0xe4d0, 0x8bc2, 0x99ee, 0x9e3e, 0x1, 0x1);
        gbc.writeMem(0x37df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x37e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0265
        gbc.setState(0x3713, 0x8830, 0xe010, 0x67cf, 0xd2ba, 0x53a5, 0x0, 0x1);
        gbc.writeMem(0x3713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8830);
        EXPECT(gbc.pc(), 0x3715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0266
        gbc.setState(0x6578, 0x6058, 0x9c30, 0x7f2f, 0x8015, 0x957e, 0x0, 0x0);
        gbc.writeMem(0x6578, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6058);
        EXPECT(gbc.pc(), 0x657a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0267
        gbc.setState(0x3d40, 0x30da, 0x5100, 0x339e, 0x3d6c, 0xe828, 0x1, 0x1);
        gbc.writeMem(0x3d40, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x30da);
        EXPECT(gbc.pc(), 0x3d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0268
        gbc.setState(0x74ec, 0x9036, 0x6f40, 0x40bc, 0x8c2e, 0xc515, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9036);
        EXPECT(gbc.pc(), 0x74ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0269
        gbc.setState(0x2dc4, 0x9aeb, 0xf960, 0x5b74, 0x6fd6, 0x4265, 0x0, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9aeb);
        EXPECT(gbc.pc(), 0x2dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 026A
        gbc.setState(0x2cae, 0x9131, 0xf6f0, 0x3815, 0x7c12, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x2cae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9131);
        EXPECT(gbc.pc(), 0x2cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 026B
        gbc.setState(0xccb9, 0x7f94, 0xb5e0, 0x2b3e, 0x5f67, 0x7c71, 0x1, 0x1);
        gbc.writeMem(0xccb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7f94);
        EXPECT(gbc.pc(), 0xccbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb9), 0xcb);
        EXPECT(gbc.readMem(0xccba), 0x39);
        // CB 39 026C
        gbc.setState(0xae4e, 0xc41, 0x2a0, 0xc523, 0x9ff5, 0xc58b, 0x0, 0x1);
        gbc.writeMem(0xae4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc41);
        EXPECT(gbc.pc(), 0xae50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4e), 0xcb);
        EXPECT(gbc.readMem(0xae4f), 0x39);
        // CB 39 026D
        gbc.setState(0x66f6, 0x8ee7, 0x7a20, 0x3f6, 0xbe2f, 0x1faa, 0x0, 0x0);
        gbc.writeMem(0x66f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8ee7);
        EXPECT(gbc.pc(), 0x66f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 026E
        gbc.setState(0x6227, 0xfad6, 0x720, 0x77b5, 0xe3d9, 0x1583, 0x1, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfad6);
        EXPECT(gbc.pc(), 0x6229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 026F
        gbc.setState(0x5787, 0xb33c, 0xc950, 0x9f59, 0x6567, 0x7e82, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb33c);
        EXPECT(gbc.pc(), 0x5789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0270
        gbc.setState(0x9cbf, 0x5ce5, 0x1e80, 0x1b09, 0x484c, 0x4732, 0x1, 0x1);
        gbc.writeMem(0x9cbf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5ce5);
        EXPECT(gbc.pc(), 0x9cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbf), 0xcb);
        EXPECT(gbc.readMem(0x9cc0), 0x39);
        // CB 39 0271
        gbc.setState(0x5740, 0x196b, 0x6a60, 0x92b0, 0xddb9, 0xa522, 0x1, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x5742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0272
        gbc.setState(0xef28, 0xce84, 0xab0, 0xfd1e, 0x7698, 0x7961, 0x0, 0x1);
        gbc.writeMem(0xef28, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xce84);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef28), 0xcb);
        EXPECT(gbc.readMem(0xef29), 0x39);
        // CB 39 0273
        gbc.setState(0x604d, 0xf25, 0xec00, 0x4e2a, 0xea10, 0x5935, 0x0, 0x1);
        gbc.writeMem(0x604d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf25);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0274
        gbc.setState(0xe880, 0x3941, 0x7140, 0x6402, 0x15d3, 0x9ba0, 0x0, 0x0);
        gbc.writeMem(0xe880, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3941);
        EXPECT(gbc.pc(), 0xe882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe880), 0xcb);
        EXPECT(gbc.readMem(0xe881), 0x39);
        // CB 39 0275
        gbc.setState(0x8cf1, 0x69c9, 0xbc40, 0x27b9, 0x7e0e, 0x975c, 0x0, 0x1);
        gbc.writeMem(0x8cf1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x69c9);
        EXPECT(gbc.pc(), 0x8cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf1), 0xcb);
        EXPECT(gbc.readMem(0x8cf2), 0x39);
        // CB 39 0276
        gbc.setState(0x4e38, 0xa9f5, 0x2740, 0x1e32, 0x7850, 0xe4b0, 0x1, 0x1);
        gbc.writeMem(0x4e38, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa9f5);
        EXPECT(gbc.pc(), 0x4e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0277
        gbc.setState(0xdbdc, 0xfd08, 0x6b80, 0xb476, 0x1b83, 0xba32, 0x1, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfd08);
        EXPECT(gbc.pc(), 0xdbde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdc), 0xcb);
        EXPECT(gbc.readMem(0xdbdd), 0x39);
        // CB 39 0278
        gbc.setState(0xa2a6, 0x269a, 0xd0, 0xd747, 0xb633, 0x4cf8, 0x1, 0x1);
        gbc.writeMem(0xa2a6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x269a);
        EXPECT(gbc.pc(), 0xa2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a6), 0xcb);
        EXPECT(gbc.readMem(0xa2a7), 0x39);
        // CB 39 0279
        gbc.setState(0x72d8, 0xa1bb, 0x4810, 0x28ef, 0x3a52, 0x69ee, 0x1, 0x1);
        gbc.writeMem(0x72d8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa1bb);
        EXPECT(gbc.pc(), 0x72da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 027A
        gbc.setState(0x9b9, 0x2ac2, 0xe080, 0x67f, 0x5ab0, 0x87c1, 0x1, 0x0);
        gbc.writeMem(0x9b9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2ac2);
        EXPECT(gbc.pc(), 0x9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 027B
        gbc.setState(0x317a, 0xc29e, 0x20b0, 0xeea5, 0x68e2, 0x635d, 0x0, 0x1);
        gbc.writeMem(0x317a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0x317c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 027C
        gbc.setState(0xec4c, 0x4cb9, 0x9e40, 0xc0cd, 0xeec6, 0x7b4c, 0x0, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4cb9);
        EXPECT(gbc.pc(), 0xec4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4c), 0xcb);
        EXPECT(gbc.readMem(0xec4d), 0x39);
        // CB 39 027D
        gbc.setState(0xead5, 0x5626, 0xb260, 0x10f9, 0xd782, 0x6b56, 0x1, 0x0);
        gbc.writeMem(0xead5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5626);
        EXPECT(gbc.pc(), 0xead7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead5), 0xcb);
        EXPECT(gbc.readMem(0xead6), 0x39);
        // CB 39 027E
        gbc.setState(0x969, 0xfacb, 0x8550, 0xd098, 0x81f8, 0x979a, 0x1, 0x0);
        gbc.writeMem(0x969, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfacb);
        EXPECT(gbc.pc(), 0x96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 027F
        gbc.setState(0xa45c, 0xbf1d, 0x4bc0, 0xdae2, 0x981a, 0x48a1, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbf1d);
        EXPECT(gbc.pc(), 0xa45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45c), 0xcb);
        EXPECT(gbc.readMem(0xa45d), 0x39);
        // CB 39 0280
        gbc.setState(0x3322, 0x15d9, 0xb310, 0xed9c, 0x29d2, 0xf909, 0x1, 0x0);
        gbc.writeMem(0x3322, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x15d9);
        EXPECT(gbc.pc(), 0x3324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0281
        gbc.setState(0x6b54, 0x4949, 0xccf0, 0xb0e1, 0x1903, 0x5711, 0x0, 0x1);
        gbc.writeMem(0x6b54, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x6b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0282
        gbc.setState(0x4a45, 0xadc1, 0x9b80, 0x2c6f, 0x61d9, 0x37f6, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xadc1);
        EXPECT(gbc.pc(), 0x4a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0283
        gbc.setState(0x3715, 0x762b, 0x4230, 0x6311, 0x1be7, 0x1392, 0x1, 0x1);
        gbc.writeMem(0x3715, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0x3717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0284
        gbc.setState(0xb72d, 0xd14a, 0x72e0, 0xabae, 0xbfe7, 0xcb0d, 0x0, 0x0);
        gbc.writeMem(0xb72d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd14a);
        EXPECT(gbc.pc(), 0xb72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72d), 0xcb);
        EXPECT(gbc.readMem(0xb72e), 0x39);
        // CB 39 0286
        gbc.setState(0x9f64, 0xb57b, 0xbff0, 0x5c86, 0x5adb, 0xc4a6, 0x0, 0x1);
        gbc.writeMem(0x9f64, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb57b);
        EXPECT(gbc.pc(), 0x9f66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f64), 0xcb);
        EXPECT(gbc.readMem(0x9f65), 0x39);
        // CB 39 0287
        gbc.setState(0x8b1d, 0x832f, 0x27d0, 0x46f9, 0x7c5, 0x8cb7, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0x8b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1d), 0xcb);
        EXPECT(gbc.readMem(0x8b1e), 0x39);
        // CB 39 0288
        gbc.setState(0x6d63, 0xeb60, 0x6670, 0x2e6a, 0x344e, 0xf0c8, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0x6d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0289
        gbc.setState(0xef39, 0x3321, 0x2990, 0xbbd8, 0x8f6f, 0x587d, 0x0, 0x0);
        gbc.writeMem(0xef39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3321);
        EXPECT(gbc.pc(), 0xef3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef39), 0xcb);
        EXPECT(gbc.readMem(0xef3a), 0x39);
        // CB 39 028A
        gbc.setState(0x280a, 0xde21, 0xb7a0, 0xd1d0, 0x55d8, 0x5917, 0x1, 0x1);
        gbc.writeMem(0x280a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xde21);
        EXPECT(gbc.pc(), 0x280c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 028B
        gbc.setState(0x8216, 0xf4f3, 0x95f0, 0xedc3, 0xfdc6, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf4f3);
        EXPECT(gbc.pc(), 0x8218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8216), 0xcb);
        EXPECT(gbc.readMem(0x8217), 0x39);
        // CB 39 028C
        gbc.setState(0xb38d, 0xcc3b, 0x7670, 0xe211, 0x8b31, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0xb38d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcc3b);
        EXPECT(gbc.pc(), 0xb38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb38d), 0xcb);
        EXPECT(gbc.readMem(0xb38e), 0x39);
        // CB 39 028D
        gbc.setState(0x7c1, 0x6421, 0x55d0, 0xd976, 0x2f2c, 0xc136, 0x1, 0x1);
        gbc.writeMem(0x7c1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6421);
        EXPECT(gbc.pc(), 0x7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 028E
        gbc.setState(0xde8b, 0xbcd6, 0xe100, 0x80b, 0x5a5e, 0x37f, 0x1, 0x1);
        gbc.writeMem(0xde8b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbcd6);
        EXPECT(gbc.pc(), 0xde8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8b), 0xcb);
        EXPECT(gbc.readMem(0xde8c), 0x39);
        // CB 39 028F
        gbc.setState(0x727b, 0x87c2, 0x1750, 0xfb14, 0x229b, 0x7ec9, 0x1, 0x0);
        gbc.writeMem(0x727b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x87c2);
        EXPECT(gbc.pc(), 0x727d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0290
        gbc.setState(0x83cf, 0xe49e, 0xea90, 0x4767, 0xe0f8, 0x3155, 0x1, 0x0);
        gbc.writeMem(0x83cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe49e);
        EXPECT(gbc.pc(), 0x83d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cf), 0xcb);
        EXPECT(gbc.readMem(0x83d0), 0x39);
        // CB 39 0291
        gbc.setState(0xa869, 0x764f, 0xd080, 0x67d3, 0x81a8, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0xa869, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x764f);
        EXPECT(gbc.pc(), 0xa86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa869), 0xcb);
        EXPECT(gbc.readMem(0xa86a), 0x39);
        // CB 39 0292
        gbc.setState(0x692c, 0x6e47, 0xd890, 0x9afb, 0xca57, 0x4dfa, 0x1, 0x1);
        gbc.writeMem(0x692c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6e47);
        EXPECT(gbc.pc(), 0x692e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0293
        gbc.setState(0xbae, 0x895e, 0xee10, 0xde16, 0xa2c1, 0x9290, 0x0, 0x1);
        gbc.writeMem(0xbae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x895e);
        EXPECT(gbc.pc(), 0xbb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0294
        gbc.setState(0x22e4, 0x5f9e, 0x33d0, 0xabf6, 0xe404, 0x9921, 0x0, 0x1);
        gbc.writeMem(0x22e4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0x22e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0295
        gbc.setState(0xcbe4, 0x467e, 0x4e70, 0x9c4d, 0xcbcd, 0xb2e7, 0x0, 0x0);
        gbc.writeMem(0xcbe4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x467e);
        EXPECT(gbc.pc(), 0xcbe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe4), 0xcb);
        EXPECT(gbc.readMem(0xcbe5), 0x39);
        // CB 39 0296
        gbc.setState(0x6dd, 0x5b90, 0xc330, 0x5706, 0x7b69, 0x2585, 0x1, 0x1);
        gbc.writeMem(0x6dd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5b90);
        EXPECT(gbc.pc(), 0x6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0297
        gbc.setState(0xe09e, 0x7586, 0x81c0, 0x26f9, 0x3561, 0xe5aa, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0xe0a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe09e), 0xcb);
        EXPECT(gbc.readMem(0xe09f), 0x39);
        // CB 39 0298
        gbc.setState(0x3959, 0x78ce, 0x7b70, 0x562f, 0x407a, 0x91a, 0x0, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x78ce);
        EXPECT(gbc.pc(), 0x395b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0299
        gbc.setState(0x1c88, 0x3dc5, 0x8cd0, 0xa848, 0xa56e, 0x1189, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3dc5);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 029A
        gbc.setState(0xbe14, 0xb4f8, 0x4ca0, 0x7437, 0xfaa0, 0x155f, 0x0, 0x0);
        gbc.writeMem(0xbe14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0xbe16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe14), 0xcb);
        EXPECT(gbc.readMem(0xbe15), 0x39);
        // CB 39 029B
        gbc.setState(0x63a4, 0xd468, 0x8db0, 0x1790, 0x69bf, 0xf7ce, 0x1, 0x0);
        gbc.writeMem(0x63a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd468);
        EXPECT(gbc.pc(), 0x63a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 029C
        gbc.setState(0xa847, 0x424e, 0x2ec0, 0x184b, 0xf30c, 0xcba0, 0x1, 0x0);
        gbc.writeMem(0xa847, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x424e);
        EXPECT(gbc.pc(), 0xa849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa847), 0xcb);
        EXPECT(gbc.readMem(0xa848), 0x39);
        // CB 39 029D
        gbc.setState(0x7e8, 0x8c8f, 0xf4f0, 0xa03, 0xac7, 0x3237, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8c8f);
        EXPECT(gbc.pc(), 0x7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 029E
        gbc.setState(0xb856, 0x4fa2, 0x1cc0, 0xbfec, 0x1fab, 0xa506, 0x0, 0x0);
        gbc.writeMem(0xb856, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4fa2);
        EXPECT(gbc.pc(), 0xb858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb856), 0xcb);
        EXPECT(gbc.readMem(0xb857), 0x39);
        // CB 39 029F
        gbc.setState(0xeecc, 0x2314, 0xc5c0, 0x800b, 0x72dc, 0x9535, 0x1, 0x1);
        gbc.writeMem(0xeecc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2314);
        EXPECT(gbc.pc(), 0xeece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeecc), 0xcb);
        EXPECT(gbc.readMem(0xeecd), 0x39);
        // CB 39 02A0
        gbc.setState(0x68a5, 0x8f0e, 0x2e60, 0xd9fd, 0xc004, 0xc93d, 0x0, 0x1);
        gbc.writeMem(0x68a5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8f0e);
        EXPECT(gbc.pc(), 0x68a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02A1
        gbc.setState(0xdd0c, 0x27fc, 0xa4b0, 0xc065, 0xc481, 0x779c, 0x0, 0x0);
        gbc.writeMem(0xdd0c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x27fc);
        EXPECT(gbc.pc(), 0xdd0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0c), 0xcb);
        EXPECT(gbc.readMem(0xdd0d), 0x39);
        // CB 39 02A2
        gbc.setState(0x24b3, 0x3aff, 0x11e0, 0xaee5, 0x46c, 0x5917, 0x1, 0x0);
        gbc.writeMem(0x24b3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3aff);
        EXPECT(gbc.pc(), 0x24b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02A3
        gbc.setState(0x16ee, 0x709b, 0x26e0, 0xfac4, 0xae5e, 0xb0ee, 0x0, 0x1);
        gbc.writeMem(0x16ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x709b);
        EXPECT(gbc.pc(), 0x16f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02A4
        gbc.setState(0xdde2, 0xcfe1, 0x16b0, 0x75e5, 0xe54c, 0xb289, 0x1, 0x0);
        gbc.writeMem(0xdde2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcfe1);
        EXPECT(gbc.pc(), 0xdde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde2), 0xcb);
        EXPECT(gbc.readMem(0xdde3), 0x39);
        // CB 39 02A5
        gbc.setState(0xe895, 0x5266, 0x68f0, 0x78c4, 0x4563, 0x719a, 0x1, 0x1);
        gbc.writeMem(0xe895, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0xe897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe895), 0xcb);
        EXPECT(gbc.readMem(0xe896), 0x39);
        // CB 39 02A6
        gbc.setState(0xcdad, 0x5a34, 0x2d40, 0x3a2e, 0x4a9f, 0xa3b0, 0x1, 0x0);
        gbc.writeMem(0xcdad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5a34);
        EXPECT(gbc.pc(), 0xcdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdad), 0xcb);
        EXPECT(gbc.readMem(0xcdae), 0x39);
        // CB 39 02A7
        gbc.setState(0xc390, 0xac1d, 0x20a0, 0x4b9b, 0xa329, 0xc46c, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xac1d);
        EXPECT(gbc.pc(), 0xc392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc390), 0xcb);
        EXPECT(gbc.readMem(0xc391), 0x39);
        // CB 39 02A8
        gbc.setState(0xa787, 0x8ffb, 0xe30, 0x2505, 0x55ad, 0x112d, 0x0, 0x0);
        gbc.writeMem(0xa787, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8ffb);
        EXPECT(gbc.pc(), 0xa789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa787), 0xcb);
        EXPECT(gbc.readMem(0xa788), 0x39);
        // CB 39 02A9
        gbc.setState(0x3ec8, 0x1dcb, 0x4370, 0xa78c, 0xed95, 0xea41, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1dcb);
        EXPECT(gbc.pc(), 0x3eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02AA
        gbc.setState(0xa86f, 0x81e1, 0x5f40, 0xed9b, 0x610a, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x81e1);
        EXPECT(gbc.pc(), 0xa871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86f), 0xcb);
        EXPECT(gbc.readMem(0xa870), 0x39);
        // CB 39 02AB
        gbc.setState(0xbad0, 0x2d0c, 0x4650, 0x8cff, 0xb33f, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xbad0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2d0c);
        EXPECT(gbc.pc(), 0xbad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad0), 0xcb);
        EXPECT(gbc.readMem(0xbad1), 0x39);
        // CB 39 02AC
        gbc.setState(0xcd4e, 0x141, 0xd440, 0xd5c8, 0x2c52, 0xcf63, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x141);
        EXPECT(gbc.pc(), 0xcd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4e), 0xcb);
        EXPECT(gbc.readMem(0xcd4f), 0x39);
        // CB 39 02AD
        gbc.setState(0x9387, 0xbfe7, 0xdd80, 0xb03d, 0xad47, 0xb1fd, 0x0, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbfe7);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9387), 0xcb);
        EXPECT(gbc.readMem(0x9388), 0x39);
        // CB 39 02AE
        gbc.setState(0x7d6f, 0x2859, 0x6cd0, 0x16ff, 0x77c2, 0x5977, 0x0, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2859);
        EXPECT(gbc.pc(), 0x7d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02AF
        gbc.setState(0xb397, 0xe8ba, 0xbdc0, 0x60d7, 0x574e, 0x804f, 0x1, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe8ba);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0x39);
        // CB 39 02B0
        gbc.setState(0x2289, 0xc3f0, 0xf770, 0x3b4a, 0xb4e0, 0x777b, 0x1, 0x1);
        gbc.writeMem(0x2289, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc3f0);
        EXPECT(gbc.pc(), 0x228b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02B1
        gbc.setState(0x2bd6, 0xf511, 0x6550, 0xfb39, 0x2d11, 0xa753, 0x0, 0x1);
        gbc.writeMem(0x2bd6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf511);
        EXPECT(gbc.pc(), 0x2bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02B2
        gbc.setState(0xb865, 0xb6c7, 0x23d0, 0x3927, 0x48ba, 0xe830, 0x1, 0x0);
        gbc.writeMem(0xb865, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb6c7);
        EXPECT(gbc.pc(), 0xb867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb865), 0xcb);
        EXPECT(gbc.readMem(0xb866), 0x39);
        // CB 39 02B3
        gbc.setState(0x2c00, 0xdca7, 0x8940, 0x216c, 0x84d1, 0x6cc3, 0x1, 0x1);
        gbc.writeMem(0x2c00, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdca7);
        EXPECT(gbc.pc(), 0x2c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02B4
        gbc.setState(0x527e, 0xfd27, 0xd1f0, 0xee7a, 0x68f5, 0x3dd5, 0x1, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfd27);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02B5
        gbc.setState(0x9b71, 0x104e, 0xe7f0, 0x75ec, 0x2b65, 0x6b04, 0x0, 0x0);
        gbc.writeMem(0x9b71, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x104e);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b71), 0xcb);
        EXPECT(gbc.readMem(0x9b72), 0x39);
        // CB 39 02B6
        gbc.setState(0x8eb1, 0xf1dc, 0x9bc0, 0xe42e, 0xf2a0, 0xdfc4, 0x1, 0x1);
        gbc.writeMem(0x8eb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0x8eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb1), 0xcb);
        EXPECT(gbc.readMem(0x8eb2), 0x39);
        // CB 39 02B7
        gbc.setState(0x8c30, 0xb4a8, 0x7470, 0x55c3, 0xad9b, 0xa3b6, 0x0, 0x0);
        gbc.writeMem(0x8c30, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb4a8);
        EXPECT(gbc.pc(), 0x8c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c30), 0xcb);
        EXPECT(gbc.readMem(0x8c31), 0x39);
        // CB 39 02B8
        gbc.setState(0x9e73, 0x1ff5, 0x9f60, 0xae37, 0x9d98, 0xd78, 0x0, 0x1);
        gbc.writeMem(0x9e73, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1ff5);
        EXPECT(gbc.pc(), 0x9e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e73), 0xcb);
        EXPECT(gbc.readMem(0x9e74), 0x39);
        // CB 39 02B9
        gbc.setState(0x934a, 0x2ef3, 0xb680, 0x52d5, 0xb7b, 0x484c, 0x1, 0x0);
        gbc.writeMem(0x934a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x934c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934a), 0xcb);
        EXPECT(gbc.readMem(0x934b), 0x39);
        // CB 39 02BA
        gbc.setState(0x1d21, 0xd074, 0x1e90, 0x75de, 0xd9de, 0x942c, 0x0, 0x1);
        gbc.writeMem(0x1d21, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd074);
        EXPECT(gbc.pc(), 0x1d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02BB
        gbc.setState(0xc211, 0x4c70, 0x8aa0, 0x2208, 0x2d4a, 0xaf30, 0x0, 0x1);
        gbc.writeMem(0xc211, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4c70);
        EXPECT(gbc.pc(), 0xc213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc211), 0xcb);
        EXPECT(gbc.readMem(0xc212), 0x39);
        // CB 39 02BC
        gbc.setState(0x8c90, 0xf942, 0x5990, 0x9b8c, 0x3be1, 0x5e1c, 0x1, 0x1);
        gbc.writeMem(0x8c90, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf942);
        EXPECT(gbc.pc(), 0x8c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c90), 0xcb);
        EXPECT(gbc.readMem(0x8c91), 0x39);
        // CB 39 02BD
        gbc.setState(0xbfc1, 0xbab8, 0x93d0, 0xa50e, 0x3b64, 0x4a67, 0x1, 0x1);
        gbc.writeMem(0xbfc1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbab8);
        EXPECT(gbc.pc(), 0xbfc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc1), 0xcb);
        EXPECT(gbc.readMem(0xbfc2), 0x39);
        // CB 39 02BE
        gbc.setState(0x5e4e, 0xa2d6, 0x9b10, 0x241c, 0xd848, 0xa3fb, 0x0, 0x1);
        gbc.writeMem(0x5e4e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa2d6);
        EXPECT(gbc.pc(), 0x5e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02BF
        gbc.setState(0x7a7f, 0x5b99, 0x190, 0x2703, 0xd733, 0xbffc, 0x0, 0x0);
        gbc.writeMem(0x7a7f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0x7a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02C0
        gbc.setState(0x3bb1, 0x427, 0xd7f0, 0x7972, 0xc342, 0x1739, 0x0, 0x1);
        gbc.writeMem(0x3bb1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x427);
        EXPECT(gbc.pc(), 0x3bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02C1
        gbc.setState(0xdaf7, 0xb10, 0x5520, 0x4b3b, 0x8919, 0x9bb4, 0x1, 0x0);
        gbc.writeMem(0xdaf7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0xdaf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf7), 0xcb);
        EXPECT(gbc.readMem(0xdaf8), 0x39);
        // CB 39 02C2
        gbc.setState(0x75af, 0xe2e1, 0x7350, 0xff2a, 0x5529, 0xaa2f, 0x1, 0x0);
        gbc.writeMem(0x75af, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe2e1);
        EXPECT(gbc.pc(), 0x75b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02C3
        gbc.setState(0x217d, 0xdd1c, 0x7130, 0xb544, 0x863c, 0x345c, 0x1, 0x0);
        gbc.writeMem(0x217d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x217f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02C4
        gbc.setState(0x446, 0x605f, 0xeb10, 0xdfd1, 0xf98d, 0x9ccd, 0x0, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x605f);
        EXPECT(gbc.pc(), 0x448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02C5
        gbc.setState(0x6c91, 0x5714, 0x9320, 0xbf09, 0xe089, 0x6129, 0x0, 0x0);
        gbc.writeMem(0x6c91, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5714);
        EXPECT(gbc.pc(), 0x6c93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02C6
        gbc.setState(0x1e3e, 0x7fe7, 0x6290, 0xebf7, 0x3903, 0xd2e3, 0x1, 0x0);
        gbc.writeMem(0x1e3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7fe7);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02C7
        gbc.setState(0xb0b1, 0xc833, 0xd650, 0x4705, 0xec67, 0xc44c, 0x0, 0x1);
        gbc.writeMem(0xb0b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc833);
        EXPECT(gbc.pc(), 0xb0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b1), 0xcb);
        EXPECT(gbc.readMem(0xb0b2), 0x39);
        // CB 39 02C8
        gbc.setState(0x1801, 0x71d8, 0x13d0, 0xe974, 0x45f5, 0x5704, 0x1, 0x0);
        gbc.writeMem(0x1801, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x71d8);
        EXPECT(gbc.pc(), 0x1803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02C9
        gbc.setState(0xb2ac, 0xc765, 0x1c10, 0xdd17, 0x3a08, 0xcccf, 0x1, 0x0);
        gbc.writeMem(0xb2ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc765);
        EXPECT(gbc.pc(), 0xb2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ac), 0xcb);
        EXPECT(gbc.readMem(0xb2ad), 0x39);
        // CB 39 02CA
        gbc.setState(0xeba2, 0xb616, 0x2a10, 0xf883, 0xec25, 0x2163, 0x0, 0x0);
        gbc.writeMem(0xeba2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb616);
        EXPECT(gbc.pc(), 0xeba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba2), 0xcb);
        EXPECT(gbc.readMem(0xeba3), 0x39);
        // CB 39 02CC
        gbc.setState(0xaea4, 0x485f, 0x4580, 0xdb52, 0x25d0, 0xf71d, 0x1, 0x0);
        gbc.writeMem(0xaea4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0xaea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea4), 0xcb);
        EXPECT(gbc.readMem(0xaea5), 0x39);
        // CB 39 02CD
        gbc.setState(0x37e3, 0xf4ff, 0xaec0, 0x6441, 0xc797, 0x5720, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x37e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02CE
        gbc.setState(0x3adc, 0xbc76, 0x1820, 0x4ac7, 0xb19e, 0xcddc, 0x1, 0x0);
        gbc.writeMem(0x3adc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbc76);
        EXPECT(gbc.pc(), 0x3ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02CF
        gbc.setState(0x1d86, 0xa8f5, 0xbcc0, 0xbaad, 0xfe07, 0x73c7, 0x0, 0x0);
        gbc.writeMem(0x1d86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa8f5);
        EXPECT(gbc.pc(), 0x1d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02D0
        gbc.setState(0x8c16, 0x4fb7, 0x7f10, 0x53f2, 0xdf71, 0xea02, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4fb7);
        EXPECT(gbc.pc(), 0x8c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c16), 0xcb);
        EXPECT(gbc.readMem(0x8c17), 0x39);
        // CB 39 02D1
        gbc.setState(0xb349, 0xc6ad, 0xf30, 0x7c18, 0x6764, 0xf984, 0x1, 0x1);
        gbc.writeMem(0xb349, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0xb34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb349), 0xcb);
        EXPECT(gbc.readMem(0xb34a), 0x39);
        // CB 39 02D2
        gbc.setState(0x4ac8, 0x3817, 0xf6a0, 0x9f91, 0xa46, 0x8ee, 0x0, 0x1);
        gbc.writeMem(0x4ac8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3817);
        EXPECT(gbc.pc(), 0x4aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02D3
        gbc.setState(0x2496, 0x8e85, 0x18e0, 0x6fbb, 0x9a12, 0xbe2b, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8e85);
        EXPECT(gbc.pc(), 0x2498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02D4
        gbc.setState(0x24e, 0xd9aa, 0xebc0, 0x7d41, 0x8fb6, 0x5478, 0x1, 0x1);
        gbc.writeMem(0x24e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd9aa);
        EXPECT(gbc.pc(), 0x250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02D5
        gbc.setState(0x15cf, 0xdf5c, 0x7940, 0x1b09, 0xe9ca, 0x8033, 0x1, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdf5c);
        EXPECT(gbc.pc(), 0x15d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02D6
        gbc.setState(0xe3c5, 0x6a32, 0x2930, 0x5f45, 0xd99a, 0xef74, 0x0, 0x0);
        gbc.writeMem(0xe3c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6a32);
        EXPECT(gbc.pc(), 0xe3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c5), 0xcb);
        EXPECT(gbc.readMem(0xe3c6), 0x39);
        // CB 39 02D7
        gbc.setState(0x3703, 0x1c63, 0xd720, 0xa91a, 0xb74a, 0x2a6b, 0x0, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02D8
        gbc.setState(0x9f69, 0x4ccc, 0x6ea0, 0x6ade, 0x505a, 0x6162, 0x0, 0x1);
        gbc.writeMem(0x9f69, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4ccc);
        EXPECT(gbc.pc(), 0x9f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f69), 0xcb);
        EXPECT(gbc.readMem(0x9f6a), 0x39);
        // CB 39 02D9
        gbc.setState(0x3ff1, 0xdffb, 0x4220, 0xd06f, 0x3306, 0x8447, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdffb);
        EXPECT(gbc.pc(), 0x3ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02DA
        gbc.setState(0x5791, 0xeb02, 0xc2a0, 0xfc11, 0xf92f, 0xd2df, 0x1, 0x1);
        gbc.writeMem(0x5791, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeb02);
        EXPECT(gbc.pc(), 0x5793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02DB
        gbc.setState(0xc04a, 0xcc51, 0xe220, 0xdecf, 0x5e8f, 0xa0c2, 0x1, 0x1);
        gbc.writeMem(0xc04a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcc51);
        EXPECT(gbc.pc(), 0xc04c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04a), 0xcb);
        EXPECT(gbc.readMem(0xc04b), 0x39);
        // CB 39 02DC
        gbc.setState(0x861c, 0x13f3, 0xde00, 0xe9f6, 0x6e93, 0x6fe1, 0x1, 0x0);
        gbc.writeMem(0x861c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x13f3);
        EXPECT(gbc.pc(), 0x861e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861c), 0xcb);
        EXPECT(gbc.readMem(0x861d), 0x39);
        // CB 39 02DD
        gbc.setState(0xe05e, 0x2b54, 0xc3d0, 0xb59, 0x590f, 0x4c3b, 0x0, 0x0);
        gbc.writeMem(0xe05e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2b54);
        EXPECT(gbc.pc(), 0xe060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05e), 0xcb);
        EXPECT(gbc.readMem(0xe05f), 0x39);
        // CB 39 02DE
        gbc.setState(0xb614, 0x468b, 0x82c0, 0x4e20, 0x5bf1, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0xb614, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x468b);
        EXPECT(gbc.pc(), 0xb616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb614), 0xcb);
        EXPECT(gbc.readMem(0xb615), 0x39);
        // CB 39 02DF
        gbc.setState(0xde2a, 0x88f5, 0xea80, 0x406b, 0x3ca5, 0x1886, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x88f5);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2a), 0xcb);
        EXPECT(gbc.readMem(0xde2b), 0x39);
        // CB 39 02E0
        gbc.setState(0xd9a8, 0x1c6b, 0xfe80, 0x5c21, 0x324c, 0x8a3, 0x0, 0x1);
        gbc.writeMem(0xd9a8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1c6b);
        EXPECT(gbc.pc(), 0xd9aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a8), 0xcb);
        EXPECT(gbc.readMem(0xd9a9), 0x39);
        // CB 39 02E1
        gbc.setState(0xc387, 0xff06, 0x2090, 0x70bb, 0xc31b, 0xccc, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xff06);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0xcb);
        EXPECT(gbc.readMem(0xc388), 0x39);
        // CB 39 02E2
        gbc.setState(0xa8d5, 0xca43, 0x2810, 0x57a2, 0xb858, 0x5445, 0x0, 0x1);
        gbc.writeMem(0xa8d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xca43);
        EXPECT(gbc.pc(), 0xa8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d5), 0xcb);
        EXPECT(gbc.readMem(0xa8d6), 0x39);
        // CB 39 02E3
        gbc.setState(0x406e, 0x4b81, 0x6780, 0x94ea, 0x5213, 0x7437, 0x1, 0x0);
        gbc.writeMem(0x406e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4b81);
        EXPECT(gbc.pc(), 0x4070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02E4
        gbc.setState(0xd316, 0x77da, 0x88d0, 0x3421, 0xcdf0, 0x620e, 0x0, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x77da);
        EXPECT(gbc.pc(), 0xd318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd316), 0xcb);
        EXPECT(gbc.readMem(0xd317), 0x39);
        // CB 39 02E5
        gbc.setState(0x227f, 0x5ba0, 0x4850, 0xe395, 0x5701, 0x89d2, 0x0, 0x1);
        gbc.writeMem(0x227f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5ba0);
        EXPECT(gbc.pc(), 0x2281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02E6
        gbc.setState(0x509d, 0x41e2, 0xb9f0, 0x9db, 0x99c5, 0x702a, 0x0, 0x1);
        gbc.writeMem(0x509d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x41e2);
        EXPECT(gbc.pc(), 0x509f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02E7
        gbc.setState(0x1193, 0xb5f6, 0x7900, 0x4301, 0xcd6d, 0xf40e, 0x0, 0x1);
        gbc.writeMem(0x1193, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb5f6);
        EXPECT(gbc.pc(), 0x1195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02E8
        gbc.setState(0x221c, 0xf175, 0x9520, 0xdfe2, 0xe542, 0xe344, 0x0, 0x0);
        gbc.writeMem(0x221c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf175);
        EXPECT(gbc.pc(), 0x221e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02E9
        gbc.setState(0xba7a, 0x750c, 0xcd70, 0xcd8c, 0x575, 0x8745, 0x0, 0x1);
        gbc.writeMem(0xba7a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x750c);
        EXPECT(gbc.pc(), 0xba7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7a), 0xcb);
        EXPECT(gbc.readMem(0xba7b), 0x39);
        // CB 39 02EA
        gbc.setState(0x3388, 0xd40a, 0xf240, 0xa47, 0xfd92, 0xdc3a, 0x1, 0x1);
        gbc.writeMem(0x3388, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd40a);
        EXPECT(gbc.pc(), 0x338a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02EB
        gbc.setState(0x9462, 0xe73b, 0xc860, 0xe844, 0xa0ae, 0x3ff2, 0x1, 0x0);
        gbc.writeMem(0x9462, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe73b);
        EXPECT(gbc.pc(), 0x9464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9462), 0xcb);
        EXPECT(gbc.readMem(0x9463), 0x39);
        // CB 39 02EC
        gbc.setState(0xdc96, 0x9db7, 0x91a0, 0x64c6, 0xb61e, 0xfdc8, 0x1, 0x1);
        gbc.writeMem(0xdc96, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9db7);
        EXPECT(gbc.pc(), 0xdc98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc96), 0xcb);
        EXPECT(gbc.readMem(0xdc97), 0x39);
        // CB 39 02ED
        gbc.setState(0x804a, 0x427, 0x1bf0, 0xf0dd, 0x4775, 0xb39d, 0x1, 0x1);
        gbc.writeMem(0x804a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x427);
        EXPECT(gbc.pc(), 0x804c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804a), 0xcb);
        EXPECT(gbc.readMem(0x804b), 0x39);
        // CB 39 02EE
        gbc.setState(0x2e4f, 0x6975, 0xbf10, 0xf642, 0xb1f2, 0x4107, 0x0, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6975);
        EXPECT(gbc.pc(), 0x2e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02EF
        gbc.setState(0x44a4, 0x6509, 0x69c0, 0x4a30, 0xed89, 0xefe0, 0x0, 0x1);
        gbc.writeMem(0x44a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6509);
        EXPECT(gbc.pc(), 0x44a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02F0
        gbc.setState(0x357d, 0x61a5, 0x80f0, 0xda1c, 0xdffc, 0x89f6, 0x0, 0x1);
        gbc.writeMem(0x357d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x61a5);
        EXPECT(gbc.pc(), 0x357f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02F1
        gbc.setState(0x2677, 0xb799, 0x5c30, 0xb717, 0x810e, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x2677, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb799);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02F2
        gbc.setState(0xbd33, 0x82b9, 0x2d60, 0xc676, 0xd375, 0x6ffd, 0x0, 0x1);
        gbc.writeMem(0xbd33, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x82b9);
        EXPECT(gbc.pc(), 0xbd35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd33), 0xcb);
        EXPECT(gbc.readMem(0xbd34), 0x39);
        // CB 39 02F3
        gbc.setState(0x9a39, 0x8f5e, 0x7370, 0xe245, 0x65c4, 0x42b5, 0x0, 0x0);
        gbc.writeMem(0x9a39, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8f5e);
        EXPECT(gbc.pc(), 0x9a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a39), 0xcb);
        EXPECT(gbc.readMem(0x9a3a), 0x39);
        // CB 39 02F4
        gbc.setState(0x25cc, 0x3275, 0xdce0, 0x8c6, 0x26aa, 0xc95e, 0x0, 0x0);
        gbc.writeMem(0x25cc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3275);
        EXPECT(gbc.pc(), 0x25ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 02F5
        gbc.setState(0xa6d4, 0x83d1, 0x8510, 0xf899, 0x9727, 0x89b0, 0x0, 0x0);
        gbc.writeMem(0xa6d4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x83d1);
        EXPECT(gbc.pc(), 0xa6d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d4), 0xcb);
        EXPECT(gbc.readMem(0xa6d5), 0x39);
        // CB 39 02F7
        gbc.setState(0x5995, 0x93ad, 0x1dc0, 0xa71f, 0x639a, 0xcc19, 0x1, 0x1);
        gbc.writeMem(0x5995, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x93ad);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 02F8
        gbc.setState(0xca4f, 0x704, 0x7360, 0x2afe, 0x90d5, 0xa678, 0x0, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x704);
        EXPECT(gbc.pc(), 0xca51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca4f), 0xcb);
        EXPECT(gbc.readMem(0xca50), 0x39);
        // CB 39 02F9
        gbc.setState(0xc5f0, 0xe4c1, 0x4570, 0xdde8, 0x425d, 0x5c8d, 0x1, 0x1);
        gbc.writeMem(0xc5f0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe4c1);
        EXPECT(gbc.pc(), 0xc5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f0), 0xcb);
        EXPECT(gbc.readMem(0xc5f1), 0x39);
        // CB 39 02FB
        gbc.setState(0xb5f3, 0xb29f, 0xc010, 0xde10, 0x66e4, 0x4b25, 0x1, 0x0);
        gbc.writeMem(0xb5f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb29f);
        EXPECT(gbc.pc(), 0xb5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f3), 0xcb);
        EXPECT(gbc.readMem(0xb5f4), 0x39);
        // CB 39 02FC
        gbc.setState(0xdea8, 0x69be, 0xd3b0, 0xc29f, 0xa2c4, 0x1131, 0x1, 0x0);
        gbc.writeMem(0xdea8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x69be);
        EXPECT(gbc.pc(), 0xdeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea8), 0xcb);
        EXPECT(gbc.readMem(0xdea9), 0x39);
        // CB 39 02FD
        gbc.setState(0xa931, 0x776b, 0x81b0, 0xfbfa, 0x424d, 0xf2ca, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x776b);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa931), 0xcb);
        EXPECT(gbc.readMem(0xa932), 0x39);
        // CB 39 02FE
        gbc.setState(0xec80, 0x4f02, 0x37c0, 0xe9d8, 0x3ebd, 0x30d3, 0x1, 0x1);
        gbc.writeMem(0xec80, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4f02);
        EXPECT(gbc.pc(), 0xec82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec80), 0xcb);
        EXPECT(gbc.readMem(0xec81), 0x39);
        // CB 39 02FF
        gbc.setState(0x5aa8, 0xb4b7, 0xbdb0, 0xf715, 0xa675, 0xcac9, 0x1, 0x1);
        gbc.writeMem(0x5aa8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0x5aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0300
        gbc.setState(0xe3ad, 0x1dd8, 0x890, 0xbcef, 0xd223, 0xd589, 0x0, 0x0);
        gbc.writeMem(0xe3ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1dd8);
        EXPECT(gbc.pc(), 0xe3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ad), 0xcb);
        EXPECT(gbc.readMem(0xe3ae), 0x39);
        // CB 39 0301
        gbc.setState(0x30db, 0xf087, 0x1680, 0xa929, 0x91c2, 0xf6d3, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf087);
        EXPECT(gbc.pc(), 0x30dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0302
        gbc.setState(0x5a9, 0x781f, 0x5c60, 0xcda2, 0x53fc, 0xb0a4, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x781f);
        EXPECT(gbc.pc(), 0x5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0303
        gbc.setState(0x423b, 0x7984, 0xfeb0, 0xa0a6, 0x25c1, 0xadda, 0x0, 0x1);
        gbc.writeMem(0x423b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7984);
        EXPECT(gbc.pc(), 0x423d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0304
        gbc.setState(0xd796, 0x2809, 0x64d0, 0xe9e0, 0x6f35, 0xca36, 0x1, 0x0);
        gbc.writeMem(0xd796, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2809);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd796), 0xcb);
        EXPECT(gbc.readMem(0xd797), 0x39);
        // CB 39 0305
        gbc.setState(0x6bc5, 0xddfd, 0xc5f0, 0xdbcf, 0xd08f, 0xe09f, 0x1, 0x0);
        gbc.writeMem(0x6bc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xddfd);
        EXPECT(gbc.pc(), 0x6bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0306
        gbc.setState(0x4692, 0x970b, 0xd2f0, 0x8fa2, 0x1873, 0x34c1, 0x0, 0x1);
        gbc.writeMem(0x4692, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x970b);
        EXPECT(gbc.pc(), 0x4694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0307
        gbc.setState(0xd4ac, 0xa138, 0x8ab0, 0x70d9, 0xf3df, 0xac58, 0x0, 0x1);
        gbc.writeMem(0xd4ac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa138);
        EXPECT(gbc.pc(), 0xd4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ac), 0xcb);
        EXPECT(gbc.readMem(0xd4ad), 0x39);
        // CB 39 0308
        gbc.setState(0xef3e, 0x7802, 0xdfb0, 0xae29, 0x824e, 0x4507, 0x1, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7802);
        EXPECT(gbc.pc(), 0xef40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3e), 0xcb);
        EXPECT(gbc.readMem(0xef3f), 0x39);
        // CB 39 0309
        gbc.setState(0x4b41, 0xc497, 0xf770, 0xecf5, 0x150c, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0x4b41, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc497);
        EXPECT(gbc.pc(), 0x4b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 030B
        gbc.setState(0x1bcf, 0xf1e7, 0x7870, 0x18c7, 0xee93, 0x9afd, 0x0, 0x0);
        gbc.writeMem(0x1bcf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf1e7);
        EXPECT(gbc.pc(), 0x1bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 030C
        gbc.setState(0x8b7c, 0xa92c, 0x3130, 0x6497, 0x6749, 0x5e9c, 0x0, 0x0);
        gbc.writeMem(0x8b7c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0x8b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7c), 0xcb);
        EXPECT(gbc.readMem(0x8b7d), 0x39);
        // CB 39 030D
        gbc.setState(0x8c06, 0x7935, 0x2820, 0x77b9, 0x775e, 0x277e, 0x1, 0x1);
        gbc.writeMem(0x8c06, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7935);
        EXPECT(gbc.pc(), 0x8c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c06), 0xcb);
        EXPECT(gbc.readMem(0x8c07), 0x39);
        // CB 39 030E
        gbc.setState(0x2aaf, 0x87cd, 0xc860, 0x8cfb, 0x4ea4, 0x11e1, 0x1, 0x0);
        gbc.writeMem(0x2aaf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 030F
        gbc.setState(0x6ab3, 0x5dcd, 0xae30, 0xb57b, 0x5c79, 0x96ce, 0x0, 0x0);
        gbc.writeMem(0x6ab3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5dcd);
        EXPECT(gbc.pc(), 0x6ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0310
        gbc.setState(0x5fc, 0x4782, 0xb140, 0x929a, 0xd201, 0xa98e, 0x1, 0x0);
        gbc.writeMem(0x5fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0x5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0311
        gbc.setState(0x74d9, 0xa34d, 0xed20, 0xd814, 0x6c05, 0x6667, 0x0, 0x0);
        gbc.writeMem(0x74d9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0x74db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0312
        gbc.setState(0xda14, 0x9f81, 0xc5b0, 0x3da8, 0xfee3, 0x260b, 0x1, 0x0);
        gbc.writeMem(0xda14, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9f81);
        EXPECT(gbc.pc(), 0xda16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda14), 0xcb);
        EXPECT(gbc.readMem(0xda15), 0x39);
        // CB 39 0313
        gbc.setState(0x2bae, 0xcb21, 0x3ee0, 0x9039, 0xe7f0, 0x8605, 0x0, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcb21);
        EXPECT(gbc.pc(), 0x2bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0314
        gbc.setState(0x507a, 0x2403, 0xaa80, 0xe271, 0xc4c4, 0x80a6, 0x1, 0x0);
        gbc.writeMem(0x507a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2403);
        EXPECT(gbc.pc(), 0x507c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0316
        gbc.setState(0xc970, 0x5a13, 0x9f10, 0xa031, 0xb4a0, 0x4b59, 0x1, 0x0);
        gbc.writeMem(0xc970, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0xc972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc970), 0xcb);
        EXPECT(gbc.readMem(0xc971), 0x39);
        // CB 39 0317
        gbc.setState(0x5768, 0x6625, 0xf390, 0x8884, 0xe62a, 0xe7a7, 0x1, 0x1);
        gbc.writeMem(0x5768, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6625);
        EXPECT(gbc.pc(), 0x576a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0318
        gbc.setState(0xa5aa, 0xd5ba, 0xe0b0, 0x2d66, 0xa732, 0xef80, 0x0, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd5ba);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xcb);
        EXPECT(gbc.readMem(0xa5ab), 0x39);
        // CB 39 031A
        gbc.setState(0xda81, 0x8bf0, 0x5550, 0x267b, 0x9f02, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xda81, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8bf0);
        EXPECT(gbc.pc(), 0xda83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda81), 0xcb);
        EXPECT(gbc.readMem(0xda82), 0x39);
        // CB 39 031B
        gbc.setState(0x1b3d, 0xd3c8, 0xbfe0, 0xdd5a, 0xfc37, 0x6c5c, 0x0, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd3c8);
        EXPECT(gbc.pc(), 0x1b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 031C
        gbc.setState(0x28f3, 0xac3a, 0xea80, 0x1a6f, 0x5c5e, 0xd05e, 0x1, 0x1);
        gbc.writeMem(0x28f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xac3a);
        EXPECT(gbc.pc(), 0x28f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 031D
        gbc.setState(0x4526, 0x600c, 0x51a0, 0x199e, 0x2a0e, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0x4526, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x4528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 031E
        gbc.setState(0xd7ee, 0x2566, 0xe8e0, 0x7915, 0x9e5a, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0xd7ee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2566);
        EXPECT(gbc.pc(), 0xd7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ee), 0xcb);
        EXPECT(gbc.readMem(0xd7ef), 0x39);
        // CB 39 031F
        gbc.setState(0x6ef0, 0x4f4a, 0x9d70, 0x16f0, 0x2fb3, 0xe10, 0x0, 0x0);
        gbc.writeMem(0x6ef0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4f4a);
        EXPECT(gbc.pc(), 0x6ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0320
        gbc.setState(0x9744, 0x78eb, 0x8480, 0x367e, 0x992e, 0x3660, 0x0, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x78eb);
        EXPECT(gbc.pc(), 0x9746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9744), 0xcb);
        EXPECT(gbc.readMem(0x9745), 0x39);
        // CB 39 0322
        gbc.setState(0xdfc8, 0x870c, 0x8030, 0x6914, 0x66a4, 0x40de, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x870c);
        EXPECT(gbc.pc(), 0xdfca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc8), 0xcb);
        EXPECT(gbc.readMem(0xdfc9), 0x39);
        // CB 39 0323
        gbc.setState(0x8972, 0xffc6, 0x8940, 0x1873, 0xef6, 0x1e3c, 0x1, 0x1);
        gbc.writeMem(0x8972, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xffc6);
        EXPECT(gbc.pc(), 0x8974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8972), 0xcb);
        EXPECT(gbc.readMem(0x8973), 0x39);
        // CB 39 0325
        gbc.setState(0x78a9, 0x887e, 0x380, 0xea11, 0x3d53, 0xf665, 0x0, 0x1);
        gbc.writeMem(0x78a9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x887e);
        EXPECT(gbc.pc(), 0x78ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0326
        gbc.setState(0x99fb, 0xde32, 0x7210, 0x881f, 0x3f18, 0x5b12, 0x0, 0x0);
        gbc.writeMem(0x99fb, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xde32);
        EXPECT(gbc.pc(), 0x99fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fb), 0xcb);
        EXPECT(gbc.readMem(0x99fc), 0x39);
        // CB 39 0327
        gbc.setState(0x14df, 0xa52d, 0xda0, 0x18df, 0x1bd, 0x10e9, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa52d);
        EXPECT(gbc.pc(), 0x14e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0328
        gbc.setState(0x7b40, 0x82b7, 0x1df0, 0xf845, 0x8657, 0xa810, 0x0, 0x0);
        gbc.writeMem(0x7b40, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0x7b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0329
        gbc.setState(0x9409, 0xe32c, 0x4d60, 0x5a8f, 0xdc04, 0x77a7, 0x0, 0x0);
        gbc.writeMem(0x9409, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe32c);
        EXPECT(gbc.pc(), 0x940b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9409), 0xcb);
        EXPECT(gbc.readMem(0x940a), 0x39);
        // CB 39 032A
        gbc.setState(0xbf85, 0x4c44, 0xec30, 0xddf4, 0xcbf9, 0xae37, 0x0, 0x0);
        gbc.writeMem(0xbf85, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4c44);
        EXPECT(gbc.pc(), 0xbf87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf85), 0xcb);
        EXPECT(gbc.readMem(0xbf86), 0x39);
        // CB 39 032B
        gbc.setState(0x675d, 0x13d9, 0x3fc0, 0xde07, 0x307e, 0x4d67, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x13d9);
        EXPECT(gbc.pc(), 0x675f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 032C
        gbc.setState(0x38e0, 0x70ba, 0x9390, 0xad1f, 0x3c8d, 0xe059, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x70ba);
        EXPECT(gbc.pc(), 0x38e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 032D
        gbc.setState(0x5019, 0x46a, 0xdae0, 0xac13, 0x687a, 0x7a0d, 0x1, 0x1);
        gbc.writeMem(0x5019, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x46a);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 032E
        gbc.setState(0xd031, 0xd42a, 0xcf00, 0x9e6b, 0x593d, 0xb64c, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd42a);
        EXPECT(gbc.pc(), 0xd033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd031), 0xcb);
        EXPECT(gbc.readMem(0xd032), 0x39);
        // CB 39 032F
        gbc.setState(0xcc16, 0x1aef, 0x7f00, 0xae2a, 0x2529, 0xceb2, 0x0, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1aef);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc16), 0xcb);
        EXPECT(gbc.readMem(0xcc17), 0x39);
        // CB 39 0330
        gbc.setState(0xee88, 0xfa79, 0xb630, 0x5861, 0xaa26, 0xb47, 0x0, 0x1);
        gbc.writeMem(0xee88, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfa79);
        EXPECT(gbc.pc(), 0xee8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee88), 0xcb);
        EXPECT(gbc.readMem(0xee89), 0x39);
        // CB 39 0331
        gbc.setState(0xe21f, 0x58c1, 0xb7c0, 0x98a5, 0x427b, 0x3fe4, 0x0, 0x1);
        gbc.writeMem(0xe21f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0xe221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe21f), 0xcb);
        EXPECT(gbc.readMem(0xe220), 0x39);
        // CB 39 0332
        gbc.setState(0xce5f, 0x1653, 0x9380, 0x3de, 0x59d3, 0xd939, 0x0, 0x0);
        gbc.writeMem(0xce5f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1653);
        EXPECT(gbc.pc(), 0xce61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5f), 0xcb);
        EXPECT(gbc.readMem(0xce60), 0x39);
        // CB 39 0333
        gbc.setState(0xdc51, 0xd16b, 0x1e00, 0x56e7, 0xaadb, 0xbbf2, 0x0, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd16b);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc51), 0xcb);
        EXPECT(gbc.readMem(0xdc52), 0x39);
        // CB 39 0334
        gbc.setState(0x495b, 0xefc9, 0x4b40, 0x6b00, 0xbe9a, 0x6a5a, 0x0, 0x0);
        gbc.writeMem(0x495b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xefc9);
        EXPECT(gbc.pc(), 0x495d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0335
        gbc.setState(0x9e6e, 0xcd28, 0xca60, 0x2743, 0xd9, 0x5eac, 0x0, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcd28);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0x39);
        // CB 39 0336
        gbc.setState(0xc194, 0x2663, 0x8640, 0x1b13, 0x15ac, 0x5a80, 0x1, 0x0);
        gbc.writeMem(0xc194, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2663);
        EXPECT(gbc.pc(), 0xc196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc194), 0xcb);
        EXPECT(gbc.readMem(0xc195), 0x39);
        // CB 39 0338
        gbc.setState(0x6375, 0x8eec, 0x8e70, 0x308b, 0x689b, 0x83e1, 0x0, 0x1);
        gbc.writeMem(0x6375, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8eec);
        EXPECT(gbc.pc(), 0x6377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0339
        gbc.setState(0x9990, 0xa93c, 0xadc0, 0x2e65, 0x6239, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa93c);
        EXPECT(gbc.pc(), 0x9992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9990), 0xcb);
        EXPECT(gbc.readMem(0x9991), 0x39);
        // CB 39 033A
        gbc.setState(0x9bfa, 0x2ac7, 0x1910, 0x9aef, 0x2504, 0x40d0, 0x0, 0x1);
        gbc.writeMem(0x9bfa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2ac7);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfa), 0xcb);
        EXPECT(gbc.readMem(0x9bfb), 0x39);
        // CB 39 033B
        gbc.setState(0xd97b, 0x2040, 0x2070, 0x5fc9, 0x5685, 0x4e51, 0x1, 0x0);
        gbc.writeMem(0xd97b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2040);
        EXPECT(gbc.pc(), 0xd97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97b), 0xcb);
        EXPECT(gbc.readMem(0xd97c), 0x39);
        // CB 39 033C
        gbc.setState(0x208d, 0xeb96, 0x82d0, 0x5904, 0xb793, 0xd1fe, 0x0, 0x1);
        gbc.writeMem(0x208d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xeb96);
        EXPECT(gbc.pc(), 0x208f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 033D
        gbc.setState(0x9a4, 0xb8f6, 0x2a80, 0xf24b, 0xbac1, 0x1427, 0x1, 0x1);
        gbc.writeMem(0x9a4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb8f6);
        EXPECT(gbc.pc(), 0x9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 033E
        gbc.setState(0x5bdd, 0xf300, 0xfc30, 0x570b, 0xffd1, 0x40ad, 0x0, 0x0);
        gbc.writeMem(0x5bdd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf300);
        EXPECT(gbc.pc(), 0x5bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 033F
        gbc.setState(0x1531, 0xd44b, 0xab0, 0xc4f7, 0x6caf, 0x1320, 0x1, 0x1);
        gbc.writeMem(0x1531, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0340
        gbc.setState(0x412c, 0x1639, 0x9c90, 0x7f6b, 0xa2c0, 0x5c17, 0x0, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1639);
        EXPECT(gbc.pc(), 0x412e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0341
        gbc.setState(0x7816, 0x6d81, 0x56c0, 0xe355, 0x1275, 0xe7ad, 0x0, 0x0);
        gbc.writeMem(0x7816, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x7818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0342
        gbc.setState(0x32bd, 0xda5e, 0xcdb0, 0x58b7, 0x5afd, 0x21d4, 0x0, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xda5e);
        EXPECT(gbc.pc(), 0x32bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0343
        gbc.setState(0xd89f, 0xae63, 0x8870, 0x83a3, 0x19d7, 0x2f1f, 0x0, 0x0);
        gbc.writeMem(0xd89f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xae63);
        EXPECT(gbc.pc(), 0xd8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89f), 0xcb);
        EXPECT(gbc.readMem(0xd8a0), 0x39);
        // CB 39 0344
        gbc.setState(0xeadc, 0xdc38, 0xab60, 0x3e00, 0xaa6a, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0xeadc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdc38);
        EXPECT(gbc.pc(), 0xeade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeadc), 0xcb);
        EXPECT(gbc.readMem(0xeadd), 0x39);
        // CB 39 0345
        gbc.setState(0x2e1b, 0xf65a, 0xcfd0, 0x6ad5, 0xb1fc, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf65a);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0346
        gbc.setState(0xc614, 0x1ea8, 0x5de0, 0x5295, 0x885f, 0x5378, 0x0, 0x1);
        gbc.writeMem(0xc614, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1ea8);
        EXPECT(gbc.pc(), 0xc616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc614), 0xcb);
        EXPECT(gbc.readMem(0xc615), 0x39);
        // CB 39 0347
        gbc.setState(0xb26a, 0x5a64, 0xf020, 0xa41, 0x3d44, 0x8a67, 0x1, 0x0);
        gbc.writeMem(0xb26a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5a64);
        EXPECT(gbc.pc(), 0xb26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26a), 0xcb);
        EXPECT(gbc.readMem(0xb26b), 0x39);
        // CB 39 0348
        gbc.setState(0x834f, 0xf09a, 0xb830, 0x1648, 0xefe9, 0xcc1e, 0x1, 0x0);
        gbc.writeMem(0x834f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf09a);
        EXPECT(gbc.pc(), 0x8351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834f), 0xcb);
        EXPECT(gbc.readMem(0x8350), 0x39);
        // CB 39 0349
        gbc.setState(0xd912, 0xf8b9, 0x57f0, 0x1d70, 0x194c, 0x512, 0x1, 0x0);
        gbc.writeMem(0xd912, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf8b9);
        EXPECT(gbc.pc(), 0xd914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd912), 0xcb);
        EXPECT(gbc.readMem(0xd913), 0x39);
        // CB 39 034A
        gbc.setState(0xdcad, 0xe00a, 0xd00, 0x7a9b, 0xabe0, 0x685b, 0x0, 0x1);
        gbc.writeMem(0xdcad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe00a);
        EXPECT(gbc.pc(), 0xdcaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcad), 0xcb);
        EXPECT(gbc.readMem(0xdcae), 0x39);
        // CB 39 034B
        gbc.setState(0xe7c5, 0xf590, 0x8810, 0xc6a5, 0xe715, 0x303b, 0x1, 0x1);
        gbc.writeMem(0xe7c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf590);
        EXPECT(gbc.pc(), 0xe7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c5), 0xcb);
        EXPECT(gbc.readMem(0xe7c6), 0x39);
        // CB 39 034C
        gbc.setState(0x869d, 0xa84b, 0xcbd0, 0x4307, 0xd7fc, 0xa797, 0x0, 0x1);
        gbc.writeMem(0x869d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa84b);
        EXPECT(gbc.pc(), 0x869f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869d), 0xcb);
        EXPECT(gbc.readMem(0x869e), 0x39);
        // CB 39 034D
        gbc.setState(0x6618, 0xd6d1, 0xb5e0, 0x3999, 0xea10, 0xe9c0, 0x1, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 034E
        gbc.setState(0x3c2c, 0x7a47, 0x1f70, 0x9a4e, 0xa9b5, 0x3e5b, 0x0, 0x1);
        gbc.writeMem(0x3c2c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7a47);
        EXPECT(gbc.pc(), 0x3c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 034F
        gbc.setState(0x2d34, 0x8612, 0xaaa0, 0xf45c, 0x8245, 0xf74b, 0x0, 0x1);
        gbc.writeMem(0x2d34, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8612);
        EXPECT(gbc.pc(), 0x2d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0350
        gbc.setState(0xa729, 0x63f8, 0xe4a0, 0x40f6, 0x99db, 0xef34, 0x1, 0x1);
        gbc.writeMem(0xa729, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0xa72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa729), 0xcb);
        EXPECT(gbc.readMem(0xa72a), 0x39);
        // CB 39 0351
        gbc.setState(0x3bfc, 0xf6c3, 0x700, 0xf527, 0x74ad, 0xce6a, 0x0, 0x1);
        gbc.writeMem(0x3bfc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf6c3);
        EXPECT(gbc.pc(), 0x3bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0352
        gbc.setState(0xd3fc, 0x8537, 0xf6a0, 0x69e0, 0x2b95, 0x1f27, 0x1, 0x1);
        gbc.writeMem(0xd3fc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8537);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fc), 0xcb);
        EXPECT(gbc.readMem(0xd3fd), 0x39);
        // CB 39 0353
        gbc.setState(0xc7b8, 0xc49, 0x5b20, 0x42d8, 0xf855, 0x64f2, 0x0, 0x0);
        gbc.writeMem(0xc7b8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc49);
        EXPECT(gbc.pc(), 0xc7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b8), 0xcb);
        EXPECT(gbc.readMem(0xc7b9), 0x39);
        // CB 39 0354
        gbc.setState(0x243, 0x3131, 0x880, 0x2368, 0x3d9e, 0x7a51, 0x1, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3131);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0355
        gbc.setState(0x5616, 0x1652, 0xd7d0, 0xcd67, 0x1e41, 0xe8b3, 0x1, 0x1);
        gbc.writeMem(0x5616, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1652);
        EXPECT(gbc.pc(), 0x5618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0356
        gbc.setState(0xb8ad, 0x8ee7, 0xdfb0, 0xe7a0, 0x477a, 0x3bc4, 0x1, 0x0);
        gbc.writeMem(0xb8ad, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8ee7);
        EXPECT(gbc.pc(), 0xb8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ad), 0xcb);
        EXPECT(gbc.readMem(0xb8ae), 0x39);
        // CB 39 0357
        gbc.setState(0xbdc5, 0xace7, 0x6ab0, 0x4395, 0xee5, 0x6724, 0x1, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xace7);
        EXPECT(gbc.pc(), 0xbdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc5), 0xcb);
        EXPECT(gbc.readMem(0xbdc6), 0x39);
        // CB 39 0358
        gbc.setState(0xbdd3, 0x2396, 0x2970, 0x2085, 0x1664, 0x3b9d, 0x0, 0x0);
        gbc.writeMem(0xbdd3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2396);
        EXPECT(gbc.pc(), 0xbdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd3), 0xcb);
        EXPECT(gbc.readMem(0xbdd4), 0x39);
        // CB 39 0359
        gbc.setState(0x79a0, 0xcdc5, 0xc020, 0x13ce, 0xb4ee, 0x163c, 0x1, 0x1);
        gbc.writeMem(0x79a0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcdc5);
        EXPECT(gbc.pc(), 0x79a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 035A
        gbc.setState(0x1fc7, 0x8ce5, 0xd9e0, 0xa7e7, 0xe192, 0x72b9, 0x0, 0x0);
        gbc.writeMem(0x1fc7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8ce5);
        EXPECT(gbc.pc(), 0x1fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 035B
        gbc.setState(0x2209, 0x58bc, 0xbcf0, 0xe289, 0x559d, 0xd6eb, 0x1, 0x0);
        gbc.writeMem(0x2209, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x58bc);
        EXPECT(gbc.pc(), 0x220b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 035C
        gbc.setState(0xbc2c, 0xd90c, 0x1b0, 0x8b5a, 0xde7a, 0x86a7, 0x0, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2c), 0xcb);
        EXPECT(gbc.readMem(0xbc2d), 0x39);
        // CB 39 035D
        gbc.setState(0xe0b1, 0x5892, 0x76e0, 0xb617, 0xdf87, 0xa2a5, 0x0, 0x0);
        gbc.writeMem(0xe0b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5892);
        EXPECT(gbc.pc(), 0xe0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b1), 0xcb);
        EXPECT(gbc.readMem(0xe0b2), 0x39);
        // CB 39 035E
        gbc.setState(0xc460, 0xe9f4, 0xcf30, 0x5013, 0x1db5, 0x1ced, 0x0, 0x0);
        gbc.writeMem(0xc460, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe9f4);
        EXPECT(gbc.pc(), 0xc462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc460), 0xcb);
        EXPECT(gbc.readMem(0xc461), 0x39);
        // CB 39 035F
        gbc.setState(0x7269, 0xa13b, 0x5800, 0x3da4, 0xbdd0, 0xeb37, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa13b);
        EXPECT(gbc.pc(), 0x726b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0360
        gbc.setState(0xd227, 0x738e, 0x4ae0, 0xe495, 0x25f1, 0xbe97, 0x1, 0x0);
        gbc.writeMem(0xd227, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x738e);
        EXPECT(gbc.pc(), 0xd229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd227), 0xcb);
        EXPECT(gbc.readMem(0xd228), 0x39);
        // CB 39 0361
        gbc.setState(0x41f6, 0x1387, 0x4e50, 0x73f7, 0x30fd, 0x3787, 0x0, 0x1);
        gbc.writeMem(0x41f6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1387);
        EXPECT(gbc.pc(), 0x41f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0362
        gbc.setState(0x68db, 0x132e, 0xa440, 0x3896, 0xb7b7, 0x30a3, 0x1, 0x1);
        gbc.writeMem(0x68db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x132e);
        EXPECT(gbc.pc(), 0x68dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0363
        gbc.setState(0xd290, 0x3739, 0x7bf0, 0xaa2c, 0xc1f0, 0x3115, 0x0, 0x0);
        gbc.writeMem(0xd290, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3739);
        EXPECT(gbc.pc(), 0xd292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd290), 0xcb);
        EXPECT(gbc.readMem(0xd291), 0x39);
        // CB 39 0364
        gbc.setState(0xb23d, 0x2b9, 0xc770, 0x9db6, 0xa521, 0xe130, 0x1, 0x1);
        gbc.writeMem(0xb23d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0xb23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23d), 0xcb);
        EXPECT(gbc.readMem(0xb23e), 0x39);
        // CB 39 0365
        gbc.setState(0x2459, 0x82d3, 0x9610, 0x8561, 0xa7e0, 0x4617, 0x1, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0x245b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0366
        gbc.setState(0x2452, 0xe1a4, 0x8cf0, 0xcf7, 0x72bc, 0xc733, 0x0, 0x1);
        gbc.writeMem(0x2452, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe1a4);
        EXPECT(gbc.pc(), 0x2454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0368
        gbc.setState(0xc1b1, 0x752d, 0x6170, 0xc78e, 0xa011, 0x49ec, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x752d);
        EXPECT(gbc.pc(), 0xc1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b1), 0xcb);
        EXPECT(gbc.readMem(0xc1b2), 0x39);
        // CB 39 0369
        gbc.setState(0x1fc5, 0x209a, 0xf0d0, 0x52a2, 0x517, 0xb1ca, 0x0, 0x0);
        gbc.writeMem(0x1fc5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x209a);
        EXPECT(gbc.pc(), 0x1fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 036A
        gbc.setState(0xd0e2, 0x6b52, 0xc90, 0x61f8, 0x6816, 0xc20, 0x1, 0x0);
        gbc.writeMem(0xd0e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6b52);
        EXPECT(gbc.pc(), 0xd0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e2), 0xcb);
        EXPECT(gbc.readMem(0xd0e3), 0x39);
        // CB 39 036C
        gbc.setState(0x9fe1, 0xbb53, 0x7850, 0x2a10, 0xa187, 0xc81e, 0x0, 0x0);
        gbc.writeMem(0x9fe1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbb53);
        EXPECT(gbc.pc(), 0x9fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe1), 0xcb);
        EXPECT(gbc.readMem(0x9fe2), 0x39);
        // CB 39 036D
        gbc.setState(0x755d, 0xf4da, 0x3f10, 0xf17, 0x3349, 0x64da, 0x1, 0x0);
        gbc.writeMem(0x755d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf4da);
        EXPECT(gbc.pc(), 0x755f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 036E
        gbc.setState(0x276e, 0xd74d, 0x4a50, 0x1a8, 0xf105, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0x276e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0x2770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 036F
        gbc.setState(0x35ce, 0x2544, 0x5e30, 0x2531, 0x6ec5, 0xa32f, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2544);
        EXPECT(gbc.pc(), 0x35d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0370
        gbc.setState(0x8b51, 0xf0d8, 0xfad0, 0x997c, 0x36f3, 0x97b2, 0x0, 0x1);
        gbc.writeMem(0x8b51, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf0d8);
        EXPECT(gbc.pc(), 0x8b53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b51), 0xcb);
        EXPECT(gbc.readMem(0x8b52), 0x39);
        // CB 39 0371
        gbc.setState(0xe8c5, 0x6067, 0x8f60, 0x86dc, 0x8dc1, 0xa789, 0x0, 0x0);
        gbc.writeMem(0xe8c5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6067);
        EXPECT(gbc.pc(), 0xe8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c5), 0xcb);
        EXPECT(gbc.readMem(0xe8c6), 0x39);
        // CB 39 0372
        gbc.setState(0x7f3, 0xc42f, 0x39f0, 0x2c2f, 0x16a2, 0x1e5a, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc42f);
        EXPECT(gbc.pc(), 0x7f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0373
        gbc.setState(0xe0db, 0x4e27, 0x4150, 0xca8b, 0x9e32, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xe0db, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4e27);
        EXPECT(gbc.pc(), 0xe0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0db), 0xcb);
        EXPECT(gbc.readMem(0xe0dc), 0x39);
        // CB 39 0374
        gbc.setState(0x7b1e, 0xd06d, 0x1040, 0xdf85, 0xef86, 0x7107, 0x0, 0x1);
        gbc.writeMem(0x7b1e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd06d);
        EXPECT(gbc.pc(), 0x7b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0375
        gbc.setState(0x4015, 0xe3b2, 0x1b40, 0x6798, 0x598, 0xa2a0, 0x0, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe3b2);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0376
        gbc.setState(0x21de, 0xd081, 0x2bf0, 0xccb9, 0x855f, 0x355e, 0x1, 0x1);
        gbc.writeMem(0x21de, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd081);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0377
        gbc.setState(0x9247, 0xaa21, 0x420, 0x32f4, 0x7cb4, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0x9247, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaa21);
        EXPECT(gbc.pc(), 0x9249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9247), 0xcb);
        EXPECT(gbc.readMem(0x9248), 0x39);
        // CB 39 0378
        gbc.setState(0x40a1, 0xb3f2, 0xe450, 0x7cb4, 0x554f, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0x40a1, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb3f2);
        EXPECT(gbc.pc(), 0x40a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0379
        gbc.setState(0x2ccc, 0x3a70, 0xc770, 0x4cc2, 0xfe95, 0x300d, 0x1, 0x0);
        gbc.writeMem(0x2ccc, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3a70);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 037A
        gbc.setState(0x9250, 0x2a64, 0x5750, 0xbfd0, 0xb057, 0x7b71, 0x0, 0x1);
        gbc.writeMem(0x9250, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2a64);
        EXPECT(gbc.pc(), 0x9252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9250), 0xcb);
        EXPECT(gbc.readMem(0x9251), 0x39);
        // CB 39 037B
        gbc.setState(0xfb0, 0xe12, 0x7ba0, 0x8234, 0x59dd, 0x9f02, 0x1, 0x0);
        gbc.writeMem(0xfb0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe12);
        EXPECT(gbc.pc(), 0xfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 037C
        gbc.setState(0xeedd, 0x32c, 0x7b10, 0x369c, 0x8455, 0x42f7, 0x0, 0x1);
        gbc.writeMem(0xeedd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x32c);
        EXPECT(gbc.pc(), 0xeedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedd), 0xcb);
        EXPECT(gbc.readMem(0xeede), 0x39);
        // CB 39 037D
        gbc.setState(0x6423, 0x356f, 0xc8d0, 0xcde2, 0x92bd, 0x1a73, 0x0, 0x0);
        gbc.writeMem(0x6423, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x356f);
        EXPECT(gbc.pc(), 0x6425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 037E
        gbc.setState(0xc639, 0x93d2, 0x89a0, 0x4fbd, 0xd6c4, 0xec7e, 0x0, 0x1);
        gbc.writeMem(0xc639, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x93d2);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0x39);
        // CB 39 0380
        gbc.setState(0x7a86, 0x3836, 0x5bd0, 0x3c6c, 0x2408, 0xa958, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3836);
        EXPECT(gbc.pc(), 0x7a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0381
        gbc.setState(0x4fc3, 0xbaa7, 0x3c60, 0xa32, 0x267, 0x47ec, 0x1, 0x1);
        gbc.writeMem(0x4fc3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbaa7);
        EXPECT(gbc.pc(), 0x4fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0382
        gbc.setState(0xed8c, 0x5a35, 0xfb0, 0xdf94, 0x40f5, 0xa489, 0x0, 0x1);
        gbc.writeMem(0xed8c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5a35);
        EXPECT(gbc.pc(), 0xed8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8c), 0xcb);
        EXPECT(gbc.readMem(0xed8d), 0x39);
        // CB 39 0383
        gbc.setState(0x29ed, 0x34c9, 0x20c0, 0x7358, 0x8218, 0xfb20, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x34c9);
        EXPECT(gbc.pc(), 0x29ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0384
        gbc.setState(0x7562, 0x5f1c, 0xfd60, 0x1633, 0x3769, 0xd81e, 0x1, 0x1);
        gbc.writeMem(0x7562, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5f1c);
        EXPECT(gbc.pc(), 0x7564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0385
        gbc.setState(0xae8, 0x86be, 0x82f0, 0x5da, 0xbb51, 0x6bda, 0x1, 0x0);
        gbc.writeMem(0xae8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x86be);
        EXPECT(gbc.pc(), 0xaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0386
        gbc.setState(0x1569, 0x3a94, 0x61f0, 0xd720, 0xd765, 0x11a0, 0x1, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3a94);
        EXPECT(gbc.pc(), 0x156b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0387
        gbc.setState(0xb497, 0xb45b, 0xab20, 0xd449, 0xb114, 0x1e0, 0x1, 0x1);
        gbc.writeMem(0xb497, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0x39);
        // CB 39 0388
        gbc.setState(0xb89e, 0xea16, 0xbf50, 0xa925, 0x7d6d, 0x213c, 0x1, 0x1);
        gbc.writeMem(0xb89e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89e), 0xcb);
        EXPECT(gbc.readMem(0xb89f), 0x39);
        // CB 39 038A
        gbc.setState(0x57e2, 0xe0e3, 0x3b30, 0x2912, 0x8a61, 0xb31e, 0x0, 0x0);
        gbc.writeMem(0x57e2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe0e3);
        EXPECT(gbc.pc(), 0x57e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 038B
        gbc.setState(0x3113, 0xcdef, 0x5d0, 0x6044, 0xc1d5, 0x6c8d, 0x0, 0x0);
        gbc.writeMem(0x3113, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcdef);
        EXPECT(gbc.pc(), 0x3115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 038C
        gbc.setState(0xabb9, 0x5da3, 0xc200, 0xefe1, 0xefd0, 0x4c2d, 0x0, 0x0);
        gbc.writeMem(0xabb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5da3);
        EXPECT(gbc.pc(), 0xabbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb9), 0xcb);
        EXPECT(gbc.readMem(0xabba), 0x39);
        // CB 39 038D
        gbc.setState(0x1768, 0x1b, 0xd0f0, 0xdbdc, 0x5979, 0xb8b5, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1b);
        EXPECT(gbc.pc(), 0x176a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 038E
        gbc.setState(0x67d6, 0x4ff3, 0x7a20, 0xbf37, 0x89bc, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4ff3);
        EXPECT(gbc.pc(), 0x67d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 038F
        gbc.setState(0x75b5, 0xdbb0, 0xe470, 0xb192, 0xfbcb, 0x47b, 0x1, 0x0);
        gbc.writeMem(0x75b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdbb0);
        EXPECT(gbc.pc(), 0x75b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 0390
        gbc.setState(0xb234, 0x187e, 0x17f0, 0xa18c, 0xce00, 0xfb6b, 0x0, 0x0);
        gbc.writeMem(0xb234, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x187e);
        EXPECT(gbc.pc(), 0xb236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb234), 0xcb);
        EXPECT(gbc.readMem(0xb235), 0x39);
        // CB 39 0391
        gbc.setState(0x82c6, 0x6, 0xf150, 0x54e0, 0x2adb, 0xff68, 0x0, 0x0);
        gbc.writeMem(0x82c6, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6);
        EXPECT(gbc.pc(), 0x82c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0xcb);
        EXPECT(gbc.readMem(0x82c7), 0x39);
        // CB 39 0392
        gbc.setState(0xc158, 0xc2bf, 0xf060, 0x28a0, 0x9057, 0x3d86, 0x0, 0x0);
        gbc.writeMem(0xc158, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc2bf);
        EXPECT(gbc.pc(), 0xc15a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc158), 0xcb);
        EXPECT(gbc.readMem(0xc159), 0x39);
        // CB 39 0393
        gbc.setState(0x90bf, 0x3a2c, 0x6890, 0x7e4a, 0x18a8, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x90bf, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3a2c);
        EXPECT(gbc.pc(), 0x90c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90bf), 0xcb);
        EXPECT(gbc.readMem(0x90c0), 0x39);
        // CB 39 0395
        gbc.setState(0x89b5, 0xa43e, 0x9840, 0x8fda, 0x465, 0x5d92, 0x1, 0x1);
        gbc.writeMem(0x89b5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa43e);
        EXPECT(gbc.pc(), 0x89b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b5), 0xcb);
        EXPECT(gbc.readMem(0x89b6), 0x39);
        // CB 39 0396
        gbc.setState(0xb001, 0x9c04, 0x42e0, 0xfa07, 0xc75b, 0xf3ff, 0x0, 0x0);
        gbc.writeMem(0xb001, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9c04);
        EXPECT(gbc.pc(), 0xb003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb001), 0xcb);
        EXPECT(gbc.readMem(0xb002), 0x39);
        // CB 39 0397
        gbc.setState(0x2496, 0xc4ab, 0x3b60, 0x715b, 0x7a97, 0x97da, 0x0, 0x1);
        gbc.writeMem(0x2496, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc4ab);
        EXPECT(gbc.pc(), 0x2498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0398
        gbc.setState(0x4988, 0x7dce, 0xc790, 0x3311, 0x67ce, 0x7671, 0x1, 0x0);
        gbc.writeMem(0x4988, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7dce);
        EXPECT(gbc.pc(), 0x498a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 0399
        gbc.setState(0x6cf5, 0xe3d4, 0xe450, 0x773e, 0x42a0, 0x7381, 0x1, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe3d4);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 039A
        gbc.setState(0x4c9f, 0x4e2d, 0x88e0, 0xbe1e, 0x4bb0, 0xf2a0, 0x1, 0x0);
        gbc.writeMem(0x4c9f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4e2d);
        EXPECT(gbc.pc(), 0x4ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 039B
        gbc.setState(0x64a, 0x6485, 0xb990, 0x5316, 0x21d2, 0x4a54, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 039C
        gbc.setState(0x873e, 0xf689, 0x7630, 0xd060, 0xc754, 0x42f9, 0x1, 0x1);
        gbc.writeMem(0x873e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf689);
        EXPECT(gbc.pc(), 0x8740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x873e), 0xcb);
        EXPECT(gbc.readMem(0x873f), 0x39);
        // CB 39 039D
        gbc.setState(0x6cef, 0x6c54, 0xc8c0, 0x9808, 0xfa6f, 0x5687, 0x0, 0x1);
        gbc.writeMem(0x6cef, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c54);
        EXPECT(gbc.pc(), 0x6cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 039E
        gbc.setState(0xa2d3, 0x3ec4, 0x4a60, 0xaa9b, 0xb756, 0x86ff, 0x1, 0x0);
        gbc.writeMem(0xa2d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3ec4);
        EXPECT(gbc.pc(), 0xa2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d3), 0xcb);
        EXPECT(gbc.readMem(0xa2d4), 0x39);
        // CB 39 039F
        gbc.setState(0x2242, 0x95cb, 0x6e90, 0xe92b, 0x819f, 0xabda, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x95cb);
        EXPECT(gbc.pc(), 0x2244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03A0
        gbc.setState(0xe27f, 0xc751, 0x7640, 0x2099, 0x5fe4, 0xf4a7, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc751);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe27f), 0xcb);
        EXPECT(gbc.readMem(0xe280), 0x39);
        // CB 39 03A1
        gbc.setState(0xec79, 0x7540, 0xf230, 0xd2ef, 0xe48c, 0x5454, 0x0, 0x0);
        gbc.writeMem(0xec79, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7540);
        EXPECT(gbc.pc(), 0xec7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec79), 0xcb);
        EXPECT(gbc.readMem(0xec7a), 0x39);
        // CB 39 03A2
        gbc.setState(0x2d76, 0x8056, 0x4320, 0xabb4, 0xb48b, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x2d76, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8056);
        EXPECT(gbc.pc(), 0x2d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03A3
        gbc.setState(0xc773, 0xdbf9, 0xc0b0, 0xda59, 0xaa5f, 0x61b9, 0x1, 0x0);
        gbc.writeMem(0xc773, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdbf9);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc773), 0xcb);
        EXPECT(gbc.readMem(0xc774), 0x39);
        // CB 39 03A4
        gbc.setState(0xa629, 0x1b47, 0xc400, 0x427e, 0xa3b3, 0xf69b, 0x1, 0x1);
        gbc.writeMem(0xa629, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1b47);
        EXPECT(gbc.pc(), 0xa62b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa629), 0xcb);
        EXPECT(gbc.readMem(0xa62a), 0x39);
        // CB 39 03A5
        gbc.setState(0x47ca, 0x5348, 0xd840, 0x60f6, 0xe857, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0x47ca, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5348);
        EXPECT(gbc.pc(), 0x47cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03A6
        gbc.setState(0x31df, 0xd602, 0xe00, 0x9fb4, 0x803a, 0x6b09, 0x1, 0x0);
        gbc.writeMem(0x31df, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd602);
        EXPECT(gbc.pc(), 0x31e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03A7
        gbc.setState(0x65c0, 0xe30, 0x2ce0, 0x819b, 0xd24a, 0xddd7, 0x0, 0x0);
        gbc.writeMem(0x65c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe30);
        EXPECT(gbc.pc(), 0x65c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03A8
        gbc.setState(0x15d0, 0x2214, 0x5130, 0x2eca, 0x625b, 0x32a5, 0x0, 0x1);
        gbc.writeMem(0x15d0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2214);
        EXPECT(gbc.pc(), 0x15d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03A9
        gbc.setState(0x9e82, 0xb721, 0x9e0, 0x43e8, 0xc8ee, 0x2c71, 0x1, 0x0);
        gbc.writeMem(0x9e82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb721);
        EXPECT(gbc.pc(), 0x9e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e82), 0xcb);
        EXPECT(gbc.readMem(0x9e83), 0x39);
        // CB 39 03AA
        gbc.setState(0x7eed, 0x3f2b, 0x7140, 0x9d12, 0x2073, 0xd1c7, 0x0, 0x0);
        gbc.writeMem(0x7eed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3f2b);
        EXPECT(gbc.pc(), 0x7eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03AB
        gbc.setState(0x4921, 0x1d13, 0xfec0, 0xe157, 0x3acf, 0xd2f1, 0x0, 0x1);
        gbc.writeMem(0x4921, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1d13);
        EXPECT(gbc.pc(), 0x4923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03AC
        gbc.setState(0x3855, 0xf8b2, 0xf770, 0xb9ec, 0x90f3, 0xafe9, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf8b2);
        EXPECT(gbc.pc(), 0x3857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03AF
        gbc.setState(0xc26e, 0x6e80, 0xfc20, 0x970e, 0x33b5, 0xb2f2, 0x1, 0x1);
        gbc.writeMem(0xc26e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6e80);
        EXPECT(gbc.pc(), 0xc270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26e), 0xcb);
        EXPECT(gbc.readMem(0xc26f), 0x39);
        // CB 39 03B0
        gbc.setState(0xaed, 0x6809, 0x2400, 0xbb63, 0x637b, 0xf81a, 0x1, 0x1);
        gbc.writeMem(0xaed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6809);
        EXPECT(gbc.pc(), 0xaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03B1
        gbc.setState(0xb551, 0x3960, 0x6f50, 0xfdbe, 0x52c, 0x4f56, 0x1, 0x0);
        gbc.writeMem(0xb551, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3960);
        EXPECT(gbc.pc(), 0xb553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb551), 0xcb);
        EXPECT(gbc.readMem(0xb552), 0x39);
        // CB 39 03B2
        gbc.setState(0x1111, 0x731b, 0x90e0, 0xe2f3, 0xcd4e, 0x885d, 0x0, 0x1);
        gbc.writeMem(0x1111, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x731b);
        EXPECT(gbc.pc(), 0x1113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03B3
        gbc.setState(0x3007, 0x50f2, 0x6240, 0x6585, 0xa8e3, 0xc465, 0x1, 0x1);
        gbc.writeMem(0x3007, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x50f2);
        EXPECT(gbc.pc(), 0x3009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03B4
        gbc.setState(0x2943, 0x22f1, 0x1410, 0xb829, 0xe55, 0x1728, 0x0, 0x0);
        gbc.writeMem(0x2943, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x22f1);
        EXPECT(gbc.pc(), 0x2945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03B5
        gbc.setState(0xd134, 0x2db5, 0x4800, 0x430d, 0xbc8b, 0xe8c6, 0x1, 0x0);
        gbc.writeMem(0xd134, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2db5);
        EXPECT(gbc.pc(), 0xd136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd134), 0xcb);
        EXPECT(gbc.readMem(0xd135), 0x39);
        // CB 39 03B6
        gbc.setState(0xb8c0, 0xab44, 0xeb30, 0xdc3c, 0x9f76, 0x7927, 0x0, 0x1);
        gbc.writeMem(0xb8c0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xab44);
        EXPECT(gbc.pc(), 0xb8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c0), 0xcb);
        EXPECT(gbc.readMem(0xb8c1), 0x39);
        // CB 39 03B7
        gbc.setState(0x9f07, 0xa70f, 0x7750, 0xc26, 0xc727, 0xfdae, 0x0, 0x0);
        gbc.writeMem(0x9f07, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa70f);
        EXPECT(gbc.pc(), 0x9f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f07), 0xcb);
        EXPECT(gbc.readMem(0x9f08), 0x39);
        // CB 39 03B8
        gbc.setState(0xcaf5, 0x7da0, 0x3f60, 0x6271, 0x176b, 0x8234, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7da0);
        EXPECT(gbc.pc(), 0xcaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf5), 0xcb);
        EXPECT(gbc.readMem(0xcaf6), 0x39);
        // CB 39 03B9
        gbc.setState(0x2cee, 0x2d3, 0x2ab0, 0xbfb, 0xa7d0, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x2cee, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2d3);
        EXPECT(gbc.pc(), 0x2cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03BA
        gbc.setState(0xe144, 0x5066, 0x8030, 0x229, 0x70fb, 0xb4ac, 0x1, 0x1);
        gbc.writeMem(0xe144, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5066);
        EXPECT(gbc.pc(), 0xe146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe144), 0xcb);
        EXPECT(gbc.readMem(0xe145), 0x39);
        // CB 39 03BC
        gbc.setState(0x9eec, 0xa2b4, 0xee50, 0x69cc, 0x7677, 0x6b0c, 0x1, 0x1);
        gbc.writeMem(0x9eec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa2b4);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eec), 0xcb);
        EXPECT(gbc.readMem(0x9eed), 0x39);
        // CB 39 03BD
        gbc.setState(0x9f4, 0x7f00, 0x3860, 0x4652, 0xcfdf, 0xfd9f, 0x1, 0x1);
        gbc.writeMem(0x9f4, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7f00);
        EXPECT(gbc.pc(), 0x9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03BE
        gbc.setState(0x9f7d, 0xefc2, 0x5e20, 0xbb8c, 0xa71c, 0x6366, 0x1, 0x1);
        gbc.writeMem(0x9f7d, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xefc2);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7d), 0xcb);
        EXPECT(gbc.readMem(0x9f7e), 0x39);
        // CB 39 03BF
        gbc.setState(0xb2ec, 0xc40d, 0x8840, 0x155a, 0x78f6, 0x8fae, 0x0, 0x1);
        gbc.writeMem(0xb2ec, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc40d);
        EXPECT(gbc.pc(), 0xb2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ec), 0xcb);
        EXPECT(gbc.readMem(0xb2ed), 0x39);
        // CB 39 03C0
        gbc.setState(0x25ab, 0xa91b, 0xd860, 0xabb1, 0x5442, 0xab83, 0x0, 0x1);
        gbc.writeMem(0x25ab, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa91b);
        EXPECT(gbc.pc(), 0x25ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03C1
        gbc.setState(0x8783, 0xdc13, 0x160, 0xf8de, 0xf528, 0x6fd6, 0x0, 0x0);
        gbc.writeMem(0x8783, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdc13);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xcb);
        EXPECT(gbc.readMem(0x8784), 0x39);
        // CB 39 03C2
        gbc.setState(0x57fd, 0x3815, 0xb730, 0x3d98, 0x2342, 0xff20, 0x1, 0x0);
        gbc.writeMem(0x57fd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3815);
        EXPECT(gbc.pc(), 0x57ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03C3
        gbc.setState(0x93a2, 0xd433, 0x4a80, 0x2037, 0x7ac4, 0x47d6, 0x0, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd433);
        EXPECT(gbc.pc(), 0x93a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a2), 0xcb);
        EXPECT(gbc.readMem(0x93a3), 0x39);
        // CB 39 03C4
        gbc.setState(0x38b3, 0xc2aa, 0xd010, 0x4001, 0xb5b7, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0x38b3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc2aa);
        EXPECT(gbc.pc(), 0x38b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03C5
        gbc.setState(0xe1d7, 0xc17a, 0x8a30, 0x2c88, 0xa4ea, 0x7247, 0x0, 0x0);
        gbc.writeMem(0xe1d7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc17a);
        EXPECT(gbc.pc(), 0xe1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d7), 0xcb);
        EXPECT(gbc.readMem(0xe1d8), 0x39);
        // CB 39 03C6
        gbc.setState(0x4b53, 0x1d90, 0x5440, 0x5328, 0x8bdc, 0x30ed, 0x1, 0x1);
        gbc.writeMem(0x4b53, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1d90);
        EXPECT(gbc.pc(), 0x4b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03C7
        gbc.setState(0xd490, 0xd4e0, 0xffd0, 0xba3f, 0xc0, 0x4ee, 0x0, 0x1);
        gbc.writeMem(0xd490, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd4e0);
        EXPECT(gbc.pc(), 0xd492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd490), 0xcb);
        EXPECT(gbc.readMem(0xd491), 0x39);
        // CB 39 03C9
        gbc.setState(0x118f, 0x2842, 0x2dc0, 0x3008, 0xcb85, 0x3c60, 0x0, 0x1);
        gbc.writeMem(0x118f, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2842);
        EXPECT(gbc.pc(), 0x1191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03CA
        gbc.setState(0xb677, 0x67b6, 0x5900, 0x78, 0x7e15, 0xce0, 0x1, 0x1);
        gbc.writeMem(0xb677, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x67b6);
        EXPECT(gbc.pc(), 0xb679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb677), 0xcb);
        EXPECT(gbc.readMem(0xb678), 0x39);
        // CB 39 03CB
        gbc.setState(0x8ac2, 0x3d14, 0xa4f0, 0x6db5, 0x5969, 0xb186, 0x0, 0x0);
        gbc.writeMem(0x8ac2, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3d14);
        EXPECT(gbc.pc(), 0x8ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac2), 0xcb);
        EXPECT(gbc.readMem(0x8ac3), 0x39);
        // CB 39 03CD
        gbc.setState(0x8bd, 0x9f73, 0x69d0, 0x587c, 0xa0ea, 0x70db, 0x1, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9f73);
        EXPECT(gbc.pc(), 0x8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03CE
        gbc.setState(0x183e, 0xf0, 0x86d0, 0x22ba, 0x8112, 0xabfe, 0x0, 0x0);
        gbc.writeMem(0x183e, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf0);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03CF
        gbc.setState(0x5713, 0xcdf4, 0xec40, 0x801f, 0xaca8, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x5713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcdf4);
        EXPECT(gbc.pc(), 0x5715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03D0
        gbc.setState(0x8fa3, 0x91b, 0xa6e0, 0xfd6b, 0x672, 0x5389, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x91b);
        EXPECT(gbc.pc(), 0x8fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa3), 0xcb);
        EXPECT(gbc.readMem(0x8fa4), 0x39);
        // CB 39 03D1
        gbc.setState(0x8e94, 0xda90, 0x25b0, 0xf9cf, 0x2412, 0x97c5, 0x1, 0x1);
        gbc.writeMem(0x8e94, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xda90);
        EXPECT(gbc.pc(), 0x8e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e94), 0xcb);
        EXPECT(gbc.readMem(0x8e95), 0x39);
        // CB 39 03D2
        gbc.setState(0x57fa, 0x3534, 0x40, 0x3959, 0xff9e, 0x94fc, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3534);
        EXPECT(gbc.pc(), 0x57fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03D3
        gbc.setState(0x6466, 0xcc05, 0x8cd0, 0x58e5, 0xb400, 0xd9b2, 0x1, 0x0);
        gbc.writeMem(0x6466, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcc05);
        EXPECT(gbc.pc(), 0x6468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03D4
        gbc.setState(0x48d5, 0x599b, 0xa50, 0x352a, 0x6490, 0x8a53, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x599b);
        EXPECT(gbc.pc(), 0x48d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03D5
        gbc.setState(0x569, 0xde0b, 0x4380, 0x96de, 0x46e2, 0xbe2d, 0x1, 0x1);
        gbc.writeMem(0x569, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xde0b);
        EXPECT(gbc.pc(), 0x56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03D6
        gbc.setState(0xdbf0, 0x72cb, 0x1e60, 0x8e8f, 0xa346, 0x111f, 0x0, 0x0);
        gbc.writeMem(0xdbf0, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x72cb);
        EXPECT(gbc.pc(), 0xdbf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0xcb);
        EXPECT(gbc.readMem(0xdbf1), 0x39);
        // CB 39 03D7
        gbc.setState(0xc0fa, 0x8ffa, 0x42c0, 0xcc1c, 0xc99f, 0x8253, 0x1, 0x1);
        gbc.writeMem(0xc0fa, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8ffa);
        EXPECT(gbc.pc(), 0xc0fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fa), 0xcb);
        EXPECT(gbc.readMem(0xc0fb), 0x39);
        // CB 39 03D8
        gbc.setState(0xa610, 0x9590, 0xd250, 0x3d14, 0xbe80, 0x44ed, 0x1, 0x0);
        gbc.writeMem(0xa610, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9590);
        EXPECT(gbc.pc(), 0xa612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa610), 0xcb);
        EXPECT(gbc.readMem(0xa611), 0x39);
        // CB 39 03D9
        gbc.setState(0x86ed, 0x84ba, 0x7a00, 0x29ac, 0xb97f, 0x47d0, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x84ba);
        EXPECT(gbc.pc(), 0x86ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ed), 0xcb);
        EXPECT(gbc.readMem(0x86ee), 0x39);
        // CB 39 03DA
        gbc.setState(0x2368, 0xc5e6, 0xb350, 0x17ac, 0x7598, 0x955b, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc5e6);
        EXPECT(gbc.pc(), 0x236a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03DB
        gbc.setState(0xc713, 0xc6c4, 0x7500, 0x87c4, 0x105b, 0x8c71, 0x1, 0x1);
        gbc.writeMem(0xc713, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc6c4);
        EXPECT(gbc.pc(), 0xc715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc713), 0xcb);
        EXPECT(gbc.readMem(0xc714), 0x39);
        // CB 39 03DC
        gbc.setState(0x10b9, 0x5e96, 0x3020, 0xc8bc, 0x5d20, 0x2dc8, 0x0, 0x1);
        gbc.writeMem(0x10b9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5e96);
        EXPECT(gbc.pc(), 0x10bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03DD
        gbc.setState(0x54b, 0xd54c, 0xe4c0, 0xa9dc, 0x152e, 0x2a6e, 0x0, 0x1);
        gbc.writeMem(0x54b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd54c);
        EXPECT(gbc.pc(), 0x54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03DE
        gbc.setState(0x7e9, 0x7f6c, 0x38a0, 0x3a5d, 0xf3a8, 0x766e, 0x0, 0x0);
        gbc.writeMem(0x7e9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7f6c);
        EXPECT(gbc.pc(), 0x7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03DF
        gbc.setState(0x2eac, 0xcb65, 0x6bf0, 0x204e, 0xa7c4, 0x3930, 0x0, 0x1);
        gbc.writeMem(0x2eac, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcb65);
        EXPECT(gbc.pc(), 0x2eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03E0
        gbc.setState(0x26e8, 0x5c76, 0x3270, 0x25f2, 0xb886, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5c76);
        EXPECT(gbc.pc(), 0x26ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03E1
        gbc.setState(0x2eb9, 0xb99c, 0xae70, 0x6f70, 0x5bbe, 0x3dc4, 0x1, 0x1);
        gbc.writeMem(0x2eb9, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb99c);
        EXPECT(gbc.pc(), 0x2ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03E2
        gbc.setState(0x509b, 0x7e4b, 0x6b10, 0x493a, 0x160f, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x509b, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7e4b);
        EXPECT(gbc.pc(), 0x509d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03E3
        gbc.setState(0xf82, 0x350c, 0xcf90, 0x9aba, 0x376a, 0x3cf0, 0x0, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x350c);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 39 03E4
        gbc.setState(0x4b30, 0x6959, 0xf30, 0x3775, 0xcfcc, 0x519a, 0x1, 0x1);
        gbc.writeMem(0x4b30, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6959);
        EXPECT(gbc.pc(), 0x4b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 39 03E5
        gbc.setState(0x85d3, 0xc51b, 0x9df0, 0x3162, 0x9c57, 0xe507, 0x0, 0x0);
        gbc.writeMem(0x85d3, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc51b);
        EXPECT(gbc.pc(), 0x85d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d3), 0xcb);
        EXPECT(gbc.readMem(0x85d4), 0x39);
        // CB 39 03E6
        gbc.setState(0x93a7, 0x6f8e, 0x7580, 0x133e, 0xa7ad, 0x1a1b, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6f8e);
        EXPECT(gbc.pc(), 0x93a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a7), 0xcb);
        EXPECT(gbc.readMem(0x93a8), 0x39);
        // CB 39 03E7
        gbc.setState(0x5d9c, 0x1450, 0x9250, 0x6055, 0x3341, 0xc3d6, 0x1, 0x0);
        gbc.writeMem(0x5d9c, { 0xcb, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1450);
        EXPECT(gbc.pc(), 0x5d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
