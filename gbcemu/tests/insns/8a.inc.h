    TEST(gbcemu, opcode_8a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8A 0000
        gbc.setState(0xeeb2, 0x770f, 0xc9a0, 0x287b, 0x842f, 0xecea, 0x0, 0x0);
        gbc.writeMem(0xeeb2, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0xeeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xeeb2));
        // 8A 0001
        gbc.setState(0x5885, 0x58b0, 0xc180, 0xab60, 0x1ac9, 0x9080, 0x1, 0x0);
        gbc.writeMem(0x5885, { 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0002
        gbc.setState(0xe4aa, 0xce7b, 0xf4c0, 0x95fe, 0xbde, 0xb985, 0x0, 0x1);
        gbc.writeMem(0xe4aa, { 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xce7b, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe4aa));
        // 8A 0003
        gbc.setState(0x43f0, 0xc0bb, 0x2c40, 0xf02c, 0xbdf1, 0x2d14, 0x0, 0x0);
        gbc.writeMem(0x43f0, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc0bb, gbc.sp());
        EXPECT(0x43f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0004
        gbc.setState(0x18e, 0x89c3, 0x9fe0, 0xafa3, 0xf51e, 0x14e4, 0x0, 0x1);
        gbc.writeMem(0x18e, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0005
        gbc.setState(0xa0be, 0xf986, 0x4330, 0x1d8, 0x8815, 0x1365, 0x0, 0x1);
        gbc.writeMem(0xa0be, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf986, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa0be));
        // 8A 0006
        gbc.setState(0x34b8, 0x4170, 0x8ea0, 0xe7af, 0x63b4, 0x33f5, 0x0, 0x0);
        gbc.writeMem(0x34b8, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0x34b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0007
        gbc.setState(0xbac, 0x7b22, 0xeee0, 0x325c, 0x56f1, 0x7300, 0x0, 0x1);
        gbc.writeMem(0xbac, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0008
        gbc.setState(0xa70f, 0x289f, 0x3f60, 0xd884, 0x206c, 0x2965, 0x0, 0x1);
        gbc.writeMem(0xa70f, { 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x289f, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa70f));
        // 8A 0009
        gbc.setState(0xeb8f, 0x845a, 0xe430, 0xf94, 0x58e7, 0x7114, 0x1, 0x1);
        gbc.writeMem(0xeb8f, { 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xeb8f));
        // 8A 000A
        gbc.setState(0x3293, 0xab95, 0x2e20, 0x8bfd, 0x26ec, 0x10ca, 0x1, 0x1);
        gbc.writeMem(0x3293, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 000C
        gbc.setState(0x3e4c, 0xe98, 0x7040, 0xad4c, 0x5cb7, 0x3bb, 0x1, 0x0);
        gbc.writeMem(0x3e4c, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 000D
        gbc.setState(0x91fc, 0x7f35, 0xb2d0, 0xe9a9, 0xc2eb, 0x4135, 0x1, 0x0);
        gbc.writeMem(0x91fc, { 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7f35, gbc.sp());
        EXPECT(0x91fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x91fc));
        // 8A 000E
        gbc.setState(0x46a2, 0x20e, 0xe7c0, 0x5b48, 0x4cf4, 0x7d21, 0x1, 0x1);
        gbc.writeMem(0x46a2, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x46a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 000F
        gbc.setState(0x136b, 0x766d, 0x4eb0, 0xbd47, 0xecbe, 0x91e6, 0x1, 0x1);
        gbc.writeMem(0x136b, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0010
        gbc.setState(0x43d2, 0x2463, 0x7d70, 0x4ff3, 0x2d2d, 0xa00, 0x1, 0x1);
        gbc.writeMem(0x43d2, { 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2463, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0011
        gbc.setState(0x7040, 0x266b, 0xcd70, 0x7ecd, 0x5abc, 0xf255, 0x1, 0x0);
        gbc.writeMem(0x7040, { 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x266b, gbc.sp());
        EXPECT(0x7041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0012
        gbc.setState(0x5ea8, 0xc9e6, 0xda80, 0x1ce0, 0x7d74, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0x5ea8, { 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc9e6, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0013
        gbc.setState(0x41e6, 0xf89, 0x46c0, 0x3268, 0xb0b5, 0x3664, 0x0, 0x1);
        gbc.writeMem(0x41e6, { 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf89, gbc.sp());
        EXPECT(0x41e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0014
        gbc.setState(0x95b1, 0xbcad, 0xfe80, 0xb2d6, 0xf3e3, 0x3953, 0x0, 0x1);
        gbc.writeMem(0x95b1, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbcad, gbc.sp());
        EXPECT(0x95b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x95b1));
        // 8A 0015
        gbc.setState(0x8ab0, 0xda0a, 0x250, 0xef59, 0x57be, 0x1366, 0x0, 0x0);
        gbc.writeMem(0x8ab0, { 0x8a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda0a, gbc.sp());
        EXPECT(0x8ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8ab0));
        // 8A 0016
        gbc.setState(0x5eb6, 0x55e3, 0xb9f0, 0x828b, 0xb96c, 0xb5ed, 0x1, 0x0);
        gbc.writeMem(0x5eb6, { 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x55e3, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0017
        gbc.setState(0x7237, 0x397e, 0x6210, 0xa47f, 0xc903, 0x982f, 0x1, 0x0);
        gbc.writeMem(0x7237, { 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x397e, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0018
        gbc.setState(0xa94d, 0xb9e0, 0x77d0, 0x32e7, 0xb233, 0x44c3, 0x1, 0x0);
        gbc.writeMem(0xa94d, { 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0xa94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa94d));
        // 8A 0019
        gbc.setState(0x4d7f, 0x8dc5, 0x84c0, 0xd84d, 0x84cc, 0x60b3, 0x0, 0x1);
        gbc.writeMem(0x4d7f, { 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8dc5, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 001A
        gbc.setState(0xd900, 0x9a71, 0x4fb0, 0x1fd0, 0x1789, 0x6d6b, 0x1, 0x0);
        gbc.writeMem(0xd900, { 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9a71, gbc.sp());
        EXPECT(0xd901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd900));
        // 8A 001B
        gbc.setState(0xcd78, 0xefe2, 0xbc40, 0x37f, 0x4027, 0x6694, 0x0, 0x1);
        gbc.writeMem(0xcd78, { 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xefe2, gbc.sp());
        EXPECT(0xcd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcd78));
        // 8A 001C
        gbc.setState(0x8146, 0x6006, 0x6d60, 0xc45e, 0x362d, 0x4bea, 0x0, 0x1);
        gbc.writeMem(0x8146, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6006, gbc.sp());
        EXPECT(0x8147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8146));
        // 8A 001D
        gbc.setState(0x537f, 0xd1c0, 0x2480, 0x7fd6, 0x191f, 0x6d31, 0x0, 0x0);
        gbc.writeMem(0x537f, { 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd1c0, gbc.sp());
        EXPECT(0x5380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 001E
        gbc.setState(0x9ab8, 0x77bf, 0xbbc0, 0x14f5, 0xedfa, 0xeb9f, 0x0, 0x1);
        gbc.writeMem(0x9ab8, { 0x8a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x9ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9ab8));
        // 8A 001F
        gbc.setState(0x5d8d, 0x7b0a, 0x1620, 0x8dc3, 0xaf4b, 0x24d1, 0x0, 0x1);
        gbc.writeMem(0x5d8d, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b0a, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0020
        gbc.setState(0x47d5, 0xc996, 0x14c0, 0x7ba6, 0x4802, 0x196a, 0x0, 0x0);
        gbc.writeMem(0x47d5, { 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc996, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0021
        gbc.setState(0x32ff, 0x3427, 0x70d0, 0x6405, 0xe8dc, 0x77e0, 0x0, 0x1);
        gbc.writeMem(0x32ff, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0022
        gbc.setState(0x61c4, 0xcd2c, 0xd860, 0xfda6, 0xba4a, 0xc7bb, 0x1, 0x0);
        gbc.writeMem(0x61c4, { 0x8a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcd2c, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0023
        gbc.setState(0x3bfd, 0xa9c4, 0x72f0, 0x4932, 0xaec7, 0xd56b, 0x1, 0x1);
        gbc.writeMem(0x3bfd, { 0x8a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x3bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0024
        gbc.setState(0xa053, 0xee62, 0xd4e0, 0x7550, 0x311b, 0x23ae, 0x0, 0x0);
        gbc.writeMem(0xa053, { 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa053));
        // 8A 0025
        gbc.setState(0x68db, 0x5600, 0xd030, 0x8c28, 0x7af9, 0x12f5, 0x0, 0x1);
        gbc.writeMem(0x68db, { 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0x68dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0026
        gbc.setState(0x27c5, 0x5be4, 0x8e80, 0x896e, 0x1d43, 0x978e, 0x0, 0x0);
        gbc.writeMem(0x27c5, { 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5be4, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0027
        gbc.setState(0xbd17, 0x6f15, 0x8d50, 0x48ac, 0xa770, 0x98bc, 0x1, 0x0);
        gbc.writeMem(0xbd17, { 0x8a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbd17));
        // 8A 0028
        gbc.setState(0x6148, 0x8c9f, 0xa480, 0x56ff, 0xd61f, 0x45e0, 0x1, 0x0);
        gbc.writeMem(0x6148, { 0x8a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0029
        gbc.setState(0xab0d, 0xbb4c, 0xc9e0, 0x80a4, 0xddc, 0x7b30, 0x1, 0x0);
        gbc.writeMem(0xab0d, { 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbb4c, gbc.sp());
        EXPECT(0xab0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xab0d));
        // 8A 002A
        gbc.setState(0x8eec, 0xe888, 0xa170, 0xe3c3, 0xa0c5, 0x6897, 0x0, 0x0);
        gbc.writeMem(0x8eec, { 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0x8eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8eec));
        // 8A 002B
        gbc.setState(0x2174, 0x801c, 0xca40, 0xdca0, 0x6ff1, 0x8fd0, 0x0, 0x0);
        gbc.writeMem(0x2174, { 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x2175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 002C
        gbc.setState(0xb95e, 0x8c2c, 0xe580, 0x1c8, 0x1e9b, 0x6aa1, 0x0, 0x0);
        gbc.writeMem(0xb95e, { 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8c2c, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb95e));
        // 8A 002D
        gbc.setState(0x52a6, 0xefd2, 0x32c0, 0xa5e8, 0x88e2, 0x6bd1, 0x1, 0x1);
        gbc.writeMem(0x52a6, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 002E
        gbc.setState(0xbb0d, 0xd85e, 0x5d70, 0x2a38, 0x8dcb, 0x64ab, 0x1, 0x1);
        gbc.writeMem(0xbb0d, { 0x8a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0xbb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbb0d));
        // 8A 0031
        gbc.setState(0x3cc, 0x9760, 0xbca0, 0x1208, 0xf86c, 0x2c99, 0x0, 0x1);
        gbc.writeMem(0x3cc, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0x3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0032
        gbc.setState(0xb1cb, 0x7387, 0x9550, 0x8295, 0xa533, 0x9519, 0x1, 0x0);
        gbc.writeMem(0xb1cb, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7387, gbc.sp());
        EXPECT(0xb1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb1cb));
        // 8A 0033
        gbc.setState(0x6ee2, 0xda7b, 0xf480, 0x8d12, 0xa265, 0x1063, 0x1, 0x0);
        gbc.writeMem(0x6ee2, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xda7b, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0034
        gbc.setState(0xef67, 0xeec7, 0xc050, 0x66c2, 0xd6a2, 0x931, 0x0, 0x1);
        gbc.writeMem(0xef67, { 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeec7, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xef67));
        // 8A 0035
        gbc.setState(0xa450, 0x63c9, 0xa100, 0x789b, 0xc17, 0xcc6c, 0x1, 0x1);
        gbc.writeMem(0xa450, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa450));
        // 8A 0036
        gbc.setState(0x5e69, 0xf9b, 0xdd0, 0xca58, 0xb5ed, 0x1413, 0x0, 0x0);
        gbc.writeMem(0x5e69, { 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0037
        gbc.setState(0xc771, 0xaa76, 0xe130, 0x805b, 0xd0ca, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0xc771, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0xc772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc771));
        // 8A 0038
        gbc.setState(0xef18, 0x1d76, 0x2410, 0xdaab, 0x4129, 0x5930, 0x0, 0x1);
        gbc.writeMem(0xef18, { 0x8a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1d76, gbc.sp());
        EXPECT(0xef19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xef18));
        // 8A 0039
        gbc.setState(0x980d, 0x4aca, 0x2df0, 0x437, 0x5e18, 0x18af, 0x0, 0x0);
        gbc.writeMem(0x980d, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0x980e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x980d));
        // 8A 003A
        gbc.setState(0x9310, 0x9cd6, 0xb660, 0x5b39, 0x9c3e, 0x9257, 0x1, 0x1);
        gbc.writeMem(0x9310, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9cd6, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9310));
        // 8A 003B
        gbc.setState(0x182e, 0x63d1, 0xc810, 0x7744, 0x9af4, 0x4b7d, 0x1, 0x0);
        gbc.writeMem(0x182e, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x182f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 003C
        gbc.setState(0x4d6c, 0x778e, 0xf7b0, 0x57d6, 0xb207, 0x36c, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x778e, gbc.sp());
        EXPECT(0x4d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 003D
        gbc.setState(0x7f35, 0xa8f7, 0xa920, 0x3000, 0x57d5, 0xb78c, 0x0, 0x0);
        gbc.writeMem(0x7f35, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa8f7, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 003E
        gbc.setState(0xe9da, 0x2c4a, 0x3f00, 0x8cd6, 0x8196, 0x5f07, 0x0, 0x0);
        gbc.writeMem(0xe9da, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2c4a, gbc.sp());
        EXPECT(0xe9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe9da));
        // 8A 003F
        gbc.setState(0xe43a, 0x718d, 0x69a0, 0x697e, 0xd9cc, 0x4d63, 0x0, 0x1);
        gbc.writeMem(0xe43a, { 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe43a));
        // 8A 0040
        gbc.setState(0x476b, 0x4efb, 0xe120, 0xc829, 0x803, 0x19bf, 0x0, 0x0);
        gbc.writeMem(0x476b, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4efb, gbc.sp());
        EXPECT(0x476c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0041
        gbc.setState(0x28f4, 0x64fd, 0x9430, 0xc0ac, 0x6548, 0x5953, 0x1, 0x0);
        gbc.writeMem(0x28f4, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0042
        gbc.setState(0x61f1, 0xe0e8, 0xcd50, 0x3bd6, 0x828d, 0xf4e9, 0x0, 0x1);
        gbc.writeMem(0x61f1, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0043
        gbc.setState(0xc54c, 0x735b, 0x27a0, 0xe4d6, 0x4535, 0x8e2e, 0x1, 0x1);
        gbc.writeMem(0xc54c, { 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x735b, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc54c));
        // 8A 0045
        gbc.setState(0xa861, 0x614b, 0x5430, 0x2aeb, 0xe142, 0x855e, 0x1, 0x0);
        gbc.writeMem(0xa861, { 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x614b, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa861));
        // 8A 0046
        gbc.setState(0x4cd8, 0x8bb3, 0xc3e0, 0x9546, 0xcc6c, 0x6374, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0047
        gbc.setState(0xaf65, 0xc627, 0x1a60, 0xadff, 0x618c, 0xbb74, 0x1, 0x0);
        gbc.writeMem(0xaf65, { 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0xaf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaf65));
        // 8A 0048
        gbc.setState(0x3b6e, 0x7017, 0xf340, 0xcfd3, 0x8d2b, 0xcb59, 0x0, 0x0);
        gbc.writeMem(0x3b6e, { 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7017, gbc.sp());
        EXPECT(0x3b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0049
        gbc.setState(0x119b, 0x61a, 0x9de0, 0xb9d6, 0x1cc1, 0x6025, 0x0, 0x1);
        gbc.writeMem(0x119b, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x61a, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 004A
        gbc.setState(0xd564, 0xe808, 0x2f60, 0x9400, 0x2c21, 0x604b, 0x0, 0x1);
        gbc.writeMem(0xd564, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe808, gbc.sp());
        EXPECT(0xd565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd564));
        // 8A 004B
        gbc.setState(0xac63, 0xd8d, 0x2550, 0x8a90, 0x7b81, 0x5fc0, 0x1, 0x0);
        gbc.writeMem(0xac63, { 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0xac64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xac63));
        // 8A 004C
        gbc.setState(0x25a6, 0x429, 0x78d0, 0x9c98, 0x3ddb, 0x852f, 0x1, 0x1);
        gbc.writeMem(0x25a6, { 0x8a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0x25a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 004D
        gbc.setState(0xe799, 0xb97d, 0x7f50, 0xa667, 0x7277, 0x674e, 0x1, 0x0);
        gbc.writeMem(0xe799, { 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0xe79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe799));
        // 8A 004E
        gbc.setState(0x4be0, 0x4c1d, 0x7b0, 0x74c1, 0xf461, 0xe254, 0x0, 0x0);
        gbc.writeMem(0x4be0, { 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4c1d, gbc.sp());
        EXPECT(0x4be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 004F
        gbc.setState(0xb1ec, 0x1b8e, 0x6360, 0x239d, 0xfe7c, 0x5775, 0x1, 0x0);
        gbc.writeMem(0xb1ec, { 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0xb1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb1ec));
        // 8A 0050
        gbc.setState(0x8ce5, 0xafca, 0x1690, 0x300e, 0x18f3, 0xdc71, 0x1, 0x1);
        gbc.writeMem(0x8ce5, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xafca, gbc.sp());
        EXPECT(0x8ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8ce5));
        // 8A 0052
        gbc.setState(0x4f41, 0xb56f, 0xc710, 0x5f7c, 0x8f4f, 0xe686, 0x1, 0x1);
        gbc.writeMem(0x4f41, { 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb56f, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0053
        gbc.setState(0xdc1d, 0xaa47, 0xd940, 0x9436, 0x7bfd, 0x75a4, 0x0, 0x0);
        gbc.writeMem(0xdc1d, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaa47, gbc.sp());
        EXPECT(0xdc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdc1d));
        // 8A 0054
        gbc.setState(0x93ce, 0xdde6, 0x9a10, 0x1cb, 0xe753, 0x5e97, 0x0, 0x0);
        gbc.writeMem(0x93ce, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdde6, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x93ce));
        // 8A 0056
        gbc.setState(0x5e6a, 0xd6c7, 0xcfa0, 0x37b1, 0xbd94, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x5e6a, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd6c7, gbc.sp());
        EXPECT(0x5e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0057
        gbc.setState(0x94d2, 0x90bd, 0x2560, 0x4eb7, 0xbca3, 0x10b8, 0x1, 0x0);
        gbc.writeMem(0x94d2, { 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x90bd, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x94d2));
        // 8A 0058
        gbc.setState(0x573d, 0x7980, 0x6f0, 0xbb, 0x34f0, 0x7865, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7980, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0059
        gbc.setState(0x5065, 0xc829, 0x8f90, 0xc7e7, 0x61e5, 0x55b2, 0x1, 0x1);
        gbc.writeMem(0x5065, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc829, gbc.sp());
        EXPECT(0x5066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 005A
        gbc.setState(0xc20e, 0x684f, 0xba20, 0xbdea, 0x6fd1, 0x2377, 0x1, 0x1);
        gbc.writeMem(0xc20e, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x684f, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc20e));
        // 8A 005B
        gbc.setState(0xb170, 0x11ef, 0x8d40, 0x590a, 0x8851, 0x3704, 0x1, 0x1);
        gbc.writeMem(0xb170, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x11ef, gbc.sp());
        EXPECT(0xb171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb170));
        // 8A 005D
        gbc.setState(0xb490, 0xf381, 0x6990, 0xfbc6, 0x2514, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0xb490, { 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0xb491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb490));
        // 8A 005E
        gbc.setState(0xb8ea, 0x7dd2, 0xaa90, 0x3463, 0xd67, 0xe7e7, 0x1, 0x1);
        gbc.writeMem(0xb8ea, { 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7dd2, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb8ea));
        // 8A 005F
        gbc.setState(0x3ab0, 0x998e, 0xda10, 0xe6b0, 0xb609, 0x75bf, 0x1, 0x0);
        gbc.writeMem(0x3ab0, { 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x998e, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0060
        gbc.setState(0x2ea2, 0x3142, 0x8a40, 0xb09b, 0x2bbd, 0x7899, 0x1, 0x0);
        gbc.writeMem(0x2ea2, { 0x8a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0061
        gbc.setState(0x590, 0x88c8, 0x9dc0, 0x7ef8, 0xcb25, 0xb26a, 0x0, 0x0);
        gbc.writeMem(0x590, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88c8, gbc.sp());
        EXPECT(0x591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0062
        gbc.setState(0x2c8a, 0x56ce, 0x3da0, 0x896c, 0x726, 0xaab2, 0x0, 0x0);
        gbc.writeMem(0x2c8a, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x56ce, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0064
        gbc.setState(0x13aa, 0x3bdf, 0xd810, 0xc332, 0x5594, 0xe205, 0x1, 0x0);
        gbc.writeMem(0x13aa, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3bdf, gbc.sp());
        EXPECT(0x13ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0065
        gbc.setState(0x39bb, 0xfcb6, 0x7960, 0x4ca, 0x417c, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0x39bb, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfcb6, gbc.sp());
        EXPECT(0x39bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0066
        gbc.setState(0x5a48, 0x5eb4, 0x5620, 0xdf5d, 0x5058, 0xb639, 0x1, 0x1);
        gbc.writeMem(0x5a48, { 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5eb4, gbc.sp());
        EXPECT(0x5a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0067
        gbc.setState(0x4515, 0x8d47, 0xc040, 0x6d0, 0xeeb4, 0xb783, 0x1, 0x1);
        gbc.writeMem(0x4515, { 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8d47, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0068
        gbc.setState(0x55d4, 0xa2e6, 0x9de0, 0x119d, 0x7b7e, 0xfeb8, 0x1, 0x1);
        gbc.writeMem(0x55d4, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa2e6, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0069
        gbc.setState(0xed27, 0xd702, 0x2780, 0x474a, 0xa233, 0x8bfc, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd702, gbc.sp());
        EXPECT(0xed28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xed27));
        // 8A 006A
        gbc.setState(0x4635, 0x337, 0x3620, 0xc8df, 0x92e8, 0x3a43, 0x1, 0x1);
        gbc.writeMem(0x4635, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x337, gbc.sp());
        EXPECT(0x4636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 006B
        gbc.setState(0x6354, 0x602d, 0xe7d0, 0xd240, 0x7085, 0x4794, 0x0, 0x0);
        gbc.writeMem(0x6354, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x602d, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 006C
        gbc.setState(0xd13c, 0x5de4, 0x9c70, 0x860e, 0x52da, 0xf17, 0x1, 0x0);
        gbc.writeMem(0xd13c, { 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd13c));
        // 8A 006D
        gbc.setState(0x4d7f, 0x732b, 0x7800, 0xbe8, 0xaedd, 0x833b, 0x1, 0x1);
        gbc.writeMem(0x4d7f, { 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x732b, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 006E
        gbc.setState(0xa4af, 0x9b16, 0xa1d0, 0xfe2b, 0x1791, 0x87be, 0x1, 0x0);
        gbc.writeMem(0xa4af, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa4af));
        // 8A 006F
        gbc.setState(0x3aaa, 0x140, 0xc5d0, 0xdab1, 0x341a, 0xcb5b, 0x1, 0x0);
        gbc.writeMem(0x3aaa, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x140, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0070
        gbc.setState(0x14ec, 0x3b2e, 0x1e20, 0xcbee, 0x9c6, 0xcb64, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3b2e, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0071
        gbc.setState(0xa428, 0x7e6f, 0xac70, 0x5d0e, 0xdf1f, 0x5598, 0x0, 0x0);
        gbc.writeMem(0xa428, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7e6f, gbc.sp());
        EXPECT(0xa429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa428));
        // 8A 0072
        gbc.setState(0x4b89, 0x704b, 0x36c0, 0xe8ac, 0x3f4c, 0x7d36, 0x1, 0x0);
        gbc.writeMem(0x4b89, { 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0073
        gbc.setState(0x9519, 0xd5b7, 0x8ec0, 0x3f67, 0x215f, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0x9519, { 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9519));
        // 8A 0074
        gbc.setState(0xdb5c, 0x380f, 0x9c30, 0x46fd, 0xb2f5, 0x7a1d, 0x1, 0x0);
        gbc.writeMem(0xdb5c, { 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x380f, gbc.sp());
        EXPECT(0xdb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdb5c));
        // 8A 0076
        gbc.setState(0xe7e6, 0x3367, 0x150, 0x5de7, 0xc558, 0x4189, 0x0, 0x0);
        gbc.writeMem(0xe7e6, { 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3367, gbc.sp());
        EXPECT(0xe7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe7e6));
        // 8A 0077
        gbc.setState(0x77e7, 0x385a, 0xafa0, 0xc677, 0x632f, 0xefbe, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0x8a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x385a, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0079
        gbc.setState(0xd713, 0xf202, 0x2720, 0xeba9, 0xd9cc, 0x5ee0, 0x1, 0x1);
        gbc.writeMem(0xd713, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd713));
        // 8A 007A
        gbc.setState(0x144, 0xe433, 0x7c40, 0x215a, 0xd42a, 0x9ff0, 0x0, 0x0);
        gbc.writeMem(0x144, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 007B
        gbc.setState(0x3cb0, 0x158b, 0xaa50, 0x3850, 0x58e4, 0x76f6, 0x1, 0x0);
        gbc.writeMem(0x3cb0, { 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 007C
        gbc.setState(0xd0e4, 0x9cb7, 0x4b10, 0x7418, 0xaea0, 0x3a45, 0x0, 0x0);
        gbc.writeMem(0xd0e4, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9cb7, gbc.sp());
        EXPECT(0xd0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd0e4));
        // 8A 007D
        gbc.setState(0x4173, 0x8dd7, 0x91f0, 0x3ca5, 0x97c7, 0x4855, 0x0, 0x1);
        gbc.writeMem(0x4173, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 007E
        gbc.setState(0x9070, 0xda8, 0xc840, 0x26cb, 0x11af, 0x8e7a, 0x0, 0x0);
        gbc.writeMem(0x9070, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xda8, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9070));
        // 8A 007F
        gbc.setState(0x6f8e, 0xa7db, 0x9c30, 0xfb92, 0xae56, 0x5784, 0x1, 0x0);
        gbc.writeMem(0x6f8e, { 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0080
        gbc.setState(0x860f, 0xc186, 0x6670, 0x709e, 0xcba9, 0xe0f0, 0x0, 0x0);
        gbc.writeMem(0x860f, { 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x8610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x860f));
        // 8A 0081
        gbc.setState(0xec12, 0x46cb, 0xbe00, 0x2b79, 0xabc, 0x5edb, 0x1, 0x1);
        gbc.writeMem(0xec12, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x46cb, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xec12));
        // 8A 0082
        gbc.setState(0x5ae8, 0xf640, 0xc060, 0x1377, 0x1cc9, 0x697c, 0x0, 0x0);
        gbc.writeMem(0x5ae8, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf640, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0083
        gbc.setState(0x663d, 0xb60d, 0xfd0, 0xf92e, 0x3a7f, 0xe118, 0x0, 0x1);
        gbc.writeMem(0x663d, { 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0086
        gbc.setState(0x92, 0x205e, 0x1200, 0x78e5, 0x7e02, 0x4956, 0x0, 0x0);
        gbc.writeMem(0x92, { 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0087
        gbc.setState(0x7fc0, 0x32ed, 0x5bd0, 0x3b2a, 0x5d16, 0xe1a0, 0x0, 0x1);
        gbc.writeMem(0x7fc0, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x32ed, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0089
        gbc.setState(0x2e0d, 0xb230, 0x6560, 0x876b, 0xebbb, 0x9014, 0x1, 0x1);
        gbc.writeMem(0x2e0d, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 008A
        gbc.setState(0x1eb8, 0xfdcf, 0xd310, 0x8d46, 0xd341, 0x3e1a, 0x1, 0x1);
        gbc.writeMem(0x1eb8, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfdcf, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 008B
        gbc.setState(0x2b77, 0x70b2, 0xa260, 0x5fcb, 0xc1c3, 0x7b58, 0x1, 0x1);
        gbc.writeMem(0x2b77, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x70b2, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 008C
        gbc.setState(0x8c47, 0xc30c, 0x6740, 0x79d1, 0xcae0, 0x3741, 0x0, 0x0);
        gbc.writeMem(0x8c47, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc30c, gbc.sp());
        EXPECT(0x8c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8c47));
        // 8A 008D
        gbc.setState(0xd7a2, 0xa7b9, 0xaa20, 0xdee5, 0xc5e6, 0x9db1, 0x0, 0x1);
        gbc.writeMem(0xd7a2, { 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa7b9, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd7a2));
        // 8A 008E
        gbc.setState(0xc37e, 0x2c2b, 0x7820, 0x93ce, 0x32cd, 0x6240, 0x1, 0x0);
        gbc.writeMem(0xc37e, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0xc37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc37e));
        // 8A 008F
        gbc.setState(0xe88f, 0xb5c1, 0xbc30, 0x4114, 0xdb51, 0x3c31, 0x0, 0x1);
        gbc.writeMem(0xe88f, { 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb5c1, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe88f));
        // 8A 0090
        gbc.setState(0x24e4, 0x6f7f, 0xa7e0, 0xa3b9, 0x4fd3, 0xced6, 0x1, 0x1);
        gbc.writeMem(0x24e4, { 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0x24e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0091
        gbc.setState(0xcdda, 0x3eaf, 0xc660, 0x8135, 0x1387, 0xc8a9, 0x0, 0x0);
        gbc.writeMem(0xcdda, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3eaf, gbc.sp());
        EXPECT(0xcddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcdda));
        // 8A 0092
        gbc.setState(0xc586, 0xfda7, 0x3eb0, 0x3e97, 0xdc33, 0x6b7d, 0x0, 0x0);
        gbc.writeMem(0xc586, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfda7, gbc.sp());
        EXPECT(0xc587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc586));
        // 8A 0093
        gbc.setState(0xc754, 0x4318, 0x4bf0, 0x5c43, 0xa8e8, 0xe4f7, 0x1, 0x1);
        gbc.writeMem(0xc754, { 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc754));
        // 8A 0094
        gbc.setState(0xe747, 0x2ced, 0x9a10, 0x9ff6, 0x213a, 0xbdbd, 0x1, 0x0);
        gbc.writeMem(0xe747, { 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ced, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe747));
        // 8A 0095
        gbc.setState(0x9a54, 0x7637, 0x2660, 0xe05b, 0x61b1, 0xda2d, 0x0, 0x0);
        gbc.writeMem(0x9a54, { 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7637, gbc.sp());
        EXPECT(0x9a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a54));
        // 8A 0096
        gbc.setState(0x1a20, 0x1c1b, 0x4d70, 0xcf5c, 0x32b0, 0xc5bc, 0x0, 0x0);
        gbc.writeMem(0x1a20, { 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0097
        gbc.setState(0xb6e2, 0x4a7b, 0x5640, 0xcb2b, 0x3d80, 0xdbcb, 0x1, 0x1);
        gbc.writeMem(0xb6e2, { 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb6e2));
        // 8A 0098
        gbc.setState(0xc57d, 0x9dc3, 0x66f0, 0x6fed, 0x682, 0xdd2e, 0x1, 0x1);
        gbc.writeMem(0xc57d, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9dc3, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc57d));
        // 8A 0099
        gbc.setState(0x1080, 0x4aec, 0x15c0, 0xb5ff, 0xde71, 0x2a39, 0x1, 0x0);
        gbc.writeMem(0x1080, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4aec, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 009A
        gbc.setState(0x9288, 0x79be, 0xa690, 0x4692, 0xfcda, 0xb593, 0x1, 0x1);
        gbc.writeMem(0x9288, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9288));
        // 8A 009C
        gbc.setState(0x737d, 0xcd07, 0xa470, 0x8a6e, 0xebd5, 0x2e88, 0x0, 0x1);
        gbc.writeMem(0x737d, { 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x737e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 009D
        gbc.setState(0x1253, 0xe80f, 0xd620, 0xc58f, 0x82fa, 0x6166, 0x0, 0x0);
        gbc.writeMem(0x1253, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 009E
        gbc.setState(0x21e, 0xf48d, 0x6790, 0x91f3, 0x2a2b, 0xdcf0, 0x1, 0x1);
        gbc.writeMem(0x21e, { 0x8a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf48d, gbc.sp());
        EXPECT(0x21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 009F
        gbc.setState(0x3afa, 0x8c67, 0x4930, 0x995c, 0x6a0d, 0x316d, 0x1, 0x1);
        gbc.writeMem(0x3afa, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8c67, gbc.sp());
        EXPECT(0x3afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00A0
        gbc.setState(0xad2c, 0xc81f, 0x6650, 0x292e, 0x1b36, 0xf0f5, 0x0, 0x0);
        gbc.writeMem(0xad2c, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc81f, gbc.sp());
        EXPECT(0xad2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xad2c));
        // 8A 00A1
        gbc.setState(0x1507, 0x35c9, 0xf880, 0x4f11, 0x1778, 0x1f6a, 0x0, 0x0);
        gbc.writeMem(0x1507, { 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x35c9, gbc.sp());
        EXPECT(0x1508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00A2
        gbc.setState(0xa695, 0xa3d1, 0x910, 0xffcb, 0x59b6, 0xd2ef, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa695));
        // 8A 00A3
        gbc.setState(0xb6a4, 0x1563, 0x2cf0, 0x54f1, 0x1f25, 0x5816, 0x1, 0x0);
        gbc.writeMem(0xb6a4, { 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1563, gbc.sp());
        EXPECT(0xb6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb6a4));
        // 8A 00A4
        gbc.setState(0xb821, 0x94f3, 0xbc00, 0x9fe4, 0x4684, 0x9762, 0x1, 0x1);
        gbc.writeMem(0xb821, { 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0xb822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb821));
        // 8A 00A5
        gbc.setState(0xabab, 0xf235, 0xe6a0, 0xd951, 0xd23, 0xcf63, 0x1, 0x1);
        gbc.writeMem(0xabab, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0xabac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xabab));
        // 8A 00A6
        gbc.setState(0xa5d8, 0xe576, 0xf5f0, 0xdc27, 0xf932, 0x5d5d, 0x1, 0x0);
        gbc.writeMem(0xa5d8, { 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0xa5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa5d8));
        // 8A 00A7
        gbc.setState(0xe64b, 0xf36e, 0x85b0, 0xe939, 0xa18c, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0xe64b, { 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf36e, gbc.sp());
        EXPECT(0xe64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe64b));
        // 8A 00A8
        gbc.setState(0xbb7c, 0x6d10, 0x3100, 0x51bc, 0x9ca, 0x5d9, 0x1, 0x1);
        gbc.writeMem(0xbb7c, { 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0xbb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbb7c));
        // 8A 00A9
        gbc.setState(0x880, 0xb822, 0xb580, 0xd72f, 0x94c2, 0xe131, 0x0, 0x1);
        gbc.writeMem(0x880, { 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00AA
        gbc.setState(0x98d7, 0x6ee3, 0xc5a0, 0x4ecb, 0x6144, 0xbbae, 0x0, 0x1);
        gbc.writeMem(0x98d7, { 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6ee3, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x98d7));
        // 8A 00AB
        gbc.setState(0x1609, 0x3295, 0x1180, 0x2d53, 0x2851, 0xbf4b, 0x1, 0x0);
        gbc.writeMem(0x1609, { 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x160a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00AC
        gbc.setState(0x4ab5, 0xce80, 0x7d80, 0x7565, 0xa136, 0xfd9b, 0x1, 0x0);
        gbc.writeMem(0x4ab5, { 0x8a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00AD
        gbc.setState(0xebc4, 0x3e27, 0x30d0, 0x3746, 0x790e, 0xa3ee, 0x0, 0x1);
        gbc.writeMem(0xebc4, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3e27, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xebc4));
        // 8A 00AE
        gbc.setState(0xa4c7, 0x189d, 0x18b0, 0x92b8, 0xea05, 0xd7d9, 0x0, 0x0);
        gbc.writeMem(0xa4c7, { 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa4c7));
        // 8A 00AF
        gbc.setState(0xa163, 0x508b, 0xea50, 0x4a5a, 0x117c, 0xf161, 0x0, 0x1);
        gbc.writeMem(0xa163, { 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x508b, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa163));
        // 8A 00B0
        gbc.setState(0xb26d, 0x5f40, 0xcc20, 0xbe74, 0x620e, 0xef7, 0x0, 0x0);
        gbc.writeMem(0xb26d, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5f40, gbc.sp());
        EXPECT(0xb26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb26d));
        // 8A 00B1
        gbc.setState(0x663b, 0x6722, 0x79b0, 0xb987, 0x43aa, 0x9d54, 0x0, 0x0);
        gbc.writeMem(0x663b, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0x663c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00B2
        gbc.setState(0xbccf, 0x5e75, 0x4880, 0x4808, 0xf8b9, 0x7b68, 0x1, 0x0);
        gbc.writeMem(0xbccf, { 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0xbcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbccf));
        // 8A 00B3
        gbc.setState(0xd615, 0x2cf9, 0x91a0, 0x8127, 0xada4, 0xe396, 0x1, 0x0);
        gbc.writeMem(0xd615, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd615));
        // 8A 00B4
        gbc.setState(0xcf3a, 0x9fee, 0x6c70, 0xad8, 0x3881, 0xb6bd, 0x0, 0x0);
        gbc.writeMem(0xcf3a, { 0x8a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9fee, gbc.sp());
        EXPECT(0xcf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcf3a));
        // 8A 00B5
        gbc.setState(0x7e07, 0xafc1, 0xe6e0, 0xcb8b, 0x2fcc, 0xadae, 0x1, 0x0);
        gbc.writeMem(0x7e07, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0x7e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00B6
        gbc.setState(0xa6e4, 0x9429, 0x85e0, 0x7620, 0x1400, 0xe8d2, 0x1, 0x0);
        gbc.writeMem(0xa6e4, { 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa6e4));
        // 8A 00B7
        gbc.setState(0x65cb, 0x3b66, 0x49a0, 0xd656, 0x92b, 0xbfd, 0x1, 0x1);
        gbc.writeMem(0x65cb, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3b66, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00B8
        gbc.setState(0x906d, 0x3568, 0x84f0, 0xd0e4, 0x3f72, 0x9684, 0x1, 0x1);
        gbc.writeMem(0x906d, { 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3568, gbc.sp());
        EXPECT(0x906e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x906d));
        // 8A 00B9
        gbc.setState(0x1024, 0x9ec6, 0x2310, 0x501e, 0x6273, 0xf858, 0x1, 0x0);
        gbc.writeMem(0x1024, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00BA
        gbc.setState(0xc715, 0x31f3, 0x8db0, 0x2111, 0xd7b5, 0xb6e8, 0x0, 0x1);
        gbc.writeMem(0xc715, { 0x8a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0xc716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc715));
        // 8A 00BB
        gbc.setState(0xc6a1, 0x4465, 0xccf0, 0x4483, 0x3aa5, 0x5cd4, 0x0, 0x0);
        gbc.writeMem(0xc6a1, { 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc6a1));
        // 8A 00BC
        gbc.setState(0x5d18, 0xd60a, 0x6d70, 0x6e31, 0x4cac, 0x9551, 0x0, 0x0);
        gbc.writeMem(0x5d18, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd60a, gbc.sp());
        EXPECT(0x5d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00BD
        gbc.setState(0x40c8, 0xf0af, 0x5be0, 0x319d, 0xcefa, 0x80a4, 0x1, 0x1);
        gbc.writeMem(0x40c8, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf0af, gbc.sp());
        EXPECT(0x40c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00BE
        gbc.setState(0xb194, 0x1a00, 0x4af0, 0xf49, 0x1b05, 0xa7c6, 0x0, 0x1);
        gbc.writeMem(0xb194, { 0x8a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb194));
        // 8A 00BF
        gbc.setState(0x2052, 0x5581, 0xdca0, 0x569c, 0xb30f, 0x4bc1, 0x0, 0x0);
        gbc.writeMem(0x2052, { 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5581, gbc.sp());
        EXPECT(0x2053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00C0
        gbc.setState(0x8bce, 0x8c32, 0xe2e0, 0xeb77, 0x9501, 0xb54c, 0x0, 0x0);
        gbc.writeMem(0x8bce, { 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8c32, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8bce));
        // 8A 00C1
        gbc.setState(0xe1c8, 0x8885, 0xae0, 0x34d3, 0x8a2, 0x77fe, 0x1, 0x1);
        gbc.writeMem(0xe1c8, { 0x8a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8885, gbc.sp());
        EXPECT(0xe1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe1c8));
        // 8A 00C2
        gbc.setState(0xe1fe, 0x66b0, 0xe1e0, 0xc2e, 0xb626, 0x8b9c, 0x0, 0x1);
        gbc.writeMem(0xe1fe, { 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0xe1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe1fe));
        // 8A 00C3
        gbc.setState(0xb78d, 0x2598, 0x760, 0x4770, 0x71b3, 0x8e6f, 0x0, 0x1);
        gbc.writeMem(0xb78d, { 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb78d));
        // 8A 00C4
        gbc.setState(0xe4fb, 0xe84f, 0xf9c0, 0xb7dc, 0x962c, 0x372a, 0x1, 0x1);
        gbc.writeMem(0xe4fb, { 0x8a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe84f, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe4fb));
        // 8A 00C5
        gbc.setState(0x9ca1, 0x5fc7, 0x6f0, 0x816e, 0xb5a8, 0x679, 0x0, 0x0);
        gbc.writeMem(0x9ca1, { 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0x9ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9ca1));
        // 8A 00C6
        gbc.setState(0xcf4e, 0x946, 0xf680, 0x2b60, 0x7e51, 0xa07b, 0x0, 0x1);
        gbc.writeMem(0xcf4e, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x946, gbc.sp());
        EXPECT(0xcf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcf4e));
        // 8A 00C7
        gbc.setState(0x1e68, 0xd048, 0xbf70, 0xfe0d, 0x66a1, 0x4f68, 0x0, 0x0);
        gbc.writeMem(0x1e68, { 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00C8
        gbc.setState(0x2367, 0x50f7, 0x8c10, 0x5d37, 0xd53a, 0x8291, 0x1, 0x1);
        gbc.writeMem(0x2367, { 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0x2368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00C9
        gbc.setState(0x615e, 0xacb4, 0x6c10, 0x5f86, 0x1ad5, 0x3b8b, 0x0, 0x1);
        gbc.writeMem(0x615e, { 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xacb4, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00CA
        gbc.setState(0x2f84, 0xdb01, 0x5db0, 0x12fa, 0xf8e5, 0xc6e2, 0x0, 0x0);
        gbc.writeMem(0x2f84, { 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x2f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00CB
        gbc.setState(0x4783, 0x9b8e, 0xebb0, 0xf192, 0xfd31, 0x7bea, 0x0, 0x1);
        gbc.writeMem(0x4783, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x4784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00CC
        gbc.setState(0x8150, 0x1120, 0x7330, 0xddd2, 0xd03c, 0x15aa, 0x1, 0x0);
        gbc.writeMem(0x8150, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0x8151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8150));
        // 8A 00CD
        gbc.setState(0xba1f, 0x175b, 0xf80, 0x64fd, 0x9ea1, 0xe7de, 0x1, 0x0);
        gbc.writeMem(0xba1f, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x175b, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xba1f));
        // 8A 00CE
        gbc.setState(0xe965, 0x21e9, 0xd400, 0x5e4d, 0x6fe5, 0x3708, 0x0, 0x0);
        gbc.writeMem(0xe965, { 0x8a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x21e9, gbc.sp());
        EXPECT(0xe966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe965));
        // 8A 00CF
        gbc.setState(0x2952, 0xcfbf, 0x4210, 0xd159, 0x9579, 0xea04, 0x0, 0x1);
        gbc.writeMem(0x2952, { 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0x2953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00D0
        gbc.setState(0x94a1, 0x4cce, 0x6690, 0x495a, 0x69f4, 0x3d85, 0x0, 0x0);
        gbc.writeMem(0x94a1, { 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4cce, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x94a1));
        // 8A 00D1
        gbc.setState(0x2553, 0xca87, 0x1500, 0x3620, 0xf5b8, 0xc8ec, 0x1, 0x0);
        gbc.writeMem(0x2553, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xca87, gbc.sp());
        EXPECT(0x2554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00D2
        gbc.setState(0x838e, 0xad21, 0x2090, 0x35f3, 0x6df3, 0x8eb0, 0x1, 0x0);
        gbc.writeMem(0x838e, { 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xad21, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x838e));
        // 8A 00D3
        gbc.setState(0xa4f3, 0xd634, 0x1be0, 0x5034, 0xa294, 0x7c1b, 0x0, 0x1);
        gbc.writeMem(0xa4f3, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd634, gbc.sp());
        EXPECT(0xa4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa4f3));
        // 8A 00D5
        gbc.setState(0x8e01, 0xf361, 0x38c0, 0x15b6, 0x1bc3, 0xdf31, 0x0, 0x0);
        gbc.writeMem(0x8e01, { 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf361, gbc.sp());
        EXPECT(0x8e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8e01));
        // 8A 00D6
        gbc.setState(0xaa2f, 0xe9af, 0x7cb0, 0x7d36, 0x10f3, 0x2bd2, 0x1, 0x1);
        gbc.writeMem(0xaa2f, { 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaa2f));
        // 8A 00D7
        gbc.setState(0x7ab8, 0xef5a, 0x5030, 0x5c45, 0x2f91, 0xab40, 0x1, 0x1);
        gbc.writeMem(0x7ab8, { 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xef5a, gbc.sp());
        EXPECT(0x7ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00D8
        gbc.setState(0x6f59, 0x6178, 0xa00, 0x6047, 0xdc48, 0xbc52, 0x0, 0x0);
        gbc.writeMem(0x6f59, { 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6178, gbc.sp());
        EXPECT(0x6f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00D9
        gbc.setState(0x66b9, 0x6b15, 0xc870, 0xd381, 0x415b, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0x66b9, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b15, gbc.sp());
        EXPECT(0x66ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00DA
        gbc.setState(0xee4, 0x2f78, 0x6420, 0x9116, 0x1591, 0xcbf9, 0x1, 0x1);
        gbc.writeMem(0xee4, { 0x8a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2f78, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00DC
        gbc.setState(0x1491, 0xfa7b, 0xb20, 0xb01c, 0xc2d, 0xb4e3, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0x8a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00DD
        gbc.setState(0x6cc9, 0xb970, 0x4c00, 0x7f21, 0x55d8, 0xd9be, 0x1, 0x1);
        gbc.writeMem(0x6cc9, { 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb970, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00DE
        gbc.setState(0x17f8, 0xefb1, 0xba20, 0x848f, 0xbf21, 0x31ae, 0x1, 0x0);
        gbc.writeMem(0x17f8, { 0x8a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xefb1, gbc.sp());
        EXPECT(0x17f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00DF
        gbc.setState(0x757f, 0x7928, 0xb0d0, 0xa38f, 0xf6ce, 0x1e81, 0x0, 0x0);
        gbc.writeMem(0x757f, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7928, gbc.sp());
        EXPECT(0x7580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00E0
        gbc.setState(0xbb57, 0xba65, 0x24a0, 0xd623, 0xa94, 0x4442, 0x1, 0x1);
        gbc.writeMem(0xbb57, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0xbb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbb57));
        // 8A 00E1
        gbc.setState(0x3d71, 0xda37, 0xc070, 0xe31a, 0x9e65, 0x2296, 0x1, 0x0);
        gbc.writeMem(0x3d71, { 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00E2
        gbc.setState(0x43b8, 0x8ec3, 0xe710, 0x39e7, 0x4c1d, 0xd087, 0x0, 0x1);
        gbc.writeMem(0x43b8, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ec3, gbc.sp());
        EXPECT(0x43b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00E3
        gbc.setState(0xc5c6, 0xd7a2, 0x2e80, 0x284e, 0xb22a, 0x46f6, 0x1, 0x0);
        gbc.writeMem(0xc5c6, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc5c6));
        // 8A 00E4
        gbc.setState(0xe746, 0x2c35, 0x7bd0, 0xa2d6, 0xe274, 0x6dbb, 0x0, 0x1);
        gbc.writeMem(0xe746, { 0x8a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe746));
        // 8A 00E5
        gbc.setState(0x1324, 0x1665, 0x8540, 0x1b16, 0x3401, 0x7e8a, 0x1, 0x0);
        gbc.writeMem(0x1324, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0x1325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00E6
        gbc.setState(0xcf6b, 0xcf98, 0x5990, 0xd4ac, 0xca40, 0xe5f0, 0x1, 0x0);
        gbc.writeMem(0xcf6b, { 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0xcf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcf6b));
        // 8A 00E7
        gbc.setState(0x1af8, 0xd6d0, 0x42d0, 0xee7a, 0x3fba, 0x656e, 0x1, 0x0);
        gbc.writeMem(0x1af8, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0x1af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00E8
        gbc.setState(0x3f5a, 0xfcda, 0xdc30, 0x6ae6, 0x8837, 0x963c, 0x1, 0x0);
        gbc.writeMem(0x3f5a, { 0x8a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfcda, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00E9
        gbc.setState(0xc1fe, 0x4590, 0xddf0, 0xb5ab, 0x7ad1, 0xbe00, 0x0, 0x1);
        gbc.writeMem(0xc1fe, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4590, gbc.sp());
        EXPECT(0xc1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc1fe));
        // 8A 00EA
        gbc.setState(0x8402, 0xa932, 0x9d30, 0x35b4, 0xfe02, 0x97f1, 0x1, 0x1);
        gbc.writeMem(0x8402, { 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0x8403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8402));
        // 8A 00EB
        gbc.setState(0xb992, 0x38b7, 0xb170, 0x9e88, 0xcc59, 0xdd40, 0x1, 0x0);
        gbc.writeMem(0xb992, { 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x38b7, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb992));
        // 8A 00EC
        gbc.setState(0xe479, 0xcc67, 0x1b00, 0x44a4, 0xfbc4, 0xc88e, 0x0, 0x1);
        gbc.writeMem(0xe479, { 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe479));
        // 8A 00EE
        gbc.setState(0x6e44, 0x7ca, 0xdcf0, 0x61a5, 0xb769, 0xe3a2, 0x1, 0x1);
        gbc.writeMem(0x6e44, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7ca, gbc.sp());
        EXPECT(0x6e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00EF
        gbc.setState(0x2e62, 0xbb11, 0x15f0, 0xed3a, 0x7b98, 0x3920, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbb11, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00F0
        gbc.setState(0x2d9b, 0x6c2d, 0x5580, 0x82e3, 0x2a0b, 0x31ab, 0x0, 0x0);
        gbc.writeMem(0x2d9b, { 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c2d, gbc.sp());
        EXPECT(0x2d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00F1
        gbc.setState(0x689f, 0xc7f3, 0xc4e0, 0xbd55, 0xe827, 0x4e2c, 0x0, 0x1);
        gbc.writeMem(0x689f, { 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc7f3, gbc.sp());
        EXPECT(0x68a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00F2
        gbc.setState(0xe10, 0xb411, 0xb630, 0xd0c7, 0x9c19, 0xbb68, 0x1, 0x0);
        gbc.writeMem(0xe10, { 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb411, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00F3
        gbc.setState(0x5671, 0xe3c1, 0x2b50, 0x8090, 0xb3b6, 0xdcab, 0x0, 0x0);
        gbc.writeMem(0x5671, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe3c1, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00F4
        gbc.setState(0xd20c, 0xfcbd, 0x8560, 0xdca9, 0x59c7, 0x63ca, 0x1, 0x0);
        gbc.writeMem(0xd20c, { 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfcbd, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd20c));
        // 8A 00F5
        gbc.setState(0xabd0, 0xfcac, 0x3880, 0x960f, 0x7054, 0x1974, 0x1, 0x0);
        gbc.writeMem(0xabd0, { 0x8a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfcac, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xabd0));
        // 8A 00F6
        gbc.setState(0x37c3, 0xdd44, 0xd880, 0x896f, 0xf13c, 0x3c96, 0x0, 0x0);
        gbc.writeMem(0x37c3, { 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0x37c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00F7
        gbc.setState(0x1e7b, 0xd11f, 0x8ad0, 0xfed0, 0x9a4d, 0x2f7f, 0x1, 0x1);
        gbc.writeMem(0x1e7b, { 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd11f, gbc.sp());
        EXPECT(0x1e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00F8
        gbc.setState(0x24ce, 0x2405, 0xc600, 0x7317, 0x481f, 0xc899, 0x0, 0x1);
        gbc.writeMem(0x24ce, { 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0x24cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00F9
        gbc.setState(0x8c58, 0x801b, 0xfb50, 0x74d, 0x951b, 0x45f1, 0x0, 0x0);
        gbc.writeMem(0x8c58, { 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8c58));
        // 8A 00FA
        gbc.setState(0x32d6, 0x2963, 0xc40, 0x58ff, 0x72eb, 0x2fac, 0x0, 0x0);
        gbc.writeMem(0x32d6, { 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00FB
        gbc.setState(0x42fe, 0x3beb, 0x73c0, 0xfef0, 0x2f73, 0x4b01, 0x0, 0x1);
        gbc.writeMem(0x42fe, { 0x8a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3beb, gbc.sp());
        EXPECT(0x42ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 00FC
        gbc.setState(0xccd8, 0xa2dc, 0xb120, 0xea14, 0xb759, 0x2262, 0x1, 0x1);
        gbc.writeMem(0xccd8, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0xccd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xccd8));
        // 8A 00FD
        gbc.setState(0x19bd, 0xce82, 0xd050, 0xdfbe, 0x92ad, 0x960d, 0x0, 0x0);
        gbc.writeMem(0x19bd, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 00FE
        gbc.setState(0xc0c4, 0x9cfd, 0xed30, 0xcf63, 0xc4c8, 0x901, 0x0, 0x0);
        gbc.writeMem(0xc0c4, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cfd, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc0c4));
        // 8A 00FF
        gbc.setState(0xe5ec, 0x878a, 0x1460, 0x436, 0x2dec, 0xd915, 0x0, 0x0);
        gbc.writeMem(0xe5ec, { 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x878a, gbc.sp());
        EXPECT(0xe5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe5ec));
        // 8A 0100
        gbc.setState(0xcf32, 0xa34, 0xd150, 0x6a9d, 0xf552, 0xd810, 0x1, 0x0);
        gbc.writeMem(0xcf32, { 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa34, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcf32));
        // 8A 0101
        gbc.setState(0xef69, 0xba0d, 0x59a0, 0x7397, 0x57bb, 0xeeb4, 0x1, 0x1);
        gbc.writeMem(0xef69, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xef69));
        // 8A 0102
        gbc.setState(0x9846, 0x2e6f, 0x87a0, 0x2116, 0xe495, 0x2a4c, 0x0, 0x1);
        gbc.writeMem(0x9846, { 0x8a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2e6f, gbc.sp());
        EXPECT(0x9847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9846));
        // 8A 0103
        gbc.setState(0xa5e, 0x2016, 0x6800, 0x9a2f, 0xc725, 0x4261, 0x0, 0x0);
        gbc.writeMem(0xa5e, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0xa5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0104
        gbc.setState(0x24cf, 0x81fe, 0xa760, 0x23df, 0x476d, 0xe0d1, 0x0, 0x1);
        gbc.writeMem(0x24cf, { 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x81fe, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0105
        gbc.setState(0xe5e6, 0xa22b, 0x7560, 0x384, 0x96b3, 0x9a04, 0x0, 0x0);
        gbc.writeMem(0xe5e6, { 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe5e6));
        // 8A 0106
        gbc.setState(0x792b, 0x77e6, 0x64e0, 0x2c22, 0x10d6, 0x8188, 0x1, 0x0);
        gbc.writeMem(0x792b, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0107
        gbc.setState(0x7162, 0x5ffd, 0xeb60, 0x48aa, 0x4724, 0x9441, 0x0, 0x1);
        gbc.writeMem(0x7162, { 0x8a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0x7163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0108
        gbc.setState(0xbd9e, 0x41ff, 0x7e60, 0x39a9, 0x1666, 0x253, 0x1, 0x1);
        gbc.writeMem(0xbd9e, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x41ff, gbc.sp());
        EXPECT(0xbd9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbd9e));
        // 8A 0109
        gbc.setState(0x35e8, 0x92ce, 0xfea0, 0x5627, 0x28da, 0xdca1, 0x1, 0x0);
        gbc.writeMem(0x35e8, { 0x8a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0x35e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 010A
        gbc.setState(0x656c, 0xd605, 0x8180, 0x3926, 0xecaf, 0x5f97, 0x0, 0x1);
        gbc.writeMem(0x656c, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 010B
        gbc.setState(0x4163, 0x29d2, 0xe230, 0x9755, 0x6f5f, 0x3952, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x29d2, gbc.sp());
        EXPECT(0x4164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 010C
        gbc.setState(0xa6ea, 0xb9ef, 0xfb00, 0x39e3, 0xe29b, 0x9078, 0x1, 0x0);
        gbc.writeMem(0xa6ea, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb9ef, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa6ea));
        // 8A 010D
        gbc.setState(0x6c6e, 0xb7bf, 0xe850, 0x5426, 0xfa26, 0x152a, 0x0, 0x1);
        gbc.writeMem(0x6c6e, { 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb7bf, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 010F
        gbc.setState(0x8399, 0x7d2d, 0xb6b0, 0x8f87, 0x460d, 0x1c9d, 0x0, 0x1);
        gbc.writeMem(0x8399, { 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d2d, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8399));
        // 8A 0110
        gbc.setState(0xb55b, 0xf26b, 0x1a0, 0x1511, 0xc129, 0x2dfb, 0x0, 0x0);
        gbc.writeMem(0xb55b, { 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf26b, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb55b));
        // 8A 0111
        gbc.setState(0xd43b, 0xcd5a, 0x63d0, 0x9a82, 0xec68, 0xce99, 0x1, 0x1);
        gbc.writeMem(0xd43b, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcd5a, gbc.sp());
        EXPECT(0xd43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd43b));
        // 8A 0112
        gbc.setState(0x3060, 0xce20, 0xe470, 0xa948, 0xb4d9, 0x4a6d, 0x1, 0x1);
        gbc.writeMem(0x3060, { 0x8a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xce20, gbc.sp());
        EXPECT(0x3061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0113
        gbc.setState(0xaabb, 0x562c, 0xaf80, 0x675a, 0x5169, 0x513c, 0x1, 0x1);
        gbc.writeMem(0xaabb, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x562c, gbc.sp());
        EXPECT(0xaabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaabb));
        // 8A 0114
        gbc.setState(0x904f, 0xfd49, 0x3520, 0xca82, 0xe52b, 0x1eff, 0x1, 0x1);
        gbc.writeMem(0x904f, { 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd49, gbc.sp());
        EXPECT(0x9050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x904f));
        // 8A 0115
        gbc.setState(0xde90, 0x95bf, 0xdd0, 0xedba, 0x1f56, 0x3785, 0x0, 0x1);
        gbc.writeMem(0xde90, { 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x95bf, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xde90));
        // 8A 0116
        gbc.setState(0xab8b, 0xb2f9, 0x2b70, 0x8cd3, 0x481a, 0x966e, 0x0, 0x1);
        gbc.writeMem(0xab8b, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb2f9, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xab8b));
        // 8A 0117
        gbc.setState(0x486a, 0x5ec1, 0x1ac0, 0xa30f, 0x7e75, 0xf861, 0x0, 0x1);
        gbc.writeMem(0x486a, { 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5ec1, gbc.sp());
        EXPECT(0x486b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0118
        gbc.setState(0x845c, 0xf46d, 0x4db0, 0xa8ce, 0x5532, 0xb792, 0x0, 0x0);
        gbc.writeMem(0x845c, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0x845d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x845c));
        // 8A 0119
        gbc.setState(0x1393, 0xe594, 0x7a20, 0xea61, 0xfabb, 0x2cae, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0x1394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 011A
        gbc.setState(0xac1c, 0x3b90, 0x7fc0, 0x58e6, 0x2f19, 0x46e2, 0x1, 0x1);
        gbc.writeMem(0xac1c, { 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0xac1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xac1c));
        // 8A 011B
        gbc.setState(0x883d, 0x34e3, 0x5810, 0xb49d, 0x836a, 0x4a92, 0x1, 0x0);
        gbc.writeMem(0x883d, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x34e3, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x883d));
        // 8A 011C
        gbc.setState(0xcfe7, 0xc203, 0xf550, 0x34dd, 0x9361, 0x33e3, 0x1, 0x1);
        gbc.writeMem(0xcfe7, { 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcfe7));
        // 8A 011D
        gbc.setState(0x32d0, 0xcf88, 0xe950, 0xd92, 0x75b0, 0xa437, 0x1, 0x1);
        gbc.writeMem(0x32d0, { 0x8a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcf88, gbc.sp());
        EXPECT(0x32d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 011E
        gbc.setState(0x2be9, 0x97ff, 0x2f80, 0x5b2a, 0xd329, 0xb2b6, 0x1, 0x1);
        gbc.writeMem(0x2be9, { 0x8a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 011F
        gbc.setState(0x2cc8, 0x9857, 0x8840, 0x56aa, 0x930b, 0x3ca0, 0x0, 0x1);
        gbc.writeMem(0x2cc8, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0120
        gbc.setState(0xdf67, 0xff21, 0x2a40, 0x3262, 0xcf0e, 0x6cf8, 0x0, 0x0);
        gbc.writeMem(0xdf67, { 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xff21, gbc.sp());
        EXPECT(0xdf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf67));
        // 8A 0121
        gbc.setState(0x44f1, 0x2e8a, 0xfaf0, 0xde7f, 0xc25b, 0x6a8f, 0x0, 0x0);
        gbc.writeMem(0x44f1, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2e8a, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0122
        gbc.setState(0xd9d9, 0x104e, 0x2070, 0xeaf0, 0x9c30, 0xb42a, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd9d9));
        // 8A 0123
        gbc.setState(0xa7b8, 0xf3a2, 0x8f60, 0x4e7, 0xd486, 0xe563, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf3a2, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa7b8));
        // 8A 0124
        gbc.setState(0x1f58, 0xc394, 0xebd0, 0x5a59, 0x1e67, 0x646e, 0x0, 0x0);
        gbc.writeMem(0x1f58, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0x1f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0126
        gbc.setState(0xcdfe, 0x4b32, 0x1e00, 0x1f71, 0x5579, 0xfcd2, 0x0, 0x1);
        gbc.writeMem(0xcdfe, { 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4b32, gbc.sp());
        EXPECT(0xcdff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcdfe));
        // 8A 0127
        gbc.setState(0xb7, 0xce93, 0x9c70, 0x6b9, 0x530f, 0x4fa9, 0x0, 0x0);
        gbc.writeMem(0xb7, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0128
        gbc.setState(0xd3a2, 0xa9a8, 0xa450, 0x26a8, 0xa8c7, 0xbacd, 0x0, 0x0);
        gbc.writeMem(0xd3a2, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa9a8, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd3a2));
        // 8A 0129
        gbc.setState(0x4c6e, 0xe63d, 0xe100, 0x416a, 0xa7f4, 0xa73e, 0x0, 0x0);
        gbc.writeMem(0x4c6e, { 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x4c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 012A
        gbc.setState(0x13bd, 0x304f, 0xc3b0, 0xcfd0, 0x1570, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0x13bd, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x304f, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 012B
        gbc.setState(0x148b, 0xaa2e, 0x7f40, 0xbc0f, 0x2b82, 0x32f8, 0x0, 0x0);
        gbc.writeMem(0x148b, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa2e, gbc.sp());
        EXPECT(0x148c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 012C
        gbc.setState(0xce2e, 0x7128, 0x4c40, 0xb2ed, 0xb9f7, 0x3787, 0x0, 0x0);
        gbc.writeMem(0xce2e, { 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0xce2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xce2e));
        // 8A 012D
        gbc.setState(0xe325, 0x69d7, 0xe6a0, 0x8718, 0x2345, 0x7d52, 0x0, 0x1);
        gbc.writeMem(0xe325, { 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x69d7, gbc.sp());
        EXPECT(0xe326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe325));
        // 8A 012F
        gbc.setState(0xd8c1, 0x3c1e, 0x30d0, 0x33d9, 0xe096, 0xb329, 0x0, 0x0);
        gbc.writeMem(0xd8c1, { 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd8c1));
        // 8A 0130
        gbc.setState(0xb5d0, 0x9041, 0xdda0, 0xf04f, 0xabaa, 0x1410, 0x0, 0x0);
        gbc.writeMem(0xb5d0, { 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0xb5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb5d0));
        // 8A 0131
        gbc.setState(0x65e2, 0xc782, 0xcfd0, 0x7b0d, 0x483a, 0x6524, 0x1, 0x1);
        gbc.writeMem(0x65e2, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc782, gbc.sp());
        EXPECT(0x65e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0132
        gbc.setState(0x35, 0xd90, 0xadc0, 0xb515, 0x470e, 0xfca8, 0x0, 0x1);
        gbc.writeMem(0x35, { 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd90, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0133
        gbc.setState(0xcb03, 0x7ae0, 0x82b0, 0x7bc2, 0x4776, 0xe79a, 0x0, 0x1);
        gbc.writeMem(0xcb03, { 0x8a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0xcb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcb03));
        // 8A 0134
        gbc.setState(0xb344, 0x4c7b, 0x65a0, 0xb908, 0x8f06, 0x8b06, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4c7b, gbc.sp());
        EXPECT(0xb345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb344));
        // 8A 0135
        gbc.setState(0xb037, 0xad4a, 0x59d0, 0xc3ea, 0x83d3, 0x7eef, 0x0, 0x0);
        gbc.writeMem(0xb037, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xad4a, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb037));
        // 8A 0136
        gbc.setState(0xb51f, 0xe54a, 0x1e50, 0x3917, 0x5182, 0x8079, 0x0, 0x1);
        gbc.writeMem(0xb51f, { 0x8a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0xb520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb51f));
        // 8A 0137
        gbc.setState(0xc507, 0xb206, 0xffd0, 0xe555, 0xf58, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0xc507, { 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0xc508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc507));
        // 8A 0138
        gbc.setState(0x320b, 0xf585, 0x7b20, 0xa039, 0x2998, 0xb6b0, 0x1, 0x0);
        gbc.writeMem(0x320b, { 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf585, gbc.sp());
        EXPECT(0x320c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0139
        gbc.setState(0x387a, 0x82a6, 0x3650, 0xe57f, 0x2ceb, 0x95c4, 0x0, 0x0);
        gbc.writeMem(0x387a, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0x387b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 013A
        gbc.setState(0xcbfb, 0x5d02, 0x9410, 0x8cd3, 0xf1f2, 0x19d5, 0x1, 0x1);
        gbc.writeMem(0xcbfb, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcbfb));
        // 8A 013B
        gbc.setState(0xa489, 0x90c, 0x73f0, 0xee04, 0xe010, 0x4528, 0x0, 0x1);
        gbc.writeMem(0xa489, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90c, gbc.sp());
        EXPECT(0xa48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa489));
        // 8A 013C
        gbc.setState(0x1059, 0xbea, 0x1710, 0x8dbf, 0x1931, 0xdec3, 0x0, 0x1);
        gbc.writeMem(0x1059, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbea, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 013D
        gbc.setState(0x272, 0xba42, 0x8750, 0xdfe7, 0xb3e3, 0xdc7f, 0x0, 0x0);
        gbc.writeMem(0x272, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba42, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 013E
        gbc.setState(0xa0a9, 0x89b0, 0xee00, 0x8314, 0xfb2b, 0xac52, 0x0, 0x0);
        gbc.writeMem(0xa0a9, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x89b0, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa0a9));
        // 8A 013F
        gbc.setState(0x8dd8, 0x6a95, 0xc590, 0xd3b0, 0xec7f, 0x651f, 0x1, 0x1);
        gbc.writeMem(0x8dd8, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6a95, gbc.sp());
        EXPECT(0x8dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8dd8));
        // 8A 0140
        gbc.setState(0xe07e, 0x3cf4, 0x7ff0, 0x7622, 0x70e4, 0x271f, 0x0, 0x0);
        gbc.writeMem(0xe07e, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xe07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe07e));
        // 8A 0142
        gbc.setState(0x13d0, 0x37e5, 0x3b50, 0xa36a, 0xc026, 0x8ae6, 0x0, 0x0);
        gbc.writeMem(0x13d0, { 0x8a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0x13d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0143
        gbc.setState(0xcbdf, 0xa3bf, 0xc530, 0x9f9d, 0x528a, 0xa314, 0x1, 0x1);
        gbc.writeMem(0xcbdf, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa3bf, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcbdf));
        // 8A 0144
        gbc.setState(0xe5ac, 0x2659, 0x650, 0x2889, 0x2c1c, 0xd1f1, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xe5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe5ac));
        // 8A 0145
        gbc.setState(0x4e49, 0xe817, 0x5a20, 0xedc, 0x7266, 0x6af9, 0x1, 0x1);
        gbc.writeMem(0x4e49, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe817, gbc.sp());
        EXPECT(0x4e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0146
        gbc.setState(0x4bce, 0x7610, 0x3640, 0x27f1, 0x4f16, 0x12d2, 0x0, 0x0);
        gbc.writeMem(0x4bce, { 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7610, gbc.sp());
        EXPECT(0x4bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0147
        gbc.setState(0xa1e5, 0xb2a8, 0xb4a0, 0x78d, 0x347f, 0xb73, 0x1, 0x0);
        gbc.writeMem(0xa1e5, { 0x8a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb2a8, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa1e5));
        // 8A 0149
        gbc.setState(0xcbcf, 0x2835, 0xcd00, 0x7bc7, 0xb0db, 0xd9c9, 0x1, 0x1);
        gbc.writeMem(0xcbcf, { 0x8a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2835, gbc.sp());
        EXPECT(0xcbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcbcf));
        // 8A 014A
        gbc.setState(0x9144, 0xbbda, 0x8bc0, 0x85cf, 0x88af, 0xe948, 0x0, 0x1);
        gbc.writeMem(0x9144, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x9145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9144));
        // 8A 014C
        gbc.setState(0x5b87, 0xf254, 0x9760, 0x6788, 0xfff9, 0x161e, 0x0, 0x1);
        gbc.writeMem(0x5b87, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0x5b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 014D
        gbc.setState(0x917c, 0xfcf7, 0x3a00, 0xaff5, 0x7a0a, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0x917c, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x917d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x917c));
        // 8A 014E
        gbc.setState(0xc4bb, 0xd31b, 0x7960, 0x1b86, 0x2ab7, 0xca32, 0x0, 0x1);
        gbc.writeMem(0xc4bb, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0xc4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc4bb));
        // 8A 014F
        gbc.setState(0x7f1f, 0xae0c, 0xe080, 0xf11d, 0xbd56, 0x24a2, 0x0, 0x1);
        gbc.writeMem(0x7f1f, { 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae0c, gbc.sp());
        EXPECT(0x7f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0150
        gbc.setState(0x8e11, 0x8571, 0xe110, 0x8e94, 0xd416, 0x648f, 0x1, 0x1);
        gbc.writeMem(0x8e11, { 0x8a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0x8e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8e11));
        // 8A 0151
        gbc.setState(0x82f7, 0xc463, 0xbf40, 0xcef9, 0x8f64, 0x222b, 0x1, 0x0);
        gbc.writeMem(0x82f7, { 0x8a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0x82f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x82f7));
        // 8A 0152
        gbc.setState(0xcb15, 0x500a, 0x97b0, 0xc0a2, 0xe7b8, 0x4795, 0x0, 0x0);
        gbc.writeMem(0xcb15, { 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x500a, gbc.sp());
        EXPECT(0xcb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcb15));
        // 8A 0153
        gbc.setState(0x6869, 0xd539, 0x5dd0, 0xf1bf, 0x5ea8, 0xef54, 0x1, 0x1);
        gbc.writeMem(0x6869, { 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd539, gbc.sp());
        EXPECT(0x686a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0155
        gbc.setState(0xd3b0, 0x1a55, 0xab40, 0x6aad, 0xac73, 0x3b18, 0x0, 0x1);
        gbc.writeMem(0xd3b0, { 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1a55, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd3b0));
        // 8A 0156
        gbc.setState(0xb864, 0xdbf4, 0xe270, 0x9ee7, 0x5e5e, 0x85ba, 0x0, 0x0);
        gbc.writeMem(0xb864, { 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdbf4, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb864));
        // 8A 0157
        gbc.setState(0x2b50, 0x2a7a, 0x7000, 0x586, 0x23db, 0xc510, 0x1, 0x0);
        gbc.writeMem(0x2b50, { 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0x2b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0158
        gbc.setState(0x5b4a, 0x6328, 0x7df0, 0xd314, 0xb6ce, 0x5706, 0x1, 0x0);
        gbc.writeMem(0x5b4a, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6328, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0159
        gbc.setState(0x4b9e, 0xc839, 0xff30, 0x2e86, 0xdf59, 0x6dd5, 0x1, 0x1);
        gbc.writeMem(0x4b9e, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0x4b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 015A
        gbc.setState(0x122f, 0xdb6c, 0x3bb0, 0x41f4, 0xfdbb, 0xc26c, 0x0, 0x0);
        gbc.writeMem(0x122f, { 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x1230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 015B
        gbc.setState(0x85e4, 0xf10f, 0x4cd0, 0x41a6, 0xdc29, 0x2cad, 0x0, 0x1);
        gbc.writeMem(0x85e4, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf10f, gbc.sp());
        EXPECT(0x85e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x85e4));
        // 8A 015C
        gbc.setState(0x4b54, 0x6415, 0x7b20, 0xd887, 0x49ea, 0x8ed2, 0x1, 0x0);
        gbc.writeMem(0x4b54, { 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 015D
        gbc.setState(0x8593, 0x469, 0x54f0, 0xef77, 0x6ba2, 0x43f0, 0x1, 0x0);
        gbc.writeMem(0x8593, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0x8594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8593));
        // 8A 015E
        gbc.setState(0x309f, 0xff74, 0x2590, 0x4121, 0xa5df, 0x5bff, 0x1, 0x0);
        gbc.writeMem(0x309f, { 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xff74, gbc.sp());
        EXPECT(0x30a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 015F
        gbc.setState(0x911d, 0x40e0, 0x42e0, 0x9678, 0x26f0, 0x1f95, 0x1, 0x1);
        gbc.writeMem(0x911d, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x40e0, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x911d));
        // 8A 0160
        gbc.setState(0xc50c, 0x3604, 0x8e10, 0xcab4, 0x21be, 0xd542, 0x0, 0x1);
        gbc.writeMem(0xc50c, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3604, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc50c));
        // 8A 0161
        gbc.setState(0x5781, 0xf8e1, 0x1d20, 0xafb2, 0xea1d, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0x5781, { 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0162
        gbc.setState(0x5c26, 0xd33c, 0x2e10, 0x40be, 0xb7e6, 0x51c3, 0x1, 0x0);
        gbc.writeMem(0x5c26, { 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd33c, gbc.sp());
        EXPECT(0x5c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0163
        gbc.setState(0xe53b, 0x2813, 0x9de0, 0xe994, 0xb0bc, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0xe53b, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2813, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe53b));
        // 8A 0164
        gbc.setState(0x56fa, 0xa3ee, 0xbb40, 0x1cf2, 0x206f, 0x6ab, 0x1, 0x1);
        gbc.writeMem(0x56fa, { 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3ee, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0165
        gbc.setState(0x19a, 0x7709, 0x8820, 0xc608, 0xc85b, 0xc509, 0x0, 0x0);
        gbc.writeMem(0x19a, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7709, gbc.sp());
        EXPECT(0x19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0167
        gbc.setState(0x9db1, 0xcbf5, 0x4b70, 0xf4aa, 0x9a85, 0xda43, 0x0, 0x0);
        gbc.writeMem(0x9db1, { 0x8a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0x9db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9db1));
        // 8A 0169
        gbc.setState(0x6925, 0x8ab0, 0x6030, 0x9d42, 0xa954, 0xec27, 0x0, 0x0);
        gbc.writeMem(0x6925, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ab0, gbc.sp());
        EXPECT(0x6926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 016A
        gbc.setState(0x9b2, 0x4503, 0xaa40, 0xd93f, 0x9416, 0x19ac, 0x0, 0x1);
        gbc.writeMem(0x9b2, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4503, gbc.sp());
        EXPECT(0x9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 016B
        gbc.setState(0x2687, 0x175f, 0x3750, 0x72fb, 0xa9fb, 0x7484, 0x0, 0x0);
        gbc.writeMem(0x2687, { 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x175f, gbc.sp());
        EXPECT(0x2688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 016C
        gbc.setState(0x2459, 0x197f, 0x4cf0, 0x10e6, 0x8c11, 0x592d, 0x0, 0x0);
        gbc.writeMem(0x2459, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x197f, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 016D
        gbc.setState(0xece7, 0x109a, 0x2c0, 0xfdcd, 0xe30b, 0x28fa, 0x1, 0x1);
        gbc.writeMem(0xece7, { 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x109a, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xece7));
        // 8A 016F
        gbc.setState(0x5e91, 0xb34e, 0x8f20, 0xf4ee, 0xe548, 0xfa69, 0x0, 0x0);
        gbc.writeMem(0x5e91, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0x5e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0170
        gbc.setState(0xc3e9, 0x23d, 0x8410, 0x131d, 0x51b7, 0x2e9a, 0x1, 0x0);
        gbc.writeMem(0xc3e9, { 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x23d, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc3e9));
        // 8A 0171
        gbc.setState(0xe194, 0xdce1, 0x9e40, 0x62bf, 0xf4b3, 0x5cf4, 0x1, 0x1);
        gbc.writeMem(0xe194, { 0x8a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0xe195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe194));
        // 8A 0172
        gbc.setState(0x925e, 0x9969, 0x17b0, 0xd3cb, 0x6445, 0x6b99, 0x1, 0x1);
        gbc.writeMem(0x925e, { 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0x925f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x925e));
        // 8A 0173
        gbc.setState(0x689e, 0xb40d, 0x99e0, 0x32cd, 0x6fa0, 0x12a6, 0x1, 0x0);
        gbc.writeMem(0x689e, { 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0174
        gbc.setState(0x28ed, 0xe92e, 0x2e60, 0x1369, 0x29b4, 0x654, 0x1, 0x0);
        gbc.writeMem(0x28ed, { 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0x28ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0175
        gbc.setState(0xa784, 0x2f2d, 0xb690, 0xd7c3, 0xa325, 0x4fee, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0x8a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2f2d, gbc.sp());
        EXPECT(0xa785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa784));
        // 8A 0176
        gbc.setState(0x5811, 0x6a56, 0x7b90, 0xebec, 0x7537, 0xe816, 0x0, 0x0);
        gbc.writeMem(0x5811, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0x5812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0177
        gbc.setState(0xd4b2, 0x5b9c, 0x8b60, 0x18ff, 0x9ae5, 0xdd85, 0x0, 0x0);
        gbc.writeMem(0xd4b2, { 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5b9c, gbc.sp());
        EXPECT(0xd4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd4b2));
        // 8A 0178
        gbc.setState(0xc442, 0xb31, 0xd9b0, 0x2668, 0xac3, 0x69f7, 0x0, 0x0);
        gbc.writeMem(0xc442, { 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb31, gbc.sp());
        EXPECT(0xc443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc442));
        // 8A 0179
        gbc.setState(0xa47c, 0xf68f, 0x1a00, 0xefee, 0xbfcc, 0x22ff, 0x0, 0x0);
        gbc.writeMem(0xa47c, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf68f, gbc.sp());
        EXPECT(0xa47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa47c));
        // 8A 017A
        gbc.setState(0x7ce8, 0x856d, 0x96f0, 0x69a3, 0x9888, 0x63d6, 0x1, 0x0);
        gbc.writeMem(0x7ce8, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x7ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 017B
        gbc.setState(0x1ded, 0x46aa, 0xc2f0, 0x5444, 0xabf, 0x5450, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 017C
        gbc.setState(0x73fd, 0xdf6c, 0x8cb0, 0x24c6, 0xb979, 0x9b33, 0x0, 0x0);
        gbc.writeMem(0x73fd, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdf6c, gbc.sp());
        EXPECT(0x73fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 017D
        gbc.setState(0xa1ce, 0x265e, 0x160, 0x6418, 0x12a7, 0x407c, 0x0, 0x0);
        gbc.writeMem(0xa1ce, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa1ce));
        // 8A 017E
        gbc.setState(0x505e, 0x9f7e, 0x41e0, 0xd6ee, 0x9f78, 0xc100, 0x0, 0x0);
        gbc.writeMem(0x505e, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9f7e, gbc.sp());
        EXPECT(0x505f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 017F
        gbc.setState(0x60bc, 0x4f32, 0x8840, 0x3421, 0xab38, 0x2a11, 0x1, 0x1);
        gbc.writeMem(0x60bc, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4f32, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0180
        gbc.setState(0xc599, 0xe654, 0x3760, 0x3bc0, 0x1603, 0x5212, 0x1, 0x0);
        gbc.writeMem(0xc599, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc599));
        // 8A 0181
        gbc.setState(0xd521, 0x9348, 0x9c70, 0xe858, 0xcb83, 0x9056, 0x1, 0x1);
        gbc.writeMem(0xd521, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd521));
        // 8A 0182
        gbc.setState(0x3d8b, 0xe50b, 0xa720, 0x906c, 0x3587, 0x7377, 0x0, 0x1);
        gbc.writeMem(0x3d8b, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe50b, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0183
        gbc.setState(0x1fb7, 0xc007, 0x8790, 0x2e03, 0x6a96, 0xb2e7, 0x1, 0x1);
        gbc.writeMem(0x1fb7, { 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0184
        gbc.setState(0x709d, 0x899, 0x2c30, 0x8eef, 0xf449, 0x265a, 0x0, 0x0);
        gbc.writeMem(0x709d, { 0x8a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x899, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0185
        gbc.setState(0x9a84, 0x9b98, 0x3680, 0x89e7, 0xc0f9, 0xba3f, 0x1, 0x1);
        gbc.writeMem(0x9a84, { 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a84));
        // 8A 0186
        gbc.setState(0xd29a, 0x3254, 0x5de0, 0xf043, 0xa935, 0xff83, 0x1, 0x1);
        gbc.writeMem(0xd29a, { 0x8a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3254, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd29a));
        // 8A 0187
        gbc.setState(0x1732, 0x13d4, 0xbaa0, 0x3f75, 0xb702, 0x1e39, 0x1, 0x1);
        gbc.writeMem(0x1732, { 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0188
        gbc.setState(0x7df9, 0xadda, 0xb20, 0x6e6d, 0xbac3, 0x765c, 0x1, 0x0);
        gbc.writeMem(0x7df9, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xadda, gbc.sp());
        EXPECT(0x7dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 018B
        gbc.setState(0x2be3, 0xa2c, 0xa050, 0x686f, 0x37df, 0xccce, 0x1, 0x0);
        gbc.writeMem(0x2be3, { 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa2c, gbc.sp());
        EXPECT(0x2be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 018C
        gbc.setState(0xc553, 0xf04a, 0xd080, 0xe639, 0x6d73, 0x996, 0x1, 0x0);
        gbc.writeMem(0xc553, { 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf04a, gbc.sp());
        EXPECT(0xc554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc553));
        // 8A 018D
        gbc.setState(0x69e2, 0x122d, 0xc690, 0x341b, 0xe5, 0x6ce7, 0x0, 0x0);
        gbc.writeMem(0x69e2, { 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x122d, gbc.sp());
        EXPECT(0x69e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 018E
        gbc.setState(0x5b3c, 0x834d, 0x5bf0, 0x754b, 0xab47, 0x8871, 0x0, 0x0);
        gbc.writeMem(0x5b3c, { 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x834d, gbc.sp());
        EXPECT(0x5b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 018F
        gbc.setState(0xd7d3, 0x98c7, 0xcde0, 0xa37, 0xfe35, 0xf824, 0x0, 0x0);
        gbc.writeMem(0xd7d3, { 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd7d3));
        // 8A 0190
        gbc.setState(0x1f9e, 0x940a, 0x3d30, 0x14d8, 0xce3, 0xf4e2, 0x1, 0x1);
        gbc.writeMem(0x1f9e, { 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x940a, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0191
        gbc.setState(0x97bd, 0x2d5f, 0x9310, 0xa8a3, 0x5d3c, 0x603c, 0x1, 0x1);
        gbc.writeMem(0x97bd, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d5f, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x97bd));
        // 8A 0192
        gbc.setState(0xbe3e, 0xd5eb, 0x1f60, 0x4f7c, 0xccd, 0xc7c4, 0x1, 0x1);
        gbc.writeMem(0xbe3e, { 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbe3e));
        // 8A 0193
        gbc.setState(0xcc64, 0xfcb0, 0x8c60, 0x124f, 0xcd8a, 0x5ea2, 0x0, 0x0);
        gbc.writeMem(0xcc64, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcc64));
        // 8A 0194
        gbc.setState(0x1208, 0x601d, 0x7950, 0xfe1e, 0xa2cf, 0x7d83, 0x1, 0x0);
        gbc.writeMem(0x1208, { 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0x1209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0195
        gbc.setState(0x2f57, 0x6a9d, 0xc7b0, 0xba21, 0x77ad, 0x49a6, 0x0, 0x0);
        gbc.writeMem(0x2f57, { 0x8a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6a9d, gbc.sp());
        EXPECT(0x2f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0196
        gbc.setState(0xe5cf, 0xa0d6, 0x5c60, 0xc32, 0x802b, 0xc1ae, 0x1, 0x0);
        gbc.writeMem(0xe5cf, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa0d6, gbc.sp());
        EXPECT(0xe5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe5cf));
        // 8A 0197
        gbc.setState(0xedb9, 0x3cae, 0x6790, 0x9eed, 0xa254, 0xec75, 0x1, 0x0);
        gbc.writeMem(0xedb9, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3cae, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xedb9));
        // 8A 0198
        gbc.setState(0xe93b, 0xf1e5, 0x3a50, 0xeea8, 0xcf73, 0x9873, 0x1, 0x0);
        gbc.writeMem(0xe93b, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf1e5, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe93b));
        // 8A 0199
        gbc.setState(0x150f, 0x1184, 0x1f50, 0x3787, 0x3bf7, 0x8a50, 0x0, 0x1);
        gbc.writeMem(0x150f, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1184, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 019A
        gbc.setState(0x30d7, 0x7a49, 0xb900, 0x8dc1, 0x84d2, 0x62bd, 0x1, 0x1);
        gbc.writeMem(0x30d7, { 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7a49, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 019B
        gbc.setState(0x3772, 0x284e, 0x3a30, 0x1431, 0x4a4f, 0xd109, 0x1, 0x1);
        gbc.writeMem(0x3772, { 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x3773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 019C
        gbc.setState(0xe3ac, 0x8f72, 0x8900, 0x3c61, 0x16c8, 0xc5bc, 0x0, 0x0);
        gbc.writeMem(0xe3ac, { 0x8a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe3ac));
        // 8A 019D
        gbc.setState(0x7c4f, 0xbd80, 0xed10, 0x644b, 0xb0f0, 0x3090, 0x1, 0x1);
        gbc.writeMem(0x7c4f, { 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbd80, gbc.sp());
        EXPECT(0x7c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 019E
        gbc.setState(0x8cf5, 0xb562, 0xc940, 0x7556, 0xd2ea, 0xba4e, 0x1, 0x1);
        gbc.writeMem(0x8cf5, { 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb562, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8cf5));
        // 8A 019F
        gbc.setState(0x4289, 0x8b02, 0x2940, 0xdf66, 0x6307, 0x6d, 0x1, 0x1);
        gbc.writeMem(0x4289, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8b02, gbc.sp());
        EXPECT(0x428a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01A0
        gbc.setState(0xd89b, 0x5371, 0x5380, 0xf822, 0x940d, 0x437d, 0x0, 0x0);
        gbc.writeMem(0xd89b, { 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5371, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd89b));
        // 8A 01A2
        gbc.setState(0x5f75, 0x88d1, 0x8740, 0x2aa2, 0x3324, 0x90a7, 0x1, 0x1);
        gbc.writeMem(0x5f75, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x88d1, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01A3
        gbc.setState(0x1f33, 0x2418, 0x3ff0, 0x20e7, 0x23eb, 0x4688, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0x1f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01A4
        gbc.setState(0x61af, 0x5025, 0x67a0, 0x4b91, 0x9466, 0xe5db, 0x1, 0x0);
        gbc.writeMem(0x61af, { 0x8a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5025, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01A5
        gbc.setState(0x1ca0, 0x483, 0xe60, 0xb7f8, 0xf9ad, 0x61f5, 0x1, 0x0);
        gbc.writeMem(0x1ca0, { 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x483, gbc.sp());
        EXPECT(0x1ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01A6
        gbc.setState(0x563f, 0x8617, 0xa360, 0x57e5, 0xb527, 0x411, 0x0, 0x1);
        gbc.writeMem(0x563f, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x5640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01A7
        gbc.setState(0xa086, 0xca9d, 0xc970, 0x412e, 0x29c5, 0x9d60, 0x1, 0x0);
        gbc.writeMem(0xa086, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca9d, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa086));
        // 8A 01A8
        gbc.setState(0xe491, 0x8d9e, 0x3c00, 0x58aa, 0x87e3, 0x72f4, 0x0, 0x0);
        gbc.writeMem(0xe491, { 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8d9e, gbc.sp());
        EXPECT(0xe492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe491));
        // 8A 01AA
        gbc.setState(0x52cf, 0x3690, 0xf1a0, 0x5b43, 0xff25, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0x52d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01AB
        gbc.setState(0xd08a, 0xc24d, 0x4670, 0x967b, 0xfb7c, 0x6b1f, 0x1, 0x1);
        gbc.writeMem(0xd08a, { 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc24d, gbc.sp());
        EXPECT(0xd08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd08a));
        // 8A 01AC
        gbc.setState(0x116c, 0xc3d9, 0x4cd0, 0x3cd2, 0xc8c0, 0x384a, 0x1, 0x1);
        gbc.writeMem(0x116c, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc3d9, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01AD
        gbc.setState(0x616a, 0xeaf2, 0x71e0, 0x3062, 0xc2e3, 0x9666, 0x1, 0x1);
        gbc.writeMem(0x616a, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01AE
        gbc.setState(0x792, 0x154c, 0x5b50, 0xdef0, 0x9225, 0x16c9, 0x0, 0x1);
        gbc.writeMem(0x792, { 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x154c, gbc.sp());
        EXPECT(0x793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01AF
        gbc.setState(0x4c34, 0xa65f, 0x1bf0, 0x9189, 0x687b, 0xdb94, 0x1, 0x1);
        gbc.writeMem(0x4c34, { 0x8a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa65f, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01B0
        gbc.setState(0x9c72, 0xe690, 0xef40, 0x8229, 0xe5b6, 0xe961, 0x1, 0x0);
        gbc.writeMem(0x9c72, { 0x8a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0x9c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9c72));
        // 8A 01B1
        gbc.setState(0xa6e1, 0xe6b7, 0x36c0, 0x7590, 0xebd5, 0x4a19, 0x1, 0x0);
        gbc.writeMem(0xa6e1, { 0x8a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6b7, gbc.sp());
        EXPECT(0xa6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa6e1));
        // 8A 01B2
        gbc.setState(0x3b7a, 0xb56a, 0xc050, 0x4086, 0x5672, 0x309d, 0x0, 0x1);
        gbc.writeMem(0x3b7a, { 0x8a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb56a, gbc.sp());
        EXPECT(0x3b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01B3
        gbc.setState(0x1f48, 0xde2c, 0x4860, 0xc4a8, 0x870, 0x278b, 0x0, 0x0);
        gbc.writeMem(0x1f48, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01B4
        gbc.setState(0x9f2d, 0x6365, 0x40b0, 0xf73b, 0x3c3a, 0xfc2b, 0x1, 0x0);
        gbc.writeMem(0x9f2d, { 0x8a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6365, gbc.sp());
        EXPECT(0x9f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9f2d));
        // 8A 01B5
        gbc.setState(0x6721, 0x4dcc, 0x730, 0xd2ac, 0xa851, 0x8c24, 0x1, 0x0);
        gbc.writeMem(0x6721, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4dcc, gbc.sp());
        EXPECT(0x6722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01B7
        gbc.setState(0xa7b1, 0x3ce2, 0x9df0, 0x83f2, 0x4b5b, 0x4b63, 0x1, 0x0);
        gbc.writeMem(0xa7b1, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3ce2, gbc.sp());
        EXPECT(0xa7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa7b1));
        // 8A 01B8
        gbc.setState(0xdd9c, 0x9ce6, 0x2690, 0x5f78, 0xcc3, 0x5656, 0x0, 0x0);
        gbc.writeMem(0xdd9c, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdd9c));
        // 8A 01B9
        gbc.setState(0xc48a, 0x5fe7, 0x2ab0, 0x20d5, 0x2bc4, 0xf296, 0x1, 0x0);
        gbc.writeMem(0xc48a, { 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5fe7, gbc.sp());
        EXPECT(0xc48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc48a));
        // 8A 01BA
        gbc.setState(0xc6d6, 0x534e, 0xbb70, 0x90aa, 0xc04e, 0x6d02, 0x0, 0x1);
        gbc.writeMem(0xc6d6, { 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x534e, gbc.sp());
        EXPECT(0xc6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc6d6));
        // 8A 01BB
        gbc.setState(0x28b9, 0xa1a3, 0xc780, 0x5825, 0x3e63, 0xee06, 0x1, 0x1);
        gbc.writeMem(0x28b9, { 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01BC
        gbc.setState(0xc5eb, 0xe4f8, 0x64a0, 0xe05a, 0xf73b, 0x5f04, 0x0, 0x0);
        gbc.writeMem(0xc5eb, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe4f8, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc5eb));
        // 8A 01BD
        gbc.setState(0xb55f, 0xa662, 0xf900, 0x51ef, 0x359a, 0x6f8f, 0x0, 0x1);
        gbc.writeMem(0xb55f, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa662, gbc.sp());
        EXPECT(0xb560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb55f));
        // 8A 01BE
        gbc.setState(0x1887, 0x9374, 0x1d10, 0x8d3f, 0xe4, 0x5c1c, 0x1, 0x1);
        gbc.writeMem(0x1887, { 0x8a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9374, gbc.sp());
        EXPECT(0x1888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01BF
        gbc.setState(0x2718, 0xb831, 0x3fd0, 0x6863, 0x90d1, 0xb5b9, 0x1, 0x0);
        gbc.writeMem(0x2718, { 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0x2719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01C0
        gbc.setState(0x5d8d, 0x3aa6, 0x1f70, 0x419b, 0x5337, 0xdcb7, 0x0, 0x1);
        gbc.writeMem(0x5d8d, { 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3aa6, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01C1
        gbc.setState(0x1cca, 0xfdee, 0xf960, 0x22cd, 0xdeaf, 0x3974, 0x1, 0x0);
        gbc.writeMem(0x1cca, { 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01C2
        gbc.setState(0xe4e1, 0x69be, 0x2b20, 0x6373, 0xdd08, 0x1e0f, 0x1, 0x1);
        gbc.writeMem(0xe4e1, { 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x69be, gbc.sp());
        EXPECT(0xe4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe4e1));
        // 8A 01C3
        gbc.setState(0xda06, 0x793d, 0x2b40, 0x2def, 0xa0f4, 0xb3ff, 0x1, 0x1);
        gbc.writeMem(0xda06, { 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0xda07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xda06));
        // 8A 01C4
        gbc.setState(0xc441, 0x8eec, 0xbbc0, 0xa9eb, 0x909c, 0x49ef, 0x0, 0x1);
        gbc.writeMem(0xc441, { 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0xc442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc441));
        // 8A 01C5
        gbc.setState(0x4efa, 0xb228, 0xd550, 0xcc04, 0xf6a7, 0x2f5c, 0x1, 0x1);
        gbc.writeMem(0x4efa, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb228, gbc.sp());
        EXPECT(0x4efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01C7
        gbc.setState(0x3c7a, 0x590e, 0x8e80, 0xe3ae, 0x29c3, 0xc7e0, 0x1, 0x1);
        gbc.writeMem(0x3c7a, { 0x8a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01C8
        gbc.setState(0xcdf4, 0xceb0, 0xc720, 0xf880, 0x39db, 0x9ed6, 0x0, 0x0);
        gbc.writeMem(0xcdf4, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcdf4));
        // 8A 01C9
        gbc.setState(0x5d7e, 0xa17a, 0xd3f0, 0x5722, 0x4c49, 0x9f76, 0x0, 0x0);
        gbc.writeMem(0x5d7e, { 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0x5d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01CA
        gbc.setState(0x26f2, 0xfeea, 0xf650, 0x1e35, 0xe724, 0xebd, 0x0, 0x1);
        gbc.writeMem(0x26f2, { 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0x26f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01CB
        gbc.setState(0x7aab, 0xc122, 0xe620, 0x5623, 0xd947, 0x7626, 0x1, 0x0);
        gbc.writeMem(0x7aab, { 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc122, gbc.sp());
        EXPECT(0x7aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01CC
        gbc.setState(0xb6a2, 0x5101, 0x86a0, 0xe3e0, 0x5978, 0x952d, 0x0, 0x0);
        gbc.writeMem(0xb6a2, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5101, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb6a2));
        // 8A 01CD
        gbc.setState(0x545c, 0xe8dd, 0xa280, 0x2dc6, 0x1754, 0x336c, 0x0, 0x0);
        gbc.writeMem(0x545c, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe8dd, gbc.sp());
        EXPECT(0x545d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01CE
        gbc.setState(0x5de, 0x3d30, 0x4870, 0x8fd6, 0xb173, 0xb424, 0x0, 0x1);
        gbc.writeMem(0x5de, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3d30, gbc.sp());
        EXPECT(0x5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01CF
        gbc.setState(0xeba8, 0xe301, 0xffd0, 0xf1ca, 0xd5ed, 0x4f49, 0x1, 0x1);
        gbc.writeMem(0xeba8, { 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe301, gbc.sp());
        EXPECT(0xeba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xeba8));
        // 8A 01D0
        gbc.setState(0x33e6, 0x94be, 0x6bd0, 0xca25, 0x565b, 0x45cd, 0x1, 0x1);
        gbc.writeMem(0x33e6, { 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x94be, gbc.sp());
        EXPECT(0x33e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01D1
        gbc.setState(0x454a, 0x38b8, 0x2490, 0x57e2, 0x6750, 0xf011, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x38b8, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01D2
        gbc.setState(0xd688, 0x8e15, 0x8c10, 0xa762, 0x27d4, 0x4157, 0x1, 0x1);
        gbc.writeMem(0xd688, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0xd689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd688));
        // 8A 01D3
        gbc.setState(0x825f, 0x6aba, 0x4160, 0x97b5, 0x415c, 0xffcb, 0x0, 0x1);
        gbc.writeMem(0x825f, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x825f));
        // 8A 01D4
        gbc.setState(0x928a, 0x378b, 0xec0, 0x88e9, 0x59b8, 0x35a3, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x378b, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x928a));
        // 8A 01D5
        gbc.setState(0x73a6, 0x84ae, 0x7640, 0xb807, 0x8f0c, 0xca96, 0x1, 0x0);
        gbc.writeMem(0x73a6, { 0x8a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x84ae, gbc.sp());
        EXPECT(0x73a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01D6
        gbc.setState(0x7a29, 0xaf43, 0x1610, 0xf465, 0x5d13, 0x9cf7, 0x1, 0x0);
        gbc.writeMem(0x7a29, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01D7
        gbc.setState(0xd8c7, 0xa4f9, 0xcd10, 0x7d8c, 0x14e1, 0x389d, 0x0, 0x1);
        gbc.writeMem(0xd8c7, { 0x8a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0xd8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd8c7));
        // 8A 01D8
        gbc.setState(0x7747, 0x569f, 0x5c10, 0xdfa0, 0x36, 0x58aa, 0x1, 0x0);
        gbc.writeMem(0x7747, { 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x569f, gbc.sp());
        EXPECT(0x7748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01D9
        gbc.setState(0xabff, 0x2e21, 0x2220, 0x1359, 0x44df, 0xc666, 0x1, 0x1);
        gbc.writeMem(0xabff, { 0x8a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2e21, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xabff));
        // 8A 01DA
        gbc.setState(0x9aa1, 0x2454, 0xa300, 0x6292, 0x2f87, 0x1e09, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0x8a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2454, gbc.sp());
        EXPECT(0x9aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9aa1));
        // 8A 01DB
        gbc.setState(0xd3d5, 0xa9d, 0xa8f0, 0x88d4, 0xad9c, 0x9be3, 0x1, 0x1);
        gbc.writeMem(0xd3d5, { 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa9d, gbc.sp());
        EXPECT(0xd3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd3d5));
        // 8A 01DC
        gbc.setState(0xa9c4, 0x473b, 0x2840, 0x7cee, 0x8504, 0x3535, 0x0, 0x0);
        gbc.writeMem(0xa9c4, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0xa9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa9c4));
        // 8A 01DE
        gbc.setState(0x2bb7, 0x9319, 0x5d60, 0x621c, 0x494c, 0xff03, 0x1, 0x1);
        gbc.writeMem(0x2bb7, { 0x8a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9319, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01DF
        gbc.setState(0xacc1, 0x92a1, 0xe730, 0x400, 0x4710, 0x7601, 0x1, 0x1);
        gbc.writeMem(0xacc1, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x92a1, gbc.sp());
        EXPECT(0xacc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xacc1));
        // 8A 01E1
        gbc.setState(0x153e, 0xa3cc, 0x5bc0, 0x48be, 0x6dc3, 0xd57d, 0x0, 0x0);
        gbc.writeMem(0x153e, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa3cc, gbc.sp());
        EXPECT(0x153f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01E2
        gbc.setState(0xe8c5, 0xb84, 0xf1e0, 0x22f, 0x55c9, 0x6533, 0x0, 0x0);
        gbc.writeMem(0xe8c5, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb84, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe8c5));
        // 8A 01E3
        gbc.setState(0x5efc, 0x5fb, 0x1290, 0x8bdd, 0xcb50, 0x40d4, 0x0, 0x1);
        gbc.writeMem(0x5efc, { 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5fb, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01E4
        gbc.setState(0x5ae, 0xd46f, 0x2e40, 0x3566, 0x7e1c, 0x1848, 0x1, 0x1);
        gbc.writeMem(0x5ae, { 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01E5
        gbc.setState(0x28da, 0x9ef0, 0x2390, 0xeace, 0xefaf, 0x1d9d, 0x1, 0x1);
        gbc.writeMem(0x28da, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01E6
        gbc.setState(0x6716, 0xed3c, 0x2540, 0x68e1, 0x38aa, 0x223, 0x1, 0x1);
        gbc.writeMem(0x6716, { 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0x6717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01E7
        gbc.setState(0xc577, 0xac9d, 0x6700, 0x6b21, 0x172e, 0xc1a2, 0x0, 0x0);
        gbc.writeMem(0xc577, { 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xac9d, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc577));
        // 8A 01E8
        gbc.setState(0xdc0e, 0xe1bb, 0xdab0, 0x32bc, 0x850c, 0x1384, 0x0, 0x1);
        gbc.writeMem(0xdc0e, { 0x8a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0xdc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdc0e));
        // 8A 01E9
        gbc.setState(0xda15, 0x8d1c, 0xd500, 0x681c, 0xbd, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0xda15, { 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0xda16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xda15));
        // 8A 01EA
        gbc.setState(0x43ff, 0xd929, 0x12a0, 0x78e6, 0xc054, 0x1b1f, 0x0, 0x0);
        gbc.writeMem(0x43ff, { 0x8a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd929, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01EB
        gbc.setState(0xbabf, 0xaf8b, 0x2720, 0x2993, 0x47d9, 0xb414, 0x0, 0x0);
        gbc.writeMem(0xbabf, { 0x8a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbabf));
        // 8A 01EC
        gbc.setState(0x4109, 0xe5af, 0xefe0, 0xab28, 0xe69d, 0x6c58, 0x1, 0x1);
        gbc.writeMem(0x4109, { 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe5af, gbc.sp());
        EXPECT(0x410a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 01ED
        gbc.setState(0x8623, 0xe9d, 0x1810, 0x19ab, 0xf1ed, 0xc9dc, 0x0, 0x1);
        gbc.writeMem(0x8623, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe9d, gbc.sp());
        EXPECT(0x8624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8623));
        // 8A 01EF
        gbc.setState(0xb157, 0x70cc, 0xbd80, 0x8e44, 0xf0dd, 0x265c, 0x1, 0x0);
        gbc.writeMem(0xb157, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x70cc, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb157));
        // 8A 01F1
        gbc.setState(0xa449, 0xff8e, 0x39f0, 0x2d59, 0xe6b8, 0x815, 0x0, 0x1);
        gbc.writeMem(0xa449, { 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xff8e, gbc.sp());
        EXPECT(0xa44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa449));
        // 8A 01F2
        gbc.setState(0xa304, 0x3cbd, 0x92a0, 0x191, 0x3baa, 0x677a, 0x1, 0x0);
        gbc.writeMem(0xa304, { 0x8a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa304));
        // 8A 01F4
        gbc.setState(0xe600, 0x296d, 0x9da0, 0x89a7, 0x620e, 0x39cb, 0x0, 0x0);
        gbc.writeMem(0xe600, { 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0xe601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe600));
        // 8A 01F5
        gbc.setState(0x1e1d, 0xe20b, 0x1a50, 0x5781, 0xc264, 0xb7cc, 0x0, 0x0);
        gbc.writeMem(0x1e1d, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0x1e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01F6
        gbc.setState(0xa4b7, 0x576d, 0x3c00, 0xe1ec, 0x421, 0x3012, 0x1, 0x0);
        gbc.writeMem(0xa4b7, { 0x8a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x576d, gbc.sp());
        EXPECT(0xa4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa4b7));
        // 8A 01F7
        gbc.setState(0xc083, 0x1710, 0xdf30, 0xc7f4, 0x111c, 0xec09, 0x0, 0x0);
        gbc.writeMem(0xc083, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0xc084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc083));
        // 8A 01F8
        gbc.setState(0x3d, 0x633e, 0xc3d0, 0xdc92, 0x19c, 0xe280, 0x0, 0x1);
        gbc.writeMem(0x3d, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01F9
        gbc.setState(0x8d33, 0xe50, 0x830, 0x7062, 0xbffe, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0x8d33, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0x8d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8d33));
        // 8A 01FA
        gbc.setState(0x5ae6, 0x34ed, 0x1c0, 0x9cd4, 0xe6c5, 0xd18c, 0x1, 0x0);
        gbc.writeMem(0x5ae6, { 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x34ed, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 01FB
        gbc.setState(0xcb65, 0xca30, 0xa760, 0xdb81, 0x413a, 0x6538, 0x0, 0x0);
        gbc.writeMem(0xcb65, { 0x8a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0xcb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcb65));
        // 8A 01FC
        gbc.setState(0xb75a, 0x9bd2, 0x5d10, 0x4c48, 0x8f99, 0xd357, 0x1, 0x0);
        gbc.writeMem(0xb75a, { 0x8a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9bd2, gbc.sp());
        EXPECT(0xb75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb75a));
        // 8A 01FE
        gbc.setState(0xb85c, 0x2656, 0x63a0, 0xdfe9, 0x6f26, 0x6e2a, 0x1, 0x1);
        gbc.writeMem(0xb85c, { 0x8a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2656, gbc.sp());
        EXPECT(0xb85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb85c));
        // 8A 01FF
        gbc.setState(0x63ab, 0x5a69, 0xdf00, 0xf3d8, 0xe4e7, 0x58bc, 0x1, 0x0);
        gbc.writeMem(0x63ab, { 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5a69, gbc.sp());
        EXPECT(0x63ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0200
        gbc.setState(0xade0, 0x13fa, 0xab10, 0xfdbb, 0x6ed1, 0x8a33, 0x0, 0x0);
        gbc.writeMem(0xade0, { 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x13fa, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xade0));
        // 8A 0201
        gbc.setState(0x527b, 0x7208, 0x40f0, 0xf5ce, 0xa238, 0xf388, 0x0, 0x0);
        gbc.writeMem(0x527b, { 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0202
        gbc.setState(0xc83b, 0xc026, 0x5d0, 0xd52, 0x57aa, 0xaf41, 0x0, 0x1);
        gbc.writeMem(0xc83b, { 0x8a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0xc83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc83b));
        // 8A 0203
        gbc.setState(0x872c, 0xa682, 0xeea0, 0x42a1, 0x7b5, 0xc9cc, 0x1, 0x0);
        gbc.writeMem(0x872c, { 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa682, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x872c));
        // 8A 0204
        gbc.setState(0xa71a, 0x93c3, 0x97e0, 0x2a3c, 0x979b, 0xff13, 0x0, 0x1);
        gbc.writeMem(0xa71a, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x93c3, gbc.sp());
        EXPECT(0xa71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa71a));
        // 8A 0205
        gbc.setState(0xecff, 0xc8df, 0x3760, 0xb660, 0x5672, 0x9c68, 0x0, 0x0);
        gbc.writeMem(0xecff, { 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc8df, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xecff));
        // 8A 0206
        gbc.setState(0x7e91, 0xd087, 0xa620, 0x9193, 0x9d39, 0xc36c, 0x0, 0x0);
        gbc.writeMem(0x7e91, { 0x8a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd087, gbc.sp());
        EXPECT(0x7e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0207
        gbc.setState(0x3659, 0xb5ec, 0x30, 0xeba0, 0x3d49, 0x4dc5, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb5ec, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0208
        gbc.setState(0x7ee5, 0x9468, 0x0, 0x8599, 0x2379, 0xdba2, 0x0, 0x0);
        gbc.writeMem(0x7ee5, { 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9468, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0209
        gbc.setState(0x698e, 0x23d7, 0x9500, 0x5685, 0x7d04, 0x490b, 0x0, 0x0);
        gbc.writeMem(0x698e, { 0x8a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0x698f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 020A
        gbc.setState(0x2d14, 0xab0e, 0x3b0, 0x3b2c, 0xd09f, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0x2d14, { 0x8a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0x2d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 020B
        gbc.setState(0x62a8, 0xc303, 0x5a90, 0x82e3, 0x28ee, 0x64af, 0x1, 0x0);
        gbc.writeMem(0x62a8, { 0x8a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc303, gbc.sp());
        EXPECT(0x62a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 020C
        gbc.setState(0x6eee, 0x386b, 0x5990, 0x6476, 0x3a3f, 0x81d6, 0x0, 0x0);
        gbc.writeMem(0x6eee, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x386b, gbc.sp());
        EXPECT(0x6eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 020E
        gbc.setState(0xc8d7, 0x457, 0xc8d0, 0xf6e5, 0x6856, 0xe48f, 0x0, 0x1);
        gbc.writeMem(0xc8d7, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x457, gbc.sp());
        EXPECT(0xc8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc8d7));
        // 8A 020F
        gbc.setState(0x7f47, 0xd23d, 0x3c20, 0x2d86, 0x8936, 0x92db, 0x1, 0x0);
        gbc.writeMem(0x7f47, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd23d, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0210
        gbc.setState(0x9111, 0x4b05, 0xc640, 0x4955, 0xcd92, 0x8295, 0x0, 0x0);
        gbc.writeMem(0x9111, { 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b05, gbc.sp());
        EXPECT(0x9112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9111));
        // 8A 0211
        gbc.setState(0xc7f6, 0xbaf4, 0x3bf0, 0xd77b, 0xbbb1, 0xb369, 0x0, 0x0);
        gbc.writeMem(0xc7f6, { 0x8a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbaf4, gbc.sp());
        EXPECT(0xc7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc7f6));
        // 8A 0212
        gbc.setState(0x6f14, 0x1e5e, 0x35d0, 0x753a, 0xf1f1, 0xa318, 0x0, 0x1);
        gbc.writeMem(0x6f14, { 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0213
        gbc.setState(0x469b, 0xfbd9, 0x7650, 0x1cf1, 0x7e04, 0xefd9, 0x0, 0x0);
        gbc.writeMem(0x469b, { 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfbd9, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0214
        gbc.setState(0x4192, 0xead9, 0x88e0, 0x7987, 0xfe61, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0x4192, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x4193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0215
        gbc.setState(0xda68, 0x338c, 0x7250, 0xdd3a, 0xd44f, 0xc1dd, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0x8a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xda68));
        // 8A 0216
        gbc.setState(0x2a9f, 0xb052, 0xdf20, 0xfabb, 0x7244, 0x5d15, 0x1, 0x1);
        gbc.writeMem(0x2a9f, { 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb052, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0218
        gbc.setState(0x8347, 0xf2b6, 0x20a0, 0x4cf7, 0xd6c9, 0x7bd3, 0x1, 0x0);
        gbc.writeMem(0x8347, { 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf2b6, gbc.sp());
        EXPECT(0x8348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8347));
        // 8A 0219
        gbc.setState(0x228b, 0x7e65, 0x5720, 0x7623, 0x970a, 0x2f78, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0x8a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 021A
        gbc.setState(0x1cc5, 0xe974, 0xd380, 0x58d4, 0x973, 0x98b6, 0x0, 0x1);
        gbc.writeMem(0x1cc5, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe974, gbc.sp());
        EXPECT(0x1cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 021B
        gbc.setState(0xa3ef, 0x4e28, 0x4a60, 0x5cfc, 0x2860, 0xf4e1, 0x0, 0x0);
        gbc.writeMem(0xa3ef, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4e28, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa3ef));
        // 8A 021D
        gbc.setState(0x68ab, 0xd4e0, 0x77f0, 0x789c, 0x3cfd, 0x3f2c, 0x1, 0x1);
        gbc.writeMem(0x68ab, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd4e0, gbc.sp());
        EXPECT(0x68ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 021F
        gbc.setState(0xe4a8, 0xde88, 0x7b90, 0xd5cf, 0x32bf, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0xe4a8, { 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0xe4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe4a8));
        // 8A 0220
        gbc.setState(0xe5e5, 0x6bb9, 0x4030, 0xc06b, 0x3a4c, 0xa1f4, 0x1, 0x1);
        gbc.writeMem(0xe5e5, { 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0xe5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe5e5));
        // 8A 0221
        gbc.setState(0x8ba3, 0x4155, 0x9000, 0xbca0, 0x4ba5, 0xa3a2, 0x1, 0x0);
        gbc.writeMem(0x8ba3, { 0x8a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4155, gbc.sp());
        EXPECT(0x8ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8ba3));
        // 8A 0222
        gbc.setState(0x8b68, 0x7e84, 0xa720, 0xe52, 0x7278, 0xe9cb, 0x1, 0x1);
        gbc.writeMem(0x8b68, { 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7e84, gbc.sp());
        EXPECT(0x8b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8b68));
        // 8A 0224
        gbc.setState(0x7e0f, 0xcbf1, 0xf1b0, 0x86b, 0x7d9b, 0xf3f9, 0x0, 0x0);
        gbc.writeMem(0x7e0f, { 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0x7e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0225
        gbc.setState(0x36dc, 0xfc45, 0xf4a0, 0x10eb, 0x99b1, 0x2494, 0x0, 0x0);
        gbc.writeMem(0x36dc, { 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0226
        gbc.setState(0x9e0e, 0xa45, 0xa090, 0x4838, 0x9a97, 0x802d, 0x0, 0x0);
        gbc.writeMem(0x9e0e, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9e0e));
        // 8A 0227
        gbc.setState(0x5875, 0x5148, 0xed70, 0x79e8, 0x4d7a, 0x84df, 0x1, 0x0);
        gbc.writeMem(0x5875, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5148, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0228
        gbc.setState(0xd685, 0x6b, 0x6ef0, 0x5bf7, 0x590b, 0xe046, 0x1, 0x1);
        gbc.writeMem(0xd685, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0xd686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd685));
        // 8A 0229
        gbc.setState(0x7e60, 0xe94a, 0x7b0, 0xbd7d, 0xf2b1, 0x68dd, 0x0, 0x1);
        gbc.writeMem(0x7e60, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe94a, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 022A
        gbc.setState(0x6a5d, 0xf984, 0x210, 0x9cc2, 0xcdba, 0x81b6, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf984, gbc.sp());
        EXPECT(0x6a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 022B
        gbc.setState(0x476e, 0x365a, 0xa8a0, 0x7e87, 0xda47, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0x476e, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x365a, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 022C
        gbc.setState(0x79f6, 0x2341, 0xaa10, 0x922e, 0xe6dd, 0x16, 0x0, 0x1);
        gbc.writeMem(0x79f6, { 0x8a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2341, gbc.sp());
        EXPECT(0x79f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 022D
        gbc.setState(0x531, 0xff0d, 0xb460, 0x420f, 0xf79a, 0xf0a1, 0x0, 0x1);
        gbc.writeMem(0x531, { 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0x532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 022E
        gbc.setState(0xb361, 0x3b5f, 0x4a80, 0x1ed4, 0x9370, 0x3dc, 0x1, 0x1);
        gbc.writeMem(0xb361, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3b5f, gbc.sp());
        EXPECT(0xb362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb361));
        // 8A 022F
        gbc.setState(0x37ab, 0xf8de, 0x9d00, 0xc1b9, 0xb302, 0x79ef, 0x1, 0x0);
        gbc.writeMem(0x37ab, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf8de, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0230
        gbc.setState(0xae04, 0x4a11, 0xa700, 0xdc09, 0x860f, 0x867b, 0x1, 0x1);
        gbc.writeMem(0xae04, { 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xae04));
        // 8A 0231
        gbc.setState(0x1fd8, 0x1c24, 0xf10, 0x76ec, 0xafbf, 0xfd0d, 0x0, 0x0);
        gbc.writeMem(0x1fd8, { 0x8a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1c24, gbc.sp());
        EXPECT(0x1fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0232
        gbc.setState(0x62a9, 0xec69, 0xafd0, 0xcade, 0xd283, 0xbb17, 0x1, 0x0);
        gbc.writeMem(0x62a9, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xec69, gbc.sp());
        EXPECT(0x62aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0233
        gbc.setState(0xd04, 0xd82c, 0x84b0, 0xbf49, 0x851e, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0xd04, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0xd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0234
        gbc.setState(0x9494, 0x9a3b, 0xf4e0, 0x13f2, 0x3616, 0x3941, 0x1, 0x0);
        gbc.writeMem(0x9494, { 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9494));
        // 8A 0235
        gbc.setState(0x3e34, 0xea8f, 0x4b00, 0x14ce, 0xc4f6, 0x4b4f, 0x0, 0x1);
        gbc.writeMem(0x3e34, { 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xea8f, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0236
        gbc.setState(0x271a, 0x5c92, 0xf100, 0xea25, 0xcc68, 0x9ab5, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5c92, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0237
        gbc.setState(0xec2d, 0x2921, 0x5c00, 0xaf59, 0xd362, 0x6ba8, 0x1, 0x0);
        gbc.writeMem(0xec2d, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0xec2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xec2d));
        // 8A 0238
        gbc.setState(0x4020, 0x73b3, 0xf920, 0x4f21, 0x7a3a, 0x3fdc, 0x1, 0x0);
        gbc.writeMem(0x4020, { 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x73b3, gbc.sp());
        EXPECT(0x4021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0239
        gbc.setState(0x4445, 0xc04e, 0x7530, 0xb34c, 0xf69d, 0x4307, 0x1, 0x0);
        gbc.writeMem(0x4445, { 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 023A
        gbc.setState(0xa710, 0x5a24, 0x5fa0, 0x4c4, 0xb453, 0xa937, 0x1, 0x1);
        gbc.writeMem(0xa710, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0xa711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa710));
        // 8A 023B
        gbc.setState(0xeb4b, 0x21ba, 0x46e0, 0xb887, 0xffbb, 0xa83c, 0x1, 0x0);
        gbc.writeMem(0xeb4b, { 0x8a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0xeb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xeb4b));
        // 8A 023C
        gbc.setState(0x2231, 0xe88b, 0xf2c0, 0xb19, 0x29cf, 0x4e04, 0x1, 0x0);
        gbc.writeMem(0x2231, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 023D
        gbc.setState(0x5f5c, 0x38c5, 0x46f0, 0xf8bc, 0xf386, 0x948e, 0x0, 0x0);
        gbc.writeMem(0x5f5c, { 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x38c5, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 023E
        gbc.setState(0x3296, 0x83e1, 0x1530, 0x586e, 0x775c, 0xa423, 0x0, 0x0);
        gbc.writeMem(0x3296, { 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x83e1, gbc.sp());
        EXPECT(0x3297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 023F
        gbc.setState(0x950c, 0xef69, 0xcde0, 0xa07, 0xb4a0, 0xcc30, 0x0, 0x0);
        gbc.writeMem(0x950c, { 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xef69, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x950c));
        // 8A 0240
        gbc.setState(0xbbc9, 0x5835, 0x28d0, 0xf2c5, 0x102d, 0xccc0, 0x1, 0x1);
        gbc.writeMem(0xbbc9, { 0x8a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbbc9));
        // 8A 0241
        gbc.setState(0x2155, 0x24e2, 0x6d30, 0x96c0, 0x614f, 0x13a1, 0x0, 0x0);
        gbc.writeMem(0x2155, { 0x8a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x24e2, gbc.sp());
        EXPECT(0x2156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0242
        gbc.setState(0x7771, 0x4760, 0xef50, 0x896e, 0xd0dd, 0xc724, 0x0, 0x0);
        gbc.writeMem(0x7771, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4760, gbc.sp());
        EXPECT(0x7772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0243
        gbc.setState(0x4579, 0x9e0f, 0x7c80, 0x1231, 0xd54d, 0xee7a, 0x0, 0x0);
        gbc.writeMem(0x4579, { 0x8a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9e0f, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0244
        gbc.setState(0xa1c5, 0xcdf7, 0x4250, 0xac64, 0x7ed1, 0x3a84, 0x1, 0x1);
        gbc.writeMem(0xa1c5, { 0x8a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcdf7, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa1c5));
        // 8A 0246
        gbc.setState(0x2e22, 0x24ad, 0xa090, 0xd86, 0x1101, 0xc394, 0x0, 0x0);
        gbc.writeMem(0x2e22, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0x2e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0247
        gbc.setState(0xec48, 0x6d7, 0x54f0, 0x76b, 0x8745, 0x87d3, 0x1, 0x0);
        gbc.writeMem(0xec48, { 0x8a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6d7, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xec48));
        // 8A 0248
        gbc.setState(0x22ca, 0x87a8, 0x62f0, 0x6417, 0x31c7, 0x924e, 0x0, 0x1);
        gbc.writeMem(0x22ca, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x87a8, gbc.sp());
        EXPECT(0x22cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0249
        gbc.setState(0x4be, 0x1b93, 0x7600, 0xb34e, 0x1553, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0x4be, { 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1b93, gbc.sp());
        EXPECT(0x4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024A
        gbc.setState(0x234c, 0xab5a, 0x2a00, 0x9d1b, 0xc2ce, 0x981a, 0x0, 0x1);
        gbc.writeMem(0x234c, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xab5a, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024B
        gbc.setState(0x1d70, 0x761d, 0x1980, 0x4333, 0xb310, 0xde81, 0x0, 0x0);
        gbc.writeMem(0x1d70, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x761d, gbc.sp());
        EXPECT(0x1d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024C
        gbc.setState(0x279f, 0xb860, 0x1ed0, 0x42d8, 0xa14, 0x3900, 0x0, 0x0);
        gbc.writeMem(0x279f, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb860, gbc.sp());
        EXPECT(0x27a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024D
        gbc.setState(0x29dd, 0x87ff, 0x7430, 0xbaf6, 0x1691, 0xcf92, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x87ff, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024E
        gbc.setState(0x5cfd, 0xa107, 0x36d0, 0xa6ff, 0xb4c, 0xb789, 0x0, 0x1);
        gbc.writeMem(0x5cfd, { 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0x5cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 024F
        gbc.setState(0x453b, 0xa63b, 0x5420, 0xa67b, 0xdd2d, 0x33f, 0x1, 0x0);
        gbc.writeMem(0x453b, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0250
        gbc.setState(0xd3ed, 0xdbf6, 0xf750, 0xf229, 0x3438, 0x60f, 0x0, 0x1);
        gbc.writeMem(0xd3ed, { 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdbf6, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd3ed));
        // 8A 0251
        gbc.setState(0x2603, 0x537d, 0xe1b0, 0xb9f4, 0x2931, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x2603, { 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x537d, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0252
        gbc.setState(0x8030, 0xc73d, 0x43c0, 0x2572, 0xe8eb, 0xabea, 0x1, 0x0);
        gbc.writeMem(0x8030, { 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8030));
        // 8A 0253
        gbc.setState(0x41b3, 0x3cdf, 0x890, 0x8744, 0x4aa0, 0x1062, 0x0, 0x1);
        gbc.writeMem(0x41b3, { 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0x41b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0254
        gbc.setState(0xab36, 0xb24d, 0x1560, 0xea00, 0xe156, 0x5bf6, 0x0, 0x0);
        gbc.writeMem(0xab36, { 0x8a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb24d, gbc.sp());
        EXPECT(0xab37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xab36));
        // 8A 0255
        gbc.setState(0x6cff, 0x16b, 0x9180, 0xf6fc, 0x9052, 0xcda8, 0x1, 0x0);
        gbc.writeMem(0x6cff, { 0x8a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0x6d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0256
        gbc.setState(0x1d93, 0xd300, 0xc050, 0xec20, 0x9504, 0xd95f, 0x0, 0x1);
        gbc.writeMem(0x1d93, { 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd300, gbc.sp());
        EXPECT(0x1d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0257
        gbc.setState(0x42be, 0xa5c, 0xad70, 0xed7, 0x9544, 0xbd0f, 0x0, 0x0);
        gbc.writeMem(0x42be, { 0x8a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0258
        gbc.setState(0xe0d0, 0x2b43, 0x76f0, 0x68fc, 0x891, 0xb41a, 0x1, 0x1);
        gbc.writeMem(0xe0d0, { 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2b43, gbc.sp());
        EXPECT(0xe0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe0d0));
        // 8A 0259
        gbc.setState(0x3c59, 0x3759, 0xd570, 0x65e1, 0xea15, 0x65eb, 0x0, 0x1);
        gbc.writeMem(0x3c59, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3759, gbc.sp());
        EXPECT(0x3c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 025A
        gbc.setState(0x3f42, 0x7960, 0x3890, 0xdf3a, 0x1253, 0xf29b, 0x1, 0x0);
        gbc.writeMem(0x3f42, { 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7960, gbc.sp());
        EXPECT(0x3f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 025B
        gbc.setState(0xc398, 0xae1c, 0xe160, 0x839b, 0x6728, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0xc398, { 0x8a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xae1c, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc398));
        // 8A 025C
        gbc.setState(0x5862, 0x6b12, 0x8520, 0x9578, 0x1630, 0x28f9, 0x0, 0x1);
        gbc.writeMem(0x5862, { 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0x5863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 025D
        gbc.setState(0x4110, 0x2b77, 0xbc0, 0x8ebb, 0x9c1a, 0x96df, 0x0, 0x1);
        gbc.writeMem(0x4110, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0x4111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 025E
        gbc.setState(0x17cb, 0x2ec8, 0xc840, 0xeca0, 0x880a, 0x7bba, 0x1, 0x1);
        gbc.writeMem(0x17cb, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ec8, gbc.sp());
        EXPECT(0x17cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 025F
        gbc.setState(0xe699, 0xd7ac, 0x9060, 0xd1dd, 0xf25e, 0x20a7, 0x0, 0x1);
        gbc.writeMem(0xe699, { 0x8a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0xe69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe699));
        // 8A 0260
        gbc.setState(0xc099, 0x7fee, 0xd40, 0xe356, 0xf0df, 0xa80a, 0x1, 0x0);
        gbc.writeMem(0xc099, { 0x8a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7fee, gbc.sp());
        EXPECT(0xc09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc099));
        // 8A 0261
        gbc.setState(0x194, 0xb2e4, 0x5ac0, 0x2e65, 0x2f60, 0x5df9, 0x0, 0x0);
        gbc.writeMem(0x194, { 0x8a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb2e4, gbc.sp());
        EXPECT(0x195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0262
        gbc.setState(0x289e, 0x9e05, 0xb560, 0x3035, 0x5e0b, 0xdb62, 0x0, 0x1);
        gbc.writeMem(0x289e, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0263
        gbc.setState(0x8d84, 0x3258, 0xb090, 0x7de5, 0xb69a, 0xc653, 0x0, 0x0);
        gbc.writeMem(0x8d84, { 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3258, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8d84));
        // 8A 0264
        gbc.setState(0x6531, 0xa2ed, 0x1cd0, 0x7b33, 0x57e4, 0x7763, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0265
        gbc.setState(0xd8c8, 0x9a7b, 0xece0, 0xc205, 0xa16c, 0x7ea2, 0x1, 0x0);
        gbc.writeMem(0xd8c8, { 0x8a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd8c8));
        // 8A 0268
        gbc.setState(0x7bb8, 0x1199, 0xd290, 0x5be, 0x6119, 0xa0f8, 0x0, 0x0);
        gbc.writeMem(0x7bb8, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1199, gbc.sp());
        EXPECT(0x7bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0269
        gbc.setState(0x6ba1, 0x9d8c, 0x2ac0, 0xbc29, 0x72f7, 0xfab7, 0x1, 0x0);
        gbc.writeMem(0x6ba1, { 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9d8c, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 026A
        gbc.setState(0x40c3, 0x5c9e, 0x6250, 0xba40, 0x306d, 0x2518, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0x8a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c9e, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 026B
        gbc.setState(0x9f18, 0xb770, 0x460, 0x3309, 0x2c6c, 0x3615, 0x1, 0x0);
        gbc.writeMem(0x9f18, { 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb770, gbc.sp());
        EXPECT(0x9f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9f18));
        // 8A 026C
        gbc.setState(0x62c, 0x5a03, 0x20f0, 0xee67, 0x3ace, 0x53cd, 0x1, 0x0);
        gbc.writeMem(0x62c, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0x62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 026D
        gbc.setState(0xcac8, 0xa9f1, 0xd110, 0xc73b, 0xb492, 0x5a60, 0x1, 0x1);
        gbc.writeMem(0xcac8, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa9f1, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcac8));
        // 8A 026E
        gbc.setState(0xb2f, 0x23c4, 0x4050, 0x636e, 0xc81e, 0xf854, 0x0, 0x1);
        gbc.writeMem(0xb2f, { 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0xb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 026F
        gbc.setState(0x6985, 0x7f62, 0xa030, 0x16cf, 0x7ce0, 0xc2c1, 0x0, 0x0);
        gbc.writeMem(0x6985, { 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0270
        gbc.setState(0x3085, 0xb4be, 0x3420, 0xad0, 0xaa0a, 0xd79d, 0x0, 0x1);
        gbc.writeMem(0x3085, { 0x8a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb4be, gbc.sp());
        EXPECT(0x3086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0271
        gbc.setState(0x53d7, 0x422b, 0xf620, 0x6b03, 0x5e68, 0x7809, 0x1, 0x0);
        gbc.writeMem(0x53d7, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x53d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0272
        gbc.setState(0x2c7e, 0xde2a, 0x6380, 0x3c72, 0xbb4, 0xff43, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0x8a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xde2a, gbc.sp());
        EXPECT(0x2c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0273
        gbc.setState(0x3969, 0xffa5, 0x8b70, 0x54, 0x6b78, 0x7a9f, 0x0, 0x0);
        gbc.writeMem(0x3969, { 0x8a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xffa5, gbc.sp());
        EXPECT(0x396a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0274
        gbc.setState(0x42e7, 0x7d7b, 0xa790, 0xae12, 0x934a, 0x534a, 0x1, 0x0);
        gbc.writeMem(0x42e7, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7d7b, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0275
        gbc.setState(0xb46b, 0x424e, 0x1c60, 0x4262, 0xc48d, 0x8dbc, 0x0, 0x1);
        gbc.writeMem(0xb46b, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x424e, gbc.sp());
        EXPECT(0xb46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb46b));
        // 8A 0276
        gbc.setState(0xaf2f, 0x1c62, 0x7a80, 0x34d3, 0x6a56, 0x49aa, 0x1, 0x1);
        gbc.writeMem(0xaf2f, { 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1c62, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaf2f));
        // 8A 0277
        gbc.setState(0x92e, 0xee96, 0x3890, 0x7b3f, 0x5c67, 0x6680, 0x0, 0x1);
        gbc.writeMem(0x92e, { 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee96, gbc.sp());
        EXPECT(0x92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0278
        gbc.setState(0x814f, 0x5b64, 0xd3e0, 0xc2d0, 0xb288, 0xc8a8, 0x1, 0x0);
        gbc.writeMem(0x814f, { 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5b64, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x814f));
        // 8A 0279
        gbc.setState(0x2d29, 0xa303, 0xc2b0, 0x8dcc, 0x7c3a, 0xf6, 0x1, 0x0);
        gbc.writeMem(0x2d29, { 0x8a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa303, gbc.sp());
        EXPECT(0x2d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 027A
        gbc.setState(0xfe7, 0xe8e9, 0x2090, 0xf7b2, 0x67f8, 0xe557, 0x0, 0x1);
        gbc.writeMem(0xfe7, { 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0xfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 027C
        gbc.setState(0x2a7a, 0x4863, 0x6620, 0x92ad, 0xc2f1, 0x10a, 0x0, 0x1);
        gbc.writeMem(0x2a7a, { 0x8a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 027D
        gbc.setState(0x37ee, 0x9a0f, 0xf130, 0xf1f9, 0x54d9, 0x93ec, 0x0, 0x1);
        gbc.writeMem(0x37ee, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9a0f, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 027E
        gbc.setState(0xeaf, 0x7f26, 0x4e00, 0xabd9, 0xa57a, 0x14db, 0x1, 0x1);
        gbc.writeMem(0xeaf, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0xeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 027F
        gbc.setState(0x7f19, 0xb76a, 0x9830, 0x3a92, 0xa8af, 0x2c79, 0x0, 0x0);
        gbc.writeMem(0x7f19, { 0x8a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb76a, gbc.sp());
        EXPECT(0x7f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0280
        gbc.setState(0x7997, 0x1cdf, 0x2530, 0xa37b, 0xf5d4, 0xb8d2, 0x0, 0x1);
        gbc.writeMem(0x7997, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1cdf, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0281
        gbc.setState(0xc658, 0xa8c3, 0x67d0, 0xd12a, 0x3fa3, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0xc658, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa8c3, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc658));
        // 8A 0282
        gbc.setState(0x1101, 0x8416, 0x9ce0, 0x28a4, 0x779a, 0x57d5, 0x1, 0x1);
        gbc.writeMem(0x1101, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0283
        gbc.setState(0x9b9f, 0x99b2, 0xd620, 0x7939, 0x47d2, 0xd69f, 0x0, 0x1);
        gbc.writeMem(0x9b9f, { 0x8a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x99b2, gbc.sp());
        EXPECT(0x9ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9b9f));
        // 8A 0284
        gbc.setState(0x5ad9, 0xdbb2, 0x1a90, 0x8c91, 0xfc22, 0xd87f, 0x1, 0x1);
        gbc.writeMem(0x5ad9, { 0x8a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdbb2, gbc.sp());
        EXPECT(0x5ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0285
        gbc.setState(0xc214, 0x62d1, 0x3800, 0x2a34, 0x9d74, 0x2697, 0x0, 0x0);
        gbc.writeMem(0xc214, { 0x8a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0xc215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc214));
        // 8A 0286
        gbc.setState(0xe348, 0x234e, 0x52b0, 0xf66a, 0x4567, 0x6be8, 0x1, 0x0);
        gbc.writeMem(0xe348, { 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x234e, gbc.sp());
        EXPECT(0xe349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe348));
        // 8A 0287
        gbc.setState(0x5a54, 0x8ef5, 0x2000, 0xaff8, 0x2909, 0x264a, 0x0, 0x0);
        gbc.writeMem(0x5a54, { 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x5a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0289
        gbc.setState(0x882d, 0xe03a, 0x5b60, 0x9c37, 0x211d, 0xdc54, 0x1, 0x1);
        gbc.writeMem(0x882d, { 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe03a, gbc.sp());
        EXPECT(0x882e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x882d));
        // 8A 028A
        gbc.setState(0x55fe, 0xbb1e, 0xeb0, 0x2f5f, 0xe846, 0x1ea6, 0x0, 0x0);
        gbc.writeMem(0x55fe, { 0x8a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 028B
        gbc.setState(0x40f, 0x79fd, 0x5c00, 0x4501, 0xb96e, 0xa9b, 0x0, 0x1);
        gbc.writeMem(0x40f, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x79fd, gbc.sp());
        EXPECT(0x410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 028C
        gbc.setState(0x5b1b, 0x72fb, 0x6760, 0x202, 0xdfe7, 0x5a89, 0x0, 0x0);
        gbc.writeMem(0x5b1b, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x72fb, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 028D
        gbc.setState(0x4ec8, 0x50d4, 0x5c60, 0x98e4, 0x52dd, 0x65a4, 0x1, 0x0);
        gbc.writeMem(0x4ec8, { 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50d4, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 028E
        gbc.setState(0x21c7, 0x4da3, 0x6cc0, 0x98f3, 0x2abd, 0xaa7, 0x1, 0x1);
        gbc.writeMem(0x21c7, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 028F
        gbc.setState(0x9a0a, 0x2325, 0x70, 0xa1e9, 0x2970, 0x6f59, 0x0, 0x1);
        gbc.writeMem(0x9a0a, { 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0x9a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a0a));
        // 8A 0290
        gbc.setState(0x207a, 0xf04c, 0x8260, 0x8c9d, 0xd4c6, 0xe720, 0x0, 0x0);
        gbc.writeMem(0x207a, { 0x8a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf04c, gbc.sp());
        EXPECT(0x207b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0291
        gbc.setState(0xdbcd, 0x429e, 0x8420, 0x2a25, 0x8fe7, 0x27bc, 0x0, 0x0);
        gbc.writeMem(0xdbcd, { 0x8a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x429e, gbc.sp());
        EXPECT(0xdbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdbcd));
        // 8A 0292
        gbc.setState(0xe08d, 0xd22c, 0xc490, 0x4677, 0xe512, 0xd46, 0x0, 0x0);
        gbc.writeMem(0xe08d, { 0x8a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd22c, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe08d));
        // 8A 0293
        gbc.setState(0x8ba5, 0xf5d9, 0xa5a0, 0xb08a, 0xe510, 0xb100, 0x0, 0x0);
        gbc.writeMem(0x8ba5, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8ba5));
        // 8A 0294
        gbc.setState(0xa761, 0x52de, 0x8690, 0x3f59, 0x5e67, 0x232, 0x0, 0x0);
        gbc.writeMem(0xa761, { 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x52de, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa761));
        // 8A 0295
        gbc.setState(0xe3b3, 0xfb3b, 0xf850, 0x6f78, 0x9d02, 0xeb65, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfb3b, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe3b3));
        // 8A 0296
        gbc.setState(0x646c, 0x8fea, 0x7840, 0xad8d, 0x7496, 0xf32b, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0x646d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0298
        gbc.setState(0xc05d, 0x8748, 0xcf50, 0x878e, 0x95f, 0x2ad2, 0x1, 0x1);
        gbc.writeMem(0xc05d, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8748, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc05d));
        // 8A 0299
        gbc.setState(0xe1e5, 0xbd2f, 0xbd60, 0x8a15, 0x4992, 0xf162, 0x1, 0x1);
        gbc.writeMem(0xe1e5, { 0x8a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbd2f, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe1e5));
        // 8A 029A
        gbc.setState(0x8d60, 0xbea8, 0x5a90, 0xd6fa, 0x84ce, 0xbe14, 0x0, 0x0);
        gbc.writeMem(0x8d60, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8d60));
        // 8A 029B
        gbc.setState(0xbf57, 0xf56f, 0xb3d0, 0xc166, 0x8229, 0xe150, 0x1, 0x0);
        gbc.writeMem(0xbf57, { 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf56f, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbf57));
        // 8A 029C
        gbc.setState(0xc43a, 0xb8a4, 0xf460, 0xf935, 0x6c5, 0x5b84, 0x0, 0x0);
        gbc.writeMem(0xc43a, { 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0xc43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc43a));
        // 8A 029D
        gbc.setState(0x86bb, 0x1329, 0x1bf0, 0x1cee, 0x9ab, 0x1379, 0x1, 0x0);
        gbc.writeMem(0x86bb, { 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x86bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x86bb));
        // 8A 029E
        gbc.setState(0x8140, 0x6e1d, 0xd9f0, 0x6421, 0x958b, 0x72aa, 0x0, 0x0);
        gbc.writeMem(0x8140, { 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8140));
        // 8A 029F
        gbc.setState(0xdb21, 0x292d, 0xe6c0, 0xfe0, 0xde3e, 0xc525, 0x1, 0x1);
        gbc.writeMem(0xdb21, { 0x8a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdb21));
        // 8A 02A0
        gbc.setState(0xc380, 0x8fef, 0x7d70, 0xd2a2, 0xb932, 0x20ad, 0x0, 0x0);
        gbc.writeMem(0xc380, { 0x8a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0xc381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc380));
        // 8A 02A1
        gbc.setState(0x50f, 0xb66, 0x890, 0x5eb0, 0x4ccb, 0x7993, 0x0, 0x1);
        gbc.writeMem(0x50f, { 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02A2
        gbc.setState(0x50c, 0xcd35, 0x82e0, 0x2089, 0xebe, 0x318b, 0x1, 0x1);
        gbc.writeMem(0x50c, { 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcd35, gbc.sp());
        EXPECT(0x50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02A3
        gbc.setState(0x3125, 0xa195, 0x13b0, 0xcfe6, 0x9ef7, 0x4d27, 0x0, 0x0);
        gbc.writeMem(0x3125, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa195, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02A4
        gbc.setState(0x185e, 0x20ee, 0x2950, 0xe62, 0xec5b, 0x9c06, 0x1, 0x0);
        gbc.writeMem(0x185e, { 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x20ee, gbc.sp());
        EXPECT(0x185f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02A5
        gbc.setState(0x3918, 0x2d2f, 0x8db0, 0x1c0a, 0x4fce, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0x3918, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02A6
        gbc.setState(0x17b, 0x8f6a, 0x84e0, 0x88d7, 0xf764, 0xd671, 0x1, 0x0);
        gbc.writeMem(0x17b, { 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02A7
        gbc.setState(0xa94d, 0x7cf7, 0x720, 0x4d70, 0xac21, 0xdcf3, 0x1, 0x1);
        gbc.writeMem(0xa94d, { 0x8a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0xa94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa94d));
        // 8A 02A8
        gbc.setState(0xdfee, 0xf6e1, 0x6e10, 0x76c8, 0x7e05, 0xca6d, 0x0, 0x1);
        gbc.writeMem(0xdfee, { 0x8a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0xdfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdfee));
        // 8A 02A9
        gbc.setState(0x1099, 0x9d3b, 0x4e00, 0xd830, 0xbf30, 0x1d67, 0x0, 0x1);
        gbc.writeMem(0x1099, { 0x8a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02AA
        gbc.setState(0xc71e, 0x4f3e, 0x9380, 0xa11, 0x4755, 0x892, 0x1, 0x0);
        gbc.writeMem(0xc71e, { 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc71e));
        // 8A 02AB
        gbc.setState(0x7904, 0xb9d6, 0xe380, 0x8bb, 0xf7e6, 0xe4, 0x1, 0x1);
        gbc.writeMem(0x7904, { 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02AC
        gbc.setState(0x5348, 0xfe81, 0x3060, 0xf8ef, 0x1cd, 0x900b, 0x1, 0x0);
        gbc.writeMem(0x5348, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0x5349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02AD
        gbc.setState(0x9974, 0xc6d4, 0x5b10, 0x1e8c, 0xbe92, 0x4925, 0x0, 0x0);
        gbc.writeMem(0x9974, { 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x9975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9974));
        // 8A 02AE
        gbc.setState(0x18c0, 0xdfff, 0xbca0, 0xb407, 0x9fd4, 0x440e, 0x1, 0x1);
        gbc.writeMem(0x18c0, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdfff, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02AF
        gbc.setState(0x555e, 0xb098, 0x2f90, 0x471e, 0x1ec4, 0x83ca, 0x0, 0x0);
        gbc.writeMem(0x555e, { 0x8a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb098, gbc.sp());
        EXPECT(0x555f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02B0
        gbc.setState(0xaa6d, 0x87e2, 0x8800, 0x8eaa, 0x4a13, 0x16e9, 0x0, 0x1);
        gbc.writeMem(0xaa6d, { 0x8a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x87e2, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaa6d));
        // 8A 02B1
        gbc.setState(0x557b, 0xd264, 0xb560, 0xba75, 0xa3a8, 0x946e, 0x0, 0x1);
        gbc.writeMem(0x557b, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd264, gbc.sp());
        EXPECT(0x557c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02B2
        gbc.setState(0x2814, 0xced3, 0x4340, 0xacbd, 0x15c4, 0xdc50, 0x1, 0x1);
        gbc.writeMem(0x2814, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xced3, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02B3
        gbc.setState(0xe98d, 0xa154, 0x3410, 0xc5b1, 0x686, 0x5262, 0x1, 0x1);
        gbc.writeMem(0xe98d, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0xe98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe98d));
        // 8A 02B4
        gbc.setState(0x31a1, 0xbdf1, 0xf690, 0x2b97, 0x56b8, 0x7607, 0x1, 0x1);
        gbc.writeMem(0x31a1, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbdf1, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02B5
        gbc.setState(0xc8c5, 0xfac8, 0xf190, 0x52e, 0x4bc1, 0x5ab4, 0x0, 0x0);
        gbc.writeMem(0xc8c5, { 0x8a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc8c5));
        // 8A 02B6
        gbc.setState(0xed0a, 0x4e6, 0x8560, 0xed58, 0x2dc2, 0x490f, 0x1, 0x1);
        gbc.writeMem(0xed0a, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4e6, gbc.sp());
        EXPECT(0xed0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xed0a));
        // 8A 02B7
        gbc.setState(0x6dc2, 0xdcb9, 0x4e20, 0xe439, 0xfc58, 0x5273, 0x0, 0x0);
        gbc.writeMem(0x6dc2, { 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02B8
        gbc.setState(0xaaea, 0x2402, 0x4750, 0x3e9a, 0x5bfe, 0x1bc2, 0x0, 0x1);
        gbc.writeMem(0xaaea, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2402, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaaea));
        // 8A 02B9
        gbc.setState(0x914d, 0xee6d, 0x4d90, 0x6da0, 0xe84d, 0x24f6, 0x0, 0x1);
        gbc.writeMem(0x914d, { 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee6d, gbc.sp());
        EXPECT(0x914e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x914d));
        // 8A 02BA
        gbc.setState(0xd5b8, 0x581b, 0xf2d0, 0x5590, 0x1b78, 0x5c55, 0x1, 0x0);
        gbc.writeMem(0xd5b8, { 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x581b, gbc.sp());
        EXPECT(0xd5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd5b8));
        // 8A 02BB
        gbc.setState(0x674e, 0xf0d3, 0x4ab0, 0xa540, 0xf74b, 0x97a4, 0x1, 0x0);
        gbc.writeMem(0x674e, { 0x8a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf0d3, gbc.sp());
        EXPECT(0x674f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02BC
        gbc.setState(0xce70, 0x5e25, 0xe8d0, 0xad8, 0x52aa, 0x8f5, 0x1, 0x0);
        gbc.writeMem(0xce70, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5e25, gbc.sp());
        EXPECT(0xce71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xce70));
        // 8A 02BE
        gbc.setState(0x1892, 0x1f89, 0x3130, 0x55b0, 0x89d7, 0xe53d, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0x8a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1f89, gbc.sp());
        EXPECT(0x1893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02BF
        gbc.setState(0x518, 0x91e0, 0xc200, 0x1156, 0x4bd, 0xad3f, 0x1, 0x1);
        gbc.writeMem(0x518, { 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02C0
        gbc.setState(0x91a8, 0xa452, 0xee60, 0x1873, 0x2a16, 0xbaa5, 0x0, 0x1);
        gbc.writeMem(0x91a8, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa452, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x91a8));
        // 8A 02C1
        gbc.setState(0xe380, 0x1469, 0x2840, 0x69b7, 0xfcb7, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0xe380, { 0x8a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe380));
        // 8A 02C2
        gbc.setState(0x644f, 0xaccb, 0xfa80, 0x2dc6, 0xea80, 0xc0ae, 0x0, 0x1);
        gbc.writeMem(0x644f, { 0x8a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaccb, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02C3
        gbc.setState(0xa0b9, 0xa8ec, 0x7c10, 0x4af3, 0x5180, 0xd047, 0x1, 0x1);
        gbc.writeMem(0xa0b9, { 0x8a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa8ec, gbc.sp());
        EXPECT(0xa0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa0b9));
        // 8A 02C4
        gbc.setState(0x1516, 0xa4b5, 0xd100, 0x95d1, 0xa336, 0xe6de, 0x1, 0x0);
        gbc.writeMem(0x1516, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa4b5, gbc.sp());
        EXPECT(0x1517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02C5
        gbc.setState(0x6442, 0x81a8, 0x6520, 0xce40, 0xf65, 0xed2e, 0x1, 0x0);
        gbc.writeMem(0x6442, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0x6443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02C6
        gbc.setState(0xd172, 0xa66, 0x2770, 0x28d8, 0x4d5c, 0x6391, 0x1, 0x0);
        gbc.writeMem(0xd172, { 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd172));
        // 8A 02C7
        gbc.setState(0x3750, 0xa04a, 0x5f20, 0x3194, 0xa0de, 0x46be, 0x1, 0x0);
        gbc.writeMem(0x3750, { 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa04a, gbc.sp());
        EXPECT(0x3751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02C8
        gbc.setState(0xa437, 0x2906, 0x1a70, 0xcabe, 0xd51a, 0x670, 0x1, 0x0);
        gbc.writeMem(0xa437, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0xa438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa437));
        // 8A 02C9
        gbc.setState(0xb3d1, 0xd912, 0xcf20, 0xe6de, 0xa8ea, 0x89cb, 0x1, 0x0);
        gbc.writeMem(0xb3d1, { 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd912, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb3d1));
        // 8A 02CA
        gbc.setState(0x20bd, 0x798e, 0x32e0, 0xd872, 0xb100, 0xcbb1, 0x1, 0x0);
        gbc.writeMem(0x20bd, { 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x798e, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02CB
        gbc.setState(0xcb34, 0xd64f, 0x8d40, 0x677, 0x5f20, 0xf352, 0x1, 0x0);
        gbc.writeMem(0xcb34, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0xcb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcb34));
        // 8A 02CC
        gbc.setState(0x8364, 0xab46, 0x2d90, 0x9119, 0x298, 0x1f58, 0x0, 0x1);
        gbc.writeMem(0x8364, { 0x8a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xab46, gbc.sp());
        EXPECT(0x8365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8364));
        // 8A 02CD
        gbc.setState(0x7746, 0x97cb, 0x5700, 0x5ff1, 0xb37, 0xff73, 0x0, 0x1);
        gbc.writeMem(0x7746, { 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x97cb, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02CE
        gbc.setState(0x40a5, 0x4b2d, 0x3ce0, 0xfd2e, 0xaec0, 0x79b3, 0x1, 0x1);
        gbc.writeMem(0x40a5, { 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b2d, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02CF
        gbc.setState(0x5262, 0xe3a, 0xa280, 0x4165, 0x5cc2, 0x861f, 0x1, 0x0);
        gbc.writeMem(0x5262, { 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe3a, gbc.sp());
        EXPECT(0x5263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02D0
        gbc.setState(0x447, 0x454a, 0x8b80, 0x6b94, 0xa14f, 0xab92, 0x0, 0x0);
        gbc.writeMem(0x447, { 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02D1
        gbc.setState(0x7df5, 0x3f72, 0x8b0, 0x57d7, 0x3546, 0xf234, 0x0, 0x1);
        gbc.writeMem(0x7df5, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3f72, gbc.sp());
        EXPECT(0x7df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02D2
        gbc.setState(0xc24d, 0xa2f0, 0x4450, 0x2dbe, 0xdef0, 0xbd4b, 0x1, 0x0);
        gbc.writeMem(0xc24d, { 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa2f0, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc24d));
        // 8A 02D4
        gbc.setState(0x37ba, 0x12e8, 0xc490, 0x82d, 0xeb6f, 0x56e4, 0x1, 0x0);
        gbc.writeMem(0x37ba, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x12e8, gbc.sp());
        EXPECT(0x37bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02D5
        gbc.setState(0xde11, 0x93a6, 0xe8b0, 0xa6bc, 0x300d, 0x9965, 0x0, 0x0);
        gbc.writeMem(0xde11, { 0x8a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x93a6, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xde11));
        // 8A 02D6
        gbc.setState(0x84c4, 0x5f20, 0xc670, 0x379d, 0x6d1a, 0xeb7a, 0x1, 0x1);
        gbc.writeMem(0x84c4, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x84c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x84c4));
        // 8A 02D7
        gbc.setState(0x1007, 0xe238, 0x1640, 0x4a58, 0xf816, 0xee32, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x1008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02D8
        gbc.setState(0x3812, 0x4118, 0x5940, 0xbb3f, 0xc978, 0xa5c7, 0x1, 0x0);
        gbc.writeMem(0x3812, { 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4118, gbc.sp());
        EXPECT(0x3813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02D9
        gbc.setState(0x3e4d, 0x6eb1, 0x780, 0xe3e0, 0x42fa, 0xd385, 0x0, 0x0);
        gbc.writeMem(0x3e4d, { 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6eb1, gbc.sp());
        EXPECT(0x3e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02DA
        gbc.setState(0x420b, 0x7f1c, 0xf5a0, 0xddca, 0x7b57, 0x8f88, 0x0, 0x1);
        gbc.writeMem(0x420b, { 0x8a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7f1c, gbc.sp());
        EXPECT(0x420c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02DB
        gbc.setState(0x2257, 0xd7ba, 0xcd10, 0x5669, 0x9443, 0xae9e, 0x0, 0x0);
        gbc.writeMem(0x2257, { 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02DC
        gbc.setState(0x462b, 0x8567, 0x9880, 0xb0dc, 0xb2a9, 0xb19c, 0x1, 0x0);
        gbc.writeMem(0x462b, { 0x8a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8567, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02DD
        gbc.setState(0x7bb3, 0x5d21, 0x9ba0, 0xda01, 0x1159, 0x89e9, 0x0, 0x0);
        gbc.writeMem(0x7bb3, { 0x8a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x7bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02DE
        gbc.setState(0x84f8, 0xd571, 0x4190, 0x972b, 0x1f91, 0x1ea5, 0x0, 0x1);
        gbc.writeMem(0x84f8, { 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0x84f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x84f8));
        // 8A 02DF
        gbc.setState(0x94e6, 0x6abd, 0x550, 0x1387, 0xbf7e, 0x1b9e, 0x1, 0x1);
        gbc.writeMem(0x94e6, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6abd, gbc.sp());
        EXPECT(0x94e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x94e6));
        // 8A 02E1
        gbc.setState(0x551a, 0x8eeb, 0x81c0, 0x214, 0x78b3, 0x6f82, 0x1, 0x1);
        gbc.writeMem(0x551a, { 0x8a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8eeb, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02E2
        gbc.setState(0xc619, 0xef16, 0x9540, 0x37fe, 0xaf2a, 0x244e, 0x1, 0x1);
        gbc.writeMem(0xc619, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xef16, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc619));
        // 8A 02E3
        gbc.setState(0xe0d4, 0x3b75, 0xab0, 0xea28, 0x9e07, 0x4cb6, 0x1, 0x0);
        gbc.writeMem(0xe0d4, { 0x8a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3b75, gbc.sp());
        EXPECT(0xe0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe0d4));
        // 8A 02E4
        gbc.setState(0xab55, 0xa322, 0x1390, 0xa148, 0x72a4, 0x9288, 0x1, 0x0);
        gbc.writeMem(0xab55, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa322, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xab55));
        // 8A 02E6
        gbc.setState(0xa5a0, 0x9a5f, 0x5d40, 0x5e20, 0xc8f2, 0x8d93, 0x1, 0x0);
        gbc.writeMem(0xa5a0, { 0x8a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0xa5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa5a0));
        // 8A 02E7
        gbc.setState(0xe77a, 0xcb9b, 0x9290, 0x7d02, 0xecde, 0x8646, 0x0, 0x0);
        gbc.writeMem(0xe77a, { 0x8a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe77a));
        // 8A 02E8
        gbc.setState(0xdada, 0x8aa0, 0x470, 0x63, 0xb411, 0xef42, 0x1, 0x0);
        gbc.writeMem(0xdada, { 0x8a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0xdadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdada));
        // 8A 02E9
        gbc.setState(0x905b, 0x7a23, 0x60f0, 0x39a2, 0x4896, 0xe966, 0x1, 0x0);
        gbc.writeMem(0x905b, { 0x8a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x905b));
        // 8A 02EB
        gbc.setState(0xea54, 0x5ea3, 0xb490, 0xb560, 0xc3af, 0x82fa, 0x1, 0x1);
        gbc.writeMem(0xea54, { 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5ea3, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xea54));
        // 8A 02EC
        gbc.setState(0xe56, 0x5770, 0xd80, 0xd826, 0xe38c, 0x533f, 0x1, 0x1);
        gbc.writeMem(0xe56, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5770, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02ED
        gbc.setState(0x4c94, 0x47df, 0xaaf0, 0xb115, 0xdcb3, 0xd6a6, 0x1, 0x0);
        gbc.writeMem(0x4c94, { 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02EE
        gbc.setState(0x2aab, 0x71b7, 0x6290, 0x3b39, 0x1d72, 0x4918, 0x0, 0x0);
        gbc.writeMem(0x2aab, { 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0x2aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02EF
        gbc.setState(0x7636, 0x54c3, 0xebc0, 0xe192, 0x4bfa, 0xa1cf, 0x1, 0x1);
        gbc.writeMem(0x7636, { 0x8a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0x7637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02F0
        gbc.setState(0xea08, 0xd7b5, 0xd750, 0xd2fa, 0xc9d3, 0x84db, 0x1, 0x1);
        gbc.writeMem(0xea08, { 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0xea09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xea08));
        // 8A 02F1
        gbc.setState(0x6697, 0x8a6b, 0xe480, 0xfb68, 0x2af8, 0x30, 0x1, 0x0);
        gbc.writeMem(0x6697, { 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8a6b, gbc.sp());
        EXPECT(0x6698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02F2
        gbc.setState(0xcd91, 0x7e8f, 0x50e0, 0xb631, 0x3780, 0x7d0e, 0x0, 0x1);
        gbc.writeMem(0xcd91, { 0x8a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0xcd92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcd91));
        // 8A 02F3
        gbc.setState(0x4cbf, 0x7250, 0x5140, 0x8091, 0x9c99, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0x4cbf, { 0x8a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7250, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02F4
        gbc.setState(0x6236, 0x43f0, 0x7cb0, 0x544a, 0x3fa3, 0xda3b, 0x1, 0x0);
        gbc.writeMem(0x6236, { 0x8a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x43f0, gbc.sp());
        EXPECT(0x6237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02F5
        gbc.setState(0x309a, 0x289a, 0x58a0, 0x3fbf, 0x6e56, 0xa89c, 0x1, 0x1);
        gbc.writeMem(0x309a, { 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x289a, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02F6
        gbc.setState(0x967c, 0xbb60, 0x1530, 0x49bd, 0x76e1, 0xd4da, 0x0, 0x1);
        gbc.writeMem(0x967c, { 0x8a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x967d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x967c));
        // 8A 02F7
        gbc.setState(0xb4f2, 0x266f, 0x6bd0, 0x185e, 0xa5fd, 0x2de7, 0x1, 0x0);
        gbc.writeMem(0xb4f2, { 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x266f, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb4f2));
        // 8A 02F8
        gbc.setState(0xdd42, 0xd6c, 0x4240, 0x8cd8, 0x778, 0xb4fd, 0x0, 0x0);
        gbc.writeMem(0xdd42, { 0x8a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdd42));
        // 8A 02F9
        gbc.setState(0x8d03, 0x768f, 0xb2a0, 0x2c28, 0x636c, 0xafd1, 0x0, 0x1);
        gbc.writeMem(0x8d03, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8d03));
        // 8A 02FA
        gbc.setState(0x515, 0x8e37, 0xbf80, 0xb8b4, 0x70f9, 0x8c15, 0x0, 0x0);
        gbc.writeMem(0x515, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8e37, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 02FB
        gbc.setState(0xb45f, 0x31f1, 0x27c0, 0xf281, 0x7506, 0xf387, 0x0, 0x0);
        gbc.writeMem(0xb45f, { 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x31f1, gbc.sp());
        EXPECT(0xb460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb45f));
        // 8A 02FC
        gbc.setState(0xb697, 0x89df, 0x2f90, 0xe9d, 0x4b94, 0xd929, 0x0, 0x1);
        gbc.writeMem(0xb697, { 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x89df, gbc.sp());
        EXPECT(0xb698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb697));
        // 8A 02FD
        gbc.setState(0x5836, 0x4ca9, 0x44f0, 0xe1e7, 0x60e3, 0xccdb, 0x1, 0x1);
        gbc.writeMem(0x5836, { 0x8a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0x5837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 02FE
        gbc.setState(0xa925, 0x5139, 0xe5b0, 0xd1c, 0x8793, 0x831d, 0x0, 0x0);
        gbc.writeMem(0xa925, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa925));
        // 8A 02FF
        gbc.setState(0x42da, 0xcda0, 0x1670, 0x36d7, 0x2cea, 0x834, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0x8a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcda0, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0300
        gbc.setState(0x3e3, 0xaab8, 0x7b40, 0x57f, 0x5dcd, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x3e3, { 0x8a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0301
        gbc.setState(0x503a, 0xda6, 0x4460, 0xd44a, 0x101f, 0xf48e, 0x1, 0x1);
        gbc.writeMem(0x503a, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xda6, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0302
        gbc.setState(0x9377, 0xad64, 0xe820, 0x53e5, 0x54c6, 0xe576, 0x1, 0x0);
        gbc.writeMem(0x9377, { 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x9378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9377));
        // 8A 0303
        gbc.setState(0x22e7, 0xe55b, 0x140, 0x94c2, 0xd6b6, 0x93cf, 0x0, 0x0);
        gbc.writeMem(0x22e7, { 0x8a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0304
        gbc.setState(0xedb3, 0x15d6, 0xe780, 0x8f79, 0x4d96, 0xeeb2, 0x1, 0x1);
        gbc.writeMem(0xedb3, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x15d6, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xedb3));
        // 8A 0305
        gbc.setState(0xd4c7, 0x35fe, 0x3340, 0x991b, 0x4959, 0x5ab2, 0x1, 0x1);
        gbc.writeMem(0xd4c7, { 0x8a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x35fe, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd4c7));
        // 8A 0306
        gbc.setState(0xd4fe, 0xe357, 0x3fa0, 0x933d, 0x5165, 0x54c, 0x1, 0x1);
        gbc.writeMem(0xd4fe, { 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe357, gbc.sp());
        EXPECT(0xd4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd4fe));
        // 8A 0308
        gbc.setState(0x1b94, 0x85ae, 0x81f0, 0xfdde, 0xd793, 0x384a, 0x1, 0x1);
        gbc.writeMem(0x1b94, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x85ae, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0309
        gbc.setState(0x59ea, 0xd42b, 0xdb80, 0x460a, 0xaaf, 0x957b, 0x0, 0x1);
        gbc.writeMem(0x59ea, { 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd42b, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 030A
        gbc.setState(0x42be, 0x79c8, 0xba60, 0x3a1d, 0xf519, 0x7623, 0x0, 0x0);
        gbc.writeMem(0x42be, { 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 030B
        gbc.setState(0xa08, 0x3aa7, 0xc960, 0xbfe8, 0xefdf, 0xe7cf, 0x0, 0x1);
        gbc.writeMem(0xa08, { 0x8a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3aa7, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 030C
        gbc.setState(0x93fc, 0xcd5f, 0x78f0, 0x37c4, 0x69de, 0xea47, 0x1, 0x0);
        gbc.writeMem(0x93fc, { 0x8a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcd5f, gbc.sp());
        EXPECT(0x93fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x93fc));
        // 8A 030D
        gbc.setState(0x7d4b, 0xee0b, 0x2550, 0x23ee, 0x9497, 0x62b5, 0x1, 0x1);
        gbc.writeMem(0x7d4b, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xee0b, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 030E
        gbc.setState(0x38bd, 0x5ae2, 0x50a0, 0xfd5f, 0x8f20, 0xf46d, 0x0, 0x1);
        gbc.writeMem(0x38bd, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5ae2, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 030F
        gbc.setState(0xbf33, 0xde75, 0xecd0, 0x45b0, 0x9983, 0xcf1e, 0x0, 0x0);
        gbc.writeMem(0xbf33, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbf33));
        // 8A 0310
        gbc.setState(0xa687, 0x801f, 0xbb80, 0x18c8, 0x8983, 0xacc3, 0x0, 0x1);
        gbc.writeMem(0xa687, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa687));
        // 8A 0311
        gbc.setState(0xa9d3, 0x6c76, 0x6b00, 0x1ab, 0x652c, 0x44b9, 0x1, 0x0);
        gbc.writeMem(0xa9d3, { 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0xa9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa9d3));
        // 8A 0312
        gbc.setState(0x4f4f, 0x2715, 0x5ce0, 0x5c38, 0x6d47, 0x7fc3, 0x0, 0x1);
        gbc.writeMem(0x4f4f, { 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2715, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0314
        gbc.setState(0x37d4, 0x7c9c, 0x82d0, 0x691, 0xc86b, 0xb82c, 0x0, 0x1);
        gbc.writeMem(0x37d4, { 0x8a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7c9c, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0315
        gbc.setState(0x4526, 0xaaa8, 0x7b00, 0x6370, 0xa8f1, 0x29ae, 0x0, 0x1);
        gbc.writeMem(0x4526, { 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaaa8, gbc.sp());
        EXPECT(0x4527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0316
        gbc.setState(0x8453, 0x8680, 0x5f70, 0xcdb6, 0x828a, 0x9a8a, 0x1, 0x1);
        gbc.writeMem(0x8453, { 0x8a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8680, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8453));
        // 8A 0317
        gbc.setState(0x837, 0xf0a5, 0x5ae0, 0xa9a3, 0x2cc5, 0x7742, 0x0, 0x1);
        gbc.writeMem(0x837, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf0a5, gbc.sp());
        EXPECT(0x838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0318
        gbc.setState(0xa9d6, 0xd19, 0xa300, 0x9177, 0x8bde, 0xeb8b, 0x0, 0x0);
        gbc.writeMem(0xa9d6, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd19, gbc.sp());
        EXPECT(0xa9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa9d6));
        // 8A 0319
        gbc.setState(0x1a6a, 0x7c38, 0x4490, 0x986b, 0x91c4, 0x5e67, 0x0, 0x1);
        gbc.writeMem(0x1a6a, { 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7c38, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 031A
        gbc.setState(0x78cc, 0xac2d, 0x4fa0, 0xe79a, 0x1af0, 0xafe2, 0x1, 0x1);
        gbc.writeMem(0x78cc, { 0x8a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0x78cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 031B
        gbc.setState(0x5495, 0x638c, 0xa00, 0xc95e, 0x3267, 0xfd6c, 0x1, 0x0);
        gbc.writeMem(0x5495, { 0x8a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0x5496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 031C
        gbc.setState(0xa9ff, 0xa11, 0x6640, 0xcceb, 0x3ed7, 0x9bcf, 0x1, 0x0);
        gbc.writeMem(0xa9ff, { 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa11, gbc.sp());
        EXPECT(0xaa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa9ff));
        // 8A 031E
        gbc.setState(0xc094, 0xf93f, 0x7340, 0x523a, 0x4374, 0x26f6, 0x0, 0x0);
        gbc.writeMem(0xc094, { 0x8a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0xc095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc094));
        // 8A 031F
        gbc.setState(0xec90, 0x9759, 0x4900, 0xc00, 0x652, 0x622b, 0x0, 0x1);
        gbc.writeMem(0xec90, { 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9759, gbc.sp());
        EXPECT(0xec91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xec90));
        // 8A 0320
        gbc.setState(0x877f, 0xd446, 0x75a0, 0x9cd0, 0xa38b, 0x566d, 0x0, 0x0);
        gbc.writeMem(0x877f, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd446, gbc.sp());
        EXPECT(0x8780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x877f));
        // 8A 0321
        gbc.setState(0x53cd, 0xe064, 0x2270, 0x5144, 0x9f49, 0x78fc, 0x1, 0x0);
        gbc.writeMem(0x53cd, { 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe064, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0322
        gbc.setState(0xd483, 0xa0bb, 0x3070, 0x923, 0x7c9, 0x2068, 0x1, 0x1);
        gbc.writeMem(0xd483, { 0x8a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd483));
        // 8A 0323
        gbc.setState(0xc714, 0x7573, 0x39a0, 0xc343, 0xf187, 0xb7, 0x1, 0x0);
        gbc.writeMem(0xc714, { 0x8a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7573, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc714));
        // 8A 0324
        gbc.setState(0xad73, 0x1c70, 0xf070, 0x6a6b, 0xbee9, 0x3959, 0x0, 0x1);
        gbc.writeMem(0xad73, { 0x8a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c70, gbc.sp());
        EXPECT(0xad74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xad73));
        // 8A 0325
        gbc.setState(0x732, 0xb467, 0x2fb0, 0xdc7e, 0x902a, 0xd06d, 0x0, 0x0);
        gbc.writeMem(0x732, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0326
        gbc.setState(0x75af, 0x3d5c, 0x2440, 0x72e3, 0xf215, 0xa985, 0x0, 0x1);
        gbc.writeMem(0x75af, { 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x75b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0327
        gbc.setState(0x3822, 0xd9c0, 0xc050, 0x9dd3, 0x1f0, 0xf58a, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0x8a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0x3823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0328
        gbc.setState(0x4a83, 0xcb62, 0xd3d0, 0xd7f2, 0x1ee2, 0x9844, 0x1, 0x0);
        gbc.writeMem(0x4a83, { 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcb62, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 032B
        gbc.setState(0x3064, 0xf75d, 0xe3b0, 0x725, 0x738f, 0x4595, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0x8a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf75d, gbc.sp());
        EXPECT(0x3065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 032C
        gbc.setState(0xddd2, 0x5fc1, 0xacf0, 0x5bb, 0xed01, 0xdd09, 0x0, 0x1);
        gbc.writeMem(0xddd2, { 0x8a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5fc1, gbc.sp());
        EXPECT(0xddd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xddd2));
        // 8A 032D
        gbc.setState(0x914e, 0x1584, 0x2cb0, 0x7053, 0xbdcc, 0x4385, 0x0, 0x0);
        gbc.writeMem(0x914e, { 0x8a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x914e));
        // 8A 032E
        gbc.setState(0x1c59, 0x3d9d, 0x6500, 0x2e9e, 0xb39b, 0xc91e, 0x1, 0x1);
        gbc.writeMem(0x1c59, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0x1c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 032F
        gbc.setState(0xc724, 0x48ee, 0x11a0, 0x8e33, 0x5c90, 0xeb05, 0x0, 0x0);
        gbc.writeMem(0xc724, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc724));
        // 8A 0330
        gbc.setState(0x60d2, 0xb681, 0x8640, 0x356f, 0x1829, 0x76df, 0x1, 0x0);
        gbc.writeMem(0x60d2, { 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb681, gbc.sp());
        EXPECT(0x60d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0331
        gbc.setState(0x1ea1, 0x9cac, 0xff20, 0x6096, 0x5dae, 0x26ee, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0x8a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0333
        gbc.setState(0x5098, 0xb754, 0xe330, 0xb1fc, 0x8387, 0x679d, 0x1, 0x1);
        gbc.writeMem(0x5098, { 0x8a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb754, gbc.sp());
        EXPECT(0x5099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0334
        gbc.setState(0x7a57, 0xe587, 0xa410, 0x451f, 0xb46f, 0x7450, 0x1, 0x1);
        gbc.writeMem(0x7a57, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x7a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0335
        gbc.setState(0x46e, 0xbece, 0x4fc0, 0xd779, 0xbe4c, 0x2578, 0x1, 0x1);
        gbc.writeMem(0x46e, { 0x8a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0336
        gbc.setState(0xbfa6, 0x30f5, 0x18a0, 0x560d, 0xdb8e, 0xcfcd, 0x0, 0x1);
        gbc.writeMem(0xbfa6, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x30f5, gbc.sp());
        EXPECT(0xbfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbfa6));
        // 8A 0337
        gbc.setState(0xb4ca, 0xc4a7, 0x8430, 0x942f, 0x6fe2, 0x9080, 0x1, 0x1);
        gbc.writeMem(0xb4ca, { 0x8a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc4a7, gbc.sp());
        EXPECT(0xb4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb4ca));
        // 8A 0338
        gbc.setState(0xac78, 0x6a73, 0x50f0, 0x49d5, 0xdb03, 0x4655, 0x1, 0x0);
        gbc.writeMem(0xac78, { 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0xac79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xac78));
        // 8A 0339
        gbc.setState(0x7c26, 0x4e49, 0x13a0, 0xaf93, 0x3120, 0xc1bf, 0x0, 0x0);
        gbc.writeMem(0x7c26, { 0x8a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4e49, gbc.sp());
        EXPECT(0x7c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 033A
        gbc.setState(0xdffb, 0xebe6, 0xc720, 0xa290, 0x4a2e, 0xd24d, 0x0, 0x0);
        gbc.writeMem(0xdffb, { 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xebe6, gbc.sp());
        EXPECT(0xdffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdffb));
        // 8A 033B
        gbc.setState(0x1e44, 0x101e, 0x9340, 0x93b4, 0xf399, 0xb91d, 0x0, 0x0);
        gbc.writeMem(0x1e44, { 0x8a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 033C
        gbc.setState(0xa554, 0xaeab, 0x3910, 0x8a66, 0xd4fa, 0x762b, 0x1, 0x0);
        gbc.writeMem(0xa554, { 0x8a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaeab, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa554));
        // 8A 033D
        gbc.setState(0xc4da, 0xeffa, 0x54b0, 0x5c61, 0xda9f, 0xd03a, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0x8a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeffa, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc4da));
        // 8A 033E
        gbc.setState(0x1447, 0xf20b, 0xf670, 0x957f, 0x8143, 0x684a, 0x1, 0x1);
        gbc.writeMem(0x1447, { 0x8a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 033F
        gbc.setState(0xdcfd, 0x65f0, 0xf1e0, 0xf266, 0xbaa8, 0x5d3, 0x1, 0x0);
        gbc.writeMem(0xdcfd, { 0x8a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdcfd));
        // 8A 0340
        gbc.setState(0x82f9, 0x689b, 0x2460, 0xcfec, 0x73d3, 0xb940, 0x0, 0x0);
        gbc.writeMem(0x82f9, { 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0x82fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x82f9));
        // 8A 0341
        gbc.setState(0xdf39, 0x68fe, 0x28d0, 0xf12d, 0xb401, 0xabfb, 0x1, 0x1);
        gbc.writeMem(0xdf39, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x68fe, gbc.sp());
        EXPECT(0xdf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf39));
        // 8A 0342
        gbc.setState(0x18b9, 0x3128, 0x3170, 0x494a, 0xa780, 0x4024, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3128, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0343
        gbc.setState(0xc0f0, 0xc33b, 0x57a0, 0x19cb, 0xa9b0, 0x3257, 0x1, 0x1);
        gbc.writeMem(0xc0f0, { 0x8a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc0f0));
        // 8A 0345
        gbc.setState(0x13a8, 0x6c6c, 0x5390, 0xce23, 0x4aad, 0x1c41, 0x1, 0x0);
        gbc.writeMem(0x13a8, { 0x8a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6c6c, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0346
        gbc.setState(0x5aec, 0x70aa, 0xb450, 0xdabb, 0xffa2, 0x2dfe, 0x0, 0x0);
        gbc.writeMem(0x5aec, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x5aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0347
        gbc.setState(0x8913, 0x817a, 0x810, 0xe3e8, 0xd85a, 0x6c7e, 0x1, 0x1);
        gbc.writeMem(0x8913, { 0x8a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x817a, gbc.sp());
        EXPECT(0x8914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8913));
        // 8A 0349
        gbc.setState(0xf4f, 0xae79, 0x2310, 0xa9c0, 0xe592, 0x47e, 0x0, 0x1);
        gbc.writeMem(0xf4f, { 0x8a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xae79, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 034A
        gbc.setState(0x85d3, 0x214, 0xee30, 0xd881, 0xf124, 0x3029, 0x0, 0x0);
        gbc.writeMem(0x85d3, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x214, gbc.sp());
        EXPECT(0x85d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x85d3));
        // 8A 034B
        gbc.setState(0xb434, 0x742d, 0x6af0, 0xf30b, 0x9c0d, 0xfc8f, 0x1, 0x1);
        gbc.writeMem(0xb434, { 0x8a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x742d, gbc.sp());
        EXPECT(0xb435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb434));
        // 8A 034C
        gbc.setState(0xc894, 0x2c82, 0xaa70, 0xc961, 0xf079, 0x5e59, 0x1, 0x0);
        gbc.writeMem(0xc894, { 0x8a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc894));
        // 8A 034D
        gbc.setState(0x662a, 0x81b0, 0x3500, 0x45fa, 0x67d8, 0x9a47, 0x1, 0x1);
        gbc.writeMem(0x662a, { 0x8a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 034E
        gbc.setState(0x29d6, 0xc3e8, 0x8f30, 0xa568, 0x6144, 0x8f62, 0x1, 0x0);
        gbc.writeMem(0x29d6, { 0x8a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x29d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0350
        gbc.setState(0xdf59, 0xdae, 0x6fa0, 0xaa17, 0xfe49, 0x2d83, 0x1, 0x0);
        gbc.writeMem(0xdf59, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0xdf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf59));
        // 8A 0351
        gbc.setState(0x58b6, 0x19e0, 0xed40, 0x84d8, 0xb05d, 0xd428, 0x1, 0x0);
        gbc.writeMem(0x58b6, { 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0352
        gbc.setState(0xd89e, 0xb7a5, 0xfdb0, 0xe2d8, 0xe177, 0x83cc, 0x0, 0x1);
        gbc.writeMem(0xd89e, { 0x8a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb7a5, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd89e));
        // 8A 0353
        gbc.setState(0x8269, 0xd24d, 0x2e00, 0x32a2, 0xd3c7, 0xae6a, 0x0, 0x0);
        gbc.writeMem(0x8269, { 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8269));
        // 8A 0354
        gbc.setState(0x19fa, 0x5d07, 0x80c0, 0x13f7, 0xccb9, 0x66f3, 0x0, 0x0);
        gbc.writeMem(0x19fa, { 0x8a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5d07, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0355
        gbc.setState(0x756d, 0xa5df, 0x90d0, 0xf7e2, 0xdba7, 0xe54c, 0x0, 0x1);
        gbc.writeMem(0x756d, { 0x8a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa5df, gbc.sp());
        EXPECT(0x756e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0356
        gbc.setState(0x9f65, 0x8b9a, 0x4920, 0x3aa2, 0x68a7, 0x8a85, 0x0, 0x1);
        gbc.writeMem(0x9f65, { 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x9f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9f65));
        // 8A 0357
        gbc.setState(0xad63, 0x2a3d, 0xdd10, 0xaada, 0x3e43, 0x7e75, 0x1, 0x1);
        gbc.writeMem(0xad63, { 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2a3d, gbc.sp());
        EXPECT(0xad64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xad63));
        // 8A 0358
        gbc.setState(0x2c3c, 0x798f, 0x7170, 0x94c2, 0xdcfb, 0x4926, 0x0, 0x0);
        gbc.writeMem(0x2c3c, { 0x8a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x798f, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0359
        gbc.setState(0xe2c4, 0xdd11, 0xa0e0, 0x4c13, 0x1538, 0xb6e9, 0x0, 0x0);
        gbc.writeMem(0xe2c4, { 0x8a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe2c4));
        // 8A 035B
        gbc.setState(0xce37, 0x6e22, 0x6030, 0x89d7, 0x4381, 0xcd30, 0x1, 0x0);
        gbc.writeMem(0xce37, { 0x8a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xce37));
        // 8A 035C
        gbc.setState(0x8375, 0xb1ee, 0xd040, 0x3d68, 0x930a, 0x46be, 0x1, 0x1);
        gbc.writeMem(0x8375, { 0x8a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8375));
        // 8A 035D
        gbc.setState(0xbb8c, 0x330, 0x3b40, 0x75c, 0xf602, 0xded4, 0x1, 0x1);
        gbc.writeMem(0xbb8c, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0xbb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbb8c));
        // 8A 035E
        gbc.setState(0x30cc, 0xe5e0, 0xa420, 0xbe3c, 0x6ee1, 0x1420, 0x0, 0x0);
        gbc.writeMem(0x30cc, { 0x8a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe5e0, gbc.sp());
        EXPECT(0x30cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 035F
        gbc.setState(0x79a, 0xc82d, 0xca10, 0x69b7, 0xb619, 0xc2f9, 0x1, 0x1);
        gbc.writeMem(0x79a, { 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0x79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0360
        gbc.setState(0xe35a, 0x60e2, 0xc3c0, 0xd512, 0x70af, 0xa7a3, 0x1, 0x1);
        gbc.writeMem(0xe35a, { 0x8a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x60e2, gbc.sp());
        EXPECT(0xe35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe35a));
        // 8A 0361
        gbc.setState(0x9c59, 0x4794, 0xbea0, 0x6fb3, 0x53e6, 0x592f, 0x1, 0x0);
        gbc.writeMem(0x9c59, { 0x8a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9c59));
        // 8A 0362
        gbc.setState(0x6466, 0xdc91, 0x26d0, 0x598, 0x6d07, 0xb769, 0x1, 0x0);
        gbc.writeMem(0x6466, { 0x8a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0x6467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0363
        gbc.setState(0x978d, 0xce57, 0x6ff0, 0xce37, 0x8ebe, 0x2d18, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0x8a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xce57, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x978d));
        // 8A 0364
        gbc.setState(0x79a3, 0x34e7, 0x8130, 0x8b17, 0xc45d, 0x2c61, 0x1, 0x0);
        gbc.writeMem(0x79a3, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x34e7, gbc.sp());
        EXPECT(0x79a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0365
        gbc.setState(0x8812, 0xc1c1, 0x5370, 0x9a1c, 0x5ee6, 0xc4bb, 0x0, 0x0);
        gbc.writeMem(0x8812, { 0x8a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8812));
        // 8A 0366
        gbc.setState(0x272e, 0x2186, 0x71b0, 0x4a27, 0xff71, 0x9123, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0x8a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2186, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0367
        gbc.setState(0x9cc3, 0x5658, 0xf820, 0x984e, 0xcf5c, 0x8921, 0x1, 0x0);
        gbc.writeMem(0x9cc3, { 0x8a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0x9cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9cc3));
        // 8A 0368
        gbc.setState(0x4421, 0xcd46, 0xeb40, 0xde8c, 0x68ad, 0xa096, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0x8a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcd46, gbc.sp());
        EXPECT(0x4422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0369
        gbc.setState(0x9c61, 0x3c49, 0x2790, 0xe834, 0x9e6b, 0x336e, 0x0, 0x1);
        gbc.writeMem(0x9c61, { 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9c61));
        // 8A 036A
        gbc.setState(0x7c22, 0xeff2, 0xe870, 0xae20, 0x2491, 0x88e0, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0x8a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xeff2, gbc.sp());
        EXPECT(0x7c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 036B
        gbc.setState(0x2736, 0x968a, 0xc30, 0xc594, 0xe2a2, 0x13c, 0x0, 0x1);
        gbc.writeMem(0x2736, { 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x968a, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 036C
        gbc.setState(0x67ba, 0xc96d, 0x4d60, 0x7fd4, 0x3df7, 0xb132, 0x0, 0x0);
        gbc.writeMem(0x67ba, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0x67bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 036D
        gbc.setState(0x1cb4, 0xd719, 0x63a0, 0x5de, 0x8a9f, 0x67df, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0x8a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0x1cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 036E
        gbc.setState(0x311d, 0x9d86, 0x6a60, 0x7c1b, 0xdcb6, 0xa02d, 0x0, 0x0);
        gbc.writeMem(0x311d, { 0x8a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 036F
        gbc.setState(0xbec3, 0x2687, 0x2860, 0xd83f, 0x45e4, 0x5a21, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2687, gbc.sp());
        EXPECT(0xbec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbec3));
        // 8A 0370
        gbc.setState(0x7c9f, 0xedbe, 0x6880, 0xc67f, 0x7211, 0x3a77, 0x0, 0x1);
        gbc.writeMem(0x7c9f, { 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xedbe, gbc.sp());
        EXPECT(0x7ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0371
        gbc.setState(0x4c39, 0xa557, 0x4550, 0xcdd0, 0x83db, 0x34fe, 0x0, 0x0);
        gbc.writeMem(0x4c39, { 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa557, gbc.sp());
        EXPECT(0x4c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0372
        gbc.setState(0x243e, 0x3725, 0x6240, 0x407b, 0x90f3, 0x54c0, 0x0, 0x1);
        gbc.writeMem(0x243e, { 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3725, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0373
        gbc.setState(0x2e78, 0xd118, 0x1d30, 0x5c07, 0xefbd, 0xdf44, 0x0, 0x0);
        gbc.writeMem(0x2e78, { 0x8a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd118, gbc.sp());
        EXPECT(0x2e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0374
        gbc.setState(0x1f4f, 0xf9fb, 0x84e0, 0x23a7, 0x9f0e, 0xff72, 0x1, 0x1);
        gbc.writeMem(0x1f4f, { 0x8a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf9fb, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0375
        gbc.setState(0x421, 0x6638, 0xc160, 0xcee4, 0x9891, 0xe858, 0x0, 0x0);
        gbc.writeMem(0x421, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0376
        gbc.setState(0x82a5, 0xa98f, 0xf620, 0x220, 0x33ef, 0x5756, 0x0, 0x1);
        gbc.writeMem(0x82a5, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0x82a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x82a5));
        // 8A 0377
        gbc.setState(0xe3ee, 0xf5f7, 0x57a0, 0xb6bc, 0x49b2, 0x6d42, 0x0, 0x1);
        gbc.writeMem(0xe3ee, { 0x8a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf5f7, gbc.sp());
        EXPECT(0xe3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe3ee));
        // 8A 0378
        gbc.setState(0x883f, 0xb67d, 0xfdb0, 0xaf1c, 0x8db6, 0xca3f, 0x0, 0x1);
        gbc.writeMem(0x883f, { 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb67d, gbc.sp());
        EXPECT(0x8840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x883f));
        // 8A 0379
        gbc.setState(0xdf6b, 0x6ff9, 0xa450, 0x6892, 0x954f, 0x17c6, 0x1, 0x0);
        gbc.writeMem(0xdf6b, { 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0xdf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf6b));
        // 8A 037A
        gbc.setState(0x2083, 0x3465, 0xd8d0, 0x7a4a, 0x7938, 0x184d, 0x1, 0x1);
        gbc.writeMem(0x2083, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3465, gbc.sp());
        EXPECT(0x2084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 037B
        gbc.setState(0xbb51, 0x34df, 0x4e70, 0x947a, 0x13e5, 0x7845, 0x0, 0x1);
        gbc.writeMem(0xbb51, { 0x8a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x34df, gbc.sp());
        EXPECT(0xbb52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbb51));
        // 8A 037C
        gbc.setState(0x9a0c, 0x2b4c, 0x7f90, 0x5a2f, 0x72f5, 0x64c9, 0x0, 0x0);
        gbc.writeMem(0x9a0c, { 0x8a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2b4c, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a0c));
        // 8A 037D
        gbc.setState(0xc380, 0x6a41, 0xd160, 0x5ee0, 0x6d26, 0x51c7, 0x0, 0x1);
        gbc.writeMem(0xc380, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6a41, gbc.sp());
        EXPECT(0xc381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc380));
        // 8A 037E
        gbc.setState(0x17d9, 0x809a, 0xd590, 0xc167, 0x798b, 0x46a2, 0x0, 0x0);
        gbc.writeMem(0x17d9, { 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x809a, gbc.sp());
        EXPECT(0x17da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 037F
        gbc.setState(0xacf6, 0x395e, 0xe640, 0x9111, 0xe2c8, 0xddd3, 0x0, 0x1);
        gbc.writeMem(0xacf6, { 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0xacf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xacf6));
        // 8A 0380
        gbc.setState(0x9a2b, 0xe62b, 0xc680, 0x104c, 0xea4a, 0x3d50, 0x0, 0x1);
        gbc.writeMem(0x9a2b, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe62b, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a2b));
        // 8A 0382
        gbc.setState(0xe878, 0xeb22, 0x5b50, 0xf95d, 0x7508, 0x8c6a, 0x0, 0x1);
        gbc.writeMem(0xe878, { 0x8a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xe879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe878));
        // 8A 0383
        gbc.setState(0xdb39, 0xd49b, 0xd240, 0x8c31, 0x1538, 0x1e7f, 0x0, 0x0);
        gbc.writeMem(0xdb39, { 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd49b, gbc.sp());
        EXPECT(0xdb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdb39));
        // 8A 0384
        gbc.setState(0x264, 0x28df, 0xac50, 0xb8e1, 0x69e6, 0x38e, 0x0, 0x0);
        gbc.writeMem(0x264, { 0x8a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x28df, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0385
        gbc.setState(0x156a, 0xf456, 0x3e10, 0xa815, 0x2992, 0x6df3, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf456, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0386
        gbc.setState(0x761a, 0x812a, 0xdd0, 0xe7d6, 0x29e1, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x761a, { 0x8a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x812a, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0387
        gbc.setState(0x66ea, 0xfc6a, 0x56e0, 0x8602, 0x278c, 0x2b7, 0x1, 0x0);
        gbc.writeMem(0x66ea, { 0x8a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0x66eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0388
        gbc.setState(0xbe8d, 0x54ae, 0x1c0, 0x6789, 0xb4d, 0xf5e1, 0x1, 0x1);
        gbc.writeMem(0xbe8d, { 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0xbe8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbe8d));
        // 8A 0389
        gbc.setState(0x58b6, 0x9975, 0x3780, 0xebb0, 0xd386, 0xc1b3, 0x1, 0x0);
        gbc.writeMem(0x58b6, { 0x8a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9975, gbc.sp());
        EXPECT(0x58b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 038A
        gbc.setState(0x1442, 0x3a10, 0x64f0, 0x1d47, 0xc645, 0xe47e, 0x0, 0x1);
        gbc.writeMem(0x1442, { 0x8a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3a10, gbc.sp());
        EXPECT(0x1443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 038B
        gbc.setState(0xc1ef, 0x6bef, 0x8940, 0x5a3b, 0xd284, 0x7e1c, 0x0, 0x0);
        gbc.writeMem(0xc1ef, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6bef, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc1ef));
        // 8A 038C
        gbc.setState(0xb718, 0x5500, 0xf8a0, 0x7930, 0x2aca, 0xf90b, 0x1, 0x1);
        gbc.writeMem(0xb718, { 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb718));
        // 8A 038D
        gbc.setState(0x6926, 0x7db7, 0xc300, 0xc011, 0x4c06, 0x3908, 0x1, 0x1);
        gbc.writeMem(0x6926, { 0x8a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x6927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 038E
        gbc.setState(0x7c47, 0x5635, 0x1460, 0xf7e5, 0xc533, 0x827f, 0x1, 0x1);
        gbc.writeMem(0x7c47, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5635, gbc.sp());
        EXPECT(0x7c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 038F
        gbc.setState(0x7899, 0xc713, 0x2dc0, 0x5dcf, 0xe6d, 0x7128, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0x8a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc713, gbc.sp());
        EXPECT(0x789a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 0390
        gbc.setState(0xc7fa, 0x58ea, 0x7c20, 0x1d33, 0x410d, 0xe347, 0x1, 0x1);
        gbc.writeMem(0xc7fa, { 0x8a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x58ea, gbc.sp());
        EXPECT(0xc7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc7fa));
        // 8A 0391
        gbc.setState(0xd834, 0xf1b6, 0x3ca0, 0x7e67, 0xebb1, 0x24a6, 0x0, 0x1);
        gbc.writeMem(0xd834, { 0x8a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0xd835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd834));
        // 8A 0392
        gbc.setState(0x1dc, 0xc10b, 0xe980, 0x4afe, 0x7fda, 0x5a0f, 0x1, 0x0);
        gbc.writeMem(0x1dc, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0394
        gbc.setState(0xdfea, 0xafa6, 0x21d0, 0x55c5, 0x8b07, 0x6b40, 0x1, 0x0);
        gbc.writeMem(0xdfea, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xafa6, gbc.sp());
        EXPECT(0xdfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdfea));
        // 8A 0395
        gbc.setState(0xe939, 0x859a, 0x5a40, 0xef94, 0xb117, 0x1a61, 0x0, 0x1);
        gbc.writeMem(0xe939, { 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x859a, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe939));
        // 8A 0396
        gbc.setState(0x6fab, 0xb90b, 0xa430, 0x244c, 0xdcad, 0x105, 0x1, 0x0);
        gbc.writeMem(0x6fab, { 0x8a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb90b, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0398
        gbc.setState(0x23d5, 0x38b4, 0xe6e0, 0xa4be, 0xd1db, 0x6c85, 0x0, 0x0);
        gbc.writeMem(0x23d5, { 0x8a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x38b4, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 0399
        gbc.setState(0xb006, 0xa693, 0x7c20, 0x1035, 0x85e8, 0x8ed3, 0x0, 0x0);
        gbc.writeMem(0xb006, { 0x8a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa693, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb006));
        // 8A 039A
        gbc.setState(0x45a, 0x6211, 0xf140, 0x7b91, 0xcf30, 0xa49a, 0x0, 0x0);
        gbc.writeMem(0x45a, { 0x8a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6211, gbc.sp());
        EXPECT(0x45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 039B
        gbc.setState(0xbcb9, 0x23b, 0xf70, 0x92fe, 0xdcd3, 0xb3ee, 0x1, 0x1);
        gbc.writeMem(0xbcb9, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbcb9));
        // 8A 039C
        gbc.setState(0x27fd, 0x30ee, 0xc130, 0x25f5, 0x3d9, 0xe207, 0x1, 0x1);
        gbc.writeMem(0x27fd, { 0x8a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x30ee, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 039D
        gbc.setState(0x1e2, 0xc82c, 0xc10, 0xbd09, 0x3143, 0xed8b, 0x1, 0x0);
        gbc.writeMem(0x1e2, { 0x8a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc82c, gbc.sp());
        EXPECT(0x1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 039E
        gbc.setState(0xd8d4, 0xe4d8, 0xc0a0, 0x58cf, 0x6ece, 0xf4d8, 0x0, 0x1);
        gbc.writeMem(0xd8d4, { 0x8a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe4d8, gbc.sp());
        EXPECT(0xd8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd8d4));
        // 8A 039F
        gbc.setState(0xd6b8, 0x2ace, 0xbf0, 0xbaf3, 0x44ef, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0xd6b8, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ace, gbc.sp());
        EXPECT(0xd6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd6b8));
        // 8A 03A0
        gbc.setState(0x322, 0xc32e, 0xc0d0, 0x4a95, 0xe234, 0x6400, 0x0, 0x1);
        gbc.writeMem(0x322, { 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc32e, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03A2
        gbc.setState(0x5fb0, 0x2cd, 0x5a30, 0x91ba, 0xec43, 0xc91d, 0x0, 0x1);
        gbc.writeMem(0x5fb0, { 0x8a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2cd, gbc.sp());
        EXPECT(0x5fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03A3
        gbc.setState(0x5c43, 0x1a99, 0x8ec0, 0x402d, 0x529d, 0x6c04, 0x0, 0x1);
        gbc.writeMem(0x5c43, { 0x8a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x5c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03A4
        gbc.setState(0x817a, 0xf88d, 0x55d0, 0xd11e, 0x51d3, 0xbfc0, 0x1, 0x0);
        gbc.writeMem(0x817a, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf88d, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x817a));
        // 8A 03A6
        gbc.setState(0x1b22, 0xee5b, 0xd280, 0x9a1c, 0x2dda, 0xb494, 0x1, 0x1);
        gbc.writeMem(0x1b22, { 0x8a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0x1b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03A7
        gbc.setState(0x66c2, 0x3224, 0x4d50, 0xdda3, 0x3233, 0x3e18, 0x1, 0x0);
        gbc.writeMem(0x66c2, { 0x8a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03A8
        gbc.setState(0xd3f4, 0x8883, 0x92e0, 0x4680, 0xe25a, 0x60d2, 0x0, 0x0);
        gbc.writeMem(0xd3f4, { 0x8a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xd3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd3f4));
        // 8A 03A9
        gbc.setState(0x7b0d, 0x1d31, 0xe640, 0xac69, 0x7317, 0xa6bd, 0x0, 0x0);
        gbc.writeMem(0x7b0d, { 0x8a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1d31, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03AA
        gbc.setState(0xdc18, 0x3c19, 0xcd40, 0xcdb, 0x85f8, 0x462b, 0x1, 0x0);
        gbc.writeMem(0xdc18, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0xdc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdc18));
        // 8A 03AB
        gbc.setState(0xd6d8, 0xf843, 0x1d0, 0xcd9d, 0x1998, 0x7100, 0x0, 0x0);
        gbc.writeMem(0xd6d8, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf843, gbc.sp());
        EXPECT(0xd6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd6d8));
        // 8A 03AC
        gbc.setState(0x9d4b, 0x7049, 0xa780, 0xdbfb, 0xa11d, 0x8687, 0x1, 0x1);
        gbc.writeMem(0x9d4b, { 0x8a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7049, gbc.sp());
        EXPECT(0x9d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9d4b));
        // 8A 03AD
        gbc.setState(0x2945, 0xf0d2, 0xe3d0, 0xda92, 0xcdb8, 0x651f, 0x1, 0x1);
        gbc.writeMem(0x2945, { 0x8a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf0d2, gbc.sp());
        EXPECT(0x2946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03AE
        gbc.setState(0x4ec2, 0xf695, 0x54c0, 0xc682, 0x5338, 0x995f, 0x1, 0x1);
        gbc.writeMem(0x4ec2, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf695, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03AF
        gbc.setState(0x6bb8, 0x7a00, 0x7bd0, 0x1d40, 0x6d22, 0x65c0, 0x0, 0x1);
        gbc.writeMem(0x6bb8, { 0x8a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7a00, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03B0
        gbc.setState(0xcc8a, 0x4419, 0x6c20, 0x4f5e, 0x65b, 0x984b, 0x0, 0x1);
        gbc.writeMem(0xcc8a, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4419, gbc.sp());
        EXPECT(0xcc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcc8a));
        // 8A 03B1
        gbc.setState(0x8fdf, 0x5e74, 0x5e70, 0x456a, 0x2688, 0xdd43, 0x1, 0x1);
        gbc.writeMem(0x8fdf, { 0x8a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5e74, gbc.sp());
        EXPECT(0x8fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8fdf));
        // 8A 03B2
        gbc.setState(0xe42c, 0x615f, 0xb180, 0x82b2, 0xd30a, 0xf725, 0x1, 0x1);
        gbc.writeMem(0xe42c, { 0x8a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x615f, gbc.sp());
        EXPECT(0xe42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe42c));
        // 8A 03B3
        gbc.setState(0xb19, 0xd392, 0xa880, 0xc045, 0xe3b6, 0x16b6, 0x0, 0x0);
        gbc.writeMem(0xb19, { 0x8a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd392, gbc.sp());
        EXPECT(0xb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03B4
        gbc.setState(0x5aed, 0xa275, 0xa4b0, 0xf386, 0x21fd, 0x4bb, 0x0, 0x1);
        gbc.writeMem(0x5aed, { 0x8a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa275, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03B5
        gbc.setState(0xed4e, 0xb6f3, 0x7bb0, 0x12fd, 0x9c70, 0x8a90, 0x1, 0x0);
        gbc.writeMem(0xed4e, { 0x8a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb6f3, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xed4e));
        // 8A 03B6
        gbc.setState(0x5d0a, 0x3db1, 0xcb50, 0x1333, 0x6812, 0xaa97, 0x1, 0x1);
        gbc.writeMem(0x5d0a, { 0x8a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3db1, gbc.sp());
        EXPECT(0x5d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03B7
        gbc.setState(0xadd9, 0x881b, 0xa890, 0x602b, 0xd4e8, 0x4fb5, 0x1, 0x1);
        gbc.writeMem(0xadd9, { 0x8a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xadd9));
        // 8A 03B8
        gbc.setState(0x4ea6, 0x862, 0x8270, 0xb7a, 0xf2c1, 0xa402, 0x1, 0x1);
        gbc.writeMem(0x4ea6, { 0x8a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0x4ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03B9
        gbc.setState(0x372a, 0x30a9, 0x3c80, 0xa55, 0x3606, 0x3199, 0x0, 0x0);
        gbc.writeMem(0x372a, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0x372b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03BA
        gbc.setState(0x6d88, 0x7b9a, 0xe1c0, 0x31fd, 0xefdf, 0x5431, 0x0, 0x1);
        gbc.writeMem(0x6d88, { 0x8a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7b9a, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03BB
        gbc.setState(0x68c3, 0xc994, 0xf130, 0x303a, 0x29c1, 0x391c, 0x0, 0x1);
        gbc.writeMem(0x68c3, { 0x8a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x68c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03BC
        gbc.setState(0x77e9, 0xbe16, 0x60e0, 0x30ca, 0xabe0, 0xf4ef, 0x0, 0x1);
        gbc.writeMem(0x77e9, { 0x8a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0x77ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03BD
        gbc.setState(0x76d, 0xb15b, 0x5640, 0x5b9b, 0x5ee1, 0x5080, 0x0, 0x0);
        gbc.writeMem(0x76d, { 0x8a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03BE
        gbc.setState(0xbbe6, 0x4161, 0xc7f0, 0x7229, 0xa146, 0xe4c3, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0x8a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4161, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbbe6));
        // 8A 03BF
        gbc.setState(0x48c0, 0x8261, 0xc90, 0x6b68, 0xb6a5, 0xfd58, 0x0, 0x1);
        gbc.writeMem(0x48c0, { 0x8a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0x48c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03C0
        gbc.setState(0xd0e4, 0x82a1, 0xeda0, 0x747e, 0xab32, 0x9573, 0x1, 0x1);
        gbc.writeMem(0xd0e4, { 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0xd0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd0e4));
        // 8A 03C1
        gbc.setState(0x82c4, 0xebdd, 0x3c80, 0xaf7d, 0xeda8, 0xd3f, 0x0, 0x1);
        gbc.writeMem(0x82c4, { 0x8a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xebdd, gbc.sp());
        EXPECT(0x82c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x82c4));
        // 8A 03C2
        gbc.setState(0x4566, 0x83d8, 0x8d0, 0x48ea, 0xd4de, 0xe2f8, 0x0, 0x1);
        gbc.writeMem(0x4566, { 0x8a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x83d8, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03C3
        gbc.setState(0x8db5, 0xe1, 0x35d0, 0x11b6, 0x419c, 0x7313, 0x1, 0x0);
        gbc.writeMem(0x8db5, { 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0x8db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8db5));
        // 8A 03C5
        gbc.setState(0xcdf0, 0xe9e8, 0x9490, 0x3d4f, 0xdd2e, 0x6c56, 0x1, 0x1);
        gbc.writeMem(0xcdf0, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe9e8, gbc.sp());
        EXPECT(0xcdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcdf0));
        // 8A 03C6
        gbc.setState(0xbe15, 0x4cf0, 0x6430, 0xb9ba, 0x312a, 0x7763, 0x1, 0x1);
        gbc.writeMem(0xbe15, { 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbe15));
        // 8A 03C7
        gbc.setState(0xa40f, 0x60ea, 0x2410, 0x9b9e, 0xc081, 0x223e, 0x0, 0x1);
        gbc.writeMem(0xa40f, { 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x60ea, gbc.sp());
        EXPECT(0xa410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa40f));
        // 8A 03C8
        gbc.setState(0x6d4a, 0xd768, 0x4b70, 0xdb61, 0x5164, 0x4559, 0x1, 0x1);
        gbc.writeMem(0x6d4a, { 0x8a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd768, gbc.sp());
        EXPECT(0x6d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03C9
        gbc.setState(0xcfca, 0xc34d, 0x6a40, 0xebdb, 0x2674, 0x96c1, 0x0, 0x0);
        gbc.writeMem(0xcfca, { 0x8a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0xcfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xcfca));
        // 8A 03CA
        gbc.setState(0x4304, 0xdc09, 0xd660, 0x4e46, 0xa5e3, 0x7335, 0x0, 0x0);
        gbc.writeMem(0x4304, { 0x8a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdc09, gbc.sp());
        EXPECT(0x4305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03CB
        gbc.setState(0x8a2c, 0x8e05, 0x610, 0x9268, 0xa6f9, 0xbaff, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0x8a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8e05, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8a2c));
        // 8A 03CC
        gbc.setState(0xdc9f, 0xa33a, 0xad70, 0x2346, 0x7e84, 0x66dd, 0x0, 0x1);
        gbc.writeMem(0xdc9f, { 0x8a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa33a, gbc.sp());
        EXPECT(0xdca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdc9f));
        // 8A 03CD
        gbc.setState(0x7442, 0x3e86, 0xcf30, 0xabfa, 0xfcf2, 0xbbe0, 0x1, 0x0);
        gbc.writeMem(0x7442, { 0x8a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03CE
        gbc.setState(0x4de, 0xffa3, 0x8f80, 0x9f62, 0xc1a1, 0x6726, 0x0, 0x1);
        gbc.writeMem(0x4de, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xffa3, gbc.sp());
        EXPECT(0x4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03D1
        gbc.setState(0xb225, 0x6b27, 0xadd0, 0x5a73, 0x4243, 0x63c3, 0x0, 0x0);
        gbc.writeMem(0xb225, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0xb226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb225));
        // 8A 03D2
        gbc.setState(0xefc0, 0xc1ad, 0x84e0, 0x371d, 0xeb2a, 0x4d49, 0x0, 0x1);
        gbc.writeMem(0xefc0, { 0x8a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc1ad, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xefc0));
        // 8A 03D3
        gbc.setState(0x6012, 0x221c, 0x70f0, 0x5a4e, 0x3fc3, 0x752b, 0x0, 0x1);
        gbc.writeMem(0x6012, { 0x8a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x221c, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03D4
        gbc.setState(0x1cf8, 0x8448, 0x48d0, 0x6b32, 0x3542, 0x688f, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0x8a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8448, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03D6
        gbc.setState(0x4991, 0x2310, 0x78e0, 0x8459, 0xdc43, 0x4834, 0x1, 0x1);
        gbc.writeMem(0x4991, { 0x8a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2310, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03D7
        gbc.setState(0xd573, 0xcd1a, 0xd520, 0x5de1, 0xd938, 0xe428, 0x1, 0x0);
        gbc.writeMem(0xd573, { 0x8a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd573));
        // 8A 03D8
        gbc.setState(0xa367, 0x65bf, 0x64d0, 0xe05f, 0x8ebe, 0xa7ca, 0x0, 0x1);
        gbc.writeMem(0xa367, { 0x8a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x65bf, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa367));
        // 8A 03D9
        gbc.setState(0x58bf, 0x25a3, 0xea0, 0x227f, 0xc8fc, 0x2df7, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0x8a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03DA
        gbc.setState(0x1298, 0x4ff7, 0x3b10, 0x6785, 0xe4c9, 0x7ba, 0x1, 0x0);
        gbc.writeMem(0x1298, { 0x8a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4ff7, gbc.sp());
        EXPECT(0x1299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03DB
        gbc.setState(0x83b3, 0x1616, 0x2700, 0xbff5, 0x7a96, 0x2f25, 0x1, 0x0);
        gbc.writeMem(0x83b3, { 0x8a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1616, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x83b3));
        // 8A 03DC
        gbc.setState(0x9d1, 0xe9c4, 0x9a10, 0xa919, 0x48af, 0xbb89, 0x0, 0x0);
        gbc.writeMem(0x9d1, { 0x8a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe9c4, gbc.sp());
        EXPECT(0x9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03DD
        gbc.setState(0x68b7, 0x32bb, 0x2090, 0x2b5a, 0x3767, 0x66b7, 0x1, 0x0);
        gbc.writeMem(0x68b7, { 0x8a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x32bb, gbc.sp());
        EXPECT(0x68b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03DE
        gbc.setState(0x910a, 0x58ae, 0x69d0, 0xea7b, 0xe834, 0x2981, 0x1, 0x0);
        gbc.writeMem(0x910a, { 0x8a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x58ae, gbc.sp());
        EXPECT(0x910b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x910a));
        // 8A 03DF
        gbc.setState(0x9ed5, 0xda61, 0xf1a0, 0xd5f3, 0xf6b1, 0x2a17, 0x1, 0x0);
        gbc.writeMem(0x9ed5, { 0x8a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0x9ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9ed5));
        // 8A 03E0
        gbc.setState(0x412d, 0xaeb1, 0x3c50, 0xb830, 0xd879, 0x14bd, 0x0, 0x1);
        gbc.writeMem(0x412d, { 0x8a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaeb1, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03E1
        gbc.setState(0xc1d2, 0x2ae6, 0xfce0, 0xbe02, 0x5110, 0x1909, 0x1, 0x1);
        gbc.writeMem(0xc1d2, { 0x8a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc1d2));
        // 8A 03E2
        gbc.setState(0x2756, 0x7b0a, 0x4ca0, 0x7cfb, 0xee47, 0x908d, 0x0, 0x0);
        gbc.writeMem(0x2756, { 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7b0a, gbc.sp());
        EXPECT(0x2757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03E3
        gbc.setState(0xdf6e, 0xcfc4, 0x9ed0, 0x3cc9, 0x8ff, 0x647e, 0x0, 0x0);
        gbc.writeMem(0xdf6e, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf6e));
        // 8A 03E4
        gbc.setState(0x7dc0, 0xa802, 0x6100, 0x8f8c, 0x8f5e, 0xf5de, 0x0, 0x1);
        gbc.writeMem(0x7dc0, { 0x8a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa802, gbc.sp());
        EXPECT(0x7dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8A 03E5
        gbc.setState(0x6b1c, 0xb0d5, 0xaae0, 0x8d9d, 0xa6ad, 0x468e, 0x0, 0x1);
        gbc.writeMem(0x6b1c, { 0x8a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb0d5, gbc.sp());
        EXPECT(0x6b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8A 03E6
        gbc.setState(0x9b9e, 0x86d, 0x1b40, 0x7c16, 0xed8c, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x9b9e, { 0x8a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x86d, gbc.sp());
        EXPECT(0x9b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9b9e));
        // 8A 03E7
        gbc.setState(0xb687, 0x924b, 0xc1c0, 0xcfa1, 0xf9c9, 0x231c, 0x1, 0x1);
        gbc.writeMem(0xb687, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x924b, gbc.sp());
        EXPECT(0xb688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb687));
    }
