    TEST(gbcemu, opcode_cb_b1) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B1 0000
        gbc.setState(0x3c3c, 0xf4f9, 0x6840, 0xc965, 0xffd8, 0xc6a6, 0x0, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf4f9, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0001
        gbc.setState(0xcdac, 0x1a7a, 0x6780, 0xde33, 0x840c, 0x6eb7, 0x1, 0x0);
        gbc.writeMem(0xcdac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0xcdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdac));
        EXPECT(0xb1, gbc.readMem(0xcdad));
        // CB B1 0002
        gbc.setState(0x1a66, 0x7168, 0xd4e0, 0x8469, 0xf73, 0x3275, 0x1, 0x0);
        gbc.writeMem(0x1a66, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7168, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0003
        gbc.setState(0x90a5, 0x9e88, 0xb830, 0xd85a, 0x1aac, 0x8460, 0x0, 0x1);
        gbc.writeMem(0x90a5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0x90a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a5));
        EXPECT(0xb1, gbc.readMem(0x90a6));
        // CB B1 0004
        gbc.setState(0x12ec, 0x336a, 0xce40, 0x5997, 0xb90a, 0x8754, 0x1, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x336a, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0005
        gbc.setState(0x60f2, 0xc271, 0x9d50, 0x5ea, 0xf5a, 0x264c, 0x0, 0x0);
        gbc.writeMem(0x60f2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x60f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0007
        gbc.setState(0x25cc, 0xf825, 0x81f0, 0x51b5, 0x4545, 0x3be6, 0x0, 0x1);
        gbc.writeMem(0x25cc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf825, gbc.sp());
        EXPECT(0x25ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0008
        gbc.setState(0x9054, 0x7bf8, 0xbe0, 0xab82, 0x35f0, 0xdc6a, 0x0, 0x1);
        gbc.writeMem(0x9054, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7bf8, gbc.sp());
        EXPECT(0x9056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9054));
        EXPECT(0xb1, gbc.readMem(0x9055));
        // CB B1 0009
        gbc.setState(0x7e8e, 0xaef0, 0x6b90, 0x4dd7, 0xb0c7, 0xc1e7, 0x0, 0x0);
        gbc.writeMem(0x7e8e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaef0, gbc.sp());
        EXPECT(0x7e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 000A
        gbc.setState(0x6d9a, 0xbcfa, 0x8a70, 0x9859, 0x3e04, 0x2adc, 0x0, 0x0);
        gbc.writeMem(0x6d9a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 000B
        gbc.setState(0x822f, 0x8c97, 0x60a0, 0x2be6, 0xe641, 0x2305, 0x0, 0x1);
        gbc.writeMem(0x822f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8c97, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822f));
        EXPECT(0xb1, gbc.readMem(0x8230));
        // CB B1 000C
        gbc.setState(0xe86c, 0x592b, 0x6ec0, 0xee60, 0x8bf9, 0xbe04, 0x0, 0x0);
        gbc.writeMem(0xe86c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x592b, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86c));
        EXPECT(0xb1, gbc.readMem(0xe86d));
        // CB B1 000D
        gbc.setState(0x85b8, 0x166f, 0x7ba0, 0x8453, 0x7c04, 0x25f0, 0x0, 0x0);
        gbc.writeMem(0x85b8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x166f, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b8));
        EXPECT(0xb1, gbc.readMem(0x85b9));
        // CB B1 000E
        gbc.setState(0x7adc, 0xc1a0, 0xc3c0, 0x5d84, 0x2395, 0xc676, 0x0, 0x1);
        gbc.writeMem(0x7adc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 000F
        gbc.setState(0xdc4e, 0xc17c, 0xd530, 0xe646, 0x6132, 0xdd4d, 0x0, 0x1);
        gbc.writeMem(0xdc4e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc17c, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4e));
        EXPECT(0xb1, gbc.readMem(0xdc4f));
        // CB B1 0010
        gbc.setState(0x52a3, 0xe99f, 0x2de0, 0xa588, 0x100, 0x62b2, 0x1, 0x0);
        gbc.writeMem(0x52a3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0011
        gbc.setState(0x35aa, 0x1271, 0x7f80, 0xfc15, 0xa76f, 0xab7f, 0x1, 0x0);
        gbc.writeMem(0x35aa, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x35ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0012
        gbc.setState(0x91b4, 0x9370, 0x3dc0, 0x5371, 0x2df4, 0x1ccb, 0x0, 0x0);
        gbc.writeMem(0x91b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b4));
        EXPECT(0xb1, gbc.readMem(0x91b5));
        // CB B1 0013
        gbc.setState(0xda3f, 0xc0e5, 0x55a0, 0xa54c, 0xbb32, 0x159f, 0x0, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3f));
        EXPECT(0xb1, gbc.readMem(0xda40));
        // CB B1 0014
        gbc.setState(0xa40, 0x24a0, 0xc1f0, 0xa354, 0x56d9, 0xabd9, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0015
        gbc.setState(0x2aae, 0xc7e8, 0x9280, 0xb7a1, 0x8644, 0x625d, 0x0, 0x0);
        gbc.writeMem(0x2aae, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0016
        gbc.setState(0x991d, 0x7950, 0x3190, 0xfeb5, 0xc2f2, 0x6014, 0x0, 0x0);
        gbc.writeMem(0x991d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7950, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991d));
        EXPECT(0xb1, gbc.readMem(0x991e));
        // CB B1 0017
        gbc.setState(0x9491, 0x7c19, 0x9da0, 0x4b50, 0x24eb, 0x97de, 0x0, 0x1);
        gbc.writeMem(0x9491, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7c19, gbc.sp());
        EXPECT(0x9493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9491));
        EXPECT(0xb1, gbc.readMem(0x9492));
        // CB B1 0018
        gbc.setState(0x9ea2, 0xd5f6, 0x90, 0xf502, 0x4d27, 0xda96, 0x1, 0x0);
        gbc.writeMem(0x9ea2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd5f6, gbc.sp());
        EXPECT(0x9ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea2));
        EXPECT(0xb1, gbc.readMem(0x9ea3));
        // CB B1 0019
        gbc.setState(0xb932, 0x7a08, 0xe320, 0x5692, 0x3f72, 0x9778, 0x1, 0x1);
        gbc.writeMem(0xb932, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xb934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb932));
        EXPECT(0xb1, gbc.readMem(0xb933));
        // CB B1 001A
        gbc.setState(0xc9f9, 0x92f1, 0x4010, 0x6993, 0x2583, 0x8bff, 0x0, 0x0);
        gbc.writeMem(0xc9f9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f9));
        EXPECT(0xb1, gbc.readMem(0xc9fa));
        // CB B1 001B
        gbc.setState(0x567c, 0x89e9, 0xb9d0, 0xd838, 0x8432, 0x2a5a, 0x0, 0x1);
        gbc.writeMem(0x567c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x89e9, gbc.sp());
        EXPECT(0x567e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 001C
        gbc.setState(0x1ec6, 0xbc1f, 0xd4a0, 0x585d, 0x6d2c, 0x57e1, 0x1, 0x0);
        gbc.writeMem(0x1ec6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0x1ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 001D
        gbc.setState(0x5034, 0x3dae, 0x7770, 0xbfd3, 0x2be, 0xfc9d, 0x1, 0x0);
        gbc.writeMem(0x5034, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3dae, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 001E
        gbc.setState(0x80a3, 0x7ba2, 0xdf90, 0x195, 0xc323, 0xdfc1, 0x0, 0x1);
        gbc.writeMem(0x80a3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0xb1, gbc.readMem(0x80a4));
        // CB B1 001F
        gbc.setState(0x9f22, 0x2025, 0x3650, 0x1ced, 0x5a78, 0xad3a, 0x1, 0x0);
        gbc.writeMem(0x9f22, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x9f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f22));
        EXPECT(0xb1, gbc.readMem(0x9f23));
        // CB B1 0020
        gbc.setState(0xcdf6, 0x3b5a, 0x7a40, 0xb205, 0x99e, 0xe13b, 0x0, 0x1);
        gbc.writeMem(0xcdf6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3b5a, gbc.sp());
        EXPECT(0xcdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf6));
        EXPECT(0xb1, gbc.readMem(0xcdf7));
        // CB B1 0021
        gbc.setState(0x2a00, 0x11b8, 0xce00, 0x7ee9, 0xbd1d, 0x2c4e, 0x1, 0x1);
        gbc.writeMem(0x2a00, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x11b8, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0022
        gbc.setState(0x4bbc, 0xecf, 0x4b40, 0x47f7, 0xe658, 0x756a, 0x0, 0x0);
        gbc.writeMem(0x4bbc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0023
        gbc.setState(0xd644, 0x74c7, 0x6a10, 0x25c5, 0xd86c, 0xcb61, 0x1, 0x1);
        gbc.writeMem(0xd644, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x74c7, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd644));
        EXPECT(0xb1, gbc.readMem(0xd645));
        // CB B1 0024
        gbc.setState(0x3686, 0xcd8e, 0xf050, 0xafa9, 0x8fc7, 0x1703, 0x0, 0x1);
        gbc.writeMem(0x3686, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcd8e, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0025
        gbc.setState(0x8b4d, 0x3e08, 0xe030, 0x8b83, 0x7ad4, 0xab8f, 0x1, 0x1);
        gbc.writeMem(0x8b4d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3e08, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4d));
        EXPECT(0xb1, gbc.readMem(0x8b4e));
        // CB B1 0026
        gbc.setState(0xc023, 0x1dd1, 0x8cd0, 0xc5fa, 0x720e, 0x6319, 0x0, 0x0);
        gbc.writeMem(0xc023, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1dd1, gbc.sp());
        EXPECT(0xc025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc023));
        EXPECT(0xb1, gbc.readMem(0xc024));
        // CB B1 0027
        gbc.setState(0x2289, 0xce9f, 0xee50, 0x4c48, 0x57de, 0x780, 0x1, 0x0);
        gbc.writeMem(0x2289, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0028
        gbc.setState(0xc010, 0x6440, 0x24d0, 0xe680, 0xab05, 0x7c72, 0x0, 0x1);
        gbc.writeMem(0xc010, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6440, gbc.sp());
        EXPECT(0xc012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc010));
        EXPECT(0xb1, gbc.readMem(0xc011));
        // CB B1 0029
        gbc.setState(0x134f, 0xb76b, 0x58a0, 0x21fd, 0x33cb, 0x8961, 0x1, 0x1);
        gbc.writeMem(0x134f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb76b, gbc.sp());
        EXPECT(0x1351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 002A
        gbc.setState(0x85fd, 0xa700, 0xd340, 0x5099, 0xa73b, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x85fd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fd));
        EXPECT(0xb1, gbc.readMem(0x85fe));
        // CB B1 002B
        gbc.setState(0xe376, 0x9c9d, 0x2a40, 0xd2f5, 0xa093, 0x6b0a, 0x1, 0x1);
        gbc.writeMem(0xe376, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0xe378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe376));
        EXPECT(0xb1, gbc.readMem(0xe377));
        // CB B1 002C
        gbc.setState(0x9c5e, 0x5ff2, 0x8f30, 0xd33, 0x9623, 0xcf5c, 0x0, 0x0);
        gbc.writeMem(0x9c5e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5ff2, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5e));
        EXPECT(0xb1, gbc.readMem(0x9c5f));
        // CB B1 002D
        gbc.setState(0x3472, 0xc270, 0x27d0, 0x161d, 0x4462, 0xcd0d, 0x0, 0x1);
        gbc.writeMem(0x3472, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc270, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 002E
        gbc.setState(0xe92f, 0xc1e8, 0x1530, 0x5108, 0xb85d, 0x54d9, 0x1, 0x0);
        gbc.writeMem(0xe92f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0xb1, gbc.readMem(0xe930));
        // CB B1 002F
        gbc.setState(0xec01, 0xcd80, 0x9830, 0x629, 0x8315, 0xce6f, 0x0, 0x0);
        gbc.writeMem(0xec01, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec01));
        EXPECT(0xb1, gbc.readMem(0xec02));
        // CB B1 0032
        gbc.setState(0x9a1e, 0x97d4, 0x5570, 0xec36, 0xb2cd, 0x5b71, 0x1, 0x1);
        gbc.writeMem(0x9a1e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x97d4, gbc.sp());
        EXPECT(0x9a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1e));
        EXPECT(0xb1, gbc.readMem(0x9a1f));
        // CB B1 0033
        gbc.setState(0xd8bc, 0xc10f, 0x74f0, 0xb8f8, 0x66c9, 0x8dcd, 0x1, 0x0);
        gbc.writeMem(0xd8bc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0xb1, gbc.readMem(0xd8bd));
        // CB B1 0034
        gbc.setState(0x43a0, 0x1fd9, 0x4440, 0xaa8c, 0x9ee2, 0x8769, 0x1, 0x0);
        gbc.writeMem(0x43a0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0035
        gbc.setState(0x3b4d, 0x167d, 0x30c0, 0xd998, 0x607, 0x3796, 0x1, 0x1);
        gbc.writeMem(0x3b4d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0x3b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0036
        gbc.setState(0x67fe, 0x933d, 0x3430, 0x7591, 0xa6ad, 0xcee6, 0x0, 0x1);
        gbc.writeMem(0x67fe, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x933d, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0037
        gbc.setState(0x1121, 0xdc20, 0xd250, 0x8f29, 0xb08c, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x1121, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc20, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0038
        gbc.setState(0x2b32, 0x63d9, 0x2840, 0xbbe0, 0xf785, 0x9300, 0x0, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x63d9, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0039
        gbc.setState(0x9bd8, 0x4b0f, 0xdf80, 0x8d12, 0x64f3, 0x32db, 0x1, 0x0);
        gbc.writeMem(0x9bd8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x9bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd8));
        EXPECT(0xb1, gbc.readMem(0x9bd9));
        // CB B1 003A
        gbc.setState(0xa58e, 0x3136, 0x63a0, 0x8eb9, 0x3d72, 0x2b09, 0x1, 0x1);
        gbc.writeMem(0xa58e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3136, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58e));
        EXPECT(0xb1, gbc.readMem(0xa58f));
        // CB B1 003B
        gbc.setState(0x6473, 0xb7f2, 0xbf50, 0xacf5, 0x35ae, 0xba08, 0x1, 0x1);
        gbc.writeMem(0x6473, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 003C
        gbc.setState(0x896, 0x19d2, 0xd3e0, 0x5c21, 0xac61, 0x5fc6, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x19d2, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 003D
        gbc.setState(0x3a2d, 0x5d2c, 0x7aa0, 0x64d8, 0x8aa3, 0xd6d7, 0x1, 0x1);
        gbc.writeMem(0x3a2d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 003E
        gbc.setState(0x2375, 0x612e, 0xe2a0, 0xb215, 0x29c8, 0x66a4, 0x1, 0x1);
        gbc.writeMem(0x2375, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x612e, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 003F
        gbc.setState(0xcc99, 0x9692, 0x7ba0, 0xd438, 0xb558, 0x41f5, 0x0, 0x1);
        gbc.writeMem(0xcc99, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc99));
        EXPECT(0xb1, gbc.readMem(0xcc9a));
        // CB B1 0040
        gbc.setState(0xccf1, 0xbbd9, 0xf5e0, 0xb0d1, 0xc095, 0x1297, 0x1, 0x0);
        gbc.writeMem(0xccf1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbbd9, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf1));
        EXPECT(0xb1, gbc.readMem(0xccf2));
        // CB B1 0041
        gbc.setState(0x529a, 0x240f, 0x2b20, 0xc9bd, 0x4b37, 0xb9c3, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x240f, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0042
        gbc.setState(0xbed1, 0xbdf, 0x5cc0, 0x591a, 0x6990, 0x27af, 0x1, 0x0);
        gbc.writeMem(0xbed1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0xbed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed1));
        EXPECT(0xb1, gbc.readMem(0xbed2));
        // CB B1 0044
        gbc.setState(0x9b4e, 0x5aa4, 0x8870, 0xb25, 0xca24, 0x565a, 0x1, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0x9b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4e));
        EXPECT(0xb1, gbc.readMem(0x9b4f));
        // CB B1 0045
        gbc.setState(0x7d11, 0x43be, 0x1d60, 0xcd26, 0x104f, 0x466, 0x1, 0x1);
        gbc.writeMem(0x7d11, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0x7d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0046
        gbc.setState(0xd8bd, 0xbd29, 0xab00, 0xc2d0, 0x9d53, 0x70ea, 0x1, 0x0);
        gbc.writeMem(0xd8bd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbd29, gbc.sp());
        EXPECT(0xd8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bd));
        EXPECT(0xb1, gbc.readMem(0xd8be));
        // CB B1 0047
        gbc.setState(0xd353, 0xccc9, 0xb1e0, 0x988, 0x2341, 0x2bc, 0x1, 0x1);
        gbc.writeMem(0xd353, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xccc9, gbc.sp());
        EXPECT(0xd355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd353));
        EXPECT(0xb1, gbc.readMem(0xd354));
        // CB B1 0048
        gbc.setState(0xc1be, 0xbd61, 0xf7e0, 0x11b9, 0x2427, 0x2580, 0x1, 0x0);
        gbc.writeMem(0xc1be, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0xc1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1be));
        EXPECT(0xb1, gbc.readMem(0xc1bf));
        // CB B1 0049
        gbc.setState(0x5616, 0xa668, 0x9c80, 0x960, 0xbe87, 0x4a15, 0x1, 0x1);
        gbc.writeMem(0x5616, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa668, gbc.sp());
        EXPECT(0x5618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 004A
        gbc.setState(0xad7d, 0xd8ad, 0x4ea0, 0x7ff1, 0xa3a1, 0x2e99, 0x0, 0x0);
        gbc.writeMem(0xad7d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd8ad, gbc.sp());
        EXPECT(0xad7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7d));
        EXPECT(0xb1, gbc.readMem(0xad7e));
        // CB B1 004B
        gbc.setState(0x625e, 0x2284, 0xf010, 0x4b37, 0x9813, 0xa6a5, 0x0, 0x1);
        gbc.writeMem(0x625e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2284, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 004C
        gbc.setState(0xacf6, 0x3549, 0xd110, 0x7b66, 0xe38f, 0x43f5, 0x1, 0x0);
        gbc.writeMem(0xacf6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0xb1, gbc.readMem(0xacf7));
        // CB B1 004D
        gbc.setState(0x6117, 0x924d, 0xa360, 0x74a4, 0x269e, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x6117, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x924d, gbc.sp());
        EXPECT(0x6119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 004E
        gbc.setState(0x15e3, 0x92f8, 0x5f20, 0xa904, 0x34ad, 0x2bec, 0x1, 0x1);
        gbc.writeMem(0x15e3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x92f8, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 004F
        gbc.setState(0x1205, 0x1e3e, 0xc2c0, 0x7ab8, 0x77e4, 0xfd93, 0x0, 0x1);
        gbc.writeMem(0x1205, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1e3e, gbc.sp());
        EXPECT(0x1207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0050
        gbc.setState(0x9e53, 0xd180, 0x64b0, 0x1968, 0xdc75, 0x45bd, 0x0, 0x1);
        gbc.writeMem(0x9e53, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd180, gbc.sp());
        EXPECT(0x9e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e53));
        EXPECT(0xb1, gbc.readMem(0x9e54));
        // CB B1 0051
        gbc.setState(0x1a70, 0xb682, 0xad30, 0x5aa6, 0x9cdd, 0xa5b8, 0x0, 0x0);
        gbc.writeMem(0x1a70, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0052
        gbc.setState(0x8d8b, 0x8164, 0x3390, 0x3137, 0xab54, 0x3fb3, 0x1, 0x0);
        gbc.writeMem(0x8d8b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8164, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8b));
        EXPECT(0xb1, gbc.readMem(0x8d8c));
        // CB B1 0053
        gbc.setState(0x1ba7, 0xbec5, 0x7f70, 0xb173, 0xcb18, 0x7526, 0x1, 0x0);
        gbc.writeMem(0x1ba7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbec5, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0055
        gbc.setState(0xadb8, 0x83f6, 0x61b0, 0x3828, 0xc47d, 0xb99b, 0x0, 0x0);
        gbc.writeMem(0xadb8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0xadba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb8));
        EXPECT(0xb1, gbc.readMem(0xadb9));
        // CB B1 0056
        gbc.setState(0xa004, 0xca31, 0x9b00, 0x991c, 0xe45a, 0x210d, 0x1, 0x1);
        gbc.writeMem(0xa004, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0xa006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa004));
        EXPECT(0xb1, gbc.readMem(0xa005));
        // CB B1 0057
        gbc.setState(0xc50a, 0x345, 0x5cc0, 0xce05, 0x17ef, 0xdfef, 0x1, 0x1);
        gbc.writeMem(0xc50a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0xc50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50a));
        EXPECT(0xb1, gbc.readMem(0xc50b));
        // CB B1 0058
        gbc.setState(0xe714, 0xdb8a, 0x8450, 0x7b90, 0x9957, 0x489, 0x1, 0x0);
        gbc.writeMem(0xe714, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0xe716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe714));
        EXPECT(0xb1, gbc.readMem(0xe715));
        // CB B1 0059
        gbc.setState(0xdcb4, 0x206b, 0x12d0, 0x258b, 0x2739, 0xea49, 0x0, 0x1);
        gbc.writeMem(0xdcb4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x206b, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb4));
        EXPECT(0xb1, gbc.readMem(0xdcb5));
        // CB B1 005A
        gbc.setState(0xafd, 0xb895, 0x8900, 0xe1d3, 0x9ff, 0xc988, 0x0, 0x0);
        gbc.writeMem(0xafd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb895, gbc.sp());
        EXPECT(0xaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 005B
        gbc.setState(0x4350, 0x788f, 0xc440, 0xe9f9, 0x30b7, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x4350, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x788f, gbc.sp());
        EXPECT(0x4352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 005C
        gbc.setState(0x631, 0x513d, 0x6950, 0xe15f, 0xb785, 0xec04, 0x0, 0x0);
        gbc.writeMem(0x631, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x513d, gbc.sp());
        EXPECT(0x633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 005D
        gbc.setState(0x8b6f, 0xa100, 0x4e10, 0x30ce, 0x488a, 0xb6e9, 0x1, 0x1);
        gbc.writeMem(0x8b6f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6f));
        EXPECT(0xb1, gbc.readMem(0x8b70));
        // CB B1 005E
        gbc.setState(0x25ad, 0xa8e3, 0xd400, 0x4073, 0x30d9, 0xa82b, 0x0, 0x0);
        gbc.writeMem(0x25ad, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa8e3, gbc.sp());
        EXPECT(0x25af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 005F
        gbc.setState(0xd2a, 0x29a9, 0x2b10, 0x9520, 0x8db, 0x209d, 0x0, 0x0);
        gbc.writeMem(0xd2a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0xd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0060
        gbc.setState(0xa3ea, 0xb768, 0x5370, 0xa5b4, 0xec4a, 0x8826, 0x0, 0x1);
        gbc.writeMem(0xa3ea, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb768, gbc.sp());
        EXPECT(0xa3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ea));
        EXPECT(0xb1, gbc.readMem(0xa3eb));
        // CB B1 0061
        gbc.setState(0x5df6, 0xc751, 0x2620, 0x68b5, 0xe1b5, 0x9136, 0x1, 0x0);
        gbc.writeMem(0x5df6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc751, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0062
        gbc.setState(0xaaef, 0x63aa, 0xc340, 0x6148, 0x65e8, 0x2bbd, 0x0, 0x1);
        gbc.writeMem(0xaaef, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63aa, gbc.sp());
        EXPECT(0xaaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaef));
        EXPECT(0xb1, gbc.readMem(0xaaf0));
        // CB B1 0063
        gbc.setState(0x6405, 0x33e5, 0x9900, 0x77bb, 0xb458, 0xd3c2, 0x1, 0x1);
        gbc.writeMem(0x6405, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x33e5, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0064
        gbc.setState(0x1556, 0xfd5e, 0x23e0, 0x331e, 0xd0d7, 0x99a6, 0x0, 0x0);
        gbc.writeMem(0x1556, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfd5e, gbc.sp());
        EXPECT(0x1558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0065
        gbc.setState(0x8adb, 0x61ce, 0x9ec0, 0x6412, 0x5afe, 0xcfa5, 0x1, 0x0);
        gbc.writeMem(0x8adb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x61ce, gbc.sp());
        EXPECT(0x8add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8adb));
        EXPECT(0xb1, gbc.readMem(0x8adc));
        // CB B1 0066
        gbc.setState(0x1e56, 0xeee7, 0x1730, 0x7494, 0xe678, 0xa908, 0x1, 0x0);
        gbc.writeMem(0x1e56, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeee7, gbc.sp());
        EXPECT(0x1e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0067
        gbc.setState(0xd63, 0xcabd, 0xe550, 0xf23e, 0xe571, 0x92e5, 0x0, 0x0);
        gbc.writeMem(0xd63, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0068
        gbc.setState(0x275e, 0xc31e, 0x7fe0, 0x2876, 0x823f, 0xbcc9, 0x0, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x2760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0069
        gbc.setState(0xb125, 0x7981, 0x700, 0xb0dd, 0x7810, 0xf5d, 0x1, 0x1);
        gbc.writeMem(0xb125, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb125));
        EXPECT(0xb1, gbc.readMem(0xb126));
        // CB B1 006A
        gbc.setState(0x77df, 0xdbb, 0x5420, 0x3fda, 0x6e92, 0xbcaf, 0x0, 0x1);
        gbc.writeMem(0x77df, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdbb, gbc.sp());
        EXPECT(0x77e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 006B
        gbc.setState(0x5a0a, 0x45b7, 0xf810, 0xcdea, 0xa080, 0xdeeb, 0x0, 0x0);
        gbc.writeMem(0x5a0a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 006C
        gbc.setState(0xe788, 0x290f, 0x8fc0, 0x6853, 0xe432, 0x6102, 0x1, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x290f, gbc.sp());
        EXPECT(0xe78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe788));
        EXPECT(0xb1, gbc.readMem(0xe789));
        // CB B1 006D
        gbc.setState(0x24ce, 0xaca, 0x8760, 0xb7f8, 0x43e9, 0xc241, 0x1, 0x0);
        gbc.writeMem(0x24ce, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaca, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 006E
        gbc.setState(0x9dbb, 0x8a76, 0x20, 0x5f7b, 0x80b2, 0x64c5, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8a76, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0xb1, gbc.readMem(0x9dbc));
        // CB B1 006F
        gbc.setState(0xad59, 0xfab9, 0x3730, 0x3bf9, 0x7a4d, 0x393e, 0x0, 0x0);
        gbc.writeMem(0xad59, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0xad5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad59));
        EXPECT(0xb1, gbc.readMem(0xad5a));
        // CB B1 0070
        gbc.setState(0x5b3b, 0xa88a, 0x5b50, 0xb3f3, 0xf63e, 0xf5e1, 0x0, 0x1);
        gbc.writeMem(0x5b3b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa88a, gbc.sp());
        EXPECT(0x5b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0071
        gbc.setState(0x6f1c, 0x5af0, 0x6580, 0xabc2, 0xc1cf, 0x7f2e, 0x1, 0x1);
        gbc.writeMem(0x6f1c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0073
        gbc.setState(0xca88, 0xcd95, 0x3260, 0x7d94, 0xe4d1, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0xca88, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcd95, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca88));
        EXPECT(0xb1, gbc.readMem(0xca89));
        // CB B1 0074
        gbc.setState(0xc520, 0x35e6, 0x6d20, 0x3678, 0xf10c, 0xd014, 0x0, 0x0);
        gbc.writeMem(0xc520, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x35e6, gbc.sp());
        EXPECT(0xc522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc520));
        EXPECT(0xb1, gbc.readMem(0xc521));
        // CB B1 0075
        gbc.setState(0x317d, 0x1010, 0xd2d0, 0xb625, 0x44f1, 0xfcd7, 0x0, 0x0);
        gbc.writeMem(0x317d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1010, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0076
        gbc.setState(0x1f11, 0x51e9, 0x7d50, 0xf9e8, 0x808e, 0x3f20, 0x1, 0x1);
        gbc.writeMem(0x1f11, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x51e9, gbc.sp());
        EXPECT(0x1f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0077
        gbc.setState(0x1916, 0x5921, 0x88e0, 0xd9d4, 0xf4e2, 0xa805, 0x0, 0x0);
        gbc.writeMem(0x1916, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0x1918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0078
        gbc.setState(0xb62, 0x8d65, 0x7c60, 0x34e3, 0xab91, 0x6dd, 0x1, 0x0);
        gbc.writeMem(0xb62, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8d65, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0079
        gbc.setState(0x5f7d, 0xcfb4, 0x64d0, 0x5951, 0xe1e3, 0xb43e, 0x1, 0x1);
        gbc.writeMem(0x5f7d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0x5f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 007A
        gbc.setState(0x28d9, 0x466d, 0x4e50, 0x185, 0xd70e, 0xe0eb, 0x1, 0x0);
        gbc.writeMem(0x28d9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x466d, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 007B
        gbc.setState(0xcdf0, 0x6ab4, 0x4d80, 0x5603, 0xec3c, 0x4a5f, 0x0, 0x1);
        gbc.writeMem(0xcdf0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0xcdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf0));
        EXPECT(0xb1, gbc.readMem(0xcdf1));
        // CB B1 007C
        gbc.setState(0x4014, 0x6890, 0x8f90, 0xdabe, 0xc681, 0x5b79, 0x0, 0x0);
        gbc.writeMem(0x4014, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6890, gbc.sp());
        EXPECT(0x4016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 007D
        gbc.setState(0x2539, 0x3b90, 0xbd0, 0x86e, 0x7239, 0xf9ad, 0x1, 0x0);
        gbc.writeMem(0x2539, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0x253b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 007E
        gbc.setState(0x776b, 0x2a64, 0xca40, 0xe490, 0x27e0, 0x105b, 0x0, 0x1);
        gbc.writeMem(0x776b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0x776d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0080
        gbc.setState(0x5063, 0x1301, 0xd980, 0xe9d6, 0x3c95, 0xc7fc, 0x1, 0x1);
        gbc.writeMem(0x5063, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1301, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0081
        gbc.setState(0xd2bf, 0x344b, 0x3230, 0x2f3a, 0x79e4, 0x53ad, 0x1, 0x1);
        gbc.writeMem(0xd2bf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0xd2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bf));
        EXPECT(0xb1, gbc.readMem(0xd2c0));
        // CB B1 0082
        gbc.setState(0x15e5, 0x623c, 0x8ad0, 0x3f61, 0xfbe6, 0x5830, 0x0, 0x0);
        gbc.writeMem(0x15e5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0083
        gbc.setState(0x5229, 0xe804, 0xaf0, 0x7dbb, 0xb15f, 0xc6df, 0x0, 0x0);
        gbc.writeMem(0x5229, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe804, gbc.sp());
        EXPECT(0x522b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0084
        gbc.setState(0x96cf, 0x9d52, 0xa0c0, 0x7cbc, 0x23c7, 0x19ce, 0x0, 0x0);
        gbc.writeMem(0x96cf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x96d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cf));
        EXPECT(0xb1, gbc.readMem(0x96d0));
        // CB B1 0085
        gbc.setState(0xb75a, 0x481f, 0xb050, 0xa813, 0x1e80, 0x98c1, 0x0, 0x1);
        gbc.writeMem(0xb75a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0xb75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75a));
        EXPECT(0xb1, gbc.readMem(0xb75b));
        // CB B1 0086
        gbc.setState(0x5e26, 0x3027, 0x8ab0, 0x8a3, 0x82f4, 0x9c0a, 0x0, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3027, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0087
        gbc.setState(0x4cad, 0x8b28, 0xf840, 0xc07e, 0xff0c, 0x76be, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8b28, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0088
        gbc.setState(0xb925, 0x17d9, 0x9010, 0xd98a, 0xf71e, 0x5067, 0x0, 0x1);
        gbc.writeMem(0xb925, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x17d9, gbc.sp());
        EXPECT(0xb927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb925));
        EXPECT(0xb1, gbc.readMem(0xb926));
        // CB B1 0089
        gbc.setState(0xd891, 0x2027, 0x30b0, 0x560c, 0xcde6, 0xdce0, 0x0, 0x0);
        gbc.writeMem(0xd891, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2027, gbc.sp());
        EXPECT(0xd893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd891));
        EXPECT(0xb1, gbc.readMem(0xd892));
        // CB B1 008A
        gbc.setState(0x737b, 0x30bf, 0xc550, 0x14e5, 0xc2f9, 0x9ff9, 0x1, 0x1);
        gbc.writeMem(0x737b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x30bf, gbc.sp());
        EXPECT(0x737d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 008B
        gbc.setState(0xe7fd, 0x4c7d, 0x13c0, 0x3520, 0xc8b, 0xf63f, 0x0, 0x1);
        gbc.writeMem(0xe7fd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4c7d, gbc.sp());
        EXPECT(0xe7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fd));
        EXPECT(0xb1, gbc.readMem(0xe7fe));
        // CB B1 008C
        gbc.setState(0x2c2f, 0x56e2, 0xca70, 0xd226, 0x7c17, 0x12da, 0x1, 0x0);
        gbc.writeMem(0x2c2f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x56e2, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 008D
        gbc.setState(0xdac2, 0xaa60, 0x4f20, 0x4b94, 0xb79f, 0xed8, 0x0, 0x1);
        gbc.writeMem(0xdac2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0xdac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac2));
        EXPECT(0xb1, gbc.readMem(0xdac3));
        // CB B1 008E
        gbc.setState(0x7a5f, 0xa16d, 0xe350, 0x1d4c, 0x1d12, 0x11c4, 0x0, 0x1);
        gbc.writeMem(0x7a5f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x7a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 008F
        gbc.setState(0x1f6e, 0xd55c, 0x3220, 0x1b22, 0xd5da, 0x35f1, 0x1, 0x1);
        gbc.writeMem(0x1f6e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd55c, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0090
        gbc.setState(0xb12a, 0xe119, 0xbbf0, 0x3214, 0x9126, 0xf480, 0x1, 0x1);
        gbc.writeMem(0xb12a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe119, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12a));
        EXPECT(0xb1, gbc.readMem(0xb12b));
        // CB B1 0091
        gbc.setState(0x464d, 0xa6e4, 0xb5d0, 0xec71, 0x118c, 0xe47, 0x0, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa6e4, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0092
        gbc.setState(0x46d0, 0x38ed, 0xb720, 0x5db2, 0xe287, 0xb7b, 0x0, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0x46d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0093
        gbc.setState(0xd368, 0x7fe1, 0x3130, 0xc735, 0xd6f7, 0x7a6d, 0x0, 0x1);
        gbc.writeMem(0xd368, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd368));
        EXPECT(0xb1, gbc.readMem(0xd369));
        // CB B1 0094
        gbc.setState(0x52e6, 0x72e7, 0x72b0, 0x91e2, 0x2d28, 0xe243, 0x1, 0x0);
        gbc.writeMem(0x52e6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x52e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0095
        gbc.setState(0xca2, 0x3f9e, 0xe370, 0x6e0, 0x83b9, 0x56fc, 0x1, 0x0);
        gbc.writeMem(0xca2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3f9e, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0096
        gbc.setState(0x42d1, 0x79e7, 0x5910, 0x768e, 0x65cb, 0x8840, 0x1, 0x0);
        gbc.writeMem(0x42d1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x79e7, gbc.sp());
        EXPECT(0x42d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0097
        gbc.setState(0x92c2, 0x8946, 0x57a0, 0x9a5b, 0x60c0, 0xb634, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c2));
        EXPECT(0xb1, gbc.readMem(0x92c3));
        // CB B1 0098
        gbc.setState(0xdd9f, 0x5bc6, 0xaf0, 0xe785, 0x700f, 0x6e7e, 0x1, 0x0);
        gbc.writeMem(0xdd9f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5bc6, gbc.sp());
        EXPECT(0xdda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9f));
        EXPECT(0xb1, gbc.readMem(0xdda0));
        // CB B1 0099
        gbc.setState(0xc2bc, 0x59b, 0xf9d0, 0xd4c2, 0x82bb, 0x1db8, 0x1, 0x1);
        gbc.writeMem(0xc2bc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x59b, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0xb1, gbc.readMem(0xc2bd));
        // CB B1 009A
        gbc.setState(0xee9, 0x990f, 0x3b00, 0x7df5, 0xd3d8, 0x71ac, 0x1, 0x1);
        gbc.writeMem(0xee9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0xeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 009B
        gbc.setState(0x7f9, 0xef02, 0x6260, 0xcaf1, 0x26d0, 0xf1d7, 0x1, 0x0);
        gbc.writeMem(0x7f9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xef02, gbc.sp());
        EXPECT(0x7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 009C
        gbc.setState(0xd88f, 0x4a04, 0x49e0, 0x4af2, 0xb212, 0xd67c, 0x1, 0x1);
        gbc.writeMem(0xd88f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4a04, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88f));
        EXPECT(0xb1, gbc.readMem(0xd890));
        // CB B1 009D
        gbc.setState(0xb876, 0x3965, 0x8920, 0xa723, 0x4c93, 0xcab7, 0x1, 0x0);
        gbc.writeMem(0xb876, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3965, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb876));
        EXPECT(0xb1, gbc.readMem(0xb877));
        // CB B1 009E
        gbc.setState(0x8492, 0xc8b3, 0x8f20, 0xbdf6, 0xb559, 0xf3c5, 0x0, 0x0);
        gbc.writeMem(0x8492, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc8b3, gbc.sp());
        EXPECT(0x8494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8492));
        EXPECT(0xb1, gbc.readMem(0x8493));
        // CB B1 00A0
        gbc.setState(0xac57, 0x99b9, 0x1d20, 0x92ac, 0x378e, 0x9209, 0x0, 0x1);
        gbc.writeMem(0xac57, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x99b9, gbc.sp());
        EXPECT(0xac59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac57));
        EXPECT(0xb1, gbc.readMem(0xac58));
        // CB B1 00A1
        gbc.setState(0x433c, 0x3e0f, 0xb5c0, 0xbe93, 0x4fdd, 0x25b, 0x1, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3e0f, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00A2
        gbc.setState(0x1e71, 0x3885, 0x9a40, 0xc333, 0x7138, 0xb62b, 0x1, 0x1);
        gbc.writeMem(0x1e71, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3885, gbc.sp());
        EXPECT(0x1e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00A3
        gbc.setState(0x15a4, 0xb75e, 0xc5f0, 0xeea7, 0x8f73, 0x4e07, 0x1, 0x1);
        gbc.writeMem(0x15a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00A4
        gbc.setState(0xc85, 0xac29, 0xb880, 0x9490, 0x6632, 0x887e, 0x0, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00A5
        gbc.setState(0x76b5, 0xa411, 0xb000, 0xf34b, 0xb8dc, 0x2ee6, 0x0, 0x0);
        gbc.writeMem(0x76b5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0x76b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00A6
        gbc.setState(0x9e6c, 0xb21e, 0x2370, 0xec4a, 0x1b9d, 0x628d, 0x1, 0x0);
        gbc.writeMem(0x9e6c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0x9e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6c));
        EXPECT(0xb1, gbc.readMem(0x9e6d));
        // CB B1 00A7
        gbc.setState(0x9656, 0x74b4, 0xd340, 0x7ecb, 0x4697, 0xc00b, 0x0, 0x1);
        gbc.writeMem(0x9656, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x74b4, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9656));
        EXPECT(0xb1, gbc.readMem(0x9657));
        // CB B1 00A8
        gbc.setState(0x11d8, 0xb312, 0x5f80, 0x3c96, 0x476b, 0xe9a8, 0x0, 0x0);
        gbc.writeMem(0x11d8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb312, gbc.sp());
        EXPECT(0x11da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00A9
        gbc.setState(0x78c0, 0xbdfc, 0x6cf0, 0x5886, 0x541a, 0x5008, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00AA
        gbc.setState(0x6c3a, 0xf59c, 0x1710, 0xd2fc, 0xcdfb, 0x36a3, 0x0, 0x0);
        gbc.writeMem(0x6c3a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00AB
        gbc.setState(0x2151, 0x57e1, 0x4e10, 0xacd5, 0x5d86, 0xcafd, 0x1, 0x1);
        gbc.writeMem(0x2151, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00AC
        gbc.setState(0x5b38, 0x5681, 0xcd30, 0xfa99, 0xb86e, 0x47d8, 0x1, 0x0);
        gbc.writeMem(0x5b38, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5681, gbc.sp());
        EXPECT(0x5b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00AD
        gbc.setState(0x14d3, 0x4354, 0x37b0, 0x85bc, 0x1a73, 0x55b5, 0x0, 0x1);
        gbc.writeMem(0x14d3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00AE
        gbc.setState(0x3727, 0xb073, 0xbe40, 0xa7c6, 0x1691, 0x2a5d, 0x1, 0x1);
        gbc.writeMem(0x3727, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb073, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00AF
        gbc.setState(0xd21d, 0x4904, 0xf180, 0x9e8c, 0x44fb, 0xb83c, 0x1, 0x1);
        gbc.writeMem(0xd21d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4904, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21d));
        EXPECT(0xb1, gbc.readMem(0xd21e));
        // CB B1 00B0
        gbc.setState(0xec9b, 0xe7d0, 0x6e30, 0x4bb1, 0x359a, 0xa8cb, 0x1, 0x0);
        gbc.writeMem(0xec9b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe7d0, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9b));
        EXPECT(0xb1, gbc.readMem(0xec9c));
        // CB B1 00B1
        gbc.setState(0xb865, 0xf32a, 0xf490, 0x7aa4, 0x3134, 0xa209, 0x0, 0x0);
        gbc.writeMem(0xb865, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb865));
        EXPECT(0xb1, gbc.readMem(0xb866));
        // CB B1 00B2
        gbc.setState(0x2c20, 0x6e22, 0x4df0, 0x59e2, 0x9a93, 0xd770, 0x1, 0x0);
        gbc.writeMem(0x2c20, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00B3
        gbc.setState(0x2fbe, 0x740c, 0xf650, 0xbdec, 0xfd91, 0xec49, 0x0, 0x0);
        gbc.writeMem(0x2fbe, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x740c, gbc.sp());
        EXPECT(0x2fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00B4
        gbc.setState(0x3d01, 0xdcb5, 0xca50, 0x846f, 0x3c6c, 0x4c02, 0x0, 0x1);
        gbc.writeMem(0x3d01, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x3d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00B5
        gbc.setState(0xc12b, 0xd3fd, 0xdec0, 0xe5a9, 0xb6ad, 0x7af9, 0x1, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd3fd, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0xb1, gbc.readMem(0xc12c));
        // CB B1 00B8
        gbc.setState(0x1f6e, 0x3205, 0xcb20, 0x56aa, 0xd2b9, 0x1a0b, 0x1, 0x0);
        gbc.writeMem(0x1f6e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3205, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00B9
        gbc.setState(0x9dab, 0x7277, 0x80c0, 0xa0b3, 0x8e03, 0xf7ae, 0x1, 0x0);
        gbc.writeMem(0x9dab, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dab));
        EXPECT(0xb1, gbc.readMem(0x9dac));
        // CB B1 00BA
        gbc.setState(0x1bbf, 0x2231, 0xf160, 0xe41f, 0x88de, 0xb52e, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2231, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00BB
        gbc.setState(0x2a2a, 0xba9e, 0x62b0, 0x7e62, 0x6b03, 0xbcac, 0x1, 0x1);
        gbc.writeMem(0x2a2a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xba9e, gbc.sp());
        EXPECT(0x2a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00BD
        gbc.setState(0x40ee, 0xb1a8, 0x5530, 0x7379, 0x21d5, 0x7bde, 0x1, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00BE
        gbc.setState(0xd196, 0x9127, 0x10, 0xd437, 0x1970, 0xf59d, 0x0, 0x0);
        gbc.writeMem(0xd196, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9127, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd196));
        EXPECT(0xb1, gbc.readMem(0xd197));
        // CB B1 00BF
        gbc.setState(0x1d45, 0xeb67, 0x8c0, 0x7d43, 0x7b6d, 0x3c0a, 0x0, 0x1);
        gbc.writeMem(0x1d45, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00C0
        gbc.setState(0x8989, 0x7aa1, 0x75f0, 0x95db, 0x848, 0xdbfc, 0x1, 0x0);
        gbc.writeMem(0x8989, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0x898b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8989));
        EXPECT(0xb1, gbc.readMem(0x898a));
        // CB B1 00C1
        gbc.setState(0x629a, 0xb52e, 0x1a60, 0xc6c7, 0x1e1f, 0x73e7, 0x0, 0x0);
        gbc.writeMem(0x629a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0x629c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00C2
        gbc.setState(0x48f8, 0xbe92, 0x28f0, 0xdbc0, 0x954e, 0x4b04, 0x0, 0x1);
        gbc.writeMem(0x48f8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbe92, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00C3
        gbc.setState(0xa459, 0x8581, 0xd490, 0xeb6d, 0x7fcb, 0x2367, 0x0, 0x0);
        gbc.writeMem(0xa459, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa459));
        EXPECT(0xb1, gbc.readMem(0xa45a));
        // CB B1 00C4
        gbc.setState(0xd860, 0x9f96, 0x8560, 0xd804, 0x2eb6, 0xb316, 0x1, 0x0);
        gbc.writeMem(0xd860, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd860));
        EXPECT(0xb1, gbc.readMem(0xd861));
        // CB B1 00C6
        gbc.setState(0x8c9a, 0x3bd1, 0x6fa0, 0xe774, 0x3bbe, 0x480f, 0x0, 0x0);
        gbc.writeMem(0x8c9a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3bd1, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9a));
        EXPECT(0xb1, gbc.readMem(0x8c9b));
        // CB B1 00C7
        gbc.setState(0x6eb3, 0x1067, 0xf720, 0xb26b, 0xe460, 0x42dd, 0x1, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1067, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00C8
        gbc.setState(0x1e4a, 0x6c51, 0xf390, 0xcfbe, 0x405e, 0x183b, 0x0, 0x1);
        gbc.writeMem(0x1e4a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c51, gbc.sp());
        EXPECT(0x1e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00C9
        gbc.setState(0x75f, 0x97c8, 0xff60, 0x9753, 0xb081, 0x2cac, 0x1, 0x1);
        gbc.writeMem(0x75f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x97c8, gbc.sp());
        EXPECT(0x761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00CB
        gbc.setState(0x3b0f, 0xaf13, 0x4b90, 0x8260, 0xe106, 0xda98, 0x1, 0x0);
        gbc.writeMem(0x3b0f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00CC
        gbc.setState(0xac41, 0x34f7, 0x2800, 0x4028, 0x7bdf, 0x234, 0x0, 0x1);
        gbc.writeMem(0xac41, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x34f7, gbc.sp());
        EXPECT(0xac43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac41));
        EXPECT(0xb1, gbc.readMem(0xac42));
        // CB B1 00CD
        gbc.setState(0x78a2, 0x5306, 0xa90, 0x2d0e, 0x5cf1, 0x8367, 0x1, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00CE
        gbc.setState(0x15de, 0x4c7, 0x9780, 0x4ee0, 0x2ed4, 0xa8f1, 0x1, 0x1);
        gbc.writeMem(0x15de, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4c7, gbc.sp());
        EXPECT(0x15e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00CF
        gbc.setState(0x1978, 0xca75, 0xe2e0, 0xad49, 0x8daf, 0x429e, 0x1, 0x1);
        gbc.writeMem(0x1978, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xca75, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00D0
        gbc.setState(0x2026, 0x46c9, 0x9b0, 0xe163, 0x3130, 0xd15f, 0x1, 0x1);
        gbc.writeMem(0x2026, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x2028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00D1
        gbc.setState(0x502e, 0x5390, 0x68d0, 0xfe36, 0xd89d, 0xe448, 0x1, 0x1);
        gbc.writeMem(0x502e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00D2
        gbc.setState(0xb934, 0xfa49, 0x1240, 0x7e96, 0x6e34, 0x3acc, 0x0, 0x0);
        gbc.writeMem(0xb934, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfa49, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0xb1, gbc.readMem(0xb935));
        // CB B1 00D3
        gbc.setState(0x2459, 0xa74e, 0xf410, 0x4fd1, 0xed88, 0x59c9, 0x0, 0x1);
        gbc.writeMem(0x2459, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa74e, gbc.sp());
        EXPECT(0x245b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00D4
        gbc.setState(0x7aee, 0x4b3c, 0x5020, 0x3280, 0x7222, 0x1502, 0x0, 0x1);
        gbc.writeMem(0x7aee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4b3c, gbc.sp());
        EXPECT(0x7af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00D5
        gbc.setState(0x2fc9, 0x7ad, 0xaa40, 0xeb53, 0xe4bf, 0xf89b, 0x0, 0x0);
        gbc.writeMem(0x2fc9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00D6
        gbc.setState(0x5268, 0xc980, 0xc200, 0x9ecf, 0x7af2, 0xa54, 0x0, 0x0);
        gbc.writeMem(0x5268, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc980, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00D7
        gbc.setState(0x60a2, 0xbe31, 0x84b0, 0x2bde, 0x590d, 0x419f, 0x0, 0x1);
        gbc.writeMem(0x60a2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbe31, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00D8
        gbc.setState(0x7339, 0x331d, 0x34c0, 0x92a4, 0x77e8, 0x1ddb, 0x1, 0x1);
        gbc.writeMem(0x7339, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x331d, gbc.sp());
        EXPECT(0x733b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00D9
        gbc.setState(0x3ccc, 0x55a, 0xcd30, 0x914f, 0xde7a, 0xb43d, 0x0, 0x0);
        gbc.writeMem(0x3ccc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0x3cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00DA
        gbc.setState(0xa613, 0xac7e, 0x7d40, 0x8e16, 0x26fc, 0x1a9, 0x1, 0x0);
        gbc.writeMem(0xa613, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xac7e, gbc.sp());
        EXPECT(0xa615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa613));
        EXPECT(0xb1, gbc.readMem(0xa614));
        // CB B1 00DB
        gbc.setState(0x360b, 0x576c, 0x9250, 0xeb99, 0xe0e2, 0x1e98, 0x0, 0x1);
        gbc.writeMem(0x360b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x576c, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00DC
        gbc.setState(0xeb05, 0xede6, 0x3ea0, 0x33a, 0xc0dc, 0x894c, 0x0, 0x0);
        gbc.writeMem(0xeb05, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xede6, gbc.sp());
        EXPECT(0xeb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb05));
        EXPECT(0xb1, gbc.readMem(0xeb06));
        // CB B1 00DD
        gbc.setState(0xeced, 0x7c80, 0xd430, 0x56c2, 0xede6, 0x1bee, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c80, gbc.sp());
        EXPECT(0xecef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeced));
        EXPECT(0xb1, gbc.readMem(0xecee));
        // CB B1 00DE
        gbc.setState(0x9468, 0xdbec, 0x98a0, 0x9ff, 0xd87a, 0x651c, 0x0, 0x0);
        gbc.writeMem(0x9468, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdbec, gbc.sp());
        EXPECT(0x946a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9468));
        EXPECT(0xb1, gbc.readMem(0x9469));
        // CB B1 00DF
        gbc.setState(0xc794, 0x23e, 0xb980, 0x9875, 0xf88c, 0xf942, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc794));
        EXPECT(0xb1, gbc.readMem(0xc795));
        // CB B1 00E0
        gbc.setState(0x2af9, 0x5f13, 0x25f0, 0xc849, 0xfc7e, 0x8844, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5f13, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00E1
        gbc.setState(0x6862, 0x8e8c, 0xee80, 0xb556, 0x21ca, 0x6ed6, 0x1, 0x0);
        gbc.writeMem(0x6862, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00E2
        gbc.setState(0xe99f, 0x2f13, 0xdfd0, 0xfd6a, 0xcb9e, 0xa80b, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2f13, gbc.sp());
        EXPECT(0xe9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99f));
        EXPECT(0xb1, gbc.readMem(0xe9a0));
        // CB B1 00E3
        gbc.setState(0xb840, 0x2e0b, 0xa8a0, 0x505d, 0x24bf, 0x7df7, 0x1, 0x1);
        gbc.writeMem(0xb840, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2e0b, gbc.sp());
        EXPECT(0xb842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb840));
        EXPECT(0xb1, gbc.readMem(0xb841));
        // CB B1 00E4
        gbc.setState(0xa99f, 0xb556, 0x2820, 0x5f3e, 0x2706, 0x46dc, 0x1, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb556, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0xb1, gbc.readMem(0xa9a0));
        // CB B1 00E5
        gbc.setState(0x6722, 0xf828, 0xe6a0, 0xf26, 0x9327, 0x9, 0x1, 0x0);
        gbc.writeMem(0x6722, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00E6
        gbc.setState(0x70d6, 0xa130, 0x6f90, 0x67bf, 0xcb71, 0x2728, 0x1, 0x0);
        gbc.writeMem(0x70d6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0x70d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00E7
        gbc.setState(0xaaff, 0x73a2, 0xfd90, 0x2006, 0xb9a5, 0x9f13, 0x0, 0x0);
        gbc.writeMem(0xaaff, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x73a2, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaff));
        EXPECT(0xb1, gbc.readMem(0xab00));
        // CB B1 00E8
        gbc.setState(0x66b0, 0xb59e, 0x190, 0xbdbf, 0xd3e5, 0x20e1, 0x0, 0x0);
        gbc.writeMem(0x66b0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0x66b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00EA
        gbc.setState(0x81c8, 0x8bb3, 0xfaa0, 0xbc48, 0x4f3e, 0xfa3b, 0x0, 0x0);
        gbc.writeMem(0x81c8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c8));
        EXPECT(0xb1, gbc.readMem(0x81c9));
        // CB B1 00EB
        gbc.setState(0xc696, 0x738a, 0xc9d0, 0xac0e, 0x88a2, 0xd11d, 0x1, 0x1);
        gbc.writeMem(0xc696, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x738a, gbc.sp());
        EXPECT(0xc698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc696));
        EXPECT(0xb1, gbc.readMem(0xc697));
        // CB B1 00EC
        gbc.setState(0x1e52, 0x6e8b, 0xa00, 0x2432, 0xc824, 0x79f8, 0x0, 0x1);
        gbc.writeMem(0x1e52, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6e8b, gbc.sp());
        EXPECT(0x1e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00ED
        gbc.setState(0x81ba, 0xa6f1, 0x100, 0xdccf, 0xe273, 0x2844, 0x0, 0x1);
        gbc.writeMem(0x81ba, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa6f1, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ba));
        EXPECT(0xb1, gbc.readMem(0x81bb));
        // CB B1 00EE
        gbc.setState(0xdf42, 0xe6bd, 0x60e0, 0xdf40, 0x673e, 0xf5a0, 0x1, 0x1);
        gbc.writeMem(0xdf42, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe6bd, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf42));
        EXPECT(0xb1, gbc.readMem(0xdf43));
        // CB B1 00F0
        gbc.setState(0xcf6d, 0x60b4, 0xd010, 0x4835, 0x1be8, 0x63a0, 0x0, 0x0);
        gbc.writeMem(0xcf6d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0xcf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6d));
        EXPECT(0xb1, gbc.readMem(0xcf6e));
        // CB B1 00F1
        gbc.setState(0x98bb, 0x3d56, 0x490, 0x18f7, 0x287b, 0xc824, 0x0, 0x1);
        gbc.writeMem(0x98bb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0xb1, gbc.readMem(0x98bc));
        // CB B1 00F2
        gbc.setState(0x28cb, 0xae6e, 0xac40, 0x71d8, 0x95ee, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0x28cb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0x28cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00F4
        gbc.setState(0x17c6, 0xcaa4, 0xf8b0, 0xb692, 0xb09c, 0xabbc, 0x0, 0x1);
        gbc.writeMem(0x17c6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 00F6
        gbc.setState(0xdd5b, 0xe18a, 0xd070, 0xc2ff, 0xd1e0, 0x2191, 0x0, 0x1);
        gbc.writeMem(0xdd5b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0xdd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5b));
        EXPECT(0xb1, gbc.readMem(0xdd5c));
        // CB B1 00F7
        gbc.setState(0xe50d, 0x3b1, 0x9220, 0xadbc, 0x2f8d, 0xc81c, 0x1, 0x1);
        gbc.writeMem(0xe50d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3b1, gbc.sp());
        EXPECT(0xe50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50d));
        EXPECT(0xb1, gbc.readMem(0xe50e));
        // CB B1 00F8
        gbc.setState(0x783c, 0x48a4, 0x560, 0x98ed, 0x9e3e, 0xe191, 0x1, 0x0);
        gbc.writeMem(0x783c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x48a4, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00F9
        gbc.setState(0xe62d, 0x4a7b, 0x3130, 0x9937, 0x7b33, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xe62d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0xe62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62d));
        EXPECT(0xb1, gbc.readMem(0xe62e));
        // CB B1 00FA
        gbc.setState(0xc9e9, 0x6866, 0x87b0, 0x26e8, 0x2c23, 0xaf0c, 0x1, 0x0);
        gbc.writeMem(0xc9e9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0xc9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e9));
        EXPECT(0xb1, gbc.readMem(0xc9ea));
        // CB B1 00FC
        gbc.setState(0xce6b, 0x6226, 0xb5b0, 0xa15a, 0x3b41, 0xeaae, 0x1, 0x1);
        gbc.writeMem(0xce6b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6b));
        EXPECT(0xb1, gbc.readMem(0xce6c));
        // CB B1 00FD
        gbc.setState(0x53ad, 0xf0a1, 0x4b00, 0x5708, 0x1020, 0xe45a, 0x1, 0x1);
        gbc.writeMem(0x53ad, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf0a1, gbc.sp());
        EXPECT(0x53af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 00FE
        gbc.setState(0xa031, 0x8357, 0x4140, 0xa3db, 0xff16, 0xc413, 0x0, 0x1);
        gbc.writeMem(0xa031, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8357, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa031));
        EXPECT(0xb1, gbc.readMem(0xa032));
        // CB B1 00FF
        gbc.setState(0xd14d, 0x5e3c, 0xc010, 0xeb61, 0xa025, 0xde2f, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14d));
        EXPECT(0xb1, gbc.readMem(0xd14e));
        // CB B1 0100
        gbc.setState(0x35ac, 0xfe67, 0x9120, 0xe204, 0x9ea9, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0x35ac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfe67, gbc.sp());
        EXPECT(0x35ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0101
        gbc.setState(0x4ef7, 0x1fff, 0x6950, 0x6fa4, 0xfc03, 0x7261, 0x0, 0x1);
        gbc.writeMem(0x4ef7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0x4ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0102
        gbc.setState(0x9f38, 0x3599, 0xff00, 0x2ad5, 0x5485, 0x8b3f, 0x0, 0x1);
        gbc.writeMem(0x9f38, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3599, gbc.sp());
        EXPECT(0x9f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f38));
        EXPECT(0xb1, gbc.readMem(0x9f39));
        // CB B1 0103
        gbc.setState(0x38f1, 0xfe2d, 0x96d0, 0x90ee, 0xaa67, 0x1156, 0x0, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0104
        gbc.setState(0x3359, 0x33e3, 0x1df0, 0xf43c, 0x8fb8, 0x5962, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0x335b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0105
        gbc.setState(0x8e23, 0x1dc7, 0x1ff0, 0xc5ab, 0xed67, 0xe1cb, 0x0, 0x1);
        gbc.writeMem(0x8e23, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0x8e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e23));
        EXPECT(0xb1, gbc.readMem(0x8e24));
        // CB B1 0106
        gbc.setState(0x4c9b, 0x1644, 0x5830, 0x5c6b, 0x3e6e, 0x1faa, 0x1, 0x1);
        gbc.writeMem(0x4c9b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1644, gbc.sp());
        EXPECT(0x4c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0107
        gbc.setState(0x14d3, 0x7004, 0x2260, 0xf05e, 0xb7a7, 0xafaf, 0x1, 0x0);
        gbc.writeMem(0x14d3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7004, gbc.sp());
        EXPECT(0x14d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0108
        gbc.setState(0x593f, 0x6c11, 0xee10, 0xccb5, 0x8abd, 0xcffb, 0x0, 0x0);
        gbc.writeMem(0x593f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6c11, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0109
        gbc.setState(0x963e, 0xf2eb, 0xc080, 0x4d4, 0x4314, 0x5257, 0x0, 0x1);
        gbc.writeMem(0x963e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x9640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963e));
        EXPECT(0xb1, gbc.readMem(0x963f));
        // CB B1 010A
        gbc.setState(0x58df, 0xdd8d, 0x2f20, 0x6908, 0x5bc7, 0x5751, 0x1, 0x0);
        gbc.writeMem(0x58df, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdd8d, gbc.sp());
        EXPECT(0x58e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 010B
        gbc.setState(0xcf79, 0xb626, 0x38d0, 0xdc3d, 0x3454, 0x5c2e, 0x1, 0x1);
        gbc.writeMem(0xcf79, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb626, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf79));
        EXPECT(0xb1, gbc.readMem(0xcf7a));
        // CB B1 010C
        gbc.setState(0xef7c, 0x2b89, 0x10d0, 0xd540, 0xd37a, 0xf82, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7c));
        EXPECT(0xb1, gbc.readMem(0xef7d));
        // CB B1 010D
        gbc.setState(0x42d4, 0xc4d0, 0x5240, 0x2b9, 0xa300, 0xecfe, 0x0, 0x0);
        gbc.writeMem(0x42d4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc4d0, gbc.sp());
        EXPECT(0x42d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 010E
        gbc.setState(0x2555, 0xbe56, 0x4740, 0x8ac3, 0xfd39, 0x90fe, 0x0, 0x1);
        gbc.writeMem(0x2555, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0x2557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 010F
        gbc.setState(0xc3d0, 0x739e, 0x39e0, 0xfd0c, 0xa14, 0x5125, 0x1, 0x0);
        gbc.writeMem(0xc3d0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x739e, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d0));
        EXPECT(0xb1, gbc.readMem(0xc3d1));
        // CB B1 0110
        gbc.setState(0x7980, 0xbb57, 0xb1c0, 0xc1b9, 0xe418, 0x6f32, 0x0, 0x0);
        gbc.writeMem(0x7980, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0111
        gbc.setState(0xde58, 0xaa23, 0x6400, 0xd2d0, 0xace1, 0x437b, 0x1, 0x0);
        gbc.writeMem(0xde58, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde58));
        EXPECT(0xb1, gbc.readMem(0xde59));
        // CB B1 0112
        gbc.setState(0x5fd3, 0x4ef1, 0xed60, 0x45d9, 0xc6d1, 0xa5e8, 0x0, 0x0);
        gbc.writeMem(0x5fd3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ef1, gbc.sp());
        EXPECT(0x5fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0114
        gbc.setState(0x7eeb, 0x34e3, 0x9900, 0x5698, 0xc421, 0x482e, 0x0, 0x0);
        gbc.writeMem(0x7eeb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x34e3, gbc.sp());
        EXPECT(0x7eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0115
        gbc.setState(0x63fc, 0x2021, 0x5be0, 0x2747, 0x20e5, 0x22c2, 0x0, 0x0);
        gbc.writeMem(0x63fc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2021, gbc.sp());
        EXPECT(0x63fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0116
        gbc.setState(0x4fac, 0xa90, 0x70f0, 0x53e6, 0x961c, 0x88c9, 0x0, 0x0);
        gbc.writeMem(0x4fac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0x4fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0117
        gbc.setState(0x6017, 0x33e7, 0x74a0, 0xb070, 0x101f, 0xd4c2, 0x1, 0x0);
        gbc.writeMem(0x6017, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x33e7, gbc.sp());
        EXPECT(0x6019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0118
        gbc.setState(0x20ae, 0xf86f, 0x4980, 0xdf8f, 0x6ba4, 0x5f1f, 0x1, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x20b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0119
        gbc.setState(0x57a6, 0x9e1c, 0xe2c0, 0x130b, 0xcb50, 0x846c, 0x1, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0x57a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 011A
        gbc.setState(0x72d6, 0xdcd0, 0xbf80, 0xa451, 0x185c, 0xd51, 0x1, 0x1);
        gbc.writeMem(0x72d6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdcd0, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 011B
        gbc.setState(0x28b7, 0x1840, 0xe870, 0xe22d, 0x98b6, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0x28b7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0x28b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 011C
        gbc.setState(0x5664, 0x3871, 0x4330, 0xdb37, 0x4ec5, 0x4ebd, 0x0, 0x1);
        gbc.writeMem(0x5664, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0x5666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 011D
        gbc.setState(0x2d3a, 0xcbc0, 0x1920, 0xbe13, 0xf0d2, 0x80fa, 0x0, 0x1);
        gbc.writeMem(0x2d3a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0x2d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 011E
        gbc.setState(0xe5ac, 0xc60d, 0x26a0, 0xd74a, 0xd287, 0xf0e, 0x1, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0xb1, gbc.readMem(0xe5ad));
        // CB B1 011F
        gbc.setState(0x9576, 0x7a0d, 0x1460, 0x82fa, 0xf9ff, 0xed4c, 0x1, 0x1);
        gbc.writeMem(0x9576, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9576));
        EXPECT(0xb1, gbc.readMem(0x9577));
        // CB B1 0120
        gbc.setState(0xabd, 0x4825, 0x88c0, 0xcb76, 0xbb74, 0x1740, 0x1, 0x0);
        gbc.writeMem(0xabd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4825, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0121
        gbc.setState(0x20f6, 0x6127, 0x1c70, 0x1b49, 0x2c80, 0xbbd7, 0x0, 0x1);
        gbc.writeMem(0x20f6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6127, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0122
        gbc.setState(0x161e, 0x1c93, 0x3d20, 0x87b1, 0xd189, 0xda2f, 0x1, 0x1);
        gbc.writeMem(0x161e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1c93, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0123
        gbc.setState(0xe0ca, 0x1271, 0xb8c0, 0xa8aa, 0xc4bb, 0x28f6, 0x1, 0x1);
        gbc.writeMem(0xe0ca, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ca));
        EXPECT(0xb1, gbc.readMem(0xe0cb));
        // CB B1 0124
        gbc.setState(0x55f3, 0x2ed7, 0xc7a0, 0xfce0, 0xe449, 0xe12e, 0x0, 0x0);
        gbc.writeMem(0x55f3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x55f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0125
        gbc.setState(0x20b7, 0xece8, 0x2100, 0x98b3, 0x216, 0xff4c, 0x0, 0x0);
        gbc.writeMem(0x20b7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xece8, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0126
        gbc.setState(0x8437, 0xea9d, 0x840, 0xa88d, 0x528a, 0x2a95, 0x0, 0x0);
        gbc.writeMem(0x8437, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xea9d, gbc.sp());
        EXPECT(0x8439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8437));
        EXPECT(0xb1, gbc.readMem(0x8438));
        // CB B1 0127
        gbc.setState(0x9ef1, 0x91db, 0x17e0, 0x7f76, 0x979c, 0xd271, 0x0, 0x0);
        gbc.writeMem(0x9ef1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x91db, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef1));
        EXPECT(0xb1, gbc.readMem(0x9ef2));
        // CB B1 0128
        gbc.setState(0x4e14, 0x8538, 0xafc0, 0x707d, 0x82da, 0x99b, 0x1, 0x1);
        gbc.writeMem(0x4e14, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8538, gbc.sp());
        EXPECT(0x4e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0129
        gbc.setState(0xa9c2, 0x93d, 0xf300, 0xe22e, 0xad6c, 0x590f, 0x0, 0x0);
        gbc.writeMem(0xa9c2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x93d, gbc.sp());
        EXPECT(0xa9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c2));
        EXPECT(0xb1, gbc.readMem(0xa9c3));
        // CB B1 012A
        gbc.setState(0x27a9, 0x474d, 0x4160, 0xa548, 0x2b64, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0x27a9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x474d, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 012B
        gbc.setState(0xa6fe, 0xe91f, 0xfbd0, 0x4b76, 0x6875, 0xa0c6, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe91f, gbc.sp());
        EXPECT(0xa700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fe));
        EXPECT(0xb1, gbc.readMem(0xa6ff));
        // CB B1 012C
        gbc.setState(0xc2df, 0xd8c6, 0x36e0, 0x41e, 0x2d30, 0x7041, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd8c6, gbc.sp());
        EXPECT(0xc2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2df));
        EXPECT(0xb1, gbc.readMem(0xc2e0));
        // CB B1 012D
        gbc.setState(0xeb60, 0xc255, 0xa320, 0xaba8, 0xece1, 0xa1bd, 0x1, 0x0);
        gbc.writeMem(0xeb60, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc255, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0xb1, gbc.readMem(0xeb61));
        // CB B1 012E
        gbc.setState(0x7706, 0x57b5, 0x3cb0, 0xda53, 0x434e, 0x78de, 0x1, 0x0);
        gbc.writeMem(0x7706, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0x7708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 012F
        gbc.setState(0x4695, 0x46fe, 0x8210, 0xcfe0, 0xd67f, 0xb4ab, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x46fe, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0130
        gbc.setState(0xea5b, 0x70ef, 0x92d0, 0xfa69, 0x2fe3, 0x8181, 0x0, 0x0);
        gbc.writeMem(0xea5b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0xea5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5b));
        EXPECT(0xb1, gbc.readMem(0xea5c));
        // CB B1 0131
        gbc.setState(0x6f15, 0x2209, 0x77e0, 0x7c9d, 0x8377, 0xf1fb, 0x1, 0x0);
        gbc.writeMem(0x6f15, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2209, gbc.sp());
        EXPECT(0x6f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0132
        gbc.setState(0x6b61, 0xc453, 0xfbf0, 0xb696, 0x3feb, 0xd72b, 0x1, 0x1);
        gbc.writeMem(0x6b61, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc453, gbc.sp());
        EXPECT(0x6b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0133
        gbc.setState(0x5009, 0x35f9, 0x79b0, 0x45f8, 0xb96f, 0x859f, 0x0, 0x1);
        gbc.writeMem(0x5009, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x500b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0135
        gbc.setState(0x6618, 0xf169, 0xa7d0, 0x19ad, 0x12f5, 0x52f5, 0x0, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf169, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0136
        gbc.setState(0xd4d, 0x99b0, 0xe2a0, 0x7994, 0xb668, 0x8655, 0x1, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0137
        gbc.setState(0xb216, 0xed, 0xe490, 0x6f89, 0xa1df, 0x22a5, 0x0, 0x1);
        gbc.writeMem(0xb216, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed, gbc.sp());
        EXPECT(0xb218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb216));
        EXPECT(0xb1, gbc.readMem(0xb217));
        // CB B1 0138
        gbc.setState(0xb978, 0xafe3, 0x4340, 0x2732, 0x63b5, 0x46fd, 0x1, 0x1);
        gbc.writeMem(0xb978, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb978));
        EXPECT(0xb1, gbc.readMem(0xb979));
        // CB B1 0139
        gbc.setState(0x5e75, 0x3bb6, 0xcba0, 0x74e7, 0xee27, 0xf977, 0x0, 0x1);
        gbc.writeMem(0x5e75, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0x5e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 013A
        gbc.setState(0x945d, 0x65ed, 0xb370, 0xbec1, 0x2515, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0x945d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x65ed, gbc.sp());
        EXPECT(0x945f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945d));
        EXPECT(0xb1, gbc.readMem(0x945e));
        // CB B1 013C
        gbc.setState(0x34c0, 0x3336, 0x4530, 0x658d, 0x947e, 0x7085, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3336, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 013D
        gbc.setState(0xe3b3, 0x7208, 0x1f40, 0x54b9, 0xff71, 0xf284, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0xe3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b3));
        EXPECT(0xb1, gbc.readMem(0xe3b4));
        // CB B1 013E
        gbc.setState(0xd5d6, 0xd22a, 0x89b0, 0x6f2c, 0x893f, 0xf85b, 0x0, 0x0);
        gbc.writeMem(0xd5d6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd22a, gbc.sp());
        EXPECT(0xd5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d6));
        EXPECT(0xb1, gbc.readMem(0xd5d7));
        // CB B1 013F
        gbc.setState(0x30d4, 0x9c59, 0xd090, 0x1006, 0x286d, 0x8596, 0x1, 0x0);
        gbc.writeMem(0x30d4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9c59, gbc.sp());
        EXPECT(0x30d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0140
        gbc.setState(0x2216, 0x94e3, 0x33c0, 0xd244, 0xb71f, 0x65ee, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x94e3, gbc.sp());
        EXPECT(0x2218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0141
        gbc.setState(0x622f, 0xb018, 0xa10, 0x451a, 0xa82, 0xbb2a, 0x1, 0x0);
        gbc.writeMem(0x622f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb018, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0142
        gbc.setState(0xddbd, 0x35bc, 0x1200, 0x3723, 0xc6c8, 0x5704, 0x0, 0x1);
        gbc.writeMem(0xddbd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbd));
        EXPECT(0xb1, gbc.readMem(0xddbe));
        // CB B1 0144
        gbc.setState(0x7856, 0xbc9a, 0x44b0, 0xb34a, 0xe5e3, 0x2c92, 0x1, 0x0);
        gbc.writeMem(0x7856, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0145
        gbc.setState(0xc9e7, 0x2446, 0x950, 0xc454, 0x719, 0x160b, 0x1, 0x1);
        gbc.writeMem(0xc9e7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0xc9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e7));
        EXPECT(0xb1, gbc.readMem(0xc9e8));
        // CB B1 0146
        gbc.setState(0x18a4, 0x20d5, 0x7200, 0xea75, 0x5ef1, 0xbcd9, 0x0, 0x1);
        gbc.writeMem(0x18a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0x18a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0147
        gbc.setState(0xe814, 0xcec1, 0xfc80, 0xc687, 0xfe58, 0x7cb6, 0x0, 0x1);
        gbc.writeMem(0xe814, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe814));
        EXPECT(0xb1, gbc.readMem(0xe815));
        // CB B1 0148
        gbc.setState(0xcc26, 0x17fa, 0x7510, 0x6edc, 0xce35, 0xf239, 0x0, 0x0);
        gbc.writeMem(0xcc26, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x17fa, gbc.sp());
        EXPECT(0xcc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc26));
        EXPECT(0xb1, gbc.readMem(0xcc27));
        // CB B1 0149
        gbc.setState(0x37bf, 0x299, 0xc0b0, 0x1e92, 0x9a75, 0x11e7, 0x1, 0x1);
        gbc.writeMem(0x37bf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 014A
        gbc.setState(0xb77f, 0x3503, 0x6d0, 0xb511, 0xe12f, 0xa9dd, 0x1, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0xb1, gbc.readMem(0xb780));
        // CB B1 014B
        gbc.setState(0x591c, 0x3143, 0x3d30, 0x3e45, 0x946a, 0x3048, 0x1, 0x0);
        gbc.writeMem(0x591c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3143, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 014C
        gbc.setState(0x1b5c, 0xe469, 0x8c30, 0x3555, 0xca74, 0x1503, 0x1, 0x1);
        gbc.writeMem(0x1b5c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe469, gbc.sp());
        EXPECT(0x1b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 014D
        gbc.setState(0xa36f, 0x34d7, 0x77a0, 0x1574, 0x2259, 0xf04d, 0x1, 0x0);
        gbc.writeMem(0xa36f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x34d7, gbc.sp());
        EXPECT(0xa371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36f));
        EXPECT(0xb1, gbc.readMem(0xa370));
        // CB B1 014E
        gbc.setState(0x46c5, 0x1cf0, 0xefe0, 0x4729, 0x7b0d, 0x63c1, 0x0, 0x0);
        gbc.writeMem(0x46c5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1cf0, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 014F
        gbc.setState(0xae34, 0xa76d, 0x67d0, 0x2f6f, 0xa2a4, 0x2f3f, 0x1, 0x1);
        gbc.writeMem(0xae34, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa76d, gbc.sp());
        EXPECT(0xae36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae34));
        EXPECT(0xb1, gbc.readMem(0xae35));
        // CB B1 0150
        gbc.setState(0xb873, 0xe514, 0xaa70, 0x78e4, 0xbafa, 0xa38c, 0x1, 0x1);
        gbc.writeMem(0xb873, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe514, gbc.sp());
        EXPECT(0xb875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb873));
        EXPECT(0xb1, gbc.readMem(0xb874));
        // CB B1 0152
        gbc.setState(0xbb0d, 0xe3a3, 0x2460, 0x517b, 0x8202, 0x51ab, 0x0, 0x0);
        gbc.writeMem(0xbb0d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0xbb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0d));
        EXPECT(0xb1, gbc.readMem(0xbb0e));
        // CB B1 0153
        gbc.setState(0xea05, 0xbd63, 0x4440, 0xe77b, 0x5338, 0x1635, 0x0, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea05));
        EXPECT(0xb1, gbc.readMem(0xea06));
        // CB B1 0154
        gbc.setState(0xb4dd, 0xd09a, 0xe0d0, 0xffb7, 0x7608, 0x2d05, 0x0, 0x1);
        gbc.writeMem(0xb4dd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd09a, gbc.sp());
        EXPECT(0xb4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4dd));
        EXPECT(0xb1, gbc.readMem(0xb4de));
        // CB B1 0155
        gbc.setState(0x3944, 0xb923, 0x4a60, 0x5f93, 0x97ba, 0x6324, 0x1, 0x0);
        gbc.writeMem(0x3944, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb923, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0156
        gbc.setState(0x11bc, 0x94db, 0xb1f0, 0x86bf, 0xc6be, 0xb490, 0x1, 0x1);
        gbc.writeMem(0x11bc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x11be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0157
        gbc.setState(0xa124, 0x7e55, 0xff90, 0x61e6, 0x5e8f, 0xdd23, 0x1, 0x0);
        gbc.writeMem(0xa124, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0xa126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa124));
        EXPECT(0xb1, gbc.readMem(0xa125));
        // CB B1 0158
        gbc.setState(0x2b4, 0x6951, 0x8fa0, 0x8482, 0xa5bd, 0xd1ee, 0x0, 0x0);
        gbc.writeMem(0x2b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0159
        gbc.setState(0x72b0, 0xce7c, 0xfc00, 0xd0a1, 0xa6bb, 0x64f3, 0x0, 0x1);
        gbc.writeMem(0x72b0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0x72b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 015A
        gbc.setState(0x501d, 0x4123, 0x8530, 0x6dcd, 0xa059, 0xc428, 0x1, 0x0);
        gbc.writeMem(0x501d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 015B
        gbc.setState(0x63dc, 0x2142, 0x1990, 0x5abb, 0xd9a8, 0xa3b0, 0x1, 0x1);
        gbc.writeMem(0x63dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2142, gbc.sp());
        EXPECT(0x63de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 015C
        gbc.setState(0x72b2, 0xe254, 0x6a60, 0xa6f0, 0x85df, 0xdc85, 0x0, 0x1);
        gbc.writeMem(0x72b2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 015D
        gbc.setState(0xc2be, 0xc441, 0x57c0, 0xdb53, 0xa327, 0x7e77, 0x0, 0x0);
        gbc.writeMem(0xc2be, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0xc2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2be));
        EXPECT(0xb1, gbc.readMem(0xc2bf));
        // CB B1 015E
        gbc.setState(0xd72e, 0x384e, 0xdaf0, 0xb9cc, 0x3a20, 0xb66e, 0x1, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x384e, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72e));
        EXPECT(0xb1, gbc.readMem(0xd72f));
        // CB B1 015F
        gbc.setState(0x83c5, 0xd0a3, 0xe8e0, 0xe489, 0x9664, 0xdcac, 0x0, 0x1);
        gbc.writeMem(0x83c5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd0a3, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c5));
        EXPECT(0xb1, gbc.readMem(0x83c6));
        // CB B1 0160
        gbc.setState(0x1c84, 0x6379, 0xf2d0, 0xea9a, 0xeb00, 0x6750, 0x1, 0x1);
        gbc.writeMem(0x1c84, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6379, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0161
        gbc.setState(0x487e, 0xba83, 0x1240, 0x1f36, 0xe7a5, 0xc7e, 0x1, 0x0);
        gbc.writeMem(0x487e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xba83, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0162
        gbc.setState(0x2e16, 0x5673, 0x3300, 0xce44, 0xec43, 0x26b1, 0x0, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5673, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0163
        gbc.setState(0xa8d8, 0x1b84, 0x3770, 0xcc6b, 0xd538, 0xaae3, 0x0, 0x1);
        gbc.writeMem(0xa8d8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d8));
        EXPECT(0xb1, gbc.readMem(0xa8d9));
        // CB B1 0164
        gbc.setState(0xd5f4, 0x5dc7, 0x5790, 0xf70b, 0x3d93, 0xe4b, 0x1, 0x0);
        gbc.writeMem(0xd5f4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0xd5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f4));
        EXPECT(0xb1, gbc.readMem(0xd5f5));
        // CB B1 0166
        gbc.setState(0x89b9, 0x7b9b, 0x5620, 0x1c0f, 0x5ebc, 0x78ba, 0x0, 0x1);
        gbc.writeMem(0x89b9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7b9b, gbc.sp());
        EXPECT(0x89bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b9));
        EXPECT(0xb1, gbc.readMem(0x89ba));
        // CB B1 0167
        gbc.setState(0x91ae, 0x56c8, 0xd330, 0xf51c, 0xf1f5, 0xd7fb, 0x0, 0x0);
        gbc.writeMem(0x91ae, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ae));
        EXPECT(0xb1, gbc.readMem(0x91af));
        // CB B1 0168
        gbc.setState(0xceb3, 0x8cac, 0xb100, 0xd0ab, 0xab57, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0xceb3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0xceb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb3));
        EXPECT(0xb1, gbc.readMem(0xceb4));
        // CB B1 0169
        gbc.setState(0x2b5d, 0xc353, 0x0, 0x3e54, 0x21de, 0xe711, 0x1, 0x1);
        gbc.writeMem(0x2b5d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc353, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 016A
        gbc.setState(0xaa52, 0xaf72, 0xebb0, 0x3c51, 0x44f0, 0xcce2, 0x1, 0x0);
        gbc.writeMem(0xaa52, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0xaa54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa52));
        EXPECT(0xb1, gbc.readMem(0xaa53));
        // CB B1 016B
        gbc.setState(0xe288, 0x8af1, 0xb660, 0x7fdd, 0x7e58, 0xd9e9, 0x1, 0x1);
        gbc.writeMem(0xe288, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0xe28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe288));
        EXPECT(0xb1, gbc.readMem(0xe289));
        // CB B1 016C
        gbc.setState(0x3dbc, 0xd85e, 0xdbe0, 0x1974, 0xeb8e, 0x1229, 0x0, 0x0);
        gbc.writeMem(0x3dbc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0x3dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 016D
        gbc.setState(0xed49, 0x5fcb, 0xef60, 0x9020, 0xdf88, 0xf065, 0x0, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5fcb, gbc.sp());
        EXPECT(0xed4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed49));
        EXPECT(0xb1, gbc.readMem(0xed4a));
        // CB B1 016E
        gbc.setState(0x1c3a, 0xc448, 0x16b0, 0x59b9, 0x594a, 0xa68d, 0x1, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 016F
        gbc.setState(0x3c15, 0x8f68, 0xb340, 0xb0d3, 0x324c, 0xc5ba, 0x0, 0x0);
        gbc.writeMem(0x3c15, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8f68, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0170
        gbc.setState(0x9094, 0x4ea3, 0x6d70, 0x3bc8, 0x6ad1, 0x74c1, 0x1, 0x0);
        gbc.writeMem(0x9094, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0x9096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9094));
        EXPECT(0xb1, gbc.readMem(0x9095));
        // CB B1 0171
        gbc.setState(0x11dc, 0xac68, 0x5a80, 0x78f7, 0x3015, 0xac78, 0x1, 0x0);
        gbc.writeMem(0x11dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0x11de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0172
        gbc.setState(0xa0b8, 0xe1c9, 0xb090, 0xc8e2, 0x3ae4, 0x119e, 0x0, 0x0);
        gbc.writeMem(0xa0b8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe1c9, gbc.sp());
        EXPECT(0xa0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b8));
        EXPECT(0xb1, gbc.readMem(0xa0b9));
        // CB B1 0173
        gbc.setState(0xaaf4, 0x96b4, 0x62e0, 0x6fcb, 0x58f5, 0x4313, 0x0, 0x0);
        gbc.writeMem(0xaaf4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0xaaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf4));
        EXPECT(0xb1, gbc.readMem(0xaaf5));
        // CB B1 0174
        gbc.setState(0x7941, 0xc47f, 0x3b00, 0xe318, 0x2aff, 0x23e3, 0x0, 0x1);
        gbc.writeMem(0x7941, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0175
        gbc.setState(0x7653, 0x298, 0x5140, 0xff9e, 0x57e5, 0x2beb, 0x1, 0x0);
        gbc.writeMem(0x7653, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x298, gbc.sp());
        EXPECT(0x7655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0176
        gbc.setState(0x7a8e, 0x22c1, 0x700, 0xae63, 0x121c, 0x8e10, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x22c1, gbc.sp());
        EXPECT(0x7a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0177
        gbc.setState(0xbc94, 0x22b6, 0x250, 0x3db1, 0xc712, 0x71ef, 0x1, 0x1);
        gbc.writeMem(0xbc94, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0xbc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc94));
        EXPECT(0xb1, gbc.readMem(0xbc95));
        // CB B1 0179
        gbc.setState(0x771a, 0x7149, 0x50e0, 0x865f, 0xc1c9, 0xf02e, 0x0, 0x0);
        gbc.writeMem(0x771a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 017A
        gbc.setState(0xd28, 0xa859, 0x3be0, 0x9922, 0x6ac8, 0x3704, 0x1, 0x1);
        gbc.writeMem(0xd28, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 017B
        gbc.setState(0x1e22, 0x7558, 0xc80, 0x6652, 0xdfc6, 0x5595, 0x0, 0x1);
        gbc.writeMem(0x1e22, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x1e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 017C
        gbc.setState(0x455c, 0xae64, 0x6ac0, 0x8798, 0xd2b2, 0xba35, 0x0, 0x0);
        gbc.writeMem(0x455c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0x455e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 017D
        gbc.setState(0x8369, 0xbbef, 0xd6d0, 0xdb85, 0xf759, 0x3a8e, 0x0, 0x0);
        gbc.writeMem(0x8369, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbbef, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8369));
        EXPECT(0xb1, gbc.readMem(0x836a));
        // CB B1 017E
        gbc.setState(0xea06, 0xfe60, 0x220, 0x30e8, 0x8282, 0x7e60, 0x1, 0x0);
        gbc.writeMem(0xea06, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfe60, gbc.sp());
        EXPECT(0xea08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea06));
        EXPECT(0xb1, gbc.readMem(0xea07));
        // CB B1 017F
        gbc.setState(0x9202, 0x8edd, 0xf390, 0xaf71, 0x2b39, 0x7fba, 0x1, 0x0);
        gbc.writeMem(0x9202, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0x9204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9202));
        EXPECT(0xb1, gbc.readMem(0x9203));
        // CB B1 0180
        gbc.setState(0x681d, 0x9b8, 0xf6f0, 0x30de, 0x22c, 0x1990, 0x1, 0x1);
        gbc.writeMem(0x681d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0181
        gbc.setState(0x30b, 0xa1af, 0x7240, 0xdddd, 0xbc3c, 0x6217, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa1af, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0182
        gbc.setState(0xb7b4, 0x2036, 0x4c10, 0xbf04, 0xb0e, 0xc1a, 0x1, 0x0);
        gbc.writeMem(0xb7b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0xb7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b4));
        EXPECT(0xb1, gbc.readMem(0xb7b5));
        // CB B1 0183
        gbc.setState(0xb22d, 0xfc2e, 0x43f0, 0xd3c4, 0xff8d, 0x357b, 0x0, 0x1);
        gbc.writeMem(0xb22d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0xb22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22d));
        EXPECT(0xb1, gbc.readMem(0xb22e));
        // CB B1 0184
        gbc.setState(0x3338, 0xa7d6, 0x3a90, 0x19b4, 0x6a1b, 0xa898, 0x1, 0x0);
        gbc.writeMem(0x3338, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa7d6, gbc.sp());
        EXPECT(0x333a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0185
        gbc.setState(0x1941, 0x99c8, 0x290, 0x4ce1, 0x8bc3, 0x6c9f, 0x1, 0x1);
        gbc.writeMem(0x1941, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x99c8, gbc.sp());
        EXPECT(0x1943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0187
        gbc.setState(0x2fb7, 0xcf37, 0x3ab0, 0xa8, 0x8d5e, 0xe699, 0x0, 0x0);
        gbc.writeMem(0x2fb7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf37, gbc.sp());
        EXPECT(0x2fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0188
        gbc.setState(0xa7a7, 0xc6bb, 0x3b0, 0xf397, 0x771b, 0x881c, 0x1, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0xa7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a7));
        EXPECT(0xb1, gbc.readMem(0xa7a8));
        // CB B1 0189
        gbc.setState(0x9af5, 0x6e98, 0x6f00, 0xd11b, 0x63ff, 0xf6f0, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6e98, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af5));
        EXPECT(0xb1, gbc.readMem(0x9af6));
        // CB B1 018A
        gbc.setState(0x9ed6, 0x8b88, 0x6100, 0xd813, 0x13d7, 0x468b, 0x0, 0x0);
        gbc.writeMem(0x9ed6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed6));
        EXPECT(0xb1, gbc.readMem(0x9ed7));
        // CB B1 018B
        gbc.setState(0x6717, 0x873a, 0x5d90, 0xb517, 0x2c4f, 0x18b0, 0x1, 0x1);
        gbc.writeMem(0x6717, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x873a, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 018C
        gbc.setState(0xb72d, 0xa109, 0xbc70, 0xbd78, 0xf35, 0xbc70, 0x1, 0x0);
        gbc.writeMem(0xb72d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa109, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0xb1, gbc.readMem(0xb72e));
        // CB B1 018D
        gbc.setState(0xecfa, 0x5c48, 0x65b0, 0x526b, 0xf1ba, 0xb205, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5c48, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0xb1, gbc.readMem(0xecfb));
        // CB B1 018E
        gbc.setState(0x6f18, 0x191, 0x42a0, 0x5811, 0xebd4, 0xc6bf, 0x1, 0x0);
        gbc.writeMem(0x6f18, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x191, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 018F
        gbc.setState(0x6ab7, 0x742a, 0xdf40, 0x2a16, 0xa03f, 0xf084, 0x0, 0x1);
        gbc.writeMem(0x6ab7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0190
        gbc.setState(0x1184, 0xca87, 0x3be0, 0xae71, 0x2fce, 0x18df, 0x1, 0x0);
        gbc.writeMem(0x1184, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xca87, gbc.sp());
        EXPECT(0x1186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0191
        gbc.setState(0x6e11, 0x4603, 0x2720, 0x3cca, 0x2fcc, 0xc92a, 0x1, 0x0);
        gbc.writeMem(0x6e11, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4603, gbc.sp());
        EXPECT(0x6e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0192
        gbc.setState(0x47b5, 0x72a, 0x8eb0, 0x3e8d, 0x1577, 0x87df, 0x1, 0x1);
        gbc.writeMem(0x47b5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0x47b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0193
        gbc.setState(0x43b, 0x5e75, 0x26a0, 0x1627, 0xfa92, 0x5236, 0x0, 0x1);
        gbc.writeMem(0x43b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0194
        gbc.setState(0x24a0, 0x6a97, 0xcc90, 0x943f, 0xc57e, 0x5039, 0x1, 0x0);
        gbc.writeMem(0x24a0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6a97, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0195
        gbc.setState(0x5bd0, 0xc8b0, 0x61b0, 0x5bfb, 0x67cc, 0x3ccd, 0x0, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc8b0, gbc.sp());
        EXPECT(0x5bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0196
        gbc.setState(0x48a, 0xae4c, 0x9b70, 0x5483, 0x9115, 0x23d1, 0x0, 0x1);
        gbc.writeMem(0x48a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xae4c, gbc.sp());
        EXPECT(0x48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0197
        gbc.setState(0xb3f1, 0x2196, 0xb440, 0x7258, 0x1c1d, 0xb6f5, 0x0, 0x1);
        gbc.writeMem(0xb3f1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2196, gbc.sp());
        EXPECT(0xb3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f1));
        EXPECT(0xb1, gbc.readMem(0xb3f2));
        // CB B1 0198
        gbc.setState(0x693e, 0xb3bd, 0xda30, 0xee55, 0x10da, 0xb4b9, 0x0, 0x1);
        gbc.writeMem(0x693e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3bd, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0199
        gbc.setState(0x24a1, 0x9c1e, 0xfd0, 0x4743, 0x7770, 0x4498, 0x1, 0x0);
        gbc.writeMem(0x24a1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9c1e, gbc.sp());
        EXPECT(0x24a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 019A
        gbc.setState(0x100e, 0xc453, 0x8c70, 0x36c2, 0x54f4, 0x6baf, 0x0, 0x0);
        gbc.writeMem(0x100e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc453, gbc.sp());
        EXPECT(0x1010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 019B
        gbc.setState(0x5e40, 0xf0e9, 0xb1c0, 0xabfc, 0x5412, 0x957f, 0x0, 0x0);
        gbc.writeMem(0x5e40, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 019C
        gbc.setState(0xa67d, 0xff65, 0x2580, 0xb18e, 0x96c5, 0xff4, 0x0, 0x0);
        gbc.writeMem(0xa67d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67d));
        EXPECT(0xb1, gbc.readMem(0xa67e));
        // CB B1 019D
        gbc.setState(0x5409, 0x1256, 0x16f0, 0xd5cb, 0x5cf3, 0x5616, 0x0, 0x1);
        gbc.writeMem(0x5409, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1256, gbc.sp());
        EXPECT(0x540b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 019E
        gbc.setState(0x42e7, 0xdda0, 0xdc20, 0xcba9, 0xe578, 0x9c12, 0x0, 0x1);
        gbc.writeMem(0x42e7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdda0, gbc.sp());
        EXPECT(0x42e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 019F
        gbc.setState(0x58c9, 0x758b, 0x55a0, 0x592b, 0x328f, 0x3f4e, 0x0, 0x1);
        gbc.writeMem(0x58c9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01A0
        gbc.setState(0x1803, 0x8abc, 0x68c0, 0x2366, 0xddeb, 0x1eec, 0x1, 0x1);
        gbc.writeMem(0x1803, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8abc, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01A1
        gbc.setState(0xec58, 0xaf82, 0xf340, 0x9e63, 0x4c65, 0x7b03, 0x0, 0x1);
        gbc.writeMem(0xec58, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf82, gbc.sp());
        EXPECT(0xec5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec58));
        EXPECT(0xb1, gbc.readMem(0xec59));
        // CB B1 01A2
        gbc.setState(0xa886, 0xf325, 0x89b0, 0x8e25, 0x8d8b, 0xcd26, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0xb1, gbc.readMem(0xa887));
        // CB B1 01A3
        gbc.setState(0x5170, 0x5004, 0xc640, 0x1212, 0x23df, 0x15c8, 0x0, 0x0);
        gbc.writeMem(0x5170, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5004, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01A4
        gbc.setState(0xde49, 0x8f75, 0x6e50, 0xbbb0, 0x1bc7, 0x2012, 0x1, 0x1);
        gbc.writeMem(0xde49, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde49));
        EXPECT(0xb1, gbc.readMem(0xde4a));
        // CB B1 01A5
        gbc.setState(0x6621, 0x788e, 0xd580, 0xb138, 0xce0d, 0x60c8, 0x1, 0x1);
        gbc.writeMem(0x6621, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01A6
        gbc.setState(0x9d28, 0x52da, 0x2ab0, 0xdf11, 0x5ae5, 0x356b, 0x1, 0x1);
        gbc.writeMem(0x9d28, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x52da, gbc.sp());
        EXPECT(0x9d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d28));
        EXPECT(0xb1, gbc.readMem(0x9d29));
        // CB B1 01A7
        gbc.setState(0x662a, 0x9697, 0xf440, 0xe199, 0x4a24, 0xbb60, 0x1, 0x0);
        gbc.writeMem(0x662a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01A8
        gbc.setState(0x3c64, 0xb029, 0x5d90, 0x4f62, 0x23db, 0xfee, 0x1, 0x0);
        gbc.writeMem(0x3c64, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0x3c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01A9
        gbc.setState(0x669d, 0x3a16, 0x9da0, 0xf8b3, 0x24c0, 0xcfda, 0x0, 0x0);
        gbc.writeMem(0x669d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0x669f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01AA
        gbc.setState(0x5897, 0x483a, 0x3c40, 0x688d, 0x5668, 0xe1c5, 0x0, 0x0);
        gbc.writeMem(0x5897, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01AB
        gbc.setState(0x4d33, 0xe076, 0x1f50, 0xf5d4, 0xbe56, 0x5aa3, 0x0, 0x1);
        gbc.writeMem(0x4d33, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01AC
        gbc.setState(0xbf4a, 0xc37d, 0x45b0, 0x3cc5, 0xa084, 0xe130, 0x0, 0x0);
        gbc.writeMem(0xbf4a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4a));
        EXPECT(0xb1, gbc.readMem(0xbf4b));
        // CB B1 01AE
        gbc.setState(0x4544, 0x923d, 0x8810, 0x66c9, 0x163c, 0x81ef, 0x1, 0x0);
        gbc.writeMem(0x4544, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x923d, gbc.sp());
        EXPECT(0x4546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01AF
        gbc.setState(0x5cc9, 0x4bac, 0x4a80, 0xda09, 0xb1b4, 0xc79e, 0x1, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4bac, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01B0
        gbc.setState(0xd638, 0xa9be, 0xf3d0, 0x2897, 0x3320, 0x4e7b, 0x0, 0x0);
        gbc.writeMem(0xd638, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa9be, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd638));
        EXPECT(0xb1, gbc.readMem(0xd639));
        // CB B1 01B1
        gbc.setState(0xa8c7, 0xcb21, 0xb990, 0xe45e, 0x1441, 0xdd9d, 0x1, 0x1);
        gbc.writeMem(0xa8c7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0xa8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c7));
        EXPECT(0xb1, gbc.readMem(0xa8c8));
        // CB B1 01B2
        gbc.setState(0x7277, 0x3624, 0x1b80, 0x8884, 0xc6d5, 0xf01c, 0x0, 0x0);
        gbc.writeMem(0x7277, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01B3
        gbc.setState(0xd13d, 0x2e42, 0xf350, 0x9868, 0x5e09, 0xac58, 0x0, 0x1);
        gbc.writeMem(0xd13d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0xd13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13d));
        EXPECT(0xb1, gbc.readMem(0xd13e));
        // CB B1 01B4
        gbc.setState(0x94cb, 0x4dee, 0xd220, 0xfd3, 0x1cc8, 0x67fd, 0x1, 0x1);
        gbc.writeMem(0x94cb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cb));
        EXPECT(0xb1, gbc.readMem(0x94cc));
        // CB B1 01B5
        gbc.setState(0x2261, 0x69cf, 0xa320, 0x971, 0xa653, 0x8954, 0x0, 0x1);
        gbc.writeMem(0x2261, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x69cf, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01B6
        gbc.setState(0x95d7, 0xc368, 0x50e0, 0x5376, 0x79e2, 0xe6de, 0x0, 0x0);
        gbc.writeMem(0x95d7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0x95d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d7));
        EXPECT(0xb1, gbc.readMem(0x95d8));
        // CB B1 01B7
        gbc.setState(0x2823, 0x9940, 0xa970, 0xf128, 0x2bd5, 0xb6e5, 0x1, 0x1);
        gbc.writeMem(0x2823, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9940, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01B8
        gbc.setState(0x6d8f, 0xab29, 0xe4e0, 0xa4a7, 0x8e22, 0x8494, 0x0, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xab29, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01B9
        gbc.setState(0xed7a, 0x54c9, 0x1de0, 0xa2cf, 0xe269, 0x4875, 0x0, 0x1);
        gbc.writeMem(0xed7a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x54c9, gbc.sp());
        EXPECT(0xed7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7a));
        EXPECT(0xb1, gbc.readMem(0xed7b));
        // CB B1 01BA
        gbc.setState(0x37dc, 0x248e, 0x15d0, 0xaa81, 0x90d6, 0xeda8, 0x1, 0x0);
        gbc.writeMem(0x37dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x37de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01BB
        gbc.setState(0x81c5, 0x9756, 0xbcf0, 0x3978, 0xd9cc, 0x8ded, 0x1, 0x1);
        gbc.writeMem(0x81c5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0x81c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c5));
        EXPECT(0xb1, gbc.readMem(0x81c6));
        // CB B1 01BC
        gbc.setState(0x1618, 0x9021, 0x6f80, 0x131a, 0xa768, 0x20f2, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01BD
        gbc.setState(0x9788, 0xbba1, 0xbd0, 0x5b1f, 0x96f0, 0xf2ec, 0x0, 0x1);
        gbc.writeMem(0x9788, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbba1, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9788));
        EXPECT(0xb1, gbc.readMem(0x9789));
        // CB B1 01BE
        gbc.setState(0x7b9a, 0x9277, 0x9910, 0xbcab, 0xc90a, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0x7b9a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9277, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01BF
        gbc.setState(0x2671, 0xa92e, 0xe160, 0xc808, 0x2e36, 0xb07, 0x0, 0x1);
        gbc.writeMem(0x2671, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x2673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01C0
        gbc.setState(0x702f, 0x5ec7, 0xdb10, 0x1ee8, 0x802, 0x9f41, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5ec7, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01C1
        gbc.setState(0x5a3, 0x6efc, 0xcf70, 0x959, 0x5263, 0x4db6, 0x0, 0x0);
        gbc.writeMem(0x5a3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6efc, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01C2
        gbc.setState(0x5478, 0x7518, 0x29f0, 0x5f5f, 0xdc6f, 0x34b4, 0x0, 0x1);
        gbc.writeMem(0x5478, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7518, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01C3
        gbc.setState(0x7a13, 0xa47, 0x8140, 0xc896, 0xe41, 0x21e7, 0x1, 0x1);
        gbc.writeMem(0x7a13, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01C4
        gbc.setState(0x6fb4, 0xa308, 0xde00, 0x965c, 0x407f, 0x9ff2, 0x1, 0x1);
        gbc.writeMem(0x6fb4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01C5
        gbc.setState(0x5e64, 0xe122, 0x9600, 0xcf34, 0x6eae, 0x6176, 0x1, 0x1);
        gbc.writeMem(0x5e64, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe122, gbc.sp());
        EXPECT(0x5e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01C6
        gbc.setState(0x949b, 0x96a9, 0x6980, 0x6d1c, 0x8ca4, 0x1b90, 0x0, 0x1);
        gbc.writeMem(0x949b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x96a9, gbc.sp());
        EXPECT(0x949d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949b));
        EXPECT(0xb1, gbc.readMem(0x949c));
        // CB B1 01C7
        gbc.setState(0xc290, 0x3482, 0x60, 0xc180, 0xc9e6, 0x9f24, 0x0, 0x0);
        gbc.writeMem(0xc290, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3482, gbc.sp());
        EXPECT(0xc292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc290));
        EXPECT(0xb1, gbc.readMem(0xc291));
        // CB B1 01C8
        gbc.setState(0x69ee, 0xb703, 0x1ce0, 0xfc4e, 0xba30, 0x7813, 0x0, 0x1);
        gbc.writeMem(0x69ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb703, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01C9
        gbc.setState(0x874c, 0xe696, 0x2f60, 0x168, 0xb624, 0xa304, 0x1, 0x0);
        gbc.writeMem(0x874c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe696, gbc.sp());
        EXPECT(0x874e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874c));
        EXPECT(0xb1, gbc.readMem(0x874d));
        // CB B1 01CA
        gbc.setState(0xb13d, 0xb482, 0x2ce0, 0x183b, 0x510, 0x3fd7, 0x1, 0x0);
        gbc.writeMem(0xb13d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0xb13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13d));
        EXPECT(0xb1, gbc.readMem(0xb13e));
        // CB B1 01CB
        gbc.setState(0xc6a7, 0x130b, 0x170, 0x30e6, 0x4580, 0xc2b0, 0x0, 0x0);
        gbc.writeMem(0xc6a7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0xc6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a7));
        EXPECT(0xb1, gbc.readMem(0xc6a8));
        // CB B1 01CC
        gbc.setState(0x1a88, 0x75f7, 0x9780, 0xf6d, 0x35fa, 0x1d56, 0x0, 0x0);
        gbc.writeMem(0x1a88, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x75f7, gbc.sp());
        EXPECT(0x1a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01CD
        gbc.setState(0x33da, 0x418, 0xea20, 0xbe69, 0x3a4c, 0x709f, 0x1, 0x1);
        gbc.writeMem(0x33da, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0x33dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01CE
        gbc.setState(0xba66, 0xb047, 0x41e0, 0x2141, 0x2cd8, 0xa757, 0x1, 0x0);
        gbc.writeMem(0xba66, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0xba68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba66));
        EXPECT(0xb1, gbc.readMem(0xba67));
        // CB B1 01CF
        gbc.setState(0x21f2, 0x6a0, 0x5490, 0x8b99, 0xc687, 0x8d55, 0x1, 0x1);
        gbc.writeMem(0x21f2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6a0, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01D0
        gbc.setState(0xbc45, 0xd0e3, 0x2c80, 0xeaef, 0xf012, 0xa083, 0x0, 0x0);
        gbc.writeMem(0xbc45, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd0e3, gbc.sp());
        EXPECT(0xbc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc45));
        EXPECT(0xb1, gbc.readMem(0xbc46));
        // CB B1 01D1
        gbc.setState(0x7e22, 0x8308, 0x1860, 0xead5, 0xbb39, 0x1dae, 0x0, 0x0);
        gbc.writeMem(0x7e22, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01D2
        gbc.setState(0x56d, 0x800e, 0x13c0, 0x8ff0, 0xe957, 0x1621, 0x1, 0x1);
        gbc.writeMem(0x56d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01D4
        gbc.setState(0xc28e, 0xf004, 0x2a00, 0x7b17, 0x1ea4, 0x1ff0, 0x1, 0x0);
        gbc.writeMem(0xc28e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28e));
        EXPECT(0xb1, gbc.readMem(0xc28f));
        // CB B1 01D5
        gbc.setState(0xb34c, 0xe8c2, 0x3d00, 0x2064, 0x3ffa, 0xac16, 0x1, 0x0);
        gbc.writeMem(0xb34c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0xb34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34c));
        EXPECT(0xb1, gbc.readMem(0xb34d));
        // CB B1 01D6
        gbc.setState(0x5fd5, 0x80cd, 0x8cf0, 0x99fe, 0xa7e0, 0x7a5f, 0x0, 0x1);
        gbc.writeMem(0x5fd5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x80cd, gbc.sp());
        EXPECT(0x5fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01D7
        gbc.setState(0x3e46, 0xdfc6, 0x25e0, 0x6c77, 0xd18a, 0x5a8b, 0x1, 0x1);
        gbc.writeMem(0x3e46, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01D8
        gbc.setState(0xb8a, 0x8367, 0x54d0, 0xe305, 0xd6f8, 0x9404, 0x1, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8367, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01D9
        gbc.setState(0x181e, 0x78af, 0xe710, 0xfe79, 0xe228, 0xf1b6, 0x0, 0x0);
        gbc.writeMem(0x181e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x78af, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01DA
        gbc.setState(0x8216, 0x11b3, 0x5530, 0x96f1, 0x4729, 0xff0d, 0x0, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x11b3, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8216));
        EXPECT(0xb1, gbc.readMem(0x8217));
        // CB B1 01DB
        gbc.setState(0x430e, 0xa503, 0xaff0, 0xbc5b, 0x822c, 0x9aec, 0x1, 0x1);
        gbc.writeMem(0x430e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0x4310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01DC
        gbc.setState(0xc98, 0xa514, 0xf580, 0x3ce0, 0x8ceb, 0x9e69, 0x1, 0x1);
        gbc.writeMem(0xc98, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa514, gbc.sp());
        EXPECT(0xc9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01DD
        gbc.setState(0x4017, 0x4c3a, 0xb0b0, 0x7ae0, 0x515b, 0x1e57, 0x1, 0x0);
        gbc.writeMem(0x4017, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4c3a, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01DE
        gbc.setState(0x188a, 0x2636, 0x2e0, 0x15e5, 0x46c7, 0x5c40, 0x0, 0x0);
        gbc.writeMem(0x188a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x188c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01DF
        gbc.setState(0x9f28, 0x7568, 0xb1b0, 0x6413, 0x6a3a, 0x2317, 0x1, 0x1);
        gbc.writeMem(0x9f28, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f28));
        EXPECT(0xb1, gbc.readMem(0x9f29));
        // CB B1 01E0
        gbc.setState(0xc014, 0x1026, 0xa1c0, 0x3f76, 0x81e5, 0xe567, 0x1, 0x0);
        gbc.writeMem(0xc014, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc014));
        EXPECT(0xb1, gbc.readMem(0xc015));
        // CB B1 01E1
        gbc.setState(0xd5e0, 0x1636, 0xde20, 0x3c82, 0x1e6d, 0x17f2, 0x1, 0x1);
        gbc.writeMem(0xd5e0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1636, gbc.sp());
        EXPECT(0xd5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e0));
        EXPECT(0xb1, gbc.readMem(0xd5e1));
        // CB B1 01E2
        gbc.setState(0xd53b, 0x9666, 0xec10, 0x1bdb, 0x7b9, 0x8d67, 0x1, 0x1);
        gbc.writeMem(0xd53b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0xd53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53b));
        EXPECT(0xb1, gbc.readMem(0xd53c));
        // CB B1 01E4
        gbc.setState(0x4cb6, 0xe317, 0x4850, 0xf68d, 0x174d, 0x2e37, 0x1, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe317, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01E5
        gbc.setState(0xbec8, 0xed92, 0x9420, 0xed23, 0x4abd, 0x9eae, 0x1, 0x1);
        gbc.writeMem(0xbec8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec8));
        EXPECT(0xb1, gbc.readMem(0xbec9));
        // CB B1 01E6
        gbc.setState(0xbcac, 0x46bd, 0x7730, 0x6e67, 0xbcb0, 0x5bc9, 0x0, 0x0);
        gbc.writeMem(0xbcac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcac));
        EXPECT(0xb1, gbc.readMem(0xbcad));
        // CB B1 01E7
        gbc.setState(0x4332, 0x88e2, 0xf990, 0x77fa, 0x5540, 0x4cde, 0x1, 0x1);
        gbc.writeMem(0x4332, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x88e2, gbc.sp());
        EXPECT(0x4334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01E8
        gbc.setState(0xefeb, 0x31e, 0x4c10, 0xb908, 0x14b4, 0xa5a6, 0x1, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0xb1, gbc.readMem(0xefec));
        // CB B1 01E9
        gbc.setState(0x3ed8, 0x5a46, 0xc440, 0x6743, 0xdc7, 0x5f34, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5a46, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01EA
        gbc.setState(0xddb, 0x74f0, 0x6950, 0xc28e, 0xdd42, 0xee2d, 0x1, 0x1);
        gbc.writeMem(0xddb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x74f0, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01EC
        gbc.setState(0x1e03, 0x42dd, 0x9a90, 0x232, 0x5993, 0xd5a4, 0x0, 0x0);
        gbc.writeMem(0x1e03, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01ED
        gbc.setState(0x568e, 0x5bb4, 0x5650, 0x7bd6, 0x60a4, 0x38a4, 0x1, 0x1);
        gbc.writeMem(0x568e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5bb4, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01EE
        gbc.setState(0x3ff, 0x394a, 0xfea0, 0x98df, 0x1f59, 0xfd2d, 0x0, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x394a, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01EF
        gbc.setState(0xef92, 0xee2e, 0xfa00, 0x6a8, 0xa14a, 0x3fad, 0x0, 0x1);
        gbc.writeMem(0xef92, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xee2e, gbc.sp());
        EXPECT(0xef94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef92));
        EXPECT(0xb1, gbc.readMem(0xef93));
        // CB B1 01F0
        gbc.setState(0xe7ca, 0x7a5c, 0xa80, 0xe28, 0xf171, 0xee6a, 0x0, 0x1);
        gbc.writeMem(0xe7ca, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7a5c, gbc.sp());
        EXPECT(0xe7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ca));
        EXPECT(0xb1, gbc.readMem(0xe7cb));
        // CB B1 01F1
        gbc.setState(0x18ef, 0xf737, 0xdae0, 0xb6, 0x3f93, 0xee7e, 0x1, 0x1);
        gbc.writeMem(0x18ef, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf737, gbc.sp());
        EXPECT(0x18f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01F2
        gbc.setState(0xc2ab, 0x59a8, 0xd360, 0x26e8, 0x639c, 0xaaf1, 0x1, 0x0);
        gbc.writeMem(0xc2ab, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x59a8, gbc.sp());
        EXPECT(0xc2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ab));
        EXPECT(0xb1, gbc.readMem(0xc2ac));
        // CB B1 01F3
        gbc.setState(0x12ee, 0x22dc, 0x6eb0, 0x851f, 0x7cc0, 0xc871, 0x0, 0x0);
        gbc.writeMem(0x12ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x22dc, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01F4
        gbc.setState(0x1684, 0xfa58, 0x1bf0, 0x344e, 0x1b4b, 0x41b7, 0x0, 0x1);
        gbc.writeMem(0x1684, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfa58, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01F5
        gbc.setState(0xadb6, 0x8e4d, 0x9dd0, 0x87a0, 0x7ddc, 0xa9e1, 0x0, 0x1);
        gbc.writeMem(0xadb6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8e4d, gbc.sp());
        EXPECT(0xadb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb6));
        EXPECT(0xb1, gbc.readMem(0xadb7));
        // CB B1 01F6
        gbc.setState(0x1524, 0x7e66, 0x96c0, 0x2064, 0x39d8, 0xe9d3, 0x1, 0x0);
        gbc.writeMem(0x1524, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0x1526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01F7
        gbc.setState(0x5fde, 0x6020, 0x9f0, 0x5420, 0x2409, 0x7d74, 0x0, 0x0);
        gbc.writeMem(0x5fde, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6020, gbc.sp());
        EXPECT(0x5fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01F8
        gbc.setState(0x682d, 0x9af6, 0xc800, 0xde2b, 0x4a93, 0x15a0, 0x0, 0x0);
        gbc.writeMem(0x682d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x682f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01F9
        gbc.setState(0xbfca, 0x9547, 0x2da0, 0xf0ec, 0x5a4, 0x6a90, 0x0, 0x0);
        gbc.writeMem(0xbfca, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfca));
        EXPECT(0xb1, gbc.readMem(0xbfcb));
        // CB B1 01FA
        gbc.setState(0x15e, 0x63f5, 0xa620, 0xd4da, 0x8acd, 0x824d, 0x0, 0x0);
        gbc.writeMem(0x15e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01FB
        gbc.setState(0x988, 0x1ae4, 0xacf0, 0x1ae, 0xc0e5, 0x32eb, 0x1, 0x1);
        gbc.writeMem(0x988, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1ae4, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 01FC
        gbc.setState(0x87d, 0x87ad, 0xa3c0, 0x3e32, 0xe2a6, 0x965b, 0x0, 0x1);
        gbc.writeMem(0x87d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x87ad, gbc.sp());
        EXPECT(0x87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01FE
        gbc.setState(0x4654, 0x8b5, 0xbe60, 0x664d, 0xe55f, 0x42a, 0x1, 0x1);
        gbc.writeMem(0x4654, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 01FF
        gbc.setState(0x3e98, 0x8579, 0xf530, 0x91cd, 0x8c94, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x3e98, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8579, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0200
        gbc.setState(0x14a0, 0xde86, 0x25d0, 0xfa6f, 0x5c72, 0xb800, 0x1, 0x1);
        gbc.writeMem(0x14a0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0201
        gbc.setState(0xec40, 0xf365, 0x3630, 0xf560, 0x3664, 0xf187, 0x0, 0x0);
        gbc.writeMem(0xec40, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0xec42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec40));
        EXPECT(0xb1, gbc.readMem(0xec41));
        // CB B1 0202
        gbc.setState(0xd834, 0xfe84, 0x17b0, 0x3aba, 0xed1, 0x7dde, 0x0, 0x1);
        gbc.writeMem(0xd834, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0xd836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd834));
        EXPECT(0xb1, gbc.readMem(0xd835));
        // CB B1 0203
        gbc.setState(0x48b8, 0xae7a, 0xbd00, 0xf64d, 0x122, 0x1f01, 0x1, 0x0);
        gbc.writeMem(0x48b8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xae7a, gbc.sp());
        EXPECT(0x48ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0204
        gbc.setState(0x2834, 0xc3b4, 0x2b90, 0x8252, 0x8296, 0xf26e, 0x1, 0x0);
        gbc.writeMem(0x2834, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc3b4, gbc.sp());
        EXPECT(0x2836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0205
        gbc.setState(0x124d, 0x270, 0xee40, 0x6104, 0xf40a, 0x8553, 0x0, 0x0);
        gbc.writeMem(0x124d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0x124f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0206
        gbc.setState(0x74c0, 0x2185, 0x6480, 0xaae8, 0x10d, 0xea9c, 0x0, 0x1);
        gbc.writeMem(0x74c0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2185, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0207
        gbc.setState(0x76c0, 0xafdb, 0x4c80, 0x6ff5, 0x3694, 0x6652, 0x0, 0x1);
        gbc.writeMem(0x76c0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xafdb, gbc.sp());
        EXPECT(0x76c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0208
        gbc.setState(0xe59f, 0xcd59, 0xed70, 0x8f7d, 0xd089, 0x90a4, 0x0, 0x0);
        gbc.writeMem(0xe59f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcd59, gbc.sp());
        EXPECT(0xe5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59f));
        EXPECT(0xb1, gbc.readMem(0xe5a0));
        // CB B1 0209
        gbc.setState(0x5fa5, 0xe24f, 0x7d40, 0x81eb, 0x485a, 0x2714, 0x1, 0x0);
        gbc.writeMem(0x5fa5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0x5fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 020A
        gbc.setState(0x74ef, 0x8cb5, 0x4050, 0xc908, 0x1cd4, 0x19ea, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8cb5, gbc.sp());
        EXPECT(0x74f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 020B
        gbc.setState(0xb2e1, 0x95fe, 0xd760, 0x5ce9, 0xa7f7, 0x5eb6, 0x0, 0x1);
        gbc.writeMem(0xb2e1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0xb2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e1));
        EXPECT(0xb1, gbc.readMem(0xb2e2));
        // CB B1 020C
        gbc.setState(0x1a96, 0x421d, 0x1040, 0x7cef, 0x7879, 0x8d5a, 0x0, 0x1);
        gbc.writeMem(0x1a96, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x421d, gbc.sp());
        EXPECT(0x1a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 020D
        gbc.setState(0x950a, 0x1c32, 0x8100, 0x2a01, 0x8cd, 0xa860, 0x1, 0x0);
        gbc.writeMem(0x950a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1c32, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0xb1, gbc.readMem(0x950b));
        // CB B1 020E
        gbc.setState(0xe983, 0x82b7, 0x7520, 0xeab, 0x9e4d, 0xf789, 0x0, 0x0);
        gbc.writeMem(0xe983, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0xb1, gbc.readMem(0xe984));
        // CB B1 020F
        gbc.setState(0xceac, 0xb5dd, 0xfc60, 0x10f0, 0x11a2, 0x474e, 0x1, 0x1);
        gbc.writeMem(0xceac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb5dd, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceac));
        EXPECT(0xb1, gbc.readMem(0xcead));
        // CB B1 0210
        gbc.setState(0x440f, 0x784c, 0xf290, 0x2ee1, 0x5637, 0x8977, 0x0, 0x0);
        gbc.writeMem(0x440f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x784c, gbc.sp());
        EXPECT(0x4411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0211
        gbc.setState(0x615d, 0xa08b, 0x92b0, 0xf668, 0x974, 0xbc05, 0x1, 0x0);
        gbc.writeMem(0x615d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x615f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0212
        gbc.setState(0x583f, 0xabe6, 0xe00, 0x49e6, 0x180b, 0x242, 0x0, 0x1);
        gbc.writeMem(0x583f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0x5841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0213
        gbc.setState(0x7523, 0x88e1, 0x8f0, 0x4cc5, 0x7eb4, 0x91d6, 0x1, 0x1);
        gbc.writeMem(0x7523, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x88e1, gbc.sp());
        EXPECT(0x7525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0214
        gbc.setState(0x3cab, 0x403c, 0x17a0, 0x1d97, 0xa31a, 0xcc89, 0x1, 0x1);
        gbc.writeMem(0x3cab, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0x3cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0215
        gbc.setState(0x1133, 0x8f75, 0x9df0, 0x8906, 0x29e4, 0x221, 0x0, 0x1);
        gbc.writeMem(0x1133, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0x1135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0216
        gbc.setState(0x8f64, 0xdd52, 0xdfe0, 0x940d, 0x71c2, 0xf4e5, 0x0, 0x1);
        gbc.writeMem(0x8f64, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd52, gbc.sp());
        EXPECT(0x8f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f64));
        EXPECT(0xb1, gbc.readMem(0x8f65));
        // CB B1 0217
        gbc.setState(0xa4b1, 0xb8e5, 0x78f0, 0x20dc, 0x71a8, 0x69e1, 0x1, 0x1);
        gbc.writeMem(0xa4b1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b1));
        EXPECT(0xb1, gbc.readMem(0xa4b2));
        // CB B1 0218
        gbc.setState(0x1f58, 0xb3f5, 0xa5a0, 0x590a, 0xefd4, 0x1c8f, 0x0, 0x0);
        gbc.writeMem(0x1f58, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb3f5, gbc.sp());
        EXPECT(0x1f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0219
        gbc.setState(0x3d4f, 0x48ae, 0xb860, 0xb4c6, 0x295a, 0x8296, 0x1, 0x1);
        gbc.writeMem(0x3d4f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 021A
        gbc.setState(0x6667, 0xa181, 0x1b80, 0x6e6, 0x6cc3, 0x3107, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 021B
        gbc.setState(0xed8a, 0x85af, 0xf9c0, 0xdac1, 0x9c0a, 0x619f, 0x0, 0x1);
        gbc.writeMem(0xed8a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8a));
        EXPECT(0xb1, gbc.readMem(0xed8b));
        // CB B1 021C
        gbc.setState(0xa894, 0xcdce, 0x9790, 0x6ec4, 0x4830, 0x9462, 0x0, 0x0);
        gbc.writeMem(0xa894, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0xa896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa894));
        EXPECT(0xb1, gbc.readMem(0xa895));
        // CB B1 021D
        gbc.setState(0x2681, 0x302f, 0x35b0, 0x8f4b, 0x14ed, 0x5927, 0x1, 0x1);
        gbc.writeMem(0x2681, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0x2683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 021E
        gbc.setState(0xa6fb, 0x641e, 0x62c0, 0x97a, 0x7429, 0x5a80, 0x0, 0x1);
        gbc.writeMem(0xa6fb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x641e, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fb));
        EXPECT(0xb1, gbc.readMem(0xa6fc));
        // CB B1 021F
        gbc.setState(0x7bf, 0x984d, 0x2b20, 0x3a2d, 0x9520, 0xa156, 0x0, 0x0);
        gbc.writeMem(0x7bf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x984d, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0222
        gbc.setState(0x1c6e, 0x21fc, 0xe220, 0x845f, 0xf665, 0xbf73, 0x1, 0x0);
        gbc.writeMem(0x1c6e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x1c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0223
        gbc.setState(0x3f40, 0xfe4e, 0x5df0, 0x54d6, 0x437b, 0x2c99, 0x1, 0x1);
        gbc.writeMem(0x3f40, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0224
        gbc.setState(0xabde, 0x860b, 0xa700, 0xb2f7, 0xceda, 0xe3eb, 0x1, 0x0);
        gbc.writeMem(0xabde, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0xabe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabde));
        EXPECT(0xb1, gbc.readMem(0xabdf));
        // CB B1 0226
        gbc.setState(0xa52, 0x7409, 0xe3b0, 0x99c2, 0xd2ea, 0x8e8f, 0x1, 0x0);
        gbc.writeMem(0xa52, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0xa54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0227
        gbc.setState(0x6d39, 0x17c4, 0x6ee0, 0x726a, 0xbace, 0xe36, 0x0, 0x0);
        gbc.writeMem(0x6d39, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x17c4, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0228
        gbc.setState(0x4c87, 0x4703, 0xc1f0, 0x389c, 0x68c3, 0xc40a, 0x1, 0x0);
        gbc.writeMem(0x4c87, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0229
        gbc.setState(0x94d1, 0x3607, 0xb850, 0x2544, 0xd4d9, 0xb424, 0x0, 0x0);
        gbc.writeMem(0x94d1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d1));
        EXPECT(0xb1, gbc.readMem(0x94d2));
        // CB B1 022A
        gbc.setState(0x66a4, 0x25c9, 0xbcb0, 0x7ddc, 0x5d6c, 0x44b3, 0x0, 0x1);
        gbc.writeMem(0x66a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x25c9, gbc.sp());
        EXPECT(0x66a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 022B
        gbc.setState(0x66c, 0x60ee, 0x4e50, 0xa1a9, 0xe9fe, 0x7412, 0x0, 0x1);
        gbc.writeMem(0x66c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x60ee, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 022C
        gbc.setState(0x52cb, 0xe9fa, 0xf3a0, 0x5402, 0x9687, 0x4d8f, 0x0, 0x1);
        gbc.writeMem(0x52cb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe9fa, gbc.sp());
        EXPECT(0x52cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 022D
        gbc.setState(0x3d2c, 0x7539, 0xd980, 0x1087, 0x15cb, 0xccff, 0x0, 0x0);
        gbc.writeMem(0x3d2c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7539, gbc.sp());
        EXPECT(0x3d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 022E
        gbc.setState(0x7217, 0x56f0, 0xe1e0, 0x5412, 0xf0fc, 0xe2e6, 0x1, 0x1);
        gbc.writeMem(0x7217, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0x7219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 022F
        gbc.setState(0x1c06, 0x7825, 0x5540, 0xfa5b, 0xae35, 0xd023, 0x1, 0x0);
        gbc.writeMem(0x1c06, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0230
        gbc.setState(0x340b, 0xcc04, 0xe930, 0x59ca, 0xd12c, 0xde47, 0x1, 0x1);
        gbc.writeMem(0x340b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0231
        gbc.setState(0x95fd, 0xaa02, 0x9620, 0xa94d, 0xd213, 0x5fef, 0x0, 0x1);
        gbc.writeMem(0x95fd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaa02, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fd));
        EXPECT(0xb1, gbc.readMem(0x95fe));
        // CB B1 0232
        gbc.setState(0x52c0, 0x8b0b, 0x1f40, 0x5eb5, 0xf143, 0x6f22, 0x0, 0x1);
        gbc.writeMem(0x52c0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0233
        gbc.setState(0xe481, 0x4afd, 0xcd30, 0x7db2, 0xa6f, 0xe17d, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0xb1, gbc.readMem(0xe482));
        // CB B1 0235
        gbc.setState(0x4b9d, 0xe12b, 0x1550, 0xa8ea, 0x1881, 0xcf15, 0x0, 0x1);
        gbc.writeMem(0x4b9d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x4b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0236
        gbc.setState(0x9856, 0xea8a, 0x300, 0x6283, 0x1b9c, 0xc2d3, 0x1, 0x1);
        gbc.writeMem(0x9856, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x9858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9856));
        EXPECT(0xb1, gbc.readMem(0x9857));
        // CB B1 0237
        gbc.setState(0x7bcd, 0x2271, 0x9780, 0xbdd5, 0xc720, 0x5e8b, 0x0, 0x0);
        gbc.writeMem(0x7bcd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0x7bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0238
        gbc.setState(0xaea8, 0x8beb, 0x36d0, 0x9ecd, 0x30bb, 0xf9ff, 0x1, 0x1);
        gbc.writeMem(0xaea8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8beb, gbc.sp());
        EXPECT(0xaeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea8));
        EXPECT(0xb1, gbc.readMem(0xaea9));
        // CB B1 0239
        gbc.setState(0x9d5, 0x7781, 0x45c0, 0x6ba9, 0x38fc, 0xe5a6, 0x1, 0x1);
        gbc.writeMem(0x9d5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7781, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 023A
        gbc.setState(0x8e02, 0xf862, 0x4820, 0x587e, 0xd8ae, 0xd, 0x1, 0x0);
        gbc.writeMem(0x8e02, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf862, gbc.sp());
        EXPECT(0x8e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e02));
        EXPECT(0xb1, gbc.readMem(0x8e03));
        // CB B1 023B
        gbc.setState(0x7e9e, 0xe205, 0xfe10, 0xf349, 0x847, 0x5a88, 0x1, 0x0);
        gbc.writeMem(0x7e9e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0x7ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 023C
        gbc.setState(0xa599, 0xdc91, 0x6c30, 0x3a7d, 0x8775, 0x295e, 0x0, 0x0);
        gbc.writeMem(0xa599, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdc91, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa599));
        EXPECT(0xb1, gbc.readMem(0xa59a));
        // CB B1 023D
        gbc.setState(0x8db3, 0x8713, 0xeee0, 0x917a, 0x4035, 0x9884, 0x1, 0x1);
        gbc.writeMem(0x8db3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8713, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0xb1, gbc.readMem(0x8db4));
        // CB B1 023E
        gbc.setState(0x6350, 0xe4e5, 0x6aa0, 0x8f1c, 0xb5d2, 0x73f6, 0x1, 0x0);
        gbc.writeMem(0x6350, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe4e5, gbc.sp());
        EXPECT(0x6352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 023F
        gbc.setState(0x3725, 0xb4b9, 0xd730, 0x913d, 0x464e, 0x2ea8, 0x0, 0x0);
        gbc.writeMem(0x3725, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0240
        gbc.setState(0x754c, 0xd6a5, 0x6a30, 0x41cb, 0x3364, 0xc86d, 0x1, 0x0);
        gbc.writeMem(0x754c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd6a5, gbc.sp());
        EXPECT(0x754e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0241
        gbc.setState(0xebde, 0xff28, 0x94c0, 0x9a3e, 0xcddd, 0x131c, 0x1, 0x1);
        gbc.writeMem(0xebde, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xff28, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0xb1, gbc.readMem(0xebdf));
        // CB B1 0242
        gbc.setState(0x19dc, 0x5dc4, 0x3780, 0xe34e, 0xb95e, 0x4f88, 0x0, 0x0);
        gbc.writeMem(0x19dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0x19de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0243
        gbc.setState(0x9962, 0xf1af, 0xc420, 0xab56, 0xbec0, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0x9962, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf1af, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9962));
        EXPECT(0xb1, gbc.readMem(0x9963));
        // CB B1 0244
        gbc.setState(0x4bd3, 0x97f9, 0x6b50, 0x590e, 0xf8d0, 0x72e3, 0x0, 0x0);
        gbc.writeMem(0x4bd3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0x4bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0245
        gbc.setState(0xa91d, 0xb270, 0x5e00, 0x8c05, 0x9f33, 0xfd3a, 0x1, 0x1);
        gbc.writeMem(0xa91d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb270, gbc.sp());
        EXPECT(0xa91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91d));
        EXPECT(0xb1, gbc.readMem(0xa91e));
        // CB B1 0246
        gbc.setState(0xb851, 0x113f, 0xe630, 0x7029, 0x9160, 0xa1eb, 0x0, 0x0);
        gbc.writeMem(0xb851, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0xb853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb851));
        EXPECT(0xb1, gbc.readMem(0xb852));
        // CB B1 0247
        gbc.setState(0x6c80, 0x64c, 0x1dd0, 0x246d, 0xb177, 0x3cd8, 0x1, 0x0);
        gbc.writeMem(0x6c80, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0x6c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0248
        gbc.setState(0x815d, 0x4d08, 0xc6b0, 0x1bb4, 0xdf49, 0x5d60, 0x1, 0x0);
        gbc.writeMem(0x815d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d08, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0xb1, gbc.readMem(0x815e));
        // CB B1 0249
        gbc.setState(0xef6b, 0x6776, 0x2d40, 0xacad, 0x70ee, 0x664a, 0x1, 0x1);
        gbc.writeMem(0xef6b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6776, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6b));
        EXPECT(0xb1, gbc.readMem(0xef6c));
        // CB B1 024A
        gbc.setState(0x165e, 0xcd0a, 0xb740, 0xb306, 0xeee7, 0x184d, 0x1, 0x0);
        gbc.writeMem(0x165e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcd0a, gbc.sp());
        EXPECT(0x1660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 024B
        gbc.setState(0x4a93, 0xe7b8, 0x9960, 0xf57d, 0x6efd, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x4a93, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe7b8, gbc.sp());
        EXPECT(0x4a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 024C
        gbc.setState(0x5825, 0x7126, 0xab60, 0xe895, 0x6184, 0x93af, 0x1, 0x0);
        gbc.writeMem(0x5825, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7126, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 024D
        gbc.setState(0x10ee, 0x2391, 0x4ee0, 0xef8a, 0x2c0e, 0x955d, 0x0, 0x0);
        gbc.writeMem(0x10ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2391, gbc.sp());
        EXPECT(0x10f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 024E
        gbc.setState(0x991d, 0x7302, 0xe220, 0xb57a, 0x32c0, 0x3cf, 0x0, 0x1);
        gbc.writeMem(0x991d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7302, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991d));
        EXPECT(0xb1, gbc.readMem(0x991e));
        // CB B1 024F
        gbc.setState(0xb9db, 0x36c6, 0x9ed0, 0xbe0b, 0x18a5, 0x2840, 0x1, 0x0);
        gbc.writeMem(0xb9db, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x36c6, gbc.sp());
        EXPECT(0xb9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9db));
        EXPECT(0xb1, gbc.readMem(0xb9dc));
        // CB B1 0251
        gbc.setState(0x7499, 0x7222, 0xccb0, 0xbbbe, 0x8665, 0x8ad2, 0x0, 0x0);
        gbc.writeMem(0x7499, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7222, gbc.sp());
        EXPECT(0x749b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0253
        gbc.setState(0x51d0, 0x58ec, 0xdb0, 0x83a5, 0x1067, 0xa111, 0x1, 0x1);
        gbc.writeMem(0x51d0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0254
        gbc.setState(0x2b8, 0x3ba4, 0x8ab0, 0xd0ca, 0x8a26, 0x4326, 0x1, 0x0);
        gbc.writeMem(0x2b8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3ba4, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0255
        gbc.setState(0x29dc, 0x2f6b, 0xb810, 0x82bf, 0xacce, 0xd058, 0x0, 0x0);
        gbc.writeMem(0x29dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0256
        gbc.setState(0x312e, 0x2fae, 0xd7a0, 0x9949, 0x8ee3, 0x9596, 0x1, 0x0);
        gbc.writeMem(0x312e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2fae, gbc.sp());
        EXPECT(0x3130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0257
        gbc.setState(0xb9d5, 0xcfc3, 0x62c0, 0x37c, 0xcd12, 0x244c, 0x0, 0x1);
        gbc.writeMem(0xb9d5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcfc3, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d5));
        EXPECT(0xb1, gbc.readMem(0xb9d6));
        // CB B1 0258
        gbc.setState(0x7e2b, 0xf2db, 0x1f90, 0x89c8, 0xd9f3, 0x2a09, 0x0, 0x0);
        gbc.writeMem(0x7e2b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2db, gbc.sp());
        EXPECT(0x7e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0259
        gbc.setState(0x2a28, 0xdac2, 0x430, 0x3a36, 0xe924, 0xb592, 0x1, 0x0);
        gbc.writeMem(0x2a28, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdac2, gbc.sp());
        EXPECT(0x2a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 025A
        gbc.setState(0xc5db, 0xbf95, 0xcc00, 0xbdb5, 0xb664, 0x1e9b, 0x0, 0x0);
        gbc.writeMem(0xc5db, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0xb1, gbc.readMem(0xc5dc));
        // CB B1 025B
        gbc.setState(0xe780, 0xb3d0, 0x8bb0, 0x5795, 0x709b, 0xcfa6, 0x1, 0x1);
        gbc.writeMem(0xe780, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe780));
        EXPECT(0xb1, gbc.readMem(0xe781));
        // CB B1 025C
        gbc.setState(0x7a05, 0xda10, 0xe980, 0x8c7, 0x3739, 0x52a5, 0x1, 0x0);
        gbc.writeMem(0x7a05, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0x7a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 025D
        gbc.setState(0xbe1c, 0xcfcf, 0x4930, 0xb460, 0x29e, 0xcec9, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcfcf, gbc.sp());
        EXPECT(0xbe1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1c));
        EXPECT(0xb1, gbc.readMem(0xbe1d));
        // CB B1 025F
        gbc.setState(0x9504, 0x3475, 0xb450, 0x4b04, 0xbf43, 0x73f7, 0x1, 0x0);
        gbc.writeMem(0x9504, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0x9506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9504));
        EXPECT(0xb1, gbc.readMem(0x9505));
        // CB B1 0260
        gbc.setState(0x66c8, 0xd9e3, 0xbb40, 0xa5de, 0xc9a8, 0xc31b, 0x1, 0x1);
        gbc.writeMem(0x66c8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0261
        gbc.setState(0xa818, 0xbf28, 0x75e0, 0x1fd5, 0x4950, 0xd8d, 0x1, 0x0);
        gbc.writeMem(0xa818, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbf28, gbc.sp());
        EXPECT(0xa81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa818));
        EXPECT(0xb1, gbc.readMem(0xa819));
        // CB B1 0262
        gbc.setState(0x2d7b, 0x81fb, 0x60c0, 0x30cb, 0x474a, 0x3169, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0x2d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0264
        gbc.setState(0xdb8c, 0x99e5, 0x3a90, 0x9ea9, 0x535e, 0x676a, 0x0, 0x1);
        gbc.writeMem(0xdb8c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8c));
        EXPECT(0xb1, gbc.readMem(0xdb8d));
        // CB B1 0265
        gbc.setState(0x49be, 0x3798, 0xffa0, 0xcc36, 0x34e7, 0xf0b5, 0x1, 0x0);
        gbc.writeMem(0x49be, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0x49c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0266
        gbc.setState(0xd37, 0x217a, 0x4e80, 0xc2cb, 0x4adf, 0xeeb5, 0x0, 0x1);
        gbc.writeMem(0xd37, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0267
        gbc.setState(0x27f6, 0xd9db, 0xeb20, 0xf6bd, 0xa4a3, 0x98e1, 0x0, 0x1);
        gbc.writeMem(0x27f6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd9db, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0268
        gbc.setState(0x40ad, 0x724d, 0xb280, 0xa082, 0xb377, 0x9e24, 0x0, 0x0);
        gbc.writeMem(0x40ad, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x724d, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0269
        gbc.setState(0x1761, 0x399a, 0x8d80, 0xb51f, 0x819b, 0x215, 0x1, 0x0);
        gbc.writeMem(0x1761, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0x1763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 026A
        gbc.setState(0x555, 0x333, 0xc270, 0xafcb, 0xecd2, 0x4e89, 0x1, 0x0);
        gbc.writeMem(0x555, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x333, gbc.sp());
        EXPECT(0x557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 026B
        gbc.setState(0x406e, 0xa82c, 0x42d0, 0x34d7, 0x88cd, 0xa814, 0x1, 0x1);
        gbc.writeMem(0x406e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa82c, gbc.sp());
        EXPECT(0x4070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 026C
        gbc.setState(0xdb95, 0xfa4e, 0xa760, 0x332f, 0xe63e, 0x552b, 0x0, 0x0);
        gbc.writeMem(0xdb95, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfa4e, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb95));
        EXPECT(0xb1, gbc.readMem(0xdb96));
        // CB B1 026D
        gbc.setState(0xdd28, 0x1d16, 0x2db0, 0xcf0d, 0x586d, 0x3161, 0x0, 0x1);
        gbc.writeMem(0xdd28, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0xdd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd28));
        EXPECT(0xb1, gbc.readMem(0xdd29));
        // CB B1 026E
        gbc.setState(0x138d, 0x8e29, 0xcb60, 0x6364, 0x8cc1, 0x6ab0, 0x0, 0x0);
        gbc.writeMem(0x138d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8e29, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 026F
        gbc.setState(0x3199, 0xdd27, 0x51d0, 0x898b, 0x4d26, 0xc788, 0x0, 0x0);
        gbc.writeMem(0x3199, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdd27, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0270
        gbc.setState(0xa5a4, 0xb9aa, 0xba70, 0xb5f3, 0x421f, 0xcf69, 0x0, 0x0);
        gbc.writeMem(0xa5a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb9aa, gbc.sp());
        EXPECT(0xa5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a4));
        EXPECT(0xb1, gbc.readMem(0xa5a5));
        // CB B1 0271
        gbc.setState(0x3087, 0x96f1, 0xa180, 0xc3ed, 0xcf74, 0x778e, 0x1, 0x1);
        gbc.writeMem(0x3087, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0x3089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0272
        gbc.setState(0xe119, 0x1ba6, 0x5920, 0xe0a3, 0xe2e9, 0x52f3, 0x0, 0x0);
        gbc.writeMem(0xe119, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe119));
        EXPECT(0xb1, gbc.readMem(0xe11a));
        // CB B1 0273
        gbc.setState(0x8832, 0x37ea, 0x370, 0x7ef4, 0x3cce, 0x1bfd, 0x1, 0x0);
        gbc.writeMem(0x8832, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x37ea, gbc.sp());
        EXPECT(0x8834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8832));
        EXPECT(0xb1, gbc.readMem(0x8833));
        // CB B1 0274
        gbc.setState(0x18db, 0x2dfc, 0x4d60, 0x5b77, 0x6dd4, 0x4199, 0x1, 0x1);
        gbc.writeMem(0x18db, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2dfc, gbc.sp());
        EXPECT(0x18dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0275
        gbc.setState(0x5488, 0x2636, 0xcd10, 0xd027, 0x6410, 0xaf1d, 0x0, 0x0);
        gbc.writeMem(0x5488, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x548a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0276
        gbc.setState(0x9de2, 0x25c2, 0x81a0, 0xa2af, 0x21af, 0x3ce4, 0x1, 0x1);
        gbc.writeMem(0x9de2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x25c2, gbc.sp());
        EXPECT(0x9de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de2));
        EXPECT(0xb1, gbc.readMem(0x9de3));
        // CB B1 0277
        gbc.setState(0xb244, 0x1b64, 0x85c0, 0xdbca, 0x58ec, 0xdb4c, 0x1, 0x1);
        gbc.writeMem(0xb244, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb244));
        EXPECT(0xb1, gbc.readMem(0xb245));
        // CB B1 0278
        gbc.setState(0x6256, 0x7687, 0x3920, 0x1343, 0xc9d0, 0x7708, 0x0, 0x1);
        gbc.writeMem(0x6256, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0279
        gbc.setState(0x3480, 0x1ca9, 0xe300, 0x2f6b, 0xdcb0, 0x1918, 0x0, 0x1);
        gbc.writeMem(0x3480, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x3482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 027A
        gbc.setState(0x3dca, 0x574f, 0x450, 0x58e7, 0xebb1, 0xee46, 0x0, 0x0);
        gbc.writeMem(0x3dca, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x574f, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 027B
        gbc.setState(0xc4f6, 0x28e0, 0x8b70, 0x290b, 0xcac6, 0x4aae, 0x0, 0x1);
        gbc.writeMem(0xc4f6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0xc4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f6));
        EXPECT(0xb1, gbc.readMem(0xc4f7));
        // CB B1 027D
        gbc.setState(0xb32f, 0x9db0, 0x10e0, 0x221b, 0x6fb1, 0x84da, 0x1, 0x1);
        gbc.writeMem(0xb32f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32f));
        EXPECT(0xb1, gbc.readMem(0xb330));
        // CB B1 027E
        gbc.setState(0x5637, 0x8abf, 0xdb50, 0x11e4, 0xd468, 0x5b63, 0x1, 0x0);
        gbc.writeMem(0x5637, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0x5639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 027F
        gbc.setState(0x1f83, 0xdbcb, 0xe470, 0xcdd, 0xeb18, 0x3b5d, 0x1, 0x0);
        gbc.writeMem(0x1f83, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdbcb, gbc.sp());
        EXPECT(0x1f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0280
        gbc.setState(0xc53d, 0x8f07, 0x2f40, 0x810a, 0x9102, 0x636d, 0x1, 0x1);
        gbc.writeMem(0xc53d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53d));
        EXPECT(0xb1, gbc.readMem(0xc53e));
        // CB B1 0281
        gbc.setState(0xd282, 0xdf5, 0xa930, 0x3faf, 0x332e, 0xa7f5, 0x0, 0x1);
        gbc.writeMem(0xd282, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf5, gbc.sp());
        EXPECT(0xd284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd282));
        EXPECT(0xb1, gbc.readMem(0xd283));
        // CB B1 0282
        gbc.setState(0x58d1, 0xa6c5, 0x93d0, 0x2783, 0x8499, 0xf1b6, 0x0, 0x0);
        gbc.writeMem(0x58d1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa6c5, gbc.sp());
        EXPECT(0x58d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0283
        gbc.setState(0xe8f, 0xe102, 0x9eb0, 0x1278, 0x3818, 0x1cc2, 0x0, 0x0);
        gbc.writeMem(0xe8f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0284
        gbc.setState(0x56e7, 0x2677, 0x8ee0, 0xe673, 0xbc33, 0x2520, 0x0, 0x1);
        gbc.writeMem(0x56e7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x56e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0285
        gbc.setState(0xd40e, 0xc163, 0x5040, 0x6e11, 0x5e88, 0xf33, 0x0, 0x0);
        gbc.writeMem(0xd40e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40e));
        EXPECT(0xb1, gbc.readMem(0xd40f));
        // CB B1 0286
        gbc.setState(0x8b1a, 0xe64b, 0x9670, 0x5491, 0xc804, 0x6588, 0x1, 0x1);
        gbc.writeMem(0x8b1a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0x8b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1a));
        EXPECT(0xb1, gbc.readMem(0x8b1b));
        // CB B1 0287
        gbc.setState(0x7165, 0x5089, 0x40f0, 0xae66, 0x4db0, 0x5a0f, 0x0, 0x1);
        gbc.writeMem(0x7165, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0x7167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0288
        gbc.setState(0x55f0, 0x3d83, 0x6670, 0x2ce8, 0x8fd6, 0x61a5, 0x0, 0x1);
        gbc.writeMem(0x55f0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0x55f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0289
        gbc.setState(0x1dc5, 0xc36e, 0x72e0, 0x5b99, 0x10c5, 0x2152, 0x1, 0x0);
        gbc.writeMem(0x1dc5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc36e, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 028A
        gbc.setState(0xd018, 0x849d, 0x2e00, 0x49d1, 0xb296, 0xaebc, 0x0, 0x0);
        gbc.writeMem(0xd018, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0xd01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd018));
        EXPECT(0xb1, gbc.readMem(0xd019));
        // CB B1 028B
        gbc.setState(0x196, 0xbeea, 0xe360, 0x818d, 0x6915, 0x898d, 0x0, 0x1);
        gbc.writeMem(0x196, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbeea, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 028C
        gbc.setState(0xe0ea, 0x3f2a, 0x8210, 0xe2c9, 0x5b3, 0xb632, 0x0, 0x0);
        gbc.writeMem(0xe0ea, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3f2a, gbc.sp());
        EXPECT(0xe0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ea));
        EXPECT(0xb1, gbc.readMem(0xe0eb));
        // CB B1 028D
        gbc.setState(0xe95d, 0x4681, 0xc570, 0x32cb, 0x5488, 0xa8e9, 0x1, 0x0);
        gbc.writeMem(0xe95d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4681, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95d));
        EXPECT(0xb1, gbc.readMem(0xe95e));
        // CB B1 028E
        gbc.setState(0x4610, 0xb264, 0x5100, 0xe3ed, 0xb2ad, 0xa97b, 0x0, 0x1);
        gbc.writeMem(0x4610, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0x4612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 028F
        gbc.setState(0x784c, 0x64d3, 0xe180, 0xcdda, 0x814b, 0x63a8, 0x0, 0x0);
        gbc.writeMem(0x784c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0x784e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0290
        gbc.setState(0xad6c, 0xed3d, 0x23c0, 0x878f, 0x2229, 0xc63c, 0x1, 0x0);
        gbc.writeMem(0xad6c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xed3d, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6c));
        EXPECT(0xb1, gbc.readMem(0xad6d));
        // CB B1 0291
        gbc.setState(0xb449, 0xe4a8, 0xb290, 0xb3c7, 0x1b5e, 0x1b0a, 0x1, 0x1);
        gbc.writeMem(0xb449, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xb44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb449));
        EXPECT(0xb1, gbc.readMem(0xb44a));
        // CB B1 0292
        gbc.setState(0x515b, 0xde9c, 0xbf70, 0x1ac3, 0x12c1, 0x502f, 0x0, 0x1);
        gbc.writeMem(0x515b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0293
        gbc.setState(0xe4c, 0x6e76, 0xdf20, 0xefc9, 0xb807, 0xbdba, 0x0, 0x0);
        gbc.writeMem(0xe4c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0294
        gbc.setState(0xc9f7, 0xcd91, 0xbe50, 0x6ce9, 0x82ed, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0xc9f7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcd91, gbc.sp());
        EXPECT(0xc9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f7));
        EXPECT(0xb1, gbc.readMem(0xc9f8));
        // CB B1 0295
        gbc.setState(0x3197, 0x4e31, 0xadb0, 0x4b22, 0x4919, 0xa048, 0x1, 0x0);
        gbc.writeMem(0x3197, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4e31, gbc.sp());
        EXPECT(0x3199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0296
        gbc.setState(0xe00d, 0xfffb, 0xe650, 0x7243, 0xd1d2, 0x1d54, 0x1, 0x0);
        gbc.writeMem(0xe00d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfffb, gbc.sp());
        EXPECT(0xe00f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00d));
        EXPECT(0xb1, gbc.readMem(0xe00e));
        // CB B1 0297
        gbc.setState(0xcf6, 0x8fab, 0x4630, 0x2e5b, 0x348c, 0x729d, 0x1, 0x1);
        gbc.writeMem(0xcf6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8fab, gbc.sp());
        EXPECT(0xcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0299
        gbc.setState(0xe12a, 0xaae0, 0x7fe0, 0x111d, 0x2f18, 0x90a9, 0x1, 0x0);
        gbc.writeMem(0xe12a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaae0, gbc.sp());
        EXPECT(0xe12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12a));
        EXPECT(0xb1, gbc.readMem(0xe12b));
        // CB B1 029A
        gbc.setState(0x2b67, 0x2764, 0x980, 0x52dd, 0x1bd2, 0x1b3c, 0x0, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 029B
        gbc.setState(0x30a3, 0xb860, 0xb00, 0x9179, 0x7a63, 0xede, 0x0, 0x1);
        gbc.writeMem(0x30a3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb860, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 029C
        gbc.setState(0x790d, 0x23c7, 0x56e0, 0xec66, 0x9787, 0x701c, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x23c7, gbc.sp());
        EXPECT(0x790f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 029D
        gbc.setState(0x3442, 0x670b, 0xd530, 0x3725, 0x65e5, 0xb360, 0x0, 0x0);
        gbc.writeMem(0x3442, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x670b, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 029E
        gbc.setState(0x6651, 0x3eea, 0x7ad0, 0x630b, 0x5bac, 0x69dd, 0x0, 0x1);
        gbc.writeMem(0x6651, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0x6653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 029F
        gbc.setState(0x96fd, 0x9a9f, 0x6020, 0xa2f5, 0xae84, 0x90f0, 0x0, 0x0);
        gbc.writeMem(0x96fd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9a9f, gbc.sp());
        EXPECT(0x96ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fd));
        EXPECT(0xb1, gbc.readMem(0x96fe));
        // CB B1 02A0
        gbc.setState(0x2598, 0xc378, 0x640, 0xc9b3, 0x7ab4, 0x719e, 0x1, 0x1);
        gbc.writeMem(0x2598, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc378, gbc.sp());
        EXPECT(0x259a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02A1
        gbc.setState(0xe6a4, 0xc5ac, 0x4380, 0xa3a8, 0x6177, 0x2962, 0x0, 0x1);
        gbc.writeMem(0xe6a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc5ac, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a4));
        EXPECT(0xb1, gbc.readMem(0xe6a5));
        // CB B1 02A2
        gbc.setState(0x5610, 0x26e5, 0xfdf0, 0xa043, 0x7ff2, 0x9966, 0x1, 0x0);
        gbc.writeMem(0x5610, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x5612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02A3
        gbc.setState(0xb8d, 0x176e, 0x1ad0, 0xc13c, 0x4a6a, 0xf92, 0x0, 0x1);
        gbc.writeMem(0xb8d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0xb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02A4
        gbc.setState(0x9467, 0xd9d, 0x6e70, 0x508c, 0x396e, 0x41fc, 0x0, 0x0);
        gbc.writeMem(0x9467, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd9d, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9467));
        EXPECT(0xb1, gbc.readMem(0x9468));
        // CB B1 02A5
        gbc.setState(0x63b3, 0xba51, 0x9e90, 0xbab4, 0xc0f3, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0x63b3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xba51, gbc.sp());
        EXPECT(0x63b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02A6
        gbc.setState(0x59e2, 0x34d3, 0x6b00, 0x9bab, 0x6104, 0xc00b, 0x1, 0x1);
        gbc.writeMem(0x59e2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02A7
        gbc.setState(0x5cff, 0x81f1, 0x7ab0, 0x7d34, 0x56ea, 0x875, 0x1, 0x0);
        gbc.writeMem(0x5cff, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02A8
        gbc.setState(0xe14e, 0x7bac, 0x8240, 0x22b4, 0x12ea, 0xe692, 0x0, 0x1);
        gbc.writeMem(0xe14e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7bac, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14e));
        EXPECT(0xb1, gbc.readMem(0xe14f));
        // CB B1 02A9
        gbc.setState(0x4e17, 0xec71, 0xac90, 0x296b, 0xf5c4, 0xc37e, 0x1, 0x0);
        gbc.writeMem(0x4e17, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xec71, gbc.sp());
        EXPECT(0x4e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02AA
        gbc.setState(0x4c73, 0xb585, 0xa770, 0xe61c, 0x384a, 0xb34e, 0x1, 0x1);
        gbc.writeMem(0x4c73, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0x4c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02AB
        gbc.setState(0x881b, 0x76bc, 0x28a0, 0x9298, 0x36af, 0xca41, 0x1, 0x1);
        gbc.writeMem(0x881b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x76bc, gbc.sp());
        EXPECT(0x881d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881b));
        EXPECT(0xb1, gbc.readMem(0x881c));
        // CB B1 02AC
        gbc.setState(0xdf08, 0x6b47, 0x8b20, 0x8aa7, 0xa124, 0x3415, 0x1, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf08));
        EXPECT(0xb1, gbc.readMem(0xdf09));
        // CB B1 02AD
        gbc.setState(0x8ac5, 0xa6f8, 0x40a0, 0xe4c9, 0x2369, 0x282b, 0x0, 0x0);
        gbc.writeMem(0x8ac5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa6f8, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac5));
        EXPECT(0xb1, gbc.readMem(0x8ac6));
        // CB B1 02AE
        gbc.setState(0xe562, 0x1943, 0x700, 0xab10, 0x52bc, 0x69a0, 0x1, 0x1);
        gbc.writeMem(0xe562, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0xb1, gbc.readMem(0xe563));
        // CB B1 02B0
        gbc.setState(0x3316, 0xbe18, 0x73b0, 0x6da9, 0x4d4c, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0x3316, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0x3318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02B1
        gbc.setState(0x179b, 0x89b4, 0x21a0, 0xaf5a, 0x14ad, 0x3417, 0x0, 0x1);
        gbc.writeMem(0x179b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x89b4, gbc.sp());
        EXPECT(0x179d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02B2
        gbc.setState(0x1aa2, 0xc911, 0xc880, 0x34a6, 0x48c2, 0x7579, 0x1, 0x0);
        gbc.writeMem(0x1aa2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc911, gbc.sp());
        EXPECT(0x1aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02B3
        gbc.setState(0x379b, 0xd0f3, 0xfab0, 0xdc22, 0x37c9, 0x907c, 0x0, 0x1);
        gbc.writeMem(0x379b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0x379d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02B4
        gbc.setState(0x504f, 0xeed3, 0x9a10, 0xc845, 0xcf63, 0x2079, 0x1, 0x0);
        gbc.writeMem(0x504f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeed3, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02B5
        gbc.setState(0x5b5f, 0x62cc, 0x7e30, 0xda95, 0xd8f2, 0x5631, 0x0, 0x1);
        gbc.writeMem(0x5b5f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x62cc, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02B6
        gbc.setState(0x3c49, 0x5bed, 0xd2b0, 0x56c9, 0xeb2f, 0x8f5c, 0x1, 0x1);
        gbc.writeMem(0x3c49, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0x3c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02B7
        gbc.setState(0x4563, 0x10b9, 0xeb20, 0xa7e0, 0xd50, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x10b9, gbc.sp());
        EXPECT(0x4565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02B8
        gbc.setState(0x3ad5, 0x573c, 0x44a0, 0x5d59, 0x4e42, 0x46cb, 0x0, 0x0);
        gbc.writeMem(0x3ad5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x573c, gbc.sp());
        EXPECT(0x3ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02B9
        gbc.setState(0x98c, 0x3953, 0x14d0, 0x7d4b, 0x8c3d, 0x5116, 0x1, 0x0);
        gbc.writeMem(0x98c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02BA
        gbc.setState(0x11d6, 0xc3c, 0x9800, 0xcc14, 0xa097, 0xab70, 0x0, 0x0);
        gbc.writeMem(0x11d6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc3c, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02BB
        gbc.setState(0xc4a2, 0xe41c, 0xd4b0, 0x6a45, 0x6be5, 0x1a20, 0x0, 0x0);
        gbc.writeMem(0xc4a2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe41c, gbc.sp());
        EXPECT(0xc4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a2));
        EXPECT(0xb1, gbc.readMem(0xc4a3));
        // CB B1 02BC
        gbc.setState(0x3435, 0xaa6c, 0xcd90, 0xf92d, 0x8753, 0x7f90, 0x1, 0x0);
        gbc.writeMem(0x3435, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaa6c, gbc.sp());
        EXPECT(0x3437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02BD
        gbc.setState(0x637a, 0xfc02, 0xd6a0, 0x7bbb, 0xd8df, 0x802, 0x0, 0x1);
        gbc.writeMem(0x637a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc02, gbc.sp());
        EXPECT(0x637c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02BE
        gbc.setState(0x43ac, 0x1f63, 0x4dc0, 0x9682, 0x40c0, 0x3d3d, 0x0, 0x1);
        gbc.writeMem(0x43ac, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1f63, gbc.sp());
        EXPECT(0x43ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02BF
        gbc.setState(0x9139, 0x8f6f, 0xba0, 0xe406, 0x13a5, 0x58bf, 0x0, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9139));
        EXPECT(0xb1, gbc.readMem(0x913a));
        // CB B1 02C0
        gbc.setState(0x20e5, 0x400b, 0xc520, 0xda6d, 0x10ff, 0x9932, 0x0, 0x1);
        gbc.writeMem(0x20e5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x400b, gbc.sp());
        EXPECT(0x20e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02C1
        gbc.setState(0x3c78, 0x7187, 0x250, 0xa5da, 0xe32b, 0xf410, 0x0, 0x1);
        gbc.writeMem(0x3c78, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02C2
        gbc.setState(0xab62, 0x2ff8, 0xf7c0, 0xfe5b, 0x9cae, 0xdf0a, 0x0, 0x0);
        gbc.writeMem(0xab62, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab62));
        EXPECT(0xb1, gbc.readMem(0xab63));
        // CB B1 02C3
        gbc.setState(0x161f, 0x408, 0xb6b0, 0xa384, 0xecfe, 0x3cc8, 0x1, 0x0);
        gbc.writeMem(0x161f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x408, gbc.sp());
        EXPECT(0x1621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02C4
        gbc.setState(0x5c82, 0x549f, 0x5ab0, 0xa7f, 0x87cf, 0xac3c, 0x0, 0x0);
        gbc.writeMem(0x5c82, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x549f, gbc.sp());
        EXPECT(0x5c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02C5
        gbc.setState(0x4ab1, 0xc662, 0x8e70, 0x61a9, 0x603c, 0x1158, 0x0, 0x0);
        gbc.writeMem(0x4ab1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc662, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02C6
        gbc.setState(0xc9dc, 0xa6d4, 0xe0d0, 0xbbf8, 0x3394, 0x14c7, 0x0, 0x1);
        gbc.writeMem(0xc9dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa6d4, gbc.sp());
        EXPECT(0xc9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9dc));
        EXPECT(0xb1, gbc.readMem(0xc9dd));
        // CB B1 02C7
        gbc.setState(0xbc3c, 0x116a, 0xa820, 0x8994, 0x3ae0, 0x2932, 0x1, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x116a, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3c));
        EXPECT(0xb1, gbc.readMem(0xbc3d));
        // CB B1 02C8
        gbc.setState(0x13c7, 0x2614, 0xea50, 0xee75, 0xb478, 0x2f03, 0x0, 0x1);
        gbc.writeMem(0x13c7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2614, gbc.sp());
        EXPECT(0x13c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02C9
        gbc.setState(0xd14e, 0x904, 0xa7a0, 0xec1d, 0x3b20, 0x43e8, 0x0, 0x0);
        gbc.writeMem(0xd14e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x904, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14e));
        EXPECT(0xb1, gbc.readMem(0xd14f));
        // CB B1 02CA
        gbc.setState(0x3ce7, 0x259b, 0x8b60, 0x9551, 0x9a3b, 0xdd56, 0x0, 0x1);
        gbc.writeMem(0x3ce7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x259b, gbc.sp());
        EXPECT(0x3ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02CB
        gbc.setState(0x38, 0xf3cc, 0xffa0, 0xa1dd, 0x641c, 0xbfe0, 0x1, 0x1);
        gbc.writeMem(0x38, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf3cc, gbc.sp());
        EXPECT(0x3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02CC
        gbc.setState(0xaebc, 0xc339, 0xedc0, 0x4ee1, 0xb0bd, 0x3700, 0x1, 0x1);
        gbc.writeMem(0xaebc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc339, gbc.sp());
        EXPECT(0xaebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaebc));
        EXPECT(0xb1, gbc.readMem(0xaebd));
        // CB B1 02CD
        gbc.setState(0x6ad7, 0xeb7b, 0x8e10, 0x6309, 0xeb1c, 0x5abc, 0x1, 0x1);
        gbc.writeMem(0x6ad7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeb7b, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02CE
        gbc.setState(0x62ef, 0xb56, 0xc4a0, 0xae17, 0xaa44, 0x6ba7, 0x1, 0x0);
        gbc.writeMem(0x62ef, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x62f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02CF
        gbc.setState(0x386f, 0x11c4, 0x1630, 0x85fb, 0xb91c, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0x386f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02D0
        gbc.setState(0x4823, 0x2189, 0x6fa0, 0x62a7, 0xe404, 0xffea, 0x0, 0x1);
        gbc.writeMem(0x4823, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0x4825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02D1
        gbc.setState(0x7da6, 0x5445, 0x8e0, 0xbd81, 0xc43f, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0x7da6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02D2
        gbc.setState(0x54c6, 0xe915, 0xcc80, 0xb4d4, 0x9219, 0x3f9f, 0x1, 0x1);
        gbc.writeMem(0x54c6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe915, gbc.sp());
        EXPECT(0x54c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02D3
        gbc.setState(0xe902, 0x9679, 0x4470, 0xad0e, 0xd802, 0xf66d, 0x1, 0x1);
        gbc.writeMem(0xe902, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe902));
        EXPECT(0xb1, gbc.readMem(0xe903));
        // CB B1 02D4
        gbc.setState(0x6d0e, 0x1f73, 0x1a60, 0xc206, 0xe99b, 0x7f36, 0x1, 0x0);
        gbc.writeMem(0x6d0e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1f73, gbc.sp());
        EXPECT(0x6d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02D5
        gbc.setState(0xa12b, 0x2aff, 0x1490, 0x94f2, 0xe7bb, 0x196f, 0x0, 0x0);
        gbc.writeMem(0xa12b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12b));
        EXPECT(0xb1, gbc.readMem(0xa12c));
        // CB B1 02D6
        gbc.setState(0x89ab, 0x6cf8, 0xffe0, 0xf068, 0xb20b, 0x311f, 0x1, 0x1);
        gbc.writeMem(0x89ab, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6cf8, gbc.sp());
        EXPECT(0x89ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ab));
        EXPECT(0xb1, gbc.readMem(0x89ac));
        // CB B1 02D7
        gbc.setState(0xe437, 0x44d3, 0xc620, 0x6950, 0x46b5, 0x786, 0x0, 0x1);
        gbc.writeMem(0xe437, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0xe439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe437));
        EXPECT(0xb1, gbc.readMem(0xe438));
        // CB B1 02DA
        gbc.setState(0x227f, 0x89fb, 0xbfd0, 0xac85, 0xd3bb, 0xb7d3, 0x1, 0x1);
        gbc.writeMem(0x227f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x89fb, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02DB
        gbc.setState(0x22f0, 0x5ff6, 0x8f20, 0x52ee, 0x86da, 0x916b, 0x1, 0x1);
        gbc.writeMem(0x22f0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02DC
        gbc.setState(0xacba, 0xf1df, 0x5ce0, 0xf669, 0x88c8, 0xe8d6, 0x0, 0x0);
        gbc.writeMem(0xacba, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf1df, gbc.sp());
        EXPECT(0xacbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacba));
        EXPECT(0xb1, gbc.readMem(0xacbb));
        // CB B1 02DD
        gbc.setState(0x414b, 0xb1f, 0x5d20, 0x5c61, 0x559a, 0xa34c, 0x1, 0x1);
        gbc.writeMem(0x414b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x414d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02DE
        gbc.setState(0xa9f, 0xab01, 0x91b0, 0xfad4, 0xf65d, 0x4e5e, 0x1, 0x0);
        gbc.writeMem(0xa9f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab01, gbc.sp());
        EXPECT(0xaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02DF
        gbc.setState(0x7150, 0xb446, 0xd420, 0x240b, 0x8252, 0x8cf9, 0x1, 0x0);
        gbc.writeMem(0x7150, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb446, gbc.sp());
        EXPECT(0x7152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02E0
        gbc.setState(0x9c96, 0x4495, 0x6980, 0x6d9c, 0xc32c, 0xd0bb, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4495, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c96));
        EXPECT(0xb1, gbc.readMem(0x9c97));
        // CB B1 02E1
        gbc.setState(0x8002, 0xb5dc, 0xbc70, 0x3f25, 0xf050, 0x4be6, 0x0, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0xb1, gbc.readMem(0x8003));
        // CB B1 02E2
        gbc.setState(0x2663, 0x2fa2, 0x9000, 0x1abd, 0xa389, 0xa000, 0x0, 0x1);
        gbc.writeMem(0x2663, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x2665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02E3
        gbc.setState(0xe366, 0x8308, 0x4080, 0xc1dd, 0x6652, 0xdee5, 0x1, 0x1);
        gbc.writeMem(0xe366, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0xe368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe366));
        EXPECT(0xb1, gbc.readMem(0xe367));
        // CB B1 02E4
        gbc.setState(0xd084, 0xd21a, 0xa640, 0x6caf, 0x536f, 0xe23, 0x1, 0x0);
        gbc.writeMem(0xd084, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd21a, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd084));
        EXPECT(0xb1, gbc.readMem(0xd085));
        // CB B1 02E6
        gbc.setState(0x868d, 0xa33f, 0x20e0, 0x6bc7, 0x4bc1, 0x4957, 0x1, 0x1);
        gbc.writeMem(0x868d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa33f, gbc.sp());
        EXPECT(0x868f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868d));
        EXPECT(0xb1, gbc.readMem(0x868e));
        // CB B1 02E7
        gbc.setState(0x41de, 0x372f, 0xc1a0, 0xcdea, 0xdc6a, 0xdcd7, 0x0, 0x0);
        gbc.writeMem(0x41de, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02E8
        gbc.setState(0xaf, 0x3443, 0xb450, 0xd3a8, 0x4998, 0xe0c2, 0x0, 0x1);
        gbc.writeMem(0xaf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02E9
        gbc.setState(0xefeb, 0x6984, 0xce20, 0x3bd6, 0x3130, 0x361d, 0x1, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0xb1, gbc.readMem(0xefec));
        // CB B1 02EA
        gbc.setState(0x1a08, 0xac74, 0x1050, 0x4d8a, 0x6c0c, 0xd211, 0x1, 0x0);
        gbc.writeMem(0x1a08, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xac74, gbc.sp());
        EXPECT(0x1a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02EB
        gbc.setState(0xc634, 0xd3ea, 0x29b0, 0x803c, 0x939f, 0x8d8c, 0x1, 0x0);
        gbc.writeMem(0xc634, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd3ea, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc634));
        EXPECT(0xb1, gbc.readMem(0xc635));
        // CB B1 02EC
        gbc.setState(0x412f, 0x35bc, 0xa510, 0x7b0a, 0xf0ff, 0x871e, 0x1, 0x1);
        gbc.writeMem(0x412f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x35bc, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02EE
        gbc.setState(0x3292, 0x7f91, 0xefa0, 0x2167, 0x3854, 0x7dea, 0x1, 0x0);
        gbc.writeMem(0x3292, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02EF
        gbc.setState(0x202a, 0x8f94, 0xdd50, 0xfa61, 0x20d9, 0xe076, 0x0, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 02F0
        gbc.setState(0xad1b, 0x2151, 0x72c0, 0xee7a, 0x8320, 0xfd4f, 0x0, 0x0);
        gbc.writeMem(0xad1b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1b));
        EXPECT(0xb1, gbc.readMem(0xad1c));
        // CB B1 02F1
        gbc.setState(0x4c3, 0x81a2, 0x9fa0, 0x245d, 0xfc9b, 0x68a, 0x0, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02F2
        gbc.setState(0x9a10, 0x2a03, 0x3530, 0x6eb4, 0x27e1, 0x2353, 0x0, 0x0);
        gbc.writeMem(0x9a10, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2a03, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a10));
        EXPECT(0xb1, gbc.readMem(0x9a11));
        // CB B1 02F3
        gbc.setState(0xe3e0, 0x1614, 0xee40, 0xbfd3, 0xa917, 0x3675, 0x1, 0x1);
        gbc.writeMem(0xe3e0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1614, gbc.sp());
        EXPECT(0xe3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e0));
        EXPECT(0xb1, gbc.readMem(0xe3e1));
        // CB B1 02F4
        gbc.setState(0xc206, 0xb7cd, 0x9000, 0x4c7c, 0xcb9a, 0x5e62, 0x0, 0x0);
        gbc.writeMem(0xc206, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc206));
        EXPECT(0xb1, gbc.readMem(0xc207));
        // CB B1 02F5
        gbc.setState(0x31d, 0x94f7, 0x1080, 0x1d79, 0xa8e1, 0x5a06, 0x1, 0x1);
        gbc.writeMem(0x31d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0x31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02F6
        gbc.setState(0x8136, 0x1360, 0xf8f0, 0xcf6f, 0xc337, 0x7057, 0x1, 0x0);
        gbc.writeMem(0x8136, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1360, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8136));
        EXPECT(0xb1, gbc.readMem(0x8137));
        // CB B1 02F7
        gbc.setState(0x9580, 0x732f, 0x9f0, 0xc148, 0x8855, 0xa338, 0x0, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x732f, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0xb1, gbc.readMem(0x9581));
        // CB B1 02F8
        gbc.setState(0x3e72, 0x5653, 0xba00, 0xc8ec, 0x35bc, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0x3e72, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02F9
        gbc.setState(0x90a0, 0x672a, 0x6360, 0x5f69, 0xa3d7, 0x3cc3, 0x1, 0x0);
        gbc.writeMem(0x90a0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x672a, gbc.sp());
        EXPECT(0x90a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a0));
        EXPECT(0xb1, gbc.readMem(0x90a1));
        // CB B1 02FA
        gbc.setState(0xd99, 0x64c, 0xe20, 0xdc2, 0xb8cd, 0x13a, 0x1, 0x1);
        gbc.writeMem(0xd99, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0xd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02FB
        gbc.setState(0xa452, 0xc7e5, 0x1950, 0xd76c, 0x20b8, 0x243d, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc7e5, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0xb1, gbc.readMem(0xa453));
        // CB B1 02FC
        gbc.setState(0x8412, 0x3cab, 0xe20, 0x6a23, 0x13e9, 0x1645, 0x1, 0x1);
        gbc.writeMem(0x8412, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3cab, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8412));
        EXPECT(0xb1, gbc.readMem(0x8413));
        // CB B1 02FD
        gbc.setState(0x4ebd, 0x6c55, 0xc720, 0xbeb6, 0x52dc, 0xa4ef, 0x0, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6c55, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02FE
        gbc.setState(0x1a4b, 0xa73c, 0x47e0, 0x85e, 0xf24a, 0x6534, 0x1, 0x1);
        gbc.writeMem(0x1a4b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa73c, gbc.sp());
        EXPECT(0x1a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 02FF
        gbc.setState(0x7b02, 0x7594, 0x4bd0, 0x282c, 0xa59, 0x3f16, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7594, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0300
        gbc.setState(0xafc9, 0x246, 0xd460, 0xcbc3, 0x8c34, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x246, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0xb1, gbc.readMem(0xafca));
        // CB B1 0301
        gbc.setState(0x776b, 0xf63b, 0xe790, 0x9de3, 0x8a23, 0xbe0f, 0x0, 0x1);
        gbc.writeMem(0x776b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf63b, gbc.sp());
        EXPECT(0x776d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0302
        gbc.setState(0x1820, 0x7992, 0xc0f0, 0xfaf3, 0xd102, 0x9e47, 0x0, 0x1);
        gbc.writeMem(0x1820, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7992, gbc.sp());
        EXPECT(0x1822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0303
        gbc.setState(0x3e4f, 0x647e, 0x40a0, 0xd7a5, 0xdc9c, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0x3e4f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x647e, gbc.sp());
        EXPECT(0x3e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0305
        gbc.setState(0xcd8f, 0x89db, 0x6090, 0x4e48, 0x161e, 0x9bf1, 0x0, 0x0);
        gbc.writeMem(0xcd8f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x89db, gbc.sp());
        EXPECT(0xcd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8f));
        EXPECT(0xb1, gbc.readMem(0xcd90));
        // CB B1 0306
        gbc.setState(0x23d8, 0xeedf, 0xe6b0, 0x733e, 0x38af, 0x5b63, 0x0, 0x1);
        gbc.writeMem(0x23d8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeedf, gbc.sp());
        EXPECT(0x23da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0307
        gbc.setState(0x1eb0, 0xd450, 0xf7e0, 0xe4d5, 0x577, 0x65c2, 0x1, 0x1);
        gbc.writeMem(0x1eb0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd450, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0308
        gbc.setState(0xe4ae, 0x4375, 0xf640, 0xf84f, 0xd2bf, 0xa42b, 0x0, 0x1);
        gbc.writeMem(0xe4ae, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0xb1, gbc.readMem(0xe4af));
        // CB B1 0309
        gbc.setState(0x332b, 0xa67d, 0x7d90, 0xdeb6, 0x5ecb, 0xd53f, 0x1, 0x0);
        gbc.writeMem(0x332b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa67d, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 030A
        gbc.setState(0x33d5, 0xea49, 0x79f0, 0x82e7, 0x24cb, 0x2318, 0x1, 0x0);
        gbc.writeMem(0x33d5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x33d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 030B
        gbc.setState(0x1877, 0xa232, 0x260, 0x3092, 0x3386, 0xabb6, 0x1, 0x1);
        gbc.writeMem(0x1877, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa232, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 030C
        gbc.setState(0xc8ea, 0x594e, 0x43f0, 0xfc6e, 0xed14, 0x3116, 0x1, 0x0);
        gbc.writeMem(0xc8ea, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0xc8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ea));
        EXPECT(0xb1, gbc.readMem(0xc8eb));
        // CB B1 030D
        gbc.setState(0xc0c9, 0xfc53, 0x6920, 0xa23b, 0x2a7b, 0xa998, 0x1, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c9));
        EXPECT(0xb1, gbc.readMem(0xc0ca));
        // CB B1 030E
        gbc.setState(0xde3b, 0x407b, 0x25a0, 0x3ff6, 0xa01c, 0x3b57, 0x0, 0x0);
        gbc.writeMem(0xde3b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x407b, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3b));
        EXPECT(0xb1, gbc.readMem(0xde3c));
        // CB B1 0310
        gbc.setState(0x3b99, 0x10d2, 0xb980, 0x8072, 0x5c6e, 0xd068, 0x0, 0x0);
        gbc.writeMem(0x3b99, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0x3b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0311
        gbc.setState(0x7568, 0xa4c7, 0x5450, 0x8db5, 0x9aa4, 0xed60, 0x0, 0x0);
        gbc.writeMem(0x7568, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0x756a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0312
        gbc.setState(0xac70, 0xf182, 0xa2a0, 0xb6a8, 0x4b61, 0x6d15, 0x1, 0x0);
        gbc.writeMem(0xac70, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf182, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac70));
        EXPECT(0xb1, gbc.readMem(0xac71));
        // CB B1 0313
        gbc.setState(0xe61f, 0xc24c, 0x7a50, 0xd6e8, 0x45dd, 0x5c4c, 0x1, 0x1);
        gbc.writeMem(0xe61f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0xe621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61f));
        EXPECT(0xb1, gbc.readMem(0xe620));
        // CB B1 0315
        gbc.setState(0xc3df, 0x56a2, 0x48a0, 0xc565, 0x7721, 0xc04d, 0x0, 0x0);
        gbc.writeMem(0xc3df, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0xc3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3df));
        EXPECT(0xb1, gbc.readMem(0xc3e0));
        // CB B1 0316
        gbc.setState(0x2019, 0xbc9f, 0x87d0, 0xec6a, 0xe78, 0xef1a, 0x1, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0317
        gbc.setState(0x1a18, 0x66ca, 0xcdc0, 0x3d92, 0x217e, 0x324f, 0x1, 0x1);
        gbc.writeMem(0x1a18, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0318
        gbc.setState(0x2e36, 0xb9bb, 0x2d30, 0x5758, 0xe304, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0x2e36, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb9bb, gbc.sp());
        EXPECT(0x2e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0319
        gbc.setState(0x6a36, 0x3f15, 0xae30, 0x3c8c, 0x5b8a, 0xd56c, 0x1, 0x0);
        gbc.writeMem(0x6a36, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x6a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 031A
        gbc.setState(0xa3ae, 0x41df, 0x7550, 0xb12c, 0x2b2, 0xdaa7, 0x1, 0x1);
        gbc.writeMem(0xa3ae, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0xa3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ae));
        EXPECT(0xb1, gbc.readMem(0xa3af));
        // CB B1 031B
        gbc.setState(0x585b, 0x1eee, 0x650, 0xc74e, 0xa465, 0x1572, 0x0, 0x1);
        gbc.writeMem(0x585b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x585d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 031C
        gbc.setState(0x1f33, 0xf065, 0x88a0, 0x7bb, 0xca45, 0x55c2, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf065, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 031D
        gbc.setState(0xe68, 0xb9a4, 0x9790, 0xdd5b, 0x94ec, 0x703e, 0x1, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0xe6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 031E
        gbc.setState(0x67d9, 0x4b71, 0x2a60, 0x72a6, 0xf074, 0xbd26, 0x1, 0x1);
        gbc.writeMem(0x67d9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0x67db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 031F
        gbc.setState(0x81c4, 0x6076, 0xb3b0, 0x5628, 0x319e, 0x7f68, 0x1, 0x0);
        gbc.writeMem(0x81c4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c4));
        EXPECT(0xb1, gbc.readMem(0x81c5));
        // CB B1 0320
        gbc.setState(0x48bb, 0xc808, 0xca50, 0x8464, 0xbe91, 0x1d02, 0x1, 0x0);
        gbc.writeMem(0x48bb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0x48bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0321
        gbc.setState(0x6002, 0x4a37, 0x5270, 0xc21d, 0x9536, 0x607, 0x0, 0x1);
        gbc.writeMem(0x6002, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x6004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0322
        gbc.setState(0x24a0, 0x9e0, 0xca60, 0x1e64, 0x5c33, 0xaee6, 0x0, 0x0);
        gbc.writeMem(0x24a0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0323
        gbc.setState(0x5ae8, 0xea2b, 0x3a90, 0x97bb, 0xe68c, 0x2b23, 0x0, 0x0);
        gbc.writeMem(0x5ae8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xea2b, gbc.sp());
        EXPECT(0x5aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0324
        gbc.setState(0x928d, 0x5a5d, 0x8b40, 0xcd00, 0x9452, 0x1510, 0x1, 0x1);
        gbc.writeMem(0x928d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5a5d, gbc.sp());
        EXPECT(0x928f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928d));
        EXPECT(0xb1, gbc.readMem(0x928e));
        // CB B1 0325
        gbc.setState(0xd047, 0x400b, 0xff60, 0xc2c1, 0x2499, 0x1134, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x400b, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd047));
        EXPECT(0xb1, gbc.readMem(0xd048));
        // CB B1 0326
        gbc.setState(0xee8b, 0x8129, 0xa470, 0xbb99, 0xee4e, 0xd3e3, 0x1, 0x0);
        gbc.writeMem(0xee8b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0xee8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8b));
        EXPECT(0xb1, gbc.readMem(0xee8c));
        // CB B1 0327
        gbc.setState(0xcb59, 0xe508, 0xe880, 0x649a, 0xa833, 0xd3d5, 0x0, 0x1);
        gbc.writeMem(0xcb59, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe508, gbc.sp());
        EXPECT(0xcb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb59));
        EXPECT(0xb1, gbc.readMem(0xcb5a));
        // CB B1 0328
        gbc.setState(0x9b4, 0xbf11, 0x43b0, 0x4758, 0x11f3, 0xfc32, 0x1, 0x0);
        gbc.writeMem(0x9b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf11, gbc.sp());
        EXPECT(0x9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0329
        gbc.setState(0x8fd, 0x2de, 0x4ec0, 0x8579, 0xbda8, 0x603c, 0x1, 0x0);
        gbc.writeMem(0x8fd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 032A
        gbc.setState(0x4d4e, 0x5839, 0xa640, 0x547a, 0x9da6, 0x90cd, 0x1, 0x0);
        gbc.writeMem(0x4d4e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 032B
        gbc.setState(0xc967, 0xbf1c, 0xcda0, 0x9048, 0xd965, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0xc967, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbf1c, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc967));
        EXPECT(0xb1, gbc.readMem(0xc968));
        // CB B1 032C
        gbc.setState(0xa667, 0x7966, 0x3600, 0xd306, 0xe1c4, 0x32e5, 0x1, 0x1);
        gbc.writeMem(0xa667, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0xa669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa667));
        EXPECT(0xb1, gbc.readMem(0xa668));
        // CB B1 032D
        gbc.setState(0xd3ee, 0x587, 0x41b0, 0xbc7b, 0xb3bb, 0xca32, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ee));
        EXPECT(0xb1, gbc.readMem(0xd3ef));
        // CB B1 032E
        gbc.setState(0xeb53, 0x2670, 0x5f20, 0x34b4, 0xc769, 0x5201, 0x1, 0x0);
        gbc.writeMem(0xeb53, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0xeb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb53));
        EXPECT(0xb1, gbc.readMem(0xeb54));
        // CB B1 032F
        gbc.setState(0x34bf, 0xe7dd, 0xbcf0, 0xe9b8, 0x56fc, 0xb1ec, 0x1, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe7dd, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0330
        gbc.setState(0x1a7f, 0x240e, 0xa320, 0x392f, 0x531e, 0x3263, 0x1, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0331
        gbc.setState(0x5c34, 0xe5b9, 0xd910, 0xb7b6, 0xee1a, 0xa837, 0x0, 0x1);
        gbc.writeMem(0x5c34, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0x5c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0332
        gbc.setState(0x2c0c, 0x3ebe, 0x4a0, 0xbe06, 0xba8f, 0xf11, 0x0, 0x1);
        gbc.writeMem(0x2c0c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3ebe, gbc.sp());
        EXPECT(0x2c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0333
        gbc.setState(0x13f6, 0xfe3d, 0x3370, 0x53b7, 0x597f, 0x880c, 0x0, 0x0);
        gbc.writeMem(0x13f6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe3d, gbc.sp());
        EXPECT(0x13f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0334
        gbc.setState(0x5453, 0x6d0f, 0x12b0, 0xf87c, 0x6041, 0x3feb, 0x0, 0x0);
        gbc.writeMem(0x5453, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6d0f, gbc.sp());
        EXPECT(0x5455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0335
        gbc.setState(0x7a54, 0xc497, 0x78f0, 0x6159, 0x8e3c, 0x8fa5, 0x0, 0x1);
        gbc.writeMem(0x7a54, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0336
        gbc.setState(0x8fb2, 0xb62d, 0x1c90, 0x5dce, 0xe488, 0x44a, 0x0, 0x1);
        gbc.writeMem(0x8fb2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x8fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb2));
        EXPECT(0xb1, gbc.readMem(0x8fb3));
        // CB B1 0337
        gbc.setState(0x54dc, 0xbea5, 0xe290, 0x2a76, 0xf9e7, 0x7857, 0x0, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbea5, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0338
        gbc.setState(0xdb3c, 0x3033, 0x55f0, 0x21a9, 0xddce, 0xb089, 0x1, 0x0);
        gbc.writeMem(0xdb3c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3033, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3c));
        EXPECT(0xb1, gbc.readMem(0xdb3d));
        // CB B1 0339
        gbc.setState(0x20b7, 0x9921, 0xfcc0, 0xba6e, 0x5dbc, 0x582a, 0x0, 0x0);
        gbc.writeMem(0x20b7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9921, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 033A
        gbc.setState(0x3f36, 0x2a9a, 0xfb90, 0xbaed, 0x21c2, 0x2022, 0x1, 0x0);
        gbc.writeMem(0x3f36, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 033B
        gbc.setState(0xcda2, 0x287d, 0xa990, 0xe934, 0xb137, 0xa272, 0x1, 0x1);
        gbc.writeMem(0xcda2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x287d, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda2));
        EXPECT(0xb1, gbc.readMem(0xcda3));
        // CB B1 033C
        gbc.setState(0x29cd, 0x832e, 0x3560, 0xb243, 0xfc92, 0x7922, 0x0, 0x1);
        gbc.writeMem(0x29cd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x832e, gbc.sp());
        EXPECT(0x29cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 033D
        gbc.setState(0x16dc, 0xa861, 0xc4f0, 0x94f6, 0xe041, 0xe5d4, 0x0, 0x0);
        gbc.writeMem(0x16dc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa861, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 033E
        gbc.setState(0x24f, 0xa9, 0xc940, 0xa282, 0xaf36, 0xe6e2, 0x1, 0x0);
        gbc.writeMem(0x24f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa9, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 033F
        gbc.setState(0x7da6, 0x1a9c, 0x2a10, 0x91f, 0xec4b, 0x91a4, 0x0, 0x1);
        gbc.writeMem(0x7da6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1a9c, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0340
        gbc.setState(0x5221, 0xcec4, 0xdf50, 0xa82f, 0x3ff4, 0x9ee7, 0x0, 0x1);
        gbc.writeMem(0x5221, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcec4, gbc.sp());
        EXPECT(0x5223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0341
        gbc.setState(0x6c4e, 0x834e, 0xd1a0, 0x838f, 0x8d29, 0xae4d, 0x0, 0x0);
        gbc.writeMem(0x6c4e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x834e, gbc.sp());
        EXPECT(0x6c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0342
        gbc.setState(0x8663, 0x65c7, 0xd80, 0xc393, 0x8d58, 0xcf5, 0x1, 0x1);
        gbc.writeMem(0x8663, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x65c7, gbc.sp());
        EXPECT(0x8665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8663));
        EXPECT(0xb1, gbc.readMem(0x8664));
        // CB B1 0343
        gbc.setState(0x22ed, 0x4017, 0xa350, 0x59b3, 0x79c1, 0x96d5, 0x1, 0x1);
        gbc.writeMem(0x22ed, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0x22ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0344
        gbc.setState(0x75c1, 0x5fb4, 0xf7d0, 0x8413, 0x26d, 0xb1ce, 0x1, 0x1);
        gbc.writeMem(0x75c1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0345
        gbc.setState(0x5fe3, 0x2a41, 0x6c0, 0xa96, 0x4a1b, 0x3b79, 0x1, 0x1);
        gbc.writeMem(0x5fe3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2a41, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0346
        gbc.setState(0x4238, 0x3453, 0xd70, 0xf37, 0xb41, 0xe6b9, 0x0, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3453, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0347
        gbc.setState(0x3e0e, 0x7f63, 0x2140, 0x9b5c, 0x68c6, 0xe6b6, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7f63, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0349
        gbc.setState(0xd7ea, 0xf6d5, 0x1b20, 0x7823, 0x8395, 0xfee6, 0x1, 0x1);
        gbc.writeMem(0xd7ea, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0xd7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ea));
        EXPECT(0xb1, gbc.readMem(0xd7eb));
        // CB B1 034B
        gbc.setState(0x1db5, 0x5f6e, 0x7850, 0x828f, 0xa82f, 0x5051, 0x0, 0x0);
        gbc.writeMem(0x1db5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 034C
        gbc.setState(0x95b4, 0x6910, 0xe100, 0x75c4, 0x6bfc, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6910, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b4));
        EXPECT(0xb1, gbc.readMem(0x95b5));
        // CB B1 034D
        gbc.setState(0x2ebf, 0x7622, 0x6d90, 0x1ca7, 0xdcc1, 0xa20b, 0x0, 0x1);
        gbc.writeMem(0x2ebf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0x2ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 034E
        gbc.setState(0x15b4, 0xe4d4, 0xa270, 0xa0a7, 0x7d4e, 0x29ce, 0x1, 0x0);
        gbc.writeMem(0x15b4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 034F
        gbc.setState(0x5f00, 0xebd4, 0x240, 0xa4af, 0xecd6, 0x6b99, 0x0, 0x1);
        gbc.writeMem(0x5f00, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xebd4, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0350
        gbc.setState(0xc779, 0xfa41, 0xabf0, 0x209c, 0x6364, 0x3145, 0x1, 0x0);
        gbc.writeMem(0xc779, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfa41, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc779));
        EXPECT(0xb1, gbc.readMem(0xc77a));
        // CB B1 0351
        gbc.setState(0x42c9, 0x21a0, 0xdfa0, 0xe28f, 0xf871, 0x763, 0x0, 0x0);
        gbc.writeMem(0x42c9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x21a0, gbc.sp());
        EXPECT(0x42cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0352
        gbc.setState(0xadbe, 0x9c49, 0x7250, 0xfbb2, 0x3b2c, 0x7abe, 0x1, 0x0);
        gbc.writeMem(0xadbe, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c49, gbc.sp());
        EXPECT(0xadc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbe));
        EXPECT(0xb1, gbc.readMem(0xadbf));
        // CB B1 0353
        gbc.setState(0x5b8b, 0x70ea, 0x34e0, 0xe361, 0xd30f, 0x2d4, 0x0, 0x0);
        gbc.writeMem(0x5b8b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x70ea, gbc.sp());
        EXPECT(0x5b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0355
        gbc.setState(0x8ffa, 0xe17e, 0xc50, 0xb916, 0xecf1, 0x28ab, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe17e, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffa));
        EXPECT(0xb1, gbc.readMem(0x8ffb));
        // CB B1 0356
        gbc.setState(0x6531, 0xe78e, 0x5020, 0x6640, 0xbcd2, 0x48f8, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe78e, gbc.sp());
        EXPECT(0x6533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0357
        gbc.setState(0x9b3d, 0x3b90, 0x2a50, 0xb2ab, 0x17ea, 0x34c5, 0x0, 0x1);
        gbc.writeMem(0x9b3d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0x9b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3d));
        EXPECT(0xb1, gbc.readMem(0x9b3e));
        // CB B1 0358
        gbc.setState(0xf13, 0x3aa0, 0xc330, 0x1690, 0x9d17, 0x2776, 0x1, 0x0);
        gbc.writeMem(0xf13, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3aa0, gbc.sp());
        EXPECT(0xf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0359
        gbc.setState(0x1281, 0xea37, 0x60, 0xd233, 0xb4fb, 0x26a8, 0x0, 0x0);
        gbc.writeMem(0x1281, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0x1283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 035A
        gbc.setState(0xd51, 0xab46, 0x97b0, 0x94e4, 0x7c0a, 0x605, 0x1, 0x0);
        gbc.writeMem(0xd51, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xab46, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 035B
        gbc.setState(0x9d57, 0xa4c5, 0x5210, 0xe65e, 0x275, 0xbaa3, 0x0, 0x0);
        gbc.writeMem(0x9d57, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d57));
        EXPECT(0xb1, gbc.readMem(0x9d58));
        // CB B1 035C
        gbc.setState(0x4479, 0x9f42, 0x5e40, 0x3126, 0x8e6c, 0x277a, 0x1, 0x0);
        gbc.writeMem(0x4479, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9f42, gbc.sp());
        EXPECT(0x447b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 035D
        gbc.setState(0x83a3, 0x62cf, 0xa350, 0x5f5a, 0x101d, 0xe84e, 0x1, 0x0);
        gbc.writeMem(0x83a3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x62cf, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a3));
        EXPECT(0xb1, gbc.readMem(0x83a4));
        // CB B1 035E
        gbc.setState(0x5422, 0x55c, 0x5d70, 0xabc3, 0xd168, 0xe47f, 0x1, 0x1);
        gbc.writeMem(0x5422, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x55c, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 035F
        gbc.setState(0x6d02, 0x3930, 0xa9d0, 0x8198, 0xeadf, 0x6fd3, 0x1, 0x1);
        gbc.writeMem(0x6d02, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3930, gbc.sp());
        EXPECT(0x6d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0360
        gbc.setState(0x93bf, 0xc50a, 0xfe40, 0xa846, 0xbbb8, 0xf82, 0x1, 0x0);
        gbc.writeMem(0x93bf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc50a, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bf));
        EXPECT(0xb1, gbc.readMem(0x93c0));
        // CB B1 0361
        gbc.setState(0xb61f, 0xa683, 0xa150, 0x309a, 0xc4a0, 0x4fb3, 0x1, 0x0);
        gbc.writeMem(0xb61f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa683, gbc.sp());
        EXPECT(0xb621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61f));
        EXPECT(0xb1, gbc.readMem(0xb620));
        // CB B1 0364
        gbc.setState(0xc31, 0x6f77, 0xe690, 0x4f7f, 0x302, 0x2ccf, 0x0, 0x0);
        gbc.writeMem(0xc31, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0365
        gbc.setState(0xd360, 0x3a6e, 0xb7d0, 0x91e2, 0x9091, 0xbc56, 0x0, 0x1);
        gbc.writeMem(0xd360, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3a6e, gbc.sp());
        EXPECT(0xd362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd360));
        EXPECT(0xb1, gbc.readMem(0xd361));
        // CB B1 0366
        gbc.setState(0x6658, 0xa778, 0x2c00, 0xe80d, 0x9c54, 0xe19f, 0x1, 0x0);
        gbc.writeMem(0x6658, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa778, gbc.sp());
        EXPECT(0x665a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0368
        gbc.setState(0x9215, 0x4c76, 0x9ed0, 0xeba1, 0xb4f1, 0x1b6c, 0x0, 0x1);
        gbc.writeMem(0x9215, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4c76, gbc.sp());
        EXPECT(0x9217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9215));
        EXPECT(0xb1, gbc.readMem(0x9216));
        // CB B1 0369
        gbc.setState(0x6c79, 0x98c2, 0xd6e0, 0xbef2, 0x1223, 0xcabc, 0x0, 0x1);
        gbc.writeMem(0x6c79, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x98c2, gbc.sp());
        EXPECT(0x6c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 036A
        gbc.setState(0xe8d3, 0x3853, 0x7800, 0xa458, 0xd741, 0xfe27, 0x1, 0x1);
        gbc.writeMem(0xe8d3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d3));
        EXPECT(0xb1, gbc.readMem(0xe8d4));
        // CB B1 036B
        gbc.setState(0xe781, 0x2c6b, 0x54b0, 0x5efb, 0x4a3b, 0xc574, 0x0, 0x1);
        gbc.writeMem(0xe781, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2c6b, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe781));
        EXPECT(0xb1, gbc.readMem(0xe782));
        // CB B1 036C
        gbc.setState(0x1a4a, 0x5834, 0x1080, 0xeb6, 0x6447, 0x52e8, 0x0, 0x1);
        gbc.writeMem(0x1a4a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0x1a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 036D
        gbc.setState(0xe6b8, 0x691b, 0x2110, 0x5ecd, 0xf181, 0x689f, 0x0, 0x1);
        gbc.writeMem(0xe6b8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x691b, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b8));
        EXPECT(0xb1, gbc.readMem(0xe6b9));
        // CB B1 036E
        gbc.setState(0xa05b, 0x7f1, 0x3110, 0x296, 0x285f, 0x75cf, 0x0, 0x1);
        gbc.writeMem(0xa05b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7f1, gbc.sp());
        EXPECT(0xa05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05b));
        EXPECT(0xb1, gbc.readMem(0xa05c));
        // CB B1 0370
        gbc.setState(0xa290, 0xec10, 0x7ba0, 0x68c1, 0xae0c, 0x9263, 0x1, 0x1);
        gbc.writeMem(0xa290, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa290));
        EXPECT(0xb1, gbc.readMem(0xa291));
        // CB B1 0372
        gbc.setState(0x928c, 0x6a79, 0xec00, 0x8c48, 0x128a, 0x1298, 0x0, 0x1);
        gbc.writeMem(0x928c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6a79, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928c));
        EXPECT(0xb1, gbc.readMem(0x928d));
        // CB B1 0373
        gbc.setState(0x63e1, 0x9b05, 0xa420, 0x47c1, 0xc7be, 0x5aa2, 0x1, 0x0);
        gbc.writeMem(0x63e1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9b05, gbc.sp());
        EXPECT(0x63e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0375
        gbc.setState(0x4c7f, 0x1d6b, 0x5d40, 0x933, 0x5e08, 0xd291, 0x0, 0x1);
        gbc.writeMem(0x4c7f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d6b, gbc.sp());
        EXPECT(0x4c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0376
        gbc.setState(0x1db7, 0xe77e, 0xced0, 0x638c, 0x3516, 0x901d, 0x1, 0x0);
        gbc.writeMem(0x1db7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe77e, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0377
        gbc.setState(0x6c80, 0xac12, 0x2160, 0xd8fe, 0xf853, 0x673a, 0x1, 0x0);
        gbc.writeMem(0x6c80, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xac12, gbc.sp());
        EXPECT(0x6c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0378
        gbc.setState(0x208c, 0x4a45, 0xda80, 0x8b1b, 0x3ea2, 0x4567, 0x0, 0x1);
        gbc.writeMem(0x208c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x208e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 037A
        gbc.setState(0xdc03, 0x51d, 0x9f60, 0x608b, 0xb0b6, 0xe98, 0x0, 0x1);
        gbc.writeMem(0xdc03, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x51d, gbc.sp());
        EXPECT(0xdc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc03));
        EXPECT(0xb1, gbc.readMem(0xdc04));
        // CB B1 037B
        gbc.setState(0x9e32, 0x14de, 0xcc10, 0x8b9f, 0x74b0, 0x6675, 0x0, 0x0);
        gbc.writeMem(0x9e32, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0x9e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e32));
        EXPECT(0xb1, gbc.readMem(0x9e33));
        // CB B1 037C
        gbc.setState(0x2f8c, 0x8049, 0x2260, 0x2ba2, 0x2fc4, 0xcf0f, 0x1, 0x1);
        gbc.writeMem(0x2f8c, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8049, gbc.sp());
        EXPECT(0x2f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 037D
        gbc.setState(0x92a7, 0x48d2, 0x81d0, 0x9d62, 0x63f1, 0xb7fe, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a7));
        EXPECT(0xb1, gbc.readMem(0x92a8));
        // CB B1 037E
        gbc.setState(0x7cca, 0x2c42, 0x1990, 0x4ff, 0x3221, 0x1931, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2c42, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 037F
        gbc.setState(0x97ab, 0x4fba, 0x74b0, 0xaae0, 0x7398, 0xdee5, 0x1, 0x0);
        gbc.writeMem(0x97ab, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4fba, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ab));
        EXPECT(0xb1, gbc.readMem(0x97ac));
        // CB B1 0380
        gbc.setState(0x7128, 0xef94, 0xc0c0, 0x5ef8, 0xece9, 0x8dfa, 0x0, 0x1);
        gbc.writeMem(0x7128, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xef94, gbc.sp());
        EXPECT(0x712a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0381
        gbc.setState(0xc882, 0xad18, 0xd10, 0xd6cb, 0xd625, 0x97f8, 0x0, 0x1);
        gbc.writeMem(0xc882, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xad18, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc882));
        EXPECT(0xb1, gbc.readMem(0xc883));
        // CB B1 0382
        gbc.setState(0x8e37, 0x5ae9, 0xd280, 0x8fff, 0x1eb, 0x1d46, 0x0, 0x1);
        gbc.writeMem(0x8e37, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0x8e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e37));
        EXPECT(0xb1, gbc.readMem(0x8e38));
        // CB B1 0383
        gbc.setState(0x9700, 0xed0a, 0x7570, 0xf64b, 0xde1f, 0x5619, 0x1, 0x1);
        gbc.writeMem(0x9700, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0x9702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9700));
        EXPECT(0xb1, gbc.readMem(0x9701));
        // CB B1 0384
        gbc.setState(0xe9ee, 0x95a9, 0x66e0, 0xd8d2, 0x713c, 0xfd39, 0x1, 0x0);
        gbc.writeMem(0xe9ee, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x95a9, gbc.sp());
        EXPECT(0xe9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ee));
        EXPECT(0xb1, gbc.readMem(0xe9ef));
        // CB B1 0385
        gbc.setState(0x1986, 0xae65, 0xd630, 0x27e, 0xfd08, 0xeb44, 0x0, 0x1);
        gbc.writeMem(0x1986, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae65, gbc.sp());
        EXPECT(0x1988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0386
        gbc.setState(0xd323, 0xc795, 0x57b0, 0x16b6, 0xb83b, 0xc16d, 0x0, 0x0);
        gbc.writeMem(0xd323, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc795, gbc.sp());
        EXPECT(0xd325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd323));
        EXPECT(0xb1, gbc.readMem(0xd324));
        // CB B1 0387
        gbc.setState(0x79c2, 0x560, 0xe9e0, 0xcbc6, 0xd39f, 0x92d7, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x560, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 0388
        gbc.setState(0x174b, 0x1d14, 0xe550, 0x283d, 0x6995, 0xfa29, 0x1, 0x1);
        gbc.writeMem(0x174b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1d14, gbc.sp());
        EXPECT(0x174d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0389
        gbc.setState(0xa204, 0x8b9, 0xe960, 0xe77b, 0x9fc2, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0xa204, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0xa206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa204));
        EXPECT(0xb1, gbc.readMem(0xa205));
        // CB B1 038A
        gbc.setState(0xba1d, 0xf00e, 0x48e0, 0x4388, 0xc758, 0x1489, 0x0, 0x0);
        gbc.writeMem(0xba1d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf00e, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0xb1, gbc.readMem(0xba1e));
        // CB B1 038B
        gbc.setState(0xae26, 0x76a7, 0x45a0, 0x7692, 0xe8ba, 0xc83a, 0x1, 0x1);
        gbc.writeMem(0xae26, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x76a7, gbc.sp());
        EXPECT(0xae28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae26));
        EXPECT(0xb1, gbc.readMem(0xae27));
        // CB B1 038C
        gbc.setState(0x99b0, 0xdcf, 0x1590, 0xa7c1, 0x30b4, 0x9d19, 0x0, 0x1);
        gbc.writeMem(0x99b0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdcf, gbc.sp());
        EXPECT(0x99b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b0));
        EXPECT(0xb1, gbc.readMem(0x99b1));
        // CB B1 038D
        gbc.setState(0x4871, 0xe131, 0xb620, 0x4c0b, 0x39eb, 0x9bc8, 0x0, 0x0);
        gbc.writeMem(0x4871, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe131, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 038E
        gbc.setState(0xbb14, 0x2290, 0x6b80, 0x90fd, 0x53fe, 0x7a31, 0x0, 0x1);
        gbc.writeMem(0xbb14, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0xbb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb14));
        EXPECT(0xb1, gbc.readMem(0xbb15));
        // CB B1 038F
        gbc.setState(0x3cb9, 0x96d0, 0x78b0, 0xebcd, 0x8553, 0x4a82, 0x0, 0x0);
        gbc.writeMem(0x3cb9, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96d0, gbc.sp());
        EXPECT(0x3cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0390
        gbc.setState(0x39af, 0xf591, 0xed50, 0x5163, 0xd761, 0x2a32, 0x0, 0x1);
        gbc.writeMem(0x39af, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0392
        gbc.setState(0x2f1f, 0xf87f, 0x450, 0x8a35, 0xffd6, 0xc89b, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0393
        gbc.setState(0x4c1f, 0x803b, 0x1150, 0x916b, 0xb211, 0x726d, 0x0, 0x0);
        gbc.writeMem(0x4c1f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0x4c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0394
        gbc.setState(0x97cc, 0x1252, 0xccc0, 0x7824, 0x9efc, 0x9ed4, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1252, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cc));
        EXPECT(0xb1, gbc.readMem(0x97cd));
        // CB B1 0395
        gbc.setState(0x5fe4, 0x3122, 0x1650, 0x8fcf, 0x44d, 0x9e28, 0x1, 0x1);
        gbc.writeMem(0x5fe4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3122, gbc.sp());
        EXPECT(0x5fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0396
        gbc.setState(0x4d10, 0x5f63, 0xf0f0, 0x5518, 0xf88f, 0xbec6, 0x1, 0x1);
        gbc.writeMem(0x4d10, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0397
        gbc.setState(0x4394, 0x1a9c, 0x2c30, 0xa07, 0xae17, 0x4604, 0x1, 0x1);
        gbc.writeMem(0x4394, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1a9c, gbc.sp());
        EXPECT(0x4396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 0398
        gbc.setState(0xcbed, 0x7015, 0x8590, 0x2c04, 0xd50, 0x3a23, 0x1, 0x0);
        gbc.writeMem(0xcbed, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7015, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbed));
        EXPECT(0xb1, gbc.readMem(0xcbee));
        // CB B1 0399
        gbc.setState(0x6b9b, 0xd093, 0x2a90, 0xf6a4, 0x484c, 0xefb6, 0x0, 0x0);
        gbc.writeMem(0x6b9b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 039A
        gbc.setState(0x9a75, 0x929, 0xebe0, 0xcad6, 0xdb5a, 0x205a, 0x1, 0x1);
        gbc.writeMem(0x9a75, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x929, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a75));
        EXPECT(0xb1, gbc.readMem(0x9a76));
        // CB B1 039B
        gbc.setState(0x6053, 0x50af, 0x11c0, 0x1cbf, 0xce1, 0x2a90, 0x0, 0x1);
        gbc.writeMem(0x6053, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x50af, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 039C
        gbc.setState(0x891e, 0x25a3, 0x1b10, 0xeb9, 0xc89, 0x24ec, 0x1, 0x0);
        gbc.writeMem(0x891e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891e));
        EXPECT(0xb1, gbc.readMem(0x891f));
        // CB B1 039D
        gbc.setState(0x3350, 0x543e, 0x9310, 0xaef8, 0x5203, 0x8420, 0x0, 0x1);
        gbc.writeMem(0x3350, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x543e, gbc.sp());
        EXPECT(0x3352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 039E
        gbc.setState(0xb2f0, 0xbfa3, 0x7e0, 0x68f1, 0xa3a3, 0xf48a, 0x1, 0x0);
        gbc.writeMem(0xb2f0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbfa3, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f0));
        EXPECT(0xb1, gbc.readMem(0xb2f1));
        // CB B1 039F
        gbc.setState(0x276b, 0x3ea8, 0x5200, 0x7391, 0xa696, 0x1fe1, 0x1, 0x0);
        gbc.writeMem(0x276b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ea8, gbc.sp());
        EXPECT(0x276d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03A0
        gbc.setState(0x407f, 0x3487, 0x1e30, 0x2b8a, 0x5938, 0xd02e, 0x1, 0x1);
        gbc.writeMem(0x407f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03A1
        gbc.setState(0x24f0, 0x4bf9, 0x5d90, 0x6257, 0xe3ed, 0x1251, 0x1, 0x1);
        gbc.writeMem(0x24f0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4bf9, gbc.sp());
        EXPECT(0x24f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03A2
        gbc.setState(0xe2e8, 0x4357, 0xe330, 0xa336, 0x1f7b, 0xd1e3, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e8));
        EXPECT(0xb1, gbc.readMem(0xe2e9));
        // CB B1 03A3
        gbc.setState(0xbbf0, 0xbcec, 0x9150, 0x1aa8, 0x9a68, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0xbbf0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0xbbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf0));
        EXPECT(0xb1, gbc.readMem(0xbbf1));
        // CB B1 03A4
        gbc.setState(0x96bd, 0x2eb9, 0xd730, 0xe79c, 0xb306, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x96bd, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2eb9, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bd));
        EXPECT(0xb1, gbc.readMem(0x96be));
        // CB B1 03A5
        gbc.setState(0x8dcc, 0xf397, 0x8760, 0xf475, 0xb15c, 0xf621, 0x1, 0x0);
        gbc.writeMem(0x8dcc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf397, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcc));
        EXPECT(0xb1, gbc.readMem(0x8dcd));
        // CB B1 03A6
        gbc.setState(0xbb1, 0xe9af, 0x2040, 0x577d, 0x8749, 0x472a, 0x1, 0x1);
        gbc.writeMem(0xbb1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03A7
        gbc.setState(0x5a0f, 0x9113, 0x16b0, 0x68b9, 0xefb9, 0x51de, 0x0, 0x1);
        gbc.writeMem(0x5a0f, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9113, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03A8
        gbc.setState(0xe97b, 0x894, 0xac10, 0xf65b, 0x4c3b, 0x82aa, 0x1, 0x0);
        gbc.writeMem(0xe97b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x894, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97b));
        EXPECT(0xb1, gbc.readMem(0xe97c));
        // CB B1 03A9
        gbc.setState(0xb8a, 0x8bb1, 0x6f60, 0x6bc0, 0xdb1e, 0xb309, 0x0, 0x0);
        gbc.writeMem(0xb8a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8bb1, gbc.sp());
        EXPECT(0xb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03AA
        gbc.setState(0x9e29, 0x8c32, 0xc30, 0x988, 0x40b4, 0x62e7, 0x0, 0x1);
        gbc.writeMem(0x9e29, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8c32, gbc.sp());
        EXPECT(0x9e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e29));
        EXPECT(0xb1, gbc.readMem(0x9e2a));
        // CB B1 03AB
        gbc.setState(0xc6d5, 0x74c2, 0xcf0, 0x5a77, 0xc4b5, 0x89bb, 0x1, 0x0);
        gbc.writeMem(0xc6d5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0xc6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d5));
        EXPECT(0xb1, gbc.readMem(0xc6d6));
        // CB B1 03AC
        gbc.setState(0x8495, 0x3a16, 0x8140, 0x5839, 0x9268, 0x91c7, 0x1, 0x1);
        gbc.writeMem(0x8495, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8495));
        EXPECT(0xb1, gbc.readMem(0x8496));
        // CB B1 03AD
        gbc.setState(0x4225, 0x647b, 0xc8a0, 0x9bd1, 0xf77, 0xef3f, 0x1, 0x1);
        gbc.writeMem(0x4225, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x647b, gbc.sp());
        EXPECT(0x4227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03AE
        gbc.setState(0xc1c2, 0x8305, 0xa240, 0x2f7d, 0xe2d, 0x6956, 0x1, 0x1);
        gbc.writeMem(0xc1c2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0xc1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c2));
        EXPECT(0xb1, gbc.readMem(0xc1c3));
        // CB B1 03AF
        gbc.setState(0x2112, 0xfa22, 0xed30, 0x8cc8, 0xc54c, 0xfc74, 0x1, 0x0);
        gbc.writeMem(0x2112, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa22, gbc.sp());
        EXPECT(0x2114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03B0
        gbc.setState(0x2cbc, 0x54c3, 0x9450, 0x10a0, 0x2be, 0x7912, 0x1, 0x0);
        gbc.writeMem(0x2cbc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03B1
        gbc.setState(0xb5e, 0x32e5, 0xda70, 0xa029, 0xbfcf, 0x5368, 0x0, 0x0);
        gbc.writeMem(0xb5e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0xb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03B2
        gbc.setState(0xdead, 0x5b23, 0x1e60, 0x6844, 0x1df9, 0xef8a, 0x1, 0x0);
        gbc.writeMem(0xdead, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5b23, gbc.sp());
        EXPECT(0xdeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdead));
        EXPECT(0xb1, gbc.readMem(0xdeae));
        // CB B1 03B3
        gbc.setState(0x1970, 0xb66b, 0xdb70, 0x1600, 0x5bc3, 0x2565, 0x0, 0x0);
        gbc.writeMem(0x1970, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03B4
        gbc.setState(0xcf32, 0x4a09, 0x4e10, 0xa67, 0x15e7, 0x373b, 0x0, 0x0);
        gbc.writeMem(0xcf32, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf32));
        EXPECT(0xb1, gbc.readMem(0xcf33));
        // CB B1 03B5
        gbc.setState(0xd261, 0xf683, 0x7a10, 0x1f7d, 0x9366, 0xac46, 0x1, 0x1);
        gbc.writeMem(0xd261, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf683, gbc.sp());
        EXPECT(0xd263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd261));
        EXPECT(0xb1, gbc.readMem(0xd262));
        // CB B1 03B6
        gbc.setState(0xd886, 0xd7a5, 0xf30, 0xb39c, 0x4e46, 0x9dc6, 0x0, 0x0);
        gbc.writeMem(0xd886, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd7a5, gbc.sp());
        EXPECT(0xd888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd886));
        EXPECT(0xb1, gbc.readMem(0xd887));
        // CB B1 03B7
        gbc.setState(0xd8ef, 0x3284, 0xfd00, 0x55cd, 0x4f4c, 0xd51e, 0x1, 0x1);
        gbc.writeMem(0xd8ef, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3284, gbc.sp());
        EXPECT(0xd8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ef));
        EXPECT(0xb1, gbc.readMem(0xd8f0));
        // CB B1 03B9
        gbc.setState(0xdc6, 0x5eed, 0x7c70, 0xce19, 0x5abc, 0xa978, 0x0, 0x1);
        gbc.writeMem(0xdc6, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5eed, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03BA
        gbc.setState(0xb94, 0xaffc, 0x6140, 0x31b6, 0x9ac8, 0x1280, 0x1, 0x0);
        gbc.writeMem(0xb94, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaffc, gbc.sp());
        EXPECT(0xb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03BB
        gbc.setState(0x2325, 0x75e4, 0xfeb0, 0x745f, 0xb826, 0x835d, 0x0, 0x1);
        gbc.writeMem(0x2325, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x75e4, gbc.sp());
        EXPECT(0x2327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03BC
        gbc.setState(0xd181, 0xb5, 0xc510, 0xdb5f, 0xb3cd, 0xa6b8, 0x1, 0x0);
        gbc.writeMem(0xd181, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb5, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd181));
        EXPECT(0xb1, gbc.readMem(0xd182));
        // CB B1 03BD
        gbc.setState(0x213d, 0x89bd, 0x5db0, 0x9247, 0x9534, 0x43d0, 0x0, 0x0);
        gbc.writeMem(0x213d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x89bd, gbc.sp());
        EXPECT(0x213f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03BE
        gbc.setState(0xe1cf, 0x4a62, 0xc160, 0x7303, 0x1f55, 0x6109, 0x0, 0x1);
        gbc.writeMem(0xe1cf, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cf));
        EXPECT(0xb1, gbc.readMem(0xe1d0));
        // CB B1 03BF
        gbc.setState(0xe135, 0x968c, 0xdc10, 0x7df8, 0x929e, 0xbd18, 0x0, 0x1);
        gbc.writeMem(0xe135, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x968c, gbc.sp());
        EXPECT(0xe137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe135));
        EXPECT(0xb1, gbc.readMem(0xe136));
        // CB B1 03C0
        gbc.setState(0x8eff, 0x761a, 0xfdd0, 0x349d, 0xcd42, 0x85c, 0x0, 0x1);
        gbc.writeMem(0x8eff, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eff));
        EXPECT(0xb1, gbc.readMem(0x8f00));
        // CB B1 03C1
        gbc.setState(0xe942, 0x4ccc, 0x3ac0, 0xe027, 0xbebd, 0x571c, 0x1, 0x0);
        gbc.writeMem(0xe942, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe942));
        EXPECT(0xb1, gbc.readMem(0xe943));
        // CB B1 03C2
        gbc.setState(0x7c55, 0xbc27, 0x7b70, 0xaf36, 0xcbfc, 0xfd51, 0x1, 0x0);
        gbc.writeMem(0x7c55, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0x7c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03C3
        gbc.setState(0xd11, 0x678b, 0x43e0, 0xa9e7, 0x7141, 0x942c, 0x1, 0x0);
        gbc.writeMem(0xd11, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x678b, gbc.sp());
        EXPECT(0xd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03C4
        gbc.setState(0xb675, 0x68c4, 0x7ae0, 0x1be5, 0xfad0, 0x901, 0x1, 0x0);
        gbc.writeMem(0xb675, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x68c4, gbc.sp());
        EXPECT(0xb677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb675));
        EXPECT(0xb1, gbc.readMem(0xb676));
        // CB B1 03C5
        gbc.setState(0xe56a, 0x3336, 0x23e0, 0x925b, 0x3820, 0xbe59, 0x0, 0x0);
        gbc.writeMem(0xe56a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3336, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56a));
        EXPECT(0xb1, gbc.readMem(0xe56b));
        // CB B1 03C6
        gbc.setState(0x4400, 0xddbf, 0xda20, 0xba84, 0x2a52, 0xb0c8, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xddbf, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03C7
        gbc.setState(0xb43b, 0x1542, 0x2d60, 0xb6be, 0xd818, 0xff64, 0x1, 0x0);
        gbc.writeMem(0xb43b, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1542, gbc.sp());
        EXPECT(0xb43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43b));
        EXPECT(0xb1, gbc.readMem(0xb43c));
        // CB B1 03C8
        gbc.setState(0x89fa, 0xdd63, 0xdfb0, 0x6c3, 0x9a79, 0xb422, 0x1, 0x1);
        gbc.writeMem(0x89fa, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0x89fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fa));
        EXPECT(0xb1, gbc.readMem(0x89fb));
        // CB B1 03C9
        gbc.setState(0x45fa, 0xce95, 0xdae0, 0xd823, 0xe91f, 0xa80d, 0x0, 0x1);
        gbc.writeMem(0x45fa, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0x45fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03CA
        gbc.setState(0xefbb, 0xca4e, 0xeae0, 0x626f, 0xd8a3, 0x922, 0x1, 0x1);
        gbc.writeMem(0xefbb, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbb));
        EXPECT(0xb1, gbc.readMem(0xefbc));
        // CB B1 03CB
        gbc.setState(0xaed1, 0x4312, 0x97e0, 0x233c, 0x36af, 0x4635, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4312, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed1));
        EXPECT(0xb1, gbc.readMem(0xaed2));
        // CB B1 03CC
        gbc.setState(0x778d, 0x2ae6, 0xbdd0, 0xbdfa, 0x845d, 0x663e, 0x0, 0x1);
        gbc.writeMem(0x778d, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x778f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03CD
        gbc.setState(0x4e97, 0x977b, 0xa4e0, 0xb609, 0xd80f, 0x4113, 0x0, 0x0);
        gbc.writeMem(0x4e97, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03CE
        gbc.setState(0x8fcc, 0xf722, 0xc8b0, 0x42dd, 0x5897, 0x279, 0x1, 0x1);
        gbc.writeMem(0x8fcc, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcc));
        EXPECT(0xb1, gbc.readMem(0x8fcd));
        // CB B1 03CF
        gbc.setState(0x658e, 0xf47a, 0x9760, 0x1c87, 0x5cd8, 0xfb34, 0x1, 0x1);
        gbc.writeMem(0x658e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf47a, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03D0
        gbc.setState(0xe312, 0xd0b, 0xa340, 0x5b3f, 0x212b, 0xad80, 0x0, 0x0);
        gbc.writeMem(0xe312, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd0b, gbc.sp());
        EXPECT(0xe314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe312));
        EXPECT(0xb1, gbc.readMem(0xe313));
        // CB B1 03D1
        gbc.setState(0xbee3, 0xb98b, 0xcfa0, 0x5ed, 0xb55e, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0xbee3, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb98b, gbc.sp());
        EXPECT(0xbee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee3));
        EXPECT(0xb1, gbc.readMem(0xbee4));
        // CB B1 03D2
        gbc.setState(0xb5a4, 0x9b28, 0xb190, 0x7de9, 0x1940, 0x8eff, 0x1, 0x0);
        gbc.writeMem(0xb5a4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9b28, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a4));
        EXPECT(0xb1, gbc.readMem(0xb5a5));
        // CB B1 03D3
        gbc.setState(0xa0b1, 0x89e3, 0x9a90, 0x9338, 0x3b07, 0x7a9b, 0x0, 0x1);
        gbc.writeMem(0xa0b1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0xa0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b1));
        EXPECT(0xb1, gbc.readMem(0xa0b2));
        // CB B1 03D4
        gbc.setState(0xe639, 0x28d9, 0x96b0, 0xeb4f, 0x69b5, 0x1a84, 0x0, 0x1);
        gbc.writeMem(0xe639, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe639));
        EXPECT(0xb1, gbc.readMem(0xe63a));
        // CB B1 03D5
        gbc.setState(0x92ec, 0x5b28, 0x27b0, 0xfe98, 0x2fbc, 0xf273, 0x1, 0x0);
        gbc.writeMem(0x92ec, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5b28, gbc.sp());
        EXPECT(0x92ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ec));
        EXPECT(0xb1, gbc.readMem(0x92ed));
        // CB B1 03D6
        gbc.setState(0x5ece, 0x729d, 0x8a50, 0xef86, 0x997d, 0x492f, 0x0, 0x0);
        gbc.writeMem(0x5ece, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x729d, gbc.sp());
        EXPECT(0x5ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03D7
        gbc.setState(0x347a, 0x8868, 0xe10, 0x7774, 0x954e, 0x32c3, 0x0, 0x1);
        gbc.writeMem(0x347a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8868, gbc.sp());
        EXPECT(0x347c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03D8
        gbc.setState(0xb287, 0x434f, 0x3800, 0x8c64, 0xff0d, 0x494f, 0x0, 0x0);
        gbc.writeMem(0xb287, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x434f, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb287));
        EXPECT(0xb1, gbc.readMem(0xb288));
        // CB B1 03D9
        gbc.setState(0xb93e, 0x1339, 0x3730, 0xd0d9, 0x318b, 0xe9a5, 0x1, 0x1);
        gbc.writeMem(0xb93e, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0xb940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93e));
        EXPECT(0xb1, gbc.readMem(0xb93f));
        // CB B1 03DA
        gbc.setState(0xa006, 0x8194, 0xf920, 0xc1a4, 0x4813, 0xbdda, 0x1, 0x1);
        gbc.writeMem(0xa006, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8194, gbc.sp());
        EXPECT(0xa008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa006));
        EXPECT(0xb1, gbc.readMem(0xa007));
        // CB B1 03DB
        gbc.setState(0xadd0, 0xf148, 0x9230, 0x91b6, 0x6c9b, 0x306a, 0x1, 0x1);
        gbc.writeMem(0xadd0, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf148, gbc.sp());
        EXPECT(0xadd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd0));
        EXPECT(0xb1, gbc.readMem(0xadd1));
        // CB B1 03DC
        gbc.setState(0x9965, 0x4525, 0x2120, 0x91ef, 0xc4a0, 0x5be0, 0x0, 0x1);
        gbc.writeMem(0x9965, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0x9967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9965));
        EXPECT(0xb1, gbc.readMem(0x9966));
        // CB B1 03DD
        gbc.setState(0xe77, 0x127f, 0xae10, 0xe363, 0xd866, 0x4588, 0x1, 0x0);
        gbc.writeMem(0xe77, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0xe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B1 03DF
        gbc.setState(0xefed, 0x3ece, 0x97b0, 0x87ba, 0x2554, 0x5638, 0x1, 0x0);
        gbc.writeMem(0xefed, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0xefef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefed));
        EXPECT(0xb1, gbc.readMem(0xefee));
        // CB B1 03E0
        gbc.setState(0xa9b2, 0x41c9, 0x5c30, 0x6b33, 0x42a6, 0x8849, 0x0, 0x1);
        gbc.writeMem(0xa9b2, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x41c9, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0xb1, gbc.readMem(0xa9b3));
        // CB B1 03E1
        gbc.setState(0x7491, 0xef14, 0xdd00, 0xd80f, 0x3c71, 0x3e9e, 0x0, 0x0);
        gbc.writeMem(0x7491, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xef14, gbc.sp());
        EXPECT(0x7493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03E2
        gbc.setState(0xe6b1, 0x4765, 0xa580, 0x1e35, 0x571c, 0xfea2, 0x0, 0x1);
        gbc.writeMem(0xe6b1, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4765, gbc.sp());
        EXPECT(0xe6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b1));
        EXPECT(0xb1, gbc.readMem(0xe6b2));
        // CB B1 03E3
        gbc.setState(0x11d5, 0x29ba, 0x5440, 0x7d73, 0xf207, 0xfe35, 0x1, 0x0);
        gbc.writeMem(0x11d5, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x29ba, gbc.sp());
        EXPECT(0x11d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03E4
        gbc.setState(0xc999, 0x4dcc, 0x4570, 0x62d3, 0x32e8, 0xcca0, 0x1, 0x1);
        gbc.writeMem(0xc999, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4dcc, gbc.sp());
        EXPECT(0xc99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc999));
        EXPECT(0xb1, gbc.readMem(0xc99a));
        // CB B1 03E5
        gbc.setState(0x786, 0x6960, 0x34a0, 0xeec6, 0xb1bf, 0x59c4, 0x1, 0x1);
        gbc.writeMem(0x786, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6960, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B1 03E6
        gbc.setState(0xe58a, 0x9561, 0xe5c0, 0xc8eb, 0x3387, 0x5ff9, 0x0, 0x1);
        gbc.writeMem(0xe58a, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9561, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58a));
        EXPECT(0xb1, gbc.readMem(0xe58b));
        // CB B1 03E7
        gbc.setState(0xd9d4, 0xdb81, 0x9140, 0xab6c, 0x54cd, 0x2f87, 0x0, 0x1);
        gbc.writeMem(0xd9d4, { 0xcb, 0xb1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdb81, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d4));
        EXPECT(0xb1, gbc.readMem(0xd9d5));
    }
