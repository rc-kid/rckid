    TEST(gbcemu, opcode_a2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A2 0001
        gbc.setState(0xa1a7, 0xbd17, 0xce30, 0xcf71, 0x8927, 0xcc44, 0x1, 0x1);
        gbc.writeMem(0xa1a7, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa1a7));
        // A2 0002
        gbc.setState(0x51f4, 0xfd1a, 0xee60, 0xf908, 0xf408, 0x9956, 0x0, 0x0);
        gbc.writeMem(0x51f4, { 0xa2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfd1a, gbc.sp());
        EXPECT(0x51f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0003
        gbc.setState(0x286a, 0x1bb8, 0xd00, 0xbcda, 0xe282, 0xea41, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0004
        gbc.setState(0x1704, 0x3aa5, 0xa250, 0x6632, 0xca46, 0x1af9, 0x1, 0x1);
        gbc.writeMem(0x1704, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3aa5, gbc.sp());
        EXPECT(0x1705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0005
        gbc.setState(0xd2d9, 0xf3f3, 0x2ea0, 0x12cb, 0xda73, 0x6b53, 0x0, 0x0);
        gbc.writeMem(0xd2d9, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf3f3, gbc.sp());
        EXPECT(0xd2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd2d9));
        // A2 0006
        gbc.setState(0xcc88, 0xe37c, 0x9d80, 0x5e13, 0x1ba6, 0x87d, 0x0, 0x1);
        gbc.writeMem(0xcc88, { 0xa2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe37c, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcc88));
        // A2 0007
        gbc.setState(0xac4, 0x4d39, 0x1a0, 0x656a, 0x5b8f, 0xcd00, 0x0, 0x0);
        gbc.writeMem(0xac4, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0008
        gbc.setState(0x28d8, 0xac6b, 0x2190, 0xb9dc, 0x8f9, 0xc59, 0x1, 0x1);
        gbc.writeMem(0x28d8, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xac6b, gbc.sp());
        EXPECT(0x28d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0009
        gbc.setState(0x4e8e, 0x9dd, 0xad70, 0x704a, 0x1331, 0x7fbf, 0x0, 0x0);
        gbc.writeMem(0x4e8e, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 000A
        gbc.setState(0xbbab, 0x6417, 0x54c0, 0x4ac4, 0xd519, 0x6979, 0x1, 0x1);
        gbc.writeMem(0xbbab, { 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0xbbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbbab));
        // A2 000C
        gbc.setState(0x86e7, 0x8c03, 0xe880, 0x6917, 0x9563, 0x304c, 0x1, 0x0);
        gbc.writeMem(0x86e7, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x86e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x86e7));
        // A2 000D
        gbc.setState(0x4b95, 0x568d, 0x21b0, 0x7030, 0x53e6, 0xbef4, 0x1, 0x0);
        gbc.writeMem(0x4b95, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0x4b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 000E
        gbc.setState(0xe407, 0xc4b3, 0x2ec0, 0x935a, 0x1009, 0x164b, 0x0, 0x0);
        gbc.writeMem(0xe407, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc4b3, gbc.sp());
        EXPECT(0xe408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe407));
        // A2 000F
        gbc.setState(0x2f8b, 0x9689, 0xd060, 0x3bb2, 0x9016, 0x1ff4, 0x1, 0x0);
        gbc.writeMem(0x2f8b, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9689, gbc.sp());
        EXPECT(0x2f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0010
        gbc.setState(0xbc25, 0x30cc, 0x4a20, 0x7acb, 0xbd83, 0x8433, 0x0, 0x1);
        gbc.writeMem(0xbc25, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x30cc, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbc25));
        // A2 0011
        gbc.setState(0x7cc1, 0x695a, 0x77c0, 0xbb56, 0x362f, 0x10ca, 0x1, 0x0);
        gbc.writeMem(0x7cc1, { 0xa2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0x7cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0012
        gbc.setState(0x707a, 0x96fa, 0x86d0, 0xaee0, 0x2c1c, 0x8a6c, 0x1, 0x0);
        gbc.writeMem(0x707a, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0013
        gbc.setState(0x6ca2, 0xa8de, 0x5c60, 0x88fa, 0xf628, 0x5143, 0x1, 0x1);
        gbc.writeMem(0x6ca2, { 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0014
        gbc.setState(0x5503, 0x6971, 0x6380, 0x314d, 0xedde, 0xd30c, 0x1, 0x1);
        gbc.writeMem(0x5503, { 0xa2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x5504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0015
        gbc.setState(0x2fc0, 0xd945, 0xfe0, 0x5f83, 0x103b, 0xfdf8, 0x0, 0x1);
        gbc.writeMem(0x2fc0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd945, gbc.sp());
        EXPECT(0x2fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0016
        gbc.setState(0x9584, 0x721e, 0x10f0, 0x1a7d, 0xdb21, 0xf414, 0x1, 0x1);
        gbc.writeMem(0x9584, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x721e, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9584));
        // A2 0017
        gbc.setState(0x5184, 0xb49b, 0x84b0, 0xba29, 0x56d, 0xeb17, 0x0, 0x0);
        gbc.writeMem(0x5184, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0x5185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0018
        gbc.setState(0x6e13, 0x6774, 0xd540, 0xd55b, 0x94f5, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x6e13, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6774, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0019
        gbc.setState(0x9549, 0xd734, 0xcca0, 0x5d17, 0x782a, 0xc59f, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x954a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9549));
        // A2 001A
        gbc.setState(0x6404, 0x5e3f, 0x4780, 0x9501, 0x92f0, 0xdf85, 0x0, 0x0);
        gbc.writeMem(0x6404, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 001B
        gbc.setState(0x1ef7, 0xc573, 0xd450, 0xa41f, 0xd8b0, 0x21ff, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc573, gbc.sp());
        EXPECT(0x1ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 001C
        gbc.setState(0x53cf, 0xd432, 0x8f50, 0xfe3e, 0xaf3a, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x53cf, { 0xa2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0x53d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 001D
        gbc.setState(0xa38a, 0xe0d3, 0xc280, 0x67ee, 0xe497, 0xb70a, 0x1, 0x1);
        gbc.writeMem(0xa38a, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe0d3, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa38a));
        // A2 001E
        gbc.setState(0x86fb, 0x57c9, 0xf880, 0x4ee2, 0xffc3, 0x611e, 0x1, 0x1);
        gbc.writeMem(0x86fb, { 0xa2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x57c9, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x86fb));
        // A2 001F
        gbc.setState(0xa7ae, 0x9355, 0x6660, 0xa8da, 0xd096, 0x981, 0x0, 0x1);
        gbc.writeMem(0xa7ae, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9355, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa7ae));
        // A2 0020
        gbc.setState(0x431c, 0xce0c, 0x5f20, 0x42c7, 0x8896, 0x5c9a, 0x0, 0x0);
        gbc.writeMem(0x431c, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xce0c, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0021
        gbc.setState(0xca88, 0xd7c7, 0x6cc0, 0x5760, 0x1dd8, 0x8b16, 0x1, 0x1);
        gbc.writeMem(0xca88, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xca88));
        // A2 0022
        gbc.setState(0x60c9, 0x7f55, 0xf010, 0x3711, 0x40da, 0x96e5, 0x1, 0x0);
        gbc.writeMem(0x60c9, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7f55, gbc.sp());
        EXPECT(0x60ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0023
        gbc.setState(0xda50, 0x21ca, 0x7db0, 0x22b5, 0xc9ea, 0xe7ec, 0x0, 0x0);
        gbc.writeMem(0xda50, { 0xa2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0xda51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda50));
        // A2 0024
        gbc.setState(0x4ad0, 0x755d, 0x3a40, 0xa03, 0xc4c9, 0x2e26, 0x1, 0x1);
        gbc.writeMem(0x4ad0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x755d, gbc.sp());
        EXPECT(0x4ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0025
        gbc.setState(0xd328, 0x922a, 0xaf10, 0xffda, 0xe6db, 0xdc57, 0x1, 0x1);
        gbc.writeMem(0xd328, { 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0xd329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd328));
        // A2 0026
        gbc.setState(0x14ca, 0xdde9, 0x9340, 0x5bbb, 0x6eed, 0x4380, 0x1, 0x1);
        gbc.writeMem(0x14ca, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdde9, gbc.sp());
        EXPECT(0x14cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0027
        gbc.setState(0xaf0a, 0x40f1, 0xba80, 0x7b91, 0xa89e, 0x5ab9, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0xa2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x40f1, gbc.sp());
        EXPECT(0xaf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaf0a));
        // A2 0028
        gbc.setState(0x3a4c, 0xf857, 0x3ce0, 0x75c5, 0xd16b, 0x770d, 0x0, 0x1);
        gbc.writeMem(0x3a4c, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf857, gbc.sp());
        EXPECT(0x3a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0029
        gbc.setState(0xd17c, 0x6683, 0x5400, 0xdc4b, 0x8f64, 0x314e, 0x1, 0x0);
        gbc.writeMem(0xd17c, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6683, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd17c));
        // A2 002A
        gbc.setState(0x2b7c, 0x7508, 0x3770, 0xc45d, 0x7ef7, 0xb638, 0x1, 0x0);
        gbc.writeMem(0x2b7c, { 0xa2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7508, gbc.sp());
        EXPECT(0x2b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 002C
        gbc.setState(0x8123, 0x9f94, 0x22f0, 0x4182, 0xeb97, 0x2cb1, 0x0, 0x0);
        gbc.writeMem(0x8123, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8123));
        // A2 002D
        gbc.setState(0xc16b, 0x26a7, 0x92b0, 0xa63d, 0xd537, 0xeec0, 0x1, 0x1);
        gbc.writeMem(0xc16b, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26a7, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc16b));
        // A2 002E
        gbc.setState(0x6495, 0x6c60, 0xd290, 0x4e8d, 0x4503, 0xd137, 0x1, 0x0);
        gbc.writeMem(0x6495, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0x6496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 002F
        gbc.setState(0x4475, 0xdc3d, 0xda00, 0xfe47, 0xc3bc, 0xde1c, 0x1, 0x1);
        gbc.writeMem(0x4475, { 0xa2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdc3d, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0030
        gbc.setState(0x2466, 0x16cb, 0x6700, 0xb046, 0xaa0, 0x86e, 0x0, 0x0);
        gbc.writeMem(0x2466, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0031
        gbc.setState(0xb20f, 0x98ed, 0xd010, 0x5dd3, 0xdcea, 0xb9a1, 0x1, 0x1);
        gbc.writeMem(0xb20f, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0xb210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb20f));
        // A2 0032
        gbc.setState(0xee7d, 0x1d35, 0xd0f0, 0xd09f, 0xfa03, 0x2800, 0x0, 0x1);
        gbc.writeMem(0xee7d, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d35, gbc.sp());
        EXPECT(0xee7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xee7d));
        // A2 0033
        gbc.setState(0xba20, 0x58c6, 0x2630, 0x3c11, 0xed07, 0xf286, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x58c6, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xba20));
        // A2 0034
        gbc.setState(0x916c, 0xd333, 0x9840, 0xfb25, 0xb149, 0xd069, 0x0, 0x1);
        gbc.writeMem(0x916c, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0x916d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x916c));
        // A2 0035
        gbc.setState(0xb9d9, 0x97a4, 0x1f70, 0x8ec9, 0x5e49, 0xbd06, 0x1, 0x0);
        gbc.writeMem(0xb9d9, { 0xa2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x97a4, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb9d9));
        // A2 0036
        gbc.setState(0x4dac, 0xaccc, 0x9ab0, 0x9aac, 0xa6c8, 0xf582, 0x0, 0x1);
        gbc.writeMem(0x4dac, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaccc, gbc.sp());
        EXPECT(0x4dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0037
        gbc.setState(0xbe64, 0x85a3, 0x70, 0x441, 0xba2f, 0x728a, 0x0, 0x0);
        gbc.writeMem(0xbe64, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x85a3, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbe64));
        // A2 0038
        gbc.setState(0x3976, 0x64be, 0x7e80, 0x3a9, 0x93ce, 0x41a2, 0x1, 0x1);
        gbc.writeMem(0x3976, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0x3977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 003A
        gbc.setState(0xc1, 0x343, 0xd0, 0x7830, 0x6fdf, 0x7dab, 0x0, 0x1);
        gbc.writeMem(0xc1, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x343, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 003B
        gbc.setState(0x7047, 0xc7f2, 0x9760, 0x5f0f, 0x4fd3, 0x9f73, 0x0, 0x1);
        gbc.writeMem(0x7047, { 0xa2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0x7048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 003C
        gbc.setState(0xa4ae, 0x2014, 0x2100, 0xb397, 0x5c4, 0x76b5, 0x1, 0x1);
        gbc.writeMem(0xa4ae, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa4ae));
        // A2 003D
        gbc.setState(0x254a, 0x8b5b, 0x30a0, 0x62d9, 0x1553, 0xdb2d, 0x0, 0x0);
        gbc.writeMem(0x254a, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8b5b, gbc.sp());
        EXPECT(0x254b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 003E
        gbc.setState(0x7f84, 0xe0cd, 0x2ad0, 0xb176, 0x1081, 0x6228, 0x1, 0x0);
        gbc.writeMem(0x7f84, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe0cd, gbc.sp());
        EXPECT(0x7f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 003F
        gbc.setState(0xcb2f, 0x346d, 0x2ea0, 0x1f46, 0xd43, 0x5209, 0x1, 0x0);
        gbc.writeMem(0xcb2f, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x346d, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcb2f));
        // A2 0040
        gbc.setState(0x7105, 0x8db0, 0xa300, 0xfe43, 0x6177, 0xefdc, 0x1, 0x0);
        gbc.writeMem(0x7105, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8db0, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0041
        gbc.setState(0xd5b4, 0x63d4, 0xaa20, 0x9339, 0xd068, 0x8051, 0x1, 0x1);
        gbc.writeMem(0xd5b4, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x63d4, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd5b4));
        // A2 0042
        gbc.setState(0x19e7, 0x25c2, 0xf5c0, 0x8426, 0x30ae, 0x60d0, 0x1, 0x1);
        gbc.writeMem(0x19e7, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x25c2, gbc.sp());
        EXPECT(0x19e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0043
        gbc.setState(0x1741, 0xeea, 0x90f0, 0xa863, 0x4ae9, 0xb617, 0x1, 0x1);
        gbc.writeMem(0x1741, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeea, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0044
        gbc.setState(0x52ef, 0xd6dc, 0x710, 0x7a1a, 0xf83b, 0xe764, 0x0, 0x0);
        gbc.writeMem(0x52ef, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0045
        gbc.setState(0x2bf8, 0x590, 0x4d70, 0x679c, 0xe641, 0xe758, 0x1, 0x0);
        gbc.writeMem(0x2bf8, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x590, gbc.sp());
        EXPECT(0x2bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0046
        gbc.setState(0xc07d, 0x5bf5, 0x35d0, 0x6121, 0xa1fc, 0x3ca1, 0x1, 0x0);
        gbc.writeMem(0xc07d, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5bf5, gbc.sp());
        EXPECT(0xc07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc07d));
        // A2 0047
        gbc.setState(0x1074, 0xbdb5, 0x9780, 0xc295, 0x114f, 0x6669, 0x0, 0x1);
        gbc.writeMem(0x1074, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x1075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0048
        gbc.setState(0xaace, 0x6ce7, 0xfaf0, 0x7ad3, 0xa6d, 0x73fb, 0x0, 0x0);
        gbc.writeMem(0xaace, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6ce7, gbc.sp());
        EXPECT(0xaacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaace));
        // A2 0049
        gbc.setState(0x7456, 0x7fb3, 0x1820, 0xfe25, 0x82c4, 0x735f, 0x0, 0x1);
        gbc.writeMem(0x7456, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7fb3, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 004A
        gbc.setState(0xe0fc, 0xe6fc, 0x43f0, 0x436a, 0x141f, 0x9f5d, 0x0, 0x1);
        gbc.writeMem(0xe0fc, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe6fc, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe0fc));
        // A2 004B
        gbc.setState(0xaaf1, 0xafe3, 0x2df0, 0xeaf9, 0x14e8, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0xaaf1, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaaf1));
        // A2 004C
        gbc.setState(0x7179, 0xe994, 0x3890, 0xefef, 0x3722, 0xbb05, 0x1, 0x1);
        gbc.writeMem(0x7179, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe994, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 004D
        gbc.setState(0x9b94, 0x1392, 0x15d0, 0x4e71, 0x5891, 0xcbfd, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9b94));
        // A2 004E
        gbc.setState(0x43a1, 0xd59c, 0xfd40, 0xb65a, 0xf79, 0x966b, 0x1, 0x0);
        gbc.writeMem(0x43a1, { 0xa2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 004F
        gbc.setState(0xd7f8, 0x1fa5, 0x320, 0x52ad, 0xb770, 0xb178, 0x0, 0x0);
        gbc.writeMem(0xd7f8, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1fa5, gbc.sp());
        EXPECT(0xd7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd7f8));
        // A2 0050
        gbc.setState(0xc42f, 0x31eb, 0x47a0, 0x91fa, 0x2246, 0xf230, 0x0, 0x0);
        gbc.writeMem(0xc42f, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x31eb, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc42f));
        // A2 0051
        gbc.setState(0xb20d, 0xb990, 0x9c0, 0x17e2, 0xbc3a, 0xa8da, 0x1, 0x1);
        gbc.writeMem(0xb20d, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0xb20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb20d));
        // A2 0052
        gbc.setState(0x6935, 0xef8b, 0xf7e0, 0x451e, 0xf2ad, 0x88de, 0x0, 0x1);
        gbc.writeMem(0x6935, { 0xa2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xef8b, gbc.sp());
        EXPECT(0x6936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0053
        gbc.setState(0x58be, 0xe8a9, 0x7af0, 0x290c, 0xc8a2, 0xf6f3, 0x1, 0x0);
        gbc.writeMem(0x58be, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0054
        gbc.setState(0x845f, 0xdda6, 0xbda0, 0xf708, 0x1c46, 0xc93c, 0x0, 0x0);
        gbc.writeMem(0x845f, { 0xa2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x845f));
        // A2 0055
        gbc.setState(0xc77a, 0xd5, 0x3b00, 0x320b, 0x87b, 0x2c2e, 0x1, 0x0);
        gbc.writeMem(0xc77a, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc77a));
        // A2 0056
        gbc.setState(0x7810, 0xb4c2, 0xd500, 0x11f5, 0xf900, 0x2d8b, 0x0, 0x1);
        gbc.writeMem(0x7810, { 0xa2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb4c2, gbc.sp());
        EXPECT(0x7811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0057
        gbc.setState(0x4a1e, 0x3de9, 0xb3b0, 0x88c9, 0x4b15, 0xe857, 0x0, 0x0);
        gbc.writeMem(0x4a1e, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3de9, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0058
        gbc.setState(0x946, 0x8aaf, 0x79f0, 0x340c, 0xc4f9, 0x4aed, 0x0, 0x0);
        gbc.writeMem(0x946, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8aaf, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0059
        gbc.setState(0xae4f, 0x447f, 0xb6e0, 0xcce, 0xe6dd, 0xb7f0, 0x0, 0x0);
        gbc.writeMem(0xae4f, { 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x447f, gbc.sp());
        EXPECT(0xae50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae4f));
        // A2 005A
        gbc.setState(0x33ce, 0xd542, 0x3200, 0x696, 0xed8b, 0x618c, 0x0, 0x0);
        gbc.writeMem(0x33ce, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd542, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 005B
        gbc.setState(0xa7cb, 0xcdb8, 0xe020, 0x80bc, 0xe1a9, 0xd1c4, 0x1, 0x1);
        gbc.writeMem(0xa7cb, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcdb8, gbc.sp());
        EXPECT(0xa7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa7cb));
        // A2 005C
        gbc.setState(0xe44b, 0xab82, 0x990, 0xd973, 0xe0a7, 0x954e, 0x1, 0x0);
        gbc.writeMem(0xe44b, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab82, gbc.sp());
        EXPECT(0xe44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe44b));
        // A2 005D
        gbc.setState(0x7530, 0x6f08, 0xec60, 0x51da, 0xaf90, 0x5f33, 0x0, 0x1);
        gbc.writeMem(0x7530, { 0xa2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x7531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 005E
        gbc.setState(0x2e65, 0x3260, 0xa8e0, 0x1299, 0x8f31, 0xd9e6, 0x0, 0x0);
        gbc.writeMem(0x2e65, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 005F
        gbc.setState(0xb343, 0x8797, 0x9b30, 0x7ec4, 0xa810, 0x2ef8, 0x1, 0x0);
        gbc.writeMem(0xb343, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8797, gbc.sp());
        EXPECT(0xb344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb343));
        // A2 0060
        gbc.setState(0xa733, 0x77ff, 0x26d0, 0x7b4c, 0xbc3b, 0xb8d8, 0x0, 0x1);
        gbc.writeMem(0xa733, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x77ff, gbc.sp());
        EXPECT(0xa734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa733));
        // A2 0061
        gbc.setState(0x7dd0, 0x74e8, 0x2810, 0x82e5, 0x402, 0x6708, 0x1, 0x1);
        gbc.writeMem(0x7dd0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x74e8, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0062
        gbc.setState(0xdfd, 0x26ff, 0xfdb0, 0xea19, 0x8c3b, 0xc61b, 0x0, 0x1);
        gbc.writeMem(0xdfd, { 0xa2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0xdfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0064
        gbc.setState(0x5a5, 0xb72d, 0xd3a0, 0xc284, 0xab75, 0xb5bd, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb72d, gbc.sp());
        EXPECT(0x5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0066
        gbc.setState(0x199a, 0xd115, 0xfd30, 0x781e, 0x6cdf, 0xf5ec, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xa2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd115, gbc.sp());
        EXPECT(0x199b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0067
        gbc.setState(0x4647, 0x7157, 0x40f0, 0xbe97, 0x9b3e, 0x81e, 0x1, 0x0);
        gbc.writeMem(0x4647, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7157, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0068
        gbc.setState(0x46e8, 0x9ad0, 0xa600, 0xcb8f, 0x9e1e, 0xd22c, 0x1, 0x0);
        gbc.writeMem(0x46e8, { 0xa2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9ad0, gbc.sp());
        EXPECT(0x46e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0069
        gbc.setState(0xa79f, 0x9a7b, 0x8d60, 0x9d13, 0x876b, 0x8a29, 0x1, 0x0);
        gbc.writeMem(0xa79f, { 0xa2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa79f));
        // A2 006A
        gbc.setState(0xd565, 0x6713, 0xde50, 0x15df, 0x90ef, 0x8b84, 0x1, 0x0);
        gbc.writeMem(0xd565, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6713, gbc.sp());
        EXPECT(0xd566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd565));
        // A2 006B
        gbc.setState(0xa73c, 0xdd88, 0xa7b0, 0xfdb3, 0x45b9, 0xe246, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdd88, gbc.sp());
        EXPECT(0xa73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa73c));
        // A2 006C
        gbc.setState(0xe370, 0xa1cc, 0xf9a0, 0xb63f, 0x5e33, 0x7b66, 0x0, 0x0);
        gbc.writeMem(0xe370, { 0xa2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa1cc, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe370));
        // A2 006D
        gbc.setState(0x8ccc, 0x2364, 0x360, 0x93ed, 0x66ff, 0x9f9f, 0x1, 0x1);
        gbc.writeMem(0x8ccc, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2364, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8ccc));
        // A2 006E
        gbc.setState(0xdf15, 0x625b, 0xc810, 0x3e66, 0xd9d2, 0x211e, 0x0, 0x1);
        gbc.writeMem(0xdf15, { 0xa2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0xdf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdf15));
        // A2 006F
        gbc.setState(0x4022, 0x1248, 0x2400, 0x9b83, 0x378b, 0xd12a, 0x1, 0x1);
        gbc.writeMem(0x4022, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1248, gbc.sp());
        EXPECT(0x4023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0070
        gbc.setState(0xa17a, 0x4874, 0x6a60, 0x4034, 0x6843, 0x31a6, 0x1, 0x1);
        gbc.writeMem(0xa17a, { 0xa2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa17a));
        // A2 0071
        gbc.setState(0xdd70, 0x2655, 0x3030, 0xf746, 0xc403, 0x357b, 0x1, 0x1);
        gbc.writeMem(0xdd70, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2655, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdd70));
        // A2 0072
        gbc.setState(0xe9bf, 0x39a, 0x59f0, 0x5e9c, 0x39df, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0xe9bf, { 0xa2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x39a, gbc.sp());
        EXPECT(0xe9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe9bf));
        // A2 0073
        gbc.setState(0xa29f, 0xc819, 0xdda0, 0x1071, 0x9e6a, 0x2635, 0x0, 0x1);
        gbc.writeMem(0xa29f, { 0xa2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0xa2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa29f));
        // A2 0074
        gbc.setState(0x9a80, 0xa23e, 0x43e0, 0xde6e, 0xbbe9, 0x9b3f, 0x1, 0x0);
        gbc.writeMem(0x9a80, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa23e, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a80));
        // A2 0075
        gbc.setState(0xc388, 0x4f57, 0x8080, 0xb98e, 0x95f0, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xc388, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc388));
        // A2 0076
        gbc.setState(0xc138, 0xccd0, 0x95f0, 0x8426, 0x1239, 0x6c7, 0x1, 0x1);
        gbc.writeMem(0xc138, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xccd0, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc138));
        // A2 0077
        gbc.setState(0x80c1, 0x2c3c, 0x1d0, 0xd7bc, 0x9d9c, 0xea8c, 0x0, 0x0);
        gbc.writeMem(0x80c1, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c3c, gbc.sp());
        EXPECT(0x80c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x80c1));
        // A2 0078
        gbc.setState(0x8547, 0x7b28, 0x4d60, 0x706d, 0xdab6, 0x8f89, 0x0, 0x0);
        gbc.writeMem(0x8547, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0x8548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8547));
        // A2 0079
        gbc.setState(0xa5e0, 0x16e1, 0x8220, 0xb1af, 0xe9bb, 0x303e, 0x0, 0x0);
        gbc.writeMem(0xa5e0, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x16e1, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa5e0));
        // A2 007A
        gbc.setState(0x2dff, 0xa873, 0x20, 0x54af, 0x7a53, 0x4e9c, 0x1, 0x1);
        gbc.writeMem(0x2dff, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 007B
        gbc.setState(0x2813, 0x4d16, 0x2520, 0x2efa, 0x2585, 0xab31, 0x1, 0x1);
        gbc.writeMem(0x2813, { 0xa2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4d16, gbc.sp());
        EXPECT(0x2814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 007C
        gbc.setState(0xa08b, 0x764, 0x9510, 0xb620, 0x55ee, 0x18d2, 0x1, 0x0);
        gbc.writeMem(0xa08b, { 0xa2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0xa08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa08b));
        // A2 007D
        gbc.setState(0x9d5, 0x9382, 0xdc30, 0x8964, 0x639c, 0xff19, 0x1, 0x1);
        gbc.writeMem(0x9d5, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9382, gbc.sp());
        EXPECT(0x9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 007E
        gbc.setState(0x2bf9, 0x5f6a, 0xa9f0, 0x4a5c, 0x8286, 0x1748, 0x1, 0x0);
        gbc.writeMem(0x2bf9, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0x2bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 007F
        gbc.setState(0x97ab, 0x284d, 0x14a0, 0xdb15, 0x5a09, 0xb895, 0x0, 0x1);
        gbc.writeMem(0x97ab, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x284d, gbc.sp());
        EXPECT(0x97ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x97ab));
        // A2 0080
        gbc.setState(0xad91, 0x2517, 0xbfe0, 0xbd5, 0xa9d6, 0xa2f0, 0x1, 0x1);
        gbc.writeMem(0xad91, { 0xa2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2517, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xad91));
        // A2 0081
        gbc.setState(0x759d, 0x782c, 0x60, 0xfe4b, 0xee97, 0x3392, 0x1, 0x1);
        gbc.writeMem(0x759d, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x782c, gbc.sp());
        EXPECT(0x759e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0082
        gbc.setState(0x4368, 0xe88b, 0x9030, 0xe5a4, 0xf146, 0x833a, 0x1, 0x0);
        gbc.writeMem(0x4368, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0083
        gbc.setState(0x6066, 0x697, 0x2470, 0xddbb, 0x268, 0xb062, 0x0, 0x1);
        gbc.writeMem(0x6066, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x697, gbc.sp());
        EXPECT(0x6067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0084
        gbc.setState(0x5576, 0x9e92, 0x9fd0, 0x77b5, 0x45e9, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x5576, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0x5577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0085
        gbc.setState(0x28bf, 0x5bd4, 0xa220, 0xa756, 0xb25b, 0x35f7, 0x1, 0x0);
        gbc.writeMem(0x28bf, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5bd4, gbc.sp());
        EXPECT(0x28c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0086
        gbc.setState(0x3b92, 0xf34d, 0xaa10, 0x6d11, 0x484, 0xecdd, 0x1, 0x1);
        gbc.writeMem(0x3b92, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf34d, gbc.sp());
        EXPECT(0x3b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0087
        gbc.setState(0x80c2, 0x6702, 0xe590, 0xeb7c, 0x8c7c, 0x3c1a, 0x1, 0x1);
        gbc.writeMem(0x80c2, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6702, gbc.sp());
        EXPECT(0x80c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x80c2));
        // A2 0088
        gbc.setState(0xf16, 0xcb83, 0x3200, 0xc14e, 0x9244, 0xe549, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcb83, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0089
        gbc.setState(0x84ef, 0x1a51, 0xd510, 0x5176, 0x3cd4, 0x4af7, 0x0, 0x1);
        gbc.writeMem(0x84ef, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x84ef));
        // A2 008A
        gbc.setState(0x648a, 0xe343, 0x5800, 0x1e7a, 0x3a74, 0xdc4a, 0x1, 0x1);
        gbc.writeMem(0x648a, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe343, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 008B
        gbc.setState(0x71d, 0x83dd, 0x98c0, 0x34ff, 0x5e50, 0x9070, 0x1, 0x0);
        gbc.writeMem(0x71d, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 008C
        gbc.setState(0x1a45, 0x13cc, 0x3690, 0xe078, 0xc12a, 0x59c3, 0x0, 0x1);
        gbc.writeMem(0x1a45, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x1a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 008D
        gbc.setState(0x1fec, 0xc134, 0x1f80, 0xec4c, 0x651e, 0x3253, 0x0, 0x1);
        gbc.writeMem(0x1fec, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc134, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 008E
        gbc.setState(0xa486, 0x2ada, 0xb570, 0x7ace, 0x9eb7, 0xac56, 0x1, 0x1);
        gbc.writeMem(0xa486, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2ada, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa486));
        // A2 008F
        gbc.setState(0xd4b1, 0xba6d, 0xd220, 0x1de0, 0xdbc5, 0xbca5, 0x1, 0x0);
        gbc.writeMem(0xd4b1, { 0xa2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xba6d, gbc.sp());
        EXPECT(0xd4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd4b1));
        // A2 0090
        gbc.setState(0x5065, 0x1049, 0x350, 0xe46e, 0x63d2, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0x5065, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1049, gbc.sp());
        EXPECT(0x5066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0091
        gbc.setState(0x9a80, 0x410b, 0x8260, 0x6251, 0xdd91, 0xf8c1, 0x1, 0x1);
        gbc.writeMem(0x9a80, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0x9a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a80));
        // A2 0092
        gbc.setState(0x3006, 0xdd9b, 0x4730, 0xb941, 0x66b3, 0x5112, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdd9b, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0093
        gbc.setState(0x5a44, 0x7c11, 0xfab0, 0x155a, 0xb3db, 0x35c7, 0x0, 0x0);
        gbc.writeMem(0x5a44, { 0xa2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7c11, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0094
        gbc.setState(0x1f4b, 0x4bc0, 0xeb80, 0x8cc7, 0xf166, 0x49f, 0x0, 0x0);
        gbc.writeMem(0x1f4b, { 0xa2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4bc0, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0095
        gbc.setState(0x2f74, 0xd900, 0x76a0, 0x9b4c, 0x4b3c, 0xdbbe, 0x1, 0x0);
        gbc.writeMem(0x2f74, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0x2f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0096
        gbc.setState(0x6ff3, 0x15b7, 0x9380, 0xd2f5, 0x1671, 0x88d1, 0x0, 0x1);
        gbc.writeMem(0x6ff3, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0x6ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0097
        gbc.setState(0x35af, 0x45ee, 0xee0, 0x48ef, 0x391d, 0x10a0, 0x1, 0x1);
        gbc.writeMem(0x35af, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x35b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0098
        gbc.setState(0xad16, 0xe7c1, 0x37c0, 0x466f, 0x6e00, 0xa868, 0x0, 0x0);
        gbc.writeMem(0xad16, { 0xa2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0xad17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xad16));
        // A2 0099
        gbc.setState(0xc7cc, 0x3287, 0xf940, 0xb537, 0x3899, 0xdb30, 0x0, 0x1);
        gbc.writeMem(0xc7cc, { 0xa2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0xc7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc7cc));
        // A2 009A
        gbc.setState(0xe01c, 0x1390, 0xfdb0, 0xa1a8, 0xc9fb, 0x9709, 0x0, 0x0);
        gbc.writeMem(0xe01c, { 0xa2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1390, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe01c));
        // A2 009B
        gbc.setState(0x68bd, 0x48c7, 0x2ee0, 0x741f, 0xab46, 0x1513, 0x0, 0x0);
        gbc.writeMem(0x68bd, { 0xa2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x48c7, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 009E
        gbc.setState(0xcade, 0xadb2, 0x670, 0xba1a, 0x1b36, 0xb186, 0x0, 0x1);
        gbc.writeMem(0xcade, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcade));
        // A2 009F
        gbc.setState(0x7b80, 0x3ac5, 0x53e0, 0x4cde, 0x27c7, 0xb22d, 0x0, 0x0);
        gbc.writeMem(0x7b80, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0x7b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00A0
        gbc.setState(0xd077, 0x4c27, 0xdb0, 0x673e, 0xca4, 0xaeba, 0x0, 0x1);
        gbc.writeMem(0xd077, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4c27, gbc.sp());
        EXPECT(0xd078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd077));
        // A2 00A1
        gbc.setState(0x4325, 0x7142, 0x3030, 0xf448, 0x68b, 0xf78c, 0x0, 0x1);
        gbc.writeMem(0x4325, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7142, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00A2
        gbc.setState(0x80ea, 0xd285, 0x6540, 0x2e19, 0x7549, 0x636b, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0xa2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd285, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x80ea));
        // A2 00A3
        gbc.setState(0xbe33, 0x37aa, 0xd970, 0x155c, 0x7d47, 0xb663, 0x1, 0x0);
        gbc.writeMem(0xbe33, { 0xa2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x37aa, gbc.sp());
        EXPECT(0xbe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbe33));
        // A2 00A4
        gbc.setState(0xee89, 0x5618, 0x8230, 0x3328, 0xe0c6, 0x68d2, 0x1, 0x0);
        gbc.writeMem(0xee89, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0xee8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xee89));
        // A2 00A5
        gbc.setState(0x605d, 0xb09, 0xce10, 0xc31b, 0x88eb, 0x2e13, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00A6
        gbc.setState(0x1a8a, 0xa98, 0x56c0, 0xc58a, 0xf2b5, 0x4a3e, 0x0, 0x0);
        gbc.writeMem(0x1a8a, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa98, gbc.sp());
        EXPECT(0x1a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00A7
        gbc.setState(0xde24, 0x9e8f, 0xd9d0, 0xe72e, 0x8504, 0xad7f, 0x1, 0x1);
        gbc.writeMem(0xde24, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xde24));
        // A2 00A8
        gbc.setState(0x5337, 0x59a1, 0xaa10, 0x479f, 0x6978, 0x34f9, 0x0, 0x0);
        gbc.writeMem(0x5337, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00A9
        gbc.setState(0x7376, 0x50df, 0xe550, 0x4968, 0xf9c1, 0x3d18, 0x0, 0x1);
        gbc.writeMem(0x7376, { 0xa2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00AA
        gbc.setState(0xae4b, 0xcab7, 0xf520, 0xf16d, 0x4db, 0x66c7, 0x0, 0x0);
        gbc.writeMem(0xae4b, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcab7, gbc.sp());
        EXPECT(0xae4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae4b));
        // A2 00AC
        gbc.setState(0x12ec, 0xf72e, 0x15d0, 0xf6d8, 0xb5, 0x2677, 0x1, 0x0);
        gbc.writeMem(0x12ec, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x12ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00AD
        gbc.setState(0xa22, 0xbaba, 0xa480, 0x2e54, 0xd72b, 0xf0c, 0x1, 0x1);
        gbc.writeMem(0xa22, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00AE
        gbc.setState(0x222c, 0x81e2, 0x2d90, 0xc872, 0x4502, 0x203d, 0x1, 0x0);
        gbc.writeMem(0x222c, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x81e2, gbc.sp());
        EXPECT(0x222d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00AF
        gbc.setState(0xcce6, 0xc79a, 0x5350, 0xf051, 0xa377, 0x377, 0x0, 0x1);
        gbc.writeMem(0xcce6, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc79a, gbc.sp());
        EXPECT(0xcce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcce6));
        // A2 00B0
        gbc.setState(0x9d04, 0x9b22, 0x1f80, 0x78e3, 0x47d, 0x1976, 0x0, 0x0);
        gbc.writeMem(0x9d04, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0x9d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9d04));
        // A2 00B1
        gbc.setState(0xad3a, 0x2cf, 0xa9f0, 0x1756, 0xb377, 0xf86, 0x1, 0x0);
        gbc.writeMem(0xad3a, { 0xa2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2cf, gbc.sp());
        EXPECT(0xad3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xad3a));
        // A2 00B2
        gbc.setState(0x297d, 0x227c, 0x3dd0, 0x1af9, 0xa56b, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x297d, { 0xa2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x297e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00B3
        gbc.setState(0x17e8, 0x21a4, 0xe480, 0x28e8, 0x4505, 0x5cbc, 0x0, 0x1);
        gbc.writeMem(0x17e8, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x17e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00B4
        gbc.setState(0x29d2, 0x15f5, 0xa680, 0xbd49, 0x1462, 0x6195, 0x0, 0x0);
        gbc.writeMem(0x29d2, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0x29d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00B5
        gbc.setState(0xe109, 0xe8e5, 0xd650, 0x4c98, 0xf745, 0x698a, 0x1, 0x0);
        gbc.writeMem(0xe109, { 0xa2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0xe10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe109));
        // A2 00B7
        gbc.setState(0xb029, 0xb737, 0x6880, 0x4cb2, 0x826a, 0xe78e, 0x0, 0x0);
        gbc.writeMem(0xb029, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb029));
        // A2 00B8
        gbc.setState(0x94a8, 0x4009, 0xa430, 0x81ad, 0x1dae, 0x68bb, 0x0, 0x0);
        gbc.writeMem(0x94a8, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0x94a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x94a8));
        // A2 00B9
        gbc.setState(0x51b4, 0x6b0a, 0x8cc0, 0xcf02, 0x7c15, 0xd6be, 0x1, 0x0);
        gbc.writeMem(0x51b4, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6b0a, gbc.sp());
        EXPECT(0x51b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00BA
        gbc.setState(0x78fb, 0x9755, 0xd830, 0x8aa7, 0x8cda, 0x2a02, 0x1, 0x0);
        gbc.writeMem(0x78fb, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9755, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00BB
        gbc.setState(0xc9e7, 0xf08b, 0xba0, 0x9c24, 0x7872, 0x680b, 0x1, 0x0);
        gbc.writeMem(0xc9e7, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf08b, gbc.sp());
        EXPECT(0xc9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc9e7));
        // A2 00BC
        gbc.setState(0x71a, 0x1325, 0xb810, 0x8b42, 0x7651, 0x56c, 0x0, 0x0);
        gbc.writeMem(0x71a, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1325, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00BD
        gbc.setState(0x62c6, 0xe471, 0x7400, 0x9f8e, 0x9613, 0xe90d, 0x0, 0x0);
        gbc.writeMem(0x62c6, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe471, gbc.sp());
        EXPECT(0x62c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00BE
        gbc.setState(0x31d, 0x6c3c, 0xbc10, 0x98b5, 0x4b19, 0x627b, 0x0, 0x0);
        gbc.writeMem(0x31d, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00BF
        gbc.setState(0xa3b7, 0xcd6d, 0x6910, 0xeb84, 0x43cb, 0x250f, 0x1, 0x0);
        gbc.writeMem(0xa3b7, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcd6d, gbc.sp());
        EXPECT(0xa3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa3b7));
        // A2 00C0
        gbc.setState(0x1fda, 0xc387, 0x88c0, 0x85fd, 0x2f51, 0x57c4, 0x1, 0x0);
        gbc.writeMem(0x1fda, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc387, gbc.sp());
        EXPECT(0x1fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C1
        gbc.setState(0x8a87, 0xd698, 0x2770, 0x43f, 0xce74, 0xb038, 0x1, 0x1);
        gbc.writeMem(0x8a87, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8a87));
        // A2 00C2
        gbc.setState(0x561c, 0x36e6, 0xb080, 0x619, 0x6389, 0x2a4f, 0x0, 0x1);
        gbc.writeMem(0x561c, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C3
        gbc.setState(0xe630, 0x3a49, 0xeb90, 0xfb33, 0xcd11, 0xa9f1, 0x0, 0x1);
        gbc.writeMem(0xe630, { 0xa2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3a49, gbc.sp());
        EXPECT(0xe631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe630));
        // A2 00C4
        gbc.setState(0x5de3, 0x26f, 0xd100, 0xae57, 0x1540, 0x3fca, 0x0, 0x0);
        gbc.writeMem(0x5de3, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0x5de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C5
        gbc.setState(0x5c27, 0xb87c, 0x3310, 0xcfbf, 0x458a, 0x8fe0, 0x0, 0x0);
        gbc.writeMem(0x5c27, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb87c, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C6
        gbc.setState(0xe557, 0x2ca4, 0x4a30, 0xc5ab, 0x6204, 0x7c44, 0x0, 0x1);
        gbc.writeMem(0xe557, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2ca4, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe557));
        // A2 00C7
        gbc.setState(0x5b25, 0x547, 0x79c0, 0x1e1a, 0x966d, 0xc343, 0x1, 0x1);
        gbc.writeMem(0x5b25, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x547, gbc.sp());
        EXPECT(0x5b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C8
        gbc.setState(0x1e87, 0x44c2, 0xdcb0, 0x8923, 0xbd34, 0x47d1, 0x1, 0x1);
        gbc.writeMem(0x1e87, { 0xa2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00C9
        gbc.setState(0x9975, 0x33f6, 0xf330, 0x4115, 0xe11c, 0x514a, 0x0, 0x1);
        gbc.writeMem(0x9975, { 0xa2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0x9976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9975));
        // A2 00CA
        gbc.setState(0x5ee2, 0x579b, 0x590, 0x2f61, 0xb5f3, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0x5ee2, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00CB
        gbc.setState(0xe07c, 0xa97, 0x9b20, 0xde7c, 0xe13e, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0xe07c, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0xe07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe07c));
        // A2 00CC
        gbc.setState(0xa5e1, 0x3b64, 0xb960, 0x47d9, 0xf9e9, 0x9ad9, 0x1, 0x0);
        gbc.writeMem(0xa5e1, { 0xa2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3b64, gbc.sp());
        EXPECT(0xa5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa5e1));
        // A2 00CD
        gbc.setState(0x6fdb, 0x62c4, 0xe620, 0x3d85, 0xf11c, 0x2289, 0x1, 0x0);
        gbc.writeMem(0x6fdb, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x62c4, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D0
        gbc.setState(0x8404, 0x67e5, 0xc3d0, 0xd152, 0x596, 0xa867, 0x0, 0x0);
        gbc.writeMem(0x8404, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x8405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8404));
        // A2 00D1
        gbc.setState(0x71f4, 0xd320, 0x6590, 0xdb77, 0xa1ed, 0x772b, 0x1, 0x0);
        gbc.writeMem(0x71f4, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd320, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D2
        gbc.setState(0x6bed, 0xc6ca, 0x6180, 0x6805, 0x5f4f, 0x3fb2, 0x1, 0x0);
        gbc.writeMem(0x6bed, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc6ca, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D3
        gbc.setState(0xc62e, 0xeba2, 0x3640, 0xc1ff, 0x5fc5, 0x8240, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0xa2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xeba2, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc62e));
        // A2 00D4
        gbc.setState(0x74fb, 0xf892, 0x63e0, 0xa276, 0x1247, 0x41b7, 0x1, 0x0);
        gbc.writeMem(0x74fb, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf892, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D5
        gbc.setState(0x295, 0x229d, 0x9060, 0x2c7a, 0x6c3d, 0xa0e, 0x0, 0x1);
        gbc.writeMem(0x295, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x229d, gbc.sp());
        EXPECT(0x296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D6
        gbc.setState(0xb664, 0x8939, 0x6aa0, 0x47f0, 0x43f5, 0xa230, 0x1, 0x1);
        gbc.writeMem(0xb664, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8939, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb664));
        // A2 00D7
        gbc.setState(0x5c93, 0x16, 0x2890, 0x96f5, 0x39a0, 0xf18d, 0x1, 0x0);
        gbc.writeMem(0x5c93, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0x5c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D8
        gbc.setState(0x1ded, 0xe13, 0xdcc0, 0xbe9e, 0x74e5, 0x8498, 0x1, 0x1);
        gbc.writeMem(0x1ded, { 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe13, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00D9
        gbc.setState(0x5478, 0xa2d9, 0x3100, 0x59ae, 0xf558, 0xc62e, 0x0, 0x0);
        gbc.writeMem(0x5478, { 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0x5479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00DA
        gbc.setState(0xcf57, 0x62ae, 0x81d0, 0x4aac, 0x23ea, 0x5334, 0x1, 0x0);
        gbc.writeMem(0xcf57, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x62ae, gbc.sp());
        EXPECT(0xcf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcf57));
        // A2 00DB
        gbc.setState(0x6412, 0x447, 0x40d0, 0x7f12, 0x5820, 0x5839, 0x1, 0x0);
        gbc.writeMem(0x6412, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x447, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00DC
        gbc.setState(0x46b0, 0xfa8b, 0x8a0, 0x8fe0, 0xea0c, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x46b0, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfa8b, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00DD
        gbc.setState(0xecd, 0xfa8e, 0x1740, 0x634e, 0x871, 0x89c8, 0x1, 0x1);
        gbc.writeMem(0xecd, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0xece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00DE
        gbc.setState(0xdb0a, 0xe485, 0x76c0, 0x2c08, 0x65ca, 0xb6f0, 0x0, 0x0);
        gbc.writeMem(0xdb0a, { 0xa2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0xdb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdb0a));
        // A2 00DF
        gbc.setState(0xebbb, 0xc4ff, 0xbd50, 0x916c, 0xa037, 0x2a01, 0x1, 0x0);
        gbc.writeMem(0xebbb, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc4ff, gbc.sp());
        EXPECT(0xebbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xebbb));
        // A2 00E0
        gbc.setState(0xd9c8, 0x7624, 0x87d0, 0xcf0b, 0xe326, 0xcf64, 0x1, 0x1);
        gbc.writeMem(0xd9c8, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7624, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd9c8));
        // A2 00E1
        gbc.setState(0xc223, 0x6aef, 0xd9d0, 0x6dd8, 0x9303, 0xddf8, 0x0, 0x0);
        gbc.writeMem(0xc223, { 0xa2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6aef, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc223));
        // A2 00E2
        gbc.setState(0x6cf0, 0x543d, 0x3480, 0x995f, 0x8c93, 0x217d, 0x0, 0x1);
        gbc.writeMem(0x6cf0, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00E3
        gbc.setState(0x3e70, 0x133a, 0x5c40, 0xcc33, 0xcf75, 0xbe00, 0x0, 0x0);
        gbc.writeMem(0x3e70, { 0xa2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00E4
        gbc.setState(0xde84, 0x69db, 0xc2c0, 0x2010, 0x3c66, 0xd00, 0x0, 0x1);
        gbc.writeMem(0xde84, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x69db, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xde84));
        // A2 00E5
        gbc.setState(0xcf3d, 0x8b69, 0x6300, 0xaf7b, 0xbc28, 0xb66c, 0x0, 0x0);
        gbc.writeMem(0xcf3d, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcf3d));
        // A2 00E6
        gbc.setState(0x84f1, 0x6597, 0x4d30, 0x9853, 0x70db, 0xe8e5, 0x1, 0x1);
        gbc.writeMem(0x84f1, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x84f1));
        // A2 00E7
        gbc.setState(0x2893, 0x650c, 0x5ae0, 0x565f, 0x25e1, 0x826d, 0x0, 0x1);
        gbc.writeMem(0x2893, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00E8
        gbc.setState(0x816d, 0xbb4a, 0x5d20, 0xa9cd, 0x1e23, 0xa3df, 0x1, 0x0);
        gbc.writeMem(0x816d, { 0xa2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x816e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x816d));
        // A2 00E9
        gbc.setState(0xa144, 0xed96, 0x9cf0, 0x5e73, 0xf1f0, 0xd42b, 0x0, 0x0);
        gbc.writeMem(0xa144, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xed96, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa144));
        // A2 00EA
        gbc.setState(0xbe3a, 0x1977, 0x2a40, 0xb824, 0x4270, 0xbc5a, 0x1, 0x1);
        gbc.writeMem(0xbe3a, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbe3a));
        // A2 00EB
        gbc.setState(0x5bfc, 0x7c6, 0xde20, 0x7420, 0x2046, 0x3ffe, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7c6, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00ED
        gbc.setState(0x3484, 0x8b04, 0xabb0, 0x6033, 0x94d6, 0x9cf5, 0x1, 0x0);
        gbc.writeMem(0x3484, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8b04, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00EE
        gbc.setState(0x1966, 0x56a5, 0x15a0, 0x3a58, 0xfc8f, 0x3cb6, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x56a5, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00EF
        gbc.setState(0x7802, 0xafae, 0xb980, 0x4132, 0x464c, 0x8f1d, 0x0, 0x0);
        gbc.writeMem(0x7802, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xafae, gbc.sp());
        EXPECT(0x7803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F0
        gbc.setState(0x3337, 0x34ce, 0x9c30, 0x465e, 0xfbf8, 0x61d, 0x0, 0x0);
        gbc.writeMem(0x3337, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0x3338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F1
        gbc.setState(0xe719, 0xaf5d, 0x6e10, 0x9463, 0x9da8, 0x8681, 0x0, 0x0);
        gbc.writeMem(0xe719, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe719));
        // A2 00F2
        gbc.setState(0x92e3, 0x77d8, 0x92d0, 0xaafb, 0x2985, 0x29ef, 0x1, 0x0);
        gbc.writeMem(0x92e3, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x77d8, gbc.sp());
        EXPECT(0x92e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x92e3));
        // A2 00F3
        gbc.setState(0xaf7c, 0x2d75, 0x13d0, 0xc588, 0xbb35, 0x7522, 0x1, 0x0);
        gbc.writeMem(0xaf7c, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2d75, gbc.sp());
        EXPECT(0xaf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaf7c));
        // A2 00F4
        gbc.setState(0x95e5, 0xada3, 0x1ed0, 0x7740, 0xaf50, 0xd19b, 0x1, 0x0);
        gbc.writeMem(0x95e5, { 0xa2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xada3, gbc.sp());
        EXPECT(0x95e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x95e5));
        // A2 00F5
        gbc.setState(0x2900, 0x7b82, 0xebc0, 0x1ce2, 0xa662, 0xbab, 0x1, 0x1);
        gbc.writeMem(0x2900, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7b82, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F6
        gbc.setState(0x8e7, 0x10a7, 0x2fb0, 0x6f94, 0xf978, 0x977c, 0x0, 0x0);
        gbc.writeMem(0x8e7, { 0xa2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x10a7, gbc.sp());
        EXPECT(0x8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F7
        gbc.setState(0x1082, 0xe887, 0x8c20, 0xc4e5, 0x2273, 0x724c, 0x1, 0x0);
        gbc.writeMem(0x1082, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F8
        gbc.setState(0x1b16, 0x72bc, 0xe870, 0xdcad, 0xfd33, 0xdd02, 0x0, 0x1);
        gbc.writeMem(0x1b16, { 0xa2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x72bc, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00F9
        gbc.setState(0xe558, 0x89f, 0xb050, 0x4acb, 0x3e02, 0x6b88, 0x1, 0x0);
        gbc.writeMem(0xe558, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x89f, gbc.sp());
        EXPECT(0xe559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe558));
        // A2 00FA
        gbc.setState(0x8dc8, 0x331b, 0x9aa0, 0x20d8, 0x1c5c, 0x8b0e, 0x0, 0x0);
        gbc.writeMem(0x8dc8, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8dc8));
        // A2 00FB
        gbc.setState(0x1d8e, 0x6f70, 0xa040, 0x7375, 0xc40, 0xf5b9, 0x1, 0x1);
        gbc.writeMem(0x1d8e, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6f70, gbc.sp());
        EXPECT(0x1d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00FC
        gbc.setState(0x4ee6, 0x6c6b, 0xf3a0, 0xcb75, 0x6460, 0x3437, 0x0, 0x0);
        gbc.writeMem(0x4ee6, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6c6b, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00FD
        gbc.setState(0x34b1, 0x1922, 0x1a50, 0xa37a, 0xbf1, 0xe392, 0x1, 0x1);
        gbc.writeMem(0x34b1, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1922, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00FE
        gbc.setState(0x7f2a, 0xe67b, 0x31e0, 0x1b30, 0xb7a5, 0xaccd, 0x0, 0x1);
        gbc.writeMem(0x7f2a, { 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe67b, gbc.sp());
        EXPECT(0x7f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 00FF
        gbc.setState(0xdfd4, 0x2f50, 0x22b0, 0xdd12, 0xdf0b, 0xbdf6, 0x0, 0x0);
        gbc.writeMem(0xdfd4, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0xdfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdfd4));
        // A2 0100
        gbc.setState(0x8e8b, 0x4464, 0x1bc0, 0xb950, 0x5481, 0x53b5, 0x0, 0x1);
        gbc.writeMem(0x8e8b, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4464, gbc.sp());
        EXPECT(0x8e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8e8b));
        // A2 0101
        gbc.setState(0x21b2, 0xca74, 0xdbb0, 0xf6ac, 0x43e8, 0x2d5b, 0x0, 0x0);
        gbc.writeMem(0x21b2, { 0xa2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xca74, gbc.sp());
        EXPECT(0x21b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0102
        gbc.setState(0x37a2, 0xd137, 0x43c0, 0x59f, 0x4934, 0x2cd0, 0x0, 0x0);
        gbc.writeMem(0x37a2, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0x37a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0103
        gbc.setState(0x33bc, 0xc863, 0xb7e0, 0x1eb6, 0xa108, 0xea00, 0x0, 0x0);
        gbc.writeMem(0x33bc, { 0xa2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc863, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0104
        gbc.setState(0x1204, 0x8388, 0x3990, 0x8d17, 0x703c, 0x1bc2, 0x0, 0x0);
        gbc.writeMem(0x1204, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0105
        gbc.setState(0xed6a, 0xe9a8, 0x5200, 0x80d2, 0xad37, 0x2b39, 0x0, 0x1);
        gbc.writeMem(0xed6a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe9a8, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xed6a));
        // A2 0106
        gbc.setState(0xc1e6, 0x1a34, 0x1660, 0xdb2d, 0x12b9, 0xd4f4, 0x0, 0x0);
        gbc.writeMem(0xc1e6, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0xc1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc1e6));
        // A2 0107
        gbc.setState(0xa519, 0x2036, 0xc9b0, 0xe9c0, 0xd2b6, 0x83d5, 0x0, 0x0);
        gbc.writeMem(0xa519, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa519));
        // A2 0108
        gbc.setState(0x3379, 0x186e, 0x840, 0x28cb, 0x4ed4, 0xad9e, 0x0, 0x1);
        gbc.writeMem(0x3379, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x186e, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0109
        gbc.setState(0xc9c2, 0x5ac6, 0x7f40, 0xa0d6, 0x114d, 0x464e, 0x0, 0x1);
        gbc.writeMem(0xc9c2, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5ac6, gbc.sp());
        EXPECT(0xc9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc9c2));
        // A2 010A
        gbc.setState(0x7c38, 0x2038, 0x4170, 0xe458, 0x88ee, 0xd8c4, 0x1, 0x1);
        gbc.writeMem(0x7c38, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2038, gbc.sp());
        EXPECT(0x7c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 010B
        gbc.setState(0x686c, 0x7f41, 0x850, 0xfc6d, 0x49c1, 0x6098, 0x1, 0x1);
        gbc.writeMem(0x686c, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f41, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 010C
        gbc.setState(0x328d, 0x63f4, 0xe450, 0x9786, 0x367c, 0xd71, 0x0, 0x1);
        gbc.writeMem(0x328d, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 010D
        gbc.setState(0x7855, 0xc5d8, 0x2f20, 0xed58, 0x991f, 0xe2c, 0x1, 0x0);
        gbc.writeMem(0x7855, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0x7856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 010E
        gbc.setState(0x498d, 0xdc84, 0x3500, 0xaca3, 0xb2e5, 0x4709, 0x1, 0x1);
        gbc.writeMem(0x498d, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdc84, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0111
        gbc.setState(0x8f84, 0x58b7, 0x2840, 0xaeff, 0xf8e8, 0x1c5e, 0x1, 0x1);
        gbc.writeMem(0x8f84, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8f84));
        // A2 0112
        gbc.setState(0x73c5, 0xc82, 0x3600, 0x13e3, 0x1b3c, 0x6df4, 0x1, 0x1);
        gbc.writeMem(0x73c5, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x73c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0113
        gbc.setState(0x77b6, 0x9f67, 0x4340, 0xb10e, 0xb95c, 0x4c5e, 0x0, 0x1);
        gbc.writeMem(0x77b6, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x77b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0114
        gbc.setState(0xdab, 0xe7f, 0x840, 0x4329, 0x9428, 0xcb78, 0x1, 0x1);
        gbc.writeMem(0xdab, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe7f, gbc.sp());
        EXPECT(0xdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0115
        gbc.setState(0xbbb3, 0xf78, 0xb8a0, 0x549f, 0x823, 0x5e0b, 0x0, 0x0);
        gbc.writeMem(0xbbb3, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0xbbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbbb3));
        // A2 0117
        gbc.setState(0x5760, 0x5425, 0x9af0, 0x4dbe, 0xf268, 0x6988, 0x0, 0x1);
        gbc.writeMem(0x5760, { 0xa2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5425, gbc.sp());
        EXPECT(0x5761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0118
        gbc.setState(0x121, 0x6962, 0x4380, 0x1760, 0xa136, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x121, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6962, gbc.sp());
        EXPECT(0x122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0119
        gbc.setState(0x160a, 0x1627, 0x5060, 0x3e39, 0x7c40, 0x8368, 0x1, 0x1);
        gbc.writeMem(0x160a, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1627, gbc.sp());
        EXPECT(0x160b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 011A
        gbc.setState(0x33bb, 0xcc88, 0xf650, 0xc65c, 0x2b43, 0xc054, 0x1, 0x1);
        gbc.writeMem(0x33bb, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0x33bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 011B
        gbc.setState(0x1316, 0xceca, 0x85f0, 0x607b, 0x77aa, 0x269d, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xceca, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 011C
        gbc.setState(0xa380, 0xd0cc, 0x8690, 0xa3bb, 0x3ec6, 0xbe5f, 0x1, 0x0);
        gbc.writeMem(0xa380, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd0cc, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa380));
        // A2 011D
        gbc.setState(0xa9f8, 0xcfaa, 0x6450, 0xa43, 0x8c40, 0xd85c, 0x0, 0x1);
        gbc.writeMem(0xa9f8, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcfaa, gbc.sp());
        EXPECT(0xa9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa9f8));
        // A2 011E
        gbc.setState(0xb000, 0xf4e9, 0xa00, 0xe7e6, 0xf47a, 0x7fa2, 0x1, 0x0);
        gbc.writeMem(0xb000, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf4e9, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb000));
        // A2 011F
        gbc.setState(0x30a4, 0x3eb4, 0x47d0, 0x569b, 0x5dfb, 0x7ac, 0x1, 0x0);
        gbc.writeMem(0x30a4, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3eb4, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0120
        gbc.setState(0x11f, 0x2fca, 0xb1b0, 0x5d19, 0x8057, 0x67ff, 0x1, 0x0);
        gbc.writeMem(0x11f, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2fca, gbc.sp());
        EXPECT(0x120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0121
        gbc.setState(0xdfb9, 0xdc5, 0xbac0, 0x393b, 0x3607, 0x47a0, 0x1, 0x0);
        gbc.writeMem(0xdfb9, { 0xa2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdc5, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdfb9));
        // A2 0122
        gbc.setState(0xcb7c, 0x207d, 0xeee0, 0x6e02, 0x7b7b, 0x75e1, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0xa2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x207d, gbc.sp());
        EXPECT(0xcb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcb7c));
        // A2 0123
        gbc.setState(0x1ebc, 0x131, 0xaaa0, 0xc45e, 0xaf3f, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0xa2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0x1ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0124
        gbc.setState(0x9b21, 0xf25c, 0xc7f0, 0x6cdb, 0x3335, 0x191b, 0x1, 0x1);
        gbc.writeMem(0x9b21, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf25c, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9b21));
        // A2 0125
        gbc.setState(0x87e5, 0xf0fc, 0x7ce0, 0x416, 0x4604, 0x690e, 0x0, 0x1);
        gbc.writeMem(0x87e5, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x87e5));
        // A2 0126
        gbc.setState(0xe849, 0x32fd, 0xba60, 0x31fa, 0xe85, 0x5dc9, 0x0, 0x1);
        gbc.writeMem(0xe849, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x32fd, gbc.sp());
        EXPECT(0xe84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe849));
        // A2 0128
        gbc.setState(0xaa68, 0x67ed, 0x1d40, 0x19a2, 0x138e, 0xfe07, 0x0, 0x0);
        gbc.writeMem(0xaa68, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaa68));
        // A2 0129
        gbc.setState(0x600a, 0xadf1, 0x64a0, 0xf2d2, 0x8215, 0x8afc, 0x0, 0x1);
        gbc.writeMem(0x600a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x600b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 012A
        gbc.setState(0x3701, 0x2bef, 0x3ed0, 0x15db, 0xa22, 0x4d76, 0x0, 0x0);
        gbc.writeMem(0x3701, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2bef, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 012C
        gbc.setState(0x1b7f, 0x604e, 0x91b0, 0xcf28, 0x435a, 0xcbb9, 0x1, 0x1);
        gbc.writeMem(0x1b7f, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x604e, gbc.sp());
        EXPECT(0x1b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 012D
        gbc.setState(0x144d, 0xf279, 0x6760, 0x2361, 0xdd6a, 0xb931, 0x0, 0x1);
        gbc.writeMem(0x144d, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x144e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 012E
        gbc.setState(0x4af1, 0xed86, 0x3670, 0xfb6f, 0x241d, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0x4af1, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 012F
        gbc.setState(0x325, 0xe4f8, 0x8430, 0x800a, 0x9bf9, 0x3a2f, 0x0, 0x1);
        gbc.writeMem(0x325, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe4f8, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0130
        gbc.setState(0xb33d, 0xd0cd, 0x3c00, 0x7aad, 0x4e5c, 0xb02c, 0x1, 0x0);
        gbc.writeMem(0xb33d, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd0cd, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb33d));
        // A2 0131
        gbc.setState(0x4768, 0xdc57, 0x2b90, 0xc91c, 0x5804, 0x889e, 0x1, 0x0);
        gbc.writeMem(0x4768, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc57, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0132
        gbc.setState(0x767a, 0xd48c, 0xfde0, 0x5c77, 0x687e, 0x655c, 0x0, 0x1);
        gbc.writeMem(0x767a, { 0xa2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0x767b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0133
        gbc.setState(0x167d, 0xcdbe, 0xbe00, 0x3650, 0x81e3, 0x6fba, 0x0, 0x0);
        gbc.writeMem(0x167d, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0x167e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0134
        gbc.setState(0x10e4, 0x8617, 0xaf40, 0x819e, 0x6295, 0x5148, 0x0, 0x0);
        gbc.writeMem(0x10e4, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0135
        gbc.setState(0x55ef, 0x5c39, 0x5ad0, 0xe724, 0x7096, 0xc36c, 0x0, 0x1);
        gbc.writeMem(0x55ef, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0x55f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0136
        gbc.setState(0xc05, 0x6da4, 0x9f10, 0x99ad, 0x5bac, 0x90f7, 0x1, 0x1);
        gbc.writeMem(0xc05, { 0xa2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6da4, gbc.sp());
        EXPECT(0xc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0138
        gbc.setState(0x76c, 0xf159, 0x8f40, 0xf549, 0xe864, 0xe161, 0x0, 0x0);
        gbc.writeMem(0x76c, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf159, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0139
        gbc.setState(0x2437, 0xfadf, 0x72e0, 0x3ae5, 0xf640, 0xe663, 0x0, 0x1);
        gbc.writeMem(0x2437, { 0xa2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfadf, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 013A
        gbc.setState(0x9364, 0x7414, 0x4890, 0x2b2d, 0x9a1, 0x2720, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9364));
        // A2 013B
        gbc.setState(0x9878, 0x4cc8, 0x8e10, 0x8d5b, 0x8733, 0x15c8, 0x0, 0x0);
        gbc.writeMem(0x9878, { 0xa2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0x9879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9878));
        // A2 013C
        gbc.setState(0x5ee3, 0x9bb3, 0x3380, 0x9e1c, 0xf80f, 0x126f, 0x1, 0x0);
        gbc.writeMem(0x5ee3, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9bb3, gbc.sp());
        EXPECT(0x5ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 013D
        gbc.setState(0x3fc2, 0x5c86, 0x1fa0, 0x534e, 0x60fc, 0x59dc, 0x0, 0x1);
        gbc.writeMem(0x3fc2, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x3fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 013E
        gbc.setState(0xe517, 0xcf52, 0x2c10, 0x3612, 0xa759, 0x3177, 0x1, 0x0);
        gbc.writeMem(0xe517, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf52, gbc.sp());
        EXPECT(0xe518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe517));
        // A2 013F
        gbc.setState(0x61ad, 0x67e4, 0x7d40, 0x70c5, 0x3f08, 0x9185, 0x0, 0x1);
        gbc.writeMem(0x61ad, { 0xa2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x61ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0140
        gbc.setState(0x26ca, 0x80ed, 0x90f0, 0x4b9, 0xa096, 0x8fdf, 0x0, 0x0);
        gbc.writeMem(0x26ca, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0141
        gbc.setState(0x3294, 0x922, 0x14a0, 0xaa7c, 0x8076, 0x3ce0, 0x0, 0x0);
        gbc.writeMem(0x3294, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0x3295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0142
        gbc.setState(0xd78a, 0x964f, 0x6500, 0x5fbc, 0x61eb, 0x2f94, 0x0, 0x0);
        gbc.writeMem(0xd78a, { 0xa2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x964f, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd78a));
        // A2 0143
        gbc.setState(0x2250, 0xe3cc, 0x9cf0, 0xd7ca, 0x57ca, 0x6306, 0x0, 0x0);
        gbc.writeMem(0x2250, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x2251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0144
        gbc.setState(0x9670, 0x6621, 0xa330, 0x9d3a, 0xf357, 0xa4f0, 0x1, 0x0);
        gbc.writeMem(0x9670, { 0xa2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6621, gbc.sp());
        EXPECT(0x9671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9670));
        // A2 0145
        gbc.setState(0x759c, 0xd7e7, 0xc230, 0x4745, 0xa960, 0x4c64, 0x1, 0x1);
        gbc.writeMem(0x759c, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd7e7, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0147
        gbc.setState(0x429a, 0x1fb8, 0x9a40, 0x28f, 0x9c6e, 0xa93d, 0x1, 0x1);
        gbc.writeMem(0x429a, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0148
        gbc.setState(0x2b6a, 0xeb36, 0x4070, 0xabeb, 0x3751, 0x3bf4, 0x0, 0x0);
        gbc.writeMem(0x2b6a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0149
        gbc.setState(0x46d6, 0x4941, 0xa8a0, 0xafd1, 0x433d, 0x50e0, 0x0, 0x0);
        gbc.writeMem(0x46d6, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0x46d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 014A
        gbc.setState(0x56fe, 0xf580, 0x10f0, 0x3e18, 0x38b9, 0xf4ab, 0x0, 0x0);
        gbc.writeMem(0x56fe, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf580, gbc.sp());
        EXPECT(0x56ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 014B
        gbc.setState(0x3a7f, 0xf599, 0xd260, 0xe81a, 0xfef3, 0xc066, 0x1, 0x1);
        gbc.writeMem(0x3a7f, { 0xa2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 014C
        gbc.setState(0xaa8f, 0x52f1, 0x9480, 0x3b91, 0x3d68, 0xb6a9, 0x0, 0x0);
        gbc.writeMem(0xaa8f, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0xaa90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaa8f));
        // A2 014D
        gbc.setState(0x17f7, 0xc7b8, 0xcba0, 0x1267, 0x9cbb, 0x8b27, 0x0, 0x0);
        gbc.writeMem(0x17f7, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc7b8, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 014E
        gbc.setState(0x70d, 0x5ff6, 0x8810, 0xd866, 0xab8d, 0x351, 0x1, 0x1);
        gbc.writeMem(0x70d, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0150
        gbc.setState(0x49bd, 0x558f, 0x4d60, 0x30c5, 0x7233, 0x901d, 0x1, 0x0);
        gbc.writeMem(0x49bd, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x558f, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0151
        gbc.setState(0x1fd5, 0x6fbb, 0x5570, 0xe972, 0x2c4, 0x6099, 0x0, 0x1);
        gbc.writeMem(0x1fd5, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x1fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0152
        gbc.setState(0xd96b, 0xc280, 0x8e90, 0x648a, 0x5771, 0x42a2, 0x0, 0x0);
        gbc.writeMem(0xd96b, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0xd96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd96b));
        // A2 0153
        gbc.setState(0xa581, 0x5829, 0x5580, 0x8716, 0xa2c, 0x7743, 0x0, 0x1);
        gbc.writeMem(0xa581, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5829, gbc.sp());
        EXPECT(0xa582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa581));
        // A2 0154
        gbc.setState(0xd7d8, 0x1f87, 0x9a0, 0xb2d4, 0x5431, 0x4acb, 0x1, 0x1);
        gbc.writeMem(0xd7d8, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0xd7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd7d8));
        // A2 0155
        gbc.setState(0x9c58, 0xf9e2, 0x4f60, 0xe07, 0x414b, 0x622c, 0x1, 0x0);
        gbc.writeMem(0x9c58, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf9e2, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9c58));
        // A2 0156
        gbc.setState(0x1692, 0x6398, 0x2d30, 0x51c5, 0xe582, 0xbae1, 0x1, 0x0);
        gbc.writeMem(0x1692, { 0xa2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x1693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0158
        gbc.setState(0xd20c, 0x5d27, 0xe580, 0x3b92, 0x4ffb, 0x4a37, 0x0, 0x0);
        gbc.writeMem(0xd20c, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd20c));
        // A2 015A
        gbc.setState(0x5aa4, 0x5787, 0x8b90, 0xc08b, 0x77f0, 0x5f79, 0x1, 0x1);
        gbc.writeMem(0x5aa4, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5787, gbc.sp());
        EXPECT(0x5aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 015B
        gbc.setState(0xdb23, 0x540, 0xeba0, 0xa75d, 0x8384, 0x4f2f, 0x1, 0x1);
        gbc.writeMem(0xdb23, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x540, gbc.sp());
        EXPECT(0xdb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdb23));
        // A2 015C
        gbc.setState(0x3628, 0x4825, 0x5c10, 0x3279, 0x48cd, 0xba8f, 0x0, 0x1);
        gbc.writeMem(0x3628, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4825, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 015D
        gbc.setState(0x3b17, 0x8771, 0x15a0, 0x6aba, 0x9678, 0xd43a, 0x1, 0x0);
        gbc.writeMem(0x3b17, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8771, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 015E
        gbc.setState(0x6afa, 0x9f7b, 0xfab0, 0xf14d, 0x15a6, 0x94e7, 0x1, 0x1);
        gbc.writeMem(0x6afa, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9f7b, gbc.sp());
        EXPECT(0x6afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 015F
        gbc.setState(0xb89d, 0xe0d2, 0xe130, 0xb59c, 0xf970, 0x4222, 0x1, 0x1);
        gbc.writeMem(0xb89d, { 0xa2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe0d2, gbc.sp());
        EXPECT(0xb89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb89d));
        // A2 0160
        gbc.setState(0xa6c0, 0xab1d, 0x87d0, 0x1950, 0x7c0e, 0x3e40, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0xa6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa6c0));
        // A2 0161
        gbc.setState(0xd081, 0x3836, 0x5a90, 0x5218, 0xb580, 0x9d05, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3836, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd081));
        // A2 0162
        gbc.setState(0xd86c, 0xd03c, 0x4a40, 0xdc9d, 0xf0da, 0xcf31, 0x1, 0x1);
        gbc.writeMem(0xd86c, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd86c));
        // A2 0163
        gbc.setState(0x8ab6, 0x1d23, 0xe80, 0x2c61, 0x1c96, 0xe542, 0x0, 0x1);
        gbc.writeMem(0x8ab6, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8ab6));
        // A2 0164
        gbc.setState(0x7549, 0x8ddd, 0xacb0, 0x2f38, 0xa73, 0x9dac, 0x1, 0x1);
        gbc.writeMem(0x7549, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8ddd, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0165
        gbc.setState(0x702b, 0xe375, 0xcf80, 0xcc9f, 0xcbd9, 0x93f8, 0x0, 0x1);
        gbc.writeMem(0x702b, { 0xa2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0166
        gbc.setState(0x6294, 0x92e0, 0x5980, 0x9880, 0xdc8a, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0x6294, { 0xa2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0x6295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0167
        gbc.setState(0x2ed5, 0xf37d, 0x3030, 0x197f, 0x956f, 0xfb67, 0x0, 0x1);
        gbc.writeMem(0x2ed5, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0168
        gbc.setState(0x24aa, 0xcb28, 0xab90, 0x9511, 0x386, 0xb9eb, 0x1, 0x0);
        gbc.writeMem(0x24aa, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0x24ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0169
        gbc.setState(0x79ec, 0x4166, 0x74b0, 0x3cec, 0xc1ff, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0x79ec, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4166, gbc.sp());
        EXPECT(0x79ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 016A
        gbc.setState(0x8d94, 0x7348, 0xa900, 0xd9ea, 0xe2bb, 0x63cf, 0x0, 0x0);
        gbc.writeMem(0x8d94, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8d94));
        // A2 016B
        gbc.setState(0x176d, 0x2549, 0xea0, 0x38bd, 0x8bfd, 0x4266, 0x0, 0x1);
        gbc.writeMem(0x176d, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2549, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 016C
        gbc.setState(0x5d78, 0xfdac, 0xa750, 0xb227, 0x3d93, 0xaa59, 0x0, 0x0);
        gbc.writeMem(0x5d78, { 0xa2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 016D
        gbc.setState(0x1617, 0x860, 0x4210, 0xd24a, 0xf49f, 0xc4ac, 0x1, 0x1);
        gbc.writeMem(0x1617, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 016E
        gbc.setState(0x4615, 0x6ff6, 0xf1a0, 0x622b, 0xd6eb, 0xb284, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x4616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 016F
        gbc.setState(0xc62d, 0xd80f, 0x3c60, 0x709c, 0xb9b0, 0x93e9, 0x0, 0x0);
        gbc.writeMem(0xc62d, { 0xa2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd80f, gbc.sp());
        EXPECT(0xc62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc62d));
        // A2 0170
        gbc.setState(0xe44a, 0xdb94, 0xf560, 0xa024, 0x4f43, 0xb805, 0x1, 0x0);
        gbc.writeMem(0xe44a, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe44a));
        // A2 0171
        gbc.setState(0x5af4, 0xa9bb, 0xd070, 0x5fab, 0xf045, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0x5af4, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0173
        gbc.setState(0xb5e0, 0xe7a2, 0xebd0, 0xb140, 0x606d, 0x1fa6, 0x0, 0x1);
        gbc.writeMem(0xb5e0, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xb5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb5e0));
        // A2 0174
        gbc.setState(0x678e, 0x519c, 0xc530, 0x65a8, 0x11c7, 0x70e, 0x0, 0x0);
        gbc.writeMem(0x678e, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0175
        gbc.setState(0x3a8b, 0xcbdb, 0xb170, 0x8a7b, 0x5d3f, 0xe3b0, 0x1, 0x0);
        gbc.writeMem(0x3a8b, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcbdb, gbc.sp());
        EXPECT(0x3a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0176
        gbc.setState(0xd054, 0x46e4, 0x2ad0, 0x2027, 0xff62, 0xa322, 0x1, 0x0);
        gbc.writeMem(0xd054, { 0xa2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x46e4, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd054));
        // A2 0177
        gbc.setState(0xb631, 0xd1da, 0xa970, 0xb6b6, 0xc68, 0x76b3, 0x0, 0x0);
        gbc.writeMem(0xb631, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd1da, gbc.sp());
        EXPECT(0xb632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb631));
        // A2 0178
        gbc.setState(0xe986, 0x98e8, 0xacc0, 0x8f66, 0xa732, 0x54b0, 0x1, 0x1);
        gbc.writeMem(0xe986, { 0xa2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x98e8, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe986));
        // A2 0179
        gbc.setState(0xa288, 0x3c7e, 0x7f50, 0xe556, 0xc1ce, 0xbf15, 0x1, 0x1);
        gbc.writeMem(0xa288, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3c7e, gbc.sp());
        EXPECT(0xa289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa288));
        // A2 017A
        gbc.setState(0xd4d6, 0xb58, 0x9be0, 0xc5c8, 0xe74f, 0x83f2, 0x1, 0x1);
        gbc.writeMem(0xd4d6, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd4d6));
        // A2 017B
        gbc.setState(0x2c56, 0xd865, 0xa950, 0x836c, 0xb71a, 0x3ed2, 0x1, 0x0);
        gbc.writeMem(0x2c56, { 0xa2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0x2c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 017C
        gbc.setState(0x9be1, 0xd423, 0xc180, 0xff27, 0xb7b4, 0x38b9, 0x1, 0x1);
        gbc.writeMem(0x9be1, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd423, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9be1));
        // A2 017D
        gbc.setState(0x8534, 0x2eca, 0xf140, 0x54d2, 0xbb35, 0xb01f, 0x1, 0x0);
        gbc.writeMem(0x8534, { 0xa2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0x8535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8534));
        // A2 017E
        gbc.setState(0x92d9, 0x72ac, 0xa8e0, 0x14d9, 0x80e6, 0x398d, 0x1, 0x0);
        gbc.writeMem(0x92d9, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x72ac, gbc.sp());
        EXPECT(0x92da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x92d9));
        // A2 0180
        gbc.setState(0xa9d2, 0x486e, 0xa5f0, 0xd323, 0xb066, 0x344e, 0x1, 0x0);
        gbc.writeMem(0xa9d2, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x486e, gbc.sp());
        EXPECT(0xa9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa9d2));
        // A2 0181
        gbc.setState(0x3868, 0xa45c, 0x5e00, 0x188a, 0x745c, 0xfe19, 0x1, 0x1);
        gbc.writeMem(0x3868, { 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0x3869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0182
        gbc.setState(0x7b63, 0x85e1, 0x270, 0x6ccc, 0xd2bb, 0x7d67, 0x0, 0x0);
        gbc.writeMem(0x7b63, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x85e1, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0183
        gbc.setState(0xd1a0, 0x24d4, 0x5470, 0x3540, 0x9492, 0xb40e, 0x0, 0x0);
        gbc.writeMem(0xd1a0, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x24d4, gbc.sp());
        EXPECT(0xd1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd1a0));
        // A2 0184
        gbc.setState(0x1b4d, 0xfebc, 0x1560, 0x2f29, 0xe6d6, 0x7736, 0x0, 0x1);
        gbc.writeMem(0x1b4d, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfebc, gbc.sp());
        EXPECT(0x1b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0186
        gbc.setState(0xa9b5, 0x3c54, 0xdb50, 0xdadf, 0x2a0a, 0xc0ce, 0x0, 0x1);
        gbc.writeMem(0xa9b5, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa9b5));
        // A2 0188
        gbc.setState(0xaa8d, 0x759e, 0x13e0, 0x567d, 0x7793, 0xe3d, 0x0, 0x1);
        gbc.writeMem(0xaa8d, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x759e, gbc.sp());
        EXPECT(0xaa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaa8d));
        // A2 0189
        gbc.setState(0x6eac, 0xcd40, 0x9d00, 0x25a4, 0xfc0d, 0x5851, 0x0, 0x0);
        gbc.writeMem(0x6eac, { 0xa2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcd40, gbc.sp());
        EXPECT(0x6ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 018A
        gbc.setState(0x3bc2, 0x5abe, 0x23b0, 0x95bc, 0xc181, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x3bc2, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5abe, gbc.sp());
        EXPECT(0x3bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 018B
        gbc.setState(0x914d, 0x3f63, 0xabb0, 0x3770, 0x1d4e, 0xe307, 0x1, 0x0);
        gbc.writeMem(0x914d, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0x914e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x914d));
        // A2 018C
        gbc.setState(0xab05, 0x1a83, 0xda40, 0xdd4f, 0x5300, 0x8e7c, 0x0, 0x1);
        gbc.writeMem(0xab05, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xab05));
        // A2 018D
        gbc.setState(0xc3e6, 0x6e1, 0xf4a0, 0xabcf, 0x3c21, 0xe525, 0x0, 0x1);
        gbc.writeMem(0xc3e6, { 0xa2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc3e6));
        // A2 018E
        gbc.setState(0xb14b, 0x72fe, 0x2fb0, 0x5ec3, 0x50a4, 0x774c, 0x1, 0x1);
        gbc.writeMem(0xb14b, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0xb14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb14b));
        // A2 018F
        gbc.setState(0x2388, 0x61d, 0xc650, 0x26a6, 0xe78f, 0xeab8, 0x1, 0x1);
        gbc.writeMem(0x2388, { 0xa2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x61d, gbc.sp());
        EXPECT(0x2389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0190
        gbc.setState(0xaf85, 0x3fe7, 0xa7c0, 0x7c73, 0x2c92, 0x2b82, 0x0, 0x0);
        gbc.writeMem(0xaf85, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xaf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaf85));
        // A2 0191
        gbc.setState(0xda70, 0xe364, 0xc40, 0xfbc7, 0xd158, 0x8022, 0x1, 0x0);
        gbc.writeMem(0xda70, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe364, gbc.sp());
        EXPECT(0xda71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda70));
        // A2 0192
        gbc.setState(0x78e3, 0x20b9, 0x7dd0, 0x1e, 0xdefc, 0xb6d, 0x1, 0x0);
        gbc.writeMem(0x78e3, { 0xa2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x20b9, gbc.sp());
        EXPECT(0x78e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0193
        gbc.setState(0xbd35, 0xd061, 0xff0, 0xc879, 0x746a, 0x1127, 0x0, 0x0);
        gbc.writeMem(0xbd35, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbd35));
        // A2 0194
        gbc.setState(0x3331, 0xbdb1, 0x950, 0x5fe7, 0xdade, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0x3331, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbdb1, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0195
        gbc.setState(0xa59b, 0x7811, 0xbe40, 0xe3c8, 0xbd71, 0x1d80, 0x0, 0x1);
        gbc.writeMem(0xa59b, { 0xa2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7811, gbc.sp());
        EXPECT(0xa59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa59b));
        // A2 0196
        gbc.setState(0xb726, 0x3358, 0x14a0, 0x2794, 0xab2c, 0x952d, 0x1, 0x0);
        gbc.writeMem(0xb726, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0xb727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb726));
        // A2 0197
        gbc.setState(0x7fd, 0x626e, 0x510, 0x234e, 0xbde5, 0x763c, 0x0, 0x1);
        gbc.writeMem(0x7fd, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0198
        gbc.setState(0xb701, 0xfe9d, 0x2ad0, 0xdfc, 0x4483, 0x27dc, 0x1, 0x1);
        gbc.writeMem(0xb701, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb701));
        // A2 0199
        gbc.setState(0x467d, 0x5abd, 0x9750, 0xa51f, 0x6eaa, 0x7a56, 0x1, 0x1);
        gbc.writeMem(0x467d, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5abd, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 019B
        gbc.setState(0xd4bd, 0xea14, 0x3ec0, 0xc59e, 0x7ed0, 0xde78, 0x1, 0x0);
        gbc.writeMem(0xd4bd, { 0xa2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xea14, gbc.sp());
        EXPECT(0xd4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd4bd));
        // A2 019C
        gbc.setState(0xb66f, 0x27f6, 0xb970, 0x9832, 0xcf55, 0xb99e, 0x0, 0x0);
        gbc.writeMem(0xb66f, { 0xa2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0xb670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb66f));
        // A2 019D
        gbc.setState(0x3a50, 0xfe08, 0x3880, 0xa453, 0x80b, 0x8153, 0x1, 0x1);
        gbc.writeMem(0x3a50, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfe08, gbc.sp());
        EXPECT(0x3a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 019E
        gbc.setState(0x797, 0xef85, 0xf0b0, 0x48be, 0xae22, 0x8410, 0x0, 0x1);
        gbc.writeMem(0x797, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef85, gbc.sp());
        EXPECT(0x798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 019F
        gbc.setState(0xbcc1, 0xe252, 0xa790, 0xec5e, 0x1d57, 0xed30, 0x0, 0x0);
        gbc.writeMem(0xbcc1, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe252, gbc.sp());
        EXPECT(0xbcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbcc1));
        // A2 01A0
        gbc.setState(0xd9, 0xe201, 0x4150, 0xf8ae, 0xa04, 0x21a4, 0x0, 0x1);
        gbc.writeMem(0xd9, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe201, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01A1
        gbc.setState(0x8a72, 0xc295, 0xe000, 0xf1f, 0x292c, 0x350c, 0x0, 0x0);
        gbc.writeMem(0x8a72, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc295, gbc.sp());
        EXPECT(0x8a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8a72));
        // A2 01A2
        gbc.setState(0x1d83, 0x1280, 0x5f60, 0x4256, 0xc4da, 0xb945, 0x0, 0x1);
        gbc.writeMem(0x1d83, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1280, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01A3
        gbc.setState(0x181b, 0xd212, 0xf7c0, 0x21d6, 0xd8e8, 0xd3c9, 0x0, 0x1);
        gbc.writeMem(0x181b, { 0xa2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01A4
        gbc.setState(0xb12c, 0x98bd, 0x6f60, 0x380c, 0x850, 0x6ee3, 0x1, 0x1);
        gbc.writeMem(0xb12c, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0xb12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb12c));
        // A2 01A5
        gbc.setState(0xdbc, 0x673e, 0x3190, 0x225d, 0x211c, 0xdd1c, 0x0, 0x0);
        gbc.writeMem(0xdbc, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01A6
        gbc.setState(0x932, 0x2549, 0x4d90, 0x8680, 0x6a94, 0x74f8, 0x0, 0x1);
        gbc.writeMem(0x932, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2549, gbc.sp());
        EXPECT(0x933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01A7
        gbc.setState(0xce29, 0x3340, 0x8870, 0x4bc0, 0xba4d, 0xacb7, 0x1, 0x0);
        gbc.writeMem(0xce29, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3340, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xce29));
        // A2 01A9
        gbc.setState(0x73b0, 0x76db, 0x4bf0, 0x5efa, 0x7620, 0x1286, 0x1, 0x0);
        gbc.writeMem(0x73b0, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x73b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01AA
        gbc.setState(0x7eeb, 0xa42, 0x4fb0, 0x3425, 0x9c47, 0xb652, 0x0, 0x0);
        gbc.writeMem(0x7eeb, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x7eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01AB
        gbc.setState(0xb269, 0x65e7, 0x4530, 0xdb29, 0x4348, 0x8c65, 0x0, 0x1);
        gbc.writeMem(0xb269, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb269));
        // A2 01AC
        gbc.setState(0x30e2, 0xdecb, 0x7e70, 0xc983, 0x62c0, 0xfa3c, 0x0, 0x0);
        gbc.writeMem(0x30e2, { 0xa2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdecb, gbc.sp());
        EXPECT(0x30e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01AD
        gbc.setState(0x9032, 0xd5ca, 0x5510, 0x9a41, 0xc7ee, 0x74ca, 0x1, 0x0);
        gbc.writeMem(0x9032, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd5ca, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9032));
        // A2 01AE
        gbc.setState(0x6e6c, 0x795d, 0xaad0, 0x2b4, 0x8e09, 0xa12d, 0x1, 0x0);
        gbc.writeMem(0x6e6c, { 0xa2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01B0
        gbc.setState(0xce8c, 0xc4e, 0x7950, 0xe64c, 0xc9dc, 0xf7f7, 0x1, 0x1);
        gbc.writeMem(0xce8c, { 0xa2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xce8c));
        // A2 01B1
        gbc.setState(0x3899, 0xea87, 0xa120, 0xd97b, 0xc341, 0xbb50, 0x1, 0x1);
        gbc.writeMem(0x3899, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xea87, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01B2
        gbc.setState(0x930f, 0x94f4, 0x43f0, 0xae71, 0xb3a0, 0xff52, 0x0, 0x0);
        gbc.writeMem(0x930f, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0x9310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x930f));
        // A2 01B3
        gbc.setState(0xa7a0, 0x944f, 0xd610, 0x4ed9, 0x534c, 0x4fcc, 0x1, 0x1);
        gbc.writeMem(0xa7a0, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x944f, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa7a0));
        // A2 01B4
        gbc.setState(0x71e1, 0xdd35, 0xe410, 0xe736, 0xc87b, 0xcc4b, 0x1, 0x0);
        gbc.writeMem(0x71e1, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0x71e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01B5
        gbc.setState(0x83a5, 0x71ba, 0xd1a0, 0x7cc7, 0x1e8c, 0xcabd, 0x1, 0x1);
        gbc.writeMem(0x83a5, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0x83a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x83a5));
        // A2 01B6
        gbc.setState(0xc4e6, 0xed5b, 0xf510, 0x21bb, 0x460d, 0x99be, 0x1, 0x0);
        gbc.writeMem(0xc4e6, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xed5b, gbc.sp());
        EXPECT(0xc4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc4e6));
        // A2 01B7
        gbc.setState(0x2afe, 0x4e3b, 0x78e0, 0x5e35, 0xc601, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0x2afe, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4e3b, gbc.sp());
        EXPECT(0x2aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01B8
        gbc.setState(0x9a9b, 0x2933, 0x440, 0x1ca6, 0xaa5e, 0xdb35, 0x1, 0x0);
        gbc.writeMem(0x9a9b, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2933, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a9b));
        // A2 01B9
        gbc.setState(0x95d, 0x5a65, 0x160, 0x4239, 0x91a9, 0xc824, 0x0, 0x0);
        gbc.writeMem(0x95d, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01BA
        gbc.setState(0x58e7, 0x8b4d, 0x45d0, 0x8428, 0x44c3, 0x8b, 0x1, 0x1);
        gbc.writeMem(0x58e7, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8b4d, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01BB
        gbc.setState(0x3f2d, 0x474b, 0x8d90, 0xaf79, 0x3a67, 0x4071, 0x0, 0x1);
        gbc.writeMem(0x3f2d, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x474b, gbc.sp());
        EXPECT(0x3f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01BC
        gbc.setState(0x41da, 0xae14, 0xc7d0, 0x4051, 0x5ee1, 0x469a, 0x1, 0x0);
        gbc.writeMem(0x41da, { 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0x41db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01BD
        gbc.setState(0xa092, 0xb462, 0x14f0, 0x847e, 0x20d, 0xe3ef, 0x0, 0x0);
        gbc.writeMem(0xa092, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb462, gbc.sp());
        EXPECT(0xa093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa092));
        // A2 01BE
        gbc.setState(0xda26, 0xbf6f, 0xd950, 0x84ad, 0x2b00, 0xc6e4, 0x1, 0x1);
        gbc.writeMem(0xda26, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf6f, gbc.sp());
        EXPECT(0xda27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda26));
        // A2 01BF
        gbc.setState(0x37e0, 0x37de, 0xf490, 0x788b, 0x64e9, 0xc4a, 0x1, 0x1);
        gbc.writeMem(0x37e0, { 0xa2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0x37e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C0
        gbc.setState(0x9772, 0x60d7, 0xb3e0, 0xfa2a, 0xa049, 0xd1f8, 0x1, 0x0);
        gbc.writeMem(0x9772, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x60d7, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9772));
        // A2 01C1
        gbc.setState(0xaec4, 0xb2aa, 0x9400, 0x93b1, 0x5ad1, 0x48f1, 0x0, 0x1);
        gbc.writeMem(0xaec4, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb2aa, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaec4));
        // A2 01C2
        gbc.setState(0x55a6, 0xcd3, 0x9e60, 0xcbf8, 0x2eb3, 0x63ff, 0x0, 0x0);
        gbc.writeMem(0x55a6, { 0xa2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd3, gbc.sp());
        EXPECT(0x55a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C3
        gbc.setState(0x3ed8, 0x890, 0x8520, 0x1ddd, 0x3c08, 0x155b, 0x0, 0x0);
        gbc.writeMem(0x3ed8, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x890, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C4
        gbc.setState(0x739c, 0xa0af, 0x6950, 0x49ac, 0x4e44, 0x9829, 0x1, 0x0);
        gbc.writeMem(0x739c, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0x739d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C5
        gbc.setState(0xb3f1, 0x3072, 0xfad0, 0xa873, 0x4277, 0x95b4, 0x0, 0x0);
        gbc.writeMem(0xb3f1, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3072, gbc.sp());
        EXPECT(0xb3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb3f1));
        // A2 01C6
        gbc.setState(0x64f5, 0x7a0e, 0x1370, 0xe92c, 0x90e1, 0x7e3c, 0x0, 0x1);
        gbc.writeMem(0x64f5, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7a0e, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C7
        gbc.setState(0x2e4b, 0xbba6, 0x3dd0, 0x7f9e, 0x2cae, 0xb0f, 0x1, 0x0);
        gbc.writeMem(0x2e4b, { 0xa2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0x2e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01C8
        gbc.setState(0x8842, 0x436a, 0xf0f0, 0x71a1, 0xb6df, 0xce79, 0x0, 0x1);
        gbc.writeMem(0x8842, { 0xa2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8842));
        // A2 01C9
        gbc.setState(0x203c, 0x94c6, 0x8cb0, 0x2386, 0x5825, 0x59d9, 0x0, 0x1);
        gbc.writeMem(0x203c, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x94c6, gbc.sp());
        EXPECT(0x203d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01CA
        gbc.setState(0x1589, 0xd971, 0xecf0, 0x3d54, 0xa015, 0x10f7, 0x0, 0x0);
        gbc.writeMem(0x1589, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd971, gbc.sp());
        EXPECT(0x158a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01CB
        gbc.setState(0xafc1, 0x697d, 0x8f30, 0xe809, 0x3117, 0x7c4f, 0x0, 0x1);
        gbc.writeMem(0xafc1, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xafc1));
        // A2 01CC
        gbc.setState(0xaa14, 0xe690, 0xc0e0, 0xa1dc, 0x2c03, 0xb820, 0x1, 0x0);
        gbc.writeMem(0xaa14, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0xaa15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaa14));
        // A2 01CD
        gbc.setState(0x63fe, 0xca18, 0x72a0, 0xaac5, 0x42a7, 0xf71c, 0x0, 0x0);
        gbc.writeMem(0x63fe, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xca18, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01CE
        gbc.setState(0x3fbb, 0x7da9, 0x6d40, 0x70fb, 0x93af, 0x92b, 0x0, 0x0);
        gbc.writeMem(0x3fbb, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0x3fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01CF
        gbc.setState(0xda71, 0x5bad, 0x7a60, 0x6252, 0x6577, 0x4c39, 0x1, 0x0);
        gbc.writeMem(0xda71, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5bad, gbc.sp());
        EXPECT(0xda72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda71));
        // A2 01D0
        gbc.setState(0xb799, 0x5cba, 0x26a0, 0x3086, 0xad96, 0xa6d8, 0x0, 0x0);
        gbc.writeMem(0xb799, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5cba, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb799));
        // A2 01D1
        gbc.setState(0xcc1d, 0xdc58, 0xbc10, 0x5463, 0x406a, 0xfa98, 0x0, 0x1);
        gbc.writeMem(0xcc1d, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcc1d));
        // A2 01D2
        gbc.setState(0x66d3, 0xf68, 0xfdc0, 0xc97, 0xd07, 0xf7, 0x0, 0x0);
        gbc.writeMem(0x66d3, { 0xa2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01D3
        gbc.setState(0xd629, 0x8858, 0xd640, 0xe24f, 0xb3b2, 0xaf95, 0x0, 0x0);
        gbc.writeMem(0xd629, { 0xa2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8858, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd629));
        // A2 01D4
        gbc.setState(0x1096, 0x9667, 0x97b0, 0x4a00, 0x23c8, 0xb655, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9667, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01D5
        gbc.setState(0x9db5, 0xecc, 0xc690, 0x932, 0x2d2f, 0x153e, 0x1, 0x1);
        gbc.writeMem(0x9db5, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xecc, gbc.sp());
        EXPECT(0x9db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9db5));
        // A2 01D6
        gbc.setState(0x8f6e, 0x1542, 0x1980, 0x4650, 0xda6, 0xeaed, 0x0, 0x0);
        gbc.writeMem(0x8f6e, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1542, gbc.sp());
        EXPECT(0x8f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8f6e));
        // A2 01D7
        gbc.setState(0x22f2, 0x88cc, 0x1620, 0x5bb4, 0x601d, 0xb600, 0x0, 0x1);
        gbc.writeMem(0x22f2, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x88cc, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01D8
        gbc.setState(0xeb08, 0xd0e1, 0x5170, 0x148b, 0x9c0f, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0xeb08, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd0e1, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xeb08));
        // A2 01D9
        gbc.setState(0x76d6, 0x82fc, 0x7460, 0x781c, 0x35a, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01DA
        gbc.setState(0xaca6, 0x6e2a, 0x8540, 0xc171, 0x62df, 0x1e8, 0x0, 0x1);
        gbc.writeMem(0xaca6, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6e2a, gbc.sp());
        EXPECT(0xaca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaca6));
        // A2 01DB
        gbc.setState(0x11ed, 0xfe29, 0x5d90, 0xa3f6, 0xb8ef, 0xc16b, 0x0, 0x0);
        gbc.writeMem(0x11ed, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0x11ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01DC
        gbc.setState(0x31a1, 0xba3, 0xdc30, 0x6e29, 0x9be0, 0x2e25, 0x1, 0x0);
        gbc.writeMem(0x31a1, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xba3, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01DD
        gbc.setState(0x23a4, 0x8c06, 0xfe40, 0xd2a1, 0xa17e, 0x39b6, 0x0, 0x0);
        gbc.writeMem(0x23a4, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0x23a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01DE
        gbc.setState(0x4d0c, 0x7bb7, 0xf7d0, 0x5da5, 0x3acd, 0x7256, 0x0, 0x1);
        gbc.writeMem(0x4d0c, { 0xa2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7bb7, gbc.sp());
        EXPECT(0x4d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01DF
        gbc.setState(0x5c87, 0x6697, 0xffd0, 0x973, 0x80f6, 0xafc, 0x1, 0x0);
        gbc.writeMem(0x5c87, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6697, gbc.sp());
        EXPECT(0x5c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E0
        gbc.setState(0xa9a6, 0xaab1, 0xe20, 0x815b, 0xc3eb, 0x7423, 0x1, 0x1);
        gbc.writeMem(0xa9a6, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0xa9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa9a6));
        // A2 01E1
        gbc.setState(0x8ad5, 0x19f3, 0x3f00, 0xf81d, 0x9b0f, 0x4d48, 0x1, 0x0);
        gbc.writeMem(0x8ad5, { 0xa2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x19f3, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8ad5));
        // A2 01E2
        gbc.setState(0x7de3, 0x2ced, 0x8930, 0xa9a6, 0xb4b8, 0xf2df, 0x0, 0x0);
        gbc.writeMem(0x7de3, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2ced, gbc.sp());
        EXPECT(0x7de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E3
        gbc.setState(0x5ffa, 0x1eff, 0xa870, 0x8e3a, 0x122f, 0x3564, 0x1, 0x0);
        gbc.writeMem(0x5ffa, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0x5ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E4
        gbc.setState(0x92e, 0x3fea, 0x80b0, 0x3e63, 0xda47, 0x85e1, 0x0, 0x0);
        gbc.writeMem(0x92e, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0x92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E5
        gbc.setState(0x5b2b, 0xf91a, 0x1680, 0x1fae, 0x536a, 0xdf6b, 0x1, 0x1);
        gbc.writeMem(0x5b2b, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E7
        gbc.setState(0x9955, 0x1790, 0x5f40, 0xe9fd, 0xeb3b, 0x4e98, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0xa2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0x9956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9955));
        // A2 01E8
        gbc.setState(0x38e, 0x918c, 0x5a20, 0x3507, 0xe89e, 0x89e4, 0x0, 0x1);
        gbc.writeMem(0x38e, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01E9
        gbc.setState(0x98ef, 0x1b5d, 0xcba0, 0x4f92, 0x421d, 0xd948, 0x0, 0x0);
        gbc.writeMem(0x98ef, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1b5d, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x98ef));
        // A2 01EA
        gbc.setState(0xc2fd, 0xa4ff, 0x50f0, 0xf3f2, 0x5b0e, 0xae5d, 0x1, 0x1);
        gbc.writeMem(0xc2fd, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa4ff, gbc.sp());
        EXPECT(0xc2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc2fd));
        // A2 01EB
        gbc.setState(0x1a08, 0x2321, 0x11a0, 0x1eac, 0x5b69, 0xaad6, 0x1, 0x0);
        gbc.writeMem(0x1a08, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01EC
        gbc.setState(0x3226, 0x8f1d, 0x1170, 0x9131, 0xf4da, 0xb858, 0x1, 0x1);
        gbc.writeMem(0x3226, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8f1d, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01ED
        gbc.setState(0x2109, 0x825a, 0x8d00, 0xd6a, 0x9443, 0x999d, 0x1, 0x1);
        gbc.writeMem(0x2109, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x825a, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01EE
        gbc.setState(0x9726, 0x1144, 0xf8a0, 0x1e6d, 0x4455, 0x391, 0x1, 0x1);
        gbc.writeMem(0x9726, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1144, gbc.sp());
        EXPECT(0x9727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9726));
        // A2 01EF
        gbc.setState(0xe422, 0x2d52, 0xfc40, 0xd77e, 0x252, 0xde4b, 0x1, 0x0);
        gbc.writeMem(0xe422, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe422));
        // A2 01F0
        gbc.setState(0xbfb4, 0xc0a2, 0x6d70, 0xa2e5, 0x5e18, 0xeb91, 0x0, 0x1);
        gbc.writeMem(0xbfb4, { 0xa2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0xbfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbfb4));
        // A2 01F1
        gbc.setState(0xed9b, 0xb27f, 0x6e60, 0x6e94, 0x5ffb, 0x4828, 0x1, 0x1);
        gbc.writeMem(0xed9b, { 0xa2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0xed9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xed9b));
        // A2 01F2
        gbc.setState(0xedf4, 0xd6e0, 0xab60, 0xdef4, 0xcc77, 0xa15d, 0x0, 0x0);
        gbc.writeMem(0xedf4, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xedf4));
        // A2 01F3
        gbc.setState(0x6051, 0x3426, 0xbeb0, 0xf18, 0x1d44, 0x52e0, 0x1, 0x1);
        gbc.writeMem(0x6051, { 0xa2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x6052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01F4
        gbc.setState(0x60c5, 0x7ec9, 0x4f70, 0x190a, 0xfa59, 0x2458, 0x1, 0x0);
        gbc.writeMem(0x60c5, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0x60c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01F5
        gbc.setState(0x1f09, 0xecc2, 0x4a40, 0x369d, 0x7b9d, 0x269e, 0x1, 0x1);
        gbc.writeMem(0x1f09, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xecc2, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01F6
        gbc.setState(0x52d3, 0x55ae, 0x9eb0, 0xb002, 0x4018, 0xc66a, 0x0, 0x0);
        gbc.writeMem(0x52d3, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x55ae, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01F7
        gbc.setState(0x3e77, 0xb50d, 0xfa0, 0xc545, 0xc16c, 0x9ec6, 0x0, 0x0);
        gbc.writeMem(0x3e77, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01F8
        gbc.setState(0xbda7, 0xd7e3, 0xb010, 0x5b68, 0xa17f, 0x68d1, 0x0, 0x1);
        gbc.writeMem(0xbda7, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd7e3, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbda7));
        // A2 01F9
        gbc.setState(0x423c, 0x451e, 0xf00, 0x1126, 0x7737, 0xef0b, 0x0, 0x0);
        gbc.writeMem(0x423c, { 0xa2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x451e, gbc.sp());
        EXPECT(0x423d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01FA
        gbc.setState(0xb079, 0x2581, 0xb2b0, 0xb2a4, 0xdbe3, 0x4b52, 0x0, 0x1);
        gbc.writeMem(0xb079, { 0xa2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2581, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb079));
        // A2 01FB
        gbc.setState(0xafa8, 0x9875, 0xb8a0, 0x8e4a, 0xb885, 0xc790, 0x1, 0x0);
        gbc.writeMem(0xafa8, { 0xa2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9875, gbc.sp());
        EXPECT(0xafa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xafa8));
        // A2 01FC
        gbc.setState(0x2b6a, 0x7a70, 0xf8c0, 0x6500, 0x7db0, 0x538d, 0x1, 0x1);
        gbc.writeMem(0x2b6a, { 0xa2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01FD
        gbc.setState(0x3471, 0xed26, 0x6ef0, 0xb564, 0x275e, 0xbb85, 0x0, 0x0);
        gbc.writeMem(0x3471, { 0xa2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 01FE
        gbc.setState(0xa7d3, 0x7f26, 0x8070, 0x12f8, 0xe1af, 0x3ce7, 0x1, 0x0);
        gbc.writeMem(0xa7d3, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa7d3));
        // A2 01FF
        gbc.setState(0x1258, 0xdab2, 0x3e20, 0x1140, 0xc1ea, 0x951f, 0x1, 0x1);
        gbc.writeMem(0x1258, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdab2, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0200
        gbc.setState(0x11f6, 0xcbf5, 0xf540, 0x8e9e, 0x3ad4, 0xa4c8, 0x0, 0x0);
        gbc.writeMem(0x11f6, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcbf5, gbc.sp());
        EXPECT(0x11f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0201
        gbc.setState(0x53ce, 0x36f9, 0xa000, 0x628e, 0xe3a6, 0x4b29, 0x0, 0x1);
        gbc.writeMem(0x53ce, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0202
        gbc.setState(0x1421, 0x4c4, 0xc4d0, 0x7817, 0xe4d5, 0x3c73, 0x1, 0x1);
        gbc.writeMem(0x1421, { 0xa2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4c4, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0203
        gbc.setState(0x6281, 0x504c, 0x2260, 0x5e52, 0x610b, 0x2eda, 0x1, 0x0);
        gbc.writeMem(0x6281, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0204
        gbc.setState(0x745b, 0xbd27, 0x2200, 0x93c9, 0x20e1, 0x6530, 0x0, 0x0);
        gbc.writeMem(0x745b, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x745c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0205
        gbc.setState(0xe6c6, 0x6a8b, 0xb530, 0xba44, 0xa13c, 0xee96, 0x1, 0x0);
        gbc.writeMem(0xe6c6, { 0xa2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6a8b, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe6c6));
        // A2 0207
        gbc.setState(0x6cfb, 0x28a3, 0x31f0, 0x771d, 0xfcb4, 0x99ca, 0x0, 0x0);
        gbc.writeMem(0x6cfb, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x28a3, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0208
        gbc.setState(0x23c7, 0xc435, 0xe3e0, 0xf2bd, 0x368d, 0xdb91, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x23c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0209
        gbc.setState(0x5b7b, 0x7646, 0xdb90, 0x41ba, 0xbd72, 0x6ee1, 0x0, 0x0);
        gbc.writeMem(0x5b7b, { 0xa2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7646, gbc.sp());
        EXPECT(0x5b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 020A
        gbc.setState(0xbe8a, 0xcd9b, 0x7870, 0x9dd7, 0xd7cc, 0x7390, 0x1, 0x0);
        gbc.writeMem(0xbe8a, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd9b, gbc.sp());
        EXPECT(0xbe8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbe8a));
        // A2 020B
        gbc.setState(0xbd6b, 0x2b6e, 0xabc0, 0x2357, 0x9bf1, 0xebdc, 0x0, 0x1);
        gbc.writeMem(0xbd6b, { 0xa2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbd6b));
        // A2 020C
        gbc.setState(0xb672, 0x2461, 0xe3d0, 0x5476, 0x80e1, 0x8a20, 0x0, 0x1);
        gbc.writeMem(0xb672, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2461, gbc.sp());
        EXPECT(0xb673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb672));
        // A2 020D
        gbc.setState(0x23b5, 0xa029, 0x8f80, 0xcd94, 0x4c9b, 0xeceb, 0x1, 0x1);
        gbc.writeMem(0x23b5, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa029, gbc.sp());
        EXPECT(0x23b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 020E
        gbc.setState(0x240b, 0x2bee, 0x10c0, 0x5e07, 0x76b0, 0xeb1a, 0x0, 0x1);
        gbc.writeMem(0x240b, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2bee, gbc.sp());
        EXPECT(0x240c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0210
        gbc.setState(0x1585, 0x8cd0, 0x5780, 0x6e45, 0xc9ca, 0x4e97, 0x1, 0x1);
        gbc.writeMem(0x1585, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8cd0, gbc.sp());
        EXPECT(0x1586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0211
        gbc.setState(0x84a3, 0x73b2, 0x9430, 0x230f, 0x161a, 0xa3ca, 0x1, 0x1);
        gbc.writeMem(0x84a3, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0x84a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x84a3));
        // A2 0212
        gbc.setState(0xe0e9, 0xb8f7, 0x3890, 0xef44, 0xd38d, 0x5d9, 0x1, 0x1);
        gbc.writeMem(0xe0e9, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb8f7, gbc.sp());
        EXPECT(0xe0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe0e9));
        // A2 0213
        gbc.setState(0x75f, 0xff2f, 0xa9b0, 0xbabc, 0x4de0, 0xdfc1, 0x0, 0x1);
        gbc.writeMem(0x75f, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xff2f, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0214
        gbc.setState(0x2ba4, 0xcc9f, 0x71d0, 0x2827, 0x6c3, 0x6090, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcc9f, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0215
        gbc.setState(0x35c, 0x42e6, 0x3580, 0xb201, 0x1f93, 0xd7fa, 0x1, 0x1);
        gbc.writeMem(0x35c, { 0xa2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x42e6, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0216
        gbc.setState(0x6ca4, 0x7006, 0x8b80, 0xfb3a, 0x3f7a, 0xc79a, 0x0, 0x1);
        gbc.writeMem(0x6ca4, { 0xa2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7006, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0217
        gbc.setState(0xe498, 0x9e12, 0x2110, 0xf013, 0xe722, 0xfe5f, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9e12, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe498));
        // A2 0218
        gbc.setState(0x9725, 0xf891, 0xf870, 0x234d, 0x4aa7, 0xf6a4, 0x1, 0x0);
        gbc.writeMem(0x9725, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9725));
        // A2 0219
        gbc.setState(0x96f1, 0x75ea, 0xa180, 0xe3a, 0x67a5, 0xb651, 0x0, 0x0);
        gbc.writeMem(0x96f1, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x96f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x96f1));
        // A2 021A
        gbc.setState(0x51ae, 0x8ced, 0xcfa0, 0x1907, 0x5313, 0xc725, 0x0, 0x1);
        gbc.writeMem(0x51ae, { 0xa2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8ced, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 021B
        gbc.setState(0xd730, 0xdc22, 0x4cd0, 0xcb81, 0x73ba, 0xc3, 0x0, 0x0);
        gbc.writeMem(0xd730, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0xd731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd730));
        // A2 021C
        gbc.setState(0x7235, 0x690d, 0xa020, 0xda4b, 0xe976, 0xd7dc, 0x1, 0x0);
        gbc.writeMem(0x7235, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x690d, gbc.sp());
        EXPECT(0x7236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 021D
        gbc.setState(0x9f12, 0xd12a, 0x5f30, 0xb9e2, 0x42d8, 0xdac9, 0x0, 0x0);
        gbc.writeMem(0x9f12, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0x9f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9f12));
        // A2 021E
        gbc.setState(0xe10b, 0x90a7, 0xc510, 0x99f4, 0xe516, 0x31fd, 0x1, 0x0);
        gbc.writeMem(0xe10b, { 0xa2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x90a7, gbc.sp());
        EXPECT(0xe10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe10b));
        // A2 021F
        gbc.setState(0x5f75, 0x6e8f, 0xe270, 0x4b6e, 0x3ba1, 0x75d7, 0x1, 0x0);
        gbc.writeMem(0x5f75, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0220
        gbc.setState(0x52f, 0xb01a, 0x52a0, 0xc837, 0x33d7, 0x70bf, 0x1, 0x0);
        gbc.writeMem(0x52f, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0221
        gbc.setState(0x9d24, 0xf209, 0x9e30, 0x4a00, 0xa126, 0x5521, 0x1, 0x0);
        gbc.writeMem(0x9d24, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0x9d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9d24));
        // A2 0222
        gbc.setState(0x7fbd, 0xe849, 0x2dc0, 0xe3cc, 0xdd16, 0x6839, 0x1, 0x0);
        gbc.writeMem(0x7fbd, { 0xa2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe849, gbc.sp());
        EXPECT(0x7fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0223
        gbc.setState(0x4349, 0x8209, 0xd680, 0xb132, 0x32df, 0xa3f0, 0x1, 0x1);
        gbc.writeMem(0x4349, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8209, gbc.sp());
        EXPECT(0x434a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0224
        gbc.setState(0x4004, 0x4e95, 0xaff0, 0x72aa, 0x4d9f, 0xd065, 0x0, 0x1);
        gbc.writeMem(0x4004, { 0xa2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4e95, gbc.sp());
        EXPECT(0x4005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0225
        gbc.setState(0x6d6d, 0xf3a8, 0xa7c0, 0x567d, 0x8415, 0x2318, 0x0, 0x0);
        gbc.writeMem(0x6d6d, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0x6d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0226
        gbc.setState(0xe99c, 0xdf9a, 0xc8a0, 0x304, 0x6344, 0x738e, 0x0, 0x1);
        gbc.writeMem(0xe99c, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe99c));
        // A2 0227
        gbc.setState(0x8083, 0x7cf1, 0x6840, 0x5e91, 0x9618, 0x8535, 0x0, 0x1);
        gbc.writeMem(0x8083, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7cf1, gbc.sp());
        EXPECT(0x8084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8083));
        // A2 0228
        gbc.setState(0xecc1, 0xa0aa, 0xc4c0, 0xae6a, 0x1c59, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0xecc1, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0aa, gbc.sp());
        EXPECT(0xecc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xecc1));
        // A2 0229
        gbc.setState(0xac84, 0x83b4, 0x23f0, 0xcd32, 0xb476, 0xc985, 0x0, 0x0);
        gbc.writeMem(0xac84, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0xac85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xac84));
        // A2 022A
        gbc.setState(0x6f7f, 0xaa8a, 0xb6d0, 0xee5f, 0x205c, 0x5ff5, 0x1, 0x1);
        gbc.writeMem(0x6f7f, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0x6f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 022B
        gbc.setState(0xe049, 0xbd70, 0xebc0, 0x8b4b, 0x17de, 0xd25a, 0x0, 0x1);
        gbc.writeMem(0xe049, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbd70, gbc.sp());
        EXPECT(0xe04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe049));
        // A2 022C
        gbc.setState(0x2d04, 0x3944, 0x2030, 0xcacf, 0x7e1b, 0x47c5, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 022D
        gbc.setState(0xdcf7, 0xc92f, 0xe090, 0x69f6, 0x76ff, 0x9554, 0x0, 0x0);
        gbc.writeMem(0xdcf7, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdcf7));
        // A2 022E
        gbc.setState(0xd7bf, 0xd3c2, 0xd4f0, 0x796e, 0xb4dc, 0x72e6, 0x1, 0x0);
        gbc.writeMem(0xd7bf, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd3c2, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd7bf));
        // A2 022F
        gbc.setState(0xb84c, 0xb8d7, 0x9190, 0x6968, 0xc046, 0xb5f9, 0x0, 0x0);
        gbc.writeMem(0xb84c, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0xb84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb84c));
        // A2 0230
        gbc.setState(0x807a, 0x14b0, 0x6290, 0xa35, 0xc88a, 0x56e0, 0x0, 0x0);
        gbc.writeMem(0x807a, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x14b0, gbc.sp());
        EXPECT(0x807b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x807a));
        // A2 0231
        gbc.setState(0xdb5a, 0x9b6, 0x550, 0xbf2e, 0x741e, 0x5b77, 0x0, 0x0);
        gbc.writeMem(0xdb5a, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9b6, gbc.sp());
        EXPECT(0xdb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdb5a));
        // A2 0232
        gbc.setState(0x39c2, 0x6639, 0x84b0, 0x319d, 0x9615, 0xf814, 0x0, 0x1);
        gbc.writeMem(0x39c2, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0233
        gbc.setState(0x4be9, 0x561a, 0xeae0, 0xcfa9, 0xb6a4, 0xbeec, 0x0, 0x1);
        gbc.writeMem(0x4be9, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x561a, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0234
        gbc.setState(0xcf91, 0xcfdb, 0x6ac0, 0x6201, 0xa776, 0x54c3, 0x0, 0x0);
        gbc.writeMem(0xcf91, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcf91));
        // A2 0235
        gbc.setState(0x6792, 0x4935, 0x9100, 0x3f43, 0x9acb, 0xa8be, 0x0, 0x1);
        gbc.writeMem(0x6792, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4935, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0236
        gbc.setState(0x42ee, 0xb294, 0x9180, 0xbb7a, 0x19c3, 0x3044, 0x0, 0x0);
        gbc.writeMem(0x42ee, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb294, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0237
        gbc.setState(0x5f2b, 0xa719, 0x3720, 0xaa5b, 0xb55, 0xf176, 0x0, 0x0);
        gbc.writeMem(0x5f2b, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa719, gbc.sp());
        EXPECT(0x5f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0238
        gbc.setState(0x951b, 0x4d7c, 0x5890, 0x4b71, 0xd411, 0x4b27, 0x1, 0x1);
        gbc.writeMem(0x951b, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x951b));
        // A2 0239
        gbc.setState(0x85e6, 0x93a9, 0x5210, 0x1ac9, 0xd9b1, 0xf3a4, 0x0, 0x0);
        gbc.writeMem(0x85e6, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x93a9, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x85e6));
        // A2 023A
        gbc.setState(0x720c, 0x9a48, 0x89c0, 0xe97f, 0xcbd2, 0x728, 0x0, 0x0);
        gbc.writeMem(0x720c, { 0xa2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9a48, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 023C
        gbc.setState(0x404e, 0xf769, 0x840, 0x9cb5, 0x414d, 0xf92b, 0x0, 0x1);
        gbc.writeMem(0x404e, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf769, gbc.sp());
        EXPECT(0x404f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 023D
        gbc.setState(0x7159, 0x8d20, 0x8150, 0xfef1, 0x5c66, 0xd2b, 0x1, 0x0);
        gbc.writeMem(0x7159, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 023E
        gbc.setState(0x2125, 0x676, 0x810, 0x52f8, 0x7ba5, 0x8fcf, 0x0, 0x1);
        gbc.writeMem(0x2125, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 023F
        gbc.setState(0xd17f, 0x7a23, 0x5350, 0x85e6, 0xc0a3, 0xe59f, 0x0, 0x1);
        gbc.writeMem(0xd17f, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0xd180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd17f));
        // A2 0240
        gbc.setState(0xc5b, 0x2a5, 0x9b50, 0x2bd7, 0x147d, 0x7515, 0x0, 0x1);
        gbc.writeMem(0xc5b, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2a5, gbc.sp());
        EXPECT(0xc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0241
        gbc.setState(0x798d, 0x6c56, 0xaac0, 0xf2c8, 0x662a, 0x1c90, 0x0, 0x1);
        gbc.writeMem(0x798d, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0242
        gbc.setState(0xdfc2, 0xaceb, 0x82d0, 0x5f3f, 0x6b47, 0xd148, 0x1, 0x0);
        gbc.writeMem(0xdfc2, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdfc2));
        // A2 0243
        gbc.setState(0xcf34, 0x1e35, 0xa410, 0x10e8, 0xabea, 0x1ac8, 0x1, 0x0);
        gbc.writeMem(0xcf34, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0xcf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcf34));
        // A2 0244
        gbc.setState(0x6ba7, 0xc52, 0x4020, 0x1f2b, 0xabe, 0x621c, 0x1, 0x1);
        gbc.writeMem(0x6ba7, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0x6ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0245
        gbc.setState(0xb0ce, 0xf433, 0x9590, 0x1850, 0xb841, 0x35f0, 0x0, 0x0);
        gbc.writeMem(0xb0ce, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf433, gbc.sp());
        EXPECT(0xb0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb0ce));
        // A2 0246
        gbc.setState(0xba0, 0x7e22, 0xd250, 0xb1e8, 0x8d26, 0x48ed, 0x1, 0x0);
        gbc.writeMem(0xba0, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7e22, gbc.sp());
        EXPECT(0xba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0247
        gbc.setState(0xe7a7, 0x1a8e, 0xbb0, 0xc32f, 0xca04, 0x6e04, 0x1, 0x0);
        gbc.writeMem(0xe7a7, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1a8e, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe7a7));
        // A2 0248
        gbc.setState(0x728c, 0xa400, 0x9450, 0x28f5, 0x1910, 0xaeb5, 0x0, 0x0);
        gbc.writeMem(0x728c, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa400, gbc.sp());
        EXPECT(0x728d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0249
        gbc.setState(0x7fe, 0xdaa6, 0xa270, 0x914, 0x4629, 0x627e, 0x0, 0x0);
        gbc.writeMem(0x7fe, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdaa6, gbc.sp());
        EXPECT(0x7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 024A
        gbc.setState(0xdccb, 0xa881, 0xdb30, 0x231a, 0x717e, 0x2de3, 0x0, 0x1);
        gbc.writeMem(0xdccb, { 0xa2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa881, gbc.sp());
        EXPECT(0xdccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdccb));
        // A2 024B
        gbc.setState(0xdae7, 0xfdbd, 0x8bd0, 0xcd6e, 0xbaba, 0x754d, 0x0, 0x1);
        gbc.writeMem(0xdae7, { 0xa2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfdbd, gbc.sp());
        EXPECT(0xdae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdae7));
        // A2 024C
        gbc.setState(0x30bd, 0x9080, 0xb120, 0xc9d9, 0xbcd0, 0x4684, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xa2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0x30be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 024D
        gbc.setState(0xa743, 0xd597, 0xd6c0, 0x3ef0, 0x4777, 0x1b51, 0x0, 0x0);
        gbc.writeMem(0xa743, { 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd597, gbc.sp());
        EXPECT(0xa744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa743));
        // A2 024E
        gbc.setState(0x7f4d, 0xacf6, 0x1d30, 0x97c6, 0x1336, 0xd985, 0x0, 0x0);
        gbc.writeMem(0x7f4d, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xacf6, gbc.sp());
        EXPECT(0x7f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 024F
        gbc.setState(0xef10, 0xbe73, 0x8700, 0x9b34, 0x4097, 0x2d6a, 0x0, 0x0);
        gbc.writeMem(0xef10, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbe73, gbc.sp());
        EXPECT(0xef11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xef10));
        // A2 0250
        gbc.setState(0xef94, 0xc745, 0x5ad0, 0x36b7, 0xd6af, 0x5e4a, 0x0, 0x0);
        gbc.writeMem(0xef94, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc745, gbc.sp());
        EXPECT(0xef95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xef94));
        // A2 0251
        gbc.setState(0xb0a0, 0xed6b, 0x52c0, 0x582a, 0x8522, 0xf380, 0x0, 0x1);
        gbc.writeMem(0xb0a0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb0a0));
        // A2 0253
        gbc.setState(0xbc5d, 0x493, 0xfe90, 0x6388, 0xe425, 0x581a, 0x1, 0x0);
        gbc.writeMem(0xbc5d, { 0xa2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x493, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbc5d));
        // A2 0254
        gbc.setState(0xe29b, 0x6455, 0x4e70, 0x3e1d, 0x2551, 0x3adb, 0x1, 0x0);
        gbc.writeMem(0xe29b, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0xe29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe29b));
        // A2 0255
        gbc.setState(0x8292, 0xe0dd, 0x7730, 0x45e5, 0x489f, 0x72c1, 0x0, 0x1);
        gbc.writeMem(0x8292, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe0dd, gbc.sp());
        EXPECT(0x8293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8292));
        // A2 0256
        gbc.setState(0xd477, 0xe451, 0xa620, 0xeb38, 0xfb81, 0x1312, 0x0, 0x0);
        gbc.writeMem(0xd477, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe451, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd477));
        // A2 0257
        gbc.setState(0xe335, 0xe3eb, 0xf8f0, 0xeb55, 0x28bb, 0xb65d, 0x0, 0x1);
        gbc.writeMem(0xe335, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe335));
        // A2 0258
        gbc.setState(0xc7de, 0x7218, 0x1ce0, 0x77c, 0x4969, 0x6623, 0x0, 0x1);
        gbc.writeMem(0xc7de, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7218, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc7de));
        // A2 0259
        gbc.setState(0x5f7d, 0xfbab, 0x6620, 0xacb8, 0x9001, 0xb865, 0x0, 0x1);
        gbc.writeMem(0x5f7d, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfbab, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 025A
        gbc.setState(0xc0b3, 0xd8ca, 0x73c0, 0x68a2, 0x5324, 0x31d6, 0x0, 0x1);
        gbc.writeMem(0xc0b3, { 0xa2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd8ca, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc0b3));
        // A2 025B
        gbc.setState(0xd9a0, 0x294e, 0x2070, 0xc2f, 0x1715, 0xff7b, 0x0, 0x0);
        gbc.writeMem(0xd9a0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x294e, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd9a0));
        // A2 025C
        gbc.setState(0x5d39, 0x70f1, 0x7a20, 0x9378, 0xcb41, 0xc4f1, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x70f1, gbc.sp());
        EXPECT(0x5d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 025D
        gbc.setState(0xf51, 0xf848, 0x3a40, 0x7072, 0xea35, 0xb56e, 0x0, 0x1);
        gbc.writeMem(0xf51, { 0xa2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0xf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 025E
        gbc.setState(0xefb1, 0xd162, 0x3300, 0x2531, 0xd9ff, 0xdfca, 0x0, 0x1);
        gbc.writeMem(0xefb1, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd162, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xefb1));
        // A2 025F
        gbc.setState(0x8e88, 0xd78a, 0xf870, 0x4aa5, 0x84b8, 0x53e4, 0x0, 0x0);
        gbc.writeMem(0x8e88, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd78a, gbc.sp());
        EXPECT(0x8e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8e88));
        // A2 0260
        gbc.setState(0xe8b5, 0x98ee, 0x22c0, 0x74b5, 0xa62c, 0xbc41, 0x0, 0x1);
        gbc.writeMem(0xe8b5, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x98ee, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe8b5));
        // A2 0261
        gbc.setState(0x565f, 0x4979, 0x3f80, 0xd00a, 0x95f6, 0xe640, 0x0, 0x1);
        gbc.writeMem(0x565f, { 0xa2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0262
        gbc.setState(0x6cf1, 0x1ff7, 0xd680, 0xdbb7, 0x4bf2, 0x28ca, 0x1, 0x1);
        gbc.writeMem(0x6cf1, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1ff7, gbc.sp());
        EXPECT(0x6cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0263
        gbc.setState(0xbcff, 0x5c5b, 0xf1a0, 0x5b95, 0xa874, 0xcd6f, 0x1, 0x0);
        gbc.writeMem(0xbcff, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5c5b, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbcff));
        // A2 0264
        gbc.setState(0x9629, 0xab1f, 0x3c30, 0xca3b, 0x9fb, 0xeaa8, 0x1, 0x1);
        gbc.writeMem(0x9629, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x962a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9629));
        // A2 0265
        gbc.setState(0x7a14, 0xf28a, 0xf990, 0xaabe, 0x61e5, 0x8540, 0x1, 0x1);
        gbc.writeMem(0x7a14, { 0xa2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0266
        gbc.setState(0x47f0, 0x8012, 0xee00, 0x93c6, 0x8e31, 0x5088, 0x0, 0x1);
        gbc.writeMem(0x47f0, { 0xa2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8012, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0267
        gbc.setState(0xa336, 0xe959, 0x3820, 0x32cb, 0xabec, 0xa54, 0x1, 0x1);
        gbc.writeMem(0xa336, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe959, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa336));
        // A2 0268
        gbc.setState(0xa4e2, 0xbe34, 0xa6d0, 0xd06f, 0x3b41, 0x527a, 0x1, 0x0);
        gbc.writeMem(0xa4e2, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe34, gbc.sp());
        EXPECT(0xa4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa4e2));
        // A2 0269
        gbc.setState(0x302d, 0x6c24, 0xdd0, 0x1a43, 0x5651, 0xdcd0, 0x1, 0x1);
        gbc.writeMem(0x302d, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 026A
        gbc.setState(0xd8, 0xa023, 0x38a0, 0x1392, 0x316e, 0xc0ac, 0x1, 0x1);
        gbc.writeMem(0xd8, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa023, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 026B
        gbc.setState(0xdb8b, 0x6f15, 0xd680, 0xc5f6, 0x204e, 0x1ec2, 0x0, 0x0);
        gbc.writeMem(0xdb8b, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0xdb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdb8b));
        // A2 026C
        gbc.setState(0x9f79, 0x4086, 0x82a0, 0x3a7d, 0x252a, 0xb96d, 0x1, 0x0);
        gbc.writeMem(0x9f79, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4086, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9f79));
        // A2 026D
        gbc.setState(0x94e6, 0x3b8a, 0xdac0, 0xa74a, 0xe8c4, 0x7641, 0x0, 0x0);
        gbc.writeMem(0x94e6, { 0xa2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b8a, gbc.sp());
        EXPECT(0x94e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x94e6));
        // A2 026E
        gbc.setState(0x3b6b, 0xe289, 0x1d70, 0x9807, 0x3a87, 0x6cf4, 0x0, 0x0);
        gbc.writeMem(0x3b6b, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x3b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 026F
        gbc.setState(0x96e2, 0x4532, 0xbe70, 0xf5e, 0x5750, 0xaed8, 0x1, 0x1);
        gbc.writeMem(0x96e2, { 0xa2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4532, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x96e2));
        // A2 0270
        gbc.setState(0xd6b7, 0x7fb7, 0x1b00, 0xee9, 0xa066, 0xa153, 0x1, 0x0);
        gbc.writeMem(0xd6b7, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7fb7, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd6b7));
        // A2 0271
        gbc.setState(0xb542, 0x5bfe, 0xef0, 0x8d21, 0x4ff4, 0x325b, 0x1, 0x1);
        gbc.writeMem(0xb542, { 0xa2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xb543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb542));
        // A2 0272
        gbc.setState(0x2feb, 0xe63d, 0xe520, 0xfdd7, 0x79bc, 0x5dd8, 0x0, 0x1);
        gbc.writeMem(0x2feb, { 0xa2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x2fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0273
        gbc.setState(0x40a0, 0x4ad8, 0xd610, 0xc263, 0x5a70, 0x2a25, 0x1, 0x1);
        gbc.writeMem(0x40a0, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0x40a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0274
        gbc.setState(0x6db8, 0x4954, 0x5b20, 0xc787, 0x14fb, 0x5264, 0x0, 0x0);
        gbc.writeMem(0x6db8, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4954, gbc.sp());
        EXPECT(0x6db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0275
        gbc.setState(0x332e, 0xa100, 0xf470, 0x19fa, 0xde1b, 0x51e2, 0x0, 0x1);
        gbc.writeMem(0x332e, { 0xa2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0x332f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0276
        gbc.setState(0xb2f8, 0x578f, 0x2a10, 0xc056, 0x734e, 0x7aa7, 0x0, 0x1);
        gbc.writeMem(0xb2f8, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x578f, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb2f8));
        // A2 0277
        gbc.setState(0xe0d9, 0x5d21, 0x1fc0, 0x8776, 0x70dd, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0xe0d9, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0xe0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe0d9));
        // A2 0278
        gbc.setState(0xb315, 0x5d18, 0x3850, 0x1306, 0xc18, 0x3bc7, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb315));
        // A2 0279
        gbc.setState(0xde27, 0x9dc, 0xbdd0, 0x702e, 0x20ca, 0x5f2f, 0x1, 0x1);
        gbc.writeMem(0xde27, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9dc, gbc.sp());
        EXPECT(0xde28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xde27));
        // A2 027A
        gbc.setState(0xcb35, 0x1eac, 0xf830, 0x5059, 0x9b69, 0xd2f, 0x0, 0x0);
        gbc.writeMem(0xcb35, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1eac, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcb35));
        // A2 027C
        gbc.setState(0x7771, 0x9044, 0xe3b0, 0x6b10, 0x678, 0x597d, 0x1, 0x1);
        gbc.writeMem(0x7771, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0x7772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 027D
        gbc.setState(0xb85a, 0x2c32, 0x4850, 0x3811, 0x9d39, 0x5c1f, 0x0, 0x0);
        gbc.writeMem(0xb85a, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2c32, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb85a));
        // A2 027E
        gbc.setState(0xa02c, 0x1daa, 0x48a0, 0x7e14, 0x8337, 0x3eba, 0x1, 0x0);
        gbc.writeMem(0xa02c, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1daa, gbc.sp());
        EXPECT(0xa02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa02c));
        // A2 027F
        gbc.setState(0xe7d2, 0x5206, 0x8ba0, 0xe7fd, 0x4cbf, 0x4fb, 0x0, 0x0);
        gbc.writeMem(0xe7d2, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe7d2));
        // A2 0280
        gbc.setState(0x3e7a, 0x7a30, 0x350, 0x8e38, 0x17ba, 0x147a, 0x1, 0x1);
        gbc.writeMem(0x3e7a, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7a30, gbc.sp());
        EXPECT(0x3e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0281
        gbc.setState(0x5d97, 0xe84d, 0x1490, 0xdbbc, 0xb375, 0x2c1f, 0x1, 0x0);
        gbc.writeMem(0x5d97, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe84d, gbc.sp());
        EXPECT(0x5d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0282
        gbc.setState(0x797f, 0xc39c, 0x4a30, 0x3ec0, 0x9f3d, 0xcd0e, 0x0, 0x1);
        gbc.writeMem(0x797f, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0283
        gbc.setState(0xd7fa, 0x498f, 0x8320, 0x1e92, 0x4b11, 0xed5a, 0x0, 0x1);
        gbc.writeMem(0xd7fa, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x498f, gbc.sp());
        EXPECT(0xd7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd7fa));
        // A2 0284
        gbc.setState(0x65d5, 0x593d, 0x72a0, 0xd0a7, 0xe4c, 0x2c46, 0x0, 0x1);
        gbc.writeMem(0x65d5, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x593d, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0285
        gbc.setState(0xc59, 0xd533, 0x29f0, 0xf7be, 0x497c, 0x91f9, 0x0, 0x1);
        gbc.writeMem(0xc59, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd533, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0286
        gbc.setState(0xc3f9, 0x42f8, 0xdfb0, 0xf091, 0x56e, 0x10e1, 0x1, 0x0);
        gbc.writeMem(0xc3f9, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x42f8, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc3f9));
        // A2 0287
        gbc.setState(0x2d83, 0x318b, 0x4420, 0x669f, 0x4724, 0xb391, 0x1, 0x1);
        gbc.writeMem(0x2d83, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0288
        gbc.setState(0x9fac, 0x20b5, 0x7920, 0x521a, 0x3313, 0xadb, 0x1, 0x0);
        gbc.writeMem(0x9fac, { 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9fac));
        // A2 0289
        gbc.setState(0x255d, 0xc35a, 0x42e0, 0xdbfc, 0xb7e5, 0x1fb8, 0x0, 0x0);
        gbc.writeMem(0x255d, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc35a, gbc.sp());
        EXPECT(0x255e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 028B
        gbc.setState(0x4094, 0x15c3, 0x8070, 0x3342, 0x927b, 0xd4e9, 0x1, 0x0);
        gbc.writeMem(0x4094, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 028C
        gbc.setState(0xc556, 0x2133, 0x6ac0, 0x1ff7, 0xc3f0, 0x6780, 0x1, 0x1);
        gbc.writeMem(0xc556, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc556));
        // A2 028D
        gbc.setState(0x184b, 0x2f90, 0x4a00, 0x5da0, 0xe39e, 0xfdb7, 0x0, 0x1);
        gbc.writeMem(0x184b, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0x184c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 028E
        gbc.setState(0xe3bc, 0x10ab, 0x97b0, 0x1ce2, 0xbcbc, 0x3a2d, 0x1, 0x0);
        gbc.writeMem(0xe3bc, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0xe3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe3bc));
        // A2 028F
        gbc.setState(0x99c3, 0xb626, 0x5f0, 0xdf89, 0x14f3, 0x8072, 0x1, 0x1);
        gbc.writeMem(0x99c3, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb626, gbc.sp());
        EXPECT(0x99c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x99c3));
        // A2 0290
        gbc.setState(0x673a, 0x258b, 0xb0d0, 0xe136, 0x996f, 0x10a6, 0x1, 0x0);
        gbc.writeMem(0x673a, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0x673b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0291
        gbc.setState(0x3fa8, 0xc492, 0x36d0, 0x176d, 0x374e, 0xaa50, 0x1, 0x1);
        gbc.writeMem(0x3fa8, { 0xa2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc492, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0292
        gbc.setState(0x2088, 0xfe7, 0xac0, 0xa28, 0xbbb7, 0x43b8, 0x0, 0x1);
        gbc.writeMem(0x2088, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfe7, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0293
        gbc.setState(0x6c2e, 0x2ce6, 0x1f0, 0x762d, 0xd217, 0xe962, 0x1, 0x1);
        gbc.writeMem(0x6c2e, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0x6c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0294
        gbc.setState(0x4b64, 0x6b02, 0x2c60, 0xf6bb, 0x94b0, 0x5caf, 0x0, 0x0);
        gbc.writeMem(0x4b64, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6b02, gbc.sp());
        EXPECT(0x4b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0295
        gbc.setState(0x83b0, 0x890, 0x1940, 0x5cec, 0xbc18, 0xf88c, 0x0, 0x1);
        gbc.writeMem(0x83b0, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x890, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x83b0));
        // A2 0296
        gbc.setState(0xaf5, 0x8674, 0x4170, 0xf1f6, 0x849f, 0xbef0, 0x0, 0x0);
        gbc.writeMem(0xaf5, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0xaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0297
        gbc.setState(0xb30f, 0xda0e, 0x5200, 0x5ae5, 0x5ff, 0xcc1c, 0x1, 0x0);
        gbc.writeMem(0xb30f, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xda0e, gbc.sp());
        EXPECT(0xb310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb30f));
        // A2 029A
        gbc.setState(0x3d77, 0x5483, 0x5660, 0x32bc, 0x54c, 0xbd5f, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x3d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 029B
        gbc.setState(0xc2ce, 0xcbd7, 0xaea0, 0xb987, 0x431b, 0x4d90, 0x0, 0x0);
        gbc.writeMem(0xc2ce, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xc2cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc2ce));
        // A2 029C
        gbc.setState(0xa332, 0x1c19, 0xbb0, 0xa1a9, 0x7764, 0xcb2f, 0x1, 0x1);
        gbc.writeMem(0xa332, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1c19, gbc.sp());
        EXPECT(0xa333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa332));
        // A2 029D
        gbc.setState(0xd125, 0x3c60, 0x85f0, 0x688d, 0x53b4, 0x2f68, 0x1, 0x1);
        gbc.writeMem(0xd125, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3c60, gbc.sp());
        EXPECT(0xd126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd125));
        // A2 029E
        gbc.setState(0x5fb0, 0x6568, 0x3c0, 0x9b30, 0x19c7, 0x91b7, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6568, gbc.sp());
        EXPECT(0x5fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 029F
        gbc.setState(0xe158, 0xe7ab, 0x380, 0x58a6, 0x2314, 0x9e08, 0x0, 0x0);
        gbc.writeMem(0xe158, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe7ab, gbc.sp());
        EXPECT(0xe159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe158));
        // A2 02A0
        gbc.setState(0x2ae7, 0x1acc, 0x3440, 0xea61, 0xe2b6, 0x4699, 0x1, 0x0);
        gbc.writeMem(0x2ae7, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1acc, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02A1
        gbc.setState(0x65c8, 0xaa7d, 0x1150, 0xb1ba, 0x62e4, 0x588b, 0x0, 0x1);
        gbc.writeMem(0x65c8, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaa7d, gbc.sp());
        EXPECT(0x65c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02A2
        gbc.setState(0x308, 0xaaad, 0x97c0, 0xa903, 0x8525, 0xa32d, 0x0, 0x0);
        gbc.writeMem(0x308, { 0xa2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0x309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02A3
        gbc.setState(0xabbb, 0x2b08, 0xb890, 0x9805, 0x60a5, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0xabbb, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0xabbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xabbb));
        // A2 02A4
        gbc.setState(0xb1f7, 0xeefa, 0x5120, 0xeefe, 0x69d, 0x9174, 0x0, 0x1);
        gbc.writeMem(0xb1f7, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0xb1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb1f7));
        // A2 02A5
        gbc.setState(0xb1a2, 0x9c72, 0x2f50, 0x7555, 0xa8ec, 0xa6be, 0x0, 0x1);
        gbc.writeMem(0xb1a2, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb1a2));
        // A2 02A7
        gbc.setState(0xa13c, 0x31a2, 0xc850, 0xa280, 0x9e43, 0xce6f, 0x0, 0x0);
        gbc.writeMem(0xa13c, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa13c));
        // A2 02A8
        gbc.setState(0x64f1, 0xa31, 0xc7e0, 0x88, 0x5375, 0x35df, 0x0, 0x1);
        gbc.writeMem(0x64f1, { 0xa2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02A9
        gbc.setState(0x60b6, 0xd821, 0x3510, 0x5bad, 0x6861, 0x43a4, 0x1, 0x0);
        gbc.writeMem(0x60b6, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0x60b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02AA
        gbc.setState(0xae9d, 0x88c2, 0xb980, 0x33bc, 0xdc64, 0xd26a, 0x0, 0x1);
        gbc.writeMem(0xae9d, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88c2, gbc.sp());
        EXPECT(0xae9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae9d));
        // A2 02AB
        gbc.setState(0x8fb, 0xb006, 0x5560, 0x6ae5, 0x7914, 0x91de, 0x1, 0x1);
        gbc.writeMem(0x8fb, { 0xa2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb006, gbc.sp());
        EXPECT(0x8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02AC
        gbc.setState(0xa066, 0x753f, 0xe9b0, 0x7fda, 0xce37, 0x9413, 0x1, 0x0);
        gbc.writeMem(0xa066, { 0xa2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x753f, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa066));
        // A2 02AD
        gbc.setState(0x73, 0x55c2, 0x3eb0, 0xf4b2, 0x69b6, 0xa4b9, 0x0, 0x0);
        gbc.writeMem(0x73, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0x74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02AE
        gbc.setState(0xdab6, 0x76b6, 0xa070, 0xba0c, 0x73b8, 0x59e8, 0x1, 0x0);
        gbc.writeMem(0xdab6, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x76b6, gbc.sp());
        EXPECT(0xdab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdab6));
        // A2 02AF
        gbc.setState(0x7005, 0xccd7, 0xbc90, 0x7c80, 0xd630, 0x38f3, 0x0, 0x0);
        gbc.writeMem(0x7005, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xccd7, gbc.sp());
        EXPECT(0x7006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B0
        gbc.setState(0xd17a, 0x309e, 0xa980, 0x522e, 0x147, 0xa48a, 0x1, 0x0);
        gbc.writeMem(0xd17a, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x309e, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd17a));
        // A2 02B1
        gbc.setState(0x3047, 0x5751, 0x36f0, 0x3626, 0xa414, 0xd35a, 0x1, 0x1);
        gbc.writeMem(0x3047, { 0xa2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5751, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B2
        gbc.setState(0xe820, 0x7a02, 0xe30, 0xb4d1, 0x5193, 0xf189, 0x1, 0x1);
        gbc.writeMem(0xe820, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0xe821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe820));
        // A2 02B3
        gbc.setState(0x4b9f, 0xc7c1, 0xf070, 0x7147, 0xe78f, 0x85ec, 0x0, 0x0);
        gbc.writeMem(0x4b9f, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0x4ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B4
        gbc.setState(0x9c7, 0x41ea, 0x57f0, 0x80e5, 0x31b7, 0x808a, 0x0, 0x1);
        gbc.writeMem(0x9c7, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B5
        gbc.setState(0xb1f5, 0x2472, 0xcd60, 0x9847, 0x54bb, 0x6cc9, 0x1, 0x1);
        gbc.writeMem(0xb1f5, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb1f5));
        // A2 02B6
        gbc.setState(0x23d7, 0x3506, 0x3650, 0x4610, 0x77d1, 0xcd5, 0x1, 0x1);
        gbc.writeMem(0x23d7, { 0xa2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3506, gbc.sp());
        EXPECT(0x23d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B8
        gbc.setState(0x12ae, 0x488a, 0x35e0, 0x2c3, 0xd522, 0xb314, 0x1, 0x0);
        gbc.writeMem(0x12ae, { 0xa2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x488a, gbc.sp());
        EXPECT(0x12af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02B9
        gbc.setState(0x8d62, 0x9c7d, 0x3e20, 0x5ff, 0x822d, 0xe1b9, 0x1, 0x1);
        gbc.writeMem(0x8d62, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8d62));
        // A2 02BA
        gbc.setState(0xa406, 0x983f, 0xa6e0, 0xb7fe, 0x2939, 0xec30, 0x1, 0x0);
        gbc.writeMem(0xa406, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x983f, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa406));
        // A2 02BB
        gbc.setState(0x4901, 0x1b50, 0xd690, 0x61bf, 0x58ea, 0xecf4, 0x1, 0x1);
        gbc.writeMem(0x4901, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02BC
        gbc.setState(0xe03d, 0xf975, 0xeea0, 0x2c58, 0xc6b0, 0xcccc, 0x1, 0x1);
        gbc.writeMem(0xe03d, { 0xa2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe03d));
        // A2 02BD
        gbc.setState(0x1ddb, 0x4ffb, 0x5dc0, 0xf598, 0xfed8, 0x9a76, 0x1, 0x1);
        gbc.writeMem(0x1ddb, { 0xa2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4ffb, gbc.sp());
        EXPECT(0x1ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02BE
        gbc.setState(0x879e, 0xbe27, 0x7720, 0xb681, 0xa2c, 0x6e78, 0x0, 0x0);
        gbc.writeMem(0x879e, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbe27, gbc.sp());
        EXPECT(0x879f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x879e));
        // A2 02BF
        gbc.setState(0x54b3, 0x8fd8, 0x90f0, 0x8deb, 0xe7e2, 0xbfbd, 0x1, 0x0);
        gbc.writeMem(0x54b3, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8fd8, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02C0
        gbc.setState(0x26a7, 0x5f5b, 0x7ff0, 0x4e97, 0xcb51, 0xe606, 0x1, 0x1);
        gbc.writeMem(0x26a7, { 0xa2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5f5b, gbc.sp());
        EXPECT(0x26a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02C1
        gbc.setState(0x2ddc, 0x72d3, 0x8370, 0x7fa1, 0x469a, 0x2f26, 0x0, 0x0);
        gbc.writeMem(0x2ddc, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0x2ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02C3
        gbc.setState(0xeee0, 0x8a78, 0x5b00, 0x7a3c, 0xce21, 0xe24, 0x1, 0x0);
        gbc.writeMem(0xeee0, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0xeee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xeee0));
        // A2 02C4
        gbc.setState(0xea33, 0x358c, 0x45b0, 0x1ee6, 0xfbe3, 0xca68, 0x1, 0x1);
        gbc.writeMem(0xea33, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x358c, gbc.sp());
        EXPECT(0xea34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xea33));
        // A2 02C5
        gbc.setState(0xc734, 0x9b49, 0x4aa0, 0x559f, 0x8bed, 0x115b, 0x1, 0x1);
        gbc.writeMem(0xc734, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9b49, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc734));
        // A2 02C6
        gbc.setState(0x65cc, 0x6a5f, 0xd5a0, 0x5aec, 0x7c1c, 0x2c85, 0x1, 0x0);
        gbc.writeMem(0x65cc, { 0xa2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a5f, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02C7
        gbc.setState(0xea32, 0xd595, 0x8a70, 0xc3d, 0xa878, 0x2f5b, 0x1, 0x0);
        gbc.writeMem(0xea32, { 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xea32));
        // A2 02C8
        gbc.setState(0xc0da, 0x5791, 0x63d0, 0x1531, 0x2da9, 0xa0cf, 0x0, 0x0);
        gbc.writeMem(0xc0da, { 0xa2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5791, gbc.sp());
        EXPECT(0xc0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc0da));
        // A2 02C9
        gbc.setState(0xe2f5, 0x1c8c, 0x240, 0x40c2, 0x1b24, 0xbe93, 0x1, 0x1);
        gbc.writeMem(0xe2f5, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1c8c, gbc.sp());
        EXPECT(0xe2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe2f5));
        // A2 02CA
        gbc.setState(0x9a5e, 0x1a43, 0xed50, 0x9c0b, 0x1ea4, 0xebfa, 0x0, 0x0);
        gbc.writeMem(0x9a5e, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a5e));
        // A2 02CB
        gbc.setState(0xd2c5, 0x86e8, 0xb650, 0xff5c, 0xdce, 0x749f, 0x0, 0x0);
        gbc.writeMem(0xd2c5, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x86e8, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd2c5));
        // A2 02CC
        gbc.setState(0x818f, 0x1b70, 0x5c60, 0xbebf, 0x202b, 0x483d, 0x1, 0x1);
        gbc.writeMem(0x818f, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b70, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x818f));
        // A2 02CD
        gbc.setState(0xc592, 0xf17b, 0xa9a0, 0xe53a, 0xc36e, 0xd135, 0x1, 0x1);
        gbc.writeMem(0xc592, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0xc593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc592));
        // A2 02CE
        gbc.setState(0x3011, 0x5476, 0xaf40, 0x7f1f, 0xbdf7, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0x3011, { 0xa2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0x3012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02CF
        gbc.setState(0x63bf, 0xd3a0, 0x8180, 0x983, 0x8107, 0x99a, 0x0, 0x0);
        gbc.writeMem(0x63bf, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0x63c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02D0
        gbc.setState(0xac51, 0x5299, 0x9440, 0xbdc8, 0x5835, 0xce89, 0x0, 0x0);
        gbc.writeMem(0xac51, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0xac52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xac51));
        // A2 02D2
        gbc.setState(0x9804, 0x8883, 0xb30, 0x4a78, 0xb0d, 0xe547, 0x1, 0x1);
        gbc.writeMem(0x9804, { 0xa2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0x9805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9804));
        // A2 02D3
        gbc.setState(0x508c, 0x9b44, 0x72d0, 0x527d, 0xb4ab, 0xf20e, 0x0, 0x1);
        gbc.writeMem(0x508c, { 0xa2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b44, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02D4
        gbc.setState(0xe7e, 0x642, 0x2290, 0x7a1d, 0x709a, 0x267c, 0x1, 0x0);
        gbc.writeMem(0xe7e, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x642, gbc.sp());
        EXPECT(0xe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02D5
        gbc.setState(0x82cd, 0x58ed, 0xc460, 0x53ed, 0xb996, 0xcb06, 0x1, 0x1);
        gbc.writeMem(0x82cd, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x58ed, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x82cd));
        // A2 02D6
        gbc.setState(0x31f0, 0xc18d, 0x9370, 0x3823, 0x6aff, 0x134e, 0x1, 0x0);
        gbc.writeMem(0x31f0, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x31f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02D7
        gbc.setState(0xd471, 0x5e05, 0xb810, 0x42d3, 0xe537, 0x7d1b, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5e05, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd471));
        // A2 02D8
        gbc.setState(0x50f1, 0x4d71, 0x8b80, 0xf12b, 0x2c7e, 0x3d70, 0x1, 0x0);
        gbc.writeMem(0x50f1, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4d71, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02DA
        gbc.setState(0xe434, 0x7658, 0xb2a0, 0x7450, 0x884c, 0xa573, 0x1, 0x1);
        gbc.writeMem(0xe434, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7658, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe434));
        // A2 02DB
        gbc.setState(0xe476, 0x9ba6, 0xdde0, 0xbe24, 0x5048, 0xe2fc, 0x1, 0x0);
        gbc.writeMem(0xe476, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe476));
        // A2 02DC
        gbc.setState(0x65bd, 0xa61f, 0x6a0, 0x4261, 0x28e7, 0x3079, 0x0, 0x1);
        gbc.writeMem(0x65bd, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa61f, gbc.sp());
        EXPECT(0x65be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02DD
        gbc.setState(0x1fd, 0xfa32, 0x87b0, 0x808, 0x5800, 0x6b, 0x0, 0x1);
        gbc.writeMem(0x1fd, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02DE
        gbc.setState(0x4f9b, 0x2508, 0x67b0, 0xbfaa, 0xca83, 0xb93b, 0x1, 0x1);
        gbc.writeMem(0x4f9b, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02DF
        gbc.setState(0x1ebb, 0xca28, 0x4d60, 0xb63f, 0x570c, 0x9333, 0x1, 0x0);
        gbc.writeMem(0x1ebb, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x1ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02E0
        gbc.setState(0x908b, 0xb800, 0xa510, 0x549e, 0x939, 0x138, 0x0, 0x1);
        gbc.writeMem(0x908b, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x908b));
        // A2 02E1
        gbc.setState(0x76fd, 0xda9b, 0x4ac0, 0xf12d, 0x5982, 0x8a, 0x1, 0x1);
        gbc.writeMem(0x76fd, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02E2
        gbc.setState(0x8063, 0x6307, 0xd830, 0x6762, 0x5f14, 0x8939, 0x1, 0x0);
        gbc.writeMem(0x8063, { 0xa2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x8064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8063));
        // A2 02E3
        gbc.setState(0xc075, 0x2eb9, 0x6cf0, 0xea95, 0x392e, 0x9975, 0x0, 0x1);
        gbc.writeMem(0xc075, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2eb9, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc075));
        // A2 02E4
        gbc.setState(0x83c2, 0xb3da, 0xe060, 0x1d59, 0x97f8, 0xdcec, 0x1, 0x1);
        gbc.writeMem(0x83c2, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb3da, gbc.sp());
        EXPECT(0x83c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x83c2));
        // A2 02E5
        gbc.setState(0x54da, 0x48ca, 0x58e0, 0x9d3b, 0x5188, 0xb804, 0x0, 0x0);
        gbc.writeMem(0x54da, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x48ca, gbc.sp());
        EXPECT(0x54db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02E7
        gbc.setState(0xed0e, 0xc0ea, 0xd540, 0x1aae, 0x519b, 0x10bb, 0x1, 0x0);
        gbc.writeMem(0xed0e, { 0xa2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc0ea, gbc.sp());
        EXPECT(0xed0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xed0e));
        // A2 02E8
        gbc.setState(0x5c6, 0x2c79, 0x3620, 0x3ab8, 0xd2da, 0x8a9d, 0x0, 0x0);
        gbc.writeMem(0x5c6, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2c79, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02EA
        gbc.setState(0x2d04, 0x2250, 0xeae0, 0x108, 0x7174, 0x5f04, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02EB
        gbc.setState(0x79d1, 0xb851, 0xe4c0, 0x6536, 0x6b01, 0xbe25, 0x0, 0x0);
        gbc.writeMem(0x79d1, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02EC
        gbc.setState(0xcefa, 0xa731, 0x8680, 0x1cb6, 0xb2b0, 0x852d, 0x0, 0x1);
        gbc.writeMem(0xcefa, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0xcefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcefa));
        // A2 02ED
        gbc.setState(0xee41, 0x1cc9, 0x36b0, 0xceba, 0x9fdc, 0xe2d2, 0x0, 0x1);
        gbc.writeMem(0xee41, { 0xa2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1cc9, gbc.sp());
        EXPECT(0xee42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xee41));
        // A2 02EE
        gbc.setState(0xaac5, 0x9cbf, 0xce80, 0x9b87, 0x4c6b, 0x5038, 0x1, 0x1);
        gbc.writeMem(0xaac5, { 0xa2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9cbf, gbc.sp());
        EXPECT(0xaac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaac5));
        // A2 02EF
        gbc.setState(0xd3f1, 0x8e89, 0xef00, 0xdf74, 0x903a, 0x1ca2, 0x0, 0x0);
        gbc.writeMem(0xd3f1, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e89, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd3f1));
        // A2 02F0
        gbc.setState(0xc1c4, 0x45b5, 0x97e0, 0x9ca0, 0x296c, 0xf592, 0x0, 0x1);
        gbc.writeMem(0xc1c4, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45b5, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc1c4));
        // A2 02F1
        gbc.setState(0x4385, 0x622b, 0x4cb0, 0x783d, 0x6204, 0xeaf1, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x622b, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F2
        gbc.setState(0x180d, 0xc31e, 0xf140, 0x890d, 0xa0d7, 0xb397, 0x1, 0x1);
        gbc.writeMem(0x180d, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F3
        gbc.setState(0x102b, 0xacef, 0x6760, 0x8f8f, 0xfd9a, 0x6a58, 0x1, 0x1);
        gbc.writeMem(0x102b, { 0xa2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xacef, gbc.sp());
        EXPECT(0x102c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F4
        gbc.setState(0xc638, 0x2e33, 0x3ee0, 0x1580, 0xc2e6, 0x2ceb, 0x0, 0x0);
        gbc.writeMem(0xc638, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2e33, gbc.sp());
        EXPECT(0xc639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc638));
        // A2 02F5
        gbc.setState(0x386b, 0x2d86, 0xef70, 0xf8bd, 0x46e0, 0x4b29, 0x0, 0x1);
        gbc.writeMem(0x386b, { 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2d86, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F6
        gbc.setState(0x668c, 0xf399, 0x6f40, 0xecc4, 0xebf, 0x5405, 0x1, 0x1);
        gbc.writeMem(0x668c, { 0xa2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf399, gbc.sp());
        EXPECT(0x668d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F7
        gbc.setState(0x7501, 0x1ba2, 0x9e90, 0xe57e, 0x4da1, 0xdb9b, 0x1, 0x1);
        gbc.writeMem(0x7501, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F8
        gbc.setState(0x629a, 0x4a4d, 0xabb0, 0xed43, 0xcfc8, 0xee36, 0x0, 0x0);
        gbc.writeMem(0x629a, { 0xa2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4a4d, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02F9
        gbc.setState(0x83a3, 0x79e4, 0x1cf0, 0x9149, 0x10ec, 0x6f2f, 0x1, 0x0);
        gbc.writeMem(0x83a3, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79e4, gbc.sp());
        EXPECT(0x83a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x83a3));
        // A2 02FA
        gbc.setState(0x7af9, 0xfaab, 0xe100, 0xcb95, 0xa7f2, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0x7af9, { 0xa2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfaab, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 02FB
        gbc.setState(0xac71, 0xec9a, 0xa6c0, 0xc45f, 0xb242, 0x87f6, 0x1, 0x0);
        gbc.writeMem(0xac71, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xec9a, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xac71));
        // A2 02FC
        gbc.setState(0xb8de, 0xb836, 0x73d0, 0x6e18, 0xc85f, 0x7ee6, 0x0, 0x1);
        gbc.writeMem(0xb8de, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb836, gbc.sp());
        EXPECT(0xb8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb8de));
        // A2 02FD
        gbc.setState(0xc70b, 0xcc3f, 0xb430, 0x5364, 0xc049, 0x32d2, 0x0, 0x1);
        gbc.writeMem(0xc70b, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc70b));
        // A2 02FE
        gbc.setState(0xab21, 0xe2a0, 0xf870, 0xfe6b, 0x243c, 0x9c07, 0x1, 0x0);
        gbc.writeMem(0xab21, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xab21));
        // A2 02FF
        gbc.setState(0xe02f, 0xba45, 0x94c0, 0x7095, 0x7843, 0xb5a3, 0x1, 0x1);
        gbc.writeMem(0xe02f, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0xe030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe02f));
        // A2 0300
        gbc.setState(0x4465, 0xaf6, 0xdf80, 0x8c90, 0x4e05, 0xaa42, 0x0, 0x0);
        gbc.writeMem(0x4465, { 0xa2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaf6, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0301
        gbc.setState(0x9c96, 0xd176, 0x4540, 0x75f4, 0xae9b, 0x240b, 0x1, 0x0);
        gbc.writeMem(0x9c96, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x9c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9c96));
        // A2 0302
        gbc.setState(0x3118, 0xa2e8, 0x1af0, 0xcd09, 0x180b, 0xa2a5, 0x1, 0x0);
        gbc.writeMem(0x3118, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa2e8, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0304
        gbc.setState(0x8cb1, 0x1e0e, 0xe570, 0xee21, 0xfa27, 0xaab1, 0x1, 0x1);
        gbc.writeMem(0x8cb1, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1e0e, gbc.sp());
        EXPECT(0x8cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8cb1));
        // A2 0305
        gbc.setState(0x19c4, 0x4846, 0x450, 0xb907, 0x8744, 0x1245, 0x1, 0x0);
        gbc.writeMem(0x19c4, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4846, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0306
        gbc.setState(0xbb1d, 0xe610, 0xc5e0, 0xae6d, 0x3a03, 0xf63a, 0x0, 0x1);
        gbc.writeMem(0xbb1d, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbb1d));
        // A2 0307
        gbc.setState(0x9c55, 0x173c, 0xea40, 0x8619, 0x38cf, 0xc4cd, 0x0, 0x1);
        gbc.writeMem(0x9c55, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x173c, gbc.sp());
        EXPECT(0x9c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9c55));
        // A2 0308
        gbc.setState(0xd4ac, 0x2cc2, 0xc410, 0x9f9a, 0xb559, 0x629a, 0x0, 0x0);
        gbc.writeMem(0xd4ac, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2cc2, gbc.sp());
        EXPECT(0xd4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd4ac));
        // A2 0309
        gbc.setState(0x7580, 0x63ea, 0x3d50, 0xf364, 0x492e, 0xf640, 0x1, 0x0);
        gbc.writeMem(0x7580, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0x7581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 030A
        gbc.setState(0xb3fb, 0xa7bf, 0x8a70, 0x26ac, 0x1e38, 0xc2e6, 0x1, 0x0);
        gbc.writeMem(0xb3fb, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa7bf, gbc.sp());
        EXPECT(0xb3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb3fb));
        // A2 030B
        gbc.setState(0x5d08, 0x8820, 0x39b0, 0x58e1, 0x15a8, 0x3358, 0x0, 0x1);
        gbc.writeMem(0x5d08, { 0xa2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8820, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 030C
        gbc.setState(0x946b, 0x631a, 0xf2f0, 0xb938, 0xa0c0, 0x9868, 0x1, 0x0);
        gbc.writeMem(0x946b, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x631a, gbc.sp());
        EXPECT(0x946c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x946b));
        // A2 030D
        gbc.setState(0xc63b, 0x9aa4, 0xe150, 0x5db7, 0xcd91, 0x3013, 0x0, 0x1);
        gbc.writeMem(0xc63b, { 0xa2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc63b));
        // A2 030E
        gbc.setState(0xe823, 0xb904, 0x8c40, 0xc388, 0x18f1, 0x6cd, 0x1, 0x0);
        gbc.writeMem(0xe823, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe823));
        // A2 030F
        gbc.setState(0x60f4, 0xe5a0, 0xb550, 0xe80b, 0xed16, 0x43cb, 0x1, 0x0);
        gbc.writeMem(0x60f4, { 0xa2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe5a0, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0310
        gbc.setState(0xe883, 0x7989, 0xb830, 0xb704, 0xdf2d, 0xe6f1, 0x0, 0x0);
        gbc.writeMem(0xe883, { 0xa2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7989, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe883));
        // A2 0311
        gbc.setState(0x55e, 0xd921, 0xba60, 0x5812, 0xa037, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd921, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0312
        gbc.setState(0x74ef, 0x39d7, 0xd0f0, 0xff58, 0x3b34, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x74ef, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x39d7, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0313
        gbc.setState(0x16d5, 0xca23, 0xce50, 0xffa9, 0x70aa, 0x7131, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0314
        gbc.setState(0xe91b, 0x3887, 0xf330, 0xc088, 0x822d, 0x79be, 0x0, 0x0);
        gbc.writeMem(0xe91b, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0xe91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe91b));
        // A2 0315
        gbc.setState(0x8911, 0x58e3, 0x4c10, 0x528c, 0x19de, 0xb548, 0x0, 0x1);
        gbc.writeMem(0x8911, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0x8912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8911));
        // A2 0316
        gbc.setState(0x44f2, 0x51f8, 0x130, 0xad99, 0xda15, 0x7484, 0x1, 0x1);
        gbc.writeMem(0x44f2, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0317
        gbc.setState(0xca6f, 0x8681, 0xc080, 0x7f39, 0x42b2, 0x251b, 0x1, 0x1);
        gbc.writeMem(0xca6f, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xca6f));
        // A2 0318
        gbc.setState(0xdf57, 0xea0f, 0xf660, 0x68e5, 0x6e3, 0x59b5, 0x1, 0x1);
        gbc.writeMem(0xdf57, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdf57));
        // A2 0319
        gbc.setState(0xc05f, 0x7546, 0xc890, 0x8fcf, 0x45f4, 0x1631, 0x1, 0x0);
        gbc.writeMem(0xc05f, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc05f));
        // A2 031A
        gbc.setState(0xe934, 0xb6d6, 0x6450, 0x4c73, 0x9d77, 0xf8b, 0x0, 0x0);
        gbc.writeMem(0xe934, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb6d6, gbc.sp());
        EXPECT(0xe935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe934));
        // A2 031B
        gbc.setState(0xcd21, 0x5ccb, 0xd060, 0x13fb, 0x898d, 0x22b5, 0x1, 0x1);
        gbc.writeMem(0xcd21, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ccb, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcd21));
        // A2 031C
        gbc.setState(0x7bf3, 0xe3cf, 0x18e0, 0x8e4c, 0x6c96, 0xd777, 0x0, 0x0);
        gbc.writeMem(0x7bf3, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe3cf, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 031D
        gbc.setState(0x73e9, 0x31db, 0xf850, 0xf9ad, 0x75f8, 0x770b, 0x0, 0x0);
        gbc.writeMem(0x73e9, { 0xa2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x31db, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 031E
        gbc.setState(0x43ec, 0xbd08, 0xa580, 0x75be, 0x4df1, 0xfe54, 0x1, 0x0);
        gbc.writeMem(0x43ec, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd08, gbc.sp());
        EXPECT(0x43ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 031F
        gbc.setState(0x92cb, 0x99ea, 0x3610, 0xd4c, 0x732b, 0xa4fa, 0x0, 0x1);
        gbc.writeMem(0x92cb, { 0xa2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x99ea, gbc.sp());
        EXPECT(0x92cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x92cb));
        // A2 0320
        gbc.setState(0x836d, 0x537d, 0xbad0, 0xf0ab, 0x7b07, 0x990e, 0x0, 0x0);
        gbc.writeMem(0x836d, { 0xa2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x537d, gbc.sp());
        EXPECT(0x836e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x836d));
        // A2 0321
        gbc.setState(0x25f9, 0x858, 0xaa90, 0x789f, 0xd408, 0x80a9, 0x1, 0x0);
        gbc.writeMem(0x25f9, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x25fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0322
        gbc.setState(0x5499, 0x18cb, 0xc150, 0x4878, 0xc0c5, 0xdae4, 0x1, 0x1);
        gbc.writeMem(0x5499, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x18cb, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0323
        gbc.setState(0x29aa, 0xb997, 0x7a40, 0xab77, 0xd138, 0x3d99, 0x0, 0x1);
        gbc.writeMem(0x29aa, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb997, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0324
        gbc.setState(0xedda, 0xe893, 0x560, 0x3401, 0x6d3a, 0xbf1f, 0x0, 0x1);
        gbc.writeMem(0xedda, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe893, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xedda));
        // A2 0326
        gbc.setState(0x8f51, 0x6b9, 0x270, 0x8a31, 0xb274, 0xa210, 0x1, 0x1);
        gbc.writeMem(0x8f51, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6b9, gbc.sp());
        EXPECT(0x8f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8f51));
        // A2 0327
        gbc.setState(0xe38a, 0xb094, 0xec90, 0x3919, 0x8097, 0xc4b1, 0x1, 0x1);
        gbc.writeMem(0xe38a, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe38a));
        // A2 0328
        gbc.setState(0x1c8e, 0xcbec, 0x9c40, 0xbc21, 0xbc2f, 0x2b03, 0x0, 0x0);
        gbc.writeMem(0x1c8e, { 0xa2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0329
        gbc.setState(0x70af, 0x1673, 0x21e0, 0x1654, 0x7ccc, 0x5de6, 0x0, 0x0);
        gbc.writeMem(0x70af, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1673, gbc.sp());
        EXPECT(0x70b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 032A
        gbc.setState(0x3fe6, 0x8d63, 0x14e0, 0xbf67, 0x9f24, 0xf519, 0x1, 0x0);
        gbc.writeMem(0x3fe6, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8d63, gbc.sp());
        EXPECT(0x3fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 032B
        gbc.setState(0x2c30, 0xfe3b, 0x32f0, 0x4d64, 0xa959, 0x5a5a, 0x0, 0x1);
        gbc.writeMem(0x2c30, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfe3b, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 032C
        gbc.setState(0x1bdb, 0x8495, 0xbcc0, 0xe86, 0xe418, 0x886, 0x1, 0x1);
        gbc.writeMem(0x1bdb, { 0xa2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x1bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 032D
        gbc.setState(0x1a57, 0xe587, 0x26b0, 0x4547, 0xdc4, 0x4b65, 0x1, 0x0);
        gbc.writeMem(0x1a57, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 032E
        gbc.setState(0xd189, 0x18fd, 0xa9d0, 0xb534, 0x3c43, 0xb45a, 0x0, 0x1);
        gbc.writeMem(0xd189, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd189));
        // A2 032F
        gbc.setState(0xe455, 0x87ab, 0xe0c0, 0x31c0, 0x4f74, 0xa605, 0x0, 0x1);
        gbc.writeMem(0xe455, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x87ab, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe455));
        // A2 0330
        gbc.setState(0x6151, 0xec38, 0xd860, 0x7794, 0x1a6c, 0xfc0d, 0x0, 0x1);
        gbc.writeMem(0x6151, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0331
        gbc.setState(0xcde, 0x473a, 0xa330, 0x7eee, 0x9078, 0x2e4c, 0x0, 0x1);
        gbc.writeMem(0xcde, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x473a, gbc.sp());
        EXPECT(0xcdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0332
        gbc.setState(0x977c, 0xf68a, 0x35d0, 0xaf19, 0x4d04, 0x12c6, 0x1, 0x1);
        gbc.writeMem(0x977c, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0x977d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x977c));
        // A2 0333
        gbc.setState(0xa757, 0xdae5, 0xce20, 0xdb32, 0xdb0c, 0xbe07, 0x1, 0x1);
        gbc.writeMem(0xa757, { 0xa2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdae5, gbc.sp());
        EXPECT(0xa758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa757));
        // A2 0334
        gbc.setState(0x2f94, 0x916d, 0x83d0, 0x6abb, 0x2be6, 0xc633, 0x1, 0x1);
        gbc.writeMem(0x2f94, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x916d, gbc.sp());
        EXPECT(0x2f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0335
        gbc.setState(0xc2d4, 0x279a, 0xcfe0, 0xdf9e, 0xbeac, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0xc2d4, { 0xa2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x279a, gbc.sp());
        EXPECT(0xc2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc2d4));
        // A2 0336
        gbc.setState(0x870f, 0x291, 0x5ac0, 0xd0d6, 0xdab4, 0xc45, 0x0, 0x1);
        gbc.writeMem(0x870f, { 0xa2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x291, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x870f));
        // A2 0337
        gbc.setState(0xae07, 0x8b9c, 0x7b60, 0xf013, 0x8110, 0xd881, 0x0, 0x1);
        gbc.writeMem(0xae07, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8b9c, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae07));
        // A2 0338
        gbc.setState(0x3f1, 0x3ea5, 0x3880, 0xa33b, 0xdf16, 0x42d9, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0339
        gbc.setState(0x6326, 0xa826, 0xbd70, 0x1c61, 0x205d, 0x5dc9, 0x0, 0x0);
        gbc.writeMem(0x6326, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa826, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 033A
        gbc.setState(0xb78c, 0x2737, 0xc3e0, 0x72d4, 0xe4e2, 0x3337, 0x1, 0x0);
        gbc.writeMem(0xb78c, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2737, gbc.sp());
        EXPECT(0xb78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb78c));
        // A2 033B
        gbc.setState(0x1361, 0x5cd6, 0xf580, 0xad08, 0xd650, 0xb2dd, 0x1, 0x1);
        gbc.writeMem(0x1361, { 0xa2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0x1362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 033C
        gbc.setState(0x4479, 0x1f19, 0x4500, 0x7ec6, 0x5903, 0x536c, 0x1, 0x1);
        gbc.writeMem(0x4479, { 0xa2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f19, gbc.sp());
        EXPECT(0x447a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 033D
        gbc.setState(0x2eaf, 0x90d0, 0x6a50, 0xdfb4, 0x2c06, 0xc27d, 0x1, 0x1);
        gbc.writeMem(0x2eaf, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x90d0, gbc.sp());
        EXPECT(0x2eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 033E
        gbc.setState(0xa7ff, 0x932b, 0xbcc0, 0x806e, 0xc53a, 0x4380, 0x0, 0x1);
        gbc.writeMem(0xa7ff, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0xa800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa7ff));
        // A2 033F
        gbc.setState(0x5ab, 0x2124, 0xd630, 0xbfa4, 0x8666, 0x2cff, 0x1, 0x0);
        gbc.writeMem(0x5ab, { 0xa2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2124, gbc.sp());
        EXPECT(0x5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0340
        gbc.setState(0xab29, 0x3bd8, 0x36f0, 0x8423, 0x48b8, 0x5dcf, 0x0, 0x1);
        gbc.writeMem(0xab29, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3bd8, gbc.sp());
        EXPECT(0xab2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xab29));
        // A2 0341
        gbc.setState(0xccd1, 0x9eb6, 0xa010, 0x93e5, 0xcc93, 0xe170, 0x1, 0x0);
        gbc.writeMem(0xccd1, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9eb6, gbc.sp());
        EXPECT(0xccd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xccd1));
        // A2 0343
        gbc.setState(0x3687, 0xf32d, 0xc130, 0xa25e, 0x2811, 0x7b2e, 0x1, 0x1);
        gbc.writeMem(0x3687, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf32d, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0344
        gbc.setState(0x43c9, 0x2af8, 0x6a70, 0x8ec3, 0xe1cd, 0xd93a, 0x0, 0x1);
        gbc.writeMem(0x43c9, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2af8, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0346
        gbc.setState(0x2dad, 0x8ab1, 0x73a0, 0x78b9, 0x9f61, 0xb57f, 0x1, 0x1);
        gbc.writeMem(0x2dad, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8ab1, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0347
        gbc.setState(0xbbbf, 0x86a4, 0xd5b0, 0x52a8, 0x6ace, 0xc3b8, 0x0, 0x0);
        gbc.writeMem(0xbbbf, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbbbf));
        // A2 0348
        gbc.setState(0x7f0e, 0xf2e4, 0x10a0, 0x4240, 0xbe0, 0x92e0, 0x1, 0x1);
        gbc.writeMem(0x7f0e, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0x7f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0349
        gbc.setState(0x9e9d, 0x9d2a, 0xb0f0, 0x8046, 0xabc3, 0x8c3c, 0x1, 0x0);
        gbc.writeMem(0x9e9d, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9e9d));
        // A2 034A
        gbc.setState(0x23e3, 0xa68, 0x5c80, 0xde5b, 0x9a5, 0x3e8d, 0x0, 0x0);
        gbc.writeMem(0x23e3, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa68, gbc.sp());
        EXPECT(0x23e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 034B
        gbc.setState(0x2ffb, 0x7ace, 0xff40, 0xaff1, 0xa9be, 0x77c2, 0x1, 0x1);
        gbc.writeMem(0x2ffb, { 0xa2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7ace, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 034C
        gbc.setState(0xcd0a, 0x4ae5, 0xf2b0, 0xd5c1, 0x3291, 0xa254, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0xa2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4ae5, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcd0a));
        // A2 034D
        gbc.setState(0xd59, 0x43b5, 0xbe80, 0x633e, 0x7bea, 0x9e61, 0x1, 0x0);
        gbc.writeMem(0xd59, { 0xa2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x43b5, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 034E
        gbc.setState(0xb96d, 0x8763, 0x8370, 0x1c1d, 0x3389, 0x8f0, 0x1, 0x1);
        gbc.writeMem(0xb96d, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0xb96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb96d));
        // A2 034F
        gbc.setState(0x4110, 0x1563, 0x4240, 0xd881, 0xcb57, 0x2a49, 0x1, 0x1);
        gbc.writeMem(0x4110, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1563, gbc.sp());
        EXPECT(0x4111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0350
        gbc.setState(0x99ce, 0x96b4, 0xdde0, 0xd6fa, 0xb62a, 0x839b, 0x0, 0x0);
        gbc.writeMem(0x99ce, { 0xa2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x99ce));
        // A2 0351
        gbc.setState(0xa56, 0x31e, 0xba70, 0x4b1a, 0xfc7e, 0xbdb5, 0x1, 0x1);
        gbc.writeMem(0xa56, { 0xa2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0xa57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0352
        gbc.setState(0x6e9a, 0x338c, 0x14b0, 0xacc5, 0x8057, 0xa13f, 0x0, 0x1);
        gbc.writeMem(0x6e9a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0x6e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0353
        gbc.setState(0x950a, 0x744e, 0xb9e0, 0x7c5f, 0xfd53, 0xf9bb, 0x0, 0x1);
        gbc.writeMem(0x950a, { 0xa2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x744e, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x950a));
        // A2 0354
        gbc.setState(0x39a9, 0xd93a, 0x5da0, 0x5f1d, 0x50d7, 0x2b1, 0x1, 0x1);
        gbc.writeMem(0x39a9, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd93a, gbc.sp());
        EXPECT(0x39aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0355
        gbc.setState(0x989, 0x1f1d, 0x5090, 0x5b48, 0x98cb, 0x1640, 0x0, 0x1);
        gbc.writeMem(0x989, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1f1d, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0356
        gbc.setState(0x3420, 0xa83d, 0xb8a0, 0xde76, 0x7d53, 0xddf2, 0x0, 0x1);
        gbc.writeMem(0x3420, { 0xa2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0357
        gbc.setState(0xab9d, 0xf74e, 0x5830, 0x5469, 0x7483, 0x16e7, 0x0, 0x0);
        gbc.writeMem(0xab9d, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xab9d));
        // A2 0358
        gbc.setState(0x8569, 0x918b, 0x950, 0xa8a3, 0x2971, 0x7aca, 0x1, 0x0);
        gbc.writeMem(0x8569, { 0xa2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0x856a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8569));
        // A2 0359
        gbc.setState(0x1d09, 0x5acf, 0x4740, 0x188, 0x22d8, 0xf3c7, 0x1, 0x1);
        gbc.writeMem(0x1d09, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5acf, gbc.sp());
        EXPECT(0x1d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 035A
        gbc.setState(0x9576, 0x2172, 0x96c0, 0x8781, 0x6904, 0xa002, 0x1, 0x0);
        gbc.writeMem(0x9576, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2172, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9576));
        // A2 035B
        gbc.setState(0xb61a, 0xc82f, 0x9030, 0x4b8c, 0x5186, 0xf54d, 0x0, 0x1);
        gbc.writeMem(0xb61a, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc82f, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb61a));
        // A2 035C
        gbc.setState(0x52ff, 0xf261, 0xeb20, 0x85ba, 0x32e7, 0x705c, 0x1, 0x0);
        gbc.writeMem(0x52ff, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf261, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 035D
        gbc.setState(0xbd4f, 0xf642, 0x9ba0, 0x4186, 0xd442, 0xe8d4, 0x0, 0x1);
        gbc.writeMem(0xbd4f, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0xbd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbd4f));
        // A2 035E
        gbc.setState(0xb8ee, 0x1e4e, 0xad80, 0xed61, 0xa887, 0x2274, 0x1, 0x1);
        gbc.writeMem(0xb8ee, { 0xa2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0xb8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb8ee));
        // A2 0360
        gbc.setState(0x47ad, 0xe794, 0xe050, 0x4684, 0xc484, 0x4e71, 0x0, 0x1);
        gbc.writeMem(0x47ad, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe794, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0362
        gbc.setState(0xdd48, 0xe333, 0xe610, 0xde28, 0x9d3, 0x8d12, 0x1, 0x1);
        gbc.writeMem(0xdd48, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe333, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdd48));
        // A2 0363
        gbc.setState(0xe2d1, 0xaaf3, 0x7720, 0x53d5, 0xcda2, 0x4904, 0x1, 0x0);
        gbc.writeMem(0xe2d1, { 0xa2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0xe2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe2d1));
        // A2 0364
        gbc.setState(0x958c, 0x2c12, 0x4460, 0xa31e, 0x3a98, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x958c, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2c12, gbc.sp());
        EXPECT(0x958d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x958c));
        // A2 0365
        gbc.setState(0xedce, 0x70d1, 0x9990, 0x69ff, 0xf1b8, 0xc389, 0x1, 0x1);
        gbc.writeMem(0xedce, { 0xa2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xedce));
        // A2 0366
        gbc.setState(0x8316, 0xde4c, 0x1c00, 0x3a34, 0xc078, 0xd3db, 0x0, 0x0);
        gbc.writeMem(0x8316, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8316));
        // A2 0367
        gbc.setState(0x6433, 0x7bfe, 0xae40, 0x9991, 0xb71c, 0x5688, 0x1, 0x0);
        gbc.writeMem(0x6433, { 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0x6434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0368
        gbc.setState(0xda44, 0xab71, 0xe0c0, 0xd6b3, 0x5249, 0xca74, 0x0, 0x1);
        gbc.writeMem(0xda44, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0xda45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda44));
        // A2 0369
        gbc.setState(0x6fe6, 0xe7c0, 0xf260, 0xd17e, 0x5a16, 0xfcc8, 0x1, 0x0);
        gbc.writeMem(0x6fe6, { 0xa2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe7c0, gbc.sp());
        EXPECT(0x6fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 036A
        gbc.setState(0x23ef, 0x3557, 0xf2e0, 0xa160, 0xe6f8, 0x400c, 0x0, 0x0);
        gbc.writeMem(0x23ef, { 0xa2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x23f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 036B
        gbc.setState(0x254e, 0xe512, 0xf490, 0x120c, 0x8d27, 0x4420, 0x0, 0x1);
        gbc.writeMem(0x254e, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0x254f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 036C
        gbc.setState(0x5c7d, 0xad5, 0xfce0, 0x28f5, 0x5d04, 0xb2a8, 0x1, 0x1);
        gbc.writeMem(0x5c7d, { 0xa2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x5c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 036D
        gbc.setState(0xc391, 0xd151, 0x6f30, 0x5a54, 0x8e5b, 0x32b4, 0x0, 0x0);
        gbc.writeMem(0xc391, { 0xa2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd151, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc391));
        // A2 036E
        gbc.setState(0x6420, 0x7269, 0x4610, 0x9e3a, 0x5234, 0x73a0, 0x0, 0x1);
        gbc.writeMem(0x6420, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7269, gbc.sp());
        EXPECT(0x6421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 036F
        gbc.setState(0x26a5, 0x818c, 0xb1a0, 0x8a12, 0x8342, 0xca06, 0x0, 0x0);
        gbc.writeMem(0x26a5, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0x26a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0370
        gbc.setState(0x4925, 0x2464, 0xc650, 0x1c60, 0x13e7, 0xdba7, 0x0, 0x0);
        gbc.writeMem(0x4925, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x4926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0371
        gbc.setState(0x6fde, 0x4095, 0xd350, 0x3ae5, 0xb21f, 0xad83, 0x1, 0x0);
        gbc.writeMem(0x6fde, { 0xa2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0372
        gbc.setState(0xb70e, 0x4126, 0x6330, 0x3932, 0xeb0f, 0x52ec, 0x0, 0x0);
        gbc.writeMem(0xb70e, { 0xa2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0xb70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb70e));
        // A2 0374
        gbc.setState(0x49a0, 0xe5e7, 0x5cf0, 0xe94f, 0xe8a3, 0x1dd, 0x0, 0x1);
        gbc.writeMem(0x49a0, { 0xa2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0375
        gbc.setState(0xc11e, 0x872d, 0x3910, 0x5849, 0xb1bb, 0xc6b4, 0x0, 0x1);
        gbc.writeMem(0xc11e, { 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc11e));
        // A2 0376
        gbc.setState(0x2104, 0x2c48, 0xc570, 0xd315, 0x7e7d, 0xbec5, 0x1, 0x1);
        gbc.writeMem(0x2104, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0377
        gbc.setState(0x22e7, 0xa39d, 0x6610, 0xa01a, 0x6292, 0x8dfd, 0x1, 0x1);
        gbc.writeMem(0x22e7, { 0xa2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa39d, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0378
        gbc.setState(0x3065, 0x24b4, 0xb9b0, 0x3563, 0x3776, 0x4c78, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0xa2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x24b4, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0379
        gbc.setState(0xcf5f, 0x8c86, 0x5720, 0x2704, 0x6805, 0x9729, 0x1, 0x0);
        gbc.writeMem(0xcf5f, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0xcf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcf5f));
        // A2 037A
        gbc.setState(0xaa40, 0x9bd, 0x5a50, 0x8d79, 0x3d2e, 0xa55a, 0x0, 0x1);
        gbc.writeMem(0xaa40, { 0xa2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xaa40));
        // A2 037B
        gbc.setState(0xe791, 0x787, 0x1670, 0xe3fd, 0x398f, 0xe6c9, 0x0, 0x0);
        gbc.writeMem(0xe791, { 0xa2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x787, gbc.sp());
        EXPECT(0xe792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe791));
        // A2 037C
        gbc.setState(0xd84b, 0x84b7, 0xcb0, 0xbbee, 0x57b6, 0x2633, 0x0, 0x1);
        gbc.writeMem(0xd84b, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x84b7, gbc.sp());
        EXPECT(0xd84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd84b));
        // A2 037D
        gbc.setState(0x38c0, 0x6dbb, 0xc110, 0x88da, 0x2f50, 0x5789, 0x0, 0x0);
        gbc.writeMem(0x38c0, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6dbb, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 037F
        gbc.setState(0x9d60, 0xe0da, 0x630, 0xa90, 0x60c2, 0x2f90, 0x0, 0x1);
        gbc.writeMem(0x9d60, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9d60));
        // A2 0380
        gbc.setState(0x4320, 0x535f, 0x6840, 0xd6f7, 0x5613, 0xe083, 0x0, 0x1);
        gbc.writeMem(0x4320, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0x4321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0381
        gbc.setState(0x6c5, 0x29f5, 0x790, 0xcb9e, 0x312, 0xdb56, 0x0, 0x1);
        gbc.writeMem(0x6c5, { 0xa2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x29f5, gbc.sp());
        EXPECT(0x6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0382
        gbc.setState(0x38f8, 0x18d0, 0xc350, 0x1862, 0x7b48, 0xfeb3, 0x1, 0x1);
        gbc.writeMem(0x38f8, { 0xa2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x18d0, gbc.sp());
        EXPECT(0x38f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0383
        gbc.setState(0x5556, 0x939e, 0x110, 0x50cc, 0xb68c, 0xee9d, 0x0, 0x0);
        gbc.writeMem(0x5556, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0x5557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0384
        gbc.setState(0xeb50, 0xda23, 0xf850, 0x53cc, 0xb22f, 0xed32, 0x0, 0x0);
        gbc.writeMem(0xeb50, { 0xa2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xda23, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xeb50));
        // A2 0385
        gbc.setState(0x52d3, 0xeb5c, 0x2500, 0x14c8, 0xc306, 0x1465, 0x0, 0x0);
        gbc.writeMem(0x52d3, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xeb5c, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0386
        gbc.setState(0xb63b, 0xd533, 0xec50, 0x8b3b, 0x641a, 0x707b, 0x1, 0x1);
        gbc.writeMem(0xb63b, { 0xa2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd533, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb63b));
        // A2 0387
        gbc.setState(0xcc2c, 0xfd61, 0xc4d0, 0x7c2f, 0x3e3, 0x2f60, 0x1, 0x1);
        gbc.writeMem(0xcc2c, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xcc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcc2c));
        // A2 0388
        gbc.setState(0xecfe, 0x5276, 0x7c0, 0x91f, 0x7dfe, 0x25eb, 0x0, 0x1);
        gbc.writeMem(0xecfe, { 0xa2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5276, gbc.sp());
        EXPECT(0xecff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xecfe));
        // A2 0389
        gbc.setState(0x43c2, 0x9e1f, 0x5060, 0x3284, 0xe814, 0x36fb, 0x0, 0x1);
        gbc.writeMem(0x43c2, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9e1f, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 038A
        gbc.setState(0x3cb0, 0xe221, 0x3470, 0x9e96, 0xce5b, 0x4d6a, 0x1, 0x1);
        gbc.writeMem(0x3cb0, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe221, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 038B
        gbc.setState(0xc1bb, 0x8aa3, 0x9200, 0x4ebe, 0xc1f5, 0x621b, 0x0, 0x0);
        gbc.writeMem(0xc1bb, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8aa3, gbc.sp());
        EXPECT(0xc1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc1bb));
        // A2 038C
        gbc.setState(0x2327, 0xa900, 0x3ed0, 0xfd44, 0xad51, 0x4683, 0x0, 0x0);
        gbc.writeMem(0x2327, { 0xa2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa900, gbc.sp());
        EXPECT(0x2328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 038D
        gbc.setState(0xd233, 0xce0c, 0xec40, 0x1cc1, 0xc5a3, 0x144a, 0x1, 0x1);
        gbc.writeMem(0xd233, { 0xa2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xce0c, gbc.sp());
        EXPECT(0xd234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd233));
        // A2 038E
        gbc.setState(0xbc65, 0xc2dd, 0x69e0, 0x552e, 0x87d0, 0xa3cb, 0x1, 0x1);
        gbc.writeMem(0xbc65, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbc65));
        // A2 038F
        gbc.setState(0x4df6, 0x1cfd, 0x14e0, 0x9685, 0xdd3e, 0x7a79, 0x1, 0x0);
        gbc.writeMem(0x4df6, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1cfd, gbc.sp());
        EXPECT(0x4df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0390
        gbc.setState(0x9ce8, 0x421f, 0x4ac0, 0x4aec, 0x7b5b, 0x7a9c, 0x1, 0x1);
        gbc.writeMem(0x9ce8, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9ce8));
        // A2 0391
        gbc.setState(0xa6ed, 0x7cf6, 0x6720, 0xd1d7, 0x91f, 0xc65c, 0x0, 0x1);
        gbc.writeMem(0xa6ed, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7cf6, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa6ed));
        // A2 0392
        gbc.setState(0x5ad3, 0x90f1, 0xf40, 0xa426, 0x7afb, 0x4e41, 0x1, 0x0);
        gbc.writeMem(0x5ad3, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90f1, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0394
        gbc.setState(0x6a5e, 0x754a, 0x7c60, 0xab6f, 0x2d82, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0x6a5e, { 0xa2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0395
        gbc.setState(0xc12e, 0xf185, 0x16a0, 0xa937, 0x608, 0x9526, 0x0, 0x0);
        gbc.writeMem(0xc12e, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0xc12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc12e));
        // A2 0396
        gbc.setState(0xdece, 0x4d1f, 0x1360, 0xa745, 0x77a8, 0xe239, 0x0, 0x1);
        gbc.writeMem(0xdece, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4d1f, gbc.sp());
        EXPECT(0xdecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdece));
        // A2 0397
        gbc.setState(0x98b7, 0xd95f, 0x4800, 0x43ce, 0x8a14, 0xccf5, 0x0, 0x0);
        gbc.writeMem(0x98b7, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x98b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x98b7));
        // A2 0398
        gbc.setState(0x5138, 0xbf74, 0x9c30, 0x42b5, 0xe679, 0x7c87, 0x0, 0x1);
        gbc.writeMem(0x5138, { 0xa2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbf74, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 0399
        gbc.setState(0x5145, 0x4398, 0x9100, 0xcf6d, 0x2953, 0xc13a, 0x0, 0x1);
        gbc.writeMem(0x5145, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 039A
        gbc.setState(0x69fd, 0xfc60, 0xcdf0, 0x480e, 0xd396, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0x69fd, { 0xa2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0x69fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 039B
        gbc.setState(0xe49b, 0xa35f, 0x810, 0x3c62, 0x7a73, 0x6be0, 0x1, 0x1);
        gbc.writeMem(0xe49b, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0xe49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe49b));
        // A2 039C
        gbc.setState(0x8646, 0x9cf9, 0xffb0, 0x39dd, 0xe41f, 0xa228, 0x1, 0x0);
        gbc.writeMem(0x8646, { 0xa2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8646));
        // A2 039D
        gbc.setState(0x4abf, 0xf873, 0x35b0, 0x35c2, 0x96d8, 0x9ab2, 0x1, 0x1);
        gbc.writeMem(0x4abf, { 0xa2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf873, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 039E
        gbc.setState(0x3f7, 0xab58, 0x12b0, 0x35e2, 0x6a4d, 0x6361, 0x1, 0x1);
        gbc.writeMem(0x3f7, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0x3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 039F
        gbc.setState(0x6089, 0xcfa0, 0xf230, 0x95a7, 0x65d3, 0x68ea, 0x0, 0x1);
        gbc.writeMem(0x6089, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcfa0, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03A0
        gbc.setState(0xbb2c, 0x39e7, 0xb530, 0xe6aa, 0x4344, 0x4e0e, 0x1, 0x1);
        gbc.writeMem(0xbb2c, { 0xa2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x39e7, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbb2c));
        // A2 03A1
        gbc.setState(0x36a0, 0xd662, 0xecb0, 0xe5f4, 0xc746, 0x53f4, 0x0, 0x0);
        gbc.writeMem(0x36a0, { 0xa2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd662, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03A2
        gbc.setState(0x327e, 0xb467, 0x9120, 0xf493, 0xebae, 0x6f64, 0x0, 0x1);
        gbc.writeMem(0x327e, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0x327f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03A4
        gbc.setState(0x7d4e, 0xb94c, 0x9600, 0x4cdd, 0x1ee9, 0xd247, 0x1, 0x1);
        gbc.writeMem(0x7d4e, { 0xa2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb94c, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03A6
        gbc.setState(0xd493, 0x819c, 0x4270, 0x879e, 0xb338, 0x6726, 0x1, 0x1);
        gbc.writeMem(0xd493, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x819c, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd493));
        // A2 03A7
        gbc.setState(0x254f, 0xc280, 0xc570, 0x7d1e, 0x24ba, 0x7ed8, 0x0, 0x0);
        gbc.writeMem(0x254f, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x2550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03A8
        gbc.setState(0xe62f, 0x8fd0, 0x86c0, 0xe041, 0x57fc, 0x70af, 0x1, 0x0);
        gbc.writeMem(0xe62f, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe62f));
        // A2 03A9
        gbc.setState(0x8fd8, 0x5bc0, 0xc880, 0x7439, 0xc7c1, 0xe347, 0x1, 0x1);
        gbc.writeMem(0x8fd8, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bc0, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8fd8));
        // A2 03AA
        gbc.setState(0x323a, 0xddb, 0xf110, 0xccce, 0xef4, 0x33a0, 0x0, 0x1);
        gbc.writeMem(0x323a, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x323b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03AB
        gbc.setState(0xde4c, 0x2169, 0x9fd0, 0x5462, 0x36e4, 0x1613, 0x0, 0x0);
        gbc.writeMem(0xde4c, { 0xa2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0xde4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xde4c));
        // A2 03AC
        gbc.setState(0x672, 0x1bb0, 0xb6b0, 0x7c87, 0x87b7, 0x9a08, 0x0, 0x0);
        gbc.writeMem(0x672, { 0xa2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0x673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03AD
        gbc.setState(0x5e9e, 0xe6ff, 0x27e0, 0xf35f, 0x8e70, 0x45c8, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0xa2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe6ff, gbc.sp());
        EXPECT(0x5e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03AE
        gbc.setState(0xdb5d, 0x235, 0x2030, 0x5a10, 0x2f75, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0xdb5d, { 0xa2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0xdb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdb5d));
        // A2 03AF
        gbc.setState(0x9a83, 0xcb58, 0xda40, 0x7947, 0x86e, 0x5164, 0x0, 0x0);
        gbc.writeMem(0x9a83, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcb58, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9a83));
        // A2 03B0
        gbc.setState(0x2ce6, 0x8004, 0x230, 0xdfbe, 0xbf9f, 0x73c4, 0x0, 0x0);
        gbc.writeMem(0x2ce6, { 0xa2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8004, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B1
        gbc.setState(0x1dd3, 0x6ec8, 0xfc50, 0x5021, 0xdb34, 0xebeb, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0xa2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B3
        gbc.setState(0xb216, 0x15f2, 0x78d0, 0xc02e, 0x5941, 0xdafc, 0x0, 0x1);
        gbc.writeMem(0xb216, { 0xa2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x15f2, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb216));
        // A2 03B4
        gbc.setState(0x6cb9, 0x42b5, 0x3630, 0x3340, 0x92d3, 0xdb87, 0x1, 0x0);
        gbc.writeMem(0x6cb9, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x42b5, gbc.sp());
        EXPECT(0x6cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B5
        gbc.setState(0x78b9, 0x3ea2, 0xf2f0, 0xc675, 0x4e68, 0x7762, 0x1, 0x0);
        gbc.writeMem(0x78b9, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0x78ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B6
        gbc.setState(0x3389, 0xd07, 0xeb60, 0x42bc, 0x9966, 0x9ff5, 0x0, 0x1);
        gbc.writeMem(0x3389, { 0xa2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd07, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B8
        gbc.setState(0xea4, 0x593c, 0x9280, 0x98ce, 0x9b44, 0x5990, 0x1, 0x0);
        gbc.writeMem(0xea4, { 0xa2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x593c, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03B9
        gbc.setState(0x47dd, 0xce06, 0xff50, 0x5fa4, 0xe526, 0xd581, 0x0, 0x1);
        gbc.writeMem(0x47dd, { 0xa2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xce06, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03BA
        gbc.setState(0x1051, 0x9bc2, 0x3e40, 0x49f1, 0x33a9, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x1051, { 0xa2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9bc2, gbc.sp());
        EXPECT(0x1052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03BB
        gbc.setState(0xae7e, 0xf98a, 0xceb0, 0x4153, 0x3481, 0x31d3, 0x1, 0x0);
        gbc.writeMem(0xae7e, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf98a, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae7e));
        // A2 03BC
        gbc.setState(0x4e25, 0x368b, 0x1430, 0xf15c, 0xc25, 0xb1ad, 0x1, 0x1);
        gbc.writeMem(0x4e25, { 0xa2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0x4e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03BD
        gbc.setState(0x949a, 0xf6c6, 0xccf0, 0x61c9, 0x7e12, 0xbe9c, 0x0, 0x1);
        gbc.writeMem(0x949a, { 0xa2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0x949b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x949a));
        // A2 03BE
        gbc.setState(0x3226, 0x6a8d, 0xaef0, 0x953b, 0x395a, 0xa0e1, 0x1, 0x1);
        gbc.writeMem(0x3226, { 0xa2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03BF
        gbc.setState(0x22ac, 0x4894, 0xde90, 0xc471, 0x9cc5, 0x9474, 0x0, 0x0);
        gbc.writeMem(0x22ac, { 0xa2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4894, gbc.sp());
        EXPECT(0x22ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C0
        gbc.setState(0x1658, 0x9c44, 0x8630, 0x85bb, 0xcaa2, 0xa618, 0x0, 0x1);
        gbc.writeMem(0x1658, { 0xa2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9c44, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C1
        gbc.setState(0x230a, 0x327, 0xd080, 0x68c1, 0x9b02, 0xc8f1, 0x0, 0x1);
        gbc.writeMem(0x230a, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0x230b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C2
        gbc.setState(0xd118, 0xf276, 0xca20, 0xf6d0, 0xa509, 0xc414, 0x0, 0x1);
        gbc.writeMem(0xd118, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf276, gbc.sp());
        EXPECT(0xd119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd118));
        // A2 03C3
        gbc.setState(0x1333, 0x85c6, 0x180, 0x3480, 0xbc87, 0xf92d, 0x0, 0x1);
        gbc.writeMem(0x1333, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C4
        gbc.setState(0x3559, 0x8062, 0xefe0, 0x6399, 0x3aca, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x3559, { 0xa2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8062, gbc.sp());
        EXPECT(0x355a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C5
        gbc.setState(0xbe32, 0x190e, 0xb130, 0x2877, 0xc584, 0x7144, 0x1, 0x1);
        gbc.writeMem(0xbe32, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbe32));
        // A2 03C6
        gbc.setState(0x6954, 0x4960, 0x1f00, 0x4459, 0x2bcc, 0x496, 0x1, 0x0);
        gbc.writeMem(0x6954, { 0xa2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C7
        gbc.setState(0x2030, 0x282b, 0xced0, 0x70ec, 0x4ac7, 0x8b49, 0x1, 0x1);
        gbc.writeMem(0x2030, { 0xa2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x282b, gbc.sp());
        EXPECT(0x2031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C8
        gbc.setState(0x18b2, 0x2350, 0x90a0, 0x17fe, 0xf590, 0xf02f, 0x1, 0x1);
        gbc.writeMem(0x18b2, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2350, gbc.sp());
        EXPECT(0x18b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03C9
        gbc.setState(0x9ff4, 0x15d6, 0xba50, 0xa790, 0x5316, 0x3e65, 0x1, 0x0);
        gbc.writeMem(0x9ff4, { 0xa2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x15d6, gbc.sp());
        EXPECT(0x9ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9ff4));
        // A2 03CA
        gbc.setState(0xc86f, 0x338e, 0x4410, 0x83d, 0xe4d2, 0x53db, 0x0, 0x1);
        gbc.writeMem(0xc86f, { 0xa2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x338e, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc86f));
        // A2 03CB
        gbc.setState(0xb4e3, 0xca00, 0xc090, 0x4bbb, 0xf067, 0xb8a, 0x0, 0x1);
        gbc.writeMem(0xb4e3, { 0xa2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0xb4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb4e3));
        // A2 03CC
        gbc.setState(0x4387, 0x32d1, 0xcec0, 0xbd08, 0xb6b3, 0xac65, 0x0, 0x1);
        gbc.writeMem(0x4387, { 0xa2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x32d1, gbc.sp());
        EXPECT(0x4388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03CD
        gbc.setState(0x5bd2, 0x9dfa, 0xa7e0, 0xbe76, 0xdbe4, 0x7165, 0x0, 0x1);
        gbc.writeMem(0x5bd2, { 0xa2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9dfa, gbc.sp());
        EXPECT(0x5bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03CF
        gbc.setState(0xe575, 0x3a09, 0x8350, 0x3173, 0xccde, 0xe9e5, 0x1, 0x0);
        gbc.writeMem(0xe575, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe575));
        // A2 03D0
        gbc.setState(0x38e, 0x878d, 0x3420, 0x4f92, 0x7d78, 0x52e, 0x1, 0x0);
        gbc.writeMem(0x38e, { 0xa2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x878d, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03D1
        gbc.setState(0x64fb, 0x3455, 0xc600, 0x3b98, 0x7a1d, 0xb8b6, 0x0, 0x0);
        gbc.writeMem(0x64fb, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3455, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03D2
        gbc.setState(0x5181, 0x8cf4, 0x9f00, 0xdde4, 0x2c07, 0xbdfc, 0x1, 0x0);
        gbc.writeMem(0x5181, { 0xa2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8cf4, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03D3
        gbc.setState(0x96df, 0x1a54, 0xe460, 0x6ce7, 0x6373, 0xb6f5, 0x0, 0x0);
        gbc.writeMem(0x96df, { 0xa2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1a54, gbc.sp());
        EXPECT(0x96e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x96df));
        // A2 03D4
        gbc.setState(0x2f75, 0x4deb, 0x93a0, 0x869b, 0xf815, 0xc35f, 0x0, 0x0);
        gbc.writeMem(0x2f75, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03D5
        gbc.setState(0xe4e8, 0xa828, 0x3de0, 0x4504, 0x7441, 0x23e9, 0x1, 0x1);
        gbc.writeMem(0xe4e8, { 0xa2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa828, gbc.sp());
        EXPECT(0xe4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe4e8));
        // A2 03D6
        gbc.setState(0x2a98, 0xa146, 0xbe40, 0xd518, 0xb4a6, 0x59d2, 0x1, 0x1);
        gbc.writeMem(0x2a98, { 0xa2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa146, gbc.sp());
        EXPECT(0x2a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03D7
        gbc.setState(0xa2b0, 0xf432, 0x21e0, 0x6b9d, 0xce12, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0xa2b0, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa2b0));
        // A2 03D9
        gbc.setState(0x5efd, 0xaac0, 0xd870, 0xa553, 0x5167, 0xb643, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaac0, gbc.sp());
        EXPECT(0x5efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03DA
        gbc.setState(0x9d65, 0x1599, 0x7b10, 0x5b88, 0xeff, 0x9877, 0x1, 0x1);
        gbc.writeMem(0x9d65, { 0xa2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0x9d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9d65));
        // A2 03DB
        gbc.setState(0xc622, 0x1848, 0x92b0, 0x17df, 0x8d90, 0xe6ce, 0x1, 0x1);
        gbc.writeMem(0xc622, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1848, gbc.sp());
        EXPECT(0xc623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc622));
        // A2 03DC
        gbc.setState(0xe7b5, 0x777b, 0xb950, 0xcd66, 0xe6d7, 0x75b5, 0x0, 0x0);
        gbc.writeMem(0xe7b5, { 0xa2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x777b, gbc.sp());
        EXPECT(0xe7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe7b5));
        // A2 03DD
        gbc.setState(0x1a53, 0x5b79, 0x85d0, 0xb0c8, 0xca9e, 0x241c, 0x0, 0x0);
        gbc.writeMem(0x1a53, { 0xa2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0x1a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03DE
        gbc.setState(0xfce, 0x7b27, 0xc880, 0x2c0f, 0x153f, 0x7680, 0x0, 0x0);
        gbc.writeMem(0xfce, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7b27, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03DF
        gbc.setState(0xfb8, 0xd3ab, 0x49d0, 0xc010, 0x3821, 0x5860, 0x1, 0x0);
        gbc.writeMem(0xfb8, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0xfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03E0
        gbc.setState(0xbf69, 0xfa27, 0xa930, 0x951e, 0x9bd0, 0x73fc, 0x1, 0x1);
        gbc.writeMem(0xbf69, { 0xa2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0xbf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbf69));
        // A2 03E1
        gbc.setState(0x93c3, 0x8a85, 0x500, 0xc0ab, 0x2ac8, 0xe0e0, 0x0, 0x1);
        gbc.writeMem(0x93c3, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8a85, gbc.sp());
        EXPECT(0x93c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x93c3));
        // A2 03E2
        gbc.setState(0xb6a7, 0x45a1, 0x1cc0, 0x9e8e, 0x8332, 0x898, 0x0, 0x0);
        gbc.writeMem(0xb6a7, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x45a1, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb6a7));
        // A2 03E3
        gbc.setState(0xb41d, 0x5dad, 0x710, 0xbe80, 0x8c5, 0x3c50, 0x0, 0x1);
        gbc.writeMem(0xb41d, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5dad, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb41d));
        // A2 03E5
        gbc.setState(0x23df, 0xb79a, 0x6010, 0x4543, 0x9046, 0x36b1, 0x1, 0x0);
        gbc.writeMem(0x23df, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb79a, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A2 03E6
        gbc.setState(0xc5bc, 0xc1b6, 0x3650, 0xf521, 0xa2ee, 0x5f31, 0x0, 0x1);
        gbc.writeMem(0xc5bc, { 0xa2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc1b6, gbc.sp());
        EXPECT(0xc5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc5bc));
        // A2 03E7
        gbc.setState(0xcd5f, 0xc9, 0x5160, 0x28c1, 0xc6f, 0xfea3, 0x0, 0x1);
        gbc.writeMem(0xcd5f, { 0xa2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc9, gbc.sp());
        EXPECT(0xcd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcd5f));
    }
