    TEST(gbcemu, opcode_cb_fb) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FB 0000
        gbc.setState(0x6699, 0xa205, 0xf230, 0x7fc5, 0xf52a, 0x2266, 0x1, 0x0);
        gbc.writeMem(0x6699, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa205, gbc.sp());
        EXPECT(0x669b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0001
        gbc.setState(0xd1da, 0x1b7, 0x1170, 0xda, 0x73c, 0xceae, 0x0, 0x1);
        gbc.writeMem(0xd1da, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1b7, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1da));
        EXPECT(0xfb, gbc.readMem(0xd1db));
        // CB FB 0002
        gbc.setState(0x5a9, 0x946f, 0x2e10, 0xb69a, 0xaede, 0x40c1, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0003
        gbc.setState(0x79fd, 0xdf33, 0x2360, 0x9308, 0x6977, 0x79c0, 0x0, 0x0);
        gbc.writeMem(0x79fd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdf33, gbc.sp());
        EXPECT(0x79ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0004
        gbc.setState(0x2aff, 0xe151, 0xf940, 0xc24, 0x5d8c, 0x7e91, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe151, gbc.sp());
        EXPECT(0x2b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0005
        gbc.setState(0xec57, 0xeaed, 0x8de0, 0x8452, 0xa7b4, 0x9978, 0x0, 0x1);
        gbc.writeMem(0xec57, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeaed, gbc.sp());
        EXPECT(0xec59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec57));
        EXPECT(0xfb, gbc.readMem(0xec58));
        // CB FB 0006
        gbc.setState(0xef99, 0x7d4d, 0x82a0, 0xed6b, 0x377d, 0xbc8e, 0x0, 0x0);
        gbc.writeMem(0xef99, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef99));
        EXPECT(0xfb, gbc.readMem(0xef9a));
        // CB FB 0007
        gbc.setState(0x8d41, 0xd36c, 0xb40, 0xe0e5, 0xd81b, 0x34d4, 0x0, 0x1);
        gbc.writeMem(0x8d41, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0x8d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d41));
        EXPECT(0xfb, gbc.readMem(0x8d42));
        // CB FB 0008
        gbc.setState(0x7ea3, 0xbb63, 0x6140, 0x13d5, 0xab86, 0x256e, 0x0, 0x1);
        gbc.writeMem(0x7ea3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0x7ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0009
        gbc.setState(0x90de, 0x24c3, 0x6740, 0x499e, 0xb6db, 0x8ac1, 0x1, 0x1);
        gbc.writeMem(0x90de, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x24c3, gbc.sp());
        EXPECT(0x90e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90de));
        EXPECT(0xfb, gbc.readMem(0x90df));
        // CB FB 000A
        gbc.setState(0x46ff, 0x921d, 0x8e80, 0x841d, 0x1a11, 0xb593, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x921d, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 000B
        gbc.setState(0x26d3, 0xf2a, 0x4380, 0x1e05, 0xd9b3, 0x8dea, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf2a, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 000C
        gbc.setState(0x459b, 0x7d05, 0x69b0, 0x9b9f, 0x43de, 0xfa5a, 0x1, 0x0);
        gbc.writeMem(0x459b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7d05, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 000D
        gbc.setState(0x83c, 0x1cc4, 0x9210, 0x5dff, 0xb1d4, 0xd4d, 0x0, 0x0);
        gbc.writeMem(0x83c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 000E
        gbc.setState(0xd46c, 0xda08, 0xcff0, 0xbcb, 0x1e5, 0xddd0, 0x1, 0x0);
        gbc.writeMem(0xd46c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0xd46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46c));
        EXPECT(0xfb, gbc.readMem(0xd46d));
        // CB FB 000F
        gbc.setState(0x7295, 0xf3c1, 0x6a60, 0x2188, 0xecae, 0xa38d, 0x0, 0x0);
        gbc.writeMem(0x7295, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf3c1, gbc.sp());
        EXPECT(0x7297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0010
        gbc.setState(0x4f12, 0x5db1, 0x52c0, 0x639b, 0x5dfc, 0xebd1, 0x0, 0x0);
        gbc.writeMem(0x4f12, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x4f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0011
        gbc.setState(0xbc1b, 0xd967, 0x42e0, 0xbb15, 0xad9, 0x804c, 0x1, 0x1);
        gbc.writeMem(0xbc1b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0xbc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1b));
        EXPECT(0xfb, gbc.readMem(0xbc1c));
        // CB FB 0012
        gbc.setState(0x798f, 0x6be, 0xf5a0, 0x3b19, 0x3955, 0xfcf0, 0x1, 0x1);
        gbc.writeMem(0x798f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6be, gbc.sp());
        EXPECT(0x7991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0014
        gbc.setState(0x55e, 0x3295, 0xeb00, 0x7329, 0xaa4b, 0x24da, 0x1, 0x1);
        gbc.writeMem(0x55e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0015
        gbc.setState(0x9e01, 0x9f20, 0x7710, 0x23bb, 0x4c24, 0x63bd, 0x1, 0x1);
        gbc.writeMem(0x9e01, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e01));
        EXPECT(0xfb, gbc.readMem(0x9e02));
        // CB FB 0016
        gbc.setState(0xef00, 0xc095, 0x7670, 0xc422, 0xb586, 0xb908, 0x0, 0x0);
        gbc.writeMem(0xef00, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc095, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef00));
        EXPECT(0xfb, gbc.readMem(0xef01));
        // CB FB 0017
        gbc.setState(0x7aa3, 0x1371, 0x2de0, 0x73b, 0x30ad, 0x2c0c, 0x1, 0x0);
        gbc.writeMem(0x7aa3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1371, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0018
        gbc.setState(0x2ab1, 0xb123, 0x4a10, 0x508b, 0x3e11, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0019
        gbc.setState(0x76ea, 0x88f6, 0xb400, 0x497, 0x1ee5, 0xcd04, 0x1, 0x1);
        gbc.writeMem(0x76ea, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x76ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 001A
        gbc.setState(0x9256, 0xd115, 0x85d0, 0xbf4f, 0xa74f, 0x8084, 0x1, 0x0);
        gbc.writeMem(0x9256, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd115, gbc.sp());
        EXPECT(0x9258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9256));
        EXPECT(0xfb, gbc.readMem(0x9257));
        // CB FB 001B
        gbc.setState(0x2742, 0x65d, 0x6950, 0xee0c, 0x9d99, 0xe03, 0x0, 0x0);
        gbc.writeMem(0x2742, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x65d, gbc.sp());
        EXPECT(0x2744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 001C
        gbc.setState(0x31b6, 0x8550, 0x1590, 0xb0eb, 0x2890, 0x50bf, 0x1, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0x31b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 001D
        gbc.setState(0x9756, 0x9bd9, 0x54d0, 0xe268, 0xa439, 0x7035, 0x0, 0x1);
        gbc.writeMem(0x9756, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x9758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9756));
        EXPECT(0xfb, gbc.readMem(0x9757));
        // CB FB 001E
        gbc.setState(0xba85, 0x34a9, 0x9d60, 0x8c71, 0x949c, 0x20d2, 0x0, 0x0);
        gbc.writeMem(0xba85, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x34a9, gbc.sp());
        EXPECT(0xba87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba85));
        EXPECT(0xfb, gbc.readMem(0xba86));
        // CB FB 001F
        gbc.setState(0x7ef7, 0xf9c7, 0x2e20, 0x5d2, 0xc65e, 0xe91, 0x0, 0x0);
        gbc.writeMem(0x7ef7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf9c7, gbc.sp());
        EXPECT(0x7ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0020
        gbc.setState(0x47fb, 0x986d, 0xe680, 0xaa9e, 0xc14f, 0xdbba, 0x1, 0x0);
        gbc.writeMem(0x47fb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x986d, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0021
        gbc.setState(0x982, 0xb6b1, 0x6d40, 0xe1c3, 0x1735, 0xc56c, 0x1, 0x0);
        gbc.writeMem(0x982, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0x984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0022
        gbc.setState(0xb9be, 0xe16e, 0xad30, 0x91da, 0x8584, 0xb78f, 0x0, 0x1);
        gbc.writeMem(0xb9be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0xb9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9be));
        EXPECT(0xfb, gbc.readMem(0xb9bf));
        // CB FB 0023
        gbc.setState(0xebaa, 0xf895, 0xa4a0, 0x9e62, 0x5a50, 0xd735, 0x0, 0x0);
        gbc.writeMem(0xebaa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0xebac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebaa));
        EXPECT(0xfb, gbc.readMem(0xebab));
        // CB FB 0024
        gbc.setState(0x8b58, 0xbc69, 0xc250, 0xf7c8, 0x871d, 0x803f, 0x0, 0x0);
        gbc.writeMem(0x8b58, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0x8b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b58));
        EXPECT(0xfb, gbc.readMem(0x8b59));
        // CB FB 0025
        gbc.setState(0xac88, 0xc39e, 0x9c10, 0xbcae, 0xe507, 0x15d8, 0x0, 0x0);
        gbc.writeMem(0xac88, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc39e, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0xfb, gbc.readMem(0xac89));
        // CB FB 0026
        gbc.setState(0x84e1, 0x7c5a, 0xc1a0, 0x1229, 0x2b89, 0x39b7, 0x1, 0x0);
        gbc.writeMem(0x84e1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7c5a, gbc.sp());
        EXPECT(0x84e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e1));
        EXPECT(0xfb, gbc.readMem(0x84e2));
        // CB FB 0027
        gbc.setState(0x6ee9, 0xc309, 0xa1e0, 0xace7, 0x292f, 0x76cd, 0x0, 0x1);
        gbc.writeMem(0x6ee9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc309, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0028
        gbc.setState(0x934e, 0x58cb, 0xdd00, 0x7278, 0x844, 0xdb87, 0x1, 0x0);
        gbc.writeMem(0x934e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58cb, gbc.sp());
        EXPECT(0x9350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934e));
        EXPECT(0xfb, gbc.readMem(0x934f));
        // CB FB 0029
        gbc.setState(0x39b6, 0x31b1, 0xc0d0, 0xbf2e, 0xab07, 0x2a35, 0x0, 0x0);
        gbc.writeMem(0x39b6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x31b1, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 002A
        gbc.setState(0x631d, 0x367a, 0x8d70, 0xc839, 0xee6b, 0xa4b9, 0x1, 0x1);
        gbc.writeMem(0x631d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x367a, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 002B
        gbc.setState(0x11fe, 0x614f, 0xee90, 0xdd09, 0xda79, 0xde9a, 0x0, 0x0);
        gbc.writeMem(0x11fe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x614f, gbc.sp());
        EXPECT(0x1200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 002C
        gbc.setState(0x67f5, 0x310, 0xd000, 0xf0b3, 0x2ca6, 0xcef1, 0x1, 0x0);
        gbc.writeMem(0x67f5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x310, gbc.sp());
        EXPECT(0x67f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 002D
        gbc.setState(0xd990, 0x72c5, 0x2240, 0xb8f8, 0x2eef, 0xf4a4, 0x0, 0x1);
        gbc.writeMem(0xd990, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd990));
        EXPECT(0xfb, gbc.readMem(0xd991));
        // CB FB 002E
        gbc.setState(0x145, 0x525, 0x6ea0, 0xe18c, 0x11c8, 0x94ee, 0x1, 0x1);
        gbc.writeMem(0x145, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0x147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 002F
        gbc.setState(0xb588, 0xe97c, 0xb3d0, 0x36eb, 0x24d3, 0xcad3, 0x0, 0x1);
        gbc.writeMem(0xb588, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe97c, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb588));
        EXPECT(0xfb, gbc.readMem(0xb589));
        // CB FB 0030
        gbc.setState(0x4cb2, 0x7fae, 0x6e60, 0xab36, 0x647f, 0x91b4, 0x0, 0x1);
        gbc.writeMem(0x4cb2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x4cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0031
        gbc.setState(0xbbae, 0xd145, 0xcdd0, 0xa15e, 0x5fc7, 0xc70e, 0x0, 0x1);
        gbc.writeMem(0xbbae, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbae));
        EXPECT(0xfb, gbc.readMem(0xbbaf));
        // CB FB 0032
        gbc.setState(0xe03f, 0x3e0e, 0x7f60, 0x2f68, 0x4b4, 0xc01, 0x0, 0x1);
        gbc.writeMem(0xe03f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0xe041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03f));
        EXPECT(0xfb, gbc.readMem(0xe040));
        // CB FB 0033
        gbc.setState(0x371, 0xb36c, 0xcfe0, 0xbdf0, 0x2a57, 0xee2d, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0034
        gbc.setState(0xdf82, 0x83be, 0x63e0, 0x194c, 0x3416, 0x2572, 0x1, 0x0);
        gbc.writeMem(0xdf82, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0xdf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf82));
        EXPECT(0xfb, gbc.readMem(0xdf83));
        // CB FB 0035
        gbc.setState(0x9275, 0xe2df, 0xbea0, 0x69e8, 0xf0a, 0x5e78, 0x0, 0x1);
        gbc.writeMem(0x9275, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9275));
        EXPECT(0xfb, gbc.readMem(0x9276));
        // CB FB 0036
        gbc.setState(0xd600, 0x4d5, 0x3420, 0xbf2f, 0x376b, 0xec57, 0x0, 0x1);
        gbc.writeMem(0xd600, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0xd602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd600));
        EXPECT(0xfb, gbc.readMem(0xd601));
        // CB FB 0037
        gbc.setState(0x4bdc, 0x3e8a, 0x4140, 0x3cad, 0x19d5, 0x3bc7, 0x0, 0x0);
        gbc.writeMem(0x4bdc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e8a, gbc.sp());
        EXPECT(0x4bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0038
        gbc.setState(0x47fc, 0xf809, 0x5e70, 0x15da, 0x5e18, 0x5498, 0x1, 0x0);
        gbc.writeMem(0x47fc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf809, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0039
        gbc.setState(0xeb55, 0xa55a, 0xa390, 0x3c17, 0x7f34, 0x6561, 0x1, 0x0);
        gbc.writeMem(0xeb55, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb55));
        EXPECT(0xfb, gbc.readMem(0xeb56));
        // CB FB 003A
        gbc.setState(0x64a2, 0x23f2, 0xe370, 0x6a4d, 0x3db4, 0x5e27, 0x0, 0x1);
        gbc.writeMem(0x64a2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x23f2, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 003B
        gbc.setState(0xca8a, 0x5a3d, 0x9020, 0x90c2, 0x6d11, 0xbf66, 0x0, 0x0);
        gbc.writeMem(0xca8a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0xca8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8a));
        EXPECT(0xfb, gbc.readMem(0xca8b));
        // CB FB 003C
        gbc.setState(0xda7c, 0xbcd7, 0x8be0, 0x95d9, 0x2df8, 0xf0ec, 0x0, 0x1);
        gbc.writeMem(0xda7c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0xda7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7c));
        EXPECT(0xfb, gbc.readMem(0xda7d));
        // CB FB 003D
        gbc.setState(0x310a, 0x82db, 0xfdf0, 0x89af, 0x8c1b, 0xcc31, 0x0, 0x1);
        gbc.writeMem(0x310a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x82db, gbc.sp());
        EXPECT(0x310c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 003E
        gbc.setState(0x9e87, 0x3536, 0xcc20, 0x9733, 0xecad, 0xd169, 0x1, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e87));
        EXPECT(0xfb, gbc.readMem(0x9e88));
        // CB FB 003F
        gbc.setState(0xdd59, 0x6209, 0x3710, 0x38f1, 0x96d, 0x547a, 0x0, 0x1);
        gbc.writeMem(0xdd59, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6209, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0xfb, gbc.readMem(0xdd5a));
        // CB FB 0041
        gbc.setState(0xa04d, 0x7568, 0xfbf0, 0xec06, 0x2d9b, 0xaee2, 0x0, 0x0);
        gbc.writeMem(0xa04d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0xa04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04d));
        EXPECT(0xfb, gbc.readMem(0xa04e));
        // CB FB 0042
        gbc.setState(0x370f, 0x38df, 0x4c30, 0x58f0, 0x369a, 0x6e07, 0x1, 0x0);
        gbc.writeMem(0x370f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0x3711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0043
        gbc.setState(0x658b, 0x320c, 0x2c50, 0x78d2, 0x3d46, 0xeac0, 0x1, 0x0);
        gbc.writeMem(0x658b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0x658d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0044
        gbc.setState(0xda83, 0x6ab2, 0xdda0, 0x3274, 0x1233, 0xc416, 0x0, 0x1);
        gbc.writeMem(0xda83, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda83));
        EXPECT(0xfb, gbc.readMem(0xda84));
        // CB FB 0045
        gbc.setState(0xa8da, 0xb1d, 0x85d0, 0xaaf3, 0x2c8e, 0x41fb, 0x1, 0x1);
        gbc.writeMem(0xa8da, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb1d, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8da));
        EXPECT(0xfb, gbc.readMem(0xa8db));
        // CB FB 0046
        gbc.setState(0xe528, 0xf6ce, 0x4050, 0xe3a4, 0x8453, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0xe528, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0xe52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe528));
        EXPECT(0xfb, gbc.readMem(0xe529));
        // CB FB 0047
        gbc.setState(0xa246, 0x6f35, 0xf5c0, 0xbefb, 0x4e4a, 0x4655, 0x0, 0x0);
        gbc.writeMem(0xa246, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa246));
        EXPECT(0xfb, gbc.readMem(0xa247));
        // CB FB 0048
        gbc.setState(0xb6b1, 0xe946, 0x6b40, 0xd6d8, 0x6680, 0x4de, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe946, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b1));
        EXPECT(0xfb, gbc.readMem(0xb6b2));
        // CB FB 0049
        gbc.setState(0x9133, 0x4907, 0xc110, 0x3056, 0xbf1, 0x22c9, 0x1, 0x1);
        gbc.writeMem(0x9133, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0x9135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9133));
        EXPECT(0xfb, gbc.readMem(0x9134));
        // CB FB 004A
        gbc.setState(0x496e, 0x2c68, 0x2eb0, 0x2d26, 0x8315, 0xd863, 0x0, 0x0);
        gbc.writeMem(0x496e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c68, gbc.sp());
        EXPECT(0x4970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 004B
        gbc.setState(0x79fc, 0xf2d6, 0x8720, 0xaa0b, 0xbf46, 0xd589, 0x0, 0x1);
        gbc.writeMem(0x79fc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0x79fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 004C
        gbc.setState(0xba06, 0xa932, 0xa7d0, 0x4bc, 0xc8c8, 0x5f67, 0x1, 0x1);
        gbc.writeMem(0xba06, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba06));
        EXPECT(0xfb, gbc.readMem(0xba07));
        // CB FB 004D
        gbc.setState(0xb78, 0xa712, 0x14d0, 0x6daf, 0xd705, 0x7e8f, 0x1, 0x1);
        gbc.writeMem(0xb78, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 004E
        gbc.setState(0xa9a7, 0x1ecd, 0x3450, 0x7793, 0xfc25, 0xb79c, 0x0, 0x1);
        gbc.writeMem(0xa9a7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1ecd, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a7));
        EXPECT(0xfb, gbc.readMem(0xa9a8));
        // CB FB 0050
        gbc.setState(0xdd72, 0x9bde, 0x6530, 0x4aff, 0x4127, 0xacf6, 0x0, 0x0);
        gbc.writeMem(0xdd72, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9bde, gbc.sp());
        EXPECT(0xdd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd72));
        EXPECT(0xfb, gbc.readMem(0xdd73));
        // CB FB 0051
        gbc.setState(0x75f0, 0xc690, 0x1010, 0xc97f, 0x6f57, 0x51d, 0x1, 0x1);
        gbc.writeMem(0x75f0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0052
        gbc.setState(0x92c2, 0xf381, 0xc5f0, 0xd681, 0x240e, 0xf910, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c2));
        EXPECT(0xfb, gbc.readMem(0x92c3));
        // CB FB 0053
        gbc.setState(0x6194, 0x6c6e, 0x570, 0x987, 0xa3ad, 0x9df4, 0x0, 0x1);
        gbc.writeMem(0x6194, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6c6e, gbc.sp());
        EXPECT(0x6196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0054
        gbc.setState(0xb921, 0xbb46, 0xb2f0, 0xeb71, 0x4ab4, 0xdd54, 0x0, 0x0);
        gbc.writeMem(0xb921, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbb46, gbc.sp());
        EXPECT(0xb923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb921));
        EXPECT(0xfb, gbc.readMem(0xb922));
        // CB FB 0055
        gbc.setState(0xce7f, 0x6996, 0x9360, 0xaee7, 0x28bd, 0x5bda, 0x0, 0x0);
        gbc.writeMem(0xce7f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0xce81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7f));
        EXPECT(0xfb, gbc.readMem(0xce80));
        // CB FB 0057
        gbc.setState(0xa4cc, 0x8a40, 0x61e0, 0x48c7, 0x7845, 0xdbb6, 0x0, 0x1);
        gbc.writeMem(0xa4cc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8a40, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cc));
        EXPECT(0xfb, gbc.readMem(0xa4cd));
        // CB FB 0058
        gbc.setState(0x632, 0xa83f, 0x94c0, 0xbd0, 0xba01, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0x632, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0x634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0059
        gbc.setState(0x202c, 0xcb24, 0x4640, 0x1c73, 0x8154, 0x5beb, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 005A
        gbc.setState(0x510a, 0xa71f, 0x65a0, 0x78f, 0x532, 0xc00a, 0x0, 0x0);
        gbc.writeMem(0x510a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa71f, gbc.sp());
        EXPECT(0x510c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 005B
        gbc.setState(0xb0a6, 0xe38b, 0xc640, 0x231b, 0x1c19, 0xb9cb, 0x0, 0x1);
        gbc.writeMem(0xb0a6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0xb0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a6));
        EXPECT(0xfb, gbc.readMem(0xb0a7));
        // CB FB 005C
        gbc.setState(0x5049, 0x47d5, 0x1920, 0x22df, 0x5e62, 0x3e7f, 0x0, 0x0);
        gbc.writeMem(0x5049, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x47d5, gbc.sp());
        EXPECT(0x504b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 005D
        gbc.setState(0x982e, 0x5938, 0x1c00, 0x5144, 0xf447, 0xe458, 0x1, 0x0);
        gbc.writeMem(0x982e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5938, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982e));
        EXPECT(0xfb, gbc.readMem(0x982f));
        // CB FB 005E
        gbc.setState(0xec4d, 0x8f9d, 0x8150, 0xa50b, 0x69d7, 0xf4ec, 0x1, 0x1);
        gbc.writeMem(0xec4d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4d));
        EXPECT(0xfb, gbc.readMem(0xec4e));
        // CB FB 005F
        gbc.setState(0xe83c, 0xed46, 0xe850, 0x7e35, 0x4965, 0xe4b8, 0x0, 0x1);
        gbc.writeMem(0xe83c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0xe83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83c));
        EXPECT(0xfb, gbc.readMem(0xe83d));
        // CB FB 0060
        gbc.setState(0x4b63, 0x34b, 0x4400, 0x3a07, 0xd2f9, 0xf37a, 0x1, 0x1);
        gbc.writeMem(0x4b63, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x34b, gbc.sp());
        EXPECT(0x4b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0061
        gbc.setState(0x9608, 0x420, 0xeda0, 0x3c27, 0x17ec, 0x407c, 0x1, 0x0);
        gbc.writeMem(0x9608, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x420, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9608));
        EXPECT(0xfb, gbc.readMem(0x9609));
        // CB FB 0062
        gbc.setState(0x7546, 0x33c2, 0x8d00, 0xbf00, 0x8be8, 0x71b, 0x0, 0x1);
        gbc.writeMem(0x7546, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x33c2, gbc.sp());
        EXPECT(0x7548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0063
        gbc.setState(0x4037, 0xe07f, 0x4460, 0x4ebb, 0xcfc0, 0xfeb1, 0x1, 0x0);
        gbc.writeMem(0x4037, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe07f, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0064
        gbc.setState(0x3e65, 0xde04, 0x9fa0, 0xccca, 0x53b0, 0x1285, 0x1, 0x0);
        gbc.writeMem(0x3e65, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde04, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0065
        gbc.setState(0xe8e, 0x85ed, 0xc1f0, 0xa836, 0x7f2, 0x2ce9, 0x1, 0x0);
        gbc.writeMem(0xe8e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x85ed, gbc.sp());
        EXPECT(0xe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0066
        gbc.setState(0x3667, 0x9b90, 0xffc0, 0x2abc, 0x4dd3, 0x9f57, 0x1, 0x1);
        gbc.writeMem(0x3667, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0x3669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0067
        gbc.setState(0x750, 0x82b6, 0x5bf0, 0x78c6, 0xb626, 0x50c3, 0x1, 0x0);
        gbc.writeMem(0x750, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0x752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0068
        gbc.setState(0xd59f, 0xac39, 0xe60, 0x37af, 0xace, 0x2190, 0x0, 0x1);
        gbc.writeMem(0xd59f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59f));
        EXPECT(0xfb, gbc.readMem(0xd5a0));
        // CB FB 0069
        gbc.setState(0xafcc, 0x5b43, 0xe790, 0x4ae3, 0x830b, 0xe062, 0x0, 0x1);
        gbc.writeMem(0xafcc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5b43, gbc.sp());
        EXPECT(0xafce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcc));
        EXPECT(0xfb, gbc.readMem(0xafcd));
        // CB FB 006A
        gbc.setState(0x1325, 0x879a, 0xabc0, 0xdea6, 0xa6d6, 0xb7af, 0x0, 0x0);
        gbc.writeMem(0x1325, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0x1327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 006B
        gbc.setState(0xb520, 0x9846, 0xf440, 0xa235, 0x3b8, 0xa292, 0x0, 0x1);
        gbc.writeMem(0xb520, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0xb522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb520));
        EXPECT(0xfb, gbc.readMem(0xb521));
        // CB FB 006C
        gbc.setState(0x754d, 0xafd0, 0x71b0, 0xebfd, 0x93c3, 0x7897, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xafd0, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 006D
        gbc.setState(0x8243, 0x3635, 0xa4b0, 0xb271, 0xf657, 0xd476, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3635, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8243));
        EXPECT(0xfb, gbc.readMem(0x8244));
        // CB FB 006E
        gbc.setState(0x5578, 0x7435, 0x84d0, 0x48fa, 0x3597, 0x35a1, 0x0, 0x0);
        gbc.writeMem(0x5578, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7435, gbc.sp());
        EXPECT(0x557a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 006F
        gbc.setState(0x64ed, 0x73fa, 0xd140, 0xe770, 0x4009, 0x78c8, 0x1, 0x1);
        gbc.writeMem(0x64ed, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x73fa, gbc.sp());
        EXPECT(0x64ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0070
        gbc.setState(0xab07, 0x8c5d, 0x8b10, 0xbf8a, 0x2219, 0xa968, 0x1, 0x0);
        gbc.writeMem(0xab07, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8c5d, gbc.sp());
        EXPECT(0xab09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab07));
        EXPECT(0xfb, gbc.readMem(0xab08));
        // CB FB 0071
        gbc.setState(0xa5f9, 0xfe45, 0x80d0, 0x5d58, 0x397d, 0xa721, 0x1, 0x1);
        gbc.writeMem(0xa5f9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfe45, gbc.sp());
        EXPECT(0xa5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f9));
        EXPECT(0xfb, gbc.readMem(0xa5fa));
        // CB FB 0072
        gbc.setState(0x3c11, 0xc1f5, 0x6330, 0x87c8, 0xa8f, 0xfa08, 0x0, 0x0);
        gbc.writeMem(0x3c11, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0x3c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0073
        gbc.setState(0xec2d, 0x76cf, 0xcb40, 0x9907, 0xb9c9, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0xec2d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x76cf, gbc.sp());
        EXPECT(0xec2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2d));
        EXPECT(0xfb, gbc.readMem(0xec2e));
        // CB FB 0074
        gbc.setState(0x8411, 0x4327, 0xf540, 0x5d40, 0xf728, 0x8cd, 0x0, 0x1);
        gbc.writeMem(0x8411, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0x8413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8411));
        EXPECT(0xfb, gbc.readMem(0x8412));
        // CB FB 0076
        gbc.setState(0xc32, 0x2db0, 0x5e00, 0xbebf, 0xdf0f, 0x248b, 0x1, 0x0);
        gbc.writeMem(0xc32, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2db0, gbc.sp());
        EXPECT(0xc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0077
        gbc.setState(0xbbe6, 0x7942, 0x370, 0x3267, 0x1d17, 0xff69, 0x1, 0x0);
        gbc.writeMem(0xbbe6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe6));
        EXPECT(0xfb, gbc.readMem(0xbbe7));
        // CB FB 0078
        gbc.setState(0x940d, 0x64c8, 0x7ed0, 0xee9c, 0x4946, 0x2861, 0x1, 0x1);
        gbc.writeMem(0x940d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x64c8, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940d));
        EXPECT(0xfb, gbc.readMem(0x940e));
        // CB FB 0079
        gbc.setState(0x3a0e, 0x1d43, 0xfae0, 0xa651, 0x8b3a, 0x9a5b, 0x1, 0x0);
        gbc.writeMem(0x3a0e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 007A
        gbc.setState(0x975a, 0xbeaa, 0xcf90, 0xd03a, 0xc91e, 0x2316, 0x0, 0x0);
        gbc.writeMem(0x975a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0x975c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975a));
        EXPECT(0xfb, gbc.readMem(0x975b));
        // CB FB 007B
        gbc.setState(0x67b4, 0x43fa, 0xf200, 0x6c9a, 0x9c4c, 0x3827, 0x1, 0x0);
        gbc.writeMem(0x67b4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 007C
        gbc.setState(0x38e0, 0xc4f6, 0x1a60, 0x6227, 0x1937, 0xf4fb, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 007D
        gbc.setState(0x54c9, 0x9e4c, 0xc0d0, 0x39d8, 0x3bda, 0xa5c6, 0x0, 0x0);
        gbc.writeMem(0x54c9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9e4c, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 007E
        gbc.setState(0x772d, 0x1eb7, 0x87e0, 0xe1db, 0x8e00, 0xb200, 0x0, 0x1);
        gbc.writeMem(0x772d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0080
        gbc.setState(0x9bdb, 0x2f7e, 0x7c20, 0x23ca, 0x20f5, 0x8433, 0x0, 0x1);
        gbc.writeMem(0x9bdb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f7e, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdb));
        EXPECT(0xfb, gbc.readMem(0x9bdc));
        // CB FB 0081
        gbc.setState(0x9789, 0x6805, 0x8310, 0x29c9, 0x1ff9, 0xa4f5, 0x1, 0x0);
        gbc.writeMem(0x9789, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0x978b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9789));
        EXPECT(0xfb, gbc.readMem(0x978a));
        // CB FB 0083
        gbc.setState(0x2379, 0x6258, 0x5c00, 0x28c, 0xf4e0, 0xf7e8, 0x0, 0x0);
        gbc.writeMem(0x2379, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6258, gbc.sp());
        EXPECT(0x237b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0084
        gbc.setState(0xb415, 0x22fe, 0x76b0, 0x3749, 0xa151, 0x9b0e, 0x0, 0x0);
        gbc.writeMem(0xb415, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0xb417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb415));
        EXPECT(0xfb, gbc.readMem(0xb416));
        // CB FB 0085
        gbc.setState(0xe580, 0xa461, 0xcf00, 0x61cd, 0x7ef0, 0xa4d6, 0x0, 0x0);
        gbc.writeMem(0xe580, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0xfb, gbc.readMem(0xe581));
        // CB FB 0086
        gbc.setState(0x2890, 0x641a, 0xb370, 0xe513, 0xd8b6, 0x8b6b, 0x0, 0x0);
        gbc.writeMem(0x2890, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x641a, gbc.sp());
        EXPECT(0x2892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0087
        gbc.setState(0x6b47, 0x8645, 0xaf60, 0x372b, 0x2479, 0xc2c6, 0x1, 0x1);
        gbc.writeMem(0x6b47, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8645, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0088
        gbc.setState(0xc7ff, 0xc2d5, 0x8920, 0xa8d2, 0x8d01, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0xc7ff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0xc801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ff));
        EXPECT(0xfb, gbc.readMem(0xc800));
        // CB FB 0089
        gbc.setState(0x1919, 0x7545, 0x810, 0xd5ff, 0xa7ef, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0x1919, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7545, gbc.sp());
        EXPECT(0x191b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 008A
        gbc.setState(0x24dd, 0x855a, 0x6cf0, 0xdaee, 0x3ddf, 0xde61, 0x0, 0x1);
        gbc.writeMem(0x24dd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 008B
        gbc.setState(0xdcf6, 0x74d2, 0x43f0, 0xb156, 0xddb4, 0x5b3b, 0x1, 0x0);
        gbc.writeMem(0xdcf6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf6));
        EXPECT(0xfb, gbc.readMem(0xdcf7));
        // CB FB 008D
        gbc.setState(0x2ca9, 0x7db7, 0xb90, 0x783, 0xbc2b, 0x7a66, 0x1, 0x1);
        gbc.writeMem(0x2ca9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x2cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 008E
        gbc.setState(0x89b, 0x8db8, 0x8b70, 0xe810, 0xc4dc, 0x498d, 0x0, 0x1);
        gbc.writeMem(0x89b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 008F
        gbc.setState(0x3e9c, 0xf18b, 0x3500, 0x7171, 0xf6fc, 0x8fc7, 0x1, 0x1);
        gbc.writeMem(0x3e9c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf18b, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0090
        gbc.setState(0x868b, 0xb84e, 0x2e60, 0xcadc, 0x747d, 0x1946, 0x0, 0x1);
        gbc.writeMem(0x868b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0x868d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868b));
        EXPECT(0xfb, gbc.readMem(0x868c));
        // CB FB 0091
        gbc.setState(0xcd50, 0x9310, 0x32e0, 0x6533, 0xf47a, 0xe6ee, 0x0, 0x0);
        gbc.writeMem(0xcd50, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0xcd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd50));
        EXPECT(0xfb, gbc.readMem(0xcd51));
        // CB FB 0092
        gbc.setState(0x471b, 0xefd4, 0xa670, 0xa887, 0x1b4b, 0xb059, 0x0, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xefd4, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0093
        gbc.setState(0x7df9, 0x4b37, 0xa180, 0xfc37, 0x2231, 0x8772, 0x0, 0x1);
        gbc.writeMem(0x7df9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0094
        gbc.setState(0xc9c7, 0xe023, 0x5da0, 0x8ae0, 0xc4ff, 0x3e63, 0x1, 0x0);
        gbc.writeMem(0xc9c7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0xc9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c7));
        EXPECT(0xfb, gbc.readMem(0xc9c8));
        // CB FB 0095
        gbc.setState(0x3720, 0x8d91, 0x4ed0, 0x40f5, 0x7950, 0xa5, 0x0, 0x1);
        gbc.writeMem(0x3720, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8d91, gbc.sp());
        EXPECT(0x3722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0096
        gbc.setState(0xee12, 0x3e9f, 0xe6a0, 0xefed, 0xc6aa, 0xcf88, 0x0, 0x0);
        gbc.writeMem(0xee12, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3e9f, gbc.sp());
        EXPECT(0xee14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee12));
        EXPECT(0xfb, gbc.readMem(0xee13));
        // CB FB 0097
        gbc.setState(0xd4c6, 0x7009, 0x6f50, 0x4df5, 0xa1b8, 0x3ad, 0x1, 0x0);
        gbc.writeMem(0xd4c6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7009, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c6));
        EXPECT(0xfb, gbc.readMem(0xd4c7));
        // CB FB 0098
        gbc.setState(0xe13c, 0xdeb3, 0x1160, 0x15b4, 0x2efa, 0x475c, 0x0, 0x0);
        gbc.writeMem(0xe13c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0xe13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13c));
        EXPECT(0xfb, gbc.readMem(0xe13d));
        // CB FB 0099
        gbc.setState(0x9b7d, 0x29ed, 0xa6a0, 0xf4e1, 0xe97b, 0x6a0d, 0x0, 0x1);
        gbc.writeMem(0x9b7d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7d));
        EXPECT(0xfb, gbc.readMem(0x9b7e));
        // CB FB 009A
        gbc.setState(0x8d59, 0x8af9, 0x4800, 0x5053, 0xa838, 0xe081, 0x0, 0x1);
        gbc.writeMem(0x8d59, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d59));
        EXPECT(0xfb, gbc.readMem(0x8d5a));
        // CB FB 009B
        gbc.setState(0x1178, 0xac67, 0x8d10, 0x7fc, 0x293d, 0xc746, 0x0, 0x1);
        gbc.writeMem(0x1178, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 009C
        gbc.setState(0xba64, 0x67cc, 0x5a50, 0x16f2, 0xf59, 0x69f2, 0x1, 0x1);
        gbc.writeMem(0xba64, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0xba66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba64));
        EXPECT(0xfb, gbc.readMem(0xba65));
        // CB FB 009D
        gbc.setState(0x9a35, 0x37da, 0xb030, 0x2acb, 0x39f1, 0x5186, 0x1, 0x0);
        gbc.writeMem(0x9a35, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x9a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a35));
        EXPECT(0xfb, gbc.readMem(0x9a36));
        // CB FB 009E
        gbc.setState(0xcbbc, 0x238a, 0xc0b0, 0xae4, 0xbdc7, 0x3ec1, 0x0, 0x0);
        gbc.writeMem(0xcbbc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x238a, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbc));
        EXPECT(0xfb, gbc.readMem(0xcbbd));
        // CB FB 009F
        gbc.setState(0x765d, 0xa772, 0xc10, 0xc94a, 0x9a58, 0xfa16, 0x0, 0x0);
        gbc.writeMem(0x765d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa772, gbc.sp());
        EXPECT(0x765f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00A0
        gbc.setState(0x3e45, 0xc834, 0xc2a0, 0x2391, 0x77ae, 0x1c39, 0x1, 0x0);
        gbc.writeMem(0x3e45, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00A1
        gbc.setState(0x9189, 0x84c6, 0x39b0, 0x83ab, 0x40eb, 0xa525, 0x1, 0x0);
        gbc.writeMem(0x9189, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x84c6, gbc.sp());
        EXPECT(0x918b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9189));
        EXPECT(0xfb, gbc.readMem(0x918a));
        // CB FB 00A2
        gbc.setState(0x5d4f, 0x1907, 0x94f0, 0x5780, 0xd42, 0xeb22, 0x1, 0x0);
        gbc.writeMem(0x5d4f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00A3
        gbc.setState(0xd70e, 0x2c20, 0xce10, 0x9907, 0x16c4, 0xeb8c, 0x1, 0x0);
        gbc.writeMem(0xd70e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c20, gbc.sp());
        EXPECT(0xd710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70e));
        EXPECT(0xfb, gbc.readMem(0xd70f));
        // CB FB 00A4
        gbc.setState(0x837a, 0xb62c, 0xfbd0, 0x2977, 0xd461, 0x4c51, 0x1, 0x0);
        gbc.writeMem(0x837a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0x837c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837a));
        EXPECT(0xfb, gbc.readMem(0x837b));
        // CB FB 00A5
        gbc.setState(0x289d, 0x1166, 0x4280, 0x33a8, 0x5b94, 0x7ba0, 0x0, 0x1);
        gbc.writeMem(0x289d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1166, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00A6
        gbc.setState(0x67be, 0xd1b8, 0xa240, 0xb9b8, 0xea3d, 0x1ce0, 0x0, 0x0);
        gbc.writeMem(0x67be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd1b8, gbc.sp());
        EXPECT(0x67c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00A7
        gbc.setState(0xc87b, 0x45fc, 0x5d0, 0x8948, 0x3454, 0x443b, 0x1, 0x1);
        gbc.writeMem(0xc87b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x45fc, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87b));
        EXPECT(0xfb, gbc.readMem(0xc87c));
        // CB FB 00A8
        gbc.setState(0x196, 0xd308, 0x7fa0, 0xc246, 0xc967, 0x8f0, 0x0, 0x0);
        gbc.writeMem(0x196, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd308, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00A9
        gbc.setState(0x40a6, 0x566e, 0x8ed0, 0x434a, 0x3e50, 0x785d, 0x1, 0x0);
        gbc.writeMem(0x40a6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x566e, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00AA
        gbc.setState(0x792d, 0xd662, 0xdb0, 0x77ec, 0x1027, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x792d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd662, gbc.sp());
        EXPECT(0x792f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00AB
        gbc.setState(0xd06f, 0x371e, 0x9cd0, 0xee20, 0x8b84, 0x9bcc, 0x0, 0x0);
        gbc.writeMem(0xd06f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd06f));
        EXPECT(0xfb, gbc.readMem(0xd070));
        // CB FB 00AC
        gbc.setState(0xeaef, 0x1a1c, 0x9570, 0x913d, 0xa089, 0x227b, 0x1, 0x0);
        gbc.writeMem(0xeaef, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1a1c, gbc.sp());
        EXPECT(0xeaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaef));
        EXPECT(0xfb, gbc.readMem(0xeaf0));
        // CB FB 00AD
        gbc.setState(0xdd59, 0xcfe5, 0x1f0, 0x2064, 0x3d1a, 0x7e5f, 0x0, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcfe5, gbc.sp());
        EXPECT(0xdd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd59));
        EXPECT(0xfb, gbc.readMem(0xdd5a));
        // CB FB 00AE
        gbc.setState(0xb706, 0xa4d9, 0x1210, 0xf1bc, 0x8d07, 0xb4cb, 0x1, 0x1);
        gbc.writeMem(0xb706, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa4d9, gbc.sp());
        EXPECT(0xb708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb706));
        EXPECT(0xfb, gbc.readMem(0xb707));
        // CB FB 00AF
        gbc.setState(0x334b, 0x1920, 0xb320, 0x5eb1, 0x9775, 0x1ba5, 0x1, 0x0);
        gbc.writeMem(0x334b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00B0
        gbc.setState(0x8fcf, 0xc752, 0x97b0, 0x4fe1, 0xf981, 0x1b7a, 0x1, 0x1);
        gbc.writeMem(0x8fcf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc752, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcf));
        EXPECT(0xfb, gbc.readMem(0x8fd0));
        // CB FB 00B1
        gbc.setState(0x4576, 0x4035, 0x9cf0, 0x6dca, 0xd38e, 0xf1a8, 0x1, 0x0);
        gbc.writeMem(0x4576, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4035, gbc.sp());
        EXPECT(0x4578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00B2
        gbc.setState(0x3034, 0x28ed, 0x9a80, 0x7f10, 0x855, 0x92b3, 0x1, 0x0);
        gbc.writeMem(0x3034, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00B3
        gbc.setState(0x71d7, 0x7fa8, 0xe3e0, 0xcdf5, 0x2da8, 0x6681, 0x0, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7fa8, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00B5
        gbc.setState(0x1575, 0xf990, 0xa360, 0xa9a, 0x6758, 0xf1e8, 0x0, 0x1);
        gbc.writeMem(0x1575, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x1577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00B6
        gbc.setState(0xa9dd, 0xf290, 0x6f40, 0xe970, 0x6d20, 0x1e5d, 0x1, 0x0);
        gbc.writeMem(0xa9dd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0xfb, gbc.readMem(0xa9de));
        // CB FB 00B7
        gbc.setState(0xfd4, 0x6d11, 0x8960, 0x3ce8, 0x28cf, 0xaf, 0x1, 0x1);
        gbc.writeMem(0xfd4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6d11, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00B8
        gbc.setState(0x5e97, 0xe1a8, 0x250, 0x9638, 0xb054, 0xd6d7, 0x0, 0x1);
        gbc.writeMem(0x5e97, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe1a8, gbc.sp());
        EXPECT(0x5e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00BA
        gbc.setState(0xadac, 0x75a3, 0x8b60, 0xc6ef, 0xc6da, 0x51a0, 0x1, 0x1);
        gbc.writeMem(0xadac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x75a3, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadac));
        EXPECT(0xfb, gbc.readMem(0xadad));
        // CB FB 00BB
        gbc.setState(0xdd71, 0xaac2, 0xc830, 0x3ed4, 0xfd51, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0xdd71, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0xdd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd71));
        EXPECT(0xfb, gbc.readMem(0xdd72));
        // CB FB 00BC
        gbc.setState(0xe8c4, 0xe9b, 0xf7c0, 0x5e49, 0x66b5, 0xf45e, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe9b, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c4));
        EXPECT(0xfb, gbc.readMem(0xe8c5));
        // CB FB 00BD
        gbc.setState(0x2792, 0x6822, 0x25d0, 0x9c0b, 0x21e9, 0x8d0e, 0x0, 0x1);
        gbc.writeMem(0x2792, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00BE
        gbc.setState(0x8dc1, 0x412f, 0x4d40, 0x65ba, 0x2b7b, 0x18c5, 0x0, 0x0);
        gbc.writeMem(0x8dc1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x412f, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc1));
        EXPECT(0xfb, gbc.readMem(0x8dc2));
        // CB FB 00BF
        gbc.setState(0x12c8, 0x2b8, 0xec70, 0xbea1, 0xdb10, 0x84b6, 0x1, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00C0
        gbc.setState(0x89fb, 0xfd16, 0xdc30, 0xc666, 0x49e2, 0xd17e, 0x0, 0x1);
        gbc.writeMem(0x89fb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fb));
        EXPECT(0xfb, gbc.readMem(0x89fc));
        // CB FB 00C1
        gbc.setState(0x1b70, 0xc42a, 0xa400, 0x7223, 0xbc5c, 0xc404, 0x1, 0x0);
        gbc.writeMem(0x1b70, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0x1b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00C2
        gbc.setState(0x4907, 0x919e, 0x9a90, 0x6c12, 0x7317, 0x5d5, 0x1, 0x1);
        gbc.writeMem(0x4907, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x4909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00C3
        gbc.setState(0xbacd, 0xda36, 0xd110, 0x7af1, 0x9c90, 0xe99e, 0x1, 0x1);
        gbc.writeMem(0xbacd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0xbacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacd));
        EXPECT(0xfb, gbc.readMem(0xbace));
        // CB FB 00C4
        gbc.setState(0x3b7c, 0x4757, 0x6460, 0xb532, 0x5dcf, 0x545f, 0x0, 0x1);
        gbc.writeMem(0x3b7c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4757, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00C6
        gbc.setState(0x6603, 0x987e, 0xa000, 0x99ff, 0x4e96, 0x5316, 0x0, 0x0);
        gbc.writeMem(0x6603, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00C7
        gbc.setState(0x8ca7, 0x28d4, 0x9660, 0xd760, 0xd379, 0x1dac, 0x1, 0x1);
        gbc.writeMem(0x8ca7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0xfb, gbc.readMem(0x8ca8));
        // CB FB 00C8
        gbc.setState(0x8480, 0x8bbc, 0xe280, 0xd950, 0xe4e7, 0x4c32, 0x1, 0x1);
        gbc.writeMem(0x8480, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8bbc, gbc.sp());
        EXPECT(0x8482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8480));
        EXPECT(0xfb, gbc.readMem(0x8481));
        // CB FB 00CA
        gbc.setState(0xa768, 0xb83f, 0xf8f0, 0x39e5, 0xf0ad, 0x3af1, 0x1, 0x1);
        gbc.writeMem(0xa768, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb83f, gbc.sp());
        EXPECT(0xa76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa768));
        EXPECT(0xfb, gbc.readMem(0xa769));
        // CB FB 00CB
        gbc.setState(0xb7fb, 0xf661, 0x5a40, 0x2064, 0x367, 0x234, 0x0, 0x0);
        gbc.writeMem(0xb7fb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf661, gbc.sp());
        EXPECT(0xb7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7fb));
        EXPECT(0xfb, gbc.readMem(0xb7fc));
        // CB FB 00CC
        gbc.setState(0xc747, 0x5a4b, 0x9070, 0x2a16, 0x8e4b, 0x4cc4, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5a4b, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc747));
        EXPECT(0xfb, gbc.readMem(0xc748));
        // CB FB 00CD
        gbc.setState(0x859d, 0x854d, 0xbba0, 0xad6c, 0x2f36, 0x4e85, 0x0, 0x0);
        gbc.writeMem(0x859d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0x859f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859d));
        EXPECT(0xfb, gbc.readMem(0x859e));
        // CB FB 00CE
        gbc.setState(0x9a95, 0x9617, 0x1d40, 0xba18, 0x30be, 0xc88d, 0x0, 0x0);
        gbc.writeMem(0x9a95, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0x9a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a95));
        EXPECT(0xfb, gbc.readMem(0x9a96));
        // CB FB 00CF
        gbc.setState(0x23f6, 0xb88e, 0xfcc0, 0xd890, 0x9a38, 0xbcb0, 0x1, 0x0);
        gbc.writeMem(0x23f6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00D0
        gbc.setState(0xe24e, 0x80e1, 0x54b0, 0xdea1, 0xeee2, 0x3b28, 0x0, 0x0);
        gbc.writeMem(0xe24e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x80e1, gbc.sp());
        EXPECT(0xe250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24e));
        EXPECT(0xfb, gbc.readMem(0xe24f));
        // CB FB 00D1
        gbc.setState(0x58a5, 0xcb44, 0xc9f0, 0x2997, 0xecaa, 0x12f, 0x0, 0x0);
        gbc.writeMem(0x58a5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcb44, gbc.sp());
        EXPECT(0x58a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00D2
        gbc.setState(0x3e21, 0xf830, 0xf840, 0x1e03, 0xf020, 0xb1c5, 0x0, 0x1);
        gbc.writeMem(0x3e21, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf830, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00D3
        gbc.setState(0x1bbe, 0xfb2, 0xabb0, 0xd7b5, 0x1635, 0x840f, 0x1, 0x1);
        gbc.writeMem(0x1bbe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfb2, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00D4
        gbc.setState(0x96b2, 0x3609, 0x7da0, 0x952b, 0x310b, 0xe31a, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3609, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b2));
        EXPECT(0xfb, gbc.readMem(0x96b3));
        // CB FB 00D5
        gbc.setState(0x53c1, 0xd0f9, 0x22e0, 0xb8c7, 0xa386, 0x59e2, 0x1, 0x0);
        gbc.writeMem(0x53c1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd0f9, gbc.sp());
        EXPECT(0x53c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00D6
        gbc.setState(0x3d8a, 0x432e, 0xd000, 0x2b61, 0x56b1, 0xbc37, 0x1, 0x1);
        gbc.writeMem(0x3d8a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x432e, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00D7
        gbc.setState(0xed8b, 0x941f, 0x2c0, 0x9fb9, 0xb8c1, 0x1cf2, 0x1, 0x0);
        gbc.writeMem(0xed8b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x941f, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8b));
        EXPECT(0xfb, gbc.readMem(0xed8c));
        // CB FB 00D8
        gbc.setState(0xbe92, 0xc55d, 0xd0a0, 0x8b3b, 0x14f1, 0x85a5, 0x0, 0x0);
        gbc.writeMem(0xbe92, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc55d, gbc.sp());
        EXPECT(0xbe94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe92));
        EXPECT(0xfb, gbc.readMem(0xbe93));
        // CB FB 00D9
        gbc.setState(0xd319, 0xc027, 0x1b50, 0xa9d1, 0x4014, 0x3f93, 0x0, 0x1);
        gbc.writeMem(0xd319, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc027, gbc.sp());
        EXPECT(0xd31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd319));
        EXPECT(0xfb, gbc.readMem(0xd31a));
        // CB FB 00DA
        gbc.setState(0x6254, 0x15e0, 0xc6b0, 0x9d4, 0x5b24, 0x2515, 0x1, 0x1);
        gbc.writeMem(0x6254, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x15e0, gbc.sp());
        EXPECT(0x6256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00DB
        gbc.setState(0xa8f0, 0x3038, 0x3160, 0x1484, 0x56b9, 0x5dc9, 0x1, 0x0);
        gbc.writeMem(0xa8f0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3038, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f0));
        EXPECT(0xfb, gbc.readMem(0xa8f1));
        // CB FB 00DC
        gbc.setState(0xe71b, 0xb21d, 0x35a0, 0x3b1f, 0xdee8, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0xe71b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb21d, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71b));
        EXPECT(0xfb, gbc.readMem(0xe71c));
        // CB FB 00DD
        gbc.setState(0xd0a4, 0xb10, 0x3b0, 0xcd36, 0x6478, 0xb6d9, 0x1, 0x1);
        gbc.writeMem(0xd0a4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xd0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a4));
        EXPECT(0xfb, gbc.readMem(0xd0a5));
        // CB FB 00DE
        gbc.setState(0x98f5, 0x9688, 0x6d10, 0xc4d9, 0xa79f, 0x4b46, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9688, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f5));
        EXPECT(0xfb, gbc.readMem(0x98f6));
        // CB FB 00DF
        gbc.setState(0x256b, 0xe35, 0xca20, 0x8ce6, 0x7f76, 0xed60, 0x0, 0x0);
        gbc.writeMem(0x256b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe35, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E0
        gbc.setState(0xbb9, 0xaaa9, 0x840, 0x35ca, 0xbb72, 0x9f8b, 0x0, 0x0);
        gbc.writeMem(0xbb9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaaa9, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E1
        gbc.setState(0x2884, 0xb40f, 0x3b60, 0xe500, 0xc4bc, 0xe15c, 0x0, 0x0);
        gbc.writeMem(0x2884, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb40f, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E2
        gbc.setState(0x2d04, 0xa15b, 0x3db0, 0x9f18, 0xf33e, 0x179c, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa15b, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00E3
        gbc.setState(0x6f86, 0xf4fe, 0xedc0, 0x22f3, 0xec6d, 0x5988, 0x0, 0x1);
        gbc.writeMem(0x6f86, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf4fe, gbc.sp());
        EXPECT(0x6f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E4
        gbc.setState(0x975f, 0x3005, 0x1e40, 0xdcc, 0xb78d, 0xbdc, 0x0, 0x1);
        gbc.writeMem(0x975f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0x9761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975f));
        EXPECT(0xfb, gbc.readMem(0x9760));
        // CB FB 00E6
        gbc.setState(0x3b2c, 0x5c1a, 0x20a0, 0x45b7, 0x7876, 0x2da4, 0x0, 0x0);
        gbc.writeMem(0x3b2c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c1a, gbc.sp());
        EXPECT(0x3b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E7
        gbc.setState(0x9185, 0x5348, 0x6fa0, 0x1e35, 0xc420, 0x2c23, 0x0, 0x1);
        gbc.writeMem(0x9185, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5348, gbc.sp());
        EXPECT(0x9187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9185));
        EXPECT(0xfb, gbc.readMem(0x9186));
        // CB FB 00E8
        gbc.setState(0x284e, 0x338a, 0xf260, 0x26a1, 0x5cd3, 0xda50, 0x1, 0x1);
        gbc.writeMem(0x284e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00E9
        gbc.setState(0x64dc, 0x6e5a, 0xdf10, 0x59d8, 0x8b61, 0x513e, 0x1, 0x1);
        gbc.writeMem(0x64dc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0x64de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00EA
        gbc.setState(0x8bff, 0xedaa, 0x53e0, 0xfba0, 0xdcc4, 0xf1bd, 0x1, 0x1);
        gbc.writeMem(0x8bff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bff));
        EXPECT(0xfb, gbc.readMem(0x8c00));
        // CB FB 00EB
        gbc.setState(0xedb1, 0x2472, 0x1c70, 0x836, 0xd541, 0x1ccf, 0x1, 0x0);
        gbc.writeMem(0xedb1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0xedb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb1));
        EXPECT(0xfb, gbc.readMem(0xedb2));
        // CB FB 00EC
        gbc.setState(0xb9bb, 0x9803, 0x5080, 0x7cf3, 0x2bea, 0xebcb, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bb));
        EXPECT(0xfb, gbc.readMem(0xb9bc));
        // CB FB 00ED
        gbc.setState(0xe05f, 0x84cf, 0x2ac0, 0x65a5, 0x3a09, 0x4f35, 0x0, 0x1);
        gbc.writeMem(0xe05f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05f));
        EXPECT(0xfb, gbc.readMem(0xe060));
        // CB FB 00EE
        gbc.setState(0xba5e, 0x6700, 0x68a0, 0xcce9, 0xe82c, 0x92c0, 0x1, 0x1);
        gbc.writeMem(0xba5e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0xba60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5e));
        EXPECT(0xfb, gbc.readMem(0xba5f));
        // CB FB 00EF
        gbc.setState(0xbece, 0x50e3, 0x4260, 0xa227, 0x37c9, 0x64e, 0x1, 0x1);
        gbc.writeMem(0xbece, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0xbed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbece));
        EXPECT(0xfb, gbc.readMem(0xbecf));
        // CB FB 00F0
        gbc.setState(0x39a5, 0x9636, 0x9830, 0xb6f, 0x87df, 0xddb8, 0x1, 0x1);
        gbc.writeMem(0x39a5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0x39a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00F1
        gbc.setState(0xd3e3, 0x4a6b, 0x51b0, 0xf2aa, 0x3b9b, 0xd3eb, 0x0, 0x1);
        gbc.writeMem(0xd3e3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4a6b, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e3));
        EXPECT(0xfb, gbc.readMem(0xd3e4));
        // CB FB 00F2
        gbc.setState(0x20fd, 0xb2, 0x7a70, 0x289f, 0x428f, 0xeeb6, 0x1, 0x0);
        gbc.writeMem(0x20fd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb2, gbc.sp());
        EXPECT(0x20ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00F3
        gbc.setState(0x5021, 0x2af, 0x540, 0x5a12, 0xc306, 0xe7eb, 0x1, 0x0);
        gbc.writeMem(0x5021, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2af, gbc.sp());
        EXPECT(0x5023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00F4
        gbc.setState(0x2ce1, 0xfc45, 0xfaf0, 0x364e, 0x303d, 0x3184, 0x0, 0x1);
        gbc.writeMem(0x2ce1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00F5
        gbc.setState(0x1e36, 0x18f7, 0x57c0, 0x8d8b, 0x3309, 0x8ca3, 0x0, 0x0);
        gbc.writeMem(0x1e36, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x18f7, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00F7
        gbc.setState(0xcaf0, 0x2507, 0x77a0, 0xb055, 0x664b, 0x325, 0x1, 0x1);
        gbc.writeMem(0xcaf0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2507, gbc.sp());
        EXPECT(0xcaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf0));
        EXPECT(0xfb, gbc.readMem(0xcaf1));
        // CB FB 00F8
        gbc.setState(0x3f49, 0x7f69, 0xe7c0, 0x6b55, 0x1903, 0x3608, 0x0, 0x0);
        gbc.writeMem(0x3f49, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00FA
        gbc.setState(0xa2b6, 0xb1af, 0x6e00, 0x2d25, 0x9e7a, 0x17d1, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb1af, gbc.sp());
        EXPECT(0xa2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b6));
        EXPECT(0xfb, gbc.readMem(0xa2b7));
        // CB FB 00FB
        gbc.setState(0x81d9, 0xaa21, 0xb40, 0x11c4, 0xd9b2, 0x8377, 0x0, 0x1);
        gbc.writeMem(0x81d9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaa21, gbc.sp());
        EXPECT(0x81db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d9));
        EXPECT(0xfb, gbc.readMem(0x81da));
        // CB FB 00FC
        gbc.setState(0x10f2, 0xfa31, 0x4000, 0x8b9a, 0xa43a, 0x745a, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00FD
        gbc.setState(0x70b4, 0xb9d7, 0x1a40, 0x91bd, 0x9193, 0x646c, 0x0, 0x1);
        gbc.writeMem(0x70b4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 00FE
        gbc.setState(0x1e8f, 0x699, 0x2710, 0x84db, 0xc8d7, 0xc93c, 0x1, 0x1);
        gbc.writeMem(0x1e8f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x699, gbc.sp());
        EXPECT(0x1e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 00FF
        gbc.setState(0x26c9, 0x66d6, 0xe1c0, 0x5225, 0x7bcf, 0x7763, 0x1, 0x1);
        gbc.writeMem(0x26c9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x66d6, gbc.sp());
        EXPECT(0x26cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0100
        gbc.setState(0xafdf, 0xf62d, 0x16e0, 0xabf1, 0x28bc, 0x695a, 0x1, 0x0);
        gbc.writeMem(0xafdf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0xafe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdf));
        EXPECT(0xfb, gbc.readMem(0xafe0));
        // CB FB 0101
        gbc.setState(0xb3c1, 0xdbc9, 0x4850, 0x32e0, 0x717a, 0x76c3, 0x1, 0x0);
        gbc.writeMem(0xb3c1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0xb3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c1));
        EXPECT(0xfb, gbc.readMem(0xb3c2));
        // CB FB 0102
        gbc.setState(0x22e0, 0xfb36, 0xde10, 0x1ebe, 0x448b, 0x710, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfb36, gbc.sp());
        EXPECT(0x22e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0103
        gbc.setState(0xba65, 0x7b7e, 0xbf20, 0x69ee, 0xe519, 0x3531, 0x0, 0x1);
        gbc.writeMem(0xba65, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7b7e, gbc.sp());
        EXPECT(0xba67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba65));
        EXPECT(0xfb, gbc.readMem(0xba66));
        // CB FB 0104
        gbc.setState(0x2ab1, 0x4567, 0x3340, 0x9d12, 0x9bc, 0xe1d4, 0x0, 0x0);
        gbc.writeMem(0x2ab1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0105
        gbc.setState(0xbad1, 0xdf67, 0x7080, 0x6555, 0x3d38, 0x15de, 0x1, 0x0);
        gbc.writeMem(0xbad1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad1));
        EXPECT(0xfb, gbc.readMem(0xbad2));
        // CB FB 0106
        gbc.setState(0x8a13, 0x3ea, 0x7db0, 0x5a68, 0xbcd0, 0x5777, 0x1, 0x1);
        gbc.writeMem(0x8a13, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3ea, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a13));
        EXPECT(0xfb, gbc.readMem(0x8a14));
        // CB FB 0108
        gbc.setState(0x6282, 0x2425, 0x30a0, 0xec03, 0xb37f, 0xe228, 0x1, 0x1);
        gbc.writeMem(0x6282, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2425, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0109
        gbc.setState(0xbe05, 0xaf4b, 0xbb50, 0x4ef1, 0xa8f1, 0x41, 0x0, 0x1);
        gbc.writeMem(0xbe05, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf4b, gbc.sp());
        EXPECT(0xbe07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe05));
        EXPECT(0xfb, gbc.readMem(0xbe06));
        // CB FB 010A
        gbc.setState(0x1c76, 0x115c, 0xd9e0, 0x177a, 0xcc65, 0x5341, 0x1, 0x1);
        gbc.writeMem(0x1c76, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x115c, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 010C
        gbc.setState(0x1de5, 0xaf4e, 0xc660, 0x14b9, 0x6291, 0xbaf7, 0x0, 0x0);
        gbc.writeMem(0x1de5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf4e, gbc.sp());
        EXPECT(0x1de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 010D
        gbc.setState(0x223c, 0x978, 0x5110, 0x4558, 0x6f41, 0xe42b, 0x1, 0x1);
        gbc.writeMem(0x223c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x978, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 010E
        gbc.setState(0x6ce8, 0x74b, 0x6d70, 0xa257, 0xc0c7, 0x291f, 0x0, 0x0);
        gbc.writeMem(0x6ce8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0x6cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 010F
        gbc.setState(0x4a2, 0xa602, 0x9d0, 0xe73, 0xe1a6, 0xb5c0, 0x1, 0x0);
        gbc.writeMem(0x4a2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0111
        gbc.setState(0x4a1f, 0xf27e, 0x7780, 0xa4c9, 0x30c1, 0x9955, 0x0, 0x1);
        gbc.writeMem(0x4a1f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0112
        gbc.setState(0xafc2, 0xf6aa, 0x8be0, 0x4e8a, 0x8f40, 0xdb60, 0x0, 0x0);
        gbc.writeMem(0xafc2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf6aa, gbc.sp());
        EXPECT(0xafc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc2));
        EXPECT(0xfb, gbc.readMem(0xafc3));
        // CB FB 0113
        gbc.setState(0xa366, 0x45c2, 0x7a20, 0x664c, 0x383e, 0x4661, 0x1, 0x0);
        gbc.writeMem(0xa366, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0xfb, gbc.readMem(0xa367));
        // CB FB 0114
        gbc.setState(0x7020, 0x8d73, 0xd280, 0x4507, 0xe413, 0x97b6, 0x1, 0x1);
        gbc.writeMem(0x7020, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8d73, gbc.sp());
        EXPECT(0x7022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0115
        gbc.setState(0x143b, 0x865c, 0x800, 0x76bd, 0x2fed, 0xe984, 0x1, 0x0);
        gbc.writeMem(0x143b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x865c, gbc.sp());
        EXPECT(0x143d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0116
        gbc.setState(0xa6be, 0x45dc, 0xc8a0, 0x3eaf, 0xc19a, 0x503, 0x1, 0x0);
        gbc.writeMem(0xa6be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45dc, gbc.sp());
        EXPECT(0xa6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6be));
        EXPECT(0xfb, gbc.readMem(0xa6bf));
        // CB FB 0117
        gbc.setState(0x530c, 0x9491, 0x7f50, 0xad27, 0x377a, 0x8d6c, 0x0, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9491, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0118
        gbc.setState(0xd6cc, 0x5007, 0x7840, 0xfb77, 0x908c, 0xe9f8, 0x0, 0x1);
        gbc.writeMem(0xd6cc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5007, gbc.sp());
        EXPECT(0xd6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cc));
        EXPECT(0xfb, gbc.readMem(0xd6cd));
        // CB FB 011A
        gbc.setState(0x2da8, 0x879c, 0xb5b0, 0x548f, 0x886f, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0x2da8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x879c, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 011B
        gbc.setState(0x552b, 0xb5e4, 0x11c0, 0x8aff, 0xa128, 0x4ba9, 0x0, 0x0);
        gbc.writeMem(0x552b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 011D
        gbc.setState(0x2dfe, 0xa2f5, 0x6110, 0x366f, 0xc100, 0xee7c, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 011E
        gbc.setState(0x87be, 0xb7eb, 0xc0d0, 0xb1ed, 0x510f, 0x671f, 0x0, 0x1);
        gbc.writeMem(0x87be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb7eb, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87be));
        EXPECT(0xfb, gbc.readMem(0x87bf));
        // CB FB 011F
        gbc.setState(0xd6bc, 0x9367, 0x96a0, 0x35db, 0xedc8, 0xcbdd, 0x1, 0x1);
        gbc.writeMem(0xd6bc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9367, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bc));
        EXPECT(0xfb, gbc.readMem(0xd6bd));
        // CB FB 0120
        gbc.setState(0xbba2, 0x9f5d, 0xdd50, 0x7969, 0x1f8e, 0x28fb, 0x0, 0x0);
        gbc.writeMem(0xbba2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f5d, gbc.sp());
        EXPECT(0xbba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba2));
        EXPECT(0xfb, gbc.readMem(0xbba3));
        // CB FB 0121
        gbc.setState(0x39c0, 0x2c6d, 0xe0, 0x6d5b, 0x3b5, 0xddb9, 0x0, 0x0);
        gbc.writeMem(0x39c0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2c6d, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0122
        gbc.setState(0x4023, 0xa863, 0x65c0, 0x3608, 0x1834, 0xeef0, 0x0, 0x1);
        gbc.writeMem(0x4023, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa863, gbc.sp());
        EXPECT(0x4025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0123
        gbc.setState(0xd6a9, 0x781f, 0x5480, 0x16f5, 0x5ae4, 0xa4dc, 0x1, 0x1);
        gbc.writeMem(0xd6a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0xd6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a9));
        EXPECT(0xfb, gbc.readMem(0xd6aa));
        // CB FB 0124
        gbc.setState(0xc24, 0xff20, 0x3e20, 0x95b9, 0x1229, 0x9db5, 0x0, 0x0);
        gbc.writeMem(0xc24, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0xc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0125
        gbc.setState(0x1880, 0x9ef8, 0xdac0, 0x7cc3, 0xc94, 0xa3e0, 0x0, 0x0);
        gbc.writeMem(0x1880, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9ef8, gbc.sp());
        EXPECT(0x1882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0126
        gbc.setState(0xb533, 0xf87d, 0xa530, 0x5804, 0x10b2, 0x89dd, 0x0, 0x1);
        gbc.writeMem(0xb533, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0xb535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb533));
        EXPECT(0xfb, gbc.readMem(0xb534));
        // CB FB 0127
        gbc.setState(0xd496, 0xb9b2, 0x6410, 0xe5, 0xd837, 0xfcbc, 0x0, 0x1);
        gbc.writeMem(0xd496, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd496));
        EXPECT(0xfb, gbc.readMem(0xd497));
        // CB FB 0128
        gbc.setState(0xeb6c, 0x9f7c, 0xef10, 0x122a, 0xc796, 0xfbcf, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9f7c, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6c));
        EXPECT(0xfb, gbc.readMem(0xeb6d));
        // CB FB 0129
        gbc.setState(0x76e7, 0xf7b0, 0x3fb0, 0xe3f, 0xb36, 0xf5d, 0x1, 0x1);
        gbc.writeMem(0x76e7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf7b0, gbc.sp());
        EXPECT(0x76e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 012A
        gbc.setState(0x4bdb, 0x2a4f, 0x2200, 0x50fd, 0x1f0c, 0x57bd, 0x0, 0x0);
        gbc.writeMem(0x4bdb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2a4f, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 012B
        gbc.setState(0x6adf, 0x3337, 0x37e0, 0x6f80, 0x165f, 0x24d, 0x1, 0x1);
        gbc.writeMem(0x6adf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3337, gbc.sp());
        EXPECT(0x6ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 012C
        gbc.setState(0x4c69, 0x483f, 0xa610, 0x1b6b, 0x45a5, 0x7ddd, 0x1, 0x1);
        gbc.writeMem(0x4c69, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x483f, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 012D
        gbc.setState(0x2499, 0xee8e, 0x16e0, 0x57ba, 0xee50, 0xd621, 0x1, 0x0);
        gbc.writeMem(0x2499, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0x249b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 012E
        gbc.setState(0xc45a, 0xb250, 0xfa0, 0x1e20, 0x92f7, 0x7d8c, 0x0, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb250, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0xfb, gbc.readMem(0xc45b));
        // CB FB 012F
        gbc.setState(0x8263, 0x39a8, 0xf340, 0xf9a7, 0x9871, 0x302f, 0x0, 0x1);
        gbc.writeMem(0x8263, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x39a8, gbc.sp());
        EXPECT(0x8265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8263));
        EXPECT(0xfb, gbc.readMem(0x8264));
        // CB FB 0130
        gbc.setState(0xd5c5, 0x403f, 0x1bc0, 0xa8be, 0xbd83, 0xed8e, 0x1, 0x0);
        gbc.writeMem(0xd5c5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x403f, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c5));
        EXPECT(0xfb, gbc.readMem(0xd5c6));
        // CB FB 0131
        gbc.setState(0x872, 0xa063, 0x69b0, 0x916, 0xaeb, 0xec1a, 0x1, 0x1);
        gbc.writeMem(0x872, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0132
        gbc.setState(0x316b, 0x670, 0xd000, 0x72c0, 0x46f, 0xd374, 0x0, 0x1);
        gbc.writeMem(0x316b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x670, gbc.sp());
        EXPECT(0x316d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0133
        gbc.setState(0xb305, 0xb4d3, 0xdbc0, 0x8b76, 0xe60e, 0x586f, 0x1, 0x1);
        gbc.writeMem(0xb305, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb4d3, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb305));
        EXPECT(0xfb, gbc.readMem(0xb306));
        // CB FB 0134
        gbc.setState(0x3f3e, 0x2b72, 0xb020, 0x40bf, 0xb606, 0x2804, 0x0, 0x0);
        gbc.writeMem(0x3f3e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2b72, gbc.sp());
        EXPECT(0x3f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0135
        gbc.setState(0x6d00, 0x90a3, 0x93d0, 0x93d3, 0x766c, 0x4180, 0x0, 0x1);
        gbc.writeMem(0x6d00, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x90a3, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0136
        gbc.setState(0x8f1c, 0xa3e2, 0xdcd0, 0x2850, 0xe8ba, 0xa2cd, 0x1, 0x0);
        gbc.writeMem(0x8f1c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0x8f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1c));
        EXPECT(0xfb, gbc.readMem(0x8f1d));
        // CB FB 0137
        gbc.setState(0x2522, 0xfe15, 0x9380, 0xafa9, 0x24d9, 0x44d6, 0x1, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0138
        gbc.setState(0x61b9, 0x13da, 0x9930, 0xfda2, 0x6081, 0x1539, 0x0, 0x0);
        gbc.writeMem(0x61b9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0139
        gbc.setState(0x7259, 0xa22, 0x2e80, 0x534d, 0x230e, 0xc383, 0x1, 0x1);
        gbc.writeMem(0x7259, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa22, gbc.sp());
        EXPECT(0x725b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 013A
        gbc.setState(0x1d12, 0x5d80, 0x9120, 0x89e0, 0xd30d, 0x19c4, 0x1, 0x0);
        gbc.writeMem(0x1d12, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5d80, gbc.sp());
        EXPECT(0x1d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 013B
        gbc.setState(0x21ac, 0xac2f, 0x4a60, 0xd1b0, 0xf4ad, 0x3b2e, 0x1, 0x0);
        gbc.writeMem(0x21ac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0x21ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 013C
        gbc.setState(0x389f, 0xce48, 0xc570, 0x152b, 0x1a9b, 0x67ed, 0x1, 0x0);
        gbc.writeMem(0x389f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0x38a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 013D
        gbc.setState(0xdedc, 0x21c3, 0x6240, 0x4cc6, 0xb295, 0x511, 0x0, 0x0);
        gbc.writeMem(0xdedc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x21c3, gbc.sp());
        EXPECT(0xdede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdedc));
        EXPECT(0xfb, gbc.readMem(0xdedd));
        // CB FB 013E
        gbc.setState(0x613a, 0x3504, 0x63d0, 0xa71c, 0xcb13, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0x613a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3504, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 013F
        gbc.setState(0x7d13, 0x291f, 0x4c00, 0xd8ad, 0xed92, 0x333d, 0x1, 0x1);
        gbc.writeMem(0x7d13, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x291f, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0140
        gbc.setState(0x5bb8, 0x4136, 0x5bf0, 0x3f5d, 0xfd50, 0xf0ac, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4136, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0141
        gbc.setState(0x286c, 0x155a, 0x51d0, 0x78f9, 0x641d, 0xa3c6, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x155a, gbc.sp());
        EXPECT(0x286e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0142
        gbc.setState(0x6e86, 0x3eda, 0x23c0, 0x1e60, 0x59dd, 0x7fb5, 0x0, 0x1);
        gbc.writeMem(0x6e86, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3eda, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0143
        gbc.setState(0x5627, 0xb7d, 0x15a0, 0x1750, 0x4c68, 0xf21a, 0x0, 0x1);
        gbc.writeMem(0x5627, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb7d, gbc.sp());
        EXPECT(0x5629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0144
        gbc.setState(0xe878, 0x1b23, 0xbde0, 0xedab, 0x21fd, 0x231a, 0x1, 0x0);
        gbc.writeMem(0xe878, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1b23, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0xfb, gbc.readMem(0xe879));
        // CB FB 0145
        gbc.setState(0x601d, 0xd222, 0x17e0, 0x731b, 0x955c, 0x1e8f, 0x0, 0x0);
        gbc.writeMem(0x601d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd222, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0146
        gbc.setState(0x8a62, 0x803d, 0x6bc0, 0x8fb3, 0x78d9, 0xffda, 0x1, 0x0);
        gbc.writeMem(0x8a62, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x803d, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a62));
        EXPECT(0xfb, gbc.readMem(0x8a63));
        // CB FB 0147
        gbc.setState(0x513e, 0xf700, 0x4210, 0xfe8c, 0x64bb, 0x60e8, 0x0, 0x0);
        gbc.writeMem(0x513e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf700, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0148
        gbc.setState(0x18d1, 0x638a, 0xad00, 0x54cb, 0x899f, 0x904a, 0x1, 0x0);
        gbc.writeMem(0x18d1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 014A
        gbc.setState(0x4275, 0xf58a, 0x95d0, 0x9768, 0xbb34, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x4275, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 014B
        gbc.setState(0x2fee, 0x1958, 0x8d0, 0x96ff, 0xd408, 0x27e0, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 014D
        gbc.setState(0xa5ec, 0xd7fc, 0xb240, 0x25db, 0xfaa3, 0xfc02, 0x1, 0x0);
        gbc.writeMem(0xa5ec, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ec));
        EXPECT(0xfb, gbc.readMem(0xa5ed));
        // CB FB 014E
        gbc.setState(0x9e3c, 0xad93, 0x40a0, 0x767f, 0x29e8, 0xbf21, 0x1, 0x1);
        gbc.writeMem(0x9e3c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xad93, gbc.sp());
        EXPECT(0x9e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3c));
        EXPECT(0xfb, gbc.readMem(0x9e3d));
        // CB FB 014F
        gbc.setState(0xd696, 0x52c7, 0x67b0, 0x743d, 0x76b0, 0x8553, 0x1, 0x0);
        gbc.writeMem(0xd696, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd696));
        EXPECT(0xfb, gbc.readMem(0xd697));
        // CB FB 0150
        gbc.setState(0xaa5f, 0xaf58, 0x2d10, 0xb45c, 0xb205, 0xffd3, 0x1, 0x1);
        gbc.writeMem(0xaa5f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaf58, gbc.sp());
        EXPECT(0xaa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5f));
        EXPECT(0xfb, gbc.readMem(0xaa60));
        // CB FB 0152
        gbc.setState(0xa949, 0xf7ac, 0x5750, 0x1468, 0xb691, 0xdc9e, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf7ac, gbc.sp());
        EXPECT(0xa94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa949));
        EXPECT(0xfb, gbc.readMem(0xa94a));
        // CB FB 0153
        gbc.setState(0xd47f, 0x5011, 0x2b10, 0x8e1, 0xfb79, 0xd8f2, 0x1, 0x1);
        gbc.writeMem(0xd47f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5011, gbc.sp());
        EXPECT(0xd481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47f));
        EXPECT(0xfb, gbc.readMem(0xd480));
        // CB FB 0154
        gbc.setState(0x30d7, 0x712e, 0x5220, 0xf2d0, 0xcad3, 0xb06f, 0x0, 0x0);
        gbc.writeMem(0x30d7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0x30d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0155
        gbc.setState(0xad8c, 0x7ef0, 0x6140, 0x922f, 0x5e16, 0xde81, 0x1, 0x1);
        gbc.writeMem(0xad8c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7ef0, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8c));
        EXPECT(0xfb, gbc.readMem(0xad8d));
        // CB FB 0156
        gbc.setState(0x2fd7, 0xb2b7, 0x88d0, 0x13fc, 0x6871, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x2fd7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0x2fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0157
        gbc.setState(0x1da4, 0x4046, 0xc330, 0xcf3, 0x9a78, 0x2eb8, 0x1, 0x1);
        gbc.writeMem(0x1da4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4046, gbc.sp());
        EXPECT(0x1da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0158
        gbc.setState(0x8884, 0x4ad0, 0x5e30, 0x7c5, 0x5a67, 0x44eb, 0x0, 0x0);
        gbc.writeMem(0x8884, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4ad0, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8884));
        EXPECT(0xfb, gbc.readMem(0x8885));
        // CB FB 0159
        gbc.setState(0x3217, 0x6691, 0x6800, 0xb65a, 0x7c13, 0xb6d8, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6691, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 015A
        gbc.setState(0x21a7, 0x8abf, 0x36a0, 0x67a1, 0x3d1b, 0xaadf, 0x0, 0x0);
        gbc.writeMem(0x21a7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 015B
        gbc.setState(0xd66b, 0x8291, 0x7930, 0x51fc, 0xc14f, 0x51bc, 0x1, 0x1);
        gbc.writeMem(0xd66b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0xd66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66b));
        EXPECT(0xfb, gbc.readMem(0xd66c));
        // CB FB 015C
        gbc.setState(0x5b6e, 0xac9c, 0x2b40, 0x488, 0x711a, 0x4aa9, 0x1, 0x0);
        gbc.writeMem(0x5b6e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x5b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 015D
        gbc.setState(0x77de, 0x390e, 0xe7c0, 0x7086, 0xc0c0, 0xac0b, 0x0, 0x0);
        gbc.writeMem(0x77de, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x390e, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 015E
        gbc.setState(0x86a9, 0xf996, 0x5f00, 0xb48d, 0x443c, 0x5f42, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0x86ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a9));
        EXPECT(0xfb, gbc.readMem(0x86aa));
        // CB FB 015F
        gbc.setState(0x9ddd, 0x9e51, 0xef90, 0x1556, 0xeddc, 0x592f, 0x1, 0x1);
        gbc.writeMem(0x9ddd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0x9ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddd));
        EXPECT(0xfb, gbc.readMem(0x9dde));
        // CB FB 0161
        gbc.setState(0x529c, 0x430e, 0xffe0, 0x6dd2, 0x876f, 0x9caa, 0x1, 0x0);
        gbc.writeMem(0x529c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x430e, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0162
        gbc.setState(0x63de, 0x751a, 0x6cb0, 0x1748, 0x9029, 0xb5b0, 0x1, 0x1);
        gbc.writeMem(0x63de, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0164
        gbc.setState(0x5f5b, 0x7f0d, 0xba40, 0x102c, 0xbbb4, 0x18d8, 0x1, 0x1);
        gbc.writeMem(0x5f5b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0165
        gbc.setState(0xb50a, 0x22ec, 0x6e0, 0x4318, 0x6be2, 0xb8b5, 0x1, 0x1);
        gbc.writeMem(0xb50a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0xb50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50a));
        EXPECT(0xfb, gbc.readMem(0xb50b));
        // CB FB 0166
        gbc.setState(0xa6af, 0xc136, 0x4a10, 0xa157, 0xb84a, 0xebb2, 0x1, 0x1);
        gbc.writeMem(0xa6af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6af));
        EXPECT(0xfb, gbc.readMem(0xa6b0));
        // CB FB 0167
        gbc.setState(0x7d21, 0x91e3, 0x2560, 0xecb1, 0x1365, 0x61b9, 0x0, 0x0);
        gbc.writeMem(0x7d21, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0168
        gbc.setState(0x915f, 0xe3f0, 0x21a0, 0xa45e, 0x4f67, 0x4466, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915f));
        EXPECT(0xfb, gbc.readMem(0x9160));
        // CB FB 0169
        gbc.setState(0xea78, 0x9a09, 0x6110, 0x4f0f, 0x67a8, 0x5d3, 0x1, 0x1);
        gbc.writeMem(0xea78, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9a09, gbc.sp());
        EXPECT(0xea7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea78));
        EXPECT(0xfb, gbc.readMem(0xea79));
        // CB FB 016A
        gbc.setState(0x319, 0xa59d, 0x1010, 0xd81b, 0x2cc8, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0x319, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa59d, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 016B
        gbc.setState(0x1319, 0x8332, 0x14d0, 0x437f, 0x46ee, 0xc409, 0x1, 0x0);
        gbc.writeMem(0x1319, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8332, gbc.sp());
        EXPECT(0x131b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 016C
        gbc.setState(0x9b75, 0x6808, 0x8e30, 0x76f1, 0xcec9, 0xf517, 0x1, 0x0);
        gbc.writeMem(0x9b75, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6808, gbc.sp());
        EXPECT(0x9b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b75));
        EXPECT(0xfb, gbc.readMem(0x9b76));
        // CB FB 016E
        gbc.setState(0xb497, 0xe07a, 0x58a0, 0x5e53, 0x3bc3, 0x120b, 0x0, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe07a, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0xfb, gbc.readMem(0xb498));
        // CB FB 016F
        gbc.setState(0x852a, 0xfba0, 0x9e10, 0x24d6, 0x2a5f, 0x8f19, 0x0, 0x1);
        gbc.writeMem(0x852a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfba0, gbc.sp());
        EXPECT(0x852c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852a));
        EXPECT(0xfb, gbc.readMem(0x852b));
        // CB FB 0170
        gbc.setState(0x9a24, 0xae64, 0xe1a0, 0xd2bb, 0x2416, 0x4dd, 0x0, 0x0);
        gbc.writeMem(0x9a24, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a24));
        EXPECT(0xfb, gbc.readMem(0x9a25));
        // CB FB 0171
        gbc.setState(0x9534, 0x8980, 0x7b0, 0x3d6d, 0x7b38, 0xd70d, 0x0, 0x0);
        gbc.writeMem(0x9534, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8980, gbc.sp());
        EXPECT(0x9536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9534));
        EXPECT(0xfb, gbc.readMem(0x9535));
        // CB FB 0172
        gbc.setState(0xc067, 0xfdff, 0x1e40, 0x434c, 0x855a, 0x3cc7, 0x1, 0x0);
        gbc.writeMem(0xc067, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc067));
        EXPECT(0xfb, gbc.readMem(0xc068));
        // CB FB 0173
        gbc.setState(0xaaff, 0x5414, 0x2500, 0x40b3, 0x23cf, 0x91b9, 0x0, 0x1);
        gbc.writeMem(0xaaff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5414, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaff));
        EXPECT(0xfb, gbc.readMem(0xab00));
        // CB FB 0175
        gbc.setState(0xb297, 0x8063, 0xf380, 0x3712, 0xd1f6, 0x782c, 0x0, 0x0);
        gbc.writeMem(0xb297, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8063, gbc.sp());
        EXPECT(0xb299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb297));
        EXPECT(0xfb, gbc.readMem(0xb298));
        // CB FB 0177
        gbc.setState(0x6f94, 0xb835, 0x6be0, 0x22e2, 0x349b, 0x8547, 0x0, 0x1);
        gbc.writeMem(0x6f94, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb835, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0178
        gbc.setState(0x636b, 0x19f9, 0x95a0, 0x6a9d, 0xcf5d, 0x5d3b, 0x1, 0x1);
        gbc.writeMem(0x636b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x19f9, gbc.sp());
        EXPECT(0x636d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0179
        gbc.setState(0x3b7c, 0x780f, 0x8d20, 0x351d, 0x1624, 0x6b89, 0x0, 0x1);
        gbc.writeMem(0x3b7c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x780f, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 017A
        gbc.setState(0x8b1d, 0xedfc, 0xae00, 0x736f, 0x8d7d, 0xd5ea, 0x1, 0x0);
        gbc.writeMem(0x8b1d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0xfb, gbc.readMem(0x8b1e));
        // CB FB 017B
        gbc.setState(0x2430, 0x2047, 0xb1e0, 0xc130, 0x9218, 0xa947, 0x0, 0x0);
        gbc.writeMem(0x2430, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2047, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 017C
        gbc.setState(0x32ab, 0xe0bf, 0x45b0, 0x6b4f, 0x964b, 0x22a9, 0x0, 0x1);
        gbc.writeMem(0x32ab, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe0bf, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 017D
        gbc.setState(0x8750, 0xe198, 0xb5a0, 0xe2f9, 0x18a1, 0xc2df, 0x0, 0x1);
        gbc.writeMem(0x8750, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0xfb, gbc.readMem(0x8751));
        // CB FB 017E
        gbc.setState(0x5882, 0x5f03, 0xf040, 0xe508, 0x4ec9, 0xfa0e, 0x1, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5f03, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 017F
        gbc.setState(0x7825, 0x649d, 0x4400, 0xb3e6, 0x5097, 0x93ef, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x649d, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0180
        gbc.setState(0x579, 0xdcba, 0x9330, 0x1127, 0xc7, 0x261b, 0x1, 0x1);
        gbc.writeMem(0x579, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdcba, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0181
        gbc.setState(0xdc06, 0xd04e, 0xc40, 0x2aba, 0x5aa4, 0xcf87, 0x1, 0x0);
        gbc.writeMem(0xdc06, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd04e, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc06));
        EXPECT(0xfb, gbc.readMem(0xdc07));
        // CB FB 0182
        gbc.setState(0x9892, 0xdd63, 0x63f0, 0x99d4, 0xd592, 0x3d51, 0x1, 0x1);
        gbc.writeMem(0x9892, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9892));
        EXPECT(0xfb, gbc.readMem(0x9893));
        // CB FB 0183
        gbc.setState(0x217e, 0xbd34, 0x3f60, 0x300e, 0x3e1c, 0x2cfb, 0x1, 0x1);
        gbc.writeMem(0x217e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbd34, gbc.sp());
        EXPECT(0x2180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0184
        gbc.setState(0x8095, 0xc01a, 0x1340, 0x95c0, 0x449e, 0x3304, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc01a, gbc.sp());
        EXPECT(0x8097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8095));
        EXPECT(0xfb, gbc.readMem(0x8096));
        // CB FB 0185
        gbc.setState(0x3898, 0xa53e, 0x7150, 0x5c40, 0xcc67, 0x5c0a, 0x0, 0x1);
        gbc.writeMem(0x3898, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa53e, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0186
        gbc.setState(0xac76, 0xba33, 0x9c90, 0xf1b8, 0xf43d, 0x7fe7, 0x0, 0x1);
        gbc.writeMem(0xac76, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0xac78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac76));
        EXPECT(0xfb, gbc.readMem(0xac77));
        // CB FB 0187
        gbc.setState(0x66fd, 0xc1a1, 0x3040, 0xf007, 0xccd5, 0x5ef4, 0x0, 0x0);
        gbc.writeMem(0x66fd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc1a1, gbc.sp());
        EXPECT(0x66ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0188
        gbc.setState(0xb975, 0x120a, 0x9f80, 0x9183, 0x1e56, 0x9333, 0x1, 0x0);
        gbc.writeMem(0xb975, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x120a, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb975));
        EXPECT(0xfb, gbc.readMem(0xb976));
        // CB FB 0189
        gbc.setState(0x636a, 0x113a, 0x9ea0, 0xe885, 0x2605, 0x5a4c, 0x1, 0x0);
        gbc.writeMem(0x636a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x113a, gbc.sp());
        EXPECT(0x636c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 018A
        gbc.setState(0xb41b, 0x7e61, 0xed70, 0x2952, 0x23ca, 0xa86c, 0x1, 0x1);
        gbc.writeMem(0xb41b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0xb41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41b));
        EXPECT(0xfb, gbc.readMem(0xb41c));
        // CB FB 018B
        gbc.setState(0x6c77, 0xae1e, 0x5500, 0x10e6, 0x6317, 0x2f0f, 0x1, 0x1);
        gbc.writeMem(0x6c77, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xae1e, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 018C
        gbc.setState(0x4f03, 0x1025, 0x4300, 0xd1e2, 0x256, 0x106b, 0x0, 0x1);
        gbc.writeMem(0x4f03, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1025, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 018D
        gbc.setState(0x6dd6, 0x29d9, 0x25e0, 0x7930, 0xd8af, 0x751, 0x1, 0x0);
        gbc.writeMem(0x6dd6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 018E
        gbc.setState(0x783c, 0x1ff6, 0x3160, 0xc726, 0x67df, 0x12ed, 0x0, 0x1);
        gbc.writeMem(0x783c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1ff6, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 018F
        gbc.setState(0x690e, 0x12e5, 0xba50, 0x5160, 0xaa42, 0xea13, 0x0, 0x0);
        gbc.writeMem(0x690e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0x6910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0190
        gbc.setState(0x9bb4, 0xd0b8, 0xf510, 0x299b, 0xf8da, 0xf0e4, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd0b8, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb4));
        EXPECT(0xfb, gbc.readMem(0x9bb5));
        // CB FB 0191
        gbc.setState(0x297b, 0x6a3a, 0xd970, 0x1798, 0xeb59, 0xd410, 0x1, 0x0);
        gbc.writeMem(0x297b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x297d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0192
        gbc.setState(0xc6a0, 0x9964, 0xf590, 0x4af8, 0xc2, 0xcfc7, 0x0, 0x0);
        gbc.writeMem(0xc6a0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a0));
        EXPECT(0xfb, gbc.readMem(0xc6a1));
        // CB FB 0193
        gbc.setState(0xa535, 0x4d44, 0x3de0, 0x2662, 0xe577, 0xef68, 0x1, 0x1);
        gbc.writeMem(0xa535, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4d44, gbc.sp());
        EXPECT(0xa537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa535));
        EXPECT(0xfb, gbc.readMem(0xa536));
        // CB FB 0194
        gbc.setState(0xd7e5, 0x336c, 0x8990, 0xdf74, 0xce59, 0xb92a, 0x0, 0x1);
        gbc.writeMem(0xd7e5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x336c, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e5));
        EXPECT(0xfb, gbc.readMem(0xd7e6));
        // CB FB 0195
        gbc.setState(0x19a7, 0xf267, 0xc570, 0x72e, 0x1ecc, 0x81b5, 0x1, 0x0);
        gbc.writeMem(0x19a7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf267, gbc.sp());
        EXPECT(0x19a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0196
        gbc.setState(0x697f, 0xb9, 0x3d30, 0x4cf0, 0x8404, 0x366f, 0x0, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x6981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0197
        gbc.setState(0x2cce, 0xf801, 0xa90, 0xdd90, 0xe84, 0x60d8, 0x1, 0x1);
        gbc.writeMem(0x2cce, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf801, gbc.sp());
        EXPECT(0x2cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0198
        gbc.setState(0x9bda, 0x5ef5, 0xe9b0, 0x33e4, 0x6167, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0x9bda, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5ef5, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bda));
        EXPECT(0xfb, gbc.readMem(0x9bdb));
        // CB FB 0199
        gbc.setState(0x5a03, 0xcc0c, 0x1f70, 0x31fb, 0x7f56, 0x9ebe, 0x1, 0x0);
        gbc.writeMem(0x5a03, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc0c, gbc.sp());
        EXPECT(0x5a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 019A
        gbc.setState(0x2958, 0x4f6a, 0x2af0, 0xb775, 0x4923, 0x601, 0x1, 0x1);
        gbc.writeMem(0x2958, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 019B
        gbc.setState(0xb2df, 0x89a0, 0xc60, 0x5cd6, 0x306c, 0x1bb, 0x1, 0x1);
        gbc.writeMem(0xb2df, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x89a0, gbc.sp());
        EXPECT(0xb2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2df));
        EXPECT(0xfb, gbc.readMem(0xb2e0));
        // CB FB 019C
        gbc.setState(0x75bf, 0x98dc, 0xcd60, 0x8744, 0x8dd7, 0xaa4a, 0x1, 0x0);
        gbc.writeMem(0x75bf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x98dc, gbc.sp());
        EXPECT(0x75c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 019D
        gbc.setState(0x9ef9, 0x4636, 0xb230, 0x37c6, 0x39b3, 0x5df0, 0x1, 0x0);
        gbc.writeMem(0x9ef9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4636, gbc.sp());
        EXPECT(0x9efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef9));
        EXPECT(0xfb, gbc.readMem(0x9efa));
        // CB FB 019E
        gbc.setState(0x1e9d, 0xfd4a, 0x11f0, 0x2c4a, 0x992b, 0xdbb2, 0x1, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfd4a, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01A0
        gbc.setState(0x43a2, 0xcaa0, 0xbfd0, 0xe4bc, 0xbfe2, 0x5d13, 0x0, 0x1);
        gbc.writeMem(0x43a2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcaa0, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01A1
        gbc.setState(0xdf6, 0x4134, 0x44a0, 0xc842, 0x30cb, 0xa6eb, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01A3
        gbc.setState(0xbcd3, 0x2853, 0x4160, 0xc449, 0xbb6, 0x27bf, 0x1, 0x1);
        gbc.writeMem(0xbcd3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0xbcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd3));
        EXPECT(0xfb, gbc.readMem(0xbcd4));
        // CB FB 01A4
        gbc.setState(0x9622, 0xbd33, 0x3cf0, 0x1f4e, 0x8e0, 0x5eb9, 0x1, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd33, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0xfb, gbc.readMem(0x9623));
        // CB FB 01A5
        gbc.setState(0x82c8, 0xadce, 0x3230, 0xd4a2, 0x5e9f, 0xec6d, 0x0, 0x1);
        gbc.writeMem(0x82c8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xadce, gbc.sp());
        EXPECT(0x82ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c8));
        EXPECT(0xfb, gbc.readMem(0x82c9));
        // CB FB 01A6
        gbc.setState(0x7f88, 0xdd47, 0x740, 0xd877, 0x6a10, 0xac5c, 0x1, 0x0);
        gbc.writeMem(0x7f88, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd47, gbc.sp());
        EXPECT(0x7f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01A7
        gbc.setState(0xba58, 0xbbfa, 0x8710, 0xf002, 0x7624, 0xc639, 0x0, 0x1);
        gbc.writeMem(0xba58, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0xba5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba58));
        EXPECT(0xfb, gbc.readMem(0xba59));
        // CB FB 01A8
        gbc.setState(0x41a7, 0xe5c6, 0x5fb0, 0xf8e7, 0x661a, 0x7b33, 0x1, 0x1);
        gbc.writeMem(0x41a7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x41a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01A9
        gbc.setState(0xe5b6, 0x91e, 0xb850, 0x3dc1, 0x6615, 0x12d0, 0x0, 0x1);
        gbc.writeMem(0xe5b6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0xe5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b6));
        EXPECT(0xfb, gbc.readMem(0xe5b7));
        // CB FB 01AA
        gbc.setState(0x2aa6, 0x846b, 0xbb50, 0x8d09, 0xa386, 0xe32d, 0x1, 0x0);
        gbc.writeMem(0x2aa6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x846b, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01AB
        gbc.setState(0x858a, 0x85dd, 0xec00, 0xdfb3, 0x83f2, 0xaee0, 0x1, 0x1);
        gbc.writeMem(0x858a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0x858c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858a));
        EXPECT(0xfb, gbc.readMem(0x858b));
        // CB FB 01AD
        gbc.setState(0x79d, 0xfdd, 0x4740, 0x9cb0, 0xa158, 0x1f03, 0x0, 0x0);
        gbc.writeMem(0x79d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01AE
        gbc.setState(0x6717, 0xfaac, 0x8450, 0xd02e, 0xf8b, 0x427d, 0x0, 0x0);
        gbc.writeMem(0x6717, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01AF
        gbc.setState(0x8006, 0xb3e, 0xc490, 0x8314, 0xe48b, 0xff48, 0x1, 0x1);
        gbc.writeMem(0x8006, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb3e, gbc.sp());
        EXPECT(0x8008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8006));
        EXPECT(0xfb, gbc.readMem(0x8007));
        // CB FB 01B0
        gbc.setState(0x50d4, 0xe64, 0xf7f0, 0x8957, 0xc213, 0x569d, 0x0, 0x0);
        gbc.writeMem(0x50d4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe64, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01B1
        gbc.setState(0x8066, 0x53e2, 0x96e0, 0xb224, 0xf2a, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8066));
        EXPECT(0xfb, gbc.readMem(0x8067));
        // CB FB 01B2
        gbc.setState(0xe564, 0x6c64, 0xc8e0, 0x7f7d, 0xf791, 0x3b66, 0x0, 0x0);
        gbc.writeMem(0xe564, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6c64, gbc.sp());
        EXPECT(0xe566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe564));
        EXPECT(0xfb, gbc.readMem(0xe565));
        // CB FB 01B3
        gbc.setState(0x8a62, 0x6549, 0xd150, 0xbf15, 0x662, 0xeff5, 0x0, 0x0);
        gbc.writeMem(0x8a62, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6549, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a62));
        EXPECT(0xfb, gbc.readMem(0x8a63));
        // CB FB 01B4
        gbc.setState(0xc8a9, 0x1cb2, 0xfc70, 0x4936, 0xf4d5, 0x73b7, 0x1, 0x1);
        gbc.writeMem(0xc8a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1cb2, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a9));
        EXPECT(0xfb, gbc.readMem(0xc8aa));
        // CB FB 01B5
        gbc.setState(0xe3a0, 0xeca, 0xa760, 0xb83a, 0xe0d5, 0x2beb, 0x0, 0x0);
        gbc.writeMem(0xe3a0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeca, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a0));
        EXPECT(0xfb, gbc.readMem(0xe3a1));
        // CB FB 01B6
        gbc.setState(0x718, 0x2dc0, 0x4a10, 0x78d2, 0x54d8, 0x4321, 0x1, 0x0);
        gbc.writeMem(0x718, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2dc0, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01B7
        gbc.setState(0x3bd1, 0x1f40, 0xe8a0, 0x5d48, 0x9be5, 0xa475, 0x1, 0x0);
        gbc.writeMem(0x3bd1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01B8
        gbc.setState(0x3f76, 0xff98, 0x4ce0, 0x294a, 0xb0cf, 0x2b7c, 0x1, 0x0);
        gbc.writeMem(0x3f76, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0x3f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01B9
        gbc.setState(0x2212, 0xc5fa, 0xbdb0, 0x39c6, 0x7c23, 0x759b, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01BA
        gbc.setState(0x9da5, 0xaf99, 0xa930, 0x7eb0, 0xb449, 0xb7e0, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaf99, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da5));
        EXPECT(0xfb, gbc.readMem(0x9da6));
        // CB FB 01BB
        gbc.setState(0x1d0f, 0x2572, 0x5260, 0xbc5c, 0xc2e8, 0x9eed, 0x1, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01BC
        gbc.setState(0x71c9, 0x6076, 0x4090, 0x2dac, 0xd761, 0x2273, 0x0, 0x0);
        gbc.writeMem(0x71c9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01BD
        gbc.setState(0x85f5, 0xe645, 0x2af0, 0x29a9, 0x596b, 0xa6c8, 0x1, 0x1);
        gbc.writeMem(0x85f5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x85f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f5));
        EXPECT(0xfb, gbc.readMem(0x85f6));
        // CB FB 01BE
        gbc.setState(0xe047, 0x1d41, 0x4c40, 0x49d6, 0x9462, 0x543e, 0x0, 0x1);
        gbc.writeMem(0xe047, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d41, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0xfb, gbc.readMem(0xe048));
        // CB FB 01BF
        gbc.setState(0x9a4, 0xd471, 0x4890, 0xa07e, 0x81a7, 0x7c28, 0x0, 0x0);
        gbc.writeMem(0x9a4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd471, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01C0
        gbc.setState(0x7be, 0x2d98, 0x1340, 0xb27b, 0x5b0c, 0x94ec, 0x0, 0x0);
        gbc.writeMem(0x7be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0x7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01C1
        gbc.setState(0x500e, 0xb461, 0xe330, 0xec4, 0x2070, 0x4b88, 0x0, 0x0);
        gbc.writeMem(0x500e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb461, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01C2
        gbc.setState(0x9400, 0xa868, 0x8900, 0xf79, 0xd459, 0x99da, 0x0, 0x1);
        gbc.writeMem(0x9400, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa868, gbc.sp());
        EXPECT(0x9402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9400));
        EXPECT(0xfb, gbc.readMem(0x9401));
        // CB FB 01C3
        gbc.setState(0xe7e7, 0x3d98, 0x2600, 0x6adb, 0x84c0, 0xa03, 0x0, 0x0);
        gbc.writeMem(0xe7e7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e7));
        EXPECT(0xfb, gbc.readMem(0xe7e8));
        // CB FB 01C4
        gbc.setState(0xaa14, 0x7299, 0xe9c0, 0x5a08, 0x62e0, 0xf506, 0x1, 0x0);
        gbc.writeMem(0xaa14, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7299, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0xfb, gbc.readMem(0xaa15));
        // CB FB 01C5
        gbc.setState(0x2c74, 0x10e3, 0x9750, 0x161d, 0xd31b, 0x36ca, 0x0, 0x0);
        gbc.writeMem(0x2c74, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x2c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01C6
        gbc.setState(0xa904, 0x1823, 0xb8d0, 0x323b, 0xc22b, 0xcd6b, 0x0, 0x1);
        gbc.writeMem(0xa904, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1823, gbc.sp());
        EXPECT(0xa906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa904));
        EXPECT(0xfb, gbc.readMem(0xa905));
        // CB FB 01C7
        gbc.setState(0xcd6b, 0x28dc, 0x5980, 0xccc, 0x2d31, 0x7709, 0x1, 0x1);
        gbc.writeMem(0xcd6b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x28dc, gbc.sp());
        EXPECT(0xcd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6b));
        EXPECT(0xfb, gbc.readMem(0xcd6c));
        // CB FB 01C8
        gbc.setState(0xb79a, 0x3649, 0x4c60, 0x280f, 0xdde1, 0xaf53, 0x0, 0x1);
        gbc.writeMem(0xb79a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3649, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0xfb, gbc.readMem(0xb79b));
        // CB FB 01C9
        gbc.setState(0xb714, 0xeba, 0x3820, 0xf845, 0xf57b, 0x2807, 0x0, 0x0);
        gbc.writeMem(0xb714, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeba, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb714));
        EXPECT(0xfb, gbc.readMem(0xb715));
        // CB FB 01CA
        gbc.setState(0x5bb0, 0xafd6, 0xd0, 0xdb18, 0xce38, 0x2485, 0x0, 0x1);
        gbc.writeMem(0x5bb0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xafd6, gbc.sp());
        EXPECT(0x5bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01CB
        gbc.setState(0xd7a, 0xdc0a, 0x1e10, 0x6372, 0xe190, 0xaf6a, 0x1, 0x0);
        gbc.writeMem(0xd7a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdc0a, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01CC
        gbc.setState(0x80af, 0x8593, 0x32c0, 0xa852, 0x3c32, 0x39cc, 0x1, 0x0);
        gbc.writeMem(0x80af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8593, gbc.sp());
        EXPECT(0x80b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80af));
        EXPECT(0xfb, gbc.readMem(0x80b0));
        // CB FB 01CD
        gbc.setState(0x26c3, 0xb86e, 0xfba0, 0xae93, 0xafb5, 0xb5e6, 0x1, 0x0);
        gbc.writeMem(0x26c3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb86e, gbc.sp());
        EXPECT(0x26c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01CE
        gbc.setState(0x8923, 0xc2c2, 0x3220, 0xcdc3, 0x77fd, 0x379f, 0x0, 0x0);
        gbc.writeMem(0x8923, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc2c2, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8923));
        EXPECT(0xfb, gbc.readMem(0x8924));
        // CB FB 01CF
        gbc.setState(0x90f5, 0xaea5, 0x1be0, 0x1956, 0xc475, 0x9496, 0x0, 0x0);
        gbc.writeMem(0x90f5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaea5, gbc.sp());
        EXPECT(0x90f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f5));
        EXPECT(0xfb, gbc.readMem(0x90f6));
        // CB FB 01D0
        gbc.setState(0x901f, 0xc925, 0xf1f0, 0x27b, 0xc9b1, 0xb88, 0x1, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0xfb, gbc.readMem(0x9020));
        // CB FB 01D1
        gbc.setState(0xc571, 0x5841, 0xbd30, 0x83d4, 0x7acb, 0x7421, 0x1, 0x1);
        gbc.writeMem(0xc571, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0xc573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc571));
        EXPECT(0xfb, gbc.readMem(0xc572));
        // CB FB 01D2
        gbc.setState(0x5ad5, 0x53c6, 0xa200, 0xca5b, 0x7786, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x5ad5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01D3
        gbc.setState(0x74d2, 0xa745, 0x1170, 0x3856, 0xb119, 0x4b2f, 0x1, 0x0);
        gbc.writeMem(0x74d2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa745, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01D5
        gbc.setState(0x6cf, 0x85b3, 0x7d0, 0x48a7, 0xee11, 0xdc4b, 0x0, 0x1);
        gbc.writeMem(0x6cf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0x6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01D6
        gbc.setState(0x677a, 0xb12a, 0x8d40, 0xf3d1, 0xcae, 0xdf3f, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb12a, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01D7
        gbc.setState(0x7fb6, 0xa9a4, 0xcd80, 0x9799, 0xbeaf, 0x4ddb, 0x0, 0x0);
        gbc.writeMem(0x7fb6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0x7fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01D8
        gbc.setState(0x9a61, 0x529a, 0xa1d0, 0x24d2, 0x9d36, 0xe97a, 0x1, 0x1);
        gbc.writeMem(0x9a61, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x529a, gbc.sp());
        EXPECT(0x9a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a61));
        EXPECT(0xfb, gbc.readMem(0x9a62));
        // CB FB 01D9
        gbc.setState(0x5920, 0xc7ed, 0x9c70, 0xa774, 0x368b, 0x8832, 0x1, 0x1);
        gbc.writeMem(0x5920, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0x5922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01DB
        gbc.setState(0x613b, 0x37f4, 0x4cb0, 0x26c7, 0xd5b, 0x312d, 0x1, 0x0);
        gbc.writeMem(0x613b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x37f4, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01DC
        gbc.setState(0xc871, 0xdeb5, 0xd160, 0xbe04, 0xeb91, 0xcd02, 0x0, 0x1);
        gbc.writeMem(0xc871, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdeb5, gbc.sp());
        EXPECT(0xc873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc871));
        EXPECT(0xfb, gbc.readMem(0xc872));
        // CB FB 01DD
        gbc.setState(0x548e, 0x1798, 0xed80, 0x49bc, 0xbaf7, 0x5e53, 0x0, 0x1);
        gbc.writeMem(0x548e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1798, gbc.sp());
        EXPECT(0x5490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01DE
        gbc.setState(0xa0cc, 0xfb39, 0x1420, 0x46ef, 0x3f1c, 0x6e7d, 0x0, 0x1);
        gbc.writeMem(0xa0cc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cc));
        EXPECT(0xfb, gbc.readMem(0xa0cd));
        // CB FB 01DF
        gbc.setState(0x524e, 0x2e12, 0xe440, 0x2ed6, 0x8f21, 0x951e, 0x1, 0x1);
        gbc.writeMem(0x524e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2e12, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01E0
        gbc.setState(0xad94, 0x6789, 0xb610, 0x9f4, 0x8ea3, 0x50ea, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6789, gbc.sp());
        EXPECT(0xad96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad94));
        EXPECT(0xfb, gbc.readMem(0xad95));
        // CB FB 01E1
        gbc.setState(0x677a, 0x519, 0x37a0, 0x4f34, 0xe031, 0x2aa0, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01E2
        gbc.setState(0x29b0, 0x6db9, 0x760, 0x36f3, 0xdb16, 0xbd9f, 0x1, 0x1);
        gbc.writeMem(0x29b0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01E3
        gbc.setState(0x7ea2, 0x5e3a, 0x7cf0, 0x6273, 0xdb76, 0xc5ed, 0x0, 0x0);
        gbc.writeMem(0x7ea2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5e3a, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01E4
        gbc.setState(0x9a0f, 0x15a0, 0x17d0, 0xe944, 0x51a5, 0x56f6, 0x0, 0x0);
        gbc.writeMem(0x9a0f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0f));
        EXPECT(0xfb, gbc.readMem(0x9a10));
        // CB FB 01E6
        gbc.setState(0x783d, 0x4cc2, 0x2420, 0xed1f, 0xa465, 0xfd92, 0x0, 0x0);
        gbc.writeMem(0x783d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cc2, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01E7
        gbc.setState(0x2769, 0x9353, 0xa850, 0x2049, 0x88d8, 0x584b, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9353, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01E8
        gbc.setState(0x5d91, 0x6e3c, 0xf020, 0x319e, 0xd116, 0xd1c8, 0x1, 0x0);
        gbc.writeMem(0x5d91, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01E9
        gbc.setState(0x952d, 0x7f7d, 0x23a0, 0x6da7, 0x7ed0, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0x952d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0x952f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952d));
        EXPECT(0xfb, gbc.readMem(0x952e));
        // CB FB 01EA
        gbc.setState(0xdf8f, 0x2c4b, 0xddf0, 0xc6f7, 0x4dc4, 0x52c2, 0x1, 0x1);
        gbc.writeMem(0xdf8f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8f));
        EXPECT(0xfb, gbc.readMem(0xdf90));
        // CB FB 01EB
        gbc.setState(0x4bdf, 0xc31b, 0x2060, 0xb3f6, 0xa348, 0xfbae, 0x1, 0x1);
        gbc.writeMem(0x4bdf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc31b, gbc.sp());
        EXPECT(0x4be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01EC
        gbc.setState(0x17b4, 0x6ac2, 0xde40, 0x3c2a, 0xc01d, 0xea6, 0x0, 0x1);
        gbc.writeMem(0x17b4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6ac2, gbc.sp());
        EXPECT(0x17b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01ED
        gbc.setState(0xe8d9, 0x9eb3, 0xe7e0, 0x9fb0, 0x4495, 0xce16, 0x0, 0x1);
        gbc.writeMem(0xe8d9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0xe8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d9));
        EXPECT(0xfb, gbc.readMem(0xe8da));
        // CB FB 01EE
        gbc.setState(0x852f, 0xd8ef, 0x2d70, 0xfd41, 0xc994, 0x1002, 0x1, 0x1);
        gbc.writeMem(0x852f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd8ef, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852f));
        EXPECT(0xfb, gbc.readMem(0x8530));
        // CB FB 01EF
        gbc.setState(0xa418, 0xa202, 0x2f90, 0x42c8, 0x23f7, 0xd57, 0x0, 0x0);
        gbc.writeMem(0xa418, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa202, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa418));
        EXPECT(0xfb, gbc.readMem(0xa419));
        // CB FB 01F1
        gbc.setState(0xd5ba, 0x113d, 0x3430, 0x9dab, 0xd88c, 0x644d, 0x0, 0x1);
        gbc.writeMem(0xd5ba, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ba));
        EXPECT(0xfb, gbc.readMem(0xd5bb));
        // CB FB 01F2
        gbc.setState(0x68af, 0x9988, 0x29a0, 0x3a8a, 0xf12c, 0x1d6e, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9988, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01F3
        gbc.setState(0xca07, 0x674d, 0x8d10, 0x1e96, 0xa5a9, 0x6524, 0x0, 0x1);
        gbc.writeMem(0xca07, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0xca09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca07));
        EXPECT(0xfb, gbc.readMem(0xca08));
        // CB FB 01F4
        gbc.setState(0x9e35, 0x1fb0, 0xbb50, 0x61b5, 0x17f0, 0x19b7, 0x0, 0x1);
        gbc.writeMem(0x9e35, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1fb0, gbc.sp());
        EXPECT(0x9e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e35));
        EXPECT(0xfb, gbc.readMem(0x9e36));
        // CB FB 01F5
        gbc.setState(0xd529, 0xfbb6, 0xe390, 0x7ec5, 0x50c5, 0x72b4, 0x1, 0x1);
        gbc.writeMem(0xd529, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfbb6, gbc.sp());
        EXPECT(0xd52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd529));
        EXPECT(0xfb, gbc.readMem(0xd52a));
        // CB FB 01F6
        gbc.setState(0xcecf, 0xba13, 0xd30, 0xddc2, 0xc12c, 0x1fcc, 0x0, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xba13, gbc.sp());
        EXPECT(0xced1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecf));
        EXPECT(0xfb, gbc.readMem(0xced0));
        // CB FB 01F7
        gbc.setState(0xcd02, 0xd2dd, 0x2480, 0x7c75, 0x7038, 0xd761, 0x0, 0x1);
        gbc.writeMem(0xcd02, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd2dd, gbc.sp());
        EXPECT(0xcd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd02));
        EXPECT(0xfb, gbc.readMem(0xcd03));
        // CB FB 01F8
        gbc.setState(0x564e, 0xec61, 0x8420, 0xb612, 0xc054, 0x5361, 0x0, 0x0);
        gbc.writeMem(0x564e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 01F9
        gbc.setState(0x17c6, 0x27e7, 0x7430, 0xe45c, 0xf88a, 0xd303, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01FA
        gbc.setState(0xbf8b, 0x4769, 0x7300, 0x8bb5, 0xddb7, 0x9551, 0x1, 0x0);
        gbc.writeMem(0xbf8b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0xbf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8b));
        EXPECT(0xfb, gbc.readMem(0xbf8c));
        // CB FB 01FB
        gbc.setState(0xa0ed, 0x1145, 0xf80, 0xf962, 0xffc6, 0x9003, 0x1, 0x0);
        gbc.writeMem(0xa0ed, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1145, gbc.sp());
        EXPECT(0xa0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ed));
        EXPECT(0xfb, gbc.readMem(0xa0ee));
        // CB FB 01FC
        gbc.setState(0x5c00, 0x2b4f, 0x7490, 0xe3a0, 0x34bd, 0x3189, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2b4f, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01FD
        gbc.setState(0x8c1e, 0x459b, 0xb4e0, 0x891f, 0x82c2, 0xc08d, 0x0, 0x0);
        gbc.writeMem(0x8c1e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x459b, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1e));
        EXPECT(0xfb, gbc.readMem(0x8c1f));
        // CB FB 01FE
        gbc.setState(0x2639, 0x3983, 0x91f0, 0x8bdb, 0x25cc, 0xdfb8, 0x0, 0x0);
        gbc.writeMem(0x2639, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3983, gbc.sp());
        EXPECT(0x263b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 01FF
        gbc.setState(0x8afc, 0xbfe3, 0x8360, 0x3156, 0xa71b, 0x90e9, 0x1, 0x0);
        gbc.writeMem(0x8afc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0xfb, gbc.readMem(0x8afd));
        // CB FB 0200
        gbc.setState(0x131f, 0xabc4, 0xfca0, 0xbf2b, 0x8179, 0x66f0, 0x1, 0x0);
        gbc.writeMem(0x131f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0201
        gbc.setState(0xdb99, 0xbd0f, 0x4a10, 0x1ab7, 0x7cf1, 0x3cd3, 0x1, 0x0);
        gbc.writeMem(0xdb99, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbd0f, gbc.sp());
        EXPECT(0xdb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb99));
        EXPECT(0xfb, gbc.readMem(0xdb9a));
        // CB FB 0202
        gbc.setState(0x2981, 0x47ae, 0x1a90, 0x3c9e, 0x1619, 0x9b6a, 0x0, 0x1);
        gbc.writeMem(0x2981, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0203
        gbc.setState(0xcf12, 0x3b92, 0xac40, 0x5fd0, 0x1ed8, 0x1443, 0x0, 0x0);
        gbc.writeMem(0xcf12, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3b92, gbc.sp());
        EXPECT(0xcf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf12));
        EXPECT(0xfb, gbc.readMem(0xcf13));
        // CB FB 0204
        gbc.setState(0xbcdb, 0x78bf, 0x2b10, 0x7a93, 0x74f3, 0xe87a, 0x1, 0x0);
        gbc.writeMem(0xbcdb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x78bf, gbc.sp());
        EXPECT(0xbcdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdb));
        EXPECT(0xfb, gbc.readMem(0xbcdc));
        // CB FB 0205
        gbc.setState(0x330b, 0x653b, 0x5570, 0x4ea0, 0x29b0, 0xce28, 0x1, 0x1);
        gbc.writeMem(0x330b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x653b, gbc.sp());
        EXPECT(0x330d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0206
        gbc.setState(0x7c26, 0xf2ae, 0xa380, 0x8c93, 0x5df, 0x2809, 0x1, 0x1);
        gbc.writeMem(0x7c26, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0207
        gbc.setState(0x79f7, 0xce93, 0x5820, 0xc6e1, 0xf103, 0x83ec, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0208
        gbc.setState(0x1a6a, 0x68c7, 0xdcc0, 0x684b, 0xd0ed, 0xad32, 0x0, 0x0);
        gbc.writeMem(0x1a6a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x1a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0209
        gbc.setState(0x1629, 0x4040, 0x91d0, 0x336b, 0xc988, 0xfd47, 0x1, 0x0);
        gbc.writeMem(0x1629, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4040, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 020A
        gbc.setState(0x7f6c, 0x53b4, 0xc6d0, 0x77ff, 0x17e4, 0x4426, 0x0, 0x1);
        gbc.writeMem(0x7f6c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x53b4, gbc.sp());
        EXPECT(0x7f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 020B
        gbc.setState(0x2f1d, 0xef09, 0x3500, 0xaa8c, 0xdf7f, 0x8df5, 0x1, 0x1);
        gbc.writeMem(0x2f1d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xef09, gbc.sp());
        EXPECT(0x2f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 020C
        gbc.setState(0x4656, 0x79a9, 0x6110, 0x14d2, 0x35bc, 0x7f9, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x79a9, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 020D
        gbc.setState(0x7c0b, 0x7ce3, 0xa7b0, 0xde87, 0xdbec, 0xd174, 0x0, 0x0);
        gbc.writeMem(0x7c0b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x7c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 020E
        gbc.setState(0x704c, 0x5217, 0x7930, 0xcce1, 0x8e82, 0x7fe1, 0x0, 0x0);
        gbc.writeMem(0x704c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x704e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 020F
        gbc.setState(0xe228, 0x274a, 0x8720, 0x164d, 0xb4ef, 0x2e3f, 0x0, 0x1);
        gbc.writeMem(0xe228, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x274a, gbc.sp());
        EXPECT(0xe22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe228));
        EXPECT(0xfb, gbc.readMem(0xe229));
        // CB FB 0210
        gbc.setState(0x6325, 0x7ae2, 0x5be0, 0xb8b8, 0x570f, 0xffc2, 0x1, 0x1);
        gbc.writeMem(0x6325, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0211
        gbc.setState(0x714a, 0xe6b0, 0x2960, 0x934e, 0xe1b7, 0xf69d, 0x0, 0x0);
        gbc.writeMem(0x714a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe6b0, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0212
        gbc.setState(0x2dfe, 0x9ef0, 0x9f00, 0xeb8e, 0x561f, 0xd047, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0213
        gbc.setState(0x1495, 0xaef1, 0xfb30, 0xc863, 0x71aa, 0x3834, 0x0, 0x0);
        gbc.writeMem(0x1495, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaef1, gbc.sp());
        EXPECT(0x1497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0214
        gbc.setState(0x17ce, 0x4897, 0xcf10, 0x7381, 0xe3c9, 0xe476, 0x0, 0x1);
        gbc.writeMem(0x17ce, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0x17d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0215
        gbc.setState(0xcbb, 0x111e, 0xa0e0, 0xe92c, 0xc456, 0xb5c6, 0x1, 0x0);
        gbc.writeMem(0xcbb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0217
        gbc.setState(0xacc5, 0x126f, 0xd0a0, 0xf598, 0x3c47, 0x8adc, 0x1, 0x0);
        gbc.writeMem(0xacc5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x126f, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc5));
        EXPECT(0xfb, gbc.readMem(0xacc6));
        // CB FB 0218
        gbc.setState(0xda13, 0x4955, 0xde30, 0xc31d, 0x61f0, 0xc98f, 0x0, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda13));
        EXPECT(0xfb, gbc.readMem(0xda14));
        // CB FB 0219
        gbc.setState(0xd618, 0xe53f, 0xeba0, 0x8990, 0x9039, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0xd618, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe53f, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd618));
        EXPECT(0xfb, gbc.readMem(0xd619));
        // CB FB 021A
        gbc.setState(0xd099, 0xb305, 0xeeb0, 0x1c2c, 0x9010, 0x2abb, 0x1, 0x1);
        gbc.writeMem(0xd099, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb305, gbc.sp());
        EXPECT(0xd09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd099));
        EXPECT(0xfb, gbc.readMem(0xd09a));
        // CB FB 021B
        gbc.setState(0xf30, 0x6675, 0xc840, 0x926, 0x633b, 0xc389, 0x1, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6675, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 021C
        gbc.setState(0xa928, 0xceb3, 0x25c0, 0x9202, 0x1468, 0x9377, 0x1, 0x0);
        gbc.writeMem(0xa928, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xceb3, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa928));
        EXPECT(0xfb, gbc.readMem(0xa929));
        // CB FB 021E
        gbc.setState(0xa0, 0xf376, 0xcca0, 0x94d4, 0x6202, 0x269f, 0x0, 0x0);
        gbc.writeMem(0xa0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf376, gbc.sp());
        EXPECT(0xa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 021F
        gbc.setState(0x9605, 0x49cc, 0x31a0, 0x6a3a, 0xb0e1, 0xc3ff, 0x0, 0x1);
        gbc.writeMem(0x9605, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x49cc, gbc.sp());
        EXPECT(0x9607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9605));
        EXPECT(0xfb, gbc.readMem(0x9606));
        // CB FB 0220
        gbc.setState(0x779c, 0x921, 0x6d30, 0x4113, 0x7e86, 0x2f48, 0x0, 0x0);
        gbc.writeMem(0x779c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x921, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0221
        gbc.setState(0x9cfa, 0x92be, 0xfe40, 0x6b78, 0x1096, 0x8a32, 0x0, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92be, gbc.sp());
        EXPECT(0x9cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfa));
        EXPECT(0xfb, gbc.readMem(0x9cfb));
        // CB FB 0222
        gbc.setState(0x49fb, 0xe434, 0xef80, 0x2c3d, 0xb98a, 0x4080, 0x1, 0x1);
        gbc.writeMem(0x49fb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0x49fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0223
        gbc.setState(0xe607, 0x1182, 0x5600, 0xa0e6, 0x3fe6, 0xc385, 0x0, 0x0);
        gbc.writeMem(0xe607, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1182, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe607));
        EXPECT(0xfb, gbc.readMem(0xe608));
        // CB FB 0224
        gbc.setState(0x80a3, 0xa41a, 0xe3e0, 0x6b9d, 0xca81, 0x58f0, 0x0, 0x0);
        gbc.writeMem(0x80a3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa41a, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0xfb, gbc.readMem(0x80a4));
        // CB FB 0225
        gbc.setState(0xb59f, 0xc0ff, 0x6390, 0xbf4a, 0x24eb, 0x7252, 0x1, 0x0);
        gbc.writeMem(0xb59f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0xb5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59f));
        EXPECT(0xfb, gbc.readMem(0xb5a0));
        // CB FB 0226
        gbc.setState(0xe98e, 0xcedb, 0x45c0, 0x22bf, 0xf800, 0x743e, 0x0, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcedb, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98e));
        EXPECT(0xfb, gbc.readMem(0xe98f));
        // CB FB 0227
        gbc.setState(0x77b2, 0xc7d0, 0xddb0, 0xdc7c, 0xd7a5, 0x7da, 0x1, 0x1);
        gbc.writeMem(0x77b2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0229
        gbc.setState(0x42d8, 0x4bf1, 0x430, 0x3c8, 0x64c3, 0x7f18, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 022B
        gbc.setState(0xd204, 0x5165, 0x9260, 0xe0b5, 0x3587, 0x4b6c, 0x0, 0x1);
        gbc.writeMem(0xd204, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0xd206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd204));
        EXPECT(0xfb, gbc.readMem(0xd205));
        // CB FB 022D
        gbc.setState(0xaab, 0xed72, 0xf990, 0xe239, 0x5e08, 0x8e0, 0x1, 0x0);
        gbc.writeMem(0xaab, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0xaad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 022E
        gbc.setState(0x2019, 0x2759, 0xb2e0, 0x97d5, 0xfc09, 0x2d8a, 0x1, 0x0);
        gbc.writeMem(0x2019, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2759, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0230
        gbc.setState(0xd318, 0xae8c, 0xadc0, 0x7614, 0x1007, 0xd6a4, 0x1, 0x1);
        gbc.writeMem(0xd318, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xd31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd318));
        EXPECT(0xfb, gbc.readMem(0xd319));
        // CB FB 0232
        gbc.setState(0xb666, 0x63ad, 0x2440, 0xc857, 0xda00, 0xe572, 0x0, 0x1);
        gbc.writeMem(0xb666, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x63ad, gbc.sp());
        EXPECT(0xb668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb666));
        EXPECT(0xfb, gbc.readMem(0xb667));
        // CB FB 0233
        gbc.setState(0x8eec, 0x1979, 0xc970, 0xffae, 0x113c, 0x71e2, 0x1, 0x0);
        gbc.writeMem(0x8eec, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x8eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eec));
        EXPECT(0xfb, gbc.readMem(0x8eed));
        // CB FB 0234
        gbc.setState(0x5137, 0x23db, 0x4520, 0xb820, 0x6b82, 0xf70f, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x23db, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0235
        gbc.setState(0x16d1, 0x9449, 0x6b20, 0xfb0, 0x28c8, 0xd671, 0x0, 0x0);
        gbc.writeMem(0x16d1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0236
        gbc.setState(0x3b0a, 0xc81d, 0xf130, 0x9e5a, 0x847b, 0x293e, 0x1, 0x0);
        gbc.writeMem(0x3b0a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc81d, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0237
        gbc.setState(0x1b2d, 0xa230, 0xbab0, 0x35a9, 0x59af, 0xc48, 0x0, 0x1);
        gbc.writeMem(0x1b2d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa230, gbc.sp());
        EXPECT(0x1b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0238
        gbc.setState(0x8cac, 0xa8f5, 0xed20, 0xdeb5, 0x70cd, 0x79b7, 0x0, 0x1);
        gbc.writeMem(0x8cac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa8f5, gbc.sp());
        EXPECT(0x8cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cac));
        EXPECT(0xfb, gbc.readMem(0x8cad));
        // CB FB 0239
        gbc.setState(0x965c, 0x2d30, 0xa130, 0x259e, 0x429c, 0x9b48, 0x0, 0x1);
        gbc.writeMem(0x965c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x965e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965c));
        EXPECT(0xfb, gbc.readMem(0x965d));
        // CB FB 023A
        gbc.setState(0xae46, 0xfa60, 0x6660, 0xf94b, 0xf1a1, 0x423a, 0x0, 0x0);
        gbc.writeMem(0xae46, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0xfb, gbc.readMem(0xae47));
        // CB FB 023B
        gbc.setState(0xaa56, 0xeb88, 0x8f40, 0x357, 0xddc8, 0xe194, 0x0, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0xfb, gbc.readMem(0xaa57));
        // CB FB 023C
        gbc.setState(0x1f8d, 0xe2ff, 0x12e0, 0x9c44, 0xaebe, 0x2448, 0x0, 0x0);
        gbc.writeMem(0x1f8d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe2ff, gbc.sp());
        EXPECT(0x1f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 023E
        gbc.setState(0x4cee, 0xffb9, 0x5490, 0x69d, 0xdbfa, 0x4678, 0x0, 0x1);
        gbc.writeMem(0x4cee, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xffb9, gbc.sp());
        EXPECT(0x4cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 023F
        gbc.setState(0xce06, 0x6eb, 0x1470, 0xfc06, 0xf34c, 0xbb7c, 0x1, 0x1);
        gbc.writeMem(0xce06, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6eb, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce06));
        EXPECT(0xfb, gbc.readMem(0xce07));
        // CB FB 0240
        gbc.setState(0x6672, 0x616, 0x8d70, 0x512c, 0x21a6, 0x80c4, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x616, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0241
        gbc.setState(0x8ec5, 0x3bfb, 0x6a60, 0xbf6f, 0x7ced, 0x645e, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3bfb, gbc.sp());
        EXPECT(0x8ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec5));
        EXPECT(0xfb, gbc.readMem(0x8ec6));
        // CB FB 0242
        gbc.setState(0xc1a8, 0xec66, 0x6770, 0x8c52, 0xd245, 0x8fc3, 0x1, 0x1);
        gbc.writeMem(0xc1a8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a8));
        EXPECT(0xfb, gbc.readMem(0xc1a9));
        // CB FB 0243
        gbc.setState(0xd4f6, 0xdc5a, 0xbbb0, 0xc493, 0xf965, 0x6dbf, 0x0, 0x1);
        gbc.writeMem(0xd4f6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdc5a, gbc.sp());
        EXPECT(0xd4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f6));
        EXPECT(0xfb, gbc.readMem(0xd4f7));
        // CB FB 0244
        gbc.setState(0xe07, 0x2cfc, 0xa840, 0xd565, 0x3d0b, 0x6ef8, 0x0, 0x0);
        gbc.writeMem(0xe07, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0245
        gbc.setState(0x3765, 0x2ae8, 0x3f20, 0xf43f, 0xccad, 0xcfd, 0x0, 0x0);
        gbc.writeMem(0x3765, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ae8, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0246
        gbc.setState(0x9d66, 0x74c0, 0x44c0, 0x38d8, 0xc0f8, 0x9ed3, 0x1, 0x0);
        gbc.writeMem(0x9d66, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x74c0, gbc.sp());
        EXPECT(0x9d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d66));
        EXPECT(0xfb, gbc.readMem(0x9d67));
        // CB FB 0247
        gbc.setState(0xb9c7, 0x4eed, 0x8b60, 0x44ae, 0xca11, 0x691d, 0x1, 0x1);
        gbc.writeMem(0xb9c7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4eed, gbc.sp());
        EXPECT(0xb9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c7));
        EXPECT(0xfb, gbc.readMem(0xb9c8));
        // CB FB 0248
        gbc.setState(0x8528, 0x5dd1, 0x5b80, 0xb973, 0x6428, 0x6aaa, 0x1, 0x0);
        gbc.writeMem(0x8528, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5dd1, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0xfb, gbc.readMem(0x8529));
        // CB FB 0249
        gbc.setState(0x8b3c, 0x1462, 0x3b50, 0x4fb1, 0x99d9, 0x9e74, 0x0, 0x0);
        gbc.writeMem(0x8b3c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1462, gbc.sp());
        EXPECT(0x8b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3c));
        EXPECT(0xfb, gbc.readMem(0x8b3d));
        // CB FB 024A
        gbc.setState(0x1c47, 0xb741, 0xaca0, 0x20f0, 0x6747, 0x322a, 0x0, 0x1);
        gbc.writeMem(0x1c47, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb741, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 024B
        gbc.setState(0x6d3e, 0x7c00, 0x1180, 0x9d38, 0x4221, 0xd4a8, 0x0, 0x1);
        gbc.writeMem(0x6d3e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7c00, gbc.sp());
        EXPECT(0x6d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 024C
        gbc.setState(0x1127, 0x858b, 0x9b0, 0xcfd3, 0x3f5f, 0xd1d3, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x858b, gbc.sp());
        EXPECT(0x1129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 024D
        gbc.setState(0x13af, 0x2e08, 0xb460, 0x6da8, 0x381a, 0x2a65, 0x0, 0x0);
        gbc.writeMem(0x13af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0x13b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 024E
        gbc.setState(0x4f10, 0x8862, 0x8de0, 0x412f, 0x1f8e, 0xfb88, 0x1, 0x1);
        gbc.writeMem(0x4f10, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8862, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 024F
        gbc.setState(0xe5b, 0xbfa5, 0x1130, 0x2be2, 0xb21, 0x1003, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0250
        gbc.setState(0x26d7, 0xc4b2, 0xbe10, 0x24f7, 0xded8, 0x4a0a, 0x0, 0x0);
        gbc.writeMem(0x26d7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0x26d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0251
        gbc.setState(0x13a9, 0x5291, 0x7ea0, 0x380b, 0xdf3e, 0x90c5, 0x1, 0x0);
        gbc.writeMem(0x13a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5291, gbc.sp());
        EXPECT(0x13ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0253
        gbc.setState(0xdba7, 0x7546, 0x6b90, 0xb2d0, 0xbb22, 0x2054, 0x1, 0x0);
        gbc.writeMem(0xdba7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0xdba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba7));
        EXPECT(0xfb, gbc.readMem(0xdba8));
        // CB FB 0254
        gbc.setState(0x8cd1, 0x66b9, 0xac30, 0x1d46, 0xb2d5, 0x36c8, 0x1, 0x0);
        gbc.writeMem(0x8cd1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd1));
        EXPECT(0xfb, gbc.readMem(0x8cd2));
        // CB FB 0255
        gbc.setState(0x5e28, 0xf85c, 0x7930, 0xd245, 0x7431, 0x938d, 0x0, 0x0);
        gbc.writeMem(0x5e28, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0x5e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0256
        gbc.setState(0x648a, 0x8714, 0x9090, 0x1ab8, 0x9d40, 0x7df7, 0x1, 0x1);
        gbc.writeMem(0x648a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0x648c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0257
        gbc.setState(0x9885, 0x8e7e, 0x5220, 0xfd30, 0xdec7, 0x61a, 0x0, 0x1);
        gbc.writeMem(0x9885, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8e7e, gbc.sp());
        EXPECT(0x9887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9885));
        EXPECT(0xfb, gbc.readMem(0x9886));
        // CB FB 0258
        gbc.setState(0xad4c, 0x5a13, 0xf040, 0x89fe, 0x75bc, 0x2fe9, 0x0, 0x1);
        gbc.writeMem(0xad4c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4c));
        EXPECT(0xfb, gbc.readMem(0xad4d));
        // CB FB 025A
        gbc.setState(0xaeb7, 0x8006, 0xb870, 0x716c, 0x681c, 0x9c, 0x0, 0x0);
        gbc.writeMem(0xaeb7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8006, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb7));
        EXPECT(0xfb, gbc.readMem(0xaeb8));
        // CB FB 025B
        gbc.setState(0x9e4d, 0xe287, 0xb280, 0x63f, 0x9954, 0x7799, 0x0, 0x0);
        gbc.writeMem(0x9e4d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe287, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0xfb, gbc.readMem(0x9e4e));
        // CB FB 025C
        gbc.setState(0x602e, 0x33ba, 0x7ab0, 0x5a9, 0xa923, 0xfb4a, 0x1, 0x1);
        gbc.writeMem(0x602e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x33ba, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 025D
        gbc.setState(0x42cd, 0x2292, 0x5ad0, 0xb06, 0x82ee, 0x3598, 0x0, 0x1);
        gbc.writeMem(0x42cd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2292, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 025E
        gbc.setState(0x8f47, 0x2564, 0x4780, 0xa534, 0x5586, 0xd4ef, 0x1, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f47));
        EXPECT(0xfb, gbc.readMem(0x8f48));
        // CB FB 025F
        gbc.setState(0x94a7, 0x8cc, 0x33d0, 0x4b6c, 0x7817, 0x6c8, 0x0, 0x1);
        gbc.writeMem(0x94a7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8cc, gbc.sp());
        EXPECT(0x94a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a7));
        EXPECT(0xfb, gbc.readMem(0x94a8));
        // CB FB 0260
        gbc.setState(0x8a46, 0x498a, 0xb430, 0x789a, 0xce64, 0x5bd, 0x0, 0x0);
        gbc.writeMem(0x8a46, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x8a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a46));
        EXPECT(0xfb, gbc.readMem(0x8a47));
        // CB FB 0261
        gbc.setState(0x6ec5, 0x314d, 0x3db0, 0x3b14, 0xc5, 0x4934, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x314d, gbc.sp());
        EXPECT(0x6ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0262
        gbc.setState(0xdc6f, 0x9686, 0x5900, 0xf2da, 0x228c, 0x1d1d, 0x0, 0x1);
        gbc.writeMem(0xdc6f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9686, gbc.sp());
        EXPECT(0xdc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6f));
        EXPECT(0xfb, gbc.readMem(0xdc70));
        // CB FB 0263
        gbc.setState(0xccc8, 0x9422, 0x3210, 0xad08, 0xb49, 0xfdcc, 0x0, 0x0);
        gbc.writeMem(0xccc8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc8));
        EXPECT(0xfb, gbc.readMem(0xccc9));
        // CB FB 0264
        gbc.setState(0x9e87, 0x11db, 0x8ed0, 0x2a43, 0x5fd2, 0x10cb, 0x1, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x11db, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e87));
        EXPECT(0xfb, gbc.readMem(0x9e88));
        // CB FB 0265
        gbc.setState(0xea64, 0xf6b1, 0xb510, 0xb65a, 0xd400, 0x2e7c, 0x0, 0x0);
        gbc.writeMem(0xea64, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0xea66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea64));
        EXPECT(0xfb, gbc.readMem(0xea65));
        // CB FB 0266
        gbc.setState(0xbd70, 0xf131, 0xc7d0, 0x9df5, 0x77ba, 0x26fe, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0xbd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd70));
        EXPECT(0xfb, gbc.readMem(0xbd71));
        // CB FB 0267
        gbc.setState(0x9987, 0x7848, 0x6790, 0x9287, 0x8e20, 0xe125, 0x0, 0x1);
        gbc.writeMem(0x9987, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7848, gbc.sp());
        EXPECT(0x9989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9987));
        EXPECT(0xfb, gbc.readMem(0x9988));
        // CB FB 0268
        gbc.setState(0x7dd4, 0x3fd3, 0x3a70, 0x6a23, 0xcd9a, 0x5ab9, 0x0, 0x0);
        gbc.writeMem(0x7dd4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fd3, gbc.sp());
        EXPECT(0x7dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0269
        gbc.setState(0x5d48, 0x5085, 0xcae0, 0xfcdf, 0x7b28, 0x7478, 0x1, 0x1);
        gbc.writeMem(0x5d48, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5085, gbc.sp());
        EXPECT(0x5d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 026A
        gbc.setState(0x6667, 0xfa53, 0x3200, 0x19d5, 0x9f37, 0xd99e, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 026B
        gbc.setState(0x2486, 0xee9e, 0x44e0, 0x269b, 0xf8e3, 0x2927, 0x1, 0x1);
        gbc.writeMem(0x2486, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xee9e, gbc.sp());
        EXPECT(0x2488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 026C
        gbc.setState(0x5ac9, 0xad91, 0xbba0, 0xaee0, 0x1cd8, 0xa404, 0x0, 0x1);
        gbc.writeMem(0x5ac9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xad91, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 026D
        gbc.setState(0xe7b4, 0xf73d, 0xf1d0, 0xad6d, 0x1dcf, 0x2b59, 0x1, 0x0);
        gbc.writeMem(0xe7b4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf73d, gbc.sp());
        EXPECT(0xe7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b4));
        EXPECT(0xfb, gbc.readMem(0xe7b5));
        // CB FB 026E
        gbc.setState(0xdca7, 0x15bd, 0xb2a0, 0xf399, 0x2f2a, 0x3d56, 0x0, 0x1);
        gbc.writeMem(0xdca7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0xdca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca7));
        EXPECT(0xfb, gbc.readMem(0xdca8));
        // CB FB 026F
        gbc.setState(0x46be, 0xab23, 0xae80, 0x4fc9, 0x15e9, 0xaba3, 0x0, 0x0);
        gbc.writeMem(0x46be, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xab23, gbc.sp());
        EXPECT(0x46c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0270
        gbc.setState(0x19e6, 0x4342, 0xf0f0, 0x38e1, 0x13c7, 0x5b6a, 0x0, 0x0);
        gbc.writeMem(0x19e6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0x19e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0271
        gbc.setState(0x37bb, 0x9db5, 0x6a60, 0xbb55, 0x848d, 0x2438, 0x1, 0x0);
        gbc.writeMem(0x37bb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9db5, gbc.sp());
        EXPECT(0x37bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0272
        gbc.setState(0x5b89, 0x8395, 0x8dc0, 0x6ff8, 0x9161, 0xbb04, 0x1, 0x1);
        gbc.writeMem(0x5b89, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0273
        gbc.setState(0x4919, 0x2e69, 0x3330, 0x4ae5, 0x3963, 0x7ec6, 0x1, 0x0);
        gbc.writeMem(0x4919, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2e69, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0275
        gbc.setState(0x60e7, 0x68d6, 0xee30, 0xcd7e, 0x98cf, 0x8b85, 0x1, 0x0);
        gbc.writeMem(0x60e7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x68d6, gbc.sp());
        EXPECT(0x60e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0276
        gbc.setState(0x1124, 0xe574, 0x51b0, 0xdb14, 0x7f5, 0x46e2, 0x1, 0x0);
        gbc.writeMem(0x1124, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe574, gbc.sp());
        EXPECT(0x1126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0277
        gbc.setState(0xaeae, 0xa414, 0x5770, 0xe9c0, 0x91ab, 0xb406, 0x0, 0x0);
        gbc.writeMem(0xaeae, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa414, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeae));
        EXPECT(0xfb, gbc.readMem(0xaeaf));
        // CB FB 0278
        gbc.setState(0x8724, 0xb6e8, 0x5600, 0xb217, 0x1737, 0xfe86, 0x0, 0x0);
        gbc.writeMem(0x8724, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0x8726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8724));
        EXPECT(0xfb, gbc.readMem(0x8725));
        // CB FB 0279
        gbc.setState(0x2fc9, 0x5b9e, 0x3120, 0x4cc6, 0xa9a4, 0x668, 0x1, 0x1);
        gbc.writeMem(0x2fc9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5b9e, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 027A
        gbc.setState(0x4d42, 0x9614, 0x4450, 0xfd9b, 0xdf9f, 0xdf6d, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9614, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 027B
        gbc.setState(0x4ac8, 0x9ea7, 0x8650, 0x83d3, 0x9283, 0xf0e0, 0x0, 0x1);
        gbc.writeMem(0x4ac8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 027C
        gbc.setState(0x2654, 0xee8, 0xbc90, 0x4aea, 0x8c08, 0xe0ff, 0x1, 0x1);
        gbc.writeMem(0x2654, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0x2656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 027D
        gbc.setState(0x2ca1, 0x1680, 0x2030, 0xe287, 0x6978, 0xeea0, 0x0, 0x0);
        gbc.writeMem(0x2ca1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 027E
        gbc.setState(0xa3f1, 0xb10f, 0x85e0, 0xa9e, 0xd490, 0xd299, 0x0, 0x0);
        gbc.writeMem(0xa3f1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0xa3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f1));
        EXPECT(0xfb, gbc.readMem(0xa3f2));
        // CB FB 027F
        gbc.setState(0x4ced, 0x6407, 0xf550, 0x26ed, 0x5502, 0x7735, 0x1, 0x0);
        gbc.writeMem(0x4ced, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6407, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0280
        gbc.setState(0x6c47, 0x32b9, 0xdac0, 0xbb8b, 0x4370, 0x31fc, 0x0, 0x0);
        gbc.writeMem(0x6c47, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x32b9, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0281
        gbc.setState(0x4eeb, 0xd123, 0x4770, 0x5cd5, 0x91b4, 0xdc39, 0x1, 0x0);
        gbc.writeMem(0x4eeb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd123, gbc.sp());
        EXPECT(0x4eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0282
        gbc.setState(0x17a, 0xfc84, 0x64e0, 0x7588, 0x1005, 0x3e2c, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0283
        gbc.setState(0x94a, 0x4369, 0xad80, 0x5a44, 0xdb70, 0x7ac0, 0x0, 0x1);
        gbc.writeMem(0x94a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0284
        gbc.setState(0x51af, 0xdeea, 0x2290, 0x239b, 0x1621, 0xf32d, 0x1, 0x0);
        gbc.writeMem(0x51af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdeea, gbc.sp());
        EXPECT(0x51b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0285
        gbc.setState(0x2c6d, 0xc3c4, 0x47a0, 0xe132, 0xb11e, 0x3221, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0286
        gbc.setState(0x1068, 0x3145, 0x5ae0, 0x54d8, 0x8eba, 0x4ea2, 0x1, 0x0);
        gbc.writeMem(0x1068, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x106a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0287
        gbc.setState(0x1b64, 0x34cc, 0x40c0, 0x43b6, 0xb8b5, 0xd638, 0x0, 0x0);
        gbc.writeMem(0x1b64, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x34cc, gbc.sp());
        EXPECT(0x1b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0288
        gbc.setState(0xe98a, 0x780c, 0x3140, 0xdcf6, 0x7ad4, 0x8141, 0x1, 0x0);
        gbc.writeMem(0xe98a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x780c, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98a));
        EXPECT(0xfb, gbc.readMem(0xe98b));
        // CB FB 0289
        gbc.setState(0x8a92, 0x2961, 0xa0c0, 0x3bb8, 0x9d1f, 0x491c, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a92));
        EXPECT(0xfb, gbc.readMem(0x8a93));
        // CB FB 028A
        gbc.setState(0x483d, 0x118, 0x5770, 0xc729, 0xc43e, 0x1c58, 0x1, 0x0);
        gbc.writeMem(0x483d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x118, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 028B
        gbc.setState(0xb79a, 0xaee3, 0xf8c0, 0x7eae, 0x7cde, 0x71b0, 0x1, 0x0);
        gbc.writeMem(0xb79a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0xfb, gbc.readMem(0xb79b));
        // CB FB 028C
        gbc.setState(0x9f0d, 0x6116, 0xe070, 0xd4af, 0xf78a, 0x60f, 0x0, 0x1);
        gbc.writeMem(0x9f0d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6116, gbc.sp());
        EXPECT(0x9f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0d));
        EXPECT(0xfb, gbc.readMem(0x9f0e));
        // CB FB 028D
        gbc.setState(0xc8e5, 0xd24d, 0xe850, 0x8aaf, 0x786, 0x8241, 0x1, 0x0);
        gbc.writeMem(0xc8e5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0xc8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e5));
        EXPECT(0xfb, gbc.readMem(0xc8e6));
        // CB FB 028E
        gbc.setState(0x9fcb, 0xf9d8, 0xa5b0, 0x765b, 0xf556, 0xaab0, 0x1, 0x1);
        gbc.writeMem(0x9fcb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf9d8, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcb));
        EXPECT(0xfb, gbc.readMem(0x9fcc));
        // CB FB 028F
        gbc.setState(0xb2f6, 0x20b1, 0x84c0, 0xe702, 0x531f, 0x9e46, 0x1, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x20b1, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f6));
        EXPECT(0xfb, gbc.readMem(0xb2f7));
        // CB FB 0290
        gbc.setState(0x2761, 0xdba5, 0xdda0, 0xf3fa, 0x2bb2, 0x61d3, 0x0, 0x1);
        gbc.writeMem(0x2761, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdba5, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0291
        gbc.setState(0x84ba, 0x60, 0x8070, 0xb176, 0x5f18, 0x5eeb, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ba));
        EXPECT(0xfb, gbc.readMem(0x84bb));
        // CB FB 0292
        gbc.setState(0x7e61, 0x9295, 0xd2c0, 0xc3f8, 0x3ad9, 0x65a0, 0x1, 0x0);
        gbc.writeMem(0x7e61, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0x7e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0293
        gbc.setState(0x45d, 0xa69d, 0x5330, 0xd2ab, 0x3383, 0xea0d, 0x0, 0x0);
        gbc.writeMem(0x45d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0294
        gbc.setState(0xc86c, 0x6966, 0x4e40, 0xa8bd, 0x9aac, 0x868f, 0x1, 0x1);
        gbc.writeMem(0xc86c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6966, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86c));
        EXPECT(0xfb, gbc.readMem(0xc86d));
        // CB FB 0295
        gbc.setState(0x87f3, 0x8b68, 0x8450, 0x439a, 0xd3a0, 0x19c8, 0x0, 0x0);
        gbc.writeMem(0x87f3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b68, gbc.sp());
        EXPECT(0x87f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f3));
        EXPECT(0xfb, gbc.readMem(0x87f4));
        // CB FB 0297
        gbc.setState(0x73d, 0x9278, 0x9b00, 0x896f, 0xbbe5, 0xd833, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0298
        gbc.setState(0x6a7a, 0xdfcc, 0xf00, 0x49f8, 0x7d3c, 0x8d77, 0x0, 0x1);
        gbc.writeMem(0x6a7a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0x6a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0299
        gbc.setState(0x8e5, 0xcae0, 0x2c00, 0x370e, 0xf60e, 0x5553, 0x1, 0x0);
        gbc.writeMem(0x8e5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcae0, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 029B
        gbc.setState(0x4eff, 0x65fa, 0xa710, 0xf3a7, 0xf25e, 0x7908, 0x1, 0x1);
        gbc.writeMem(0x4eff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 029C
        gbc.setState(0x5590, 0xf56a, 0x2020, 0xc4a1, 0x74b0, 0xd344, 0x0, 0x0);
        gbc.writeMem(0x5590, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 029D
        gbc.setState(0x4ec3, 0xdeec, 0x2cf0, 0x8814, 0x6826, 0x682, 0x1, 0x0);
        gbc.writeMem(0x4ec3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdeec, gbc.sp());
        EXPECT(0x4ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 029E
        gbc.setState(0x9b0d, 0x5a28, 0x7940, 0xf94c, 0x1fff, 0xc770, 0x1, 0x0);
        gbc.writeMem(0x9b0d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5a28, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0d));
        EXPECT(0xfb, gbc.readMem(0x9b0e));
        // CB FB 029F
        gbc.setState(0xdca5, 0xaf22, 0x9e30, 0x6e6f, 0x61fb, 0x4cbf, 0x0, 0x0);
        gbc.writeMem(0xdca5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0xdca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca5));
        EXPECT(0xfb, gbc.readMem(0xdca6));
        // CB FB 02A1
        gbc.setState(0xb83b, 0x2f8c, 0x8590, 0x2f7a, 0xf460, 0x5bc2, 0x0, 0x1);
        gbc.writeMem(0xb83b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2f8c, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83b));
        EXPECT(0xfb, gbc.readMem(0xb83c));
        // CB FB 02A3
        gbc.setState(0xb7ab, 0x2c44, 0xd7b0, 0x4ed5, 0xce32, 0x9cea, 0x1, 0x1);
        gbc.writeMem(0xb7ab, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0xb7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ab));
        EXPECT(0xfb, gbc.readMem(0xb7ac));
        // CB FB 02A4
        gbc.setState(0x9e20, 0xcf2c, 0x6b90, 0xc34e, 0xa186, 0x3ba9, 0x1, 0x1);
        gbc.writeMem(0x9e20, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcf2c, gbc.sp());
        EXPECT(0x9e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e20));
        EXPECT(0xfb, gbc.readMem(0x9e21));
        // CB FB 02A5
        gbc.setState(0xa771, 0xbe8a, 0x78d0, 0xfd38, 0x89f0, 0x3a2a, 0x1, 0x0);
        gbc.writeMem(0xa771, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbe8a, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa771));
        EXPECT(0xfb, gbc.readMem(0xa772));
        // CB FB 02A7
        gbc.setState(0x7a70, 0xeed, 0x9d20, 0x18c3, 0x9d8, 0x3c91, 0x1, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xeed, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02A8
        gbc.setState(0x55ab, 0xcef0, 0x6f30, 0xba03, 0xd9fe, 0x853e, 0x1, 0x1);
        gbc.writeMem(0x55ab, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02A9
        gbc.setState(0x8108, 0x6a0, 0x8be0, 0xb517, 0x4898, 0x89b1, 0x0, 0x1);
        gbc.writeMem(0x8108, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6a0, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8108));
        EXPECT(0xfb, gbc.readMem(0x8109));
        // CB FB 02AA
        gbc.setState(0xab9a, 0x77ac, 0x6e0, 0xb061, 0x52bf, 0xb6b9, 0x0, 0x0);
        gbc.writeMem(0xab9a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x77ac, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9a));
        EXPECT(0xfb, gbc.readMem(0xab9b));
        // CB FB 02AB
        gbc.setState(0xc4f8, 0xa0b8, 0xc9d0, 0xd6d0, 0x278e, 0xf303, 0x1, 0x1);
        gbc.writeMem(0xc4f8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0xc4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f8));
        EXPECT(0xfb, gbc.readMem(0xc4f9));
        // CB FB 02AC
        gbc.setState(0xbb26, 0x1bf4, 0xc080, 0x342b, 0xbf9d, 0x8ae0, 0x0, 0x1);
        gbc.writeMem(0xbb26, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb26));
        EXPECT(0xfb, gbc.readMem(0xbb27));
        // CB FB 02AD
        gbc.setState(0xac84, 0x1256, 0xb760, 0x9c2c, 0x124, 0xe010, 0x1, 0x1);
        gbc.writeMem(0xac84, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1256, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac84));
        EXPECT(0xfb, gbc.readMem(0xac85));
        // CB FB 02AE
        gbc.setState(0xdb6c, 0x72ca, 0x1750, 0x744d, 0x332c, 0x35db, 0x1, 0x0);
        gbc.writeMem(0xdb6c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x72ca, gbc.sp());
        EXPECT(0xdb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6c));
        EXPECT(0xfb, gbc.readMem(0xdb6d));
        // CB FB 02AF
        gbc.setState(0xec3, 0x21f7, 0x3110, 0xaf96, 0x2e21, 0x538c, 0x0, 0x0);
        gbc.writeMem(0xec3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x21f7, gbc.sp());
        EXPECT(0xec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02B0
        gbc.setState(0x2ccb, 0xcdaf, 0xb660, 0x3a75, 0xb4d3, 0x29c3, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02B3
        gbc.setState(0x1845, 0x7464, 0xc7c0, 0x6e4, 0xe911, 0x591b, 0x0, 0x0);
        gbc.writeMem(0x1845, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x1847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02B4
        gbc.setState(0x98c, 0x3d2b, 0x5940, 0x52a9, 0xc61b, 0xd242, 0x0, 0x0);
        gbc.writeMem(0x98c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02B5
        gbc.setState(0xcc8d, 0xd4da, 0xabd0, 0x9f11, 0xe0f, 0xed5a, 0x1, 0x1);
        gbc.writeMem(0xcc8d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0xcc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8d));
        EXPECT(0xfb, gbc.readMem(0xcc8e));
        // CB FB 02B6
        gbc.setState(0x706a, 0x7931, 0xcec0, 0xa015, 0x119f, 0x6ce6, 0x1, 0x1);
        gbc.writeMem(0x706a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7931, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02B7
        gbc.setState(0x504d, 0x1f38, 0x6300, 0xef34, 0x75c8, 0xd091, 0x1, 0x0);
        gbc.writeMem(0x504d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1f38, gbc.sp());
        EXPECT(0x504f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02B8
        gbc.setState(0xd815, 0xe78c, 0xaad0, 0x136a, 0xf583, 0x4da8, 0x0, 0x0);
        gbc.writeMem(0xd815, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe78c, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd815));
        EXPECT(0xfb, gbc.readMem(0xd816));
        // CB FB 02B9
        gbc.setState(0x8ecb, 0xf196, 0x200, 0x3595, 0xc4c2, 0x7600, 0x1, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0xfb, gbc.readMem(0x8ecc));
        // CB FB 02BA
        gbc.setState(0x60dc, 0x3218, 0x8230, 0x801, 0x6721, 0x75fd, 0x1, 0x1);
        gbc.writeMem(0x60dc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02BB
        gbc.setState(0xd0c1, 0x3bb9, 0xfd40, 0x466c, 0xa344, 0xdd33, 0x0, 0x1);
        gbc.writeMem(0xd0c1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3bb9, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c1));
        EXPECT(0xfb, gbc.readMem(0xd0c2));
        // CB FB 02BC
        gbc.setState(0x3312, 0xcf76, 0xabb0, 0xda92, 0x538f, 0x8f2d, 0x1, 0x0);
        gbc.writeMem(0x3312, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcf76, gbc.sp());
        EXPECT(0x3314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02BD
        gbc.setState(0xc950, 0x54d8, 0x6f90, 0xb451, 0xd42e, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0xc950, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0xc952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc950));
        EXPECT(0xfb, gbc.readMem(0xc951));
        // CB FB 02BF
        gbc.setState(0x234f, 0xa40e, 0xa3d0, 0xbfff, 0xe295, 0x41, 0x1, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa40e, gbc.sp());
        EXPECT(0x2351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02C0
        gbc.setState(0xb899, 0x94ca, 0x6c20, 0x2e84, 0x22f8, 0xa95, 0x1, 0x0);
        gbc.writeMem(0xb899, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x94ca, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb899));
        EXPECT(0xfb, gbc.readMem(0xb89a));
        // CB FB 02C1
        gbc.setState(0xca44, 0x73ea, 0xe030, 0x539e, 0xd3a3, 0x2c55, 0x1, 0x0);
        gbc.writeMem(0xca44, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x73ea, gbc.sp());
        EXPECT(0xca46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca44));
        EXPECT(0xfb, gbc.readMem(0xca45));
        // CB FB 02C2
        gbc.setState(0x7a11, 0x4680, 0xae90, 0xa1f1, 0x21d6, 0xe289, 0x0, 0x1);
        gbc.writeMem(0x7a11, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4680, gbc.sp());
        EXPECT(0x7a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02C3
        gbc.setState(0x14b2, 0xc959, 0x2b80, 0x6c47, 0x4ce3, 0x1934, 0x0, 0x1);
        gbc.writeMem(0x14b2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc959, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02C4
        gbc.setState(0x121f, 0x3a40, 0x7890, 0xe7a3, 0xd086, 0x2df9, 0x0, 0x1);
        gbc.writeMem(0x121f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3a40, gbc.sp());
        EXPECT(0x1221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02C5
        gbc.setState(0x1ba6, 0x8880, 0x58e0, 0xbe14, 0xad85, 0x602d, 0x0, 0x1);
        gbc.writeMem(0x1ba6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0x1ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02C6
        gbc.setState(0x3eec, 0xca0c, 0xd630, 0xdf8c, 0x6ad, 0x9f3e, 0x1, 0x0);
        gbc.writeMem(0x3eec, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xca0c, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02C7
        gbc.setState(0x5227, 0xa0ab, 0x4a0, 0xd174, 0x7075, 0x1ed4, 0x1, 0x1);
        gbc.writeMem(0x5227, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0x5229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02C9
        gbc.setState(0x1298, 0xd3e7, 0x2250, 0x32e3, 0x7e59, 0x7248, 0x0, 0x1);
        gbc.writeMem(0x1298, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x129a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02CA
        gbc.setState(0x6478, 0x4db6, 0x460, 0x372d, 0x1f71, 0x3572, 0x1, 0x1);
        gbc.writeMem(0x6478, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02CB
        gbc.setState(0xc12, 0xfae9, 0x1640, 0xd599, 0xf686, 0x4037, 0x0, 0x0);
        gbc.writeMem(0xc12, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfae9, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02CC
        gbc.setState(0x8e19, 0xa46a, 0x64c0, 0x8c1, 0xbf7a, 0x93a2, 0x0, 0x0);
        gbc.writeMem(0x8e19, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa46a, gbc.sp());
        EXPECT(0x8e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e19));
        EXPECT(0xfb, gbc.readMem(0x8e1a));
        // CB FB 02CD
        gbc.setState(0xe878, 0x325e, 0xd450, 0x298c, 0xb739, 0x88a4, 0x1, 0x1);
        gbc.writeMem(0xe878, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0xfb, gbc.readMem(0xe879));
        // CB FB 02CF
        gbc.setState(0xc6df, 0xa4f3, 0x4220, 0x6664, 0x64ba, 0x7213, 0x0, 0x0);
        gbc.writeMem(0xc6df, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6df));
        EXPECT(0xfb, gbc.readMem(0xc6e0));
        // CB FB 02D0
        gbc.setState(0xc0ac, 0x450b, 0x6f80, 0x728, 0xeeaf, 0xf2e6, 0x0, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0xfb, gbc.readMem(0xc0ad));
        // CB FB 02D1
        gbc.setState(0xb67, 0x5bed, 0x70b0, 0xcb6e, 0x8fcd, 0x3dc3, 0x0, 0x1);
        gbc.writeMem(0xb67, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0xb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02D2
        gbc.setState(0x7a9e, 0x4f1f, 0x3dc0, 0x421d, 0xde30, 0x36ea, 0x1, 0x0);
        gbc.writeMem(0x7a9e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02D3
        gbc.setState(0x8525, 0xdaa1, 0x5920, 0x5218, 0x88b8, 0xcea5, 0x1, 0x0);
        gbc.writeMem(0x8525, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8525));
        EXPECT(0xfb, gbc.readMem(0x8526));
        // CB FB 02D4
        gbc.setState(0x4103, 0xda4f, 0xa210, 0x95da, 0xc873, 0xb1f8, 0x1, 0x0);
        gbc.writeMem(0x4103, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x4105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02D5
        gbc.setState(0x238b, 0xb5d4, 0xf390, 0xd8e8, 0xef1b, 0x29d, 0x1, 0x1);
        gbc.writeMem(0x238b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb5d4, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02D6
        gbc.setState(0x3984, 0x6536, 0x6500, 0x6f03, 0xdbe5, 0x73ff, 0x0, 0x0);
        gbc.writeMem(0x3984, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6536, gbc.sp());
        EXPECT(0x3986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02D7
        gbc.setState(0x49d4, 0xd470, 0xaf30, 0x20aa, 0xb687, 0x452, 0x0, 0x1);
        gbc.writeMem(0x49d4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd470, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02D8
        gbc.setState(0x2dd7, 0x3f5, 0xd6e0, 0x4532, 0x5f06, 0xe10c, 0x1, 0x1);
        gbc.writeMem(0x2dd7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3f5, gbc.sp());
        EXPECT(0x2dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02D9
        gbc.setState(0xd62f, 0xcf33, 0x2fe0, 0x1823, 0x2b90, 0xf85d, 0x1, 0x0);
        gbc.writeMem(0xd62f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xd631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62f));
        EXPECT(0xfb, gbc.readMem(0xd630));
        // CB FB 02DA
        gbc.setState(0x7946, 0x3bd7, 0xd690, 0x4d21, 0x63b0, 0x48f8, 0x0, 0x1);
        gbc.writeMem(0x7946, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02DC
        gbc.setState(0x7e41, 0x6f96, 0x8fa0, 0xa7fd, 0x1a75, 0x1988, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02DD
        gbc.setState(0x7319, 0xf553, 0x6770, 0x6677, 0xe585, 0xd560, 0x0, 0x0);
        gbc.writeMem(0x7319, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf553, gbc.sp());
        EXPECT(0x731b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02DF
        gbc.setState(0x68e0, 0xc8a5, 0xf20, 0xe1a4, 0x2a4a, 0x6ef4, 0x1, 0x1);
        gbc.writeMem(0x68e0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc8a5, gbc.sp());
        EXPECT(0x68e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02E1
        gbc.setState(0xd222, 0x720b, 0xac70, 0x8ef6, 0x5796, 0xfb7a, 0x0, 0x0);
        gbc.writeMem(0xd222, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd222));
        EXPECT(0xfb, gbc.readMem(0xd223));
        // CB FB 02E2
        gbc.setState(0x6ac2, 0x9764, 0xfce0, 0xfbe4, 0x5ed8, 0x4df4, 0x1, 0x1);
        gbc.writeMem(0x6ac2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0x6ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02E3
        gbc.setState(0x4688, 0x36a8, 0xd730, 0x8d6a, 0xa057, 0xe475, 0x0, 0x1);
        gbc.writeMem(0x4688, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x36a8, gbc.sp());
        EXPECT(0x468a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02E4
        gbc.setState(0x5ce5, 0x72f9, 0x1ae0, 0xb07b, 0xb919, 0x740c, 0x1, 0x0);
        gbc.writeMem(0x5ce5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0x5ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02E5
        gbc.setState(0xc6ec, 0xd976, 0x4880, 0xd047, 0x2c68, 0x124e, 0x0, 0x1);
        gbc.writeMem(0xc6ec, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd976, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ec));
        EXPECT(0xfb, gbc.readMem(0xc6ed));
        // CB FB 02E6
        gbc.setState(0x47ea, 0x6523, 0xa5c0, 0x3ad1, 0xc0ad, 0xcefb, 0x1, 0x1);
        gbc.writeMem(0x47ea, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6523, gbc.sp());
        EXPECT(0x47ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02E7
        gbc.setState(0x4425, 0x1bd, 0x2c00, 0x24ce, 0xc48c, 0xab3a, 0x1, 0x0);
        gbc.writeMem(0x4425, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02E8
        gbc.setState(0x7587, 0xf02e, 0x6620, 0xee9, 0xebd, 0xa667, 0x1, 0x1);
        gbc.writeMem(0x7587, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf02e, gbc.sp());
        EXPECT(0x7589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02EA
        gbc.setState(0x9ea, 0x2670, 0x4360, 0x3e0f, 0x1132, 0x101f, 0x0, 0x1);
        gbc.writeMem(0x9ea, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0x9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02EB
        gbc.setState(0x6f9, 0x69d4, 0xd650, 0x97dd, 0xe5b8, 0x19f6, 0x0, 0x1);
        gbc.writeMem(0x6f9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x69d4, gbc.sp());
        EXPECT(0x6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02EC
        gbc.setState(0x7280, 0x7a5b, 0xec30, 0x21bc, 0x52bd, 0xb70c, 0x1, 0x1);
        gbc.writeMem(0x7280, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a5b, gbc.sp());
        EXPECT(0x7282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02ED
        gbc.setState(0x9e1f, 0x782a, 0x1590, 0xa0ff, 0x81fe, 0x2f75, 0x1, 0x1);
        gbc.writeMem(0x9e1f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0x9e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1f));
        EXPECT(0xfb, gbc.readMem(0x9e20));
        // CB FB 02EE
        gbc.setState(0x57c8, 0xa71a, 0x3e40, 0xea45, 0xdab7, 0x189e, 0x0, 0x0);
        gbc.writeMem(0x57c8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x57ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02F0
        gbc.setState(0xa6b6, 0xec39, 0x92a0, 0x1d4, 0x919e, 0x5450, 0x0, 0x0);
        gbc.writeMem(0xa6b6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0xa6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b6));
        EXPECT(0xfb, gbc.readMem(0xa6b7));
        // CB FB 02F1
        gbc.setState(0x532e, 0x60b7, 0xf370, 0x94b0, 0x2e49, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x532e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02F2
        gbc.setState(0x2279, 0x1ea9, 0xad80, 0xe019, 0x9834, 0x9472, 0x0, 0x0);
        gbc.writeMem(0x2279, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x227b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02F3
        gbc.setState(0xe493, 0x3953, 0x3b00, 0x635c, 0x75c1, 0xfba7, 0x0, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe493));
        EXPECT(0xfb, gbc.readMem(0xe494));
        // CB FB 02F4
        gbc.setState(0x32fe, 0xad44, 0x8aa0, 0x4337, 0x13e4, 0x5dab, 0x1, 0x0);
        gbc.writeMem(0x32fe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02F5
        gbc.setState(0xeabc, 0x8c55, 0xc580, 0x3401, 0x906a, 0xb1b5, 0x1, 0x1);
        gbc.writeMem(0xeabc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8c55, gbc.sp());
        EXPECT(0xeabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabc));
        EXPECT(0xfb, gbc.readMem(0xeabd));
        // CB FB 02F6
        gbc.setState(0xb402, 0x804c, 0x71e0, 0x1b6a, 0x64a8, 0x398a, 0x0, 0x0);
        gbc.writeMem(0xb402, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x804c, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb402));
        EXPECT(0xfb, gbc.readMem(0xb403));
        // CB FB 02F7
        gbc.setState(0x6d82, 0xa619, 0x6c30, 0x94af, 0x7a3f, 0x38d3, 0x1, 0x0);
        gbc.writeMem(0x6d82, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa619, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 02F8
        gbc.setState(0xe641, 0x1c1, 0x550, 0x2730, 0xc61, 0xaead, 0x0, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0xe643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe641));
        EXPECT(0xfb, gbc.readMem(0xe642));
        // CB FB 02F9
        gbc.setState(0xd788, 0x2344, 0xb3c0, 0xc66c, 0xd833, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0xd788, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2344, gbc.sp());
        EXPECT(0xd78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd788));
        EXPECT(0xfb, gbc.readMem(0xd789));
        // CB FB 02FA
        gbc.setState(0x5382, 0xe205, 0x7ca0, 0xa076, 0x77bb, 0xc223, 0x0, 0x0);
        gbc.writeMem(0x5382, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0x5384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 02FB
        gbc.setState(0xa3d4, 0x3c5e, 0xcdd0, 0x97aa, 0x5bdf, 0x1dea, 0x0, 0x1);
        gbc.writeMem(0xa3d4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0xa3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d4));
        EXPECT(0xfb, gbc.readMem(0xa3d5));
        // CB FB 02FC
        gbc.setState(0x99dd, 0x5365, 0xcb90, 0x8abc, 0xabe2, 0xbb5, 0x1, 0x0);
        gbc.writeMem(0x99dd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5365, gbc.sp());
        EXPECT(0x99df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99dd));
        EXPECT(0xfb, gbc.readMem(0x99de));
        // CB FB 02FD
        gbc.setState(0xa0ba, 0x1be0, 0xca10, 0xe93a, 0x9e39, 0xeb12, 0x1, 0x0);
        gbc.writeMem(0xa0ba, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1be0, gbc.sp());
        EXPECT(0xa0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ba));
        EXPECT(0xfb, gbc.readMem(0xa0bb));
        // CB FB 02FE
        gbc.setState(0x9610, 0x7e04, 0xf480, 0x7308, 0x8878, 0xcac9, 0x1, 0x0);
        gbc.writeMem(0x9610, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7e04, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9610));
        EXPECT(0xfb, gbc.readMem(0x9611));
        // CB FB 02FF
        gbc.setState(0x5249, 0x7d86, 0xb690, 0xc07b, 0x6a3c, 0xdbfc, 0x0, 0x0);
        gbc.writeMem(0x5249, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7d86, gbc.sp());
        EXPECT(0x524b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0300
        gbc.setState(0xa2a3, 0xab90, 0xc240, 0x87ab, 0x9efa, 0x1e13, 0x0, 0x0);
        gbc.writeMem(0xa2a3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0xa2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a3));
        EXPECT(0xfb, gbc.readMem(0xa2a4));
        // CB FB 0301
        gbc.setState(0x457b, 0xf8cc, 0xb980, 0xba76, 0xd805, 0xe5d4, 0x1, 0x1);
        gbc.writeMem(0x457b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf8cc, gbc.sp());
        EXPECT(0x457d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0302
        gbc.setState(0x4988, 0x91c0, 0x6500, 0x517b, 0x4f26, 0x7cc3, 0x0, 0x0);
        gbc.writeMem(0x4988, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x91c0, gbc.sp());
        EXPECT(0x498a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0304
        gbc.setState(0xa62, 0x261, 0xe3e0, 0x2d4d, 0x185c, 0xd87d, 0x0, 0x0);
        gbc.writeMem(0xa62, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x261, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0305
        gbc.setState(0x2219, 0x8a37, 0x6ef0, 0x4cde, 0xa9a2, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x2219, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0306
        gbc.setState(0xead2, 0xdff7, 0x5e10, 0xdf89, 0x4ab6, 0xffed, 0x1, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdff7, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead2));
        EXPECT(0xfb, gbc.readMem(0xead3));
        // CB FB 0307
        gbc.setState(0xb56, 0xb741, 0xd620, 0x2ee7, 0xe143, 0x343c, 0x0, 0x0);
        gbc.writeMem(0xb56, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb741, gbc.sp());
        EXPECT(0xb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0308
        gbc.setState(0x7dfa, 0xa555, 0xe10, 0xffcb, 0x3f13, 0x504d, 0x1, 0x0);
        gbc.writeMem(0x7dfa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0309
        gbc.setState(0x65ac, 0x327e, 0xcdc0, 0x55bb, 0x32a2, 0x3f42, 0x0, 0x0);
        gbc.writeMem(0x65ac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x327e, gbc.sp());
        EXPECT(0x65ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 030A
        gbc.setState(0x5e74, 0xa0bd, 0xf60, 0xf092, 0x97d9, 0xe78c, 0x0, 0x1);
        gbc.writeMem(0x5e74, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 030B
        gbc.setState(0xc003, 0x13d, 0x82d0, 0x7684, 0xc964, 0x5855, 0x0, 0x1);
        gbc.writeMem(0xc003, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0xc005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc003));
        EXPECT(0xfb, gbc.readMem(0xc004));
        // CB FB 030C
        gbc.setState(0xb2fe, 0x1712, 0xfa60, 0x8666, 0xe377, 0xad00, 0x0, 0x0);
        gbc.writeMem(0xb2fe, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1712, gbc.sp());
        EXPECT(0xb300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fe));
        EXPECT(0xfb, gbc.readMem(0xb2ff));
        // CB FB 030D
        gbc.setState(0xabcd, 0x9fc0, 0x9020, 0xa1ad, 0x517d, 0x253c, 0x0, 0x0);
        gbc.writeMem(0xabcd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcd));
        EXPECT(0xfb, gbc.readMem(0xabce));
        // CB FB 030E
        gbc.setState(0x4998, 0x796e, 0xe8e0, 0xfcf8, 0xa241, 0x7551, 0x0, 0x1);
        gbc.writeMem(0x4998, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x796e, gbc.sp());
        EXPECT(0x499a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 030F
        gbc.setState(0x2d69, 0xaea7, 0x500, 0x853f, 0x7ae9, 0x1543, 0x0, 0x1);
        gbc.writeMem(0x2d69, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x2d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0310
        gbc.setState(0x17e7, 0xc4d, 0x7df0, 0xa762, 0x29f5, 0x3acd, 0x0, 0x1);
        gbc.writeMem(0x17e7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0x17e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0311
        gbc.setState(0x7d4e, 0x7b29, 0xd090, 0x601e, 0xd78c, 0x697e, 0x0, 0x0);
        gbc.writeMem(0x7d4e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7b29, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0312
        gbc.setState(0x6b0b, 0xd7ef, 0x9590, 0x231b, 0x1d42, 0xa57a, 0x1, 0x1);
        gbc.writeMem(0x6b0b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd7ef, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0313
        gbc.setState(0x213c, 0x575e, 0x5cf0, 0x1cfd, 0xb175, 0x7183, 0x1, 0x0);
        gbc.writeMem(0x213c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0x213e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0314
        gbc.setState(0x3e61, 0x508d, 0x66d0, 0xf951, 0x682a, 0x2b12, 0x1, 0x1);
        gbc.writeMem(0x3e61, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x508d, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0316
        gbc.setState(0x7361, 0x60ae, 0xc540, 0xed5c, 0x1056, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x7361, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x60ae, gbc.sp());
        EXPECT(0x7363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0317
        gbc.setState(0x2f0b, 0x5c88, 0xbc10, 0x5485, 0xdd54, 0xb527, 0x0, 0x1);
        gbc.writeMem(0x2f0b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0318
        gbc.setState(0xd5dc, 0x9e80, 0xda0, 0x354c, 0x2e05, 0xeb5d, 0x1, 0x0);
        gbc.writeMem(0xd5dc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9e80, gbc.sp());
        EXPECT(0xd5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5dc));
        EXPECT(0xfb, gbc.readMem(0xd5dd));
        // CB FB 0319
        gbc.setState(0x44ac, 0x722e, 0x6700, 0x9f29, 0x1957, 0x5be, 0x0, 0x0);
        gbc.writeMem(0x44ac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x722e, gbc.sp());
        EXPECT(0x44ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 031A
        gbc.setState(0x4cf0, 0xbb19, 0xc0b0, 0xa84f, 0x2ba5, 0x1ad2, 0x0, 0x1);
        gbc.writeMem(0x4cf0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbb19, gbc.sp());
        EXPECT(0x4cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 031B
        gbc.setState(0x51f6, 0x1759, 0x71e0, 0x9410, 0x507c, 0xeeb2, 0x1, 0x1);
        gbc.writeMem(0x51f6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0x51f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 031D
        gbc.setState(0x158f, 0xf9ac, 0xc380, 0x4a59, 0xd19c, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x158f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 031E
        gbc.setState(0x906f, 0xd9bd, 0x3fd0, 0xa464, 0xbd83, 0xc0de, 0x1, 0x1);
        gbc.writeMem(0x906f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd9bd, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906f));
        EXPECT(0xfb, gbc.readMem(0x9070));
        // CB FB 031F
        gbc.setState(0x33c5, 0xb65b, 0x9310, 0xe497, 0x2ab5, 0x99f9, 0x0, 0x1);
        gbc.writeMem(0x33c5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0320
        gbc.setState(0x84af, 0xc571, 0xfb10, 0x683e, 0x2288, 0xcbff, 0x0, 0x1);
        gbc.writeMem(0x84af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0xfb, gbc.readMem(0x84b0));
        // CB FB 0321
        gbc.setState(0x88c2, 0x3a12, 0xa8b0, 0xc7d1, 0xb1a1, 0xa0bc, 0x1, 0x0);
        gbc.writeMem(0x88c2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3a12, gbc.sp());
        EXPECT(0x88c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c2));
        EXPECT(0xfb, gbc.readMem(0x88c3));
        // CB FB 0322
        gbc.setState(0x786b, 0xd570, 0xf240, 0x9deb, 0x4983, 0xa33f, 0x1, 0x1);
        gbc.writeMem(0x786b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd570, gbc.sp());
        EXPECT(0x786d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0323
        gbc.setState(0x2f9, 0xf603, 0x5b50, 0xbaf8, 0x65e3, 0x5c8a, 0x1, 0x0);
        gbc.writeMem(0x2f9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf603, gbc.sp());
        EXPECT(0x2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0324
        gbc.setState(0x59fa, 0x7a9d, 0x2650, 0xb749, 0x6a86, 0x2a17, 0x0, 0x0);
        gbc.writeMem(0x59fa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a9d, gbc.sp());
        EXPECT(0x59fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0325
        gbc.setState(0x4d2f, 0x7be9, 0xa440, 0xc73a, 0x7aae, 0x929e, 0x1, 0x0);
        gbc.writeMem(0x4d2f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7be9, gbc.sp());
        EXPECT(0x4d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0327
        gbc.setState(0xd1b2, 0xa169, 0x1480, 0xb1d, 0x2b69, 0xc63b, 0x0, 0x0);
        gbc.writeMem(0xd1b2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa169, gbc.sp());
        EXPECT(0xd1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b2));
        EXPECT(0xfb, gbc.readMem(0xd1b3));
        // CB FB 0329
        gbc.setState(0xbd94, 0x6613, 0xaf70, 0x683d, 0xbc69, 0xebc, 0x0, 0x0);
        gbc.writeMem(0xbd94, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6613, gbc.sp());
        EXPECT(0xbd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd94));
        EXPECT(0xfb, gbc.readMem(0xbd95));
        // CB FB 032A
        gbc.setState(0xa0fd, 0xd518, 0x3a20, 0xc5e4, 0x22af, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0xa0fd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fd));
        EXPECT(0xfb, gbc.readMem(0xa0fe));
        // CB FB 032B
        gbc.setState(0x93a4, 0x4b5f, 0xfc0, 0x40b8, 0xcc8c, 0x136e, 0x1, 0x0);
        gbc.writeMem(0x93a4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0x93a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a4));
        EXPECT(0xfb, gbc.readMem(0x93a5));
        // CB FB 032C
        gbc.setState(0x5ea9, 0xf78c, 0x7100, 0x530c, 0x4fd4, 0xfb2e, 0x0, 0x0);
        gbc.writeMem(0x5ea9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 032D
        gbc.setState(0xe730, 0x5b76, 0x1d10, 0x5a8d, 0x44dc, 0x7254, 0x1, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5b76, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe730));
        EXPECT(0xfb, gbc.readMem(0xe731));
        // CB FB 032E
        gbc.setState(0xe9de, 0xed4c, 0xad60, 0x3efd, 0x1e3f, 0x236f, 0x1, 0x1);
        gbc.writeMem(0xe9de, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9de));
        EXPECT(0xfb, gbc.readMem(0xe9df));
        // CB FB 032F
        gbc.setState(0xc0d9, 0xd4ae, 0x2680, 0xb54d, 0x352a, 0xdc55, 0x0, 0x1);
        gbc.writeMem(0xc0d9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0xc0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d9));
        EXPECT(0xfb, gbc.readMem(0xc0da));
        // CB FB 0330
        gbc.setState(0xa18, 0xb9d1, 0x2820, 0xd8f3, 0x48c9, 0x5dab, 0x0, 0x1);
        gbc.writeMem(0xa18, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb9d1, gbc.sp());
        EXPECT(0xa1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0332
        gbc.setState(0x6f22, 0x112c, 0xca0, 0x715b, 0x8153, 0x270, 0x0, 0x1);
        gbc.writeMem(0x6f22, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x112c, gbc.sp());
        EXPECT(0x6f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0333
        gbc.setState(0xd1e9, 0x4e1, 0x8e70, 0xdd26, 0x937c, 0x3553, 0x0, 0x0);
        gbc.writeMem(0xd1e9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4e1, gbc.sp());
        EXPECT(0xd1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e9));
        EXPECT(0xfb, gbc.readMem(0xd1ea));
        // CB FB 0334
        gbc.setState(0x46b2, 0xf8bc, 0x4170, 0x2945, 0xe775, 0xbea5, 0x1, 0x0);
        gbc.writeMem(0x46b2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0x46b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0335
        gbc.setState(0xbc64, 0x8b11, 0x50, 0x271e, 0xeb53, 0xa50c, 0x0, 0x0);
        gbc.writeMem(0xbc64, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8b11, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc64));
        EXPECT(0xfb, gbc.readMem(0xbc65));
        // CB FB 0336
        gbc.setState(0x7735, 0x26fd, 0x2510, 0xd9aa, 0x810c, 0xc0bf, 0x0, 0x1);
        gbc.writeMem(0x7735, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0337
        gbc.setState(0x5411, 0xe92c, 0x69e0, 0xa2c1, 0x9df6, 0xdf94, 0x0, 0x0);
        gbc.writeMem(0x5411, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe92c, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0338
        gbc.setState(0xcf30, 0xa9ba, 0xb120, 0x1344, 0x3867, 0xdfea, 0x1, 0x1);
        gbc.writeMem(0xcf30, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa9ba, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf30));
        EXPECT(0xfb, gbc.readMem(0xcf31));
        // CB FB 0339
        gbc.setState(0xedb7, 0x726, 0x37b0, 0x2983, 0xa588, 0x7309, 0x0, 0x1);
        gbc.writeMem(0xedb7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x726, gbc.sp());
        EXPECT(0xedb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb7));
        EXPECT(0xfb, gbc.readMem(0xedb8));
        // CB FB 033A
        gbc.setState(0x5b18, 0x31ed, 0x1e70, 0x249f, 0x77bc, 0x89c5, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 033B
        gbc.setState(0x132a, 0x315f, 0x9bf0, 0x1249, 0xd967, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x132a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x315f, gbc.sp());
        EXPECT(0x132c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 033C
        gbc.setState(0x216d, 0xaa98, 0x4920, 0x3cc1, 0x623e, 0x8001, 0x0, 0x1);
        gbc.writeMem(0x216d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0x216f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 033D
        gbc.setState(0x97d8, 0x3d5e, 0xbb80, 0x6fd, 0xc7b4, 0x58bb, 0x1, 0x1);
        gbc.writeMem(0x97d8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d8));
        EXPECT(0xfb, gbc.readMem(0x97d9));
        // CB FB 033E
        gbc.setState(0x795f, 0xd7f5, 0x43e0, 0xaf27, 0x8494, 0x1e02, 0x1, 0x1);
        gbc.writeMem(0x795f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd7f5, gbc.sp());
        EXPECT(0x7961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 033F
        gbc.setState(0x6b5a, 0x8653, 0x300, 0x4c0c, 0xb1b7, 0x1d19, 0x1, 0x0);
        gbc.writeMem(0x6b5a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8653, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0340
        gbc.setState(0xcb6, 0x31a, 0x4010, 0x58e6, 0xa937, 0x5282, 0x1, 0x0);
        gbc.writeMem(0xcb6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31a, gbc.sp());
        EXPECT(0xcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0341
        gbc.setState(0x3f17, 0xc166, 0x37d0, 0x5eca, 0x56cf, 0x1f85, 0x0, 0x0);
        gbc.writeMem(0x3f17, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0342
        gbc.setState(0x7c6e, 0xebf, 0x7d50, 0x7e45, 0xe7bd, 0x370f, 0x1, 0x1);
        gbc.writeMem(0x7c6e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xebf, gbc.sp());
        EXPECT(0x7c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0343
        gbc.setState(0xd547, 0xd553, 0x1c00, 0x19a3, 0x84f2, 0x45ea, 0x1, 0x0);
        gbc.writeMem(0xd547, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd553, gbc.sp());
        EXPECT(0xd549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd547));
        EXPECT(0xfb, gbc.readMem(0xd548));
        // CB FB 0344
        gbc.setState(0xb102, 0x7e38, 0xac70, 0xac18, 0xf298, 0x2ee4, 0x0, 0x0);
        gbc.writeMem(0xb102, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb102));
        EXPECT(0xfb, gbc.readMem(0xb103));
        // CB FB 0345
        gbc.setState(0xd907, 0x73e2, 0x74e0, 0x5e4d, 0x1daa, 0xe8c1, 0x0, 0x1);
        gbc.writeMem(0xd907, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x73e2, gbc.sp());
        EXPECT(0xd909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd907));
        EXPECT(0xfb, gbc.readMem(0xd908));
        // CB FB 0346
        gbc.setState(0xae0f, 0xfea3, 0xf810, 0x5940, 0x778a, 0x96b1, 0x0, 0x0);
        gbc.writeMem(0xae0f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0xfb, gbc.readMem(0xae10));
        // CB FB 0347
        gbc.setState(0x9c52, 0x35b5, 0xd150, 0x6746, 0xf259, 0x565a, 0x1, 0x0);
        gbc.writeMem(0x9c52, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x35b5, gbc.sp());
        EXPECT(0x9c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c52));
        EXPECT(0xfb, gbc.readMem(0x9c53));
        // CB FB 0348
        gbc.setState(0x9d85, 0x2e77, 0x7ce0, 0x10ee, 0x1e83, 0x5c57, 0x1, 0x0);
        gbc.writeMem(0x9d85, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2e77, gbc.sp());
        EXPECT(0x9d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d85));
        EXPECT(0xfb, gbc.readMem(0x9d86));
        // CB FB 0349
        gbc.setState(0x93ae, 0xf45a, 0xfd60, 0x2884, 0xdb91, 0xdbb3, 0x0, 0x1);
        gbc.writeMem(0x93ae, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf45a, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ae));
        EXPECT(0xfb, gbc.readMem(0x93af));
        // CB FB 034A
        gbc.setState(0xdb0a, 0xc236, 0xa8a0, 0x3141, 0x9ac2, 0x6f06, 0x1, 0x0);
        gbc.writeMem(0xdb0a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc236, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0a));
        EXPECT(0xfb, gbc.readMem(0xdb0b));
        // CB FB 034B
        gbc.setState(0x1ddc, 0x1aaf, 0x8db0, 0xcc42, 0x8182, 0x7aa2, 0x0, 0x1);
        gbc.writeMem(0x1ddc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1aaf, gbc.sp());
        EXPECT(0x1dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 034C
        gbc.setState(0x2e20, 0x3dd7, 0x33a0, 0xece6, 0x1be3, 0x735e, 0x1, 0x1);
        gbc.writeMem(0x2e20, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3dd7, gbc.sp());
        EXPECT(0x2e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 034D
        gbc.setState(0x7109, 0x4b8b, 0x6170, 0x937c, 0xfb32, 0x61e0, 0x0, 0x1);
        gbc.writeMem(0x7109, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 034E
        gbc.setState(0x2ea5, 0xb34f, 0xbb80, 0x3a90, 0xce55, 0xc195, 0x1, 0x1);
        gbc.writeMem(0x2ea5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0x2ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 034F
        gbc.setState(0x16d9, 0x1049, 0xe460, 0x6151, 0x49cd, 0x51e5, 0x1, 0x0);
        gbc.writeMem(0x16d9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1049, gbc.sp());
        EXPECT(0x16db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0350
        gbc.setState(0xc01c, 0x6564, 0x7720, 0x70e2, 0x4676, 0x7ee0, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6564, gbc.sp());
        EXPECT(0xc01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01c));
        EXPECT(0xfb, gbc.readMem(0xc01d));
        // CB FB 0351
        gbc.setState(0x6e0e, 0x37e5, 0x4720, 0xe4f9, 0xbe85, 0x9c4f, 0x0, 0x1);
        gbc.writeMem(0x6e0e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0352
        gbc.setState(0x9b17, 0x84a8, 0xf3b0, 0xb6ff, 0x3c5a, 0xf717, 0x1, 0x0);
        gbc.writeMem(0x9b17, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x84a8, gbc.sp());
        EXPECT(0x9b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b17));
        EXPECT(0xfb, gbc.readMem(0x9b18));
        // CB FB 0353
        gbc.setState(0xa913, 0x4ebf, 0xc6b0, 0xef95, 0xd9f0, 0x1ea2, 0x0, 0x0);
        gbc.writeMem(0xa913, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0xa915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa913));
        EXPECT(0xfb, gbc.readMem(0xa914));
        // CB FB 0354
        gbc.setState(0x4009, 0x7d06, 0x1490, 0xac2e, 0xecc, 0xe9d4, 0x0, 0x1);
        gbc.writeMem(0x4009, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7d06, gbc.sp());
        EXPECT(0x400b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0355
        gbc.setState(0xc1ad, 0x332a, 0xe010, 0x2889, 0x4521, 0x9077, 0x0, 0x1);
        gbc.writeMem(0xc1ad, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x332a, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0xfb, gbc.readMem(0xc1ae));
        // CB FB 0356
        gbc.setState(0x5ea7, 0x9d68, 0x8ec0, 0xfcc0, 0xbd4f, 0x9012, 0x1, 0x0);
        gbc.writeMem(0x5ea7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0357
        gbc.setState(0xa50d, 0x4c43, 0x9e30, 0x3068, 0xa147, 0xfa2b, 0x0, 0x1);
        gbc.writeMem(0xa50d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4c43, gbc.sp());
        EXPECT(0xa50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50d));
        EXPECT(0xfb, gbc.readMem(0xa50e));
        // CB FB 0358
        gbc.setState(0x1071, 0x5c2, 0x6960, 0x9159, 0x7bc8, 0xfa0f, 0x0, 0x1);
        gbc.writeMem(0x1071, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0x1073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0359
        gbc.setState(0x9bfa, 0x6555, 0xb0b0, 0xd406, 0x14ca, 0x923f, 0x1, 0x0);
        gbc.writeMem(0x9bfa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6555, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfa));
        EXPECT(0xfb, gbc.readMem(0x9bfb));
        // CB FB 035A
        gbc.setState(0x39b8, 0xc33f, 0x8360, 0x6425, 0x2b0f, 0xbcd1, 0x0, 0x1);
        gbc.writeMem(0x39b8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc33f, gbc.sp());
        EXPECT(0x39ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 035B
        gbc.setState(0xb30c, 0xcd7e, 0x1d80, 0xec08, 0xabdd, 0x3dd7, 0x1, 0x1);
        gbc.writeMem(0xb30c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30c));
        EXPECT(0xfb, gbc.readMem(0xb30d));
        // CB FB 035C
        gbc.setState(0x1a93, 0x3d56, 0xe7a0, 0x2704, 0x8ba1, 0x2ce3, 0x0, 0x0);
        gbc.writeMem(0x1a93, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x1a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 035D
        gbc.setState(0x8dd8, 0x2113, 0x4910, 0xa3cf, 0xae88, 0xf2b, 0x1, 0x1);
        gbc.writeMem(0x8dd8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd8));
        EXPECT(0xfb, gbc.readMem(0x8dd9));
        // CB FB 035E
        gbc.setState(0x320d, 0xb35c, 0x75b0, 0xcd3f, 0xc14a, 0x7335, 0x1, 0x1);
        gbc.writeMem(0x320d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb35c, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 035F
        gbc.setState(0x3b80, 0xc9f0, 0xf060, 0x903, 0x591b, 0x15a4, 0x0, 0x1);
        gbc.writeMem(0x3b80, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc9f0, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0360
        gbc.setState(0xca9c, 0xd1a1, 0xa0b0, 0xdd48, 0x43b, 0xe70f, 0x0, 0x0);
        gbc.writeMem(0xca9c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd1a1, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9c));
        EXPECT(0xfb, gbc.readMem(0xca9d));
        // CB FB 0361
        gbc.setState(0xbd36, 0x2a68, 0xf910, 0xa3f5, 0x6ab2, 0xf49e, 0x0, 0x1);
        gbc.writeMem(0xbd36, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2a68, gbc.sp());
        EXPECT(0xbd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd36));
        EXPECT(0xfb, gbc.readMem(0xbd37));
        // CB FB 0362
        gbc.setState(0x1660, 0x28e3, 0x9480, 0x62df, 0x530b, 0xd663, 0x1, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x28e3, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0363
        gbc.setState(0x5f14, 0xe4ef, 0xea40, 0x866b, 0xfd6a, 0x190a, 0x1, 0x1);
        gbc.writeMem(0x5f14, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0364
        gbc.setState(0x1cb1, 0xc698, 0x890, 0x4eaa, 0x1a47, 0x3e1d, 0x0, 0x1);
        gbc.writeMem(0x1cb1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0365
        gbc.setState(0x295b, 0x81a4, 0xe930, 0x9f6e, 0x7e18, 0xc8be, 0x1, 0x0);
        gbc.writeMem(0x295b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x295d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0366
        gbc.setState(0xe11c, 0xd72a, 0x200, 0xc0ec, 0xa027, 0x6d74, 0x1, 0x0);
        gbc.writeMem(0xe11c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd72a, gbc.sp());
        EXPECT(0xe11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11c));
        EXPECT(0xfb, gbc.readMem(0xe11d));
        // CB FB 0367
        gbc.setState(0xafa8, 0x2474, 0xd790, 0x1af2, 0xdf69, 0xe618, 0x0, 0x0);
        gbc.writeMem(0xafa8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2474, gbc.sp());
        EXPECT(0xafaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa8));
        EXPECT(0xfb, gbc.readMem(0xafa9));
        // CB FB 0368
        gbc.setState(0x5c58, 0xa5dd, 0xd4b0, 0xe400, 0x2b82, 0x5403, 0x0, 0x1);
        gbc.writeMem(0x5c58, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0x5c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 036A
        gbc.setState(0x9518, 0x77bf, 0x3990, 0x9886, 0x4eb9, 0x69d4, 0x1, 0x0);
        gbc.writeMem(0x9518, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9518));
        EXPECT(0xfb, gbc.readMem(0x9519));
        // CB FB 036B
        gbc.setState(0x87f5, 0x508a, 0xba90, 0x2da8, 0xb1ee, 0x3b13, 0x0, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x508a, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0xfb, gbc.readMem(0x87f6));
        // CB FB 036C
        gbc.setState(0x54af, 0xf758, 0x2ca0, 0x62a9, 0x2911, 0xeb17, 0x1, 0x1);
        gbc.writeMem(0x54af, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0x54b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 036D
        gbc.setState(0xeb2f, 0xbcb7, 0x3270, 0x1e5, 0xd7ab, 0x43ce, 0x0, 0x1);
        gbc.writeMem(0xeb2f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbcb7, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0xfb, gbc.readMem(0xeb30));
        // CB FB 036E
        gbc.setState(0x3c3d, 0x35b0, 0xd4f0, 0xd336, 0xc00f, 0x6063, 0x1, 0x1);
        gbc.writeMem(0x3c3d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x35b0, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 036F
        gbc.setState(0x3048, 0x1e53, 0xf040, 0xb65e, 0x81f3, 0xce28, 0x0, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1e53, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0370
        gbc.setState(0x8a6f, 0x7de1, 0x6da0, 0xc11e, 0xfc8b, 0xb089, 0x1, 0x1);
        gbc.writeMem(0x8a6f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7de1, gbc.sp());
        EXPECT(0x8a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6f));
        EXPECT(0xfb, gbc.readMem(0x8a70));
        // CB FB 0371
        gbc.setState(0x6817, 0x975, 0xd090, 0x7604, 0x4a8c, 0x1637, 0x0, 0x0);
        gbc.writeMem(0x6817, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x975, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0372
        gbc.setState(0xcf2b, 0x8e94, 0x5bb0, 0xb195, 0xc982, 0xa339, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8e94, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0xfb, gbc.readMem(0xcf2c));
        // CB FB 0373
        gbc.setState(0x6624, 0x3e65, 0x6650, 0xfd08, 0xcd24, 0x698e, 0x0, 0x1);
        gbc.writeMem(0x6624, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x6626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0374
        gbc.setState(0x39d0, 0x8e53, 0xdc0, 0xd575, 0x3f54, 0x1c5b, 0x0, 0x0);
        gbc.writeMem(0x39d0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8e53, gbc.sp());
        EXPECT(0x39d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0375
        gbc.setState(0xa211, 0x3b4d, 0x73e0, 0xaffc, 0x8371, 0x54b4, 0x1, 0x0);
        gbc.writeMem(0xa211, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3b4d, gbc.sp());
        EXPECT(0xa213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa211));
        EXPECT(0xfb, gbc.readMem(0xa212));
        // CB FB 0376
        gbc.setState(0x5a8f, 0x6374, 0x6e0, 0xb2dd, 0xdc79, 0x4eaa, 0x0, 0x1);
        gbc.writeMem(0x5a8f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6374, gbc.sp());
        EXPECT(0x5a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0377
        gbc.setState(0xd5e9, 0xd577, 0x3300, 0x5962, 0x7a32, 0x2646, 0x1, 0x0);
        gbc.writeMem(0xd5e9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd577, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e9));
        EXPECT(0xfb, gbc.readMem(0xd5ea));
        // CB FB 0378
        gbc.setState(0x1101, 0xf3c5, 0x9450, 0x6ebd, 0x3849, 0x5e4f, 0x0, 0x0);
        gbc.writeMem(0x1101, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0379
        gbc.setState(0x359b, 0x99f7, 0x4560, 0x52a9, 0x3134, 0xd83c, 0x1, 0x0);
        gbc.writeMem(0x359b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x99f7, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 037A
        gbc.setState(0xbabd, 0xb864, 0x5bb0, 0x68bf, 0x2ee9, 0xc2eb, 0x0, 0x1);
        gbc.writeMem(0xbabd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0xbabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabd));
        EXPECT(0xfb, gbc.readMem(0xbabe));
        // CB FB 037B
        gbc.setState(0x7c4, 0x491d, 0xc2f0, 0x6d76, 0xa640, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x7c4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 037D
        gbc.setState(0x41d6, 0xd684, 0x8370, 0x6d48, 0x440b, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x41d6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd684, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 037E
        gbc.setState(0x4b85, 0x55e1, 0xaf80, 0xac15, 0x1de6, 0x73ad, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x55e1, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 037F
        gbc.setState(0x59b4, 0x857e, 0x7a30, 0x168d, 0x4b01, 0x7f76, 0x0, 0x0);
        gbc.writeMem(0x59b4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x857e, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0380
        gbc.setState(0xaa93, 0xb850, 0xe510, 0xf51b, 0x5916, 0xa5ce, 0x0, 0x0);
        gbc.writeMem(0xaa93, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa93));
        EXPECT(0xfb, gbc.readMem(0xaa94));
        // CB FB 0381
        gbc.setState(0xacf1, 0x32ad, 0xeff0, 0x69a5, 0x2b62, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0xacf1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf1));
        EXPECT(0xfb, gbc.readMem(0xacf2));
        // CB FB 0382
        gbc.setState(0x3573, 0xec59, 0x2370, 0xf23, 0x5274, 0x896e, 0x1, 0x0);
        gbc.writeMem(0x3573, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0x3575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0383
        gbc.setState(0x239e, 0x3c15, 0x14e0, 0x3dfe, 0x5535, 0x7418, 0x1, 0x1);
        gbc.writeMem(0x239e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3c15, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0385
        gbc.setState(0xd90c, 0x1eb8, 0xed40, 0x6380, 0x7386, 0x94eb, 0x1, 0x0);
        gbc.writeMem(0xd90c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90c));
        EXPECT(0xfb, gbc.readMem(0xd90d));
        // CB FB 0386
        gbc.setState(0xc942, 0x54d, 0xf490, 0x80b8, 0xa6bb, 0xee08, 0x0, 0x1);
        gbc.writeMem(0xc942, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0xc944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc942));
        EXPECT(0xfb, gbc.readMem(0xc943));
        // CB FB 0387
        gbc.setState(0x1aae, 0x76df, 0x5900, 0xccdb, 0x1c4c, 0xa26, 0x1, 0x0);
        gbc.writeMem(0x1aae, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0388
        gbc.setState(0x8a66, 0x867d, 0x9e00, 0xfe6e, 0xbf22, 0xe414, 0x0, 0x0);
        gbc.writeMem(0x8a66, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x867d, gbc.sp());
        EXPECT(0x8a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a66));
        EXPECT(0xfb, gbc.readMem(0x8a67));
        // CB FB 0389
        gbc.setState(0x32bd, 0xdff1, 0x96b0, 0x33c1, 0x5256, 0x63e7, 0x1, 0x0);
        gbc.writeMem(0x32bd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdff1, gbc.sp());
        EXPECT(0x32bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 038A
        gbc.setState(0xa546, 0xb2ab, 0xc9c0, 0x54ec, 0xf380, 0xeb27, 0x1, 0x0);
        gbc.writeMem(0xa546, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb2ab, gbc.sp());
        EXPECT(0xa548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa546));
        EXPECT(0xfb, gbc.readMem(0xa547));
        // CB FB 038B
        gbc.setState(0x2cc5, 0x8fa3, 0x8090, 0xe80a, 0xe472, 0x2736, 0x0, 0x1);
        gbc.writeMem(0x2cc5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8fa3, gbc.sp());
        EXPECT(0x2cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 038C
        gbc.setState(0x278b, 0x1741, 0xe710, 0x9f11, 0xfbf9, 0x956f, 0x0, 0x0);
        gbc.writeMem(0x278b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 038D
        gbc.setState(0x1f0d, 0x283, 0xd80, 0x63c4, 0xd78a, 0xda09, 0x0, 0x1);
        gbc.writeMem(0x1f0d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 038E
        gbc.setState(0x6bad, 0xf0e6, 0x9780, 0x8ec4, 0x4185, 0xcfb4, 0x0, 0x0);
        gbc.writeMem(0x6bad, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf0e6, gbc.sp());
        EXPECT(0x6baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 038F
        gbc.setState(0xa763, 0x65c8, 0xe210, 0x9f18, 0x2622, 0x47b0, 0x0, 0x0);
        gbc.writeMem(0xa763, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x65c8, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa763));
        EXPECT(0xfb, gbc.readMem(0xa764));
        // CB FB 0390
        gbc.setState(0xd400, 0xe985, 0x5610, 0x9c86, 0xcbcf, 0x6c63, 0x0, 0x0);
        gbc.writeMem(0xd400, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0xd402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd400));
        EXPECT(0xfb, gbc.readMem(0xd401));
        // CB FB 0391
        gbc.setState(0x98d7, 0xd28e, 0x9b20, 0x8f3b, 0x74db, 0x7716, 0x0, 0x0);
        gbc.writeMem(0x98d7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd28e, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d7));
        EXPECT(0xfb, gbc.readMem(0x98d8));
        // CB FB 0392
        gbc.setState(0x4b40, 0x74ff, 0xf830, 0x7761, 0x9bf7, 0x91a5, 0x0, 0x0);
        gbc.writeMem(0x4b40, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x74ff, gbc.sp());
        EXPECT(0x4b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0393
        gbc.setState(0xe3fa, 0x8cee, 0x9a0, 0x9462, 0x4744, 0xa5b0, 0x0, 0x1);
        gbc.writeMem(0xe3fa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fa));
        EXPECT(0xfb, gbc.readMem(0xe3fb));
        // CB FB 0394
        gbc.setState(0x6f50, 0xbe3a, 0xc4f0, 0x142c, 0xdbad, 0x1ddf, 0x1, 0x0);
        gbc.writeMem(0x6f50, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0x6f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0395
        gbc.setState(0x5c05, 0x78c5, 0x43a0, 0x9b3, 0x994b, 0x7401, 0x0, 0x0);
        gbc.writeMem(0x5c05, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x78c5, gbc.sp());
        EXPECT(0x5c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 0396
        gbc.setState(0x758e, 0x249c, 0x3830, 0x8045, 0xc5f8, 0x9e5b, 0x1, 0x0);
        gbc.writeMem(0x758e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 0397
        gbc.setState(0xa157, 0x21ff, 0x5ea0, 0xd1c0, 0x3c91, 0x1fbf, 0x1, 0x0);
        gbc.writeMem(0xa157, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x21ff, gbc.sp());
        EXPECT(0xa159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa157));
        EXPECT(0xfb, gbc.readMem(0xa158));
        // CB FB 0398
        gbc.setState(0x9d81, 0xe7ae, 0x8dd0, 0x1e5f, 0x9a46, 0x1cb8, 0x1, 0x0);
        gbc.writeMem(0x9d81, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe7ae, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d81));
        EXPECT(0xfb, gbc.readMem(0x9d82));
        // CB FB 0399
        gbc.setState(0x79aa, 0xee85, 0x8990, 0xe574, 0x2b92, 0x191, 0x1, 0x1);
        gbc.writeMem(0x79aa, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 039A
        gbc.setState(0x1fca, 0xb0e4, 0xa6c0, 0xde0f, 0x4fba, 0x4b5b, 0x1, 0x1);
        gbc.writeMem(0x1fca, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 039B
        gbc.setState(0x6a93, 0x6e3b, 0xd760, 0x1a4a, 0xff0, 0x9c9f, 0x1, 0x1);
        gbc.writeMem(0x6a93, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0x6a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 039D
        gbc.setState(0xed2b, 0xd8, 0xbd00, 0x4c2d, 0xc1ea, 0x4714, 0x0, 0x1);
        gbc.writeMem(0xed2b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2b));
        EXPECT(0xfb, gbc.readMem(0xed2c));
        // CB FB 039E
        gbc.setState(0xcf66, 0xe3ad, 0x6d0, 0xc943, 0x356f, 0x45dd, 0x1, 0x0);
        gbc.writeMem(0xcf66, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe3ad, gbc.sp());
        EXPECT(0xcf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf66));
        EXPECT(0xfb, gbc.readMem(0xcf67));
        // CB FB 039F
        gbc.setState(0xb5f6, 0xc4e2, 0xea50, 0xff60, 0x92f, 0x8e1f, 0x1, 0x0);
        gbc.writeMem(0xb5f6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc4e2, gbc.sp());
        EXPECT(0xb5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f6));
        EXPECT(0xfb, gbc.readMem(0xb5f7));
        // CB FB 03A0
        gbc.setState(0xcc5d, 0x1790, 0x4620, 0x1030, 0x2c05, 0xb345, 0x0, 0x1);
        gbc.writeMem(0xcc5d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0xcc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5d));
        EXPECT(0xfb, gbc.readMem(0xcc5e));
        // CB FB 03A1
        gbc.setState(0x5564, 0x937c, 0x6640, 0x85c, 0x67, 0x55ef, 0x1, 0x1);
        gbc.writeMem(0x5564, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x937c, gbc.sp());
        EXPECT(0x5566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03A2
        gbc.setState(0x625b, 0xfe7b, 0xf7b0, 0xa68e, 0xe2e9, 0xcf3e, 0x1, 0x1);
        gbc.writeMem(0x625b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfe7b, gbc.sp());
        EXPECT(0x625d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03A3
        gbc.setState(0x6344, 0xbc05, 0x6ac0, 0xbbbd, 0xac97, 0x577c, 0x1, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0x6346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03A4
        gbc.setState(0xa02f, 0x90e7, 0xe510, 0xa328, 0x7e86, 0xa817, 0x0, 0x1);
        gbc.writeMem(0xa02f, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x90e7, gbc.sp());
        EXPECT(0xa031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02f));
        EXPECT(0xfb, gbc.readMem(0xa030));
        // CB FB 03A5
        gbc.setState(0x1c06, 0xf83f, 0x3dd0, 0x9a, 0x76d, 0x5bd, 0x1, 0x1);
        gbc.writeMem(0x1c06, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03A7
        gbc.setState(0x37a9, 0x8564, 0x2a20, 0xf280, 0xb5db, 0x2099, 0x0, 0x1);
        gbc.writeMem(0x37a9, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8564, gbc.sp());
        EXPECT(0x37ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03A8
        gbc.setState(0x8dc, 0x976, 0x1770, 0xd352, 0xc818, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0x8dc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0x8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03A9
        gbc.setState(0x29f7, 0x74c, 0xcab0, 0x335f, 0x744a, 0x373e, 0x0, 0x1);
        gbc.writeMem(0x29f7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x29f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03AA
        gbc.setState(0x14ba, 0xcc91, 0x8580, 0xdea8, 0xe977, 0x78e1, 0x0, 0x1);
        gbc.writeMem(0x14ba, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcc91, gbc.sp());
        EXPECT(0x14bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03AB
        gbc.setState(0x2523, 0x8a74, 0x1480, 0xc282, 0xafd6, 0x9c30, 0x0, 0x1);
        gbc.writeMem(0x2523, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03AC
        gbc.setState(0x2ec6, 0xf4a5, 0xbb10, 0x8359, 0x3c6f, 0x3af9, 0x1, 0x1);
        gbc.writeMem(0x2ec6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf4a5, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03AE
        gbc.setState(0x2c76, 0x752f, 0xd660, 0xb644, 0x68ea, 0xe362, 0x1, 0x0);
        gbc.writeMem(0x2c76, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x752f, gbc.sp());
        EXPECT(0x2c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03AF
        gbc.setState(0xb000, 0x6b92, 0xf6c0, 0xf23b, 0xa268, 0xb48, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb000));
        EXPECT(0xfb, gbc.readMem(0xb001));
        // CB FB 03B0
        gbc.setState(0x6c5e, 0xfc75, 0xfc0, 0x6a62, 0x1627, 0xbfdc, 0x1, 0x1);
        gbc.writeMem(0x6c5e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfc75, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03B1
        gbc.setState(0x766b, 0x4643, 0x7e30, 0x746b, 0xe838, 0xbc25, 0x0, 0x0);
        gbc.writeMem(0x766b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4643, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03B2
        gbc.setState(0x58a2, 0xfe1d, 0x7650, 0xa1be, 0x2962, 0xb0ae, 0x0, 0x1);
        gbc.writeMem(0x58a2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfe1d, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03B3
        gbc.setState(0xe5e5, 0x85d8, 0xd830, 0xe0d7, 0x43e3, 0x7744, 0x1, 0x0);
        gbc.writeMem(0xe5e5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x85d8, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e5));
        EXPECT(0xfb, gbc.readMem(0xe5e6));
        // CB FB 03B4
        gbc.setState(0xa9dc, 0x3d65, 0x5800, 0x51b3, 0x62d8, 0xae09, 0x0, 0x1);
        gbc.writeMem(0xa9dc, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0xa9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dc));
        EXPECT(0xfb, gbc.readMem(0xa9dd));
        // CB FB 03B5
        gbc.setState(0xa9ac, 0x2c1b, 0x5980, 0x39ad, 0xb080, 0x676c, 0x0, 0x0);
        gbc.writeMem(0xa9ac, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ac));
        EXPECT(0xfb, gbc.readMem(0xa9ad));
        // CB FB 03B6
        gbc.setState(0xc6ef, 0x6566, 0xa6b0, 0xb104, 0x8222, 0x14, 0x0, 0x0);
        gbc.writeMem(0xc6ef, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0xc6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ef));
        EXPECT(0xfb, gbc.readMem(0xc6f0));
        // CB FB 03B7
        gbc.setState(0x638d, 0x20aa, 0xcbe0, 0xa3b0, 0x31ae, 0x959, 0x0, 0x1);
        gbc.writeMem(0x638d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03B9
        gbc.setState(0xcff7, 0xc719, 0x21f0, 0x774c, 0xf76, 0xd575, 0x1, 0x0);
        gbc.writeMem(0xcff7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc719, gbc.sp());
        EXPECT(0xcff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff7));
        EXPECT(0xfb, gbc.readMem(0xcff8));
        // CB FB 03BA
        gbc.setState(0xcd18, 0x5ac3, 0xa5e0, 0x25de, 0x5236, 0x67a1, 0x0, 0x0);
        gbc.writeMem(0xcd18, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd18));
        EXPECT(0xfb, gbc.readMem(0xcd19));
        // CB FB 03BB
        gbc.setState(0x2ca2, 0xd9d8, 0xd4f0, 0x9936, 0x2c60, 0xe44c, 0x1, 0x1);
        gbc.writeMem(0x2ca2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03BC
        gbc.setState(0x4912, 0x492, 0xb560, 0xfb42, 0x3868, 0xbbd0, 0x1, 0x0);
        gbc.writeMem(0x4912, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x492, gbc.sp());
        EXPECT(0x4914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03BD
        gbc.setState(0x455b, 0x6db1, 0x4cd0, 0x9b70, 0xba1, 0x8226, 0x0, 0x1);
        gbc.writeMem(0x455b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03BE
        gbc.setState(0x56d7, 0x791d, 0xf390, 0x777b, 0xbe2c, 0x7a3e, 0x1, 0x0);
        gbc.writeMem(0x56d7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0x56d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03BF
        gbc.setState(0x52ff, 0xdf14, 0xbd10, 0x44ff, 0x1b86, 0xa03b, 0x0, 0x1);
        gbc.writeMem(0x52ff, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf14, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03C0
        gbc.setState(0x19b5, 0xc9ee, 0x1990, 0xf099, 0x508e, 0xb310, 0x0, 0x1);
        gbc.writeMem(0x19b5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc9ee, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03C1
        gbc.setState(0xbab2, 0x8683, 0xb540, 0x9d9c, 0xddbc, 0x72e3, 0x1, 0x1);
        gbc.writeMem(0xbab2, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0xbab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab2));
        EXPECT(0xfb, gbc.readMem(0xbab3));
        // CB FB 03C2
        gbc.setState(0xdc72, 0xf9f8, 0x5750, 0x9380, 0x56d7, 0x346e, 0x1, 0x0);
        gbc.writeMem(0xdc72, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf9f8, gbc.sp());
        EXPECT(0xdc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc72));
        EXPECT(0xfb, gbc.readMem(0xdc73));
        // CB FB 03C3
        gbc.setState(0x7e30, 0x47d4, 0x5880, 0x6009, 0x4332, 0xd62e, 0x0, 0x0);
        gbc.writeMem(0x7e30, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0x7e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03C4
        gbc.setState(0xcec6, 0x7f9, 0xa670, 0x6354, 0xfe54, 0xf12c, 0x0, 0x0);
        gbc.writeMem(0xcec6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0xcec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec6));
        EXPECT(0xfb, gbc.readMem(0xcec7));
        // CB FB 03C5
        gbc.setState(0x9aa6, 0x125f, 0x5610, 0x64e, 0x937f, 0x3436, 0x0, 0x0);
        gbc.writeMem(0x9aa6, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x125f, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa6));
        EXPECT(0xfb, gbc.readMem(0x9aa7));
        // CB FB 03C7
        gbc.setState(0xea42, 0x197e, 0xede0, 0xff40, 0x13d0, 0xc877, 0x1, 0x1);
        gbc.writeMem(0xea42, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea42));
        EXPECT(0xfb, gbc.readMem(0xea43));
        // CB FB 03C8
        gbc.setState(0xc9f7, 0x5b28, 0x8980, 0x1f88, 0x85db, 0xe6c0, 0x0, 0x1);
        gbc.writeMem(0xc9f7, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5b28, gbc.sp());
        EXPECT(0xc9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f7));
        EXPECT(0xfb, gbc.readMem(0xc9f8));
        // CB FB 03C9
        gbc.setState(0x4258, 0x42fa, 0x25b0, 0xc783, 0x1f4b, 0x4757, 0x1, 0x1);
        gbc.writeMem(0x4258, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x42fa, gbc.sp());
        EXPECT(0x425a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03CA
        gbc.setState(0x15a8, 0x3b06, 0x1d20, 0x5725, 0x77f1, 0xfaf6, 0x1, 0x1);
        gbc.writeMem(0x15a8, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3b06, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03CB
        gbc.setState(0x1f1, 0x3a7b, 0x9f90, 0xa050, 0x9436, 0x67d1, 0x1, 0x1);
        gbc.writeMem(0x1f1, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3a7b, gbc.sp());
        EXPECT(0x1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03CC
        gbc.setState(0xc395, 0xa40f, 0x9ea0, 0x376d, 0x9ac9, 0x8ecf, 0x0, 0x0);
        gbc.writeMem(0xc395, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa40f, gbc.sp());
        EXPECT(0xc397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc395));
        EXPECT(0xfb, gbc.readMem(0xc396));
        // CB FB 03CE
        gbc.setState(0x398, 0x861a, 0xea0, 0x9997, 0x8c5b, 0x7022, 0x0, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x861a, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03CF
        gbc.setState(0xe093, 0x9740, 0x280, 0x3090, 0x9fe9, 0x7784, 0x0, 0x0);
        gbc.writeMem(0xe093, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9740, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe093));
        EXPECT(0xfb, gbc.readMem(0xe094));
        // CB FB 03D0
        gbc.setState(0x95c3, 0x1a2, 0x7af0, 0xa48d, 0x315d, 0x2d78, 0x0, 0x0);
        gbc.writeMem(0x95c3, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1a2, gbc.sp());
        EXPECT(0x95c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c3));
        EXPECT(0xfb, gbc.readMem(0x95c4));
        // CB FB 03D1
        gbc.setState(0x246e, 0x35d0, 0x6c90, 0xe028, 0x4383, 0xad1f, 0x0, 0x0);
        gbc.writeMem(0x246e, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03D2
        gbc.setState(0xde4a, 0xcf95, 0xa4c0, 0x982b, 0xd901, 0x9d6c, 0x1, 0x1);
        gbc.writeMem(0xde4a, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xde4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4a));
        EXPECT(0xfb, gbc.readMem(0xde4b));
        // CB FB 03D3
        gbc.setState(0x8577, 0xb4d, 0xf990, 0x67f6, 0x20e, 0x26cf, 0x0, 0x1);
        gbc.writeMem(0x8577, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb4d, gbc.sp());
        EXPECT(0x8579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8577));
        EXPECT(0xfb, gbc.readMem(0x8578));
        // CB FB 03D4
        gbc.setState(0x3317, 0xe319, 0x45f0, 0x56af, 0xd11a, 0x7909, 0x1, 0x1);
        gbc.writeMem(0x3317, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe319, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03D5
        gbc.setState(0xc1b0, 0x5901, 0xa1e0, 0xa41, 0xc03f, 0x6077, 0x0, 0x0);
        gbc.writeMem(0xc1b0, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5901, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b0));
        EXPECT(0xfb, gbc.readMem(0xc1b1));
        // CB FB 03D6
        gbc.setState(0x3d43, 0x3714, 0xd8c0, 0xb36b, 0x37bd, 0xb5fa, 0x1, 0x1);
        gbc.writeMem(0x3d43, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03D8
        gbc.setState(0x60dd, 0xc6b6, 0x7e00, 0xb822, 0x5e10, 0xf48d, 0x1, 0x1);
        gbc.writeMem(0x60dd, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc6b6, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03D9
        gbc.setState(0x7e1d, 0xe685, 0x8700, 0x32c9, 0xaff1, 0xad4d, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03DA
        gbc.setState(0xdece, 0x1e4e, 0x3620, 0xfbda, 0x1e7e, 0x925c, 0x0, 0x0);
        gbc.writeMem(0xdece, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0xded0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdece));
        EXPECT(0xfb, gbc.readMem(0xdecf));
        // CB FB 03DB
        gbc.setState(0x9335, 0xb732, 0xe710, 0xfc73, 0x48ef, 0xcdf4, 0x1, 0x0);
        gbc.writeMem(0x9335, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb732, gbc.sp());
        EXPECT(0x9337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9335));
        EXPECT(0xfb, gbc.readMem(0x9336));
        // CB FB 03DC
        gbc.setState(0x714c, 0xdf8c, 0xb8d0, 0xcd46, 0xca78, 0xb594, 0x0, 0x0);
        gbc.writeMem(0x714c, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03DD
        gbc.setState(0x1d21, 0xc550, 0x3f40, 0x848b, 0x19b0, 0xc749, 0x1, 0x0);
        gbc.writeMem(0x1d21, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03DE
        gbc.setState(0xe063, 0xc910, 0xb900, 0xe994, 0xf695, 0xfa44, 0x1, 0x0);
        gbc.writeMem(0xe063, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc910, gbc.sp());
        EXPECT(0xe065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe063));
        EXPECT(0xfb, gbc.readMem(0xe064));
        // CB FB 03DF
        gbc.setState(0x916b, 0x6eb0, 0x71e0, 0xe6eb, 0xcb84, 0x7960, 0x0, 0x0);
        gbc.writeMem(0x916b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0x916d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916b));
        EXPECT(0xfb, gbc.readMem(0x916c));
        // CB FB 03E1
        gbc.setState(0x7d4b, 0x5f71, 0xcf40, 0x650a, 0x817, 0xf3f4, 0x0, 0x0);
        gbc.writeMem(0x7d4b, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5f71, gbc.sp());
        EXPECT(0x7d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03E2
        gbc.setState(0x39ee, 0x94d3, 0x5d60, 0x119f, 0xd3ac, 0x9bc0, 0x1, 0x0);
        gbc.writeMem(0x39ee, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x94d3, gbc.sp());
        EXPECT(0x39f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03E3
        gbc.setState(0x6def, 0x520a, 0x4f10, 0xdf2c, 0xdbb, 0xdf60, 0x0, 0x0);
        gbc.writeMem(0x6def, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x520a, gbc.sp());
        EXPECT(0x6df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03E4
        gbc.setState(0x3a95, 0x5857, 0x7590, 0x91e1, 0xd588, 0x2f1, 0x0, 0x1);
        gbc.writeMem(0x3a95, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5857, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03E5
        gbc.setState(0x3ec4, 0xc9d8, 0x4ef0, 0x29fc, 0xf476, 0xc1f2, 0x1, 0x1);
        gbc.writeMem(0x3ec4, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x3ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FB 03E6
        gbc.setState(0x5b44, 0xab41, 0x1aa0, 0xd0ff, 0x7396, 0x53d0, 0x0, 0x1);
        gbc.writeMem(0x5b44, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xab41, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FB 03E7
        gbc.setState(0x40c5, 0x1cd9, 0x8180, 0xf350, 0x1888, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0x40c5, { 0xcb, 0xfb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1cd9, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
