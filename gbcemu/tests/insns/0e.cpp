#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_0e)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_0e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 0E 0000
        gbc.setState(0x266f, 0x5b5d, 0xe6f0, 0x6f2c, 0x6144, 0xc97d, 0x0, 0x0);
        gbc.writeMem(0x266f, { 0xe, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5b5d);
        EXPECT(gbc.pc(), 0x2671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0001
        gbc.setState(0x2023, 0xa775, 0x1990, 0x1786, 0x8e55, 0xa5a1, 0x1, 0x0);
        gbc.writeMem(0x2023, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa775);
        EXPECT(gbc.pc(), 0x2025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0002
        gbc.setState(0x5585, 0xad47, 0xa40, 0xc942, 0xc366, 0xc7f, 0x0, 0x0);
        gbc.writeMem(0x5585, { 0xe, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0x5587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0003
        gbc.setState(0xa73a, 0xbbd4, 0x40b0, 0x7135, 0x74c7, 0x3e9f, 0x0, 0x1);
        gbc.writeMem(0xa73a, { 0xe, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbbd4);
        EXPECT(gbc.pc(), 0xa73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73a), 0xe);
        EXPECT(gbc.readMem(0xa73b), 0x8);
        // 0E 0004
        gbc.setState(0xcbc5, 0x7e0e, 0x6f0, 0x8d13, 0xf012, 0xb093, 0x0, 0x1);
        gbc.writeMem(0xcbc5, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7e0e);
        EXPECT(gbc.pc(), 0xcbc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc5), 0xe);
        EXPECT(gbc.readMem(0xcbc6), 0x3);
        // 0E 0005
        gbc.setState(0xb6ef, 0x3245, 0x54d0, 0xa50a, 0xdf28, 0xa32e, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0xe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0xb6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ef), 0xe);
        EXPECT(gbc.readMem(0xb6f0), 0x21);
        // 0E 0006
        gbc.setState(0x163, 0xdcb6, 0xc0e0, 0xa0f2, 0x28e8, 0x6e4f, 0x1, 0x0);
        gbc.writeMem(0x163, { 0xe, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdcb6);
        EXPECT(gbc.pc(), 0x165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0007
        gbc.setState(0xe4b8, 0x3a30, 0xae40, 0xb4de, 0xc167, 0x77b1, 0x1, 0x1);
        gbc.writeMem(0xe4b8, { 0xe, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3a30);
        EXPECT(gbc.pc(), 0xe4ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b8), 0xe);
        EXPECT(gbc.readMem(0xe4b9), 0x63);
        // 0E 0008
        gbc.setState(0x4332, 0xf54d, 0xe530, 0x9176, 0x85fe, 0x2d8d, 0x1, 0x0);
        gbc.writeMem(0x4332, { 0xe, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf54d);
        EXPECT(gbc.pc(), 0x4334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0009
        gbc.setState(0xddff, 0xadf5, 0x3930, 0x5dcd, 0x6092, 0x4bf3, 0x1, 0x1);
        gbc.writeMem(0xddff, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xadf5);
        EXPECT(gbc.pc(), 0xde01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddff), 0xe);
        EXPECT(gbc.readMem(0xde00), 0xb);
        // 0E 000B
        gbc.setState(0x628f, 0x1d3c, 0xc190, 0x1f10, 0x27e, 0x563b, 0x0, 0x1);
        gbc.writeMem(0x628f, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1d3c);
        EXPECT(gbc.pc(), 0x6291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 000C
        gbc.setState(0x450e, 0x239a, 0xce30, 0xfbc1, 0xf054, 0xfdab, 0x1, 0x0);
        gbc.writeMem(0x450e, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0x4510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 000D
        gbc.setState(0xaa0d, 0x3dcb, 0xd130, 0x1855, 0xf441, 0x644e, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0xe, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3dcb);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0d), 0xe);
        EXPECT(gbc.readMem(0xaa0e), 0xef);
        // 0E 000E
        gbc.setState(0xcd12, 0x6da2, 0xd490, 0x64c4, 0x6d45, 0xa687, 0x0, 0x1);
        gbc.writeMem(0xcd12, { 0xe, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6da2);
        EXPECT(gbc.pc(), 0xcd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd12), 0xe);
        EXPECT(gbc.readMem(0xcd13), 0x7a);
        // 0E 000F
        gbc.setState(0x831, 0x592c, 0xcf60, 0x8447, 0xa172, 0xb7d0, 0x0, 0x1);
        gbc.writeMem(0x831, { 0xe, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x592c);
        EXPECT(gbc.pc(), 0x833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0010
        gbc.setState(0x5407, 0xe586, 0x2cd0, 0xf5dc, 0x2a6c, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0xe, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe586);
        EXPECT(gbc.pc(), 0x5409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0011
        gbc.setState(0xdd1, 0xd2c9, 0x4340, 0x1b3e, 0x88cb, 0x24d5, 0x0, 0x0);
        gbc.writeMem(0xdd1, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd2c9);
        EXPECT(gbc.pc(), 0xdd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0012
        gbc.setState(0xcf5a, 0xacfe, 0x1d30, 0xbc8c, 0x8625, 0xa9fa, 0x1, 0x1);
        gbc.writeMem(0xcf5a, { 0xe, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xacfe);
        EXPECT(gbc.pc(), 0xcf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5a), 0xe);
        EXPECT(gbc.readMem(0xcf5b), 0xec);
        // 0E 0013
        gbc.setState(0xd83b, 0xf5ff, 0x55a0, 0xb8db, 0x2d62, 0x1a1, 0x1, 0x0);
        gbc.writeMem(0xd83b, { 0xe, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf5ff);
        EXPECT(gbc.pc(), 0xd83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83b), 0xe);
        EXPECT(gbc.readMem(0xd83c), 0xaa);
        // 0E 0014
        gbc.setState(0xa80f, 0xe469, 0x1eb0, 0x5676, 0x1104, 0xf3f3, 0x1, 0x0);
        gbc.writeMem(0xa80f, { 0xe, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe469);
        EXPECT(gbc.pc(), 0xa811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80f), 0xe);
        EXPECT(gbc.readMem(0xa810), 0xaa);
        // 0E 0016
        gbc.setState(0x3c68, 0xd15d, 0xa6e0, 0xb67, 0xb3b4, 0xe0f9, 0x0, 0x0);
        gbc.writeMem(0x3c68, { 0xe, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd15d);
        EXPECT(gbc.pc(), 0x3c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0017
        gbc.setState(0x144f, 0x960c, 0x5930, 0x4c49, 0x55ac, 0x7095, 0x0, 0x1);
        gbc.writeMem(0x144f, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x960c);
        EXPECT(gbc.pc(), 0x1451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0018
        gbc.setState(0x4549, 0xac89, 0x2850, 0xcf2c, 0x6b4c, 0xa1ab, 0x1, 0x0);
        gbc.writeMem(0x4549, { 0xe, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xac89);
        EXPECT(gbc.pc(), 0x454b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0019
        gbc.setState(0x5770, 0x3e16, 0x65e0, 0x62d3, 0x3787, 0x155f, 0x1, 0x0);
        gbc.writeMem(0x5770, { 0xe, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e16);
        EXPECT(gbc.pc(), 0x5772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 001A
        gbc.setState(0x408b, 0x6a31, 0x1d50, 0x3202, 0x4531, 0xd5c2, 0x1, 0x0);
        gbc.writeMem(0x408b, { 0xe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6a31);
        EXPECT(gbc.pc(), 0x408d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 001C
        gbc.setState(0x12a8, 0x9f5, 0x8470, 0xfc54, 0xd08e, 0x277c, 0x0, 0x1);
        gbc.writeMem(0x12a8, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9f5);
        EXPECT(gbc.pc(), 0x12aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 001D
        gbc.setState(0xccf, 0xdc64, 0xce00, 0x41ca, 0x9859, 0xfb62, 0x1, 0x1);
        gbc.writeMem(0xccf, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdc64);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 001F
        gbc.setState(0x14ed, 0xe8db, 0xd9a0, 0xbea4, 0xaf9b, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x14ed, { 0xe, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe8db);
        EXPECT(gbc.pc(), 0x14ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0020
        gbc.setState(0xc12f, 0x7c8, 0x1f10, 0x9deb, 0x9ac7, 0x56d6, 0x0, 0x1);
        gbc.writeMem(0xc12f, { 0xe, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7c8);
        EXPECT(gbc.pc(), 0xc131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc12f), 0xe);
        EXPECT(gbc.readMem(0xc130), 0x90);
        // 0E 0021
        gbc.setState(0x319, 0x5dcb, 0x8c0, 0xfb18, 0x337, 0xa8c6, 0x0, 0x1);
        gbc.writeMem(0x319, { 0xe, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5dcb);
        EXPECT(gbc.pc(), 0x31b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0022
        gbc.setState(0x1de0, 0x153, 0x8a00, 0x634, 0xf0cf, 0xd754, 0x1, 0x1);
        gbc.writeMem(0x1de0, { 0xe, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x153);
        EXPECT(gbc.pc(), 0x1de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0023
        gbc.setState(0xd57c, 0x77c9, 0x3a20, 0x6a9e, 0x7eb6, 0x335a, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0xe, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x77c9);
        EXPECT(gbc.pc(), 0xd57e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57c), 0xe);
        EXPECT(gbc.readMem(0xd57d), 0xab);
        // 0E 0024
        gbc.setState(0x84c, 0xb2d8, 0xb180, 0x2f12, 0x6bff, 0x5cdd, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb2d8);
        EXPECT(gbc.pc(), 0x84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0026
        gbc.setState(0x3514, 0x2e10, 0x1830, 0x5d1c, 0x3a65, 0x2d15, 0x1, 0x0);
        gbc.writeMem(0x3514, { 0xe, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2e10);
        EXPECT(gbc.pc(), 0x3516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0027
        gbc.setState(0x2395, 0x1039, 0x5420, 0x84ad, 0xc912, 0x9a1c, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1039);
        EXPECT(gbc.pc(), 0x2397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0028
        gbc.setState(0x37f0, 0xe8c2, 0xa590, 0x9cf4, 0xdf20, 0x66ae, 0x0, 0x1);
        gbc.writeMem(0x37f0, { 0xe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe8c2);
        EXPECT(gbc.pc(), 0x37f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0029
        gbc.setState(0x259d, 0xe04b, 0x2f0, 0x97d1, 0xb214, 0x5134, 0x1, 0x1);
        gbc.writeMem(0x259d, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe04b);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 002A
        gbc.setState(0xa5aa, 0x85a, 0x2180, 0x6a00, 0xe191, 0x8d3, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x85a);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xe);
        EXPECT(gbc.readMem(0xa5ab), 0xa2);
        // 0E 002B
        gbc.setState(0xb40d, 0x4e0b, 0xba0, 0x871a, 0xfa72, 0x1c17, 0x1, 0x0);
        gbc.writeMem(0xb40d, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4e0b);
        EXPECT(gbc.pc(), 0xb40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40d), 0xe);
        EXPECT(gbc.readMem(0xb40e), 0x5f);
        // 0E 002C
        gbc.setState(0x304, 0x443a, 0x5ae0, 0x4986, 0xdb85, 0x2d3c, 0x0, 0x1);
        gbc.writeMem(0x304, { 0xe, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x443a);
        EXPECT(gbc.pc(), 0x306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 002D
        gbc.setState(0xd283, 0xfeeb, 0x8430, 0x5757, 0x7d9c, 0x1513, 0x1, 0x1);
        gbc.writeMem(0xd283, { 0xe, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0xd285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd283), 0xe);
        EXPECT(gbc.readMem(0xd284), 0x9f);
        // 0E 002E
        gbc.setState(0x71a1, 0x618e, 0xac00, 0xd713, 0xa17f, 0x92c9, 0x1, 0x0);
        gbc.writeMem(0x71a1, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x618e);
        EXPECT(gbc.pc(), 0x71a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 002F
        gbc.setState(0xa385, 0xfcf0, 0xbca0, 0x8196, 0xe622, 0x6b56, 0x0, 0x0);
        gbc.writeMem(0xa385, { 0xe, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfcf0);
        EXPECT(gbc.pc(), 0xa387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa385), 0xe);
        EXPECT(gbc.readMem(0xa386), 0x8c);
        // 0E 0030
        gbc.setState(0xdf40, 0xe918, 0xcd20, 0xb5b2, 0x65ef, 0xa2c2, 0x0, 0x0);
        gbc.writeMem(0xdf40, { 0xe, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0xdf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf40), 0xe);
        EXPECT(gbc.readMem(0xdf41), 0x14);
        // 0E 0031
        gbc.setState(0x5f38, 0x47dc, 0x56c0, 0xed79, 0xc0be, 0x434f, 0x1, 0x1);
        gbc.writeMem(0x5f38, { 0xe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x47dc);
        EXPECT(gbc.pc(), 0x5f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0032
        gbc.setState(0x74a0, 0x588a, 0x8290, 0xaaa3, 0xb70d, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0x74a0, { 0xe, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x588a);
        EXPECT(gbc.pc(), 0x74a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0033
        gbc.setState(0xad17, 0x1af8, 0x7e90, 0xe28d, 0x6575, 0xd4d0, 0x1, 0x0);
        gbc.writeMem(0xad17, { 0xe, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0xad19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad17), 0xe);
        EXPECT(gbc.readMem(0xad18), 0x7a);
        // 0E 0034
        gbc.setState(0x74a2, 0x5639, 0xde50, 0xf302, 0x2681, 0x28b1, 0x1, 0x1);
        gbc.writeMem(0x74a2, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5639);
        EXPECT(gbc.pc(), 0x74a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0035
        gbc.setState(0x7cc4, 0x5114, 0xae50, 0xe532, 0x344b, 0xeee2, 0x1, 0x1);
        gbc.writeMem(0x7cc4, { 0xe, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5114);
        EXPECT(gbc.pc(), 0x7cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0036
        gbc.setState(0x1a5d, 0xb1a1, 0x8390, 0xe43a, 0x5500, 0xf240, 0x1, 0x1);
        gbc.writeMem(0x1a5d, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb1a1);
        EXPECT(gbc.pc(), 0x1a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0037
        gbc.setState(0x5fb6, 0xbd69, 0xb510, 0xe007, 0x198f, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0x5fb6, { 0xe, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbd69);
        EXPECT(gbc.pc(), 0x5fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0038
        gbc.setState(0xe127, 0x485e, 0x2b40, 0xc81c, 0xf44e, 0xab89, 0x1, 0x1);
        gbc.writeMem(0xe127, { 0xe, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x485e);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe127), 0xe);
        EXPECT(gbc.readMem(0xe128), 0x4d);
        // 0E 0039
        gbc.setState(0x2486, 0x8130, 0x5690, 0x7961, 0x178b, 0x2f3f, 0x0, 0x1);
        gbc.writeMem(0x2486, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0x2488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 003A
        gbc.setState(0x7875, 0x777f, 0xcfe0, 0x2aba, 0x9390, 0x5f7, 0x1, 0x0);
        gbc.writeMem(0x7875, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x777f);
        EXPECT(gbc.pc(), 0x7877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 003B
        gbc.setState(0x171d, 0xd05a, 0x8450, 0x59e8, 0x2ab3, 0x178e, 0x0, 0x1);
        gbc.writeMem(0x171d, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd05a);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 003C
        gbc.setState(0x128, 0x4dcf, 0xde80, 0xc48b, 0xdefc, 0x1650, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4dcf);
        EXPECT(gbc.pc(), 0x12a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 003D
        gbc.setState(0x5197, 0x3559, 0x8860, 0x77ff, 0x1c51, 0x31b5, 0x0, 0x1);
        gbc.writeMem(0x5197, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3559);
        EXPECT(gbc.pc(), 0x5199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 003E
        gbc.setState(0xaa93, 0x76f1, 0x62a0, 0x138b, 0x6d3, 0xae02, 0x0, 0x1);
        gbc.writeMem(0xaa93, { 0xe, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x76f1);
        EXPECT(gbc.pc(), 0xaa95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa93), 0xe);
        EXPECT(gbc.readMem(0xaa94), 0xfa);
        // 0E 003F
        gbc.setState(0x8f98, 0x2a7f, 0xc3e0, 0xbf48, 0x6f8, 0x9ea8, 0x0, 0x1);
        gbc.writeMem(0x8f98, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2a7f);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f98), 0xe);
        EXPECT(gbc.readMem(0x8f99), 0x38);
        // 0E 0040
        gbc.setState(0xd212, 0x5c9a, 0xee80, 0x44d2, 0x216c, 0xf815, 0x0, 0x1);
        gbc.writeMem(0xd212, { 0xe, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5c9a);
        EXPECT(gbc.pc(), 0xd214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0xe);
        EXPECT(gbc.readMem(0xd213), 0x2f);
        // 0E 0041
        gbc.setState(0x1271, 0x4d3, 0x90d0, 0x88d4, 0x90f6, 0x7306, 0x1, 0x1);
        gbc.writeMem(0x1271, { 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4d3);
        EXPECT(gbc.pc(), 0x1273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0042
        gbc.setState(0x5eec, 0x4195, 0x7570, 0x679e, 0x3154, 0xdb88, 0x0, 0x1);
        gbc.writeMem(0x5eec, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4195);
        EXPECT(gbc.pc(), 0x5eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0043
        gbc.setState(0x168f, 0x47a2, 0x6b00, 0x3c5c, 0xd4d4, 0x1c88, 0x1, 0x1);
        gbc.writeMem(0x168f, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0x1691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0044
        gbc.setState(0xa94d, 0xdc8e, 0xd10, 0xcbae, 0x6ee8, 0x30e0, 0x1, 0x1);
        gbc.writeMem(0xa94d, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdc8e);
        EXPECT(gbc.pc(), 0xa94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94d), 0xe);
        EXPECT(gbc.readMem(0xa94e), 0xa5);
        // 0E 0045
        gbc.setState(0xba19, 0xfb49, 0x4e0, 0xc9cd, 0x4fc9, 0x6ca2, 0x0, 0x0);
        gbc.writeMem(0xba19, { 0xe, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfb49);
        EXPECT(gbc.pc(), 0xba1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0xe);
        EXPECT(gbc.readMem(0xba1a), 0x1);
        // 0E 0046
        gbc.setState(0x22b, 0xb54d, 0xaee0, 0x1da0, 0x6de0, 0xc425, 0x0, 0x1);
        gbc.writeMem(0x22b, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb54d);
        EXPECT(gbc.pc(), 0x22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0047
        gbc.setState(0x66db, 0xc0e8, 0x1770, 0xf41f, 0x495d, 0x5c06, 0x0, 0x1);
        gbc.writeMem(0x66db, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0x66dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0048
        gbc.setState(0xa0f9, 0x8a9, 0xff70, 0x4ad, 0x9724, 0x171e, 0x0, 0x1);
        gbc.writeMem(0xa0f9, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8a9);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f9), 0xe);
        EXPECT(gbc.readMem(0xa0fa), 0xe0);
        // 0E 0049
        gbc.setState(0x6cf3, 0x3532, 0x62f0, 0xc249, 0x3f83, 0xa071, 0x1, 0x1);
        gbc.writeMem(0x6cf3, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3532);
        EXPECT(gbc.pc(), 0x6cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 004A
        gbc.setState(0xd500, 0x8421, 0xbac0, 0x4520, 0xe153, 0x11c4, 0x1, 0x0);
        gbc.writeMem(0xd500, { 0xe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8421);
        EXPECT(gbc.pc(), 0xd502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd500), 0xe);
        EXPECT(gbc.readMem(0xd501), 0x8a);
        // 0E 004B
        gbc.setState(0x9c3c, 0x11a7, 0x8190, 0xbe45, 0xc604, 0x54f4, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x11a7);
        EXPECT(gbc.pc(), 0x9c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3c), 0xe);
        EXPECT(gbc.readMem(0x9c3d), 0x3c);
        // 0E 004C
        gbc.setState(0xbdd, 0xcb6f, 0x9400, 0x1d28, 0x5d03, 0x8e55, 0x1, 0x0);
        gbc.writeMem(0xbdd, { 0xe, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcb6f);
        EXPECT(gbc.pc(), 0xbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 004D
        gbc.setState(0x5596, 0x4b5c, 0x5a0, 0xfe5c, 0xf504, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0x5596, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4b5c);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 004E
        gbc.setState(0x1bf3, 0xc4b0, 0x1120, 0xcb74, 0xe90f, 0xc191, 0x1, 0x1);
        gbc.writeMem(0x1bf3, { 0xe, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc4b0);
        EXPECT(gbc.pc(), 0x1bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 004F
        gbc.setState(0xe319, 0x998c, 0x76e0, 0xc60c, 0xe4be, 0x7d3a, 0x0, 0x1);
        gbc.writeMem(0xe319, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x998c);
        EXPECT(gbc.pc(), 0xe31b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe319), 0xe);
        EXPECT(gbc.readMem(0xe31a), 0xe6);
        // 0E 0050
        gbc.setState(0xc052, 0x9d1a, 0xbcf0, 0x9fab, 0xdffa, 0x42a0, 0x0, 0x1);
        gbc.writeMem(0xc052, { 0xe, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9d1a);
        EXPECT(gbc.pc(), 0xc054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc052), 0xe);
        EXPECT(gbc.readMem(0xc053), 0x28);
        // 0E 0051
        gbc.setState(0x10d3, 0x2650, 0xf90, 0xd0ec, 0xd695, 0xe7ef, 0x0, 0x1);
        gbc.writeMem(0x10d3, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2650);
        EXPECT(gbc.pc(), 0x10d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0052
        gbc.setState(0xec89, 0x3d69, 0x2870, 0xaf5, 0x1b5f, 0xd303, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xe, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3d69);
        EXPECT(gbc.pc(), 0xec8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec89), 0xe);
        EXPECT(gbc.readMem(0xec8a), 0x18);
        // 0E 0054
        gbc.setState(0xa678, 0x74f9, 0x3100, 0x6ee0, 0xcfe6, 0xd7cf, 0x1, 0x0);
        gbc.writeMem(0xa678, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x74f9);
        EXPECT(gbc.pc(), 0xa67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa678), 0xe);
        EXPECT(gbc.readMem(0xa679), 0xc6);
        // 0E 0055
        gbc.setState(0xa4ec, 0xb330, 0x160, 0xb3d0, 0x6a20, 0x4399, 0x0, 0x0);
        gbc.writeMem(0xa4ec, { 0xe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb330);
        EXPECT(gbc.pc(), 0xa4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ec), 0xe);
        EXPECT(gbc.readMem(0xa4ed), 0x59);
        // 0E 0056
        gbc.setState(0xa89b, 0x8fca, 0x5530, 0x93a2, 0x2575, 0x1b46, 0x1, 0x0);
        gbc.writeMem(0xa89b, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8fca);
        EXPECT(gbc.pc(), 0xa89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa89b), 0xe);
        EXPECT(gbc.readMem(0xa89c), 0xe1);
        // 0E 0057
        gbc.setState(0xca19, 0xbee9, 0xde30, 0xb110, 0x4a8e, 0xa571, 0x1, 0x1);
        gbc.writeMem(0xca19, { 0xe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0xca1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca19), 0xe);
        EXPECT(gbc.readMem(0xca1a), 0x97);
        // 0E 0058
        gbc.setState(0xd2f0, 0x6985, 0x8220, 0xd70a, 0xce97, 0x248d, 0x1, 0x0);
        gbc.writeMem(0xd2f0, { 0xe, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6985);
        EXPECT(gbc.pc(), 0xd2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f0), 0xe);
        EXPECT(gbc.readMem(0xd2f1), 0xbc);
        // 0E 0059
        gbc.setState(0x12f, 0xd3d0, 0xd930, 0x5255, 0xe941, 0xab1d, 0x0, 0x0);
        gbc.writeMem(0x12f, { 0xe, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd3d0);
        EXPECT(gbc.pc(), 0x131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 005A
        gbc.setState(0x6f8e, 0x6af6, 0x3a10, 0xaeae, 0x3c50, 0x5df2, 0x1, 0x1);
        gbc.writeMem(0x6f8e, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6af6);
        EXPECT(gbc.pc(), 0x6f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 005B
        gbc.setState(0x1203, 0xe35b, 0x4a10, 0x1c73, 0xc2d5, 0xedc7, 0x0, 0x1);
        gbc.writeMem(0x1203, { 0xe, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0x1205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 005C
        gbc.setState(0xf5d, 0xca78, 0x9650, 0xfdb6, 0x325c, 0x784d, 0x0, 0x0);
        gbc.writeMem(0xf5d, { 0xe, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xca78);
        EXPECT(gbc.pc(), 0xf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 005D
        gbc.setState(0xa5c8, 0x1099, 0xa360, 0x5f4c, 0x6536, 0xa3f1, 0x1, 0x0);
        gbc.writeMem(0xa5c8, { 0xe, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1099);
        EXPECT(gbc.pc(), 0xa5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c8), 0xe);
        EXPECT(gbc.readMem(0xa5c9), 0x7c);
        // 0E 005E
        gbc.setState(0x65c5, 0xd6e7, 0x1e50, 0x341a, 0x6637, 0x9710, 0x1, 0x1);
        gbc.writeMem(0x65c5, { 0xe, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd6e7);
        EXPECT(gbc.pc(), 0x65c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 005F
        gbc.setState(0xa0df, 0x6d26, 0x1d80, 0xae3b, 0x850e, 0x6b51, 0x1, 0x0);
        gbc.writeMem(0xa0df, { 0xe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6d26);
        EXPECT(gbc.pc(), 0xa0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0df), 0xe);
        EXPECT(gbc.readMem(0xa0e0), 0x9c);
        // 0E 0060
        gbc.setState(0x1a72, 0x6dae, 0xbd00, 0x8e1f, 0x3641, 0x6826, 0x1, 0x1);
        gbc.writeMem(0x1a72, { 0xe, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6dae);
        EXPECT(gbc.pc(), 0x1a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0061
        gbc.setState(0x52e0, 0x4e2b, 0x14b0, 0x4c96, 0x7a4d, 0x6504, 0x1, 0x0);
        gbc.writeMem(0x52e0, { 0xe, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4e2b);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0062
        gbc.setState(0xea7e, 0x7395, 0x6c40, 0x7812, 0x49f9, 0x532, 0x1, 0x0);
        gbc.writeMem(0xea7e, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0xea80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7e), 0xe);
        EXPECT(gbc.readMem(0xea7f), 0x2);
        // 0E 0063
        gbc.setState(0xb3a5, 0xb8a4, 0x8e20, 0x833a, 0x68ea, 0x29ae, 0x1, 0x0);
        gbc.writeMem(0xb3a5, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0xb3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a5), 0xe);
        EXPECT(gbc.readMem(0xb3a6), 0xc3);
        // 0E 0064
        gbc.setState(0x4724, 0xa4b8, 0x5fc0, 0x6b75, 0x230c, 0xc321, 0x1, 0x0);
        gbc.writeMem(0x4724, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa4b8);
        EXPECT(gbc.pc(), 0x4726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0065
        gbc.setState(0xad18, 0xa1a9, 0x47d0, 0x1a73, 0xe808, 0xeb6a, 0x0, 0x0);
        gbc.writeMem(0xad18, { 0xe, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa1a9);
        EXPECT(gbc.pc(), 0xad1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad18), 0xe);
        EXPECT(gbc.readMem(0xad19), 0x78);
        // 0E 0066
        gbc.setState(0xe995, 0x9113, 0x9550, 0x4de0, 0xea0, 0x738d, 0x0, 0x1);
        gbc.writeMem(0xe995, { 0xe, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9113);
        EXPECT(gbc.pc(), 0xe997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe995), 0xe);
        EXPECT(gbc.readMem(0xe996), 0xbe);
        // 0E 0067
        gbc.setState(0xa5b2, 0x9a57, 0x15d0, 0xd056, 0x327b, 0x6d89, 0x1, 0x1);
        gbc.writeMem(0xa5b2, { 0xe, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9a57);
        EXPECT(gbc.pc(), 0xa5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b2), 0xe);
        EXPECT(gbc.readMem(0xa5b3), 0x68);
        // 0E 0068
        gbc.setState(0x686a, 0x852a, 0xe0c0, 0xd49b, 0x56de, 0xfdc9, 0x0, 0x0);
        gbc.writeMem(0x686a, { 0xe, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x852a);
        EXPECT(gbc.pc(), 0x686c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0069
        gbc.setState(0x2577, 0xbd9c, 0x86f0, 0x70a5, 0xda2b, 0x8ab, 0x0, 0x1);
        gbc.writeMem(0x2577, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbd9c);
        EXPECT(gbc.pc(), 0x2579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 006A
        gbc.setState(0x6ca9, 0xc322, 0x33f0, 0x543c, 0x2d05, 0xdc06, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0xe, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc322);
        EXPECT(gbc.pc(), 0x6cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 006B
        gbc.setState(0x279b, 0xca10, 0xa7f0, 0x9d4a, 0xc68f, 0x9279, 0x0, 0x0);
        gbc.writeMem(0x279b, { 0xe, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xca10);
        EXPECT(gbc.pc(), 0x279d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 006C
        gbc.setState(0x6d8c, 0xefd8, 0x1010, 0xda6b, 0x8eb4, 0x797b, 0x0, 0x0);
        gbc.writeMem(0x6d8c, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0x6d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 006D
        gbc.setState(0xcd0d, 0xb73d, 0x9170, 0xdcaf, 0x4ce5, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0xcd0d, { 0xe, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb73d);
        EXPECT(gbc.pc(), 0xcd0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0d), 0xe);
        EXPECT(gbc.readMem(0xcd0e), 0x26);
        // 0E 006F
        gbc.setState(0x74ee, 0x6102, 0xbba0, 0x345e, 0x3020, 0xbd3c, 0x0, 0x1);
        gbc.writeMem(0x74ee, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6102);
        EXPECT(gbc.pc(), 0x74f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0070
        gbc.setState(0x3c0e, 0xcb4a, 0x1290, 0x3643, 0xa65b, 0xff3a, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0xe, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcb4a);
        EXPECT(gbc.pc(), 0x3c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0071
        gbc.setState(0x87c7, 0x14c6, 0x5490, 0xed3a, 0x4970, 0x5438, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x14c6);
        EXPECT(gbc.pc(), 0x87c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c7), 0xe);
        EXPECT(gbc.readMem(0x87c8), 0xff);
        // 0E 0072
        gbc.setState(0xc1f1, 0xc573, 0xee20, 0x7ad4, 0x1a4f, 0xf48d, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0xe, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc573);
        EXPECT(gbc.pc(), 0xc1f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f1), 0xe);
        EXPECT(gbc.readMem(0xc1f2), 0xa);
        // 0E 0074
        gbc.setState(0xa95e, 0x702a, 0xde0, 0x5137, 0xfb4, 0xf4a2, 0x1, 0x0);
        gbc.writeMem(0xa95e, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0xa960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95e), 0xe);
        EXPECT(gbc.readMem(0xa95f), 0xd9);
        // 0E 0075
        gbc.setState(0x22b8, 0x8033, 0x52b0, 0x8bd7, 0x21d2, 0x1f79, 0x0, 0x0);
        gbc.writeMem(0x22b8, { 0xe, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8033);
        EXPECT(gbc.pc(), 0x22ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0076
        gbc.setState(0x6343, 0xf37c, 0xa550, 0xefa4, 0xbd07, 0xcbad, 0x1, 0x1);
        gbc.writeMem(0x6343, { 0xe, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf37c);
        EXPECT(gbc.pc(), 0x6345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0077
        gbc.setState(0x58d9, 0xb5f2, 0xb430, 0xd7cd, 0x1f3b, 0xd2d5, 0x1, 0x1);
        gbc.writeMem(0x58d9, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb5f2);
        EXPECT(gbc.pc(), 0x58db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0078
        gbc.setState(0x8b31, 0xde9e, 0x8c70, 0x3c9, 0x77b7, 0x4108, 0x0, 0x1);
        gbc.writeMem(0x8b31, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0x8b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b31), 0xe);
        EXPECT(gbc.readMem(0x8b32), 0xe1);
        // 0E 007A
        gbc.setState(0x859e, 0x552a, 0xd4b0, 0x9b46, 0x3cc, 0xbf73, 0x0, 0x1);
        gbc.writeMem(0x859e, { 0xe, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x552a);
        EXPECT(gbc.pc(), 0x85a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859e), 0xe);
        EXPECT(gbc.readMem(0x859f), 0x40);
        // 0E 007B
        gbc.setState(0x8176, 0x2478, 0x4a20, 0xdfe, 0xa1b1, 0x5fc1, 0x0, 0x0);
        gbc.writeMem(0x8176, { 0xe, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2478);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8176), 0xe);
        EXPECT(gbc.readMem(0x8177), 0x16);
        // 0E 007C
        gbc.setState(0x22d8, 0x56de, 0x3540, 0x18fd, 0x97f0, 0x7cc6, 0x0, 0x0);
        gbc.writeMem(0x22d8, { 0xe, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x56de);
        EXPECT(gbc.pc(), 0x22da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 007D
        gbc.setState(0x8f07, 0x7b4a, 0xca0, 0xb34d, 0x909, 0xe13, 0x1, 0x1);
        gbc.writeMem(0x8f07, { 0xe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0x8f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f07), 0xe);
        EXPECT(gbc.readMem(0x8f08), 0x82);
        // 0E 007F
        gbc.setState(0x61a8, 0x311d, 0xde20, 0x9187, 0x5735, 0x570b, 0x1, 0x1);
        gbc.writeMem(0x61a8, { 0xe, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x311d);
        EXPECT(gbc.pc(), 0x61aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0080
        gbc.setState(0x26dc, 0x766f, 0xfac0, 0xc677, 0x7d63, 0xcabb, 0x0, 0x0);
        gbc.writeMem(0x26dc, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x766f);
        EXPECT(gbc.pc(), 0x26de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0081
        gbc.setState(0xed3e, 0xf5b4, 0x4fc0, 0x8973, 0xeee, 0x2680, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0xe, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf5b4);
        EXPECT(gbc.pc(), 0xed40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3e), 0xe);
        EXPECT(gbc.readMem(0xed3f), 0xae);
        // 0E 0082
        gbc.setState(0xc37e, 0xdfdf, 0x5ad0, 0x2606, 0x89e8, 0x858c, 0x1, 0x0);
        gbc.writeMem(0xc37e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdfdf);
        EXPECT(gbc.pc(), 0xc380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37e), 0xe);
        EXPECT(gbc.readMem(0xc37f), 0x49);
        // 0E 0083
        gbc.setState(0xaa5f, 0x6d1f, 0xb0c0, 0xe82e, 0x5a86, 0xca18, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0xe, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6d1f);
        EXPECT(gbc.pc(), 0xaa61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5f), 0xe);
        EXPECT(gbc.readMem(0xaa60), 0x1);
        // 0E 0085
        gbc.setState(0x9c0a, 0xaf43, 0x6720, 0xfa6f, 0x506e, 0x813d, 0x1, 0x1);
        gbc.writeMem(0x9c0a, { 0xe, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xaf43);
        EXPECT(gbc.pc(), 0x9c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0a), 0xe);
        EXPECT(gbc.readMem(0x9c0b), 0x1d);
        // 0E 0086
        gbc.setState(0xcb8d, 0x989b, 0x7400, 0x4923, 0x46e6, 0xd00c, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x989b);
        EXPECT(gbc.pc(), 0xcb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8d), 0xe);
        EXPECT(gbc.readMem(0xcb8e), 0xa9);
        // 0E 0087
        gbc.setState(0x181f, 0x3a37, 0xe010, 0xb46, 0x7d34, 0xdeba, 0x0, 0x1);
        gbc.writeMem(0x181f, { 0xe, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3a37);
        EXPECT(gbc.pc(), 0x1821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0088
        gbc.setState(0x56a8, 0x284c, 0xdf20, 0x1ec3, 0x153e, 0xe55b, 0x0, 0x1);
        gbc.writeMem(0x56a8, { 0xe, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x284c);
        EXPECT(gbc.pc(), 0x56aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0089
        gbc.setState(0x1e85, 0xcfcc, 0xcba0, 0x694, 0xaa2, 0x8fad, 0x0, 0x0);
        gbc.writeMem(0x1e85, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcfcc);
        EXPECT(gbc.pc(), 0x1e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 008A
        gbc.setState(0x8397, 0x71c1, 0xcb30, 0x38d9, 0x7111, 0xf873, 0x0, 0x1);
        gbc.writeMem(0x8397, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x71c1);
        EXPECT(gbc.pc(), 0x8399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8397), 0xe);
        EXPECT(gbc.readMem(0x8398), 0x1a);
        // 0E 008B
        gbc.setState(0x8831, 0x14b, 0x8370, 0x5531, 0x6992, 0x6505, 0x1, 0x1);
        gbc.writeMem(0x8831, { 0xe, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x14b);
        EXPECT(gbc.pc(), 0x8833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8831), 0xe);
        EXPECT(gbc.readMem(0x8832), 0x5a);
        // 0E 008C
        gbc.setState(0x56e5, 0x84a9, 0xb690, 0x387e, 0xe598, 0xd23d, 0x0, 0x0);
        gbc.writeMem(0x56e5, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x84a9);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 008D
        gbc.setState(0x159e, 0x7dfa, 0x7650, 0x68bb, 0xd5b2, 0xc1f6, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7dfa);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 008E
        gbc.setState(0x83cb, 0x2e0f, 0xd0f0, 0xad44, 0xf0e8, 0xb1f3, 0x1, 0x0);
        gbc.writeMem(0x83cb, { 0xe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2e0f);
        EXPECT(gbc.pc(), 0x83cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cb), 0xe);
        EXPECT(gbc.readMem(0x83cc), 0x82);
        // 0E 008F
        gbc.setState(0xdc31, 0x83f, 0x630, 0x39b4, 0xf5a2, 0x13d4, 0x1, 0x0);
        gbc.writeMem(0xdc31, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x83f);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc31), 0xe);
        EXPECT(gbc.readMem(0xdc32), 0x8b);
        // 0E 0091
        gbc.setState(0xaa22, 0xcf0b, 0x9d00, 0xd833, 0x8f7a, 0xa55, 0x0, 0x1);
        gbc.writeMem(0xaa22, { 0xe, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcf0b);
        EXPECT(gbc.pc(), 0xaa24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa22), 0xe);
        EXPECT(gbc.readMem(0xaa23), 0x2f);
        // 0E 0092
        gbc.setState(0x7eb2, 0xcf06, 0xf910, 0x2555, 0x63d1, 0x8293, 0x1, 0x0);
        gbc.writeMem(0x7eb2, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf06);
        EXPECT(gbc.pc(), 0x7eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0093
        gbc.setState(0x3e06, 0x2900, 0x5ac0, 0xab2c, 0xdb85, 0xc04b, 0x1, 0x1);
        gbc.writeMem(0x3e06, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2900);
        EXPECT(gbc.pc(), 0x3e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0094
        gbc.setState(0xc37e, 0xc144, 0x9e60, 0x89be, 0x47f6, 0xe5ae, 0x0, 0x0);
        gbc.writeMem(0xc37e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc144);
        EXPECT(gbc.pc(), 0xc380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37e), 0xe);
        EXPECT(gbc.readMem(0xc37f), 0x49);
        // 0E 0095
        gbc.setState(0x71aa, 0xbf8c, 0x9530, 0x1fb6, 0xa6e4, 0x435b, 0x1, 0x1);
        gbc.writeMem(0x71aa, { 0xe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbf8c);
        EXPECT(gbc.pc(), 0x71ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0096
        gbc.setState(0x65b2, 0xcfeb, 0x8cd0, 0xd43c, 0x8a91, 0x5dcf, 0x1, 0x1);
        gbc.writeMem(0x65b2, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcfeb);
        EXPECT(gbc.pc(), 0x65b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0097
        gbc.setState(0x3bf9, 0x1c12, 0x6170, 0x513c, 0xf206, 0x314c, 0x0, 0x0);
        gbc.writeMem(0x3bf9, { 0xe, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1c12);
        EXPECT(gbc.pc(), 0x3bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0098
        gbc.setState(0xd63f, 0xea33, 0xae40, 0x76b5, 0xef77, 0xc603, 0x1, 0x0);
        gbc.writeMem(0xd63f, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xea33);
        EXPECT(gbc.pc(), 0xd641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63f), 0xe);
        EXPECT(gbc.readMem(0xd640), 0x25);
        // 0E 0099
        gbc.setState(0xa63a, 0xc109, 0x9c60, 0xd0b4, 0x42a4, 0x6e1f, 0x0, 0x1);
        gbc.writeMem(0xa63a, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc109);
        EXPECT(gbc.pc(), 0xa63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63a), 0xe);
        EXPECT(gbc.readMem(0xa63b), 0xb1);
        // 0E 009A
        gbc.setState(0x2551, 0x118a, 0xfbd0, 0xb31d, 0xfab6, 0x193f, 0x1, 0x0);
        gbc.writeMem(0x2551, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x2553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 009B
        gbc.setState(0x6116, 0x460b, 0x72c0, 0x3ded, 0xa10f, 0x9fdd, 0x1, 0x0);
        gbc.writeMem(0x6116, { 0xe, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x460b);
        EXPECT(gbc.pc(), 0x6118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 009D
        gbc.setState(0x7374, 0x6ace, 0x8890, 0xc403, 0x16c5, 0x2653, 0x0, 0x0);
        gbc.writeMem(0x7374, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6ace);
        EXPECT(gbc.pc(), 0x7376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 009E
        gbc.setState(0xe260, 0xef94, 0xdf40, 0xa77d, 0xb0e, 0x6ef8, 0x1, 0x1);
        gbc.writeMem(0xe260, { 0xe, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xef94);
        EXPECT(gbc.pc(), 0xe262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe260), 0xe);
        EXPECT(gbc.readMem(0xe261), 0x46);
        // 0E 009F
        gbc.setState(0xb1f9, 0x8429, 0x7810, 0x5303, 0xa98f, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0xb1f9, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8429);
        EXPECT(gbc.pc(), 0xb1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f9), 0xe);
        EXPECT(gbc.readMem(0xb1fa), 0x49);
        // 0E 00A0
        gbc.setState(0xd16a, 0xdf61, 0x360, 0xc92d, 0xdc8c, 0xf75b, 0x1, 0x1);
        gbc.writeMem(0xd16a, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdf61);
        EXPECT(gbc.pc(), 0xd16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16a), 0xe);
        EXPECT(gbc.readMem(0xd16b), 0x3c);
        // 0E 00A1
        gbc.setState(0xdf05, 0x7b20, 0xe420, 0x64b, 0x75fc, 0x94be, 0x0, 0x1);
        gbc.writeMem(0xdf05, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7b20);
        EXPECT(gbc.pc(), 0xdf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf05), 0xe);
        EXPECT(gbc.readMem(0xdf06), 0xe1);
        // 0E 00A2
        gbc.setState(0x4ee5, 0x2661, 0x9330, 0x93f0, 0x2642, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x4ee5, { 0xe, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2661);
        EXPECT(gbc.pc(), 0x4ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00A3
        gbc.setState(0x3400, 0xfc6, 0xc600, 0x8817, 0xd2ef, 0xeed2, 0x0, 0x0);
        gbc.writeMem(0x3400, { 0xe, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfc6);
        EXPECT(gbc.pc(), 0x3402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00A4
        gbc.setState(0x71f5, 0x560c, 0xe070, 0x6b6, 0xd4b0, 0x8290, 0x1, 0x1);
        gbc.writeMem(0x71f5, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x560c);
        EXPECT(gbc.pc(), 0x71f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00A5
        gbc.setState(0x354e, 0x43e5, 0x6f60, 0x68d6, 0xde4c, 0x1b94, 0x1, 0x1);
        gbc.writeMem(0x354e, { 0xe, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x43e5);
        EXPECT(gbc.pc(), 0x3550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00A6
        gbc.setState(0xddc2, 0xdc33, 0xcf70, 0x6005, 0x295f, 0xb8a4, 0x1, 0x0);
        gbc.writeMem(0xddc2, { 0xe, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdc33);
        EXPECT(gbc.pc(), 0xddc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc2), 0xe);
        EXPECT(gbc.readMem(0xddc3), 0x3f);
        // 0E 00A7
        gbc.setState(0x54d8, 0xa9ed, 0xfbf0, 0x3fbe, 0x8c5, 0x5024, 0x1, 0x1);
        gbc.writeMem(0x54d8, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa9ed);
        EXPECT(gbc.pc(), 0x54da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00A8
        gbc.setState(0x2bbc, 0x8813, 0x43f0, 0x7709, 0x4f17, 0xab74, 0x0, 0x0);
        gbc.writeMem(0x2bbc, { 0xe, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8813);
        EXPECT(gbc.pc(), 0x2bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00A9
        gbc.setState(0x4454, 0x3792, 0x6180, 0x3883, 0x6ce4, 0x653c, 0x1, 0x1);
        gbc.writeMem(0x4454, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3792);
        EXPECT(gbc.pc(), 0x4456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00AA
        gbc.setState(0xef9d, 0x229d, 0x6e00, 0x75c2, 0xfa7b, 0xf163, 0x0, 0x0);
        gbc.writeMem(0xef9d, { 0xe, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x229d);
        EXPECT(gbc.pc(), 0xef9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9d), 0xe);
        EXPECT(gbc.readMem(0xef9e), 0x76);
        // 0E 00AB
        gbc.setState(0xd815, 0x6f2, 0x3af0, 0x4912, 0xd4a, 0xf954, 0x0, 0x0);
        gbc.writeMem(0xd815, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6f2);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd815), 0xe);
        EXPECT(gbc.readMem(0xd816), 0xf7);
        // 0E 00AC
        gbc.setState(0x1b0, 0x6798, 0x46a0, 0x9bd2, 0x9563, 0xff9d, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0xe, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6798);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00AD
        gbc.setState(0x9900, 0x47bc, 0x30a0, 0xbe59, 0x6d1, 0x142c, 0x1, 0x0);
        gbc.writeMem(0x9900, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x47bc);
        EXPECT(gbc.pc(), 0x9902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9900), 0xe);
        EXPECT(gbc.readMem(0x9901), 0x2b);
        // 0E 00AE
        gbc.setState(0x5621, 0x6986, 0x510, 0x7db5, 0x74f5, 0x9f34, 0x1, 0x1);
        gbc.writeMem(0x5621, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6986);
        EXPECT(gbc.pc(), 0x5623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00AF
        gbc.setState(0x2f2a, 0x1f0a, 0xbe80, 0x886b, 0xebf8, 0xdba0, 0x0, 0x1);
        gbc.writeMem(0x2f2a, { 0xe, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1f0a);
        EXPECT(gbc.pc(), 0x2f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00B0
        gbc.setState(0x7875, 0x6732, 0x2c70, 0x4cbc, 0x3c3, 0x632d, 0x1, 0x1);
        gbc.writeMem(0x7875, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6732);
        EXPECT(gbc.pc(), 0x7877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00B1
        gbc.setState(0x45cb, 0x9277, 0x3a30, 0x858c, 0x1ff8, 0xfca9, 0x0, 0x1);
        gbc.writeMem(0x45cb, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9277);
        EXPECT(gbc.pc(), 0x45cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00B2
        gbc.setState(0x4b70, 0xd7d0, 0xcbc0, 0x9e3, 0xa3c, 0x4759, 0x0, 0x0);
        gbc.writeMem(0x4b70, { 0xe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd7d0);
        EXPECT(gbc.pc(), 0x4b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00B3
        gbc.setState(0xb424, 0xe682, 0x9910, 0x7890, 0x7968, 0xd9af, 0x0, 0x1);
        gbc.writeMem(0xb424, { 0xe, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe682);
        EXPECT(gbc.pc(), 0xb426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb424), 0xe);
        EXPECT(gbc.readMem(0xb425), 0x9);
        // 0E 00B5
        gbc.setState(0x807e, 0x50e1, 0x3db0, 0x7f37, 0x3c8b, 0x3252, 0x0, 0x0);
        gbc.writeMem(0x807e, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x50e1);
        EXPECT(gbc.pc(), 0x8080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807e), 0xe);
        EXPECT(gbc.readMem(0x807f), 0x6);
        // 0E 00B6
        gbc.setState(0x5e38, 0x2294, 0x6200, 0xe260, 0x16ca, 0x98b8, 0x1, 0x0);
        gbc.writeMem(0x5e38, { 0xe, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x5e3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00B7
        gbc.setState(0x386b, 0xc79, 0x3a90, 0xccb7, 0x412d, 0xa852, 0x0, 0x1);
        gbc.writeMem(0x386b, { 0xe, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc79);
        EXPECT(gbc.pc(), 0x386d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00B8
        gbc.setState(0x29f0, 0xedfa, 0x910, 0xd3d7, 0x17a4, 0x2f98, 0x0, 0x1);
        gbc.writeMem(0x29f0, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xedfa);
        EXPECT(gbc.pc(), 0x29f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00BA
        gbc.setState(0xd2a9, 0x5988, 0xaf50, 0x9ba5, 0x6f74, 0x583d, 0x1, 0x1);
        gbc.writeMem(0xd2a9, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5988);
        EXPECT(gbc.pc(), 0xd2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a9), 0xe);
        EXPECT(gbc.readMem(0xd2aa), 0x79);
        // 0E 00BB
        gbc.setState(0x3e7f, 0x6377, 0x48f0, 0xaf50, 0x8c3c, 0xc2cd, 0x1, 0x1);
        gbc.writeMem(0x3e7f, { 0xe, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6377);
        EXPECT(gbc.pc(), 0x3e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00BC
        gbc.setState(0x79ce, 0x9bd8, 0x2e50, 0xbe34, 0x4be7, 0x350b, 0x1, 0x1);
        gbc.writeMem(0x79ce, { 0xe, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9bd8);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00BD
        gbc.setState(0x1138, 0x8414, 0xb240, 0x2792, 0x417a, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xe, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8414);
        EXPECT(gbc.pc(), 0x113a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00BE
        gbc.setState(0xedfd, 0x9a1e, 0xd190, 0x235a, 0xb48a, 0x5127, 0x0, 0x1);
        gbc.writeMem(0xedfd, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9a1e);
        EXPECT(gbc.pc(), 0xedff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfd), 0xe);
        EXPECT(gbc.readMem(0xedfe), 0x1e);
        // 0E 00BF
        gbc.setState(0x2742, 0x7425, 0x82e0, 0x412d, 0x6729, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0x2742, { 0xe, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7425);
        EXPECT(gbc.pc(), 0x2744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00C0
        gbc.setState(0xd9ba, 0xa6ed, 0xc8a0, 0x4251, 0x1419, 0x52fd, 0x1, 0x1);
        gbc.writeMem(0xd9ba, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa6ed);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0xe);
        EXPECT(gbc.readMem(0xd9bb), 0x5f);
        // 0E 00C1
        gbc.setState(0xb406, 0xb9c6, 0x9ab0, 0x6be1, 0xe9ac, 0x1dc7, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb9c6);
        EXPECT(gbc.pc(), 0xb408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb406), 0xe);
        EXPECT(gbc.readMem(0xb407), 0xc3);
        // 0E 00C3
        gbc.setState(0x3c44, 0x3e73, 0xe830, 0xb702, 0x35a5, 0x6d33, 0x1, 0x1);
        gbc.writeMem(0x3c44, { 0xe, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3e73);
        EXPECT(gbc.pc(), 0x3c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00C4
        gbc.setState(0xcb59, 0x9cdb, 0xdcd0, 0xd93, 0x4363, 0x2f56, 0x0, 0x1);
        gbc.writeMem(0xcb59, { 0xe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0xcb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb59), 0xe);
        EXPECT(gbc.readMem(0xcb5a), 0x21);
        // 0E 00C5
        gbc.setState(0xac2f, 0x9706, 0x14f0, 0xb52d, 0x9384, 0x52fa, 0x1, 0x1);
        gbc.writeMem(0xac2f, { 0xe, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0xac31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2f), 0xe);
        EXPECT(gbc.readMem(0xac30), 0x4a);
        // 0E 00C6
        gbc.setState(0xbd3f, 0xf59f, 0x17c0, 0x3e09, 0x4e2, 0xa03f, 0x1, 0x1);
        gbc.writeMem(0xbd3f, { 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf59f);
        EXPECT(gbc.pc(), 0xbd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3f), 0xe);
        EXPECT(gbc.readMem(0xbd40), 0x80);
        // 0E 00C7
        gbc.setState(0x1ea6, 0x704f, 0x8fb0, 0x54bc, 0x1a32, 0xd5d8, 0x1, 0x0);
        gbc.writeMem(0x1ea6, { 0xe, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x704f);
        EXPECT(gbc.pc(), 0x1ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00C8
        gbc.setState(0xc9c3, 0xc948, 0x6730, 0x31f3, 0xfbf1, 0x434f, 0x1, 0x0);
        gbc.writeMem(0xc9c3, { 0xe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc948);
        EXPECT(gbc.pc(), 0xc9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c3), 0xe);
        EXPECT(gbc.readMem(0xc9c4), 0x3b);
        // 0E 00C9
        gbc.setState(0xe876, 0x10bb, 0x3630, 0xb525, 0xd20e, 0x849d, 0x0, 0x0);
        gbc.writeMem(0xe876, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x10bb);
        EXPECT(gbc.pc(), 0xe878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe876), 0xe);
        EXPECT(gbc.readMem(0xe877), 0x1f);
        // 0E 00CB
        gbc.setState(0x60f2, 0x6a7a, 0x7fd0, 0xe863, 0xc01b, 0x4b88, 0x1, 0x0);
        gbc.writeMem(0x60f2, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0x60f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00CC
        gbc.setState(0x898c, 0x3998, 0xa8f0, 0xcd0b, 0x3ba7, 0x9a16, 0x0, 0x1);
        gbc.writeMem(0x898c, { 0xe, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3998);
        EXPECT(gbc.pc(), 0x898e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898c), 0xe);
        EXPECT(gbc.readMem(0x898d), 0x2c);
        // 0E 00CD
        gbc.setState(0x29c5, 0xaf24, 0xdf10, 0x9de, 0x21a1, 0x9492, 0x0, 0x1);
        gbc.writeMem(0x29c5, { 0xe, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x29c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00CE
        gbc.setState(0xad3e, 0xf3b6, 0x5d90, 0x98d9, 0xd3d8, 0x845d, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xe, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf3b6);
        EXPECT(gbc.pc(), 0xad40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3e), 0xe);
        EXPECT(gbc.readMem(0xad3f), 0x73);
        // 0E 00CF
        gbc.setState(0xb220, 0xbf43, 0xec90, 0x7106, 0xb85b, 0x4204, 0x1, 0x0);
        gbc.writeMem(0xb220, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbf43);
        EXPECT(gbc.pc(), 0xb222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb220), 0xe);
        EXPECT(gbc.readMem(0xb221), 0x1a);
        // 0E 00D0
        gbc.setState(0xa25f, 0x7d17, 0xfff0, 0xa065, 0x53f5, 0x2aed, 0x1, 0x1);
        gbc.writeMem(0xa25f, { 0xe, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7d17);
        EXPECT(gbc.pc(), 0xa261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25f), 0xe);
        EXPECT(gbc.readMem(0xa260), 0xcb);
        // 0E 00D2
        gbc.setState(0x5f11, 0x6824, 0x8960, 0x22b, 0xf68b, 0xfc1b, 0x1, 0x0);
        gbc.writeMem(0x5f11, { 0xe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6824);
        EXPECT(gbc.pc(), 0x5f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00D4
        gbc.setState(0x1aec, 0x2064, 0xc70, 0xe0a, 0x1a98, 0xb05c, 0x0, 0x0);
        gbc.writeMem(0x1aec, { 0xe, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2064);
        EXPECT(gbc.pc(), 0x1aee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00D5
        gbc.setState(0xdfe1, 0xc781, 0x1c90, 0xe97a, 0x7d5e, 0xac00, 0x0, 0x0);
        gbc.writeMem(0xdfe1, { 0xe, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc781);
        EXPECT(gbc.pc(), 0xdfe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe1), 0xe);
        EXPECT(gbc.readMem(0xdfe2), 0xfa);
        // 0E 00D6
        gbc.setState(0x411f, 0xfd9e, 0xb710, 0x2110, 0xdfeb, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x411f, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfd9e);
        EXPECT(gbc.pc(), 0x4121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00D7
        gbc.setState(0x21e1, 0x242f, 0x36b0, 0xb12a, 0x421c, 0x45b5, 0x1, 0x0);
        gbc.writeMem(0x21e1, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x242f);
        EXPECT(gbc.pc(), 0x21e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00D9
        gbc.setState(0xefa6, 0x6f45, 0xcc80, 0x7d73, 0xba7e, 0xef91, 0x1, 0x1);
        gbc.writeMem(0xefa6, { 0xe, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6f45);
        EXPECT(gbc.pc(), 0xefa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa6), 0xe);
        EXPECT(gbc.readMem(0xefa7), 0xbf);
        // 0E 00DA
        gbc.setState(0xc4f, 0xa8a3, 0xff20, 0xdf9d, 0x9da0, 0x2fa4, 0x0, 0x1);
        gbc.writeMem(0xc4f, { 0xe, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa8a3);
        EXPECT(gbc.pc(), 0xc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00DB
        gbc.setState(0x8889, 0x9fa0, 0x4c40, 0xf4da, 0xf1a6, 0x64c5, 0x0, 0x1);
        gbc.writeMem(0x8889, { 0xe, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9fa0);
        EXPECT(gbc.pc(), 0x888b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8889), 0xe);
        EXPECT(gbc.readMem(0x888a), 0x5d);
        // 0E 00DC
        gbc.setState(0xc55c, 0xb173, 0x15e0, 0x132, 0xcf2b, 0xdc4a, 0x1, 0x1);
        gbc.writeMem(0xc55c, { 0xe, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb173);
        EXPECT(gbc.pc(), 0xc55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc55c), 0xe);
        EXPECT(gbc.readMem(0xc55d), 0x35);
        // 0E 00DD
        gbc.setState(0xa554, 0x122a, 0xebf0, 0x97cb, 0x802e, 0x8dcf, 0x0, 0x1);
        gbc.writeMem(0xa554, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0xa556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa554), 0xe);
        EXPECT(gbc.readMem(0xa555), 0xce);
        // 0E 00DE
        gbc.setState(0x47f2, 0xdad8, 0xbf00, 0x8944, 0x2dbb, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0x47f2, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdad8);
        EXPECT(gbc.pc(), 0x47f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00DF
        gbc.setState(0xcd82, 0x68cb, 0xda90, 0x8732, 0x86a2, 0xeff0, 0x1, 0x0);
        gbc.writeMem(0xcd82, { 0xe, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0xcd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd82), 0xe);
        EXPECT(gbc.readMem(0xcd83), 0x9a);
        // 0E 00E0
        gbc.setState(0x18d6, 0x289e, 0x2900, 0x5cab, 0x38ec, 0x9500, 0x1, 0x1);
        gbc.writeMem(0x18d6, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x289e);
        EXPECT(gbc.pc(), 0x18d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00E1
        gbc.setState(0x8b07, 0xb992, 0xbf30, 0x574d, 0xa71a, 0x7f5d, 0x1, 0x1);
        gbc.writeMem(0x8b07, { 0xe, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb992);
        EXPECT(gbc.pc(), 0x8b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b07), 0xe);
        EXPECT(gbc.readMem(0x8b08), 0x73);
        // 0E 00E2
        gbc.setState(0x2b29, 0x75dd, 0x1cb0, 0x5921, 0x1b01, 0x643b, 0x1, 0x1);
        gbc.writeMem(0x2b29, { 0xe, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x75dd);
        EXPECT(gbc.pc(), 0x2b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00E3
        gbc.setState(0x3f5f, 0xef7f, 0x4d10, 0x83e4, 0xed05, 0xdd96, 0x1, 0x0);
        gbc.writeMem(0x3f5f, { 0xe, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xef7f);
        EXPECT(gbc.pc(), 0x3f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00E4
        gbc.setState(0x451f, 0x174, 0x70, 0x8145, 0xa996, 0xab91, 0x1, 0x1);
        gbc.writeMem(0x451f, { 0xe, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x174);
        EXPECT(gbc.pc(), 0x4521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00E5
        gbc.setState(0x8ead, 0x52a0, 0xc270, 0x8d1f, 0x189d, 0x3ad8, 0x0, 0x1);
        gbc.writeMem(0x8ead, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x52a0);
        EXPECT(gbc.pc(), 0x8eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ead), 0xe);
        EXPECT(gbc.readMem(0x8eae), 0xd6);
        // 0E 00E7
        gbc.setState(0xa298, 0x9fd6, 0xc550, 0x7807, 0x6b83, 0xa576, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9fd6);
        EXPECT(gbc.pc(), 0xa29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa298), 0xe);
        EXPECT(gbc.readMem(0xa299), 0xa9);
        // 0E 00E8
        gbc.setState(0x683a, 0x8d38, 0x72f0, 0x7dc4, 0x48c2, 0xc6da, 0x1, 0x1);
        gbc.writeMem(0x683a, { 0xe, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8d38);
        EXPECT(gbc.pc(), 0x683c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00E9
        gbc.setState(0x147a, 0x912b, 0x7d60, 0x86d0, 0xce0e, 0x21ad, 0x1, 0x0);
        gbc.writeMem(0x147a, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0x147c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00EA
        gbc.setState(0x7adf, 0x22ac, 0xf4a0, 0x7d62, 0x7c1c, 0x6bda, 0x0, 0x0);
        gbc.writeMem(0x7adf, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x22ac);
        EXPECT(gbc.pc(), 0x7ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 00EB
        gbc.setState(0x2caf, 0x54a, 0x3450, 0xa222, 0x89da, 0x938d, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x54a);
        EXPECT(gbc.pc(), 0x2cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00EC
        gbc.setState(0xa744, 0x11c3, 0x82e0, 0xca24, 0xf312, 0x34fd, 0x1, 0x0);
        gbc.writeMem(0xa744, { 0xe, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x11c3);
        EXPECT(gbc.pc(), 0xa746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa744), 0xe);
        EXPECT(gbc.readMem(0xa745), 0x53);
        // 0E 00ED
        gbc.setState(0x431e, 0xb082, 0x9570, 0x8700, 0x4ac3, 0x5de, 0x1, 0x1);
        gbc.writeMem(0x431e, { 0xe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb082);
        EXPECT(gbc.pc(), 0x4320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00EE
        gbc.setState(0x4de5, 0xd24e, 0x9f30, 0x2e0d, 0x9096, 0x5f1c, 0x1, 0x0);
        gbc.writeMem(0x4de5, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd24e);
        EXPECT(gbc.pc(), 0x4de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00EF
        gbc.setState(0x94ff, 0x5a6e, 0x3350, 0x1004, 0x2411, 0xf5b8, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xe, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5a6e);
        EXPECT(gbc.pc(), 0x9501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0xe);
        EXPECT(gbc.readMem(0x9500), 0xea);
        // 0E 00F0
        gbc.setState(0xa12a, 0x6e36, 0x7300, 0x781c, 0x9ead, 0x422f, 0x0, 0x0);
        gbc.writeMem(0xa12a, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6e36);
        EXPECT(gbc.pc(), 0xa12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12a), 0xe);
        EXPECT(gbc.readMem(0xa12b), 0xf1);
        // 0E 00F1
        gbc.setState(0xcf, 0xa537, 0xf790, 0xd138, 0x12e9, 0xb815, 0x1, 0x0);
        gbc.writeMem(0xcf, { 0xe, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa537);
        EXPECT(gbc.pc(), 0xd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00F2
        gbc.setState(0x5b6a, 0xcc93, 0x88b0, 0xcaca, 0x6c, 0x4214, 0x1, 0x0);
        gbc.writeMem(0x5b6a, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcc93);
        EXPECT(gbc.pc(), 0x5b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 00F3
        gbc.setState(0x8b6d, 0x6fc5, 0xc360, 0xf5fd, 0x12fa, 0xaa54, 0x1, 0x1);
        gbc.writeMem(0x8b6d, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6fc5);
        EXPECT(gbc.pc(), 0x8b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6d), 0xe);
        EXPECT(gbc.readMem(0x8b6e), 0xd1);
        // 0E 00F4
        gbc.setState(0x1ea1, 0xc315, 0xa5d0, 0x668e, 0xfe83, 0x92b1, 0x0, 0x0);
        gbc.writeMem(0x1ea1, { 0xe, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc315);
        EXPECT(gbc.pc(), 0x1ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00F5
        gbc.setState(0x8a30, 0x2cd1, 0x70, 0x995f, 0x55a7, 0x5862, 0x0, 0x0);
        gbc.writeMem(0x8a30, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0x8a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a30), 0xe);
        EXPECT(gbc.readMem(0x8a31), 0xe6);
        // 0E 00F6
        gbc.setState(0x81ff, 0x876, 0xa730, 0xa725, 0x8537, 0x83d5, 0x1, 0x0);
        gbc.writeMem(0x81ff, { 0xe, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x876);
        EXPECT(gbc.pc(), 0x8201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ff), 0xe);
        EXPECT(gbc.readMem(0x8200), 0xdc);
        // 0E 00F7
        gbc.setState(0x8ede, 0xba8d, 0x520, 0xf320, 0x40f5, 0xbf3, 0x1, 0x1);
        gbc.writeMem(0x8ede, { 0xe, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xba8d);
        EXPECT(gbc.pc(), 0x8ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ede), 0xe);
        EXPECT(gbc.readMem(0x8edf), 0x99);
        // 0E 00F8
        gbc.setState(0x1928, 0x8838, 0x9690, 0x87a0, 0xdaf0, 0x33f4, 0x0, 0x0);
        gbc.writeMem(0x1928, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8838);
        EXPECT(gbc.pc(), 0x192a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00F9
        gbc.setState(0xb8bb, 0x66a1, 0xd580, 0x85d9, 0x7be1, 0x7f03, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x66a1);
        EXPECT(gbc.pc(), 0xb8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bb), 0xe);
        EXPECT(gbc.readMem(0xb8bc), 0xc5);
        // 0E 00FA
        gbc.setState(0xa5f4, 0xf896, 0x5a40, 0x1bcd, 0x76c3, 0xa203, 0x1, 0x1);
        gbc.writeMem(0xa5f4, { 0xe, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf896);
        EXPECT(gbc.pc(), 0xa5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f4), 0xe);
        EXPECT(gbc.readMem(0xa5f5), 0xbe);
        // 0E 00FC
        gbc.setState(0x48e1, 0x1081, 0xd80, 0x28be, 0x2fa9, 0x7e53, 0x0, 0x0);
        gbc.writeMem(0x48e1, { 0xe, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1081);
        EXPECT(gbc.pc(), 0x48e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 00FD
        gbc.setState(0x9eea, 0x9d93, 0xb860, 0x518e, 0x3e0a, 0xaa9a, 0x1, 0x1);
        gbc.writeMem(0x9eea, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9d93);
        EXPECT(gbc.pc(), 0x9eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eea), 0xe);
        EXPECT(gbc.readMem(0x9eeb), 0x72);
        // 0E 00FE
        gbc.setState(0x7c4b, 0xb16, 0x1c50, 0x7d40, 0xbcad, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x7c4b, { 0xe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb16);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 00FF
        gbc.setState(0xc598, 0xf78a, 0x1f20, 0x540, 0x74f8, 0x944d, 0x1, 0x0);
        gbc.writeMem(0xc598, { 0xe, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf78a);
        EXPECT(gbc.pc(), 0xc59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc598), 0xe);
        EXPECT(gbc.readMem(0xc599), 0x78);
        // 0E 0100
        gbc.setState(0x52a2, 0x46b4, 0x420, 0x91a8, 0x9eca, 0x810e, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x46b4);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0101
        gbc.setState(0xdd58, 0x1b14, 0xfad0, 0x2201, 0x4e99, 0xdec7, 0x1, 0x1);
        gbc.writeMem(0xdd58, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1b14);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd58), 0xe);
        EXPECT(gbc.readMem(0xdd59), 0xf8);
        // 0E 0102
        gbc.setState(0xab3b, 0x3296, 0x7ab0, 0x3571, 0x4161, 0x336e, 0x0, 0x1);
        gbc.writeMem(0xab3b, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3296);
        EXPECT(gbc.pc(), 0xab3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3b), 0xe);
        EXPECT(gbc.readMem(0xab3c), 0xce);
        // 0E 0103
        gbc.setState(0x7521, 0x45b9, 0x5d40, 0x1753, 0xd1c2, 0x4877, 0x1, 0x1);
        gbc.writeMem(0x7521, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x45b9);
        EXPECT(gbc.pc(), 0x7523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0105
        gbc.setState(0xc4fb, 0x4317, 0x3c30, 0x49c6, 0x11ad, 0x2ba8, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0xc4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fb), 0xe);
        EXPECT(gbc.readMem(0xc4fc), 0x2);
        // 0E 0106
        gbc.setState(0xb31a, 0xa280, 0x35a0, 0x1c58, 0x5f16, 0x1961, 0x1, 0x1);
        gbc.writeMem(0xb31a, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa280);
        EXPECT(gbc.pc(), 0xb31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb31a), 0xe);
        EXPECT(gbc.readMem(0xb31b), 0xe8);
        // 0E 0107
        gbc.setState(0xabc5, 0x1c98, 0xa120, 0x7952, 0x2cc7, 0xaa44, 0x1, 0x0);
        gbc.writeMem(0xabc5, { 0xe, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1c98);
        EXPECT(gbc.pc(), 0xabc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc5), 0xe);
        EXPECT(gbc.readMem(0xabc6), 0x9a);
        // 0E 0108
        gbc.setState(0x4554, 0xe7b2, 0x5a90, 0x3b5e, 0x3d4d, 0xdfbe, 0x0, 0x0);
        gbc.writeMem(0x4554, { 0xe, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe7b2);
        EXPECT(gbc.pc(), 0x4556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0109
        gbc.setState(0x628c, 0xcc2c, 0xc40, 0x4a88, 0xe805, 0xecb5, 0x1, 0x1);
        gbc.writeMem(0x628c, { 0xe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcc2c);
        EXPECT(gbc.pc(), 0x628e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 010A
        gbc.setState(0x45d3, 0x2e7f, 0x7370, 0xe922, 0xcb9a, 0x5d03, 0x1, 0x1);
        gbc.writeMem(0x45d3, { 0xe, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2e7f);
        EXPECT(gbc.pc(), 0x45d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 010B
        gbc.setState(0x9d23, 0x7d48, 0x59b0, 0xfde2, 0x9ce1, 0xe274, 0x0, 0x1);
        gbc.writeMem(0x9d23, { 0xe, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7d48);
        EXPECT(gbc.pc(), 0x9d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d23), 0xe);
        EXPECT(gbc.readMem(0x9d24), 0x50);
        // 0E 010C
        gbc.setState(0x3318, 0x60bc, 0x8a0, 0x5050, 0x3feb, 0xac87, 0x0, 0x1);
        gbc.writeMem(0x3318, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x60bc);
        EXPECT(gbc.pc(), 0x331a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 010D
        gbc.setState(0x3c7b, 0x9db0, 0x2050, 0x3c05, 0xbca9, 0x91db, 0x1, 0x0);
        gbc.writeMem(0x3c7b, { 0xe, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9db0);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 010E
        gbc.setState(0xb83c, 0x17bc, 0x1a80, 0xb224, 0x1dea, 0x8de7, 0x1, 0x0);
        gbc.writeMem(0xb83c, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x17bc);
        EXPECT(gbc.pc(), 0xb83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83c), 0xe);
        EXPECT(gbc.readMem(0xb83d), 0x25);
        // 0E 010F
        gbc.setState(0x5a23, 0x1fe3, 0xc8c0, 0x7db2, 0x3040, 0x6196, 0x0, 0x0);
        gbc.writeMem(0x5a23, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1fe3);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0111
        gbc.setState(0xb700, 0xe76b, 0xd90, 0xa866, 0x32ba, 0xf517, 0x1, 0x1);
        gbc.writeMem(0xb700, { 0xe, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe76b);
        EXPECT(gbc.pc(), 0xb702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb700), 0xe);
        EXPECT(gbc.readMem(0xb701), 0x2f);
        // 0E 0112
        gbc.setState(0x7904, 0x8f21, 0xa980, 0x576a, 0x8e91, 0xde40, 0x0, 0x0);
        gbc.writeMem(0x7904, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8f21);
        EXPECT(gbc.pc(), 0x7906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0113
        gbc.setState(0x11ac, 0xa386, 0x15e0, 0xdf0, 0xfad1, 0x4d2, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa386);
        EXPECT(gbc.pc(), 0x11ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0114
        gbc.setState(0x252f, 0xc4b9, 0x4160, 0x6e06, 0x275d, 0x26e8, 0x0, 0x0);
        gbc.writeMem(0x252f, { 0xe, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc4b9);
        EXPECT(gbc.pc(), 0x2531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0115
        gbc.setState(0xc88e, 0xacda, 0xf90, 0x8ac1, 0xe744, 0x94f6, 0x1, 0x1);
        gbc.writeMem(0xc88e, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xacda);
        EXPECT(gbc.pc(), 0xc890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88e), 0xe);
        EXPECT(gbc.readMem(0xc88f), 0xc9);
        // 0E 0116
        gbc.setState(0x5191, 0x378c, 0x77a0, 0x66a1, 0x5727, 0x11c6, 0x0, 0x0);
        gbc.writeMem(0x5191, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0117
        gbc.setState(0x8989, 0x9296, 0x8b50, 0xbcbf, 0x574e, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0x8989, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9296);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xe);
        EXPECT(gbc.readMem(0x898a), 0x1f);
        // 0E 0118
        gbc.setState(0xd8c0, 0x5d47, 0xe370, 0xd90, 0x2f3c, 0x6667, 0x0, 0x0);
        gbc.writeMem(0xd8c0, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5d47);
        EXPECT(gbc.pc(), 0xd8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c0), 0xe);
        EXPECT(gbc.readMem(0xd8c1), 0x65);
        // 0E 0119
        gbc.setState(0xcd55, 0xc327, 0xa640, 0x3c6a, 0xb08b, 0x9406, 0x1, 0x1);
        gbc.writeMem(0xcd55, { 0xe, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc327);
        EXPECT(gbc.pc(), 0xcd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd55), 0xe);
        EXPECT(gbc.readMem(0xcd56), 0x5);
        // 0E 011A
        gbc.setState(0x44f4, 0x56a9, 0x84d0, 0xefb, 0x2895, 0xabc9, 0x1, 0x0);
        gbc.writeMem(0x44f4, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x56a9);
        EXPECT(gbc.pc(), 0x44f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 011B
        gbc.setState(0x7f06, 0x45a, 0xfdc0, 0x4f4c, 0xe899, 0x9b38, 0x0, 0x0);
        gbc.writeMem(0x7f06, { 0xe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x45a);
        EXPECT(gbc.pc(), 0x7f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 011C
        gbc.setState(0xda9, 0xd4a2, 0xd800, 0x31f1, 0x528e, 0x67ed, 0x0, 0x0);
        gbc.writeMem(0xda9, { 0xe, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0xdab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 011D
        gbc.setState(0x4870, 0x537e, 0x3500, 0x5fb, 0xc780, 0xcadc, 0x1, 0x0);
        gbc.writeMem(0x4870, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x537e);
        EXPECT(gbc.pc(), 0x4872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 011E
        gbc.setState(0xc939, 0x6ece, 0x95d0, 0xd8b0, 0x54a7, 0x89b3, 0x1, 0x1);
        gbc.writeMem(0xc939, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6ece);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc939), 0xe);
        EXPECT(gbc.readMem(0xc93a), 0xf5);
        // 0E 011F
        gbc.setState(0x68e5, 0x9b27, 0xb030, 0x27d, 0x73b9, 0x1806, 0x0, 0x1);
        gbc.writeMem(0x68e5, { 0xe, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9b27);
        EXPECT(gbc.pc(), 0x68e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0120
        gbc.setState(0x6307, 0xfe22, 0xb830, 0x7fd4, 0x555a, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x6307, { 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfe22);
        EXPECT(gbc.pc(), 0x6309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0121
        gbc.setState(0x94bd, 0x9d7c, 0xb600, 0x3bfb, 0xf036, 0xb65e, 0x0, 0x0);
        gbc.writeMem(0x94bd, { 0xe, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9d7c);
        EXPECT(gbc.pc(), 0x94bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94bd), 0xe);
        EXPECT(gbc.readMem(0x94be), 0x53);
        // 0E 0122
        gbc.setState(0xbc9b, 0x683d, 0x7e10, 0x11e9, 0xcc8, 0x29f9, 0x1, 0x1);
        gbc.writeMem(0xbc9b, { 0xe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x683d);
        EXPECT(gbc.pc(), 0xbc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9b), 0xe);
        EXPECT(gbc.readMem(0xbc9c), 0x24);
        // 0E 0123
        gbc.setState(0xc3b3, 0x14f4, 0xb30, 0x761d, 0xbdad, 0xf7aa, 0x0, 0x0);
        gbc.writeMem(0xc3b3, { 0xe, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x14f4);
        EXPECT(gbc.pc(), 0xc3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b3), 0xe);
        EXPECT(gbc.readMem(0xc3b4), 0xe3);
        // 0E 0124
        gbc.setState(0xa6b1, 0xd9c9, 0x2cc0, 0x73d6, 0x768e, 0xf99c, 0x1, 0x1);
        gbc.writeMem(0xa6b1, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd9c9);
        EXPECT(gbc.pc(), 0xa6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b1), 0xe);
        EXPECT(gbc.readMem(0xa6b2), 0xa1);
        // 0E 0125
        gbc.setState(0x4e5a, 0x40cc, 0xd680, 0x2060, 0xbe3d, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x4e5a, { 0xe, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x40cc);
        EXPECT(gbc.pc(), 0x4e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0126
        gbc.setState(0x936c, 0x9974, 0x9cd0, 0xffb5, 0x1d72, 0x917f, 0x1, 0x1);
        gbc.writeMem(0x936c, { 0xe, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9974);
        EXPECT(gbc.pc(), 0x936e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936c), 0xe);
        EXPECT(gbc.readMem(0x936d), 0x75);
        // 0E 0127
        gbc.setState(0x2142, 0xa086, 0x2080, 0x635b, 0x8b89, 0xcebf, 0x0, 0x0);
        gbc.writeMem(0x2142, { 0xe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa086);
        EXPECT(gbc.pc(), 0x2144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0128
        gbc.setState(0x3dcd, 0xbcc2, 0xeb50, 0x3c33, 0x2e0c, 0x59a7, 0x1, 0x0);
        gbc.writeMem(0x3dcd, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbcc2);
        EXPECT(gbc.pc(), 0x3dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0129
        gbc.setState(0xe75a, 0xd6a0, 0x5200, 0xadb1, 0xd23d, 0x17a4, 0x0, 0x0);
        gbc.writeMem(0xe75a, { 0xe, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd6a0);
        EXPECT(gbc.pc(), 0xe75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75a), 0xe);
        EXPECT(gbc.readMem(0xe75b), 0xcc);
        // 0E 012A
        gbc.setState(0x76df, 0x182b, 0x4970, 0x636c, 0xa6e7, 0xe0ab, 0x1, 0x0);
        gbc.writeMem(0x76df, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x182b);
        EXPECT(gbc.pc(), 0x76e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 012B
        gbc.setState(0x1ace, 0x5ecf, 0x1ca0, 0x37eb, 0x2f1a, 0xf5db, 0x0, 0x1);
        gbc.writeMem(0x1ace, { 0xe, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5ecf);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 012C
        gbc.setState(0x4d22, 0x9f05, 0xfd10, 0xfa7d, 0xe711, 0x38e5, 0x1, 0x1);
        gbc.writeMem(0x4d22, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9f05);
        EXPECT(gbc.pc(), 0x4d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 012D
        gbc.setState(0x5b86, 0x874, 0xb960, 0x6ceb, 0xcf77, 0x8796, 0x0, 0x0);
        gbc.writeMem(0x5b86, { 0xe, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x874);
        EXPECT(gbc.pc(), 0x5b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 012F
        gbc.setState(0xe96d, 0x4e7a, 0xe6e0, 0xa977, 0x25ea, 0x8e58, 0x0, 0x0);
        gbc.writeMem(0xe96d, { 0xe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4e7a);
        EXPECT(gbc.pc(), 0xe96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96d), 0xe);
        EXPECT(gbc.readMem(0xe96e), 0x24);
        // 0E 0130
        gbc.setState(0xedcf, 0x833a, 0x8f50, 0x102a, 0xcb61, 0xa7c1, 0x0, 0x1);
        gbc.writeMem(0xedcf, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x833a);
        EXPECT(gbc.pc(), 0xedd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcf), 0xe);
        EXPECT(gbc.readMem(0xedd0), 0xa4);
        // 0E 0131
        gbc.setState(0x1c50, 0xc8ed, 0x5010, 0x7b04, 0xaa53, 0xdd27, 0x1, 0x0);
        gbc.writeMem(0x1c50, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc8ed);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0132
        gbc.setState(0x39cb, 0x4d2f, 0x160, 0x5362, 0xa234, 0x8c73, 0x1, 0x1);
        gbc.writeMem(0x39cb, { 0xe, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4d2f);
        EXPECT(gbc.pc(), 0x39cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0133
        gbc.setState(0x544a, 0x5036, 0x27b0, 0xa140, 0xd329, 0xe631, 0x0, 0x1);
        gbc.writeMem(0x544a, { 0xe, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5036);
        EXPECT(gbc.pc(), 0x544c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0134
        gbc.setState(0x3164, 0xda37, 0xe210, 0xe4a4, 0xd2ee, 0xb24c, 0x1, 0x0);
        gbc.writeMem(0x3164, { 0xe, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0x3166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0135
        gbc.setState(0xc485, 0x31dc, 0xca30, 0x658b, 0xa95, 0x593e, 0x0, 0x1);
        gbc.writeMem(0xc485, { 0xe, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0xc487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc485), 0xe);
        EXPECT(gbc.readMem(0xc486), 0x9e);
        // 0E 0136
        gbc.setState(0x6116, 0x2a7f, 0x4500, 0xb165, 0x39d0, 0x3798, 0x0, 0x1);
        gbc.writeMem(0x6116, { 0xe, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2a7f);
        EXPECT(gbc.pc(), 0x6118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0137
        gbc.setState(0xfea, 0xfa28, 0x7150, 0x5e90, 0xcf91, 0x5074, 0x1, 0x0);
        gbc.writeMem(0xfea, { 0xe, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfa28);
        EXPECT(gbc.pc(), 0xfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0138
        gbc.setState(0x3389, 0x8c9a, 0x76f0, 0xc349, 0xd9ef, 0x9b1b, 0x1, 0x1);
        gbc.writeMem(0x3389, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8c9a);
        EXPECT(gbc.pc(), 0x338b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0139
        gbc.setState(0x9468, 0xca7f, 0xa620, 0x4f12, 0x5ee6, 0xf4d5, 0x0, 0x0);
        gbc.writeMem(0x9468, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xca7f);
        EXPECT(gbc.pc(), 0x946a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9468), 0xe);
        EXPECT(gbc.readMem(0x9469), 0xed);
        // 0E 013A
        gbc.setState(0x4501, 0x4d0f, 0x54a0, 0xd93f, 0x1c5f, 0x78d1, 0x0, 0x0);
        gbc.writeMem(0x4501, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4d0f);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 013B
        gbc.setState(0x66e0, 0xacd2, 0x46a0, 0xa70e, 0x3bc, 0xafb1, 0x0, 0x0);
        gbc.writeMem(0x66e0, { 0xe, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xacd2);
        EXPECT(gbc.pc(), 0x66e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 013C
        gbc.setState(0x8c36, 0xa9d0, 0xbc90, 0x7ee4, 0x5007, 0x269a, 0x1, 0x1);
        gbc.writeMem(0x8c36, { 0xe, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0x8c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c36), 0xe);
        EXPECT(gbc.readMem(0x8c37), 0x99);
        // 0E 013D
        gbc.setState(0x6d51, 0xdfc2, 0x660, 0x72d1, 0x4df, 0x4581, 0x1, 0x1);
        gbc.writeMem(0x6d51, { 0xe, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdfc2);
        EXPECT(gbc.pc(), 0x6d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 013E
        gbc.setState(0x3311, 0xe4fb, 0xef80, 0xd630, 0x8023, 0x9b02, 0x0, 0x1);
        gbc.writeMem(0x3311, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe4fb);
        EXPECT(gbc.pc(), 0x3313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0140
        gbc.setState(0x1a01, 0x852f, 0x2b80, 0x87a, 0xb1c9, 0xdcb9, 0x0, 0x0);
        gbc.writeMem(0x1a01, { 0xe, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x852f);
        EXPECT(gbc.pc(), 0x1a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0141
        gbc.setState(0x1d99, 0x7f32, 0x8840, 0x7c74, 0x226d, 0x15dc, 0x0, 0x0);
        gbc.writeMem(0x1d99, { 0xe, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7f32);
        EXPECT(gbc.pc(), 0x1d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0142
        gbc.setState(0x9643, 0x6a6f, 0x89b0, 0x4e4c, 0xd77, 0x6913, 0x1, 0x1);
        gbc.writeMem(0x9643, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0x9645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9643), 0xe);
        EXPECT(gbc.readMem(0x9644), 0xe6);
        // 0E 0143
        gbc.setState(0x5a8c, 0x4075, 0xf640, 0xc44f, 0x3944, 0xc5cb, 0x1, 0x0);
        gbc.writeMem(0x5a8c, { 0xe, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4075);
        EXPECT(gbc.pc(), 0x5a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0144
        gbc.setState(0x712d, 0xd817, 0x5cb0, 0x43ae, 0xa9f1, 0x3bf5, 0x1, 0x0);
        gbc.writeMem(0x712d, { 0xe, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd817);
        EXPECT(gbc.pc(), 0x712f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0145
        gbc.setState(0x8ec, 0xdaa2, 0xbac0, 0x9225, 0xa9ed, 0x761, 0x0, 0x1);
        gbc.writeMem(0x8ec, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0x8ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0147
        gbc.setState(0x7f8d, 0x4b4c, 0x1620, 0x4c54, 0x535f, 0x543a, 0x1, 0x0);
        gbc.writeMem(0x7f8d, { 0xe, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4b4c);
        EXPECT(gbc.pc(), 0x7f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0149
        gbc.setState(0x8169, 0x1958, 0x2280, 0x793, 0x814e, 0xe938, 0x1, 0x0);
        gbc.writeMem(0x8169, { 0xe, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1958);
        EXPECT(gbc.pc(), 0x816b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8169), 0xe);
        EXPECT(gbc.readMem(0x816a), 0x7c);
        // 0E 014A
        gbc.setState(0xbe84, 0xa0d8, 0x2030, 0x9fbd, 0x1a3d, 0x5aeb, 0x0, 0x0);
        gbc.writeMem(0xbe84, { 0xe, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0xbe86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe84), 0xe);
        EXPECT(gbc.readMem(0xbe85), 0x54);
        // 0E 014B
        gbc.setState(0xadc8, 0x45d0, 0x23c0, 0xb90a, 0x60cc, 0x282, 0x0, 0x1);
        gbc.writeMem(0xadc8, { 0xe, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x45d0);
        EXPECT(gbc.pc(), 0xadca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc8), 0xe);
        EXPECT(gbc.readMem(0xadc9), 0xca);
        // 0E 014C
        gbc.setState(0xc21a, 0xefdd, 0x3880, 0xa40f, 0x4b9a, 0x375, 0x1, 0x0);
        gbc.writeMem(0xc21a, { 0xe, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xefdd);
        EXPECT(gbc.pc(), 0xc21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21a), 0xe);
        EXPECT(gbc.readMem(0xc21b), 0x63);
        // 0E 014D
        gbc.setState(0x3b10, 0x60b6, 0x88e0, 0xbd6b, 0x6e2a, 0xbf7e, 0x0, 0x1);
        gbc.writeMem(0x3b10, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x60b6);
        EXPECT(gbc.pc(), 0x3b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 014E
        gbc.setState(0xa270, 0xe782, 0x1390, 0x5ec9, 0x2b8d, 0x2afe, 0x0, 0x1);
        gbc.writeMem(0xa270, { 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe782);
        EXPECT(gbc.pc(), 0xa272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa270), 0xe);
        EXPECT(gbc.readMem(0xa271), 0x80);
        // 0E 014F
        gbc.setState(0x626f, 0x9b3a, 0xb260, 0x16b8, 0x128b, 0x3705, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0xe, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0x6271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0150
        gbc.setState(0x3c59, 0xac3c, 0xf5a0, 0x6d8c, 0x2453, 0xb7e1, 0x1, 0x0);
        gbc.writeMem(0x3c59, { 0xe, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xac3c);
        EXPECT(gbc.pc(), 0x3c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0151
        gbc.setState(0x26a8, 0xca35, 0x2f10, 0xd6be, 0xa751, 0x2c49, 0x0, 0x1);
        gbc.writeMem(0x26a8, { 0xe, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0x26aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0152
        gbc.setState(0x3d02, 0xc315, 0xe320, 0x594e, 0xaabb, 0x8aeb, 0x1, 0x0);
        gbc.writeMem(0x3d02, { 0xe, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc315);
        EXPECT(gbc.pc(), 0x3d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0153
        gbc.setState(0xcf21, 0xd43d, 0x5c50, 0x18cf, 0x856a, 0xc058, 0x0, 0x1);
        gbc.writeMem(0xcf21, { 0xe, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd43d);
        EXPECT(gbc.pc(), 0xcf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf21), 0xe);
        EXPECT(gbc.readMem(0xcf22), 0x66);
        // 0E 0154
        gbc.setState(0x7d77, 0xc614, 0xa220, 0xbccc, 0x9fdb, 0xae23, 0x0, 0x1);
        gbc.writeMem(0x7d77, { 0xe, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc614);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0155
        gbc.setState(0x607c, 0x27e5, 0x10b0, 0x592c, 0x6985, 0x9704, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0xe, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x27e5);
        EXPECT(gbc.pc(), 0x607e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0156
        gbc.setState(0xc75, 0x211a, 0xb980, 0x9660, 0x657d, 0xcc9b, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0xe, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x211a);
        EXPECT(gbc.pc(), 0xc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0157
        gbc.setState(0x9cce, 0x8bc7, 0x4f0, 0xb89e, 0x232e, 0x2140, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0xe, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8bc7);
        EXPECT(gbc.pc(), 0x9cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cce), 0xe);
        EXPECT(gbc.readMem(0x9ccf), 0x3f);
        // 0E 0158
        gbc.setState(0x1cd8, 0x5675, 0x8e70, 0x5998, 0x199e, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x1cd8, { 0xe, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0159
        gbc.setState(0xd07, 0x6f2, 0xf730, 0x1027, 0x268f, 0x62aa, 0x1, 0x0);
        gbc.writeMem(0xd07, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6f2);
        EXPECT(gbc.pc(), 0xd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 015A
        gbc.setState(0xe725, 0x2450, 0xc1d0, 0xafcb, 0x5c90, 0x1ce0, 0x0, 0x0);
        gbc.writeMem(0xe725, { 0xe, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2450);
        EXPECT(gbc.pc(), 0xe727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe725), 0xe);
        EXPECT(gbc.readMem(0xe726), 0x90);
        // 0E 015B
        gbc.setState(0xa04b, 0xc892, 0xc960, 0x4d02, 0x8e93, 0x750d, 0x1, 0x1);
        gbc.writeMem(0xa04b, { 0xe, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc892);
        EXPECT(gbc.pc(), 0xa04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04b), 0xe);
        EXPECT(gbc.readMem(0xa04c), 0x30);
        // 0E 015C
        gbc.setState(0x7858, 0xd028, 0xe170, 0x5c13, 0xeaa1, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x7858, { 0xe, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x785a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 015D
        gbc.setState(0x78d1, 0x71a3, 0x84a0, 0xd23e, 0x36ce, 0xa3f1, 0x1, 0x1);
        gbc.writeMem(0x78d1, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x71a3);
        EXPECT(gbc.pc(), 0x78d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 015E
        gbc.setState(0x6b96, 0x6b59, 0x4740, 0xd97f, 0x8b55, 0xa2bc, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0x6b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 015F
        gbc.setState(0xb86f, 0x9797, 0xbb50, 0x262d, 0x436b, 0x8f36, 0x1, 0x1);
        gbc.writeMem(0xb86f, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9797);
        EXPECT(gbc.pc(), 0xb871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86f), 0xe);
        EXPECT(gbc.readMem(0xb870), 0xc5);
        // 0E 0160
        gbc.setState(0xd83d, 0xc681, 0x73b0, 0x6f69, 0xf822, 0x63b0, 0x1, 0x0);
        gbc.writeMem(0xd83d, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0xd83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83d), 0xe);
        EXPECT(gbc.readMem(0xd83e), 0xd5);
        // 0E 0161
        gbc.setState(0x9c82, 0xa9d6, 0xcfc0, 0xf0da, 0x67a6, 0xfd7c, 0x0, 0x0);
        gbc.writeMem(0x9c82, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa9d6);
        EXPECT(gbc.pc(), 0x9c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c82), 0xe);
        EXPECT(gbc.readMem(0x9c83), 0x85);
        // 0E 0162
        gbc.setState(0x5eb4, 0x8621, 0xd890, 0x391e, 0x9159, 0x197, 0x1, 0x0);
        gbc.writeMem(0x5eb4, { 0xe, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8621);
        EXPECT(gbc.pc(), 0x5eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0163
        gbc.setState(0x83a4, 0xea0e, 0x5570, 0x81b5, 0xc979, 0x5181, 0x1, 0x0);
        gbc.writeMem(0x83a4, { 0xe, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xea0e);
        EXPECT(gbc.pc(), 0x83a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a4), 0xe);
        EXPECT(gbc.readMem(0x83a5), 0x8f);
        // 0E 0164
        gbc.setState(0xa316, 0x7dfa, 0x7160, 0xcf8e, 0xefe3, 0xf04c, 0x0, 0x1);
        gbc.writeMem(0xa316, { 0xe, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7dfa);
        EXPECT(gbc.pc(), 0xa318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa316), 0xe);
        EXPECT(gbc.readMem(0xa317), 0xbd);
        // 0E 0165
        gbc.setState(0xba35, 0x3cad, 0xa320, 0x7b9f, 0xc5c7, 0x2caa, 0x0, 0x0);
        gbc.writeMem(0xba35, { 0xe, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3cad);
        EXPECT(gbc.pc(), 0xba37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba35), 0xe);
        EXPECT(gbc.readMem(0xba36), 0xb6);
        // 0E 0166
        gbc.setState(0xda7d, 0x6cf8, 0x45a0, 0xfe04, 0x9fb7, 0xe429, 0x1, 0x0);
        gbc.writeMem(0xda7d, { 0xe, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6cf8);
        EXPECT(gbc.pc(), 0xda7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7d), 0xe);
        EXPECT(gbc.readMem(0xda7e), 0x11);
        // 0E 0167
        gbc.setState(0x8d9b, 0x1d4b, 0xebf0, 0x6cd3, 0x4d74, 0xbf95, 0x0, 0x1);
        gbc.writeMem(0x8d9b, { 0xe, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1d4b);
        EXPECT(gbc.pc(), 0x8d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9b), 0xe);
        EXPECT(gbc.readMem(0x8d9c), 0xab);
        // 0E 0168
        gbc.setState(0xe5a6, 0xab51, 0xc540, 0xcfd0, 0x3c5e, 0x76bc, 0x1, 0x0);
        gbc.writeMem(0xe5a6, { 0xe, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xab51);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a6), 0xe);
        EXPECT(gbc.readMem(0xe5a7), 0xfd);
        // 0E 016A
        gbc.setState(0xda69, 0x50a9, 0x4630, 0x32cb, 0xe0d3, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0xda69, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x50a9);
        EXPECT(gbc.pc(), 0xda6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda69), 0xe);
        EXPECT(gbc.readMem(0xda6a), 0x2);
        // 0E 016B
        gbc.setState(0x884f, 0xf5eb, 0xd4b0, 0x1484, 0xf708, 0x9207, 0x1, 0x1);
        gbc.writeMem(0x884f, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf5eb);
        EXPECT(gbc.pc(), 0x8851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884f), 0xe);
        EXPECT(gbc.readMem(0x8850), 0xc4);
        // 0E 016C
        gbc.setState(0x3149, 0xd04b, 0x10c0, 0x9983, 0x572a, 0xe6b1, 0x1, 0x1);
        gbc.writeMem(0x3149, { 0xe, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd04b);
        EXPECT(gbc.pc(), 0x314b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 016D
        gbc.setState(0x424f, 0x8be4, 0x65c0, 0xe028, 0xa432, 0x883f, 0x1, 0x1);
        gbc.writeMem(0x424f, { 0xe, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8be4);
        EXPECT(gbc.pc(), 0x4251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 016E
        gbc.setState(0x2e37, 0xb684, 0x7cb0, 0x15d, 0xe2d3, 0xa343, 0x1, 0x0);
        gbc.writeMem(0x2e37, { 0xe, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb684);
        EXPECT(gbc.pc(), 0x2e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 016F
        gbc.setState(0xe269, 0x96d7, 0xd070, 0xae1d, 0x32a8, 0xf16d, 0x1, 0x1);
        gbc.writeMem(0xe269, { 0xe, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x96d7);
        EXPECT(gbc.pc(), 0xe26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe269), 0xe);
        EXPECT(gbc.readMem(0xe26a), 0x6b);
        // 0E 0170
        gbc.setState(0x635c, 0xe32f, 0xc7c0, 0x478a, 0x8826, 0x1473, 0x0, 0x0);
        gbc.writeMem(0x635c, { 0xe, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe32f);
        EXPECT(gbc.pc(), 0x635e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0171
        gbc.setState(0x8796, 0x6b98, 0x1840, 0xcfa5, 0x86d6, 0xc55, 0x0, 0x0);
        gbc.writeMem(0x8796, { 0xe, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6b98);
        EXPECT(gbc.pc(), 0x8798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8796), 0xe);
        EXPECT(gbc.readMem(0x8797), 0x1c);
        // 0E 0172
        gbc.setState(0x3f51, 0xa7a4, 0xb900, 0xf39a, 0x584f, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x3f51, { 0xe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa7a4);
        EXPECT(gbc.pc(), 0x3f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0173
        gbc.setState(0x9710, 0x60ce, 0x3b00, 0xd7e3, 0x3a9d, 0x867c, 0x0, 0x0);
        gbc.writeMem(0x9710, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x60ce);
        EXPECT(gbc.pc(), 0x9712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9710), 0xe);
        EXPECT(gbc.readMem(0x9711), 0x6e);
        // 0E 0174
        gbc.setState(0xa07a, 0xd619, 0x1dd0, 0x9a5, 0x1bcc, 0x4e88, 0x0, 0x0);
        gbc.writeMem(0xa07a, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd619);
        EXPECT(gbc.pc(), 0xa07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07a), 0xe);
        EXPECT(gbc.readMem(0xa07b), 0xc1);
        // 0E 0176
        gbc.setState(0x91cb, 0x2d83, 0x2d0, 0x75f7, 0xb903, 0x72c5, 0x0, 0x1);
        gbc.writeMem(0x91cb, { 0xe, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2d83);
        EXPECT(gbc.pc(), 0x91cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cb), 0xe);
        EXPECT(gbc.readMem(0x91cc), 0x70);
        // 0E 0177
        gbc.setState(0x829, 0x8256, 0x9b50, 0x1d70, 0x20e3, 0x2b6b, 0x1, 0x1);
        gbc.writeMem(0x829, { 0xe, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8256);
        EXPECT(gbc.pc(), 0x82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0178
        gbc.setState(0xc334, 0x419c, 0x15f0, 0x43b3, 0x2ba5, 0x637, 0x0, 0x1);
        gbc.writeMem(0xc334, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x419c);
        EXPECT(gbc.pc(), 0xc336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc334), 0xe);
        EXPECT(gbc.readMem(0xc335), 0xd1);
        // 0E 0179
        gbc.setState(0xb20d, 0xfbe2, 0x830, 0x13b0, 0xb5b5, 0x7369, 0x0, 0x1);
        gbc.writeMem(0xb20d, { 0xe, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfbe2);
        EXPECT(gbc.pc(), 0xb20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20d), 0xe);
        EXPECT(gbc.readMem(0xb20e), 0xb9);
        // 0E 017A
        gbc.setState(0x63f3, 0x1766, 0x9340, 0xf836, 0xb83a, 0xc471, 0x0, 0x1);
        gbc.writeMem(0x63f3, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1766);
        EXPECT(gbc.pc(), 0x63f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 017B
        gbc.setState(0xcf4, 0xc622, 0x5680, 0xb81d, 0x3c66, 0xf108, 0x1, 0x0);
        gbc.writeMem(0xcf4, { 0xe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc622);
        EXPECT(gbc.pc(), 0xcf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 017C
        gbc.setState(0x8c9a, 0x2e74, 0x1820, 0x8cc1, 0xd77e, 0xdd78, 0x1, 0x1);
        gbc.writeMem(0x8c9a, { 0xe, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2e74);
        EXPECT(gbc.pc(), 0x8c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0xe);
        EXPECT(gbc.readMem(0x8c9b), 0x3d);
        // 0E 017D
        gbc.setState(0x3989, 0x8d69, 0xb530, 0x6acb, 0x613, 0x4d4, 0x1, 0x0);
        gbc.writeMem(0x3989, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8d69);
        EXPECT(gbc.pc(), 0x398b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 017E
        gbc.setState(0xcb78, 0xdc78, 0x9f90, 0xacc2, 0x518e, 0x7182, 0x1, 0x1);
        gbc.writeMem(0xcb78, { 0xe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdc78);
        EXPECT(gbc.pc(), 0xcb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb78), 0xe);
        EXPECT(gbc.readMem(0xcb79), 0x97);
        // 0E 017F
        gbc.setState(0x3bef, 0x861d, 0xb330, 0xe5b5, 0x276a, 0xe3a4, 0x1, 0x0);
        gbc.writeMem(0x3bef, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x861d);
        EXPECT(gbc.pc(), 0x3bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0180
        gbc.setState(0x17f4, 0x64d1, 0xe50, 0xdd7e, 0x16a8, 0xa078, 0x0, 0x0);
        gbc.writeMem(0x17f4, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0x17f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0181
        gbc.setState(0x112a, 0x3549, 0xadb0, 0xf9af, 0xafe9, 0x5bf8, 0x1, 0x0);
        gbc.writeMem(0x112a, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0x112c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0182
        gbc.setState(0xd797, 0xa6de, 0x7ab0, 0x410d, 0x8b1b, 0x4b44, 0x1, 0x1);
        gbc.writeMem(0xd797, { 0xe, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa6de);
        EXPECT(gbc.pc(), 0xd799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd797), 0xe);
        EXPECT(gbc.readMem(0xd798), 0x6a);
        // 0E 0183
        gbc.setState(0x81e9, 0xcefa, 0x2ae0, 0x638b, 0x5d1d, 0xb3da, 0x1, 0x1);
        gbc.writeMem(0x81e9, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e9), 0xe);
        EXPECT(gbc.readMem(0x81ea), 0xc8);
        // 0E 0184
        gbc.setState(0xa63f, 0x37f2, 0xa1c0, 0x498d, 0x3680, 0x9bce, 0x0, 0x0);
        gbc.writeMem(0xa63f, { 0xe, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0xa641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63f), 0xe);
        EXPECT(gbc.readMem(0xa640), 0x5d);
        // 0E 0185
        gbc.setState(0x2ee8, 0x8f29, 0x6e50, 0x9692, 0x4c46, 0x9741, 0x1, 0x1);
        gbc.writeMem(0x2ee8, { 0xe, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8f29);
        EXPECT(gbc.pc(), 0x2eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0186
        gbc.setState(0x17e0, 0x57fe, 0x8b70, 0x1866, 0xba36, 0x19b6, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xe, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x57fe);
        EXPECT(gbc.pc(), 0x17e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0187
        gbc.setState(0x13b6, 0x52be, 0x1b50, 0x7a8f, 0xdf4d, 0x66d4, 0x0, 0x1);
        gbc.writeMem(0x13b6, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x52be);
        EXPECT(gbc.pc(), 0x13b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0188
        gbc.setState(0xa0ca, 0x3ffb, 0x4450, 0xbc15, 0x85e0, 0xb6, 0x1, 0x0);
        gbc.writeMem(0xa0ca, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3ffb);
        EXPECT(gbc.pc(), 0xa0cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ca), 0xe);
        EXPECT(gbc.readMem(0xa0cb), 0xe9);
        // 0E 0189
        gbc.setState(0x699d, 0xe631, 0xd4b0, 0xe99f, 0xe517, 0x9d4f, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe631);
        EXPECT(gbc.pc(), 0x699f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 018A
        gbc.setState(0xcdd1, 0xc136, 0x65b0, 0x513, 0xb359, 0xfa5, 0x1, 0x1);
        gbc.writeMem(0xcdd1, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc136);
        EXPECT(gbc.pc(), 0xcdd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd1), 0xe);
        EXPECT(gbc.readMem(0xcdd2), 0x64);
        // 0E 018B
        gbc.setState(0x7daf, 0x70c7, 0xbe00, 0x5879, 0xe032, 0xfcca, 0x1, 0x1);
        gbc.writeMem(0x7daf, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x70c7);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 018C
        gbc.setState(0x5ca0, 0xcf9a, 0xaca0, 0xb934, 0x18c, 0x9432, 0x0, 0x1);
        gbc.writeMem(0x5ca0, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcf9a);
        EXPECT(gbc.pc(), 0x5ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 018D
        gbc.setState(0xb225, 0xa600, 0x9ec0, 0x1e30, 0xa810, 0x28fa, 0x0, 0x1);
        gbc.writeMem(0xb225, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa600);
        EXPECT(gbc.pc(), 0xb227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb225), 0xe);
        EXPECT(gbc.readMem(0xb226), 0xad);
        // 0E 018E
        gbc.setState(0xe473, 0xcc4c, 0x3800, 0xcb7d, 0xf5e6, 0x6de3, 0x1, 0x0);
        gbc.writeMem(0xe473, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcc4c);
        EXPECT(gbc.pc(), 0xe475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe473), 0xe);
        EXPECT(gbc.readMem(0xe474), 0xa6);
        // 0E 018F
        gbc.setState(0xeb12, 0x5751, 0x3f30, 0x650b, 0x872b, 0xe8cd, 0x0, 0x0);
        gbc.writeMem(0xeb12, { 0xe, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5751);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb12), 0xe);
        EXPECT(gbc.readMem(0xeb13), 0x8f);
        // 0E 0190
        gbc.setState(0x8d66, 0x5d95, 0x57d0, 0x2651, 0x615b, 0x1d, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0xe, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0x8d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d66), 0xe);
        EXPECT(gbc.readMem(0x8d67), 0x8f);
        // 0E 0191
        gbc.setState(0xbbbc, 0x80a8, 0xecb0, 0x6e85, 0x65fa, 0x3a5, 0x0, 0x0);
        gbc.writeMem(0xbbbc, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x80a8);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbc), 0xe);
        EXPECT(gbc.readMem(0xbbbd), 0x2b);
        // 0E 0192
        gbc.setState(0x62db, 0xb73e, 0x49b0, 0x5706, 0x37c8, 0x9d9c, 0x0, 0x1);
        gbc.writeMem(0x62db, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb73e);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0193
        gbc.setState(0x84ed, 0x7898, 0xf360, 0xad50, 0x6581, 0xb9c1, 0x1, 0x0);
        gbc.writeMem(0x84ed, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7898);
        EXPECT(gbc.pc(), 0x84ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ed), 0xe);
        EXPECT(gbc.readMem(0x84ee), 0xd4);
        // 0E 0194
        gbc.setState(0x5f1e, 0xa3a2, 0xda40, 0xb5f6, 0x437c, 0xfcdb, 0x1, 0x0);
        gbc.writeMem(0x5f1e, { 0xe, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa3a2);
        EXPECT(gbc.pc(), 0x5f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0195
        gbc.setState(0x8e44, 0x5217, 0x4e60, 0x8e73, 0x93a4, 0x7100, 0x0, 0x1);
        gbc.writeMem(0x8e44, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5217);
        EXPECT(gbc.pc(), 0x8e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e44), 0xe);
        EXPECT(gbc.readMem(0x8e45), 0xf1);
        // 0E 0196
        gbc.setState(0x72dd, 0xcabf, 0xc9b0, 0x59a0, 0x5b77, 0xa298, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xe, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcabf);
        EXPECT(gbc.pc(), 0x72df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0197
        gbc.setState(0xb519, 0xe337, 0xd1c0, 0x551c, 0xec50, 0x386c, 0x1, 0x1);
        gbc.writeMem(0xb519, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe337);
        EXPECT(gbc.pc(), 0xb51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb519), 0xe);
        EXPECT(gbc.readMem(0xb51a), 0x38);
        // 0E 0198
        gbc.setState(0xb5fe, 0x26c2, 0xbea0, 0xc610, 0x97a2, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0xb5fe, { 0xe, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x26c2);
        EXPECT(gbc.pc(), 0xb600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fe), 0xe);
        EXPECT(gbc.readMem(0xb5ff), 0x8e);
        // 0E 0199
        gbc.setState(0x247e, 0x92b4, 0x5d90, 0x42f8, 0xfb69, 0x4228, 0x0, 0x1);
        gbc.writeMem(0x247e, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x92b4);
        EXPECT(gbc.pc(), 0x2480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 019A
        gbc.setState(0x193d, 0xe706, 0x37a0, 0xeff6, 0x5303, 0x8791, 0x1, 0x0);
        gbc.writeMem(0x193d, { 0xe, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe706);
        EXPECT(gbc.pc(), 0x193f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 019B
        gbc.setState(0x50b0, 0xec54, 0x19b0, 0x9ada, 0x23db, 0x6062, 0x1, 0x0);
        gbc.writeMem(0x50b0, { 0xe, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xec54);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 019C
        gbc.setState(0x6b23, 0x1f84, 0xb0d0, 0x860, 0x4c77, 0x4a85, 0x1, 0x1);
        gbc.writeMem(0x6b23, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x6b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 019D
        gbc.setState(0x38ad, 0xb88a, 0xc5c0, 0x5a49, 0xefab, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0x38ad, { 0xe, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb88a);
        EXPECT(gbc.pc(), 0x38af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 019E
        gbc.setState(0x42ae, 0xd27c, 0x96f0, 0x9edf, 0x6999, 0x4270, 0x1, 0x1);
        gbc.writeMem(0x42ae, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0x42b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 019F
        gbc.setState(0x2187, 0xad15, 0xf660, 0x30f1, 0x1ba8, 0x5bd2, 0x1, 0x0);
        gbc.writeMem(0x2187, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xad15);
        EXPECT(gbc.pc(), 0x2189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01A0
        gbc.setState(0xce02, 0x91ff, 0x8500, 0x6295, 0xa85, 0xe83, 0x1, 0x1);
        gbc.writeMem(0xce02, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x91ff);
        EXPECT(gbc.pc(), 0xce04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce02), 0xe);
        EXPECT(gbc.readMem(0xce03), 0xa6);
        // 0E 01A2
        gbc.setState(0xc40a, 0x2692, 0xe800, 0x67d6, 0xf23e, 0xbb9, 0x0, 0x0);
        gbc.writeMem(0xc40a, { 0xe, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2692);
        EXPECT(gbc.pc(), 0xc40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc40a), 0xe);
        EXPECT(gbc.readMem(0xc40b), 0x70);
        // 0E 01A3
        gbc.setState(0xc127, 0xe7db, 0xbca0, 0xd7bd, 0x6cf2, 0x3a9e, 0x1, 0x0);
        gbc.writeMem(0xc127, { 0xe, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe7db);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc127), 0xe);
        EXPECT(gbc.readMem(0xc128), 0xa0);
        // 0E 01A4
        gbc.setState(0x5a13, 0x1134, 0xb8a0, 0x4a03, 0xdf20, 0xd9af, 0x1, 0x1);
        gbc.writeMem(0x5a13, { 0xe, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1134);
        EXPECT(gbc.pc(), 0x5a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01A5
        gbc.setState(0x4499, 0xe7, 0xe4c0, 0xf92c, 0x550d, 0x473e, 0x0, 0x1);
        gbc.writeMem(0x4499, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe7);
        EXPECT(gbc.pc(), 0x449b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01A6
        gbc.setState(0x8812, 0x77b6, 0xc300, 0xb18, 0xef20, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0x8812, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x77b6);
        EXPECT(gbc.pc(), 0x8814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8812), 0xe);
        EXPECT(gbc.readMem(0x8813), 0x36);
        // 0E 01A7
        gbc.setState(0xbb44, 0x5126, 0x9860, 0xce75, 0x1013, 0x8418, 0x0, 0x0);
        gbc.writeMem(0xbb44, { 0xe, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5126);
        EXPECT(gbc.pc(), 0xbb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb44), 0xe);
        EXPECT(gbc.readMem(0xbb45), 0x8e);
        // 0E 01A8
        gbc.setState(0x9964, 0xa714, 0x59d0, 0x6025, 0xcea7, 0x9835, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0xe, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa714);
        EXPECT(gbc.pc(), 0x9966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9964), 0xe);
        EXPECT(gbc.readMem(0x9965), 0x86);
        // 0E 01A9
        gbc.setState(0x3006, 0x4b0f, 0x11b0, 0x70a2, 0x97d5, 0xb1f7, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xe, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4b0f);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01AA
        gbc.setState(0x86cf, 0xd8f, 0x6bc0, 0xbf07, 0xd7ab, 0x9b42, 0x0, 0x1);
        gbc.writeMem(0x86cf, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd8f);
        EXPECT(gbc.pc(), 0x86d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86cf), 0xe);
        EXPECT(gbc.readMem(0x86d0), 0x1e);
        // 0E 01AB
        gbc.setState(0xe2e1, 0x9049, 0x8fa0, 0x7bd1, 0xa18d, 0x75b6, 0x0, 0x1);
        gbc.writeMem(0xe2e1, { 0xe, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9049);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xe);
        EXPECT(gbc.readMem(0xe2e2), 0xca);
        // 0E 01AC
        gbc.setState(0xe468, 0x86b2, 0xe260, 0xa7f3, 0xb9b7, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0xe468, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x86b2);
        EXPECT(gbc.pc(), 0xe46a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe468), 0xe);
        EXPECT(gbc.readMem(0xe469), 0x5f);
        // 0E 01AD
        gbc.setState(0xdb60, 0x5ebf, 0x6050, 0x775c, 0xfe0f, 0x25cb, 0x1, 0x1);
        gbc.writeMem(0xdb60, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5ebf);
        EXPECT(gbc.pc(), 0xdb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb60), 0xe);
        EXPECT(gbc.readMem(0xdb61), 0xff);
        // 0E 01AE
        gbc.setState(0x8299, 0xdbf9, 0x5f00, 0x8d0b, 0x18a6, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x8299, { 0xe, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdbf9);
        EXPECT(gbc.pc(), 0x829b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8299), 0xe);
        EXPECT(gbc.readMem(0x829a), 0xcb);
        // 0E 01AF
        gbc.setState(0xbfec, 0x85d0, 0xb590, 0x3649, 0x4221, 0xef41, 0x0, 0x0);
        gbc.writeMem(0xbfec, { 0xe, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x85d0);
        EXPECT(gbc.pc(), 0xbfee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfec), 0xe);
        EXPECT(gbc.readMem(0xbfed), 0x93);
        // 0E 01B0
        gbc.setState(0xb5e7, 0x68ac, 0xd830, 0x5a10, 0xc5f8, 0x170, 0x0, 0x1);
        gbc.writeMem(0xb5e7, { 0xe, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x68ac);
        EXPECT(gbc.pc(), 0xb5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e7), 0xe);
        EXPECT(gbc.readMem(0xb5e8), 0x27);
        // 0E 01B1
        gbc.setState(0xc2e7, 0xdb4c, 0x4bf0, 0xc0a, 0xade, 0x7b79, 0x0, 0x1);
        gbc.writeMem(0xc2e7, { 0xe, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdb4c);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e7), 0xe);
        EXPECT(gbc.readMem(0xc2e8), 0x62);
        // 0E 01B2
        gbc.setState(0x31e4, 0xe660, 0x4b70, 0x8f96, 0x803b, 0xcad9, 0x1, 0x0);
        gbc.writeMem(0x31e4, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe660);
        EXPECT(gbc.pc(), 0x31e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01B3
        gbc.setState(0x6ec5, 0x5302, 0xe180, 0xf50f, 0x9cb7, 0x4998, 0x1, 0x0);
        gbc.writeMem(0x6ec5, { 0xe, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5302);
        EXPECT(gbc.pc(), 0x6ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01B4
        gbc.setState(0x84df, 0xf848, 0xb650, 0x5105, 0xb3ab, 0x60fe, 0x0, 0x1);
        gbc.writeMem(0x84df, { 0xe, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf848);
        EXPECT(gbc.pc(), 0x84e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84df), 0xe);
        EXPECT(gbc.readMem(0x84e0), 0x35);
        // 0E 01B5
        gbc.setState(0x3427, 0x4864, 0x3fe0, 0xfeef, 0x851a, 0x6609, 0x0, 0x1);
        gbc.writeMem(0x3427, { 0xe, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4864);
        EXPECT(gbc.pc(), 0x3429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01B6
        gbc.setState(0x1751, 0xdf40, 0x3980, 0xad55, 0xdcc0, 0x3e69, 0x1, 0x1);
        gbc.writeMem(0x1751, { 0xe, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdf40);
        EXPECT(gbc.pc(), 0x1753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01B8
        gbc.setState(0x796b, 0x2ddb, 0xf350, 0xcbc4, 0x68cc, 0x6009, 0x0, 0x1);
        gbc.writeMem(0x796b, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2ddb);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01B9
        gbc.setState(0xd169, 0x5d96, 0x1870, 0x1eb3, 0xf5fe, 0x7723, 0x0, 0x1);
        gbc.writeMem(0xd169, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0xd16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd169), 0xe);
        EXPECT(gbc.readMem(0xd16a), 0xd3);
        // 0E 01BA
        gbc.setState(0x7152, 0xc623, 0xaf00, 0xe8c3, 0x216c, 0xa630, 0x0, 0x1);
        gbc.writeMem(0x7152, { 0xe, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc623);
        EXPECT(gbc.pc(), 0x7154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01BB
        gbc.setState(0x1793, 0xa1c0, 0xf290, 0xcf37, 0x7763, 0x724d, 0x1, 0x0);
        gbc.writeMem(0x1793, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa1c0);
        EXPECT(gbc.pc(), 0x1795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01BC
        gbc.setState(0xa7ad, 0x82de, 0x3b10, 0xa913, 0x14a3, 0x5254, 0x0, 0x1);
        gbc.writeMem(0xa7ad, { 0xe, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82de);
        EXPECT(gbc.pc(), 0xa7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ad), 0xe);
        EXPECT(gbc.readMem(0xa7ae), 0xae);
        // 0E 01BD
        gbc.setState(0xca8f, 0xb265, 0x6a10, 0x769c, 0x326c, 0x1dcf, 0x0, 0x1);
        gbc.writeMem(0xca8f, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb265);
        EXPECT(gbc.pc(), 0xca91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0xe);
        EXPECT(gbc.readMem(0xca90), 0x57);
        // 0E 01BF
        gbc.setState(0xcf2b, 0xd44f, 0xa880, 0x73fe, 0x17cc, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd44f);
        EXPECT(gbc.pc(), 0xcf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2b), 0xe);
        EXPECT(gbc.readMem(0xcf2c), 0x49);
        // 0E 01C0
        gbc.setState(0x1ae2, 0xbebf, 0xf930, 0xe7ff, 0x33f3, 0x398f, 0x0, 0x1);
        gbc.writeMem(0x1ae2, { 0xe, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbebf);
        EXPECT(gbc.pc(), 0x1ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01C1
        gbc.setState(0x3376, 0xe31b, 0x7060, 0xfa0e, 0x2f07, 0xf710, 0x1, 0x0);
        gbc.writeMem(0x3376, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x3378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01C2
        gbc.setState(0x7872, 0x8078, 0x29e0, 0x1c6a, 0xd9dc, 0xdeb7, 0x0, 0x0);
        gbc.writeMem(0x7872, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8078);
        EXPECT(gbc.pc(), 0x7874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01C3
        gbc.setState(0xd8e4, 0x2241, 0xcf30, 0xa25d, 0x44c5, 0x2719, 0x1, 0x1);
        gbc.writeMem(0xd8e4, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2241);
        EXPECT(gbc.pc(), 0xd8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e4), 0xe);
        EXPECT(gbc.readMem(0xd8e5), 0xd0);
        // 0E 01C4
        gbc.setState(0x5478, 0x80e2, 0x49b0, 0x6a8b, 0xe22c, 0xf9a, 0x0, 0x1);
        gbc.writeMem(0x5478, { 0xe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x80e2);
        EXPECT(gbc.pc(), 0x547a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01C5
        gbc.setState(0xaf7a, 0x7a94, 0xf6a0, 0xaf68, 0x13a4, 0x68e6, 0x1, 0x0);
        gbc.writeMem(0xaf7a, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7a94);
        EXPECT(gbc.pc(), 0xaf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7a), 0xe);
        EXPECT(gbc.readMem(0xaf7b), 0x74);
        // 0E 01C6
        gbc.setState(0x9324, 0x5cb4, 0x35c0, 0x7930, 0xf572, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0x9324, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5cb4);
        EXPECT(gbc.pc(), 0x9326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9324), 0xe);
        EXPECT(gbc.readMem(0x9325), 0x6c);
        // 0E 01C7
        gbc.setState(0xc473, 0x908c, 0x21e0, 0x1019, 0x4dde, 0x5f6, 0x0, 0x1);
        gbc.writeMem(0xc473, { 0xe, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x908c);
        EXPECT(gbc.pc(), 0xc475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc473), 0xe);
        EXPECT(gbc.readMem(0xc474), 0xcc);
        // 0E 01C8
        gbc.setState(0x3401, 0x1b1a, 0x37d0, 0xa2f3, 0x71d9, 0xd16a, 0x0, 0x1);
        gbc.writeMem(0x3401, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1b1a);
        EXPECT(gbc.pc(), 0x3403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01C9
        gbc.setState(0xe90, 0x9e4a, 0x6110, 0x1899, 0xe1d, 0x561d, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0xe, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9e4a);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01CB
        gbc.setState(0x4b48, 0xa2a6, 0x97e0, 0xebd1, 0x122a, 0xc245, 0x1, 0x1);
        gbc.writeMem(0x4b48, { 0xe, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa2a6);
        EXPECT(gbc.pc(), 0x4b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01CC
        gbc.setState(0x3759, 0xc21e, 0x2a90, 0x836a, 0x1f0b, 0x9731, 0x1, 0x1);
        gbc.writeMem(0x3759, { 0xe, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc21e);
        EXPECT(gbc.pc(), 0x375b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01CD
        gbc.setState(0xd549, 0x4591, 0x7b30, 0x4d55, 0xa881, 0xe6f0, 0x0, 0x0);
        gbc.writeMem(0xd549, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4591);
        EXPECT(gbc.pc(), 0xd54b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd549), 0xe);
        EXPECT(gbc.readMem(0xd54a), 0xf6);
        // 0E 01CE
        gbc.setState(0xc58f, 0xb627, 0x5e30, 0x76d9, 0xb23, 0xf323, 0x1, 0x1);
        gbc.writeMem(0xc58f, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0xc591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58f), 0xe);
        EXPECT(gbc.readMem(0xc590), 0x6e);
        // 0E 01CF
        gbc.setState(0x62a3, 0x94d7, 0x830, 0x7744, 0xaa, 0xae49, 0x0, 0x1);
        gbc.writeMem(0x62a3, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x94d7);
        EXPECT(gbc.pc(), 0x62a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01D0
        gbc.setState(0x8b3b, 0x6121, 0x3650, 0x90f9, 0xebc2, 0x9b6d, 0x0, 0x0);
        gbc.writeMem(0x8b3b, { 0xe, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6121);
        EXPECT(gbc.pc(), 0x8b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0xe);
        EXPECT(gbc.readMem(0x8b3c), 0x0);
        // 0E 01D2
        gbc.setState(0x26c7, 0xefe6, 0x7ae0, 0x842f, 0xcc0f, 0xa8c6, 0x0, 0x1);
        gbc.writeMem(0x26c7, { 0xe, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xefe6);
        EXPECT(gbc.pc(), 0x26c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01D3
        gbc.setState(0xdfe4, 0x857e, 0x6150, 0xa410, 0x52a4, 0xc6aa, 0x0, 0x0);
        gbc.writeMem(0xdfe4, { 0xe, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x857e);
        EXPECT(gbc.pc(), 0xdfe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe4), 0xe);
        EXPECT(gbc.readMem(0xdfe5), 0xbf);
        // 0E 01D4
        gbc.setState(0x288e, 0xe9d1, 0x70a0, 0x1a9a, 0x21fe, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe9d1);
        EXPECT(gbc.pc(), 0x2890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01D5
        gbc.setState(0x5e7, 0x5f5a, 0xe8c0, 0x2eb2, 0x7b59, 0x6e94, 0x0, 0x1);
        gbc.writeMem(0x5e7, { 0xe, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5f5a);
        EXPECT(gbc.pc(), 0x5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01D6
        gbc.setState(0x13d, 0x2898, 0xfa00, 0x39fb, 0x807e, 0x2647, 0x1, 0x0);
        gbc.writeMem(0x13d, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2898);
        EXPECT(gbc.pc(), 0x13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01D7
        gbc.setState(0xe, 0xa3bf, 0x3ea0, 0xd3b7, 0x3e10, 0x8548, 0x0, 0x1);
        gbc.writeMem(0xe, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa3bf);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01D8
        gbc.setState(0x6b4, 0x8de3, 0xb610, 0x2548, 0xbe18, 0xf797, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xe, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8de3);
        EXPECT(gbc.pc(), 0x6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01D9
        gbc.setState(0x26dd, 0x7133, 0x69c0, 0x6544, 0x5797, 0xac2d, 0x0, 0x0);
        gbc.writeMem(0x26dd, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7133);
        EXPECT(gbc.pc(), 0x26df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01DA
        gbc.setState(0xa46, 0x15d5, 0x2010, 0x36a6, 0xd400, 0x7296, 0x1, 0x0);
        gbc.writeMem(0xa46, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0xa48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01DB
        gbc.setState(0x71d2, 0x8b0f, 0x9980, 0x326b, 0x7fc1, 0xa7a7, 0x0, 0x0);
        gbc.writeMem(0x71d2, { 0xe, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8b0f);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01DC
        gbc.setState(0xd351, 0xbe2b, 0xb770, 0x3e71, 0xc327, 0xd81e, 0x1, 0x0);
        gbc.writeMem(0xd351, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0xd353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd351), 0xe);
        EXPECT(gbc.readMem(0xd352), 0xd5);
        // 0E 01DD
        gbc.setState(0x5b9a, 0x5c, 0x4880, 0xf495, 0xbff, 0x78ef, 0x0, 0x1);
        gbc.writeMem(0x5b9a, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5c);
        EXPECT(gbc.pc(), 0x5b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01DE
        gbc.setState(0xd696, 0xbf73, 0x6b90, 0x9592, 0x42f, 0xf994, 0x0, 0x1);
        gbc.writeMem(0xd696, { 0xe, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbf73);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0xe);
        EXPECT(gbc.readMem(0xd697), 0x8);
        // 0E 01DF
        gbc.setState(0x5547, 0x546e, 0x6090, 0x150c, 0xfff6, 0xfc7f, 0x0, 0x1);
        gbc.writeMem(0x5547, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x546e);
        EXPECT(gbc.pc(), 0x5549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01E0
        gbc.setState(0x9039, 0x2b36, 0x2040, 0x4a50, 0x5ed1, 0xf4a8, 0x0, 0x0);
        gbc.writeMem(0x9039, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0x903b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9039), 0xe);
        EXPECT(gbc.readMem(0x903a), 0x25);
        // 0E 01E1
        gbc.setState(0x14ab, 0xfdb4, 0xde40, 0xb7b8, 0x7ea2, 0xb392, 0x1, 0x0);
        gbc.writeMem(0x14ab, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfdb4);
        EXPECT(gbc.pc(), 0x14ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01E2
        gbc.setState(0x62d5, 0xf8a1, 0x73f0, 0x3527, 0x3503, 0x322b, 0x1, 0x1);
        gbc.writeMem(0x62d5, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf8a1);
        EXPECT(gbc.pc(), 0x62d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01E3
        gbc.setState(0x33b1, 0x4579, 0x5be0, 0xd8e5, 0x732b, 0x805a, 0x0, 0x1);
        gbc.writeMem(0x33b1, { 0xe, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4579);
        EXPECT(gbc.pc(), 0x33b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01E5
        gbc.setState(0x9497, 0x3b04, 0x7940, 0xdf1e, 0xa548, 0xb848, 0x0, 0x1);
        gbc.writeMem(0x9497, { 0xe, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0x9499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9497), 0xe);
        EXPECT(gbc.readMem(0x9498), 0x28);
        // 0E 01E6
        gbc.setState(0xc0df, 0x3c79, 0xf1d0, 0xd174, 0x5493, 0xdc5f, 0x1, 0x1);
        gbc.writeMem(0xc0df, { 0xe, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3c79);
        EXPECT(gbc.pc(), 0xc0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0df), 0xe);
        EXPECT(gbc.readMem(0xc0e0), 0x43);
        // 0E 01E7
        gbc.setState(0xbd72, 0xa922, 0xe030, 0xef93, 0x5a5e, 0x101a, 0x1, 0x0);
        gbc.writeMem(0xbd72, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0xbd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd72), 0xe);
        EXPECT(gbc.readMem(0xbd73), 0x57);
        // 0E 01E8
        gbc.setState(0x8420, 0x37d, 0x9970, 0x7f40, 0x8682, 0x1295, 0x0, 0x0);
        gbc.writeMem(0x8420, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x37d);
        EXPECT(gbc.pc(), 0x8422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8420), 0xe);
        EXPECT(gbc.readMem(0x8421), 0x8b);
        // 0E 01E9
        gbc.setState(0xe6da, 0x910c, 0x3ef0, 0xbafa, 0x7339, 0x5fec, 0x1, 0x1);
        gbc.writeMem(0xe6da, { 0xe, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x910c);
        EXPECT(gbc.pc(), 0xe6dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6da), 0xe);
        EXPECT(gbc.readMem(0xe6db), 0x7d);
        // 0E 01EA
        gbc.setState(0xafdc, 0x7c38, 0x2bf0, 0x4177, 0xf4e0, 0x5d1b, 0x1, 0x1);
        gbc.writeMem(0xafdc, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7c38);
        EXPECT(gbc.pc(), 0xafde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdc), 0xe);
        EXPECT(gbc.readMem(0xafdd), 0xd3);
        // 0E 01EB
        gbc.setState(0x5a6, 0x2313, 0x59e0, 0x51b5, 0x6531, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x5a6, { 0xe, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2313);
        EXPECT(gbc.pc(), 0x5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01EC
        gbc.setState(0x7962, 0xd6dd, 0xfb0, 0xb3e1, 0x3033, 0x3395, 0x1, 0x1);
        gbc.writeMem(0x7962, { 0xe, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd6dd);
        EXPECT(gbc.pc(), 0x7964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01ED
        gbc.setState(0x8c75, 0x3ee3, 0xdd80, 0xabad, 0x16cb, 0xb505, 0x0, 0x0);
        gbc.writeMem(0x8c75, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3ee3);
        EXPECT(gbc.pc(), 0x8c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c75), 0xe);
        EXPECT(gbc.readMem(0x8c76), 0xad);
        // 0E 01EE
        gbc.setState(0x23a8, 0x8ee5, 0xe5a0, 0xe678, 0xdada, 0xe47f, 0x0, 0x0);
        gbc.writeMem(0x23a8, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8ee5);
        EXPECT(gbc.pc(), 0x23aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 01EF
        gbc.setState(0x5b57, 0x70ad, 0x5d50, 0x8687, 0xd13a, 0x2478, 0x1, 0x0);
        gbc.writeMem(0x5b57, { 0xe, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x70ad);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01F0
        gbc.setState(0xa256, 0x8f77, 0xbd50, 0xa96d, 0x8a7d, 0x60ac, 0x0, 0x0);
        gbc.writeMem(0xa256, { 0xe, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8f77);
        EXPECT(gbc.pc(), 0xa258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa256), 0xe);
        EXPECT(gbc.readMem(0xa257), 0x77);
        // 0E 01F1
        gbc.setState(0x7d60, 0xe2a6, 0x55d0, 0x4e57, 0x84b0, 0xd0e0, 0x0, 0x0);
        gbc.writeMem(0x7d60, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe2a6);
        EXPECT(gbc.pc(), 0x7d62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 01F2
        gbc.setState(0xe8fb, 0x8c99, 0xc210, 0x9c14, 0x8b3, 0x1730, 0x1, 0x1);
        gbc.writeMem(0xe8fb, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0xe8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fb), 0xe);
        EXPECT(gbc.readMem(0xe8fc), 0xe9);
        // 0E 01F3
        gbc.setState(0xb16a, 0xfd19, 0xd700, 0xdc94, 0xc46f, 0x189d, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0xe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfd19);
        EXPECT(gbc.pc(), 0xb16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16a), 0xe);
        EXPECT(gbc.readMem(0xb16b), 0x9c);
        // 0E 01F4
        gbc.setState(0x72c4, 0x652b, 0xe900, 0x617e, 0xb211, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x72c4, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x652b);
        EXPECT(gbc.pc(), 0x72c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01F5
        gbc.setState(0xcc0b, 0x2e40, 0x7f00, 0x9eeb, 0x27dc, 0x6326, 0x1, 0x1);
        gbc.writeMem(0xcc0b, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2e40);
        EXPECT(gbc.pc(), 0xcc0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0b), 0xe);
        EXPECT(gbc.readMem(0xcc0c), 0xe0);
        // 0E 01F6
        gbc.setState(0xc95d, 0x3dc1, 0x4360, 0xc88d, 0x3343, 0xdc55, 0x0, 0x0);
        gbc.writeMem(0xc95d, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0xc95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95d), 0xe);
        EXPECT(gbc.readMem(0xc95e), 0x2b);
        // 0E 01F7
        gbc.setState(0xc5da, 0x6eb2, 0x62e0, 0xd70f, 0x2125, 0xb2aa, 0x1, 0x1);
        gbc.writeMem(0xc5da, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6eb2);
        EXPECT(gbc.pc(), 0xc5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5da), 0xe);
        EXPECT(gbc.readMem(0xc5db), 0x64);
        // 0E 01F8
        gbc.setState(0x68fd, 0x725, 0x87c0, 0x6483, 0x847e, 0x3285, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0xe, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x725);
        EXPECT(gbc.pc(), 0x68ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01F9
        gbc.setState(0x9e57, 0xb9dc, 0x7850, 0x717, 0x2f01, 0x5467, 0x1, 0x0);
        gbc.writeMem(0x9e57, { 0xe, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb9dc);
        EXPECT(gbc.pc(), 0x9e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e57), 0xe);
        EXPECT(gbc.readMem(0x9e58), 0x1);
        // 0E 01FA
        gbc.setState(0x193e, 0x27af, 0x8770, 0x723d, 0xec21, 0xedf9, 0x0, 0x1);
        gbc.writeMem(0x193e, { 0xe, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x27af);
        EXPECT(gbc.pc(), 0x1940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01FB
        gbc.setState(0x56a, 0x49dc, 0x21b0, 0xdb6b, 0xaee7, 0x2345, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xe, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x49dc);
        EXPECT(gbc.pc(), 0x56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01FC
        gbc.setState(0x78e6, 0x695f, 0xdbc0, 0xb12f, 0x385d, 0xa606, 0x1, 0x0);
        gbc.writeMem(0x78e6, { 0xe, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0x78e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 01FD
        gbc.setState(0x23b5, 0xad6e, 0xedf0, 0x4e1f, 0xe886, 0xc69e, 0x1, 0x0);
        gbc.writeMem(0x23b5, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xad6e);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 01FE
        gbc.setState(0x44a1, 0xf905, 0x9a0, 0xc455, 0xa65c, 0xa290, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xe, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf905);
        EXPECT(gbc.pc(), 0x44a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0200
        gbc.setState(0xea55, 0xfdb7, 0x6da0, 0x7efa, 0x2ccb, 0x7f68, 0x0, 0x1);
        gbc.writeMem(0xea55, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xfdb7);
        EXPECT(gbc.pc(), 0xea57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea55), 0xe);
        EXPECT(gbc.readMem(0xea56), 0x2b);
        // 0E 0201
        gbc.setState(0x2db1, 0x386f, 0x1b20, 0xa01f, 0xedb0, 0xae01, 0x1, 0x0);
        gbc.writeMem(0x2db1, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x386f);
        EXPECT(gbc.pc(), 0x2db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0202
        gbc.setState(0x2465, 0x6312, 0x8730, 0xc9f9, 0x45d8, 0x1e25, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0xe, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6312);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0203
        gbc.setState(0x6c64, 0x6d17, 0xa7a0, 0xa434, 0xd7bb, 0x3580, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6d17);
        EXPECT(gbc.pc(), 0x6c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0204
        gbc.setState(0x498f, 0x116f, 0xeb80, 0x6293, 0xbdf9, 0xfc57, 0x0, 0x1);
        gbc.writeMem(0x498f, { 0xe, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x116f);
        EXPECT(gbc.pc(), 0x4991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0205
        gbc.setState(0xef49, 0xd76e, 0x5b80, 0xe9dd, 0x5d7c, 0xfed5, 0x0, 0x1);
        gbc.writeMem(0xef49, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd76e);
        EXPECT(gbc.pc(), 0xef4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef49), 0xe);
        EXPECT(gbc.readMem(0xef4a), 0x5f);
        // 0E 0206
        gbc.setState(0xab73, 0x1a8, 0xee60, 0xddee, 0x1cf0, 0xaf19, 0x0, 0x0);
        gbc.writeMem(0xab73, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1a8);
        EXPECT(gbc.pc(), 0xab75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab73), 0xe);
        EXPECT(gbc.readMem(0xab74), 0x79);
        // 0E 0207
        gbc.setState(0xe626, 0xa290, 0x8cc0, 0xb949, 0xe356, 0x29d, 0x0, 0x1);
        gbc.writeMem(0xe626, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0xe628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe626), 0xe);
        EXPECT(gbc.readMem(0xe627), 0xb1);
        // 0E 0208
        gbc.setState(0x77ad, 0x3db2, 0xb280, 0x1a8f, 0x3c9c, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0x77ad, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3db2);
        EXPECT(gbc.pc(), 0x77af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0209
        gbc.setState(0x72e9, 0x29ad, 0xf1f0, 0xee39, 0xaa85, 0x5402, 0x1, 0x0);
        gbc.writeMem(0x72e9, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x29ad);
        EXPECT(gbc.pc(), 0x72eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 020A
        gbc.setState(0xcbb6, 0x524b, 0x6960, 0x4a7e, 0x452, 0xfffc, 0x0, 0x0);
        gbc.writeMem(0xcbb6, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x524b);
        EXPECT(gbc.pc(), 0xcbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb6), 0xe);
        EXPECT(gbc.readMem(0xcbb7), 0x79);
        // 0E 020B
        gbc.setState(0x917, 0x3158, 0xcd50, 0x39c2, 0xc28b, 0xba8b, 0x0, 0x0);
        gbc.writeMem(0x917, { 0xe, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3158);
        EXPECT(gbc.pc(), 0x919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 020D
        gbc.setState(0x4cab, 0xbaa1, 0x9ce0, 0xeb6d, 0xfe09, 0x4e09, 0x1, 0x1);
        gbc.writeMem(0x4cab, { 0xe, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbaa1);
        EXPECT(gbc.pc(), 0x4cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 020E
        gbc.setState(0x5b66, 0x748b, 0x3ea0, 0x5d30, 0xdac1, 0x3289, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0xe, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x748b);
        EXPECT(gbc.pc(), 0x5b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0210
        gbc.setState(0x3b29, 0x5bfb, 0x9d40, 0xe653, 0xda92, 0x8d7, 0x0, 0x0);
        gbc.writeMem(0x3b29, { 0xe, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5bfb);
        EXPECT(gbc.pc(), 0x3b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0211
        gbc.setState(0x2f75, 0x5597, 0xa290, 0x354e, 0xf619, 0xc7b2, 0x0, 0x1);
        gbc.writeMem(0x2f75, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5597);
        EXPECT(gbc.pc(), 0x2f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0212
        gbc.setState(0xc691, 0xf935, 0xb410, 0xc03e, 0x2bf9, 0xe26, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0xe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf935);
        EXPECT(gbc.pc(), 0xc693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc691), 0xe);
        EXPECT(gbc.readMem(0xc692), 0xda);
        // 0E 0213
        gbc.setState(0x9401, 0x9a3e, 0x7ca0, 0x5881, 0x44bc, 0x5967, 0x0, 0x0);
        gbc.writeMem(0x9401, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9a3e);
        EXPECT(gbc.pc(), 0x9403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9401), 0xe);
        EXPECT(gbc.readMem(0x9402), 0xc8);
        // 0E 0214
        gbc.setState(0x1efe, 0x7c7e, 0x1150, 0x3d96, 0xd410, 0xd728, 0x0, 0x0);
        gbc.writeMem(0x1efe, { 0xe, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7c7e);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0215
        gbc.setState(0x609, 0x5ef1, 0xcba0, 0xb5cf, 0xc89e, 0xf06a, 0x0, 0x1);
        gbc.writeMem(0x609, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5ef1);
        EXPECT(gbc.pc(), 0x60b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0216
        gbc.setState(0x69d7, 0x9f2c, 0x97e0, 0x801d, 0x774, 0x4a6e, 0x0, 0x0);
        gbc.writeMem(0x69d7, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x69d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0217
        gbc.setState(0x97d8, 0x90ff, 0xe390, 0xedd4, 0x3378, 0xecc4, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0xe, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x90ff);
        EXPECT(gbc.pc(), 0x97da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d8), 0xe);
        EXPECT(gbc.readMem(0x97d9), 0x9d);
        // 0E 0218
        gbc.setState(0xaad5, 0x7d88, 0xcf30, 0x42ca, 0x1ef4, 0x2d59, 0x0, 0x1);
        gbc.writeMem(0xaad5, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7d88);
        EXPECT(gbc.pc(), 0xaad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad5), 0xe);
        EXPECT(gbc.readMem(0xaad6), 0xe8);
        // 0E 0219
        gbc.setState(0x97bd, 0xc1cc, 0x2310, 0x22ee, 0xdbc2, 0x3e09, 0x0, 0x1);
        gbc.writeMem(0x97bd, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc1cc);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bd), 0xe);
        EXPECT(gbc.readMem(0x97be), 0x52);
        // 0E 021A
        gbc.setState(0x95e7, 0xf0f0, 0x6020, 0xf107, 0x3705, 0x9821, 0x1, 0x1);
        gbc.writeMem(0x95e7, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf0f0);
        EXPECT(gbc.pc(), 0x95e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e7), 0xe);
        EXPECT(gbc.readMem(0x95e8), 0xe9);
        // 0E 021B
        gbc.setState(0xd59d, 0xe60c, 0x49d0, 0x3ace, 0x6ad9, 0x71a, 0x1, 0x0);
        gbc.writeMem(0xd59d, { 0xe, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe60c);
        EXPECT(gbc.pc(), 0xd59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59d), 0xe);
        EXPECT(gbc.readMem(0xd59e), 0xaf);
        // 0E 021C
        gbc.setState(0x45df, 0x552a, 0xc300, 0x87ab, 0xeaf4, 0x90d9, 0x0, 0x1);
        gbc.writeMem(0x45df, { 0xe, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x552a);
        EXPECT(gbc.pc(), 0x45e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 021D
        gbc.setState(0xace2, 0x9292, 0x42d0, 0x7c4f, 0x474b, 0x3cdf, 0x0, 0x0);
        gbc.writeMem(0xace2, { 0xe, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9292);
        EXPECT(gbc.pc(), 0xace4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace2), 0xe);
        EXPECT(gbc.readMem(0xace3), 0x81);
        // 0E 021E
        gbc.setState(0x9e46, 0xb342, 0xea50, 0xf994, 0xd252, 0xfe07, 0x1, 0x0);
        gbc.writeMem(0x9e46, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb342);
        EXPECT(gbc.pc(), 0x9e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e46), 0xe);
        EXPECT(gbc.readMem(0x9e47), 0xc5);
        // 0E 021F
        gbc.setState(0xa643, 0x265, 0x5520, 0xff9d, 0x86df, 0xf501, 0x1, 0x1);
        gbc.writeMem(0xa643, { 0xe, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x265);
        EXPECT(gbc.pc(), 0xa645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa643), 0xe);
        EXPECT(gbc.readMem(0xa644), 0x46);
        // 0E 0220
        gbc.setState(0xdca9, 0xd3a6, 0xb7d0, 0x2741, 0x7168, 0xd06f, 0x1, 0x1);
        gbc.writeMem(0xdca9, { 0xe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd3a6);
        EXPECT(gbc.pc(), 0xdcab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca9), 0xe);
        EXPECT(gbc.readMem(0xdcaa), 0x24);
        // 0E 0221
        gbc.setState(0x298e, 0x657, 0x32e0, 0x8b1d, 0xc65f, 0xa6c, 0x0, 0x1);
        gbc.writeMem(0x298e, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x657);
        EXPECT(gbc.pc(), 0x2990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0222
        gbc.setState(0x95cf, 0xd91d, 0xf870, 0xc97e, 0xb369, 0x9dfa, 0x1, 0x0);
        gbc.writeMem(0x95cf, { 0xe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd91d);
        EXPECT(gbc.pc(), 0x95d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cf), 0xe);
        EXPECT(gbc.readMem(0x95d0), 0xda);
        // 0E 0223
        gbc.setState(0x3352, 0x6572, 0x20e0, 0x4610, 0x6db3, 0x6a6d, 0x1, 0x1);
        gbc.writeMem(0x3352, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6572);
        EXPECT(gbc.pc(), 0x3354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0224
        gbc.setState(0x48e9, 0xcfd4, 0xb260, 0x1782, 0x703e, 0x7e7e, 0x0, 0x0);
        gbc.writeMem(0x48e9, { 0xe, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcfd4);
        EXPECT(gbc.pc(), 0x48eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0225
        gbc.setState(0x4550, 0x6ea0, 0xc760, 0x4e6f, 0xf44, 0x5b1e, 0x0, 0x0);
        gbc.writeMem(0x4550, { 0xe, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6ea0);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0226
        gbc.setState(0x3756, 0xc7d7, 0xb6d0, 0xa712, 0x63fd, 0xd00, 0x0, 0x1);
        gbc.writeMem(0x3756, { 0xe, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0x3758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0227
        gbc.setState(0xd621, 0x8a5e, 0x42f0, 0xfb10, 0xcfe2, 0x474b, 0x0, 0x1);
        gbc.writeMem(0xd621, { 0xe, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8a5e);
        EXPECT(gbc.pc(), 0xd623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd621), 0xe);
        EXPECT(gbc.readMem(0xd622), 0xe8);
        // 0E 0228
        gbc.setState(0x73aa, 0xb01, 0x2a50, 0xa169, 0x5c9e, 0x2a16, 0x0, 0x1);
        gbc.writeMem(0x73aa, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb01);
        EXPECT(gbc.pc(), 0x73ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0229
        gbc.setState(0xa459, 0x905, 0x4a10, 0x3306, 0xc3a5, 0x24f9, 0x1, 0x1);
        gbc.writeMem(0xa459, { 0xe, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x905);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa459), 0xe);
        EXPECT(gbc.readMem(0xa45a), 0x54);
        // 0E 022A
        gbc.setState(0x58be, 0x886, 0x5600, 0x9a4b, 0x5deb, 0x554f, 0x1, 0x1);
        gbc.writeMem(0x58be, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x886);
        EXPECT(gbc.pc(), 0x58c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 022B
        gbc.setState(0xac95, 0x25bf, 0xc5f0, 0x9d71, 0xcd24, 0x7df2, 0x0, 0x0);
        gbc.writeMem(0xac95, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x25bf);
        EXPECT(gbc.pc(), 0xac97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac95), 0xe);
        EXPECT(gbc.readMem(0xac96), 0xf9);
        // 0E 022C
        gbc.setState(0x5766, 0x58b0, 0x2f90, 0xf288, 0xc779, 0xe125, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xe, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x58b0);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 022D
        gbc.setState(0x9b10, 0xd575, 0x93a0, 0xceb2, 0x1178, 0x8c49, 0x0, 0x0);
        gbc.writeMem(0x9b10, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd575);
        EXPECT(gbc.pc(), 0x9b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b10), 0xe);
        EXPECT(gbc.readMem(0x9b11), 0x56);
        // 0E 022E
        gbc.setState(0x1c0, 0x883, 0xf5e0, 0x6459, 0xc555, 0x6adb, 0x0, 0x1);
        gbc.writeMem(0x1c0, { 0xe, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0x1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 022F
        gbc.setState(0x4b31, 0xffdd, 0x6df0, 0xe023, 0xd30e, 0xc7f9, 0x1, 0x1);
        gbc.writeMem(0x4b31, { 0xe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xffdd);
        EXPECT(gbc.pc(), 0x4b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0230
        gbc.setState(0x4db9, 0xe980, 0xcf40, 0xad58, 0xcbfa, 0x9cbb, 0x0, 0x1);
        gbc.writeMem(0x4db9, { 0xe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe980);
        EXPECT(gbc.pc(), 0x4dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0231
        gbc.setState(0x9a8f, 0x2b9d, 0x990, 0x6276, 0xe33d, 0xe183, 0x1, 0x0);
        gbc.writeMem(0x9a8f, { 0xe, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2b9d);
        EXPECT(gbc.pc(), 0x9a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8f), 0xe);
        EXPECT(gbc.readMem(0x9a90), 0xb8);
        // 0E 0232
        gbc.setState(0xba85, 0x9903, 0xc7c0, 0xfbbd, 0xebac, 0x84d5, 0x1, 0x0);
        gbc.writeMem(0xba85, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0xba87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba85), 0xe);
        EXPECT(gbc.readMem(0xba86), 0xf1);
        // 0E 0233
        gbc.setState(0x5eb, 0x1f6c, 0x83f0, 0x70d7, 0x8007, 0x50c6, 0x0, 0x0);
        gbc.writeMem(0x5eb, { 0xe, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1f6c);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0234
        gbc.setState(0x7cf2, 0xe98b, 0x31f0, 0x1770, 0xfb9f, 0xcaa8, 0x1, 0x0);
        gbc.writeMem(0x7cf2, { 0xe, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe98b);
        EXPECT(gbc.pc(), 0x7cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0235
        gbc.setState(0xca32, 0x6181, 0x940, 0x1739, 0x9d05, 0x6f5b, 0x1, 0x1);
        gbc.writeMem(0xca32, { 0xe, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca32), 0xe);
        EXPECT(gbc.readMem(0xca33), 0x75);
        // 0E 0236
        gbc.setState(0x43b9, 0x9db, 0x550, 0xdbbb, 0xc137, 0xc60d, 0x0, 0x1);
        gbc.writeMem(0x43b9, { 0xe, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9db);
        EXPECT(gbc.pc(), 0x43bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0237
        gbc.setState(0x1937, 0xaa1f, 0xb660, 0x1646, 0x28b, 0x9a61, 0x1, 0x1);
        gbc.writeMem(0x1937, { 0xe, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaa1f);
        EXPECT(gbc.pc(), 0x1939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0238
        gbc.setState(0x3fc0, 0x822b, 0xd3f0, 0xbaa2, 0xba33, 0x9ebc, 0x1, 0x0);
        gbc.writeMem(0x3fc0, { 0xe, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x822b);
        EXPECT(gbc.pc(), 0x3fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0239
        gbc.setState(0x4fb2, 0x35ec, 0x2e0, 0x3a1c, 0xe3e, 0x81b6, 0x0, 0x0);
        gbc.writeMem(0x4fb2, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x35ec);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 023A
        gbc.setState(0x7558, 0x9341, 0xb260, 0x789e, 0x490a, 0xfa47, 0x1, 0x0);
        gbc.writeMem(0x7558, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9341);
        EXPECT(gbc.pc(), 0x755a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 023B
        gbc.setState(0x15b, 0x2850, 0xff00, 0x3795, 0x7aaf, 0xaaa, 0x1, 0x0);
        gbc.writeMem(0x15b, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 023C
        gbc.setState(0xc9d, 0xaa91, 0x5800, 0x158, 0xd1f5, 0x41d6, 0x1, 0x0);
        gbc.writeMem(0xc9d, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaa91);
        EXPECT(gbc.pc(), 0xc9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 023D
        gbc.setState(0x558c, 0x9850, 0xda00, 0x3cb3, 0xbec2, 0x7a98, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0xe, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9850);
        EXPECT(gbc.pc(), 0x558e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 023E
        gbc.setState(0x5dac, 0x7079, 0x4b70, 0xb1cf, 0xe23d, 0x80af, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7079);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0240
        gbc.setState(0xc7d4, 0x7e1d, 0xaac0, 0x7780, 0x8d2d, 0x37ea, 0x1, 0x1);
        gbc.writeMem(0xc7d4, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7e1d);
        EXPECT(gbc.pc(), 0xc7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d4), 0xe);
        EXPECT(gbc.readMem(0xc7d5), 0x65);
        // 0E 0241
        gbc.setState(0x1e33, 0xd02b, 0x6dd0, 0x8c3c, 0x3f37, 0x24f1, 0x1, 0x1);
        gbc.writeMem(0x1e33, { 0xe, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd02b);
        EXPECT(gbc.pc(), 0x1e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0242
        gbc.setState(0xde06, 0xdcfb, 0x9cb0, 0xbad9, 0x60b8, 0x4ce4, 0x0, 0x0);
        gbc.writeMem(0xde06, { 0xe, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdcfb);
        EXPECT(gbc.pc(), 0xde08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde06), 0xe);
        EXPECT(gbc.readMem(0xde07), 0xec);
        // 0E 0243
        gbc.setState(0xa545, 0x64dd, 0xc570, 0x2454, 0xcf78, 0x559f, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xe, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x64dd);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa545), 0xe);
        EXPECT(gbc.readMem(0xa546), 0x15);
        // 0E 0244
        gbc.setState(0x95cd, 0x6e0a, 0xc360, 0x8333, 0xf6ee, 0xec06, 0x1, 0x0);
        gbc.writeMem(0x95cd, { 0xe, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6e0a);
        EXPECT(gbc.pc(), 0x95cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cd), 0xe);
        EXPECT(gbc.readMem(0x95ce), 0x6a);
        // 0E 0245
        gbc.setState(0x2928, 0x8c0c, 0x3a50, 0xb664, 0x9752, 0x34fd, 0x1, 0x1);
        gbc.writeMem(0x2928, { 0xe, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8c0c);
        EXPECT(gbc.pc(), 0x292a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0246
        gbc.setState(0xa5b3, 0x2097, 0x7c0, 0x13a6, 0xdf82, 0x8b25, 0x1, 0x1);
        gbc.writeMem(0xa5b3, { 0xe, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2097);
        EXPECT(gbc.pc(), 0xa5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b3), 0xe);
        EXPECT(gbc.readMem(0xa5b4), 0x91);
        // 0E 0247
        gbc.setState(0x3bdf, 0xd9c0, 0xd480, 0x8265, 0x9a79, 0xb879, 0x0, 0x0);
        gbc.writeMem(0x3bdf, { 0xe, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0248
        gbc.setState(0xa6f4, 0x525b, 0x2ea0, 0xc7ad, 0xefc0, 0x9ec4, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0xe, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x525b);
        EXPECT(gbc.pc(), 0xa6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f4), 0xe);
        EXPECT(gbc.readMem(0xa6f5), 0x3e);
        // 0E 024A
        gbc.setState(0x638, 0x5dc7, 0x9cb0, 0x89c9, 0x852d, 0x77e2, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5dc7);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 024B
        gbc.setState(0xa921, 0x6fc5, 0x7840, 0x79e1, 0x106a, 0xd7c4, 0x1, 0x1);
        gbc.writeMem(0xa921, { 0xe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6fc5);
        EXPECT(gbc.pc(), 0xa923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa921), 0xe);
        EXPECT(gbc.readMem(0xa922), 0x3b);
        // 0E 024C
        gbc.setState(0xbef2, 0x87fd, 0x5bd0, 0x1f46, 0x8bab, 0x56e7, 0x1, 0x0);
        gbc.writeMem(0xbef2, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x87fd);
        EXPECT(gbc.pc(), 0xbef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef2), 0xe);
        EXPECT(gbc.readMem(0xbef3), 0xb5);
        // 0E 024D
        gbc.setState(0x3ed8, 0x9cfa, 0x9660, 0x2dab, 0x9382, 0xfd53, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x3eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 024E
        gbc.setState(0x51a1, 0x2a52, 0x86c0, 0x142e, 0x7c73, 0x8308, 0x0, 0x0);
        gbc.writeMem(0x51a1, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0x51a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 024F
        gbc.setState(0x24e4, 0xc961, 0x7300, 0xf460, 0x31cd, 0x73d7, 0x1, 0x0);
        gbc.writeMem(0x24e4, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc961);
        EXPECT(gbc.pc(), 0x24e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0250
        gbc.setState(0x513, 0x3b1b, 0xa740, 0x1bbd, 0x767c, 0xc8d0, 0x1, 0x1);
        gbc.writeMem(0x513, { 0xe, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3b1b);
        EXPECT(gbc.pc(), 0x515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0251
        gbc.setState(0xd252, 0xb4ba, 0xfe00, 0x8727, 0x41d6, 0xeaae, 0x0, 0x0);
        gbc.writeMem(0xd252, { 0xe, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb4ba);
        EXPECT(gbc.pc(), 0xd254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd252), 0xe);
        EXPECT(gbc.readMem(0xd253), 0x69);
        // 0E 0252
        gbc.setState(0xd011, 0x70b8, 0xbf30, 0xb256, 0xd96d, 0xee5f, 0x1, 0x0);
        gbc.writeMem(0xd011, { 0xe, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x70b8);
        EXPECT(gbc.pc(), 0xd013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd011), 0xe);
        EXPECT(gbc.readMem(0xd012), 0x0);
        // 0E 0253
        gbc.setState(0x5652, 0xabbb, 0x8e00, 0x9fe2, 0x673f, 0xb518, 0x0, 0x0);
        gbc.writeMem(0x5652, { 0xe, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xabbb);
        EXPECT(gbc.pc(), 0x5654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0254
        gbc.setState(0xd59a, 0x2c9f, 0x1b60, 0xc9b1, 0xb162, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xd59a, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2c9f);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59a), 0xe);
        EXPECT(gbc.readMem(0xd59b), 0x2);
        // 0E 0255
        gbc.setState(0x3211, 0x36ec, 0x69a0, 0x87c3, 0xca0e, 0x817d, 0x1, 0x1);
        gbc.writeMem(0x3211, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x36ec);
        EXPECT(gbc.pc(), 0x3213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0256
        gbc.setState(0x1ae, 0xc4ff, 0xd470, 0x989a, 0x9878, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x1ae, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc4ff);
        EXPECT(gbc.pc(), 0x1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0257
        gbc.setState(0xe8ed, 0xd87a, 0xd1f0, 0xe876, 0x5eb4, 0xf380, 0x1, 0x1);
        gbc.writeMem(0xe8ed, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd87a);
        EXPECT(gbc.pc(), 0xe8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ed), 0xe);
        EXPECT(gbc.readMem(0xe8ee), 0xe9);
        // 0E 0258
        gbc.setState(0xc8ed, 0xdb9a, 0x5b00, 0x1d13, 0x6e8c, 0xde2, 0x0, 0x0);
        gbc.writeMem(0xc8ed, { 0xe, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdb9a);
        EXPECT(gbc.pc(), 0xc8ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ed), 0xe);
        EXPECT(gbc.readMem(0xc8ee), 0x26);
        // 0E 0259
        gbc.setState(0xa28b, 0x919e, 0x2510, 0x994f, 0x13bf, 0xed15, 0x0, 0x0);
        gbc.writeMem(0xa28b, { 0xe, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x919e);
        EXPECT(gbc.pc(), 0xa28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28b), 0xe);
        EXPECT(gbc.readMem(0xa28c), 0x76);
        // 0E 025A
        gbc.setState(0x9afb, 0x9a1d, 0x5ae0, 0xb2ed, 0x25f1, 0x1d2c, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0xe, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0x9afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afb), 0xe);
        EXPECT(gbc.readMem(0x9afc), 0x31);
        // 0E 025B
        gbc.setState(0xac0, 0x67ab, 0xa2a0, 0x6de6, 0x16b5, 0x40bc, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x67ab);
        EXPECT(gbc.pc(), 0xac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 025C
        gbc.setState(0x8847, 0xd749, 0x51c0, 0xa8a6, 0x8fbc, 0x3d19, 0x1, 0x1);
        gbc.writeMem(0x8847, { 0xe, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd749);
        EXPECT(gbc.pc(), 0x8849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8847), 0xe);
        EXPECT(gbc.readMem(0x8848), 0x2b);
        // 0E 025D
        gbc.setState(0x3f66, 0xcc83, 0xac60, 0x65f3, 0xd65e, 0x3f3c, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xe, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcc83);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 025E
        gbc.setState(0xeffe, 0x2b40, 0xd620, 0x970e, 0x9453, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xeffe, { 0xe, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2b40);
        EXPECT(gbc.pc(), 0xf000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffe), 0xe);
        EXPECT(gbc.readMem(0xefff), 0x7e);
        // 0E 025F
        gbc.setState(0x6597, 0x567, 0xba40, 0xee2, 0x46a2, 0xe254, 0x0, 0x0);
        gbc.writeMem(0x6597, { 0xe, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x567);
        EXPECT(gbc.pc(), 0x6599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0260
        gbc.setState(0x49ad, 0x5e80, 0xcf80, 0x1539, 0xab20, 0xe359, 0x1, 0x1);
        gbc.writeMem(0x49ad, { 0xe, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5e80);
        EXPECT(gbc.pc(), 0x49af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0261
        gbc.setState(0xb03b, 0xdeb7, 0x9a10, 0x85a3, 0x68a9, 0x8e2c, 0x1, 0x0);
        gbc.writeMem(0xb03b, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0xb03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03b), 0xe);
        EXPECT(gbc.readMem(0xb03c), 0x6e);
        // 0E 0262
        gbc.setState(0x4fd0, 0x2f57, 0x24c0, 0xc71a, 0x3bbe, 0xcccd, 0x0, 0x0);
        gbc.writeMem(0x4fd0, { 0xe, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0x4fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0263
        gbc.setState(0xe803, 0x161a, 0xf810, 0xad4f, 0xc650, 0x119, 0x0, 0x0);
        gbc.writeMem(0xe803, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0xe805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe803), 0xe);
        EXPECT(gbc.readMem(0xe804), 0xc3);
        // 0E 0264
        gbc.setState(0x746e, 0x82a7, 0x80d0, 0xb89, 0xbd43, 0x4c54, 0x1, 0x1);
        gbc.writeMem(0x746e, { 0xe, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82a7);
        EXPECT(gbc.pc(), 0x7470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0265
        gbc.setState(0xf9c, 0xdfd5, 0xbe70, 0x4e3, 0xfcf8, 0x47ac, 0x0, 0x0);
        gbc.writeMem(0xf9c, { 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdfd5);
        EXPECT(gbc.pc(), 0xf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0266
        gbc.setState(0x43ee, 0x399b, 0x8fc0, 0xb7ca, 0x241, 0xb96c, 0x0, 0x1);
        gbc.writeMem(0x43ee, { 0xe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x399b);
        EXPECT(gbc.pc(), 0x43f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0267
        gbc.setState(0x5458, 0xd27, 0xc7d0, 0x534d, 0xec7d, 0x593, 0x1, 0x0);
        gbc.writeMem(0x5458, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd27);
        EXPECT(gbc.pc(), 0x545a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0268
        gbc.setState(0xd2cb, 0xce22, 0x8290, 0xe3ce, 0x2dcb, 0xebd, 0x1, 0x0);
        gbc.writeMem(0xd2cb, { 0xe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xce22);
        EXPECT(gbc.pc(), 0xd2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cb), 0xe);
        EXPECT(gbc.readMem(0xd2cc), 0x97);
        // 0E 0269
        gbc.setState(0x581a, 0x85c9, 0x4e00, 0xa340, 0x5693, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x581a, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x85c9);
        EXPECT(gbc.pc(), 0x581c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 026A
        gbc.setState(0xd86c, 0x81f2, 0xc4c0, 0xd333, 0xff91, 0x27f5, 0x1, 0x0);
        gbc.writeMem(0xd86c, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x81f2);
        EXPECT(gbc.pc(), 0xd86e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86c), 0xe);
        EXPECT(gbc.readMem(0xd86d), 0x52);
        // 0E 026B
        gbc.setState(0x36fd, 0xc5e5, 0x230, 0xa6d6, 0x5a03, 0xd845, 0x0, 0x0);
        gbc.writeMem(0x36fd, { 0xe, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc5e5);
        EXPECT(gbc.pc(), 0x36ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 026C
        gbc.setState(0x1db, 0xfa55, 0x5900, 0xf4a3, 0x1b0b, 0x7110, 0x1, 0x1);
        gbc.writeMem(0x1db, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfa55);
        EXPECT(gbc.pc(), 0x1dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 026D
        gbc.setState(0x3987, 0xcc86, 0x2920, 0xa7f5, 0x2465, 0x4ab1, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcc86);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 026E
        gbc.setState(0x64c8, 0x35b7, 0x21d0, 0x28bb, 0x660c, 0x5e30, 0x0, 0x1);
        gbc.writeMem(0x64c8, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x35b7);
        EXPECT(gbc.pc(), 0x64ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0270
        gbc.setState(0x492e, 0x4639, 0xc650, 0xaa32, 0xfd84, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x492e, { 0xe, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0x4930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0271
        gbc.setState(0xb170, 0xe6f7, 0x17a0, 0xb7e2, 0xc94f, 0xe94e, 0x1, 0x0);
        gbc.writeMem(0xb170, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe6f7);
        EXPECT(gbc.pc(), 0xb172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb170), 0xe);
        EXPECT(gbc.readMem(0xb171), 0x5f);
        // 0E 0272
        gbc.setState(0x280c, 0x9808, 0xcfc0, 0x4a6b, 0xc797, 0xd47, 0x0, 0x0);
        gbc.writeMem(0x280c, { 0xe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x280e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0273
        gbc.setState(0x8cd, 0x4bb1, 0x4190, 0xa2aa, 0xd146, 0xe45b, 0x0, 0x1);
        gbc.writeMem(0x8cd, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4bb1);
        EXPECT(gbc.pc(), 0x8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0275
        gbc.setState(0xb689, 0xe9fc, 0x3df0, 0xd0a8, 0xdf21, 0x1fa2, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0xe, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe9fc);
        EXPECT(gbc.pc(), 0xb68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb689), 0xe);
        EXPECT(gbc.readMem(0xb68a), 0xfd);
        // 0E 0276
        gbc.setState(0x25c9, 0x3e0d, 0x1000, 0xe5ba, 0x4b09, 0xf80, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0x25cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0277
        gbc.setState(0x5eb6, 0xca7e, 0x3280, 0x1d5, 0x53a4, 0x1b11, 0x1, 0x0);
        gbc.writeMem(0x5eb6, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xca7e);
        EXPECT(gbc.pc(), 0x5eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0278
        gbc.setState(0xeb23, 0xf2ac, 0x1ca0, 0xd41a, 0xcf8, 0x74bb, 0x1, 0x1);
        gbc.writeMem(0xeb23, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf2ac);
        EXPECT(gbc.pc(), 0xeb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb23), 0xe);
        EXPECT(gbc.readMem(0xeb24), 0xe2);
        // 0E 0279
        gbc.setState(0x86b7, 0x8b41, 0xedf0, 0x2b3b, 0x85e6, 0x555b, 0x0, 0x1);
        gbc.writeMem(0x86b7, { 0xe, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8b41);
        EXPECT(gbc.pc(), 0x86b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b7), 0xe);
        EXPECT(gbc.readMem(0x86b8), 0xbb);
        // 0E 027A
        gbc.setState(0xedb, 0x408a, 0xe400, 0x6d00, 0x9c47, 0x7fbd, 0x1, 0x1);
        gbc.writeMem(0xedb, { 0xe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x408a);
        EXPECT(gbc.pc(), 0xedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 027B
        gbc.setState(0x1678, 0xd655, 0x5090, 0x3cd5, 0xfade, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0x1678, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd655);
        EXPECT(gbc.pc(), 0x167a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 027C
        gbc.setState(0xad11, 0x78b3, 0xfe30, 0x4621, 0xdb8f, 0x10f6, 0x0, 0x0);
        gbc.writeMem(0xad11, { 0xe, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x78b3);
        EXPECT(gbc.pc(), 0xad13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad11), 0xe);
        EXPECT(gbc.readMem(0xad12), 0xee);
        // 0E 027D
        gbc.setState(0x78ac, 0xdeb7, 0x27c0, 0x6088, 0xaf4d, 0xef8d, 0x1, 0x0);
        gbc.writeMem(0x78ac, { 0xe, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0x78ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 027E
        gbc.setState(0xa503, 0xc8c3, 0xf3b0, 0x2202, 0xac6c, 0xdeef, 0x1, 0x0);
        gbc.writeMem(0xa503, { 0xe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc8c3);
        EXPECT(gbc.pc(), 0xa505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa503), 0xe);
        EXPECT(gbc.readMem(0xa504), 0xda);
        // 0E 027F
        gbc.setState(0xca7c, 0x37c8, 0xb7d0, 0xe4da, 0xbe9f, 0x621c, 0x0, 0x1);
        gbc.writeMem(0xca7c, { 0xe, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x37c8);
        EXPECT(gbc.pc(), 0xca7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7c), 0xe);
        EXPECT(gbc.readMem(0xca7d), 0x88);
        // 0E 0280
        gbc.setState(0xf00, 0xd466, 0xd5c0, 0xd714, 0x8cf0, 0x1ac3, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0xe, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd466);
        EXPECT(gbc.pc(), 0xf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0281
        gbc.setState(0xa5d4, 0xa96d, 0x1ce0, 0xbf29, 0xab0b, 0x9c23, 0x0, 0x1);
        gbc.writeMem(0xa5d4, { 0xe, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0xa5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d4), 0xe);
        EXPECT(gbc.readMem(0xa5d5), 0xbd);
        // 0E 0282
        gbc.setState(0xa6e9, 0x3db3, 0x51d0, 0xc021, 0x42cd, 0x2cef, 0x0, 0x1);
        gbc.writeMem(0xa6e9, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3db3);
        EXPECT(gbc.pc(), 0xa6eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e9), 0xe);
        EXPECT(gbc.readMem(0xa6ea), 0x1f);
        // 0E 0283
        gbc.setState(0x285a, 0xb554, 0x8e30, 0xcabd, 0xeb04, 0x7e7d, 0x0, 0x1);
        gbc.writeMem(0x285a, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb554);
        EXPECT(gbc.pc(), 0x285c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0284
        gbc.setState(0xb8c9, 0x1459, 0x6970, 0x34bf, 0x5b5b, 0x8cf0, 0x0, 0x1);
        gbc.writeMem(0xb8c9, { 0xe, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1459);
        EXPECT(gbc.pc(), 0xb8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c9), 0xe);
        EXPECT(gbc.readMem(0xb8ca), 0x1c);
        // 0E 0285
        gbc.setState(0xe26a, 0x69b8, 0xb060, 0xa04b, 0xf122, 0x9c76, 0x0, 0x0);
        gbc.writeMem(0xe26a, { 0xe, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x69b8);
        EXPECT(gbc.pc(), 0xe26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26a), 0xe);
        EXPECT(gbc.readMem(0xe26b), 0x3a);
        // 0E 0286
        gbc.setState(0x1530, 0xda6f, 0x2fa0, 0xd365, 0x704, 0xb38, 0x0, 0x0);
        gbc.writeMem(0x1530, { 0xe, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xda6f);
        EXPECT(gbc.pc(), 0x1532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0287
        gbc.setState(0x4e58, 0x1791, 0x76a0, 0x6d0f, 0x9cf2, 0xaf47, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1791);
        EXPECT(gbc.pc(), 0x4e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0288
        gbc.setState(0xafc9, 0x7bfe, 0xad80, 0x428b, 0xde2e, 0xd65c, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xe, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7bfe);
        EXPECT(gbc.pc(), 0xafcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc9), 0xe);
        EXPECT(gbc.readMem(0xafca), 0x47);
        // 0E 028A
        gbc.setState(0xa9c1, 0x7df5, 0x9090, 0x3dac, 0x6eb5, 0x6016, 0x1, 0x1);
        gbc.writeMem(0xa9c1, { 0xe, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7df5);
        EXPECT(gbc.pc(), 0xa9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c1), 0xe);
        EXPECT(gbc.readMem(0xa9c2), 0x37);
        // 0E 028B
        gbc.setState(0x8ecd, 0xb149, 0xd490, 0x8563, 0xf185, 0x2120, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb149);
        EXPECT(gbc.pc(), 0x8ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecd), 0xe);
        EXPECT(gbc.readMem(0x8ece), 0x85);
        // 0E 028C
        gbc.setState(0x1c42, 0xe0e7, 0xd5c0, 0x6ed8, 0xe3bb, 0x2e2e, 0x1, 0x0);
        gbc.writeMem(0x1c42, { 0xe, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0x1c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 028D
        gbc.setState(0x916d, 0x78e8, 0x920, 0x2814, 0xb148, 0x5eb7, 0x1, 0x0);
        gbc.writeMem(0x916d, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x78e8);
        EXPECT(gbc.pc(), 0x916f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x916d), 0xe);
        EXPECT(gbc.readMem(0x916e), 0xc7);
        // 0E 028E
        gbc.setState(0x5082, 0xa4c1, 0xdc00, 0x9c80, 0x2b13, 0xc96f, 0x1, 0x0);
        gbc.writeMem(0x5082, { 0xe, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa4c1);
        EXPECT(gbc.pc(), 0x5084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 028F
        gbc.setState(0xb0f5, 0x6995, 0x7540, 0x21c9, 0xd452, 0xafee, 0x1, 0x1);
        gbc.writeMem(0xb0f5, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6995);
        EXPECT(gbc.pc(), 0xb0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f5), 0xe);
        EXPECT(gbc.readMem(0xb0f6), 0x3c);
        // 0E 0290
        gbc.setState(0xe5ed, 0x9a8c, 0x580, 0xae6c, 0xee03, 0xdd80, 0x1, 0x0);
        gbc.writeMem(0xe5ed, { 0xe, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9a8c);
        EXPECT(gbc.pc(), 0xe5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ed), 0xe);
        EXPECT(gbc.readMem(0xe5ee), 0x4f);
        // 0E 0291
        gbc.setState(0xaedb, 0xd7f2, 0x60, 0xed36, 0xef8d, 0x6a3d, 0x1, 0x1);
        gbc.writeMem(0xaedb, { 0xe, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd7f2);
        EXPECT(gbc.pc(), 0xaedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedb), 0xe);
        EXPECT(gbc.readMem(0xaedc), 0x7e);
        // 0E 0292
        gbc.setState(0x3b29, 0x3441, 0xd930, 0x879d, 0x8838, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x3b29, { 0xe, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3441);
        EXPECT(gbc.pc(), 0x3b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0293
        gbc.setState(0x4488, 0xa5cb, 0xf6e0, 0x3fec, 0x46e, 0x486a, 0x0, 0x0);
        gbc.writeMem(0x4488, { 0xe, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa5cb);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0294
        gbc.setState(0x8c78, 0x1bff, 0xc550, 0xabb0, 0xe7dc, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x8c78, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1bff);
        EXPECT(gbc.pc(), 0x8c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c78), 0xe);
        EXPECT(gbc.readMem(0x8c79), 0xd5);
        // 0E 0295
        gbc.setState(0x6c0a, 0x85f8, 0xcce0, 0x8bdf, 0x23de, 0xd95a, 0x0, 0x1);
        gbc.writeMem(0x6c0a, { 0xe, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x85f8);
        EXPECT(gbc.pc(), 0x6c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0296
        gbc.setState(0x8af4, 0x87b8, 0xf2f0, 0x4767, 0xdf58, 0xe536, 0x0, 0x1);
        gbc.writeMem(0x8af4, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x87b8);
        EXPECT(gbc.pc(), 0x8af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af4), 0xe);
        EXPECT(gbc.readMem(0x8af5), 0xf7);
        // 0E 0297
        gbc.setState(0x4ee1, 0x92c2, 0xbc20, 0x2793, 0x10be, 0x1bf6, 0x1, 0x1);
        gbc.writeMem(0x4ee1, { 0xe, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x92c2);
        EXPECT(gbc.pc(), 0x4ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0298
        gbc.setState(0xd8f, 0x8cb2, 0x7040, 0xa9b, 0x338d, 0xbfad, 0x0, 0x0);
        gbc.writeMem(0xd8f, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8cb2);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0299
        gbc.setState(0x2cb, 0xb4dd, 0x8430, 0x6a5d, 0xe911, 0x514f, 0x0, 0x1);
        gbc.writeMem(0x2cb, { 0xe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb4dd);
        EXPECT(gbc.pc(), 0x2cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 029A
        gbc.setState(0xa0a4, 0x8b8f, 0x5cf0, 0x5243, 0xa337, 0xd187, 0x1, 0x1);
        gbc.writeMem(0xa0a4, { 0xe, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8b8f);
        EXPECT(gbc.pc(), 0xa0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a4), 0xe);
        EXPECT(gbc.readMem(0xa0a5), 0x20);
        // 0E 029B
        gbc.setState(0x4505, 0xfb0, 0x7cf0, 0xdfa6, 0x4465, 0x9744, 0x1, 0x0);
        gbc.writeMem(0x4505, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfb0);
        EXPECT(gbc.pc(), 0x4507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 029C
        gbc.setState(0x3390, 0x4a8, 0xa780, 0xa6ce, 0xa061, 0x8df8, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0xe, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0x3392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 029D
        gbc.setState(0xc204, 0x144a, 0x8dc0, 0x9c92, 0xe4f1, 0x3521, 0x0, 0x1);
        gbc.writeMem(0xc204, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x144a);
        EXPECT(gbc.pc(), 0xc206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc204), 0xe);
        EXPECT(gbc.readMem(0xc205), 0x6c);
        // 0E 029E
        gbc.setState(0x48e2, 0x19c8, 0x5b00, 0xafaa, 0x43ce, 0x7564, 0x0, 0x0);
        gbc.writeMem(0x48e2, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x19c8);
        EXPECT(gbc.pc(), 0x48e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 029F
        gbc.setState(0xd56f, 0x89fd, 0xa780, 0x925, 0x1b32, 0x9991, 0x1, 0x0);
        gbc.writeMem(0xd56f, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x89fd);
        EXPECT(gbc.pc(), 0xd571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56f), 0xe);
        EXPECT(gbc.readMem(0xd570), 0xb2);
        // 0E 02A0
        gbc.setState(0x222b, 0x248e, 0xc500, 0x4f87, 0xcc47, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0x222b, { 0xe, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x248e);
        EXPECT(gbc.pc(), 0x222d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02A1
        gbc.setState(0xdf8f, 0x344c, 0x4250, 0x51e8, 0x39ff, 0xdaad, 0x1, 0x1);
        gbc.writeMem(0xdf8f, { 0xe, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x344c);
        EXPECT(gbc.pc(), 0xdf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8f), 0xe);
        EXPECT(gbc.readMem(0xdf90), 0x55);
        // 0E 02A2
        gbc.setState(0x3815, 0xdce8, 0x2740, 0x30e5, 0xe4af, 0xa48b, 0x1, 0x1);
        gbc.writeMem(0x3815, { 0xe, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdce8);
        EXPECT(gbc.pc(), 0x3817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02A3
        gbc.setState(0x38af, 0x9d0, 0x6ff0, 0xef2, 0xe032, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x38af, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9d0);
        EXPECT(gbc.pc(), 0x38b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02A4
        gbc.setState(0x33ed, 0x51a2, 0xb730, 0xe186, 0x8bdc, 0x2a78, 0x0, 0x0);
        gbc.writeMem(0x33ed, { 0xe, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x51a2);
        EXPECT(gbc.pc(), 0x33ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02A5
        gbc.setState(0x5685, 0xa9fd, 0x360, 0x977c, 0x8484, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x5685, { 0xe, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa9fd);
        EXPECT(gbc.pc(), 0x5687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02A6
        gbc.setState(0x251b, 0xb794, 0x4ed0, 0xf496, 0x7913, 0x3469, 0x1, 0x1);
        gbc.writeMem(0x251b, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb794);
        EXPECT(gbc.pc(), 0x251d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02A8
        gbc.setState(0x31d2, 0xb4e6, 0x70e0, 0x92a8, 0xfb8a, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0x31d2, { 0xe, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb4e6);
        EXPECT(gbc.pc(), 0x31d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02A9
        gbc.setState(0xae98, 0xc222, 0x560, 0xd1d, 0x8326, 0xac8f, 0x0, 0x1);
        gbc.writeMem(0xae98, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc222);
        EXPECT(gbc.pc(), 0xae9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae98), 0xe);
        EXPECT(gbc.readMem(0xae99), 0x2);
        // 0E 02AA
        gbc.setState(0xcaab, 0x3632, 0xe1b0, 0x9f09, 0xf2b8, 0x8154, 0x0, 0x0);
        gbc.writeMem(0xcaab, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3632);
        EXPECT(gbc.pc(), 0xcaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaab), 0xe);
        EXPECT(gbc.readMem(0xcaac), 0x56);
        // 0E 02AB
        gbc.setState(0x7e3, 0x2006, 0xab00, 0x578b, 0xdab0, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x7e3, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2006);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02AC
        gbc.setState(0x7291, 0x386e, 0x27e0, 0xeb04, 0x74d0, 0xebec, 0x1, 0x1);
        gbc.writeMem(0x7291, { 0xe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x386e);
        EXPECT(gbc.pc(), 0x7293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02AD
        gbc.setState(0x775f, 0x9067, 0xf660, 0x1482, 0x731d, 0xfe6c, 0x1, 0x1);
        gbc.writeMem(0x775f, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9067);
        EXPECT(gbc.pc(), 0x7761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02AE
        gbc.setState(0xda20, 0x4f71, 0x3c70, 0x49aa, 0xaebc, 0xbc7c, 0x1, 0x0);
        gbc.writeMem(0xda20, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4f71);
        EXPECT(gbc.pc(), 0xda22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda20), 0xe);
        EXPECT(gbc.readMem(0xda21), 0x57);
        // 0E 02AF
        gbc.setState(0x56b1, 0xbfe6, 0xc2a0, 0x1bb7, 0xa81a, 0x32fc, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbfe6);
        EXPECT(gbc.pc(), 0x56b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02B0
        gbc.setState(0xbc39, 0x87e7, 0x61e0, 0x5be3, 0xd4ac, 0xe773, 0x1, 0x0);
        gbc.writeMem(0xbc39, { 0xe, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x87e7);
        EXPECT(gbc.pc(), 0xbc3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc39), 0xe);
        EXPECT(gbc.readMem(0xbc3a), 0xdb);
        // 0E 02B1
        gbc.setState(0x6d3a, 0x2ffc, 0x2340, 0x7b85, 0xd8a0, 0xf08f, 0x0, 0x1);
        gbc.writeMem(0x6d3a, { 0xe, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0x6d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02B2
        gbc.setState(0x35e2, 0xc8e1, 0x8780, 0xed18, 0xa3b3, 0x67b8, 0x0, 0x0);
        gbc.writeMem(0x35e2, { 0xe, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc8e1);
        EXPECT(gbc.pc(), 0x35e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02B3
        gbc.setState(0xb537, 0x45cc, 0x7960, 0xf68f, 0x95cf, 0xccda, 0x0, 0x0);
        gbc.writeMem(0xb537, { 0xe, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0xb539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb537), 0xe);
        EXPECT(gbc.readMem(0xb538), 0xe5);
        // 0E 02B4
        gbc.setState(0x4d9d, 0x2f7b, 0xe050, 0x10f5, 0x8e21, 0x27ec, 0x0, 0x0);
        gbc.writeMem(0x4d9d, { 0xe, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2f7b);
        EXPECT(gbc.pc(), 0x4d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02B5
        gbc.setState(0xce2b, 0x9e4f, 0xc520, 0x93dd, 0x99fb, 0xcd7e, 0x1, 0x1);
        gbc.writeMem(0xce2b, { 0xe, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9e4f);
        EXPECT(gbc.pc(), 0xce2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2b), 0xe);
        EXPECT(gbc.readMem(0xce2c), 0x7b);
        // 0E 02B6
        gbc.setState(0xef6f, 0xa02a, 0xa020, 0x5b88, 0x9246, 0xf134, 0x1, 0x0);
        gbc.writeMem(0xef6f, { 0xe, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa02a);
        EXPECT(gbc.pc(), 0xef71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6f), 0xe);
        EXPECT(gbc.readMem(0xef70), 0x63);
        // 0E 02B7
        gbc.setState(0xadae, 0x909f, 0x84f0, 0x709d, 0x36b2, 0x523f, 0x1, 0x0);
        gbc.writeMem(0xadae, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x909f);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadae), 0xe);
        EXPECT(gbc.readMem(0xadaf), 0x51);
        // 0E 02B8
        gbc.setState(0x3f0d, 0x5693, 0x13b0, 0x2379, 0xeae4, 0x6cd5, 0x0, 0x1);
        gbc.writeMem(0x3f0d, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5693);
        EXPECT(gbc.pc(), 0x3f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02B9
        gbc.setState(0x3adc, 0xb08e, 0x2880, 0xa8d0, 0x67ce, 0x3061, 0x0, 0x0);
        gbc.writeMem(0x3adc, { 0xe, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb08e);
        EXPECT(gbc.pc(), 0x3ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02BA
        gbc.setState(0x8e25, 0x5aaf, 0xe620, 0x9de8, 0x69b8, 0x383d, 0x1, 0x1);
        gbc.writeMem(0x8e25, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5aaf);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e25), 0xe);
        EXPECT(gbc.readMem(0x8e26), 0xc4);
        // 0E 02BB
        gbc.setState(0x97ef, 0x9e07, 0x9670, 0xbfd6, 0xbcb3, 0xb1c9, 0x1, 0x1);
        gbc.writeMem(0x97ef, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9e07);
        EXPECT(gbc.pc(), 0x97f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ef), 0xe);
        EXPECT(gbc.readMem(0x97f0), 0xf0);
        // 0E 02BC
        gbc.setState(0xd094, 0xa1c8, 0xc130, 0x7c25, 0x2601, 0x1d2a, 0x0, 0x0);
        gbc.writeMem(0xd094, { 0xe, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa1c8);
        EXPECT(gbc.pc(), 0xd096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd094), 0xe);
        EXPECT(gbc.readMem(0xd095), 0x2f);
        // 0E 02BE
        gbc.setState(0x66f4, 0xf992, 0xdb0, 0xc375, 0xf471, 0x8b14, 0x0, 0x0);
        gbc.writeMem(0x66f4, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf992);
        EXPECT(gbc.pc(), 0x66f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02C0
        gbc.setState(0x27d4, 0xcf81, 0x7cf0, 0x76c2, 0xdde1, 0x9e8, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0xe, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcf81);
        EXPECT(gbc.pc(), 0x27d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02C1
        gbc.setState(0x6230, 0xd8f6, 0xb8f0, 0x7068, 0xb41d, 0x4555, 0x1, 0x1);
        gbc.writeMem(0x6230, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd8f6);
        EXPECT(gbc.pc(), 0x6232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02C2
        gbc.setState(0xafc3, 0xdc4b, 0x2df0, 0x5496, 0xc263, 0x3718, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0xe, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdc4b);
        EXPECT(gbc.pc(), 0xafc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc3), 0xe);
        EXPECT(gbc.readMem(0xafc4), 0x3d);
        // 0E 02C3
        gbc.setState(0xddb, 0x5efc, 0x3d80, 0x520d, 0x1843, 0xd77a, 0x1, 0x0);
        gbc.writeMem(0xddb, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5efc);
        EXPECT(gbc.pc(), 0xddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02C4
        gbc.setState(0x67c7, 0x4732, 0x4c60, 0x4a51, 0xf347, 0x842f, 0x0, 0x0);
        gbc.writeMem(0x67c7, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4732);
        EXPECT(gbc.pc(), 0x67c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02C5
        gbc.setState(0xdb80, 0xff44, 0x44e0, 0xfac5, 0xfe05, 0xac5a, 0x0, 0x0);
        gbc.writeMem(0xdb80, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff44);
        EXPECT(gbc.pc(), 0xdb82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb80), 0xe);
        EXPECT(gbc.readMem(0xdb81), 0x1e);
        // 0E 02C6
        gbc.setState(0xb4c8, 0xc5ef, 0xa720, 0xabaa, 0x98a9, 0xd0ea, 0x1, 0x0);
        gbc.writeMem(0xb4c8, { 0xe, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc5ef);
        EXPECT(gbc.pc(), 0xb4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c8), 0xe);
        EXPECT(gbc.readMem(0xb4c9), 0xfd);
        // 0E 02C7
        gbc.setState(0x8084, 0x5e8f, 0x1190, 0x39b5, 0xa6b5, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xe, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5e8f);
        EXPECT(gbc.pc(), 0x8086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8084), 0xe);
        EXPECT(gbc.readMem(0x8085), 0x5a);
        // 0E 02C8
        gbc.setState(0xcbdb, 0xefff, 0xd9b0, 0x9d03, 0xa84c, 0x62c2, 0x1, 0x1);
        gbc.writeMem(0xcbdb, { 0xe, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xefff);
        EXPECT(gbc.pc(), 0xcbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdb), 0xe);
        EXPECT(gbc.readMem(0xcbdc), 0x69);
        // 0E 02C9
        gbc.setState(0x2872, 0x7fb7, 0x95f0, 0x58d0, 0x69e0, 0xb982, 0x0, 0x0);
        gbc.writeMem(0x2872, { 0xe, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7fb7);
        EXPECT(gbc.pc(), 0x2874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02CA
        gbc.setState(0xd1b1, 0x7ecd, 0xf850, 0x52ca, 0xa83d, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0xe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0xd1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b1), 0xe);
        EXPECT(gbc.readMem(0xd1b2), 0x3b);
        // 0E 02CB
        gbc.setState(0x7f70, 0x61d7, 0xb6a0, 0xbd4e, 0x3773, 0xc8ad, 0x0, 0x1);
        gbc.writeMem(0x7f70, { 0xe, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0x7f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02CC
        gbc.setState(0x93a2, 0xd055, 0xeb40, 0x66b5, 0x6525, 0x244c, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd055);
        EXPECT(gbc.pc(), 0x93a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a2), 0xe);
        EXPECT(gbc.readMem(0x93a3), 0x1e);
        // 0E 02CD
        gbc.setState(0xd470, 0xc220, 0xb540, 0xb77d, 0xa9b2, 0x7a41, 0x1, 0x0);
        gbc.writeMem(0xd470, { 0xe, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0xd472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd470), 0xe);
        EXPECT(gbc.readMem(0xd471), 0xc0);
        // 0E 02CE
        gbc.setState(0x8ca4, 0x9491, 0xf3a0, 0xabf1, 0x5ccb, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0x8ca4, { 0xe, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9491);
        EXPECT(gbc.pc(), 0x8ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca4), 0xe);
        EXPECT(gbc.readMem(0x8ca5), 0xa0);
        // 0E 02CF
        gbc.setState(0xa972, 0x63ee, 0x9d20, 0x6109, 0x211f, 0x51fc, 0x1, 0x0);
        gbc.writeMem(0xa972, { 0xe, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x63ee);
        EXPECT(gbc.pc(), 0xa974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa972), 0xe);
        EXPECT(gbc.readMem(0xa973), 0x5b);
        // 0E 02D0
        gbc.setState(0xc8f5, 0x537f, 0xfa50, 0xa1ee, 0x2892, 0xf4ff, 0x0, 0x1);
        gbc.writeMem(0xc8f5, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x537f);
        EXPECT(gbc.pc(), 0xc8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f5), 0xe);
        EXPECT(gbc.readMem(0xc8f6), 0x52);
        // 0E 02D1
        gbc.setState(0x8ffb, 0xccbc, 0x760, 0x9252, 0xf581, 0xb32e, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xe, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xccbc);
        EXPECT(gbc.pc(), 0x8ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffb), 0xe);
        EXPECT(gbc.readMem(0x8ffc), 0x6e);
        // 0E 02D2
        gbc.setState(0x2ea6, 0xd660, 0xcc10, 0x8ad5, 0x7cb9, 0x5096, 0x1, 0x1);
        gbc.writeMem(0x2ea6, { 0xe, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd660);
        EXPECT(gbc.pc(), 0x2ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02D3
        gbc.setState(0x5a4f, 0xedd2, 0xe2a0, 0xbca8, 0x4f2c, 0xec70, 0x1, 0x1);
        gbc.writeMem(0x5a4f, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xedd2);
        EXPECT(gbc.pc(), 0x5a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02D4
        gbc.setState(0xba28, 0xa731, 0xa1a0, 0x7f2d, 0x6ec4, 0xc789, 0x0, 0x0);
        gbc.writeMem(0xba28, { 0xe, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa731);
        EXPECT(gbc.pc(), 0xba2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba28), 0xe);
        EXPECT(gbc.readMem(0xba29), 0x21);
        // 0E 02D6
        gbc.setState(0x4cb4, 0x17b4, 0x8250, 0xa702, 0x1e31, 0x5e5d, 0x1, 0x0);
        gbc.writeMem(0x4cb4, { 0xe, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x17b4);
        EXPECT(gbc.pc(), 0x4cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02D7
        gbc.setState(0x3902, 0xc9cc, 0x64c0, 0x4c1f, 0x8888, 0x86e, 0x0, 0x0);
        gbc.writeMem(0x3902, { 0xe, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc9cc);
        EXPECT(gbc.pc(), 0x3904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02D8
        gbc.setState(0xcf8e, 0x55c2, 0xecb0, 0x2f11, 0x91bf, 0x157d, 0x1, 0x1);
        gbc.writeMem(0xcf8e, { 0xe, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x55c2);
        EXPECT(gbc.pc(), 0xcf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8e), 0xe);
        EXPECT(gbc.readMem(0xcf8f), 0xf5);
        // 0E 02D9
        gbc.setState(0xe333, 0x66aa, 0x4d90, 0x17ad, 0x645d, 0xa0b5, 0x1, 0x0);
        gbc.writeMem(0xe333, { 0xe, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x66aa);
        EXPECT(gbc.pc(), 0xe335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe333), 0xe);
        EXPECT(gbc.readMem(0xe334), 0x5e);
        // 0E 02DB
        gbc.setState(0xdda8, 0x3d3, 0xf720, 0x1e94, 0x486d, 0x8bae, 0x0, 0x1);
        gbc.writeMem(0xdda8, { 0xe, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3d3);
        EXPECT(gbc.pc(), 0xddaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda8), 0xe);
        EXPECT(gbc.readMem(0xdda9), 0x3c);
        // 0E 02DC
        gbc.setState(0x1e7d, 0x9c0f, 0xb190, 0xe310, 0xcae1, 0x40bc, 0x1, 0x0);
        gbc.writeMem(0x1e7d, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9c0f);
        EXPECT(gbc.pc(), 0x1e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02DD
        gbc.setState(0x488f, 0x193e, 0x650, 0x5ef6, 0x5ef5, 0x45cb, 0x1, 0x0);
        gbc.writeMem(0x488f, { 0xe, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x4891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02DE
        gbc.setState(0x7e7, 0x1afa, 0x2370, 0x8612, 0xb86f, 0x6af1, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0xe, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1afa);
        EXPECT(gbc.pc(), 0x7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02DF
        gbc.setState(0xb2ad, 0x66ec, 0xa120, 0x89b3, 0xf11f, 0x56f8, 0x0, 0x0);
        gbc.writeMem(0xb2ad, { 0xe, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x66ec);
        EXPECT(gbc.pc(), 0xb2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ad), 0xe);
        EXPECT(gbc.readMem(0xb2ae), 0xd6);
        // 0E 02E0
        gbc.setState(0xb4ba, 0x6a17, 0xcf80, 0x9b3d, 0x15a8, 0x4451, 0x0, 0x1);
        gbc.writeMem(0xb4ba, { 0xe, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6a17);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ba), 0xe);
        EXPECT(gbc.readMem(0xb4bb), 0x5a);
        // 0E 02E1
        gbc.setState(0x9630, 0x9794, 0x7030, 0x8cf6, 0xd9a5, 0xad0b, 0x0, 0x0);
        gbc.writeMem(0x9630, { 0xe, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9794);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9630), 0xe);
        EXPECT(gbc.readMem(0x9631), 0x13);
        // 0E 02E2
        gbc.setState(0xc0cf, 0x1fd7, 0x3a40, 0x774e, 0xfa4b, 0x84b6, 0x0, 0x0);
        gbc.writeMem(0xc0cf, { 0xe, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1fd7);
        EXPECT(gbc.pc(), 0xc0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cf), 0xe);
        EXPECT(gbc.readMem(0xc0d0), 0x3);
        // 0E 02E3
        gbc.setState(0x86c7, 0xe54f, 0xd6d0, 0x5103, 0x591, 0x3239, 0x0, 0x1);
        gbc.writeMem(0x86c7, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0x86c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c7), 0xe);
        EXPECT(gbc.readMem(0x86c8), 0x65);
        // 0E 02E4
        gbc.setState(0xabec, 0xac6, 0x8630, 0x594f, 0xdd70, 0xd52b, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0xe, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xac6);
        EXPECT(gbc.pc(), 0xabee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabec), 0xe);
        EXPECT(gbc.readMem(0xabed), 0x4a);
        // 0E 02E5
        gbc.setState(0x324f, 0xfb18, 0xf3f0, 0x30ce, 0x44a2, 0x4cfd, 0x1, 0x1);
        gbc.writeMem(0x324f, { 0xe, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfb18);
        EXPECT(gbc.pc(), 0x3251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02E7
        gbc.setState(0x1043, 0x8fe0, 0xddc0, 0x7c9, 0x866a, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x1043, { 0xe, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8fe0);
        EXPECT(gbc.pc(), 0x1045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02E8
        gbc.setState(0x998e, 0x6761, 0xfed0, 0x2f0, 0x23a5, 0x8cf3, 0x0, 0x0);
        gbc.writeMem(0x998e, { 0xe, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6761);
        EXPECT(gbc.pc(), 0x9990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998e), 0xe);
        EXPECT(gbc.readMem(0x998f), 0x11);
        // 0E 02E9
        gbc.setState(0xc003, 0x9b99, 0xbc40, 0x57b3, 0x6213, 0x41b1, 0x1, 0x1);
        gbc.writeMem(0xc003, { 0xe, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9b99);
        EXPECT(gbc.pc(), 0xc005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc003), 0xe);
        EXPECT(gbc.readMem(0xc004), 0xc);
        // 0E 02EA
        gbc.setState(0x3e50, 0xf312, 0xea10, 0xbb24, 0x2487, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0x3e50, { 0xe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf312);
        EXPECT(gbc.pc(), 0x3e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02EB
        gbc.setState(0x7761, 0x76b4, 0x4dd0, 0x9272, 0xf62a, 0xe2b2, 0x1, 0x0);
        gbc.writeMem(0x7761, { 0xe, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x76b4);
        EXPECT(gbc.pc(), 0x7763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02EC
        gbc.setState(0x82b4, 0x5d93, 0x5b00, 0x75ba, 0x967b, 0x5ed1, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5d93);
        EXPECT(gbc.pc(), 0x82b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b4), 0xe);
        EXPECT(gbc.readMem(0x82b5), 0x57);
        // 0E 02ED
        gbc.setState(0x7744, 0xc8bb, 0xa000, 0x8b51, 0x3b42, 0x83f9, 0x1, 0x0);
        gbc.writeMem(0x7744, { 0xe, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc8bb);
        EXPECT(gbc.pc(), 0x7746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02EE
        gbc.setState(0x155f, 0x7afc, 0x73d0, 0x3025, 0x2092, 0x4e3b, 0x0, 0x0);
        gbc.writeMem(0x155f, { 0xe, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7afc);
        EXPECT(gbc.pc(), 0x1561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 02EF
        gbc.setState(0xdf17, 0xd19f, 0x1f20, 0x3ca8, 0xffd6, 0xfa46, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0xe, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd19f);
        EXPECT(gbc.pc(), 0xdf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf17), 0xe);
        EXPECT(gbc.readMem(0xdf18), 0x11);
        // 0E 02F0
        gbc.setState(0xb7d9, 0x7451, 0x6b00, 0xc93, 0x8fda, 0xcc51, 0x1, 0x0);
        gbc.writeMem(0xb7d9, { 0xe, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7451);
        EXPECT(gbc.pc(), 0xb7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d9), 0xe);
        EXPECT(gbc.readMem(0xb7da), 0xd8);
        // 0E 02F1
        gbc.setState(0xab66, 0x3126, 0x1240, 0xf0bb, 0x9780, 0x5f10, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0xe, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3126);
        EXPECT(gbc.pc(), 0xab68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab66), 0xe);
        EXPECT(gbc.readMem(0xab67), 0x2e);
        // 0E 02F2
        gbc.setState(0x9ec9, 0x484a, 0x6570, 0xf62b, 0xdf9a, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0x9ec9, { 0xe, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x484a);
        EXPECT(gbc.pc(), 0x9ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec9), 0xe);
        EXPECT(gbc.readMem(0x9eca), 0xab);
        // 0E 02F3
        gbc.setState(0x9fca, 0x24f0, 0x2860, 0x9a33, 0x8008, 0xfd52, 0x0, 0x1);
        gbc.writeMem(0x9fca, { 0xe, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24f0);
        EXPECT(gbc.pc(), 0x9fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fca), 0xe);
        EXPECT(gbc.readMem(0x9fcb), 0x4a);
        // 0E 02F4
        gbc.setState(0x12c, 0xbf30, 0x6670, 0x145a, 0x1b49, 0x7ae0, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbf30);
        EXPECT(gbc.pc(), 0x12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02F5
        gbc.setState(0xac54, 0xa7e5, 0x11f0, 0x5097, 0x47d4, 0x3829, 0x1, 0x1);
        gbc.writeMem(0xac54, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa7e5);
        EXPECT(gbc.pc(), 0xac56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac54), 0xe);
        EXPECT(gbc.readMem(0xac55), 0xe9);
        // 0E 02F6
        gbc.setState(0x43a2, 0xa757, 0x81c0, 0x3ff7, 0x9dba, 0x9a0c, 0x0, 0x1);
        gbc.writeMem(0x43a2, { 0xe, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa757);
        EXPECT(gbc.pc(), 0x43a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02F7
        gbc.setState(0x272, 0xf896, 0xcb70, 0x8842, 0x1759, 0x3b30, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf896);
        EXPECT(gbc.pc(), 0x274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02F8
        gbc.setState(0x577, 0x9d5, 0x4d30, 0x7699, 0x5fca, 0xcc1e, 0x0, 0x0);
        gbc.writeMem(0x577, { 0xe, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9d5);
        EXPECT(gbc.pc(), 0x579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02F9
        gbc.setState(0xa5ce, 0x800a, 0xc250, 0x2a89, 0x1cfa, 0xb252, 0x1, 0x0);
        gbc.writeMem(0xa5ce, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x800a);
        EXPECT(gbc.pc(), 0xa5d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ce), 0xe);
        EXPECT(gbc.readMem(0xa5cf), 0xff);
        // 0E 02FA
        gbc.setState(0x27ff, 0xf27d, 0x22a0, 0xeced, 0xcacc, 0x70b0, 0x0, 0x1);
        gbc.writeMem(0x27ff, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf27d);
        EXPECT(gbc.pc(), 0x2801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02FB
        gbc.setState(0x52a2, 0x7eaa, 0x4920, 0x777e, 0xc202, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0x52a2, { 0xe, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7eaa);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 02FC
        gbc.setState(0x30bd, 0xbd04, 0xb680, 0xa719, 0x5a54, 0x32f4, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbd04);
        EXPECT(gbc.pc(), 0x30bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 02FD
        gbc.setState(0xd868, 0x6912, 0x7b60, 0xa5d9, 0x7128, 0xc145, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0xe, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6912);
        EXPECT(gbc.pc(), 0xd86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd868), 0xe);
        EXPECT(gbc.readMem(0xd869), 0x94);
        // 0E 02FE
        gbc.setState(0x739e, 0xb0c5, 0x83b0, 0x6196, 0xeabf, 0x14aa, 0x1, 0x0);
        gbc.writeMem(0x739e, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb0c5);
        EXPECT(gbc.pc(), 0x73a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 02FF
        gbc.setState(0x66cf, 0x90e4, 0x8e90, 0xca7d, 0x1da2, 0xfc35, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0xe, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x90e4);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0300
        gbc.setState(0x1b42, 0xed4, 0xb3d0, 0x533, 0x5124, 0x261b, 0x0, 0x0);
        gbc.writeMem(0x1b42, { 0xe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xed4);
        EXPECT(gbc.pc(), 0x1b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0301
        gbc.setState(0xcfa, 0xeecd, 0xd870, 0xc89a, 0x1416, 0x43db, 0x1, 0x1);
        gbc.writeMem(0xcfa, { 0xe, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xeecd);
        EXPECT(gbc.pc(), 0xcfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0302
        gbc.setState(0x121b, 0x9473, 0xf670, 0xe5bf, 0x9c05, 0xe768, 0x0, 0x1);
        gbc.writeMem(0x121b, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9473);
        EXPECT(gbc.pc(), 0x121d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0303
        gbc.setState(0x179e, 0x3888, 0x53a0, 0xcb2c, 0x8976, 0xe306, 0x1, 0x0);
        gbc.writeMem(0x179e, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3888);
        EXPECT(gbc.pc(), 0x17a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0304
        gbc.setState(0x725d, 0xb39d, 0xb920, 0x6f5, 0x2429, 0x43dd, 0x1, 0x0);
        gbc.writeMem(0x725d, { 0xe, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb39d);
        EXPECT(gbc.pc(), 0x725f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0305
        gbc.setState(0x7c61, 0xcd1a, 0xc210, 0xdc6a, 0x37a4, 0x9a1e, 0x1, 0x1);
        gbc.writeMem(0x7c61, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcd1a);
        EXPECT(gbc.pc(), 0x7c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0306
        gbc.setState(0x91e1, 0xb9e, 0x97c0, 0x88c1, 0x7ff4, 0xce09, 0x1, 0x1);
        gbc.writeMem(0x91e1, { 0xe, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb9e);
        EXPECT(gbc.pc(), 0x91e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e1), 0xe);
        EXPECT(gbc.readMem(0x91e2), 0x86);
        // 0E 0307
        gbc.setState(0x1096, 0x6ee1, 0xe050, 0xc09c, 0x91, 0x8dca, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0xe, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6ee1);
        EXPECT(gbc.pc(), 0x1098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0308
        gbc.setState(0xd1de, 0xdc7e, 0x7a90, 0xc16e, 0xb53a, 0x4b30, 0x1, 0x0);
        gbc.writeMem(0xd1de, { 0xe, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdc7e);
        EXPECT(gbc.pc(), 0xd1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1de), 0xe);
        EXPECT(gbc.readMem(0xd1df), 0xfb);
        // 0E 0309
        gbc.setState(0x8ea6, 0x3cd4, 0x9c40, 0x7245, 0x7120, 0xeec4, 0x0, 0x0);
        gbc.writeMem(0x8ea6, { 0xe, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3cd4);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea6), 0xe);
        EXPECT(gbc.readMem(0x8ea7), 0xfb);
        // 0E 030A
        gbc.setState(0xc275, 0x2a0e, 0xf550, 0xf86d, 0x9ac8, 0x4ed9, 0x1, 0x1);
        gbc.writeMem(0xc275, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2a0e);
        EXPECT(gbc.pc(), 0xc277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc275), 0xe);
        EXPECT(gbc.readMem(0xc276), 0x49);
        // 0E 030B
        gbc.setState(0x94e4, 0xd4fd, 0x7830, 0x4575, 0x425f, 0x4937, 0x1, 0x1);
        gbc.writeMem(0x94e4, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd4fd);
        EXPECT(gbc.pc(), 0x94e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e4), 0xe);
        EXPECT(gbc.readMem(0x94e5), 0xa6);
        // 0E 030D
        gbc.setState(0xdeee, 0x6b6d, 0x7990, 0x6f1d, 0xbcf2, 0x3e5e, 0x0, 0x1);
        gbc.writeMem(0xdeee, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6b6d);
        EXPECT(gbc.pc(), 0xdef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeee), 0xe);
        EXPECT(gbc.readMem(0xdeef), 0xc1);
        // 0E 030E
        gbc.setState(0x7425, 0x76cd, 0x2d0, 0xc1e3, 0x1433, 0xb4ba, 0x1, 0x0);
        gbc.writeMem(0x7425, { 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0x7427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 030F
        gbc.setState(0xe1e8, 0x3e0e, 0x7930, 0x77c2, 0x7fed, 0x9640, 0x0, 0x1);
        gbc.writeMem(0xe1e8, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3e0e);
        EXPECT(gbc.pc(), 0xe1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e8), 0xe);
        EXPECT(gbc.readMem(0xe1e9), 0xa5);
        // 0E 0310
        gbc.setState(0x4a12, 0xfaf8, 0x2950, 0x85a2, 0x5670, 0x9318, 0x0, 0x1);
        gbc.writeMem(0x4a12, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfaf8);
        EXPECT(gbc.pc(), 0x4a14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0311
        gbc.setState(0x955c, 0x67e1, 0x1a60, 0x6217, 0xbcf5, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0x955c, { 0xe, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x67e1);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955c), 0xe);
        EXPECT(gbc.readMem(0x955d), 0x22);
        // 0E 0312
        gbc.setState(0x9353, 0x78ed, 0xf70, 0x2c18, 0xb155, 0xd7d7, 0x0, 0x0);
        gbc.writeMem(0x9353, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x78ed);
        EXPECT(gbc.pc(), 0x9355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9353), 0xe);
        EXPECT(gbc.readMem(0x9354), 0xc4);
        // 0E 0313
        gbc.setState(0x9e3, 0x9b82, 0x55e0, 0x68f4, 0x25e0, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0x9e3, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9b82);
        EXPECT(gbc.pc(), 0x9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0314
        gbc.setState(0x3be2, 0xf2e7, 0x7970, 0x5da0, 0x3c3d, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0x3be2, { 0xe, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0x3be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0315
        gbc.setState(0x3995, 0xf60c, 0x1f20, 0x11a5, 0x145d, 0x3bc3, 0x0, 0x0);
        gbc.writeMem(0x3995, { 0xe, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0x3997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0316
        gbc.setState(0xe948, 0x5e0a, 0xdba0, 0x9ca3, 0x509c, 0x129d, 0x0, 0x0);
        gbc.writeMem(0xe948, { 0xe, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5e0a);
        EXPECT(gbc.pc(), 0xe94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe948), 0xe);
        EXPECT(gbc.readMem(0xe949), 0x9f);
        // 0E 0317
        gbc.setState(0x75da, 0x1a2f, 0x9b20, 0xfb13, 0x83f2, 0x65eb, 0x0, 0x1);
        gbc.writeMem(0x75da, { 0xe, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1a2f);
        EXPECT(gbc.pc(), 0x75dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0318
        gbc.setState(0xe781, 0x4398, 0x68a0, 0x38cc, 0x6d0d, 0x5d9a, 0x1, 0x1);
        gbc.writeMem(0xe781, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4398);
        EXPECT(gbc.pc(), 0xe783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe781), 0xe);
        EXPECT(gbc.readMem(0xe782), 0x1e);
        // 0E 0319
        gbc.setState(0xd272, 0xe82e, 0x9f90, 0xeb20, 0xdad, 0xea54, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0xe, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe82e);
        EXPECT(gbc.pc(), 0xd274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd272), 0xe);
        EXPECT(gbc.readMem(0xd273), 0x6);
        // 0E 031A
        gbc.setState(0x4c05, 0x5064, 0x6110, 0x1bb1, 0x22a8, 0x790c, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5064);
        EXPECT(gbc.pc(), 0x4c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 031C
        gbc.setState(0xe140, 0x3add, 0x5f80, 0x7e35, 0x29dd, 0x5505, 0x0, 0x1);
        gbc.writeMem(0xe140, { 0xe, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3add);
        EXPECT(gbc.pc(), 0xe142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe140), 0xe);
        EXPECT(gbc.readMem(0xe141), 0xa3);
        // 0E 031D
        gbc.setState(0xde7d, 0x82c1, 0x3b80, 0xf72f, 0x60c8, 0x4b69, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0xe, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x82c1);
        EXPECT(gbc.pc(), 0xde7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7d), 0xe);
        EXPECT(gbc.readMem(0xde7e), 0x75);
        // 0E 031E
        gbc.setState(0x7ee, 0xce27, 0xb1e0, 0xf335, 0xd252, 0x9e13, 0x0, 0x1);
        gbc.writeMem(0x7ee, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xce27);
        EXPECT(gbc.pc(), 0x7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 031F
        gbc.setState(0x471d, 0xe8a5, 0x700, 0x763, 0xf454, 0xe796, 0x0, 0x0);
        gbc.writeMem(0x471d, { 0xe, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe8a5);
        EXPECT(gbc.pc(), 0x471f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0320
        gbc.setState(0x48db, 0x5cb5, 0x5a60, 0xf005, 0xa0ab, 0xcf98, 0x0, 0x0);
        gbc.writeMem(0x48db, { 0xe, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5cb5);
        EXPECT(gbc.pc(), 0x48dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0321
        gbc.setState(0x9255, 0x338, 0x9500, 0xaf50, 0x24b2, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0x9255, { 0xe, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x338);
        EXPECT(gbc.pc(), 0x9257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9255), 0xe);
        EXPECT(gbc.readMem(0x9256), 0x9b);
        // 0E 0322
        gbc.setState(0x10e9, 0xdd99, 0x3080, 0x3bcf, 0x7cf7, 0xac7c, 0x1, 0x1);
        gbc.writeMem(0x10e9, { 0xe, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdd99);
        EXPECT(gbc.pc(), 0x10eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0323
        gbc.setState(0x23c4, 0x4b59, 0x3770, 0x37e2, 0xdad8, 0x8fe7, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0xe, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4b59);
        EXPECT(gbc.pc(), 0x23c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0324
        gbc.setState(0x741a, 0x8788, 0xdc50, 0xfb27, 0xbb73, 0x90b2, 0x0, 0x0);
        gbc.writeMem(0x741a, { 0xe, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8788);
        EXPECT(gbc.pc(), 0x741c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0325
        gbc.setState(0xa631, 0x3418, 0x5b20, 0x40e7, 0x4c76, 0x94c0, 0x0, 0x0);
        gbc.writeMem(0xa631, { 0xe, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3418);
        EXPECT(gbc.pc(), 0xa633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa631), 0xe);
        EXPECT(gbc.readMem(0xa632), 0x9d);
        // 0E 0326
        gbc.setState(0xcae, 0x69b5, 0xd620, 0x7953, 0xb4e1, 0x450c, 0x1, 0x0);
        gbc.writeMem(0xcae, { 0xe, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x69b5);
        EXPECT(gbc.pc(), 0xcb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0327
        gbc.setState(0x7e7f, 0x141d, 0x3860, 0x5b42, 0xeda8, 0x33f5, 0x0, 0x1);
        gbc.writeMem(0x7e7f, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x141d);
        EXPECT(gbc.pc(), 0x7e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0328
        gbc.setState(0x9721, 0x669b, 0xab90, 0x4014, 0x6c94, 0xe81e, 0x1, 0x1);
        gbc.writeMem(0x9721, { 0xe, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x669b);
        EXPECT(gbc.pc(), 0x9723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9721), 0xe);
        EXPECT(gbc.readMem(0x9722), 0x12);
        // 0E 032A
        gbc.setState(0x146e, 0x63a5, 0x2b10, 0x6558, 0x9dcd, 0x323, 0x0, 0x0);
        gbc.writeMem(0x146e, { 0xe, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0x1470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 032B
        gbc.setState(0x7c4, 0x3ef7, 0xbcd0, 0xd450, 0x6775, 0x248c, 0x0, 0x1);
        gbc.writeMem(0x7c4, { 0xe, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3ef7);
        EXPECT(gbc.pc(), 0x7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 032C
        gbc.setState(0x2e41, 0x3b0, 0x95f0, 0xf80d, 0x919a, 0x3d51, 0x0, 0x1);
        gbc.writeMem(0x2e41, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0x2e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 032D
        gbc.setState(0xbd15, 0x6c3e, 0xac40, 0x4aa4, 0x6b90, 0x61b7, 0x0, 0x1);
        gbc.writeMem(0xbd15, { 0xe, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6c3e);
        EXPECT(gbc.pc(), 0xbd17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd15), 0xe);
        EXPECT(gbc.readMem(0xbd16), 0x16);
        // 0E 032E
        gbc.setState(0x20ca, 0x1c0a, 0xb710, 0xaa53, 0xdf39, 0x31bc, 0x0, 0x0);
        gbc.writeMem(0x20ca, { 0xe, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0x20cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 032F
        gbc.setState(0xa3ed, 0xba94, 0xaf00, 0xddb1, 0xf26e, 0x2808, 0x0, 0x1);
        gbc.writeMem(0xa3ed, { 0xe, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xba94);
        EXPECT(gbc.pc(), 0xa3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ed), 0xe);
        EXPECT(gbc.readMem(0xa3ee), 0x5d);
        // 0E 0330
        gbc.setState(0x7158, 0xdc50, 0x9ed0, 0xbad5, 0x148b, 0xb17e, 0x1, 0x0);
        gbc.writeMem(0x7158, { 0xe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdc50);
        EXPECT(gbc.pc(), 0x715a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0332
        gbc.setState(0x1bd8, 0x86c9, 0x7270, 0xc403, 0x993a, 0xfb6d, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0xe, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x86c9);
        EXPECT(gbc.pc(), 0x1bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0333
        gbc.setState(0x751a, 0x7871, 0x7d50, 0xb6ed, 0xada2, 0x4a5d, 0x0, 0x0);
        gbc.writeMem(0x751a, { 0xe, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7871);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0334
        gbc.setState(0xa14e, 0xcefd, 0x17a0, 0x3ff0, 0xed12, 0xa2b8, 0x1, 0x0);
        gbc.writeMem(0xa14e, { 0xe, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcefd);
        EXPECT(gbc.pc(), 0xa150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14e), 0xe);
        EXPECT(gbc.readMem(0xa14f), 0x37);
        // 0E 0335
        gbc.setState(0xcf86, 0xcaad, 0xe730, 0xeaef, 0xd806, 0xa1b5, 0x0, 0x1);
        gbc.writeMem(0xcf86, { 0xe, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcaad);
        EXPECT(gbc.pc(), 0xcf88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf86), 0xe);
        EXPECT(gbc.readMem(0xcf87), 0x58);
        // 0E 0336
        gbc.setState(0x2de1, 0x70a8, 0xdc70, 0x973a, 0xd5a0, 0x8fe4, 0x0, 0x1);
        gbc.writeMem(0x2de1, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x70a8);
        EXPECT(gbc.pc(), 0x2de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0337
        gbc.setState(0x4e0f, 0xe31b, 0xbca0, 0x79a8, 0x6bf0, 0x5287, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0xe, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x4e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0339
        gbc.setState(0x72dd, 0x12da, 0xd170, 0x2784, 0xe0a7, 0x6feb, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xe, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x12da);
        EXPECT(gbc.pc(), 0x72df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 033A
        gbc.setState(0x8722, 0xad9e, 0xbdc0, 0x6c02, 0xdd93, 0x7441, 0x0, 0x0);
        gbc.writeMem(0x8722, { 0xe, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xad9e);
        EXPECT(gbc.pc(), 0x8724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8722), 0xe);
        EXPECT(gbc.readMem(0x8723), 0xfe);
        // 0E 033B
        gbc.setState(0xb15d, 0xb056, 0x390, 0x535, 0x7ffc, 0x3224, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb056);
        EXPECT(gbc.pc(), 0xb15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15d), 0xe);
        EXPECT(gbc.readMem(0xb15e), 0xf6);
        // 0E 033C
        gbc.setState(0xf7c, 0xc93e, 0xbd90, 0xadfe, 0x7c58, 0x8615, 0x1, 0x0);
        gbc.writeMem(0xf7c, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc93e);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 033D
        gbc.setState(0xcafb, 0x287, 0x900, 0x7be, 0xd4a1, 0x7a57, 0x1, 0x0);
        gbc.writeMem(0xcafb, { 0xe, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x287);
        EXPECT(gbc.pc(), 0xcafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafb), 0xe);
        EXPECT(gbc.readMem(0xcafc), 0x81);
        // 0E 033E
        gbc.setState(0x369f, 0x1fd1, 0xc360, 0xbd77, 0x436d, 0x9cb9, 0x0, 0x1);
        gbc.writeMem(0x369f, { 0xe, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1fd1);
        EXPECT(gbc.pc(), 0x36a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 033F
        gbc.setState(0x2eda, 0xca9a, 0x2d10, 0x45f6, 0x5aec, 0x7366, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xca9a);
        EXPECT(gbc.pc(), 0x2edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0340
        gbc.setState(0x3951, 0x83c, 0x9000, 0x882f, 0xac4e, 0x4c84, 0x0, 0x1);
        gbc.writeMem(0x3951, { 0xe, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x83c);
        EXPECT(gbc.pc(), 0x3953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0341
        gbc.setState(0x9208, 0x51d9, 0xbaf0, 0xbf17, 0x3fa2, 0x4b70, 0x1, 0x0);
        gbc.writeMem(0x9208, { 0xe, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x51d9);
        EXPECT(gbc.pc(), 0x920a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9208), 0xe);
        EXPECT(gbc.readMem(0x9209), 0x6c);
        // 0E 0342
        gbc.setState(0xa410, 0xb882, 0x9f90, 0x2092, 0x22b9, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0xa410, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb882);
        EXPECT(gbc.pc(), 0xa412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa410), 0xe);
        EXPECT(gbc.readMem(0xa411), 0x74);
        // 0E 0343
        gbc.setState(0x18c4, 0x4290, 0x96a0, 0x232a, 0x2710, 0x1777, 0x0, 0x0);
        gbc.writeMem(0x18c4, { 0xe, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4290);
        EXPECT(gbc.pc(), 0x18c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0344
        gbc.setState(0x9e0, 0xb602, 0xe960, 0x1807, 0x73bb, 0xe877, 0x1, 0x0);
        gbc.writeMem(0x9e0, { 0xe, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb602);
        EXPECT(gbc.pc(), 0x9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0345
        gbc.setState(0x94f, 0x4b2a, 0x500, 0x752e, 0x16df, 0xc8ef, 0x1, 0x0);
        gbc.writeMem(0x94f, { 0xe, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4b2a);
        EXPECT(gbc.pc(), 0x951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0346
        gbc.setState(0x19c, 0xf37b, 0x71a0, 0xe1ff, 0x55cd, 0xad5, 0x0, 0x0);
        gbc.writeMem(0x19c, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf37b);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0347
        gbc.setState(0xa50b, 0xfd35, 0x9670, 0xed3f, 0xeef0, 0x9605, 0x1, 0x1);
        gbc.writeMem(0xa50b, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfd35);
        EXPECT(gbc.pc(), 0xa50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50b), 0xe);
        EXPECT(gbc.readMem(0xa50c), 0x8b);
        // 0E 0348
        gbc.setState(0x91e6, 0x289d, 0x45d0, 0xb689, 0xec00, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x91e6, { 0xe, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x289d);
        EXPECT(gbc.pc(), 0x91e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e6), 0xe);
        EXPECT(gbc.readMem(0x91e7), 0x64);
        // 0E 0349
        gbc.setState(0xc5f2, 0xf670, 0xb7e0, 0x8e6, 0xe02, 0x3544, 0x0, 0x1);
        gbc.writeMem(0xc5f2, { 0xe, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf670);
        EXPECT(gbc.pc(), 0xc5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f2), 0xe);
        EXPECT(gbc.readMem(0xc5f3), 0x44);
        // 0E 034A
        gbc.setState(0xd7b2, 0x56c, 0xf8c0, 0x955e, 0xe0cd, 0x52bd, 0x0, 0x0);
        gbc.writeMem(0xd7b2, { 0xe, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x56c);
        EXPECT(gbc.pc(), 0xd7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b2), 0xe);
        EXPECT(gbc.readMem(0xd7b3), 0xcd);
        // 0E 034B
        gbc.setState(0x23d1, 0x4c23, 0x47a0, 0x7377, 0xf60c, 0x3b7a, 0x0, 0x0);
        gbc.writeMem(0x23d1, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4c23);
        EXPECT(gbc.pc(), 0x23d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 034C
        gbc.setState(0x388e, 0x28b0, 0xec20, 0xa015, 0x3d1d, 0x8b9e, 0x0, 0x0);
        gbc.writeMem(0x388e, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0x3890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 034D
        gbc.setState(0x2308, 0xc7ce, 0xb6e0, 0x2fed, 0xa2ae, 0xb49f, 0x1, 0x0);
        gbc.writeMem(0x2308, { 0xe, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc7ce);
        EXPECT(gbc.pc(), 0x230a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 034E
        gbc.setState(0x738, 0xc9fa, 0x96b0, 0xb428, 0xb3c8, 0xa809, 0x0, 0x0);
        gbc.writeMem(0x738, { 0xe, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc9fa);
        EXPECT(gbc.pc(), 0x73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 034F
        gbc.setState(0xef3c, 0x9dc4, 0xf5a0, 0xe8b7, 0xc735, 0x45b5, 0x0, 0x1);
        gbc.writeMem(0xef3c, { 0xe, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9dc4);
        EXPECT(gbc.pc(), 0xef3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3c), 0xe);
        EXPECT(gbc.readMem(0xef3d), 0xa5);
        // 0E 0350
        gbc.setState(0x9099, 0xf1c4, 0xf420, 0x42a9, 0x98f4, 0x96c5, 0x0, 0x1);
        gbc.writeMem(0x9099, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf1c4);
        EXPECT(gbc.pc(), 0x909b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9099), 0xe);
        EXPECT(gbc.readMem(0x909a), 0x1e);
        // 0E 0351
        gbc.setState(0x3746, 0xd609, 0x7fa0, 0xdb25, 0xc348, 0x35ff, 0x1, 0x1);
        gbc.writeMem(0x3746, { 0xe, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd609);
        EXPECT(gbc.pc(), 0x3748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0352
        gbc.setState(0x2f49, 0xc733, 0xb170, 0xf290, 0xd4e0, 0x2911, 0x0, 0x1);
        gbc.writeMem(0x2f49, { 0xe, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc733);
        EXPECT(gbc.pc(), 0x2f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0353
        gbc.setState(0xa309, 0x13e3, 0xc130, 0x17c5, 0x4421, 0x8ebb, 0x1, 0x1);
        gbc.writeMem(0xa309, { 0xe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x13e3);
        EXPECT(gbc.pc(), 0xa30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa309), 0xe);
        EXPECT(gbc.readMem(0xa30a), 0x1e);
        // 0E 0354
        gbc.setState(0xc710, 0x9409, 0x19c0, 0x10b8, 0xeed6, 0xf2bc, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0xe, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9409);
        EXPECT(gbc.pc(), 0xc712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc710), 0xe);
        EXPECT(gbc.readMem(0xc711), 0x94);
        // 0E 0355
        gbc.setState(0x61ff, 0xb5e7, 0x7aa0, 0x666e, 0xe04d, 0x34f6, 0x1, 0x0);
        gbc.writeMem(0x61ff, { 0xe, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb5e7);
        EXPECT(gbc.pc(), 0x6201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0356
        gbc.setState(0x6402, 0x39c7, 0xfda0, 0xd1d0, 0xd4fa, 0x1277, 0x0, 0x0);
        gbc.writeMem(0x6402, { 0xe, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x39c7);
        EXPECT(gbc.pc(), 0x6404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0357
        gbc.setState(0x5fb4, 0x4b9a, 0xf5c0, 0xbd18, 0x7cd, 0xaed7, 0x0, 0x0);
        gbc.writeMem(0x5fb4, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4b9a);
        EXPECT(gbc.pc(), 0x5fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0358
        gbc.setState(0xd792, 0xccf1, 0x6600, 0xb0b1, 0x8049, 0x35a0, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0xe, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xccf1);
        EXPECT(gbc.pc(), 0xd794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd792), 0xe);
        EXPECT(gbc.readMem(0xd793), 0xaf);
        // 0E 0359
        gbc.setState(0x409e, 0x9f0f, 0x8e40, 0xa83c, 0xf41a, 0x901, 0x0, 0x0);
        gbc.writeMem(0x409e, { 0xe, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9f0f);
        EXPECT(gbc.pc(), 0x40a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 035A
        gbc.setState(0x950c, 0x43fc, 0x3790, 0x67dd, 0xa0a8, 0x1c11, 0x1, 0x1);
        gbc.writeMem(0x950c, { 0xe, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x43fc);
        EXPECT(gbc.pc(), 0x950e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950c), 0xe);
        EXPECT(gbc.readMem(0x950d), 0xd3);
        // 0E 035B
        gbc.setState(0x6fd2, 0x54ea, 0x3820, 0xd51f, 0x92c1, 0xa3d5, 0x1, 0x1);
        gbc.writeMem(0x6fd2, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x54ea);
        EXPECT(gbc.pc(), 0x6fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 035C
        gbc.setState(0x1f33, 0x7938, 0x1e50, 0xf9f6, 0x938d, 0x5e23, 0x1, 0x0);
        gbc.writeMem(0x1f33, { 0xe, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7938);
        EXPECT(gbc.pc(), 0x1f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 035D
        gbc.setState(0x2855, 0xea54, 0xf110, 0xeb2d, 0x4915, 0xecc1, 0x0, 0x0);
        gbc.writeMem(0x2855, { 0xe, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xea54);
        EXPECT(gbc.pc(), 0x2857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 035E
        gbc.setState(0x520c, 0x9e44, 0x5a80, 0x7bd6, 0x590e, 0x5e35, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0xe, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9e44);
        EXPECT(gbc.pc(), 0x520e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 035F
        gbc.setState(0x3018, 0xd5b1, 0xe160, 0x6a3b, 0x77bb, 0x538, 0x1, 0x1);
        gbc.writeMem(0x3018, { 0xe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd5b1);
        EXPECT(gbc.pc(), 0x301a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0360
        gbc.setState(0x1100, 0x99d5, 0x1c0, 0xc16e, 0xabd9, 0xc531, 0x1, 0x1);
        gbc.writeMem(0x1100, { 0xe, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x99d5);
        EXPECT(gbc.pc(), 0x1102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0361
        gbc.setState(0x786e, 0x72cd, 0x7d50, 0x328b, 0xd3d1, 0xa19, 0x0, 0x0);
        gbc.writeMem(0x786e, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x72cd);
        EXPECT(gbc.pc(), 0x7870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0362
        gbc.setState(0x4577, 0x643f, 0xcbf0, 0xba29, 0x57db, 0x9ff4, 0x1, 0x0);
        gbc.writeMem(0x4577, { 0xe, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x643f);
        EXPECT(gbc.pc(), 0x4579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0363
        gbc.setState(0xb82c, 0x8fc7, 0xa1b0, 0x99a4, 0xea2b, 0x666, 0x0, 0x0);
        gbc.writeMem(0xb82c, { 0xe, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8fc7);
        EXPECT(gbc.pc(), 0xb82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82c), 0xe);
        EXPECT(gbc.readMem(0xb82d), 0x12);
        // 0E 0364
        gbc.setState(0xcb6d, 0xaff8, 0x9610, 0x1530, 0xec82, 0x267b, 0x1, 0x0);
        gbc.writeMem(0xcb6d, { 0xe, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaff8);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6d), 0xe);
        EXPECT(gbc.readMem(0xcb6e), 0xa9);
        // 0E 0365
        gbc.setState(0xdd58, 0xc498, 0x8f80, 0x8389, 0x3be5, 0x7505, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0xe, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc498);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd58), 0xe);
        EXPECT(gbc.readMem(0xdd59), 0xf8);
        // 0E 0366
        gbc.setState(0xd711, 0x8516, 0x8d70, 0xd0f8, 0x781c, 0x26e0, 0x1, 0x0);
        gbc.writeMem(0xd711, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8516);
        EXPECT(gbc.pc(), 0xd713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd711), 0xe);
        EXPECT(gbc.readMem(0xd712), 0x85);
        // 0E 0367
        gbc.setState(0xcffc, 0xf20b, 0x8a60, 0x8495, 0x7847, 0x274d, 0x1, 0x1);
        gbc.writeMem(0xcffc, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf20b);
        EXPECT(gbc.pc(), 0xcffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffc), 0xe);
        EXPECT(gbc.readMem(0xcffd), 0xf9);
        // 0E 0368
        gbc.setState(0xe02c, 0xc7bf, 0xe6c0, 0x4f29, 0x3b55, 0xf437, 0x0, 0x1);
        gbc.writeMem(0xe02c, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc7bf);
        EXPECT(gbc.pc(), 0xe02e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02c), 0xe);
        EXPECT(gbc.readMem(0xe02d), 0xc4);
        // 0E 0369
        gbc.setState(0x590c, 0xb701, 0x8ef0, 0xb782, 0xdeaa, 0xf233, 0x0, 0x0);
        gbc.writeMem(0x590c, { 0xe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb701);
        EXPECT(gbc.pc(), 0x590e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 036A
        gbc.setState(0x842b, 0x7b8d, 0x9910, 0xfc8c, 0x2a64, 0xaa02, 0x1, 0x0);
        gbc.writeMem(0x842b, { 0xe, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7b8d);
        EXPECT(gbc.pc(), 0x842d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842b), 0xe);
        EXPECT(gbc.readMem(0x842c), 0x43);
        // 0E 036B
        gbc.setState(0x3987, 0x7c46, 0x9740, 0xe98f, 0x5e83, 0x6745, 0x1, 0x1);
        gbc.writeMem(0x3987, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7c46);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 036C
        gbc.setState(0x9880, 0x679f, 0xc230, 0xbac8, 0x72db, 0x6584, 0x0, 0x0);
        gbc.writeMem(0x9880, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x9882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9880), 0xe);
        EXPECT(gbc.readMem(0x9881), 0xa8);
        // 0E 036D
        gbc.setState(0x424a, 0xa612, 0xd410, 0x4398, 0x6fe6, 0xe9d2, 0x0, 0x1);
        gbc.writeMem(0x424a, { 0xe, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa612);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 036E
        gbc.setState(0x67a7, 0x97b6, 0xf7d0, 0x985b, 0xfc19, 0xd970, 0x0, 0x0);
        gbc.writeMem(0x67a7, { 0xe, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x97b6);
        EXPECT(gbc.pc(), 0x67a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 036F
        gbc.setState(0x6c72, 0x3b92, 0xb040, 0x5dbc, 0x983, 0xec34, 0x1, 0x0);
        gbc.writeMem(0x6c72, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3b92);
        EXPECT(gbc.pc(), 0x6c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0370
        gbc.setState(0x2760, 0xaa71, 0xb3b0, 0xd172, 0x3d53, 0xbafb, 0x1, 0x0);
        gbc.writeMem(0x2760, { 0xe, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaa71);
        EXPECT(gbc.pc(), 0x2762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0371
        gbc.setState(0x38c0, 0x198f, 0xfb70, 0x5d73, 0xf0b3, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0xe, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x198f);
        EXPECT(gbc.pc(), 0x38c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0372
        gbc.setState(0x9a67, 0xd8d, 0x5180, 0xf9da, 0x8122, 0xe226, 0x0, 0x0);
        gbc.writeMem(0x9a67, { 0xe, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd8d);
        EXPECT(gbc.pc(), 0x9a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a67), 0xe);
        EXPECT(gbc.readMem(0x9a68), 0x7f);
        // 0E 0374
        gbc.setState(0x2c, 0x41d7, 0xa200, 0x3860, 0x5634, 0x4c35, 0x0, 0x0);
        gbc.writeMem(0x2c, { 0xe, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x41d7);
        EXPECT(gbc.pc(), 0x2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0375
        gbc.setState(0x8c6c, 0x7d91, 0x9af0, 0x843c, 0xf5fc, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x8c6c, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7d91);
        EXPECT(gbc.pc(), 0x8c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c6c), 0xe);
        EXPECT(gbc.readMem(0x8c6d), 0xf4);
        // 0E 0376
        gbc.setState(0xb096, 0x8fb, 0xd8f0, 0xe970, 0xbaeb, 0x32d, 0x0, 0x0);
        gbc.writeMem(0xb096, { 0xe, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0xb098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb096), 0xe);
        EXPECT(gbc.readMem(0xb097), 0xec);
        // 0E 0377
        gbc.setState(0x8b32, 0xd04, 0xc2e0, 0xc417, 0xddcd, 0xfd82, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd04);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b32), 0xe);
        EXPECT(gbc.readMem(0x8b33), 0xb2);
        // 0E 0378
        gbc.setState(0x4e56, 0xf1d1, 0xde20, 0xc58e, 0x98bf, 0xdd66, 0x0, 0x1);
        gbc.writeMem(0x4e56, { 0xe, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf1d1);
        EXPECT(gbc.pc(), 0x4e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0379
        gbc.setState(0x7172, 0xae5d, 0x560, 0x6df9, 0x6a44, 0x96e5, 0x0, 0x1);
        gbc.writeMem(0x7172, { 0xe, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xae5d);
        EXPECT(gbc.pc(), 0x7174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 037A
        gbc.setState(0x8ec6, 0x5cc8, 0x8060, 0xcd40, 0x5c8e, 0xf952, 0x0, 0x0);
        gbc.writeMem(0x8ec6, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5cc8);
        EXPECT(gbc.pc(), 0x8ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec6), 0xe);
        EXPECT(gbc.readMem(0x8ec7), 0x65);
        // 0E 037B
        gbc.setState(0xddba, 0x7a95, 0x8c00, 0x6284, 0x3db2, 0x432a, 0x0, 0x1);
        gbc.writeMem(0xddba, { 0xe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7a95);
        EXPECT(gbc.pc(), 0xddbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddba), 0xe);
        EXPECT(gbc.readMem(0xddbb), 0x8a);
        // 0E 037C
        gbc.setState(0x9b95, 0xb952, 0xf580, 0xe61f, 0x9db4, 0xa8c3, 0x1, 0x0);
        gbc.writeMem(0x9b95, { 0xe, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb952);
        EXPECT(gbc.pc(), 0x9b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b95), 0xe);
        EXPECT(gbc.readMem(0x9b96), 0x91);
        // 0E 037D
        gbc.setState(0xcf19, 0x27c8, 0x1a70, 0xd771, 0x92d, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xe, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x27c8);
        EXPECT(gbc.pc(), 0xcf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf19), 0xe);
        EXPECT(gbc.readMem(0xcf1a), 0x49);
        // 0E 037E
        gbc.setState(0xb386, 0x3c40, 0xd320, 0xa0fc, 0xfa15, 0x90f, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0xe, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3c40);
        EXPECT(gbc.pc(), 0xb388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb386), 0xe);
        EXPECT(gbc.readMem(0xb387), 0x98);
        // 0E 037F
        gbc.setState(0xc241, 0x21f4, 0xebe0, 0xe841, 0xf89e, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0xc241, { 0xe, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x21f4);
        EXPECT(gbc.pc(), 0xc243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc241), 0xe);
        EXPECT(gbc.readMem(0xc242), 0xab);
        // 0E 0380
        gbc.setState(0x6af2, 0x68b0, 0x86a0, 0xe9d0, 0x16c0, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0x6af2, { 0xe, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x68b0);
        EXPECT(gbc.pc(), 0x6af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0381
        gbc.setState(0xbdf3, 0x5232, 0xd480, 0xf791, 0xea02, 0x347a, 0x1, 0x1);
        gbc.writeMem(0xbdf3, { 0xe, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5232);
        EXPECT(gbc.pc(), 0xbdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf3), 0xe);
        EXPECT(gbc.readMem(0xbdf4), 0x57);
        // 0E 0383
        gbc.setState(0x48a2, 0xb5d, 0x5880, 0x462c, 0xcda5, 0x46c6, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xe, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb5d);
        EXPECT(gbc.pc(), 0x48a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 0384
        gbc.setState(0x90f5, 0xf0c4, 0xddc0, 0x16a4, 0x2446, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x90f5, { 0xe, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf0c4);
        EXPECT(gbc.pc(), 0x90f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f5), 0xe);
        EXPECT(gbc.readMem(0x90f6), 0x48);
        // 0E 0385
        gbc.setState(0xdcd5, 0x2e99, 0x7ee0, 0x4d22, 0x2e07, 0x1877, 0x1, 0x0);
        gbc.writeMem(0xdcd5, { 0xe, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2e99);
        EXPECT(gbc.pc(), 0xdcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd5), 0xe);
        EXPECT(gbc.readMem(0xdcd6), 0xf0);
        // 0E 0386
        gbc.setState(0xb5d4, 0x6045, 0x4270, 0x9a4e, 0x9860, 0xf467, 0x0, 0x0);
        gbc.writeMem(0xb5d4, { 0xe, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0xb5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d4), 0xe);
        EXPECT(gbc.readMem(0xb5d5), 0x23);
        // 0E 0387
        gbc.setState(0xcbb7, 0xa71a, 0x2020, 0x39d8, 0x530e, 0x208, 0x0, 0x0);
        gbc.writeMem(0xcbb7, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa71a);
        EXPECT(gbc.pc(), 0xcbb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb7), 0xe);
        EXPECT(gbc.readMem(0xcbb8), 0xed);
        // 0E 0389
        gbc.setState(0x7f9, 0x2ca7, 0x84c0, 0xc562, 0x4569, 0xef79, 0x1, 0x1);
        gbc.writeMem(0x7f9, { 0xe, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2ca7);
        EXPECT(gbc.pc(), 0x7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 038A
        gbc.setState(0xb006, 0x7f44, 0x36a0, 0xbbe, 0xb222, 0xcec4, 0x1, 0x1);
        gbc.writeMem(0xb006, { 0xe, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7f44);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb006), 0xe);
        EXPECT(gbc.readMem(0xb007), 0x95);
        // 0E 038B
        gbc.setState(0x739f, 0xbed4, 0xb6b0, 0x8b8, 0x68ca, 0x2749, 0x1, 0x0);
        gbc.writeMem(0x739f, { 0xe, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0x73a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 038C
        gbc.setState(0x34b2, 0xa9b9, 0x43c0, 0xb741, 0xa5d7, 0x286e, 0x1, 0x0);
        gbc.writeMem(0x34b2, { 0xe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa9b9);
        EXPECT(gbc.pc(), 0x34b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 038D
        gbc.setState(0x9892, 0x1033, 0x48e0, 0x54c, 0x811, 0x3b5c, 0x0, 0x1);
        gbc.writeMem(0x9892, { 0xe, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1033);
        EXPECT(gbc.pc(), 0x9894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9892), 0xe);
        EXPECT(gbc.readMem(0x9893), 0x69);
        // 0E 038E
        gbc.setState(0x3e1e, 0x2420, 0xf710, 0x39d5, 0x4473, 0x560e, 0x0, 0x0);
        gbc.writeMem(0x3e1e, { 0xe, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2420);
        EXPECT(gbc.pc(), 0x3e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 038F
        gbc.setState(0x2c05, 0xe8a2, 0x5730, 0xd2d6, 0x8d23, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x2c05, { 0xe, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0x2c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0390
        gbc.setState(0x4e72, 0x96fa, 0xc020, 0xb7b6, 0x5c2b, 0x3142, 0x1, 0x1);
        gbc.writeMem(0x4e72, { 0xe, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x96fa);
        EXPECT(gbc.pc(), 0x4e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 0391
        gbc.setState(0x6ae6, 0x3244, 0x45d0, 0xa34c, 0xb5ee, 0x8c9, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0xe, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3244);
        EXPECT(gbc.pc(), 0x6ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0392
        gbc.setState(0xba61, 0xd4af, 0xae90, 0x4d4f, 0x4b77, 0x4492, 0x1, 0x1);
        gbc.writeMem(0xba61, { 0xe, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd4af);
        EXPECT(gbc.pc(), 0xba63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba61), 0xe);
        EXPECT(gbc.readMem(0xba62), 0x6d);
        // 0E 0393
        gbc.setState(0x7160, 0xce3, 0xf1d0, 0xbf3, 0xcb96, 0xee08, 0x1, 0x0);
        gbc.writeMem(0x7160, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xce3);
        EXPECT(gbc.pc(), 0x7162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0394
        gbc.setState(0xb040, 0xe4e2, 0x870, 0x269c, 0x441e, 0x8ed6, 0x0, 0x0);
        gbc.writeMem(0xb040, { 0xe, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe4e2);
        EXPECT(gbc.pc(), 0xb042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb040), 0xe);
        EXPECT(gbc.readMem(0xb041), 0xac);
        // 0E 0395
        gbc.setState(0x9c6e, 0x89ab, 0x26f0, 0x77a1, 0x65e, 0x530a, 0x0, 0x1);
        gbc.writeMem(0x9c6e, { 0xe, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x89ab);
        EXPECT(gbc.pc(), 0x9c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6e), 0xe);
        EXPECT(gbc.readMem(0x9c6f), 0x3d);
        // 0E 0396
        gbc.setState(0x2b8b, 0x41, 0xce90, 0x52ac, 0xc53e, 0x3bd, 0x0, 0x1);
        gbc.writeMem(0x2b8b, { 0xe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x41);
        EXPECT(gbc.pc(), 0x2b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0397
        gbc.setState(0x1c80, 0xcd8f, 0x6590, 0xa351, 0x1d76, 0x6675, 0x0, 0x1);
        gbc.writeMem(0x1c80, { 0xe, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcd8f);
        EXPECT(gbc.pc(), 0x1c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 0398
        gbc.setState(0x34af, 0xcaf5, 0x13b0, 0xfe57, 0x2d0b, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0x34af, { 0xe, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcaf5);
        EXPECT(gbc.pc(), 0x34b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 0399
        gbc.setState(0x8bd3, 0x31e4, 0xc110, 0xc489, 0x7c75, 0x1200, 0x1, 0x1);
        gbc.writeMem(0x8bd3, { 0xe, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x31e4);
        EXPECT(gbc.pc(), 0x8bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd3), 0xe);
        EXPECT(gbc.readMem(0x8bd4), 0xf6);
        // 0E 039A
        gbc.setState(0x110d, 0x9c00, 0xf540, 0x3c1a, 0x6533, 0xd90a, 0x0, 0x1);
        gbc.writeMem(0x110d, { 0xe, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9c00);
        EXPECT(gbc.pc(), 0x110f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 039B
        gbc.setState(0xa997, 0xd704, 0x6ca0, 0xe827, 0xd3f1, 0xf5cd, 0x1, 0x0);
        gbc.writeMem(0xa997, { 0xe, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd704);
        EXPECT(gbc.pc(), 0xa999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa997), 0xe);
        EXPECT(gbc.readMem(0xa998), 0x5e);
        // 0E 039D
        gbc.setState(0x2692, 0xa950, 0xcc40, 0xea00, 0x577, 0xb757, 0x1, 0x0);
        gbc.writeMem(0x2692, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa950);
        EXPECT(gbc.pc(), 0x2694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 039E
        gbc.setState(0x3f66, 0x2cd3, 0x6d60, 0x75e5, 0x710a, 0x915c, 0x0, 0x0);
        gbc.writeMem(0x3f66, { 0xe, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2cd3);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03A0
        gbc.setState(0x9e1b, 0x9a09, 0x83d0, 0xa3dd, 0x50d5, 0x2327, 0x0, 0x1);
        gbc.writeMem(0x9e1b, { 0xe, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9a09);
        EXPECT(gbc.pc(), 0x9e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1b), 0xe);
        EXPECT(gbc.readMem(0x9e1c), 0x30);
        // 0E 03A1
        gbc.setState(0x27dc, 0xaab9, 0x3010, 0xace7, 0xa82d, 0xe654, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xe, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xaab9);
        EXPECT(gbc.pc(), 0x27de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03A2
        gbc.setState(0x936e, 0xa18f, 0xb910, 0xaf10, 0xc07d, 0x7209, 0x0, 0x0);
        gbc.writeMem(0x936e, { 0xe, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa18f);
        EXPECT(gbc.pc(), 0x9370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936e), 0xe);
        EXPECT(gbc.readMem(0x936f), 0xd0);
        // 0E 03A3
        gbc.setState(0x2afd, 0x6803, 0xe540, 0xcd29, 0x82b0, 0x59e1, 0x0, 0x1);
        gbc.writeMem(0x2afd, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6803);
        EXPECT(gbc.pc(), 0x2aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 03A4
        gbc.setState(0xbd01, 0xb041, 0xc2c0, 0x90a7, 0x1fd8, 0xa0b4, 0x0, 0x0);
        gbc.writeMem(0xbd01, { 0xe, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb041);
        EXPECT(gbc.pc(), 0xbd03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd01), 0xe);
        EXPECT(gbc.readMem(0xbd02), 0x7f);
        // 0E 03A5
        gbc.setState(0xbdd7, 0xe6fd, 0xda70, 0x27bb, 0xb271, 0xd52c, 0x0, 0x1);
        gbc.writeMem(0xbdd7, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe6fd);
        EXPECT(gbc.pc(), 0xbdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd7), 0xe);
        EXPECT(gbc.readMem(0xbdd8), 0xa4);
        // 0E 03A6
        gbc.setState(0xd248, 0xe972, 0x9830, 0xb66b, 0xd81a, 0x6b20, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0xe, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe972);
        EXPECT(gbc.pc(), 0xd24a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd248), 0xe);
        EXPECT(gbc.readMem(0xd249), 0x5b);
        // 0E 03A7
        gbc.setState(0x421a, 0x234c, 0x8d60, 0xcacd, 0x1d40, 0xc06, 0x0, 0x0);
        gbc.writeMem(0x421a, { 0xe, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x234c);
        EXPECT(gbc.pc(), 0x421c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03A8
        gbc.setState(0x8656, 0xc480, 0xfbc0, 0x5d05, 0x850d, 0x72e8, 0x0, 0x1);
        gbc.writeMem(0x8656, { 0xe, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc480);
        EXPECT(gbc.pc(), 0x8658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8656), 0xe);
        EXPECT(gbc.readMem(0x8657), 0xfe);
        // 0E 03A9
        gbc.setState(0x5aba, 0x66b4, 0x9ae0, 0x358, 0xf6c1, 0x5399, 0x0, 0x1);
        gbc.writeMem(0x5aba, { 0xe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x66b4);
        EXPECT(gbc.pc(), 0x5abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03AA
        gbc.setState(0x5577, 0x9f53, 0x9220, 0x9c00, 0x2d5d, 0x9101, 0x0, 0x1);
        gbc.writeMem(0x5577, { 0xe, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9f53);
        EXPECT(gbc.pc(), 0x5579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03AB
        gbc.setState(0xb247, 0x62ce, 0xded0, 0xa8b4, 0x6160, 0x15dd, 0x0, 0x1);
        gbc.writeMem(0xb247, { 0xe, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x62ce);
        EXPECT(gbc.pc(), 0xb249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb247), 0xe);
        EXPECT(gbc.readMem(0xb248), 0xb2);
        // 0E 03AC
        gbc.setState(0xc166, 0x8558, 0xc610, 0x4412, 0x11ba, 0x5fcd, 0x1, 0x1);
        gbc.writeMem(0xc166, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8558);
        EXPECT(gbc.pc(), 0xc168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc166), 0xe);
        EXPECT(gbc.readMem(0xc167), 0xa4);
        // 0E 03AD
        gbc.setState(0x2c59, 0xd38a, 0x56b0, 0xdde2, 0x258c, 0x4982, 0x0, 0x1);
        gbc.writeMem(0x2c59, { 0xe, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd38a);
        EXPECT(gbc.pc(), 0x2c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03AE
        gbc.setState(0x8869, 0x9967, 0x1cc0, 0x104a, 0xf278, 0xbe90, 0x0, 0x1);
        gbc.writeMem(0x8869, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9967);
        EXPECT(gbc.pc(), 0x886b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8869), 0xe);
        EXPECT(gbc.readMem(0x886a), 0xe9);
        // 0E 03AF
        gbc.setState(0x6b41, 0xfe35, 0x63e0, 0x344b, 0x1046, 0x1d5, 0x1, 0x0);
        gbc.writeMem(0x6b41, { 0xe, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfe35);
        EXPECT(gbc.pc(), 0x6b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03B0
        gbc.setState(0xe0b3, 0x8e23, 0xbd70, 0x7e99, 0x3b2d, 0xea33, 0x0, 0x1);
        gbc.writeMem(0xe0b3, { 0xe, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8e23);
        EXPECT(gbc.pc(), 0xe0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b3), 0xe);
        EXPECT(gbc.readMem(0xe0b4), 0xf4);
        // 0E 03B1
        gbc.setState(0x4070, 0xde96, 0x8dd0, 0x8b16, 0xa12c, 0x5058, 0x0, 0x0);
        gbc.writeMem(0x4070, { 0xe, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0x4072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03B2
        gbc.setState(0x8ff0, 0xa63e, 0x6fd0, 0xbf41, 0x12e7, 0x427e, 0x1, 0x1);
        gbc.writeMem(0x8ff0, { 0xe, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0x8ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff0), 0xe);
        EXPECT(gbc.readMem(0x8ff1), 0x3a);
        // 0E 03B3
        gbc.setState(0x8b86, 0xa5ba, 0x2310, 0x451b, 0x369d, 0x861c, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0xe, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa5ba);
        EXPECT(gbc.pc(), 0x8b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b86), 0xe);
        EXPECT(gbc.readMem(0x8b87), 0x2f);
        // 0E 03B4
        gbc.setState(0x18d0, 0x8670, 0xd540, 0xa0ee, 0x1e70, 0x3955, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0xe, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8670);
        EXPECT(gbc.pc(), 0x18d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 03B5
        gbc.setState(0x6b2, 0xc307, 0x3350, 0xc8df, 0x9746, 0x51f5, 0x0, 0x1);
        gbc.writeMem(0x6b2, { 0xe, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc307);
        EXPECT(gbc.pc(), 0x6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03B6
        gbc.setState(0xb8b1, 0x2834, 0x3510, 0x7fc5, 0xb5a6, 0x7110, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0xe, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2834);
        EXPECT(gbc.pc(), 0xb8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b1), 0xe);
        EXPECT(gbc.readMem(0xb8b2), 0xdb);
        // 0E 03B7
        gbc.setState(0x31c8, 0x7109, 0xd750, 0x99e5, 0xad92, 0x17fd, 0x1, 0x1);
        gbc.writeMem(0x31c8, { 0xe, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7109);
        EXPECT(gbc.pc(), 0x31ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03B8
        gbc.setState(0x7f98, 0x7a38, 0xd7c0, 0x15f3, 0xfa70, 0xad7a, 0x1, 0x0);
        gbc.writeMem(0x7f98, { 0xe, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7a38);
        EXPECT(gbc.pc(), 0x7f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 03B9
        gbc.setState(0x5242, 0x6284, 0x1750, 0x5ecf, 0x6bd6, 0x83a8, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xe, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6284);
        EXPECT(gbc.pc(), 0x5244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03BA
        gbc.setState(0xa1fc, 0x4ffe, 0x5850, 0xd24e, 0x344f, 0xdf5a, 0x1, 0x1);
        gbc.writeMem(0xa1fc, { 0xe, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4ffe);
        EXPECT(gbc.pc(), 0xa1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fc), 0xe);
        EXPECT(gbc.readMem(0xa1fd), 0x3a);
        // 0E 03BB
        gbc.setState(0x7e44, 0xf72c, 0x8620, 0x5c36, 0xb989, 0x2c29, 0x1, 0x1);
        gbc.writeMem(0x7e44, { 0xe, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf72c);
        EXPECT(gbc.pc(), 0x7e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03BC
        gbc.setState(0xaa9e, 0x8fb, 0xc310, 0x9021, 0x2d86, 0xe398, 0x0, 0x1);
        gbc.writeMem(0xaa9e, { 0xe, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0xaaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9e), 0xe);
        EXPECT(gbc.readMem(0xaa9f), 0xa4);
        // 0E 03BD
        gbc.setState(0xe01a, 0xb2ea, 0x2760, 0x1ce3, 0x6073, 0xa4b3, 0x1, 0x0);
        gbc.writeMem(0xe01a, { 0xe, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb2ea);
        EXPECT(gbc.pc(), 0xe01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01a), 0xe);
        EXPECT(gbc.readMem(0xe01b), 0x8d);
        // 0E 03BE
        gbc.setState(0xeca9, 0x8010, 0x77b0, 0x2333, 0x4ad0, 0xbcd2, 0x1, 0x1);
        gbc.writeMem(0xeca9, { 0xe, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8010);
        EXPECT(gbc.pc(), 0xecab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca9), 0xe);
        EXPECT(gbc.readMem(0xecaa), 0xed);
        // 0E 03BF
        gbc.setState(0xe94d, 0xebca, 0xda50, 0x644c, 0x88d6, 0xbd15, 0x1, 0x1);
        gbc.writeMem(0xe94d, { 0xe, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xebca);
        EXPECT(gbc.pc(), 0xe94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94d), 0xe);
        EXPECT(gbc.readMem(0xe94e), 0xfa);
        // 0E 03C0
        gbc.setState(0xbbda, 0x774b, 0x890, 0x6d98, 0xb264, 0xeaf7, 0x0, 0x1);
        gbc.writeMem(0xbbda, { 0xe, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x774b);
        EXPECT(gbc.pc(), 0xbbdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbda), 0xe);
        EXPECT(gbc.readMem(0xbbdb), 0x20);
        // 0E 03C1
        gbc.setState(0xefec, 0x45a0, 0xf320, 0x146e, 0x5ae0, 0x8bcd, 0x0, 0x0);
        gbc.writeMem(0xefec, { 0xe, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x45a0);
        EXPECT(gbc.pc(), 0xefee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefec), 0xe);
        EXPECT(gbc.readMem(0xefed), 0xb0);
        // 0E 03C2
        gbc.setState(0xa119, 0x8a58, 0xc470, 0x675c, 0x3263, 0x4b39, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0xe, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8a58);
        EXPECT(gbc.pc(), 0xa11b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa119), 0xe);
        EXPECT(gbc.readMem(0xa11a), 0xe0);
        // 0E 03C3
        gbc.setState(0x92b7, 0xc698, 0xc1e0, 0x73fc, 0xd57, 0x5042, 0x0, 0x0);
        gbc.writeMem(0x92b7, { 0xe, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc698);
        EXPECT(gbc.pc(), 0x92b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b7), 0xe);
        EXPECT(gbc.readMem(0x92b8), 0xc2);
        // 0E 03C4
        gbc.setState(0x11b4, 0x387b, 0x2ea0, 0xd626, 0x31d3, 0x9ea6, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xe, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x387b);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03C5
        gbc.setState(0x9289, 0xdac2, 0x710, 0x2cc5, 0xd61b, 0xdab1, 0x1, 0x1);
        gbc.writeMem(0x9289, { 0xe, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdac2);
        EXPECT(gbc.pc(), 0x928b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9289), 0xe);
        EXPECT(gbc.readMem(0x928a), 0x14);
        // 0E 03C6
        gbc.setState(0x83a8, 0x4392, 0xb8e0, 0x788a, 0x50d9, 0x1ac4, 0x0, 0x1);
        gbc.writeMem(0x83a8, { 0xe, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4392);
        EXPECT(gbc.pc(), 0x83aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a8), 0xe);
        EXPECT(gbc.readMem(0x83a9), 0x1f);
        // 0E 03C7
        gbc.setState(0x87c2, 0x748c, 0x6260, 0x24b6, 0x9825, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0x87c2, { 0xe, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x748c);
        EXPECT(gbc.pc(), 0x87c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c2), 0xe);
        EXPECT(gbc.readMem(0x87c3), 0x9c);
        // 0E 03C8
        gbc.setState(0x1770, 0xb5da, 0x40, 0xd31a, 0x7a5c, 0x595e, 0x1, 0x1);
        gbc.writeMem(0x1770, { 0xe, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb5da);
        EXPECT(gbc.pc(), 0x1772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 03C9
        gbc.setState(0x9364, 0x8043, 0xd950, 0xcc6d, 0xee7a, 0x533, 0x1, 0x1);
        gbc.writeMem(0x9364, { 0xe, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9364), 0xe);
        EXPECT(gbc.readMem(0x9365), 0xd1);
        // 0E 03CA
        gbc.setState(0x2af8, 0x8e1, 0xd8b0, 0x38b5, 0x2502, 0x3105, 0x0, 0x1);
        gbc.writeMem(0x2af8, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8e1);
        EXPECT(gbc.pc(), 0x2afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03CB
        gbc.setState(0x97cc, 0x6bf2, 0x5a20, 0x7c84, 0xedc1, 0xd017, 0x0, 0x0);
        gbc.writeMem(0x97cc, { 0xe, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6bf2);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cc), 0xe);
        EXPECT(gbc.readMem(0x97cd), 0xd7);
        // 0E 03CC
        gbc.setState(0x46b, 0x97f0, 0x4160, 0xc7a3, 0xd857, 0x7aa3, 0x1, 0x0);
        gbc.writeMem(0x46b, { 0xe, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x97f0);
        EXPECT(gbc.pc(), 0x46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03CE
        gbc.setState(0x8b3d, 0x228c, 0x1e60, 0x88e0, 0x3117, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0x8b3d, { 0xe, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x228c);
        EXPECT(gbc.pc(), 0x8b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3d), 0xe);
        EXPECT(gbc.readMem(0x8b3e), 0xe2);
        // 0E 03CF
        gbc.setState(0x71c0, 0xfd46, 0x2ed0, 0x9cce, 0x26ff, 0x199, 0x1, 0x0);
        gbc.writeMem(0x71c0, { 0xe, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfd46);
        EXPECT(gbc.pc(), 0x71c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D0
        gbc.setState(0x4f7e, 0xbd2c, 0x17d0, 0x22df, 0xc0ff, 0x9b7a, 0x0, 0x1);
        gbc.writeMem(0x4f7e, { 0xe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbd2c);
        EXPECT(gbc.pc(), 0x4f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D2
        gbc.setState(0x7b49, 0xe3e1, 0x87f0, 0xd79b, 0x8bdb, 0x9476, 0x0, 0x0);
        gbc.writeMem(0x7b49, { 0xe, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe3e1);
        EXPECT(gbc.pc(), 0x7b4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D3
        gbc.setState(0xc5e6, 0x13ed, 0x3460, 0xce45, 0x3ac0, 0x78b1, 0x1, 0x1);
        gbc.writeMem(0xc5e6, { 0xe, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x13ed);
        EXPECT(gbc.pc(), 0xc5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e6), 0xe);
        EXPECT(gbc.readMem(0xc5e7), 0xf9);
        // 0E 03D4
        gbc.setState(0x73f4, 0x864, 0x3a10, 0x7204, 0x8823, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0x73f4, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x864);
        EXPECT(gbc.pc(), 0x73f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D5
        gbc.setState(0x113d, 0x411, 0x32e0, 0x9597, 0xb562, 0xb21d, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0xe, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x411);
        EXPECT(gbc.pc(), 0x113f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03D6
        gbc.setState(0x4cb3, 0x2841, 0x5bf0, 0x2677, 0x56a4, 0xaa80, 0x0, 0x0);
        gbc.writeMem(0x4cb3, { 0xe, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2841);
        EXPECT(gbc.pc(), 0x4cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D7
        gbc.setState(0x2512, 0xfd65, 0x8dd0, 0x4b98, 0xb077, 0xcfba, 0x0, 0x0);
        gbc.writeMem(0x2512, { 0xe, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfd65);
        EXPECT(gbc.pc(), 0x2514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D8
        gbc.setState(0x227a, 0xb8f4, 0x6a30, 0x819b, 0xb988, 0x1594, 0x1, 0x0);
        gbc.writeMem(0x227a, { 0xe, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb8f4);
        EXPECT(gbc.pc(), 0x227c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03D9
        gbc.setState(0x64a7, 0x1902, 0xe730, 0x2f3, 0xd5ce, 0xdf79, 0x1, 0x1);
        gbc.writeMem(0x64a7, { 0xe, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1902);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03DA
        gbc.setState(0x1ecd, 0x4b76, 0x3930, 0xd246, 0x4434, 0xaa42, 0x1, 0x0);
        gbc.writeMem(0x1ecd, { 0xe, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4b76);
        EXPECT(gbc.pc(), 0x1ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03DB
        gbc.setState(0x8927, 0x1e10, 0x9de0, 0x3d54, 0xa14d, 0x9f14, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xe, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1e10);
        EXPECT(gbc.pc(), 0x8929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8927), 0xe);
        EXPECT(gbc.readMem(0x8928), 0x22);
        // 0E 03DC
        gbc.setState(0x2a2d, 0x6c98, 0x9e0, 0xa6aa, 0x3263, 0x683e, 0x0, 0x1);
        gbc.writeMem(0x2a2d, { 0xe, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6c98);
        EXPECT(gbc.pc(), 0x2a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03DD
        gbc.setState(0x2f1e, 0xd79a, 0x8330, 0x83c9, 0xe78c, 0xe3d0, 0x1, 0x1);
        gbc.writeMem(0x2f1e, { 0xe, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd79a);
        EXPECT(gbc.pc(), 0x2f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 0E 03DE
        gbc.setState(0xa4d6, 0x4aea, 0xf370, 0x3d0d, 0x895e, 0x4f22, 0x1, 0x0);
        gbc.writeMem(0xa4d6, { 0xe, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4aea);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xe);
        EXPECT(gbc.readMem(0xa4d7), 0xc8);
        // 0E 03DF
        gbc.setState(0x9890, 0x7212, 0x9800, 0x7056, 0x86c3, 0x3e7a, 0x1, 0x0);
        gbc.writeMem(0x9890, { 0xe, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7212);
        EXPECT(gbc.pc(), 0x9892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9890), 0xe);
        EXPECT(gbc.readMem(0x9891), 0x63);
        // 0E 03E0
        gbc.setState(0xc8c8, 0x4056, 0xe1a0, 0x50fe, 0xe1aa, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0xc8c8, { 0xe, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4056);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c8), 0xe);
        EXPECT(gbc.readMem(0xc8c9), 0x50);
        // 0E 03E1
        gbc.setState(0x24be, 0xb50e, 0x7aa0, 0xb0f8, 0x2d6f, 0x9226, 0x0, 0x1);
        gbc.writeMem(0x24be, { 0xe, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb50e);
        EXPECT(gbc.pc(), 0x24c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03E2
        gbc.setState(0xdd9a, 0xce1a, 0xd600, 0x630, 0x4b58, 0x2e07, 0x1, 0x1);
        gbc.writeMem(0xdd9a, { 0xe, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xce1a);
        EXPECT(gbc.pc(), 0xdd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9a), 0xe);
        EXPECT(gbc.readMem(0xdd9b), 0x53);
        // 0E 03E3
        gbc.setState(0x2a8c, 0x42b8, 0xbe60, 0x8dd9, 0x373e, 0xfe90, 0x1, 0x1);
        gbc.writeMem(0x2a8c, { 0xe, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x42b8);
        EXPECT(gbc.pc(), 0x2a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 0E 03E4
        gbc.setState(0x9fae, 0xcb7e, 0xc090, 0xec22, 0xc1f8, 0x86cb, 0x1, 0x1);
        gbc.writeMem(0x9fae, { 0xe, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0x9fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fae), 0xe);
        EXPECT(gbc.readMem(0x9faf), 0x83);
        // 0E 03E5
        gbc.setState(0xed07, 0xee0f, 0x4310, 0x2c9, 0x76c, 0xe1b, 0x0, 0x1);
        gbc.writeMem(0xed07, { 0xe, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xee0f);
        EXPECT(gbc.pc(), 0xed09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed07), 0xe);
        EXPECT(gbc.readMem(0xed08), 0x54);
        // 0E 03E6
        gbc.setState(0x2879, 0x346a, 0x9640, 0xf26f, 0xe9ca, 0x2437, 0x0, 0x0);
        gbc.writeMem(0x2879, { 0xe, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x346a);
        EXPECT(gbc.pc(), 0x287b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 0E 03E7
        gbc.setState(0xe32e, 0x272c, 0xdb90, 0x8965, 0x6ed0, 0xcb81, 0x0, 0x1);
        gbc.writeMem(0xe32e, { 0xe, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x272c);
        EXPECT(gbc.pc(), 0xe330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32e), 0xe);
        EXPECT(gbc.readMem(0xe32f), 0x9a);
    }
}
#endif
