    TEST(gbcemu, opcode_13) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 13 0000
        gbc.setState(0xbd8d, 0x43cb, 0xccf0, 0x1dca, 0x3d13, 0x2e75, 0x0, 0x0);
        gbc.writeMem(0xbd8d, { 0x13 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x43cb, gbc.sp());
        EXPECT(0xbd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd8d));
        // 13 0001
        gbc.setState(0xe7a9, 0x252a, 0x3c80, 0x8fcc, 0x136f, 0x97de, 0x0, 0x1);
        gbc.writeMem(0xe7a9, { 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x252a, gbc.sp());
        EXPECT(0xe7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe7a9));
        // 13 0002
        gbc.setState(0xde1c, 0x97a4, 0xcca0, 0xeb4d, 0xe45d, 0xcf46, 0x1, 0x1);
        gbc.writeMem(0xde1c, { 0x13 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x97a4, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xde1c));
        // 13 0003
        gbc.setState(0x691b, 0xccd6, 0x370, 0xed0a, 0x36f5, 0x8521, 0x0, 0x0);
        gbc.writeMem(0x691b, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xccd6, gbc.sp());
        EXPECT(0x691c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0004
        gbc.setState(0x236b, 0x939b, 0x1800, 0xe284, 0xc2c6, 0xbed7, 0x1, 0x0);
        gbc.writeMem(0x236b, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x236c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0005
        gbc.setState(0x9555, 0xc9e3, 0xae30, 0x9afd, 0x2e3a, 0xeedd, 0x0, 0x0);
        gbc.writeMem(0x9555, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc9e3, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9555));
        // 13 0006
        gbc.setState(0x55da, 0x4703, 0xa3a0, 0x5fb9, 0xad5b, 0x8652, 0x1, 0x1);
        gbc.writeMem(0x55da, { 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0008
        gbc.setState(0xc0bc, 0xb98d, 0xfdb0, 0x2182, 0x8fd6, 0x7ded, 0x1, 0x1);
        gbc.writeMem(0xc0bc, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb98d, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0bc));
        // 13 0009
        gbc.setState(0x8083, 0x13cc, 0x6530, 0x4008, 0xc349, 0x515f, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x8084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8083));
        // 13 000A
        gbc.setState(0xb39c, 0x4334, 0x6d50, 0xa5e3, 0x554b, 0xeb73, 0x1, 0x0);
        gbc.writeMem(0xb39c, { 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb39c));
        // 13 000B
        gbc.setState(0xae2e, 0xbceb, 0xcb20, 0xe4a7, 0x1f46, 0x9867, 0x1, 0x1);
        gbc.writeMem(0xae2e, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbceb, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae2e));
        // 13 000C
        gbc.setState(0x62f6, 0xe8ac, 0x2520, 0x776a, 0x9c7e, 0x62db, 0x1, 0x1);
        gbc.writeMem(0x62f6, { 0x13 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0x62f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 000D
        gbc.setState(0x1234, 0x718f, 0x1a40, 0x9c9d, 0x3669, 0xc35f, 0x1, 0x1);
        gbc.writeMem(0x1234, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 000E
        gbc.setState(0x79c2, 0xfede, 0xd0a0, 0xd65f, 0x92d0, 0x5bf0, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0x79c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 000F
        gbc.setState(0x3cd6, 0x3af8, 0xa420, 0xc868, 0x4f93, 0xe786, 0x1, 0x1);
        gbc.writeMem(0x3cd6, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0010
        gbc.setState(0xeeda, 0x17ff, 0xfd80, 0xe452, 0x8e78, 0x3974, 0x1, 0x0);
        gbc.writeMem(0xeeda, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x17ff, gbc.sp());
        EXPECT(0xeedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeeda));
        // 13 0011
        gbc.setState(0x1e6f, 0xe853, 0xdf20, 0x6211, 0xec76, 0x4629, 0x0, 0x0);
        gbc.writeMem(0x1e6f, { 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0012
        gbc.setState(0x8ae1, 0x7672, 0x7ae0, 0xd5eb, 0x5dea, 0x85f9, 0x1, 0x1);
        gbc.writeMem(0x8ae1, { 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8ae1));
        // 13 0013
        gbc.setState(0x881e, 0x197f, 0x34c0, 0x85fd, 0xe74e, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x881e, { 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x197f, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x881e));
        // 13 0014
        gbc.setState(0xb2e4, 0x53c9, 0xcc60, 0xafe, 0x9577, 0x5adb, 0x1, 0x1);
        gbc.writeMem(0xb2e4, { 0x13 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0xb2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb2e4));
        // 13 0015
        gbc.setState(0x2f9a, 0x887a, 0xfce0, 0x6ff1, 0xf1dc, 0x2c4b, 0x1, 0x1);
        gbc.writeMem(0x2f9a, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x887a, gbc.sp());
        EXPECT(0x2f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0016
        gbc.setState(0x828f, 0xb957, 0x6900, 0x5fa4, 0x6922, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0x828f, { 0x13 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb957, gbc.sp());
        EXPECT(0x8290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x828f));
        // 13 0017
        gbc.setState(0x6d82, 0xe2f2, 0xd260, 0x516, 0xd0e0, 0xcb76, 0x0, 0x0);
        gbc.writeMem(0x6d82, { 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe2f2, gbc.sp());
        EXPECT(0x6d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0018
        gbc.setState(0x6310, 0x6540, 0x47b0, 0x799d, 0x3129, 0x17dc, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6540, gbc.sp());
        EXPECT(0x6311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0019
        gbc.setState(0x477c, 0x831e, 0x4560, 0x4210, 0xc6bb, 0x88ff, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x831e, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 001A
        gbc.setState(0x7fd9, 0x494d, 0xfae0, 0x274f, 0xbcae, 0xf81e, 0x1, 0x1);
        gbc.writeMem(0x7fd9, { 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0x7fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 001B
        gbc.setState(0x1002, 0x8ba5, 0xbcc0, 0xecbe, 0x6a02, 0x7a54, 0x1, 0x1);
        gbc.writeMem(0x1002, { 0x13 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8ba5, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 001D
        gbc.setState(0x2fdd, 0x29c0, 0x4910, 0xa593, 0x6258, 0x520f, 0x0, 0x1);
        gbc.writeMem(0x2fdd, { 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x29c0, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 001E
        gbc.setState(0xc792, 0xa8a8, 0xce90, 0x8ac6, 0x5397, 0x428d, 0x1, 0x1);
        gbc.writeMem(0xc792, { 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc792));
        // 13 001F
        gbc.setState(0x2cd4, 0x4a1f, 0xdba0, 0x3f81, 0x1317, 0xf96b, 0x0, 0x0);
        gbc.writeMem(0x2cd4, { 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x2cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0021
        gbc.setState(0xea27, 0xa199, 0x24f0, 0xba6e, 0x8ff2, 0x48d7, 0x1, 0x0);
        gbc.writeMem(0xea27, { 0x13 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xea27));
        // 13 0023
        gbc.setState(0x8f52, 0xf07a, 0x7e20, 0xd115, 0x327c, 0x8a54, 0x1, 0x0);
        gbc.writeMem(0x8f52, { 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf07a, gbc.sp());
        EXPECT(0x8f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8f52));
        // 13 0024
        gbc.setState(0x7429, 0xfd5c, 0x4870, 0x6619, 0x5c39, 0x3eaf, 0x0, 0x1);
        gbc.writeMem(0x7429, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfd5c, gbc.sp());
        EXPECT(0x742a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0025
        gbc.setState(0xb3d0, 0xd43d, 0xbe60, 0x65a5, 0x5964, 0x4ab8, 0x0, 0x1);
        gbc.writeMem(0xb3d0, { 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd43d, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb3d0));
        // 13 0026
        gbc.setState(0x8cd4, 0xf1be, 0xf390, 0x21f, 0x2830, 0xe50, 0x1, 0x1);
        gbc.writeMem(0x8cd4, { 0x13 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf1be, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8cd4));
        // 13 0027
        gbc.setState(0x1b6, 0x81ef, 0xa50, 0x5fb3, 0x131, 0xf938, 0x0, 0x1);
        gbc.writeMem(0x1b6, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0028
        gbc.setState(0x51b7, 0xa02a, 0xc390, 0x37f5, 0x5b2d, 0xf81d, 0x0, 0x1);
        gbc.writeMem(0x51b7, { 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 002A
        gbc.setState(0x18b9, 0x4858, 0xb980, 0x7bb7, 0x462b, 0x224d, 0x0, 0x1);
        gbc.writeMem(0x18b9, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 002B
        gbc.setState(0x830e, 0x720d, 0xdfb0, 0x2ece, 0xf1b1, 0x242f, 0x1, 0x0);
        gbc.writeMem(0x830e, { 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0x830f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x830e));
        // 13 002C
        gbc.setState(0xa0c4, 0x23de, 0x5660, 0x822b, 0x7b68, 0xcf07, 0x0, 0x0);
        gbc.writeMem(0xa0c4, { 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa0c4));
        // 13 002D
        gbc.setState(0xdab2, 0xd513, 0x5d00, 0xc33b, 0xe58a, 0xe031, 0x0, 0x0);
        gbc.writeMem(0xdab2, { 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xdab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdab2));
        // 13 002E
        gbc.setState(0x1af5, 0x5716, 0xb4a0, 0x2880, 0x7d7e, 0x2242, 0x1, 0x0);
        gbc.writeMem(0x1af5, { 0x13 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0x1af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0030
        gbc.setState(0x2aba, 0xe07c, 0xd2a0, 0x1eb2, 0xacc3, 0x3005, 0x0, 0x0);
        gbc.writeMem(0x2aba, { 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe07c, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0031
        gbc.setState(0x36b4, 0x866c, 0x4bb0, 0x5260, 0x39af, 0x3d8c, 0x1, 0x1);
        gbc.writeMem(0x36b4, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0x36b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0032
        gbc.setState(0xf89, 0xf7e3, 0x60f0, 0x8f61, 0x5ef9, 0xe6da, 0x1, 0x0);
        gbc.writeMem(0xf89, { 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf7e3, gbc.sp());
        EXPECT(0xf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0033
        gbc.setState(0xa415, 0x7e5d, 0x4f50, 0xb3e5, 0xa392, 0x2380, 0x1, 0x1);
        gbc.writeMem(0xa415, { 0x13 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7e5d, gbc.sp());
        EXPECT(0xa416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa415));
        // 13 0034
        gbc.setState(0x54b8, 0xafc, 0x9e70, 0xc3f6, 0x3f08, 0xb249, 0x0, 0x1);
        gbc.writeMem(0x54b8, { 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0035
        gbc.setState(0xbbd, 0xbf0a, 0x3200, 0x9d09, 0x9c9d, 0x1062, 0x0, 0x0);
        gbc.writeMem(0xbbd, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf0a, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0036
        gbc.setState(0x4374, 0xb003, 0xeb00, 0x8363, 0x4af4, 0xca2c, 0x1, 0x1);
        gbc.writeMem(0x4374, { 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x4375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0037
        gbc.setState(0x2a9, 0xb249, 0x79e0, 0xbd6, 0x6753, 0x798d, 0x1, 0x1);
        gbc.writeMem(0x2a9, { 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb249, gbc.sp());
        EXPECT(0x2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0038
        gbc.setState(0xa83a, 0x958f, 0x2d40, 0xae3d, 0x6db5, 0x77ae, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0x13 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x958f, gbc.sp());
        EXPECT(0xa83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa83a));
        // 13 0039
        gbc.setState(0xe33a, 0x75a5, 0x630, 0x1eb5, 0x957e, 0xefbc, 0x1, 0x1);
        gbc.writeMem(0xe33a, { 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0xe33b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe33a));
        // 13 003A
        gbc.setState(0x7f0b, 0x5505, 0x9f40, 0xdf2e, 0x9b1a, 0xf40, 0x1, 0x1);
        gbc.writeMem(0x7f0b, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5505, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 003C
        gbc.setState(0xc653, 0x7eb4, 0xe530, 0xf9f7, 0xae14, 0xa23a, 0x1, 0x0);
        gbc.writeMem(0xc653, { 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xc654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc653));
        // 13 003D
        gbc.setState(0xeb4e, 0xc10e, 0xd8f0, 0x2b78, 0x47c8, 0x5eaa, 0x1, 0x0);
        gbc.writeMem(0xeb4e, { 0x13 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0xeb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeb4e));
        // 13 003E
        gbc.setState(0x3243, 0xf42f, 0x1f0, 0x7441, 0x8a94, 0x5aa5, 0x1, 0x0);
        gbc.writeMem(0x3243, { 0x13 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 003F
        gbc.setState(0x2702, 0xbdea, 0xe3b0, 0x8277, 0x61ac, 0x2957, 0x0, 0x1);
        gbc.writeMem(0x2702, { 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x2703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0040
        gbc.setState(0xb238, 0x2ea2, 0x4c00, 0x6bb8, 0x41a0, 0xa92, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0xb239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb238));
        // 13 0041
        gbc.setState(0x2182, 0x2734, 0x59a0, 0xdc99, 0xea26, 0xb32c, 0x0, 0x0);
        gbc.writeMem(0x2182, { 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2734, gbc.sp());
        EXPECT(0x2183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0042
        gbc.setState(0x35c1, 0x42df, 0x18f0, 0x71ca, 0xfda4, 0x1b91, 0x0, 0x1);
        gbc.writeMem(0x35c1, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x42df, gbc.sp());
        EXPECT(0x35c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0043
        gbc.setState(0x4eee, 0x73cc, 0x3bf0, 0x75a, 0x48, 0x8792, 0x1, 0x1);
        gbc.writeMem(0x4eee, { 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x73cc, gbc.sp());
        EXPECT(0x4eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0044
        gbc.setState(0x2606, 0xa35c, 0xa810, 0xd65d, 0x339d, 0x9a61, 0x1, 0x1);
        gbc.writeMem(0x2606, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0x2607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0045
        gbc.setState(0x91de, 0xde6d, 0x3500, 0x960d, 0xb877, 0x6f8c, 0x1, 0x1);
        gbc.writeMem(0x91de, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xde6d, gbc.sp());
        EXPECT(0x91df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x91de));
        // 13 0046
        gbc.setState(0x584e, 0x9325, 0x7040, 0x6c65, 0x6659, 0xb4e0, 0x0, 0x0);
        gbc.writeMem(0x584e, { 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9325, gbc.sp());
        EXPECT(0x584f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0047
        gbc.setState(0xb857, 0x1406, 0x9140, 0x28ec, 0x17c2, 0x2bc2, 0x1, 0x1);
        gbc.writeMem(0xb857, { 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1406, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb857));
        // 13 0048
        gbc.setState(0x4c4c, 0x9b33, 0x9440, 0x729b, 0xbbbd, 0x130a, 0x1, 0x0);
        gbc.writeMem(0x4c4c, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9b33, gbc.sp());
        EXPECT(0x4c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0049
        gbc.setState(0xbf5f, 0xcef5, 0x1ed0, 0x6e6b, 0xf092, 0x5242, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0x13 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf5f));
        // 13 004A
        gbc.setState(0x12c3, 0xab44, 0x3410, 0x4f2d, 0xd970, 0xfa1f, 0x0, 0x1);
        gbc.writeMem(0x12c3, { 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 004B
        gbc.setState(0x6644, 0xf101, 0x84c0, 0xa02e, 0x2876, 0x5bab, 0x1, 0x1);
        gbc.writeMem(0x6644, { 0x13 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 004C
        gbc.setState(0x8e9b, 0x3577, 0x280, 0x9236, 0x2144, 0xc49f, 0x1, 0x1);
        gbc.writeMem(0x8e9b, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3577, gbc.sp());
        EXPECT(0x8e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8e9b));
        // 13 004D
        gbc.setState(0xbbbe, 0xb76a, 0x35e0, 0xae49, 0xe490, 0x929d, 0x0, 0x1);
        gbc.writeMem(0xbbbe, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb76a, gbc.sp());
        EXPECT(0xbbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbbbe));
        // 13 004E
        gbc.setState(0x798e, 0xf9b1, 0x860, 0x1cd5, 0x8c06, 0x18bb, 0x1, 0x0);
        gbc.writeMem(0x798e, { 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf9b1, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 004F
        gbc.setState(0x523b, 0x4df3, 0xa20, 0x2750, 0x5a49, 0x24e3, 0x1, 0x1);
        gbc.writeMem(0x523b, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4df3, gbc.sp());
        EXPECT(0x523c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0050
        gbc.setState(0xd66d, 0x196c, 0x9f00, 0x27d3, 0xc6d1, 0x1f1f, 0x0, 0x1);
        gbc.writeMem(0xd66d, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd66d));
        // 13 0051
        gbc.setState(0xb5e7, 0x4ddc, 0xd420, 0xba2b, 0x78ec, 0x2c30, 0x1, 0x1);
        gbc.writeMem(0xb5e7, { 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0xb5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb5e7));
        // 13 0055
        gbc.setState(0xa6b0, 0xf41e, 0xe8b0, 0x1ac8, 0xecae, 0xc48c, 0x1, 0x0);
        gbc.writeMem(0xa6b0, { 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa6b0));
        // 13 0056
        gbc.setState(0x3537, 0x1333, 0xdbc0, 0xbef7, 0x24c1, 0x1fd7, 0x1, 0x0);
        gbc.writeMem(0x3537, { 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1333, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0057
        gbc.setState(0xa331, 0xc10f, 0x30d0, 0xabaf, 0x4576, 0xb78a, 0x0, 0x0);
        gbc.writeMem(0xa331, { 0x13 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0xa332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa331));
        // 13 0058
        gbc.setState(0x46a5, 0x9845, 0x9ea0, 0x76d6, 0x99c0, 0xb8f0, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0059
        gbc.setState(0x87c, 0xa37f, 0x2630, 0xd71b, 0x1e7f, 0x1e34, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa37f, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 005A
        gbc.setState(0xa248, 0x3d51, 0xf3a0, 0xa0b2, 0x535d, 0xad79, 0x0, 0x0);
        gbc.writeMem(0xa248, { 0x13 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3d51, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa248));
        // 13 005B
        gbc.setState(0x4d49, 0x4b54, 0x96d0, 0x2bda, 0xf9e7, 0x5724, 0x0, 0x0);
        gbc.writeMem(0x4d49, { 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4b54, gbc.sp());
        EXPECT(0x4d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 005C
        gbc.setState(0x7df7, 0xe42e, 0x9fc0, 0xaedb, 0x7dab, 0x1b3f, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe42e, gbc.sp());
        EXPECT(0x7df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 005D
        gbc.setState(0x4823, 0x57a4, 0xfbe0, 0xfd3c, 0x5292, 0xeac1, 0x1, 0x0);
        gbc.writeMem(0x4823, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x57a4, gbc.sp());
        EXPECT(0x4824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 005E
        gbc.setState(0x64e2, 0xad75, 0xa730, 0x6103, 0x97a9, 0x1c3e, 0x1, 0x0);
        gbc.writeMem(0x64e2, { 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x64e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 005F
        gbc.setState(0xa007, 0x278c, 0xc290, 0x96a, 0x1c98, 0xa3d1, 0x0, 0x0);
        gbc.writeMem(0xa007, { 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0xa008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa007));
        // 13 0060
        gbc.setState(0xdc35, 0xb6a2, 0xe000, 0x8f05, 0x194, 0xd3a9, 0x1, 0x1);
        gbc.writeMem(0xdc35, { 0x13 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0xdc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdc35));
        // 13 0061
        gbc.setState(0x3f1c, 0x2d95, 0x7f30, 0xbc63, 0x4a9a, 0x9a45, 0x1, 0x0);
        gbc.writeMem(0x3f1c, { 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2d95, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0062
        gbc.setState(0x6a1, 0x7fd8, 0x3260, 0x4396, 0x648e, 0x850c, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0063
        gbc.setState(0xa4ec, 0xaa8b, 0x92a0, 0xfba8, 0xbc5b, 0x2d89, 0x1, 0x1);
        gbc.writeMem(0xa4ec, { 0x13 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaa8b, gbc.sp());
        EXPECT(0xa4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa4ec));
        // 13 0064
        gbc.setState(0xa825, 0xed33, 0xb900, 0x1244, 0xda24, 0x449e, 0x0, 0x0);
        gbc.writeMem(0xa825, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed33, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa825));
        // 13 0065
        gbc.setState(0x1cba, 0x7483, 0x8e90, 0x39ff, 0xbb57, 0xaaf8, 0x1, 0x0);
        gbc.writeMem(0x1cba, { 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0x1cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0066
        gbc.setState(0xa8fa, 0x3789, 0xa830, 0x1584, 0x2f5d, 0x1393, 0x1, 0x0);
        gbc.writeMem(0xa8fa, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0xa8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa8fa));
        // 13 0067
        gbc.setState(0x2949, 0xc275, 0x7f80, 0x469f, 0x66ac, 0xfa53, 0x0, 0x1);
        gbc.writeMem(0x2949, { 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc275, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0068
        gbc.setState(0xe9c2, 0x6436, 0x1080, 0x46b7, 0x6587, 0x1daf, 0x1, 0x0);
        gbc.writeMem(0xe9c2, { 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe9c2));
        // 13 0069
        gbc.setState(0x5d2b, 0x21e6, 0x6bc0, 0xbd9a, 0x9aed, 0x994b, 0x0, 0x1);
        gbc.writeMem(0x5d2b, { 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x21e6, gbc.sp());
        EXPECT(0x5d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 006A
        gbc.setState(0xb7da, 0x5c64, 0x18e0, 0xbb8f, 0x77af, 0x5cf4, 0x0, 0x0);
        gbc.writeMem(0xb7da, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb7da));
        // 13 006B
        gbc.setState(0x8bfd, 0x9faa, 0x84c0, 0xb65, 0x29b2, 0xa29b, 0x1, 0x1);
        gbc.writeMem(0x8bfd, { 0x13 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9faa, gbc.sp());
        EXPECT(0x8bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8bfd));
        // 13 006C
        gbc.setState(0x1a9d, 0x7c54, 0x7730, 0x6d31, 0x7422, 0x4249, 0x1, 0x0);
        gbc.writeMem(0x1a9d, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x1a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 006D
        gbc.setState(0x6b08, 0xf363, 0x5d70, 0x3b65, 0xe5fa, 0x9a7f, 0x0, 0x1);
        gbc.writeMem(0x6b08, { 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0x6b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 006E
        gbc.setState(0xd16c, 0xffa0, 0x22a0, 0x8471, 0x8226, 0xfe78, 0x1, 0x1);
        gbc.writeMem(0xd16c, { 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd16c));
        // 13 006F
        gbc.setState(0xc0a1, 0x11d, 0xdc10, 0xbd0, 0xb136, 0x2a6f, 0x1, 0x0);
        gbc.writeMem(0xc0a1, { 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x11d, gbc.sp());
        EXPECT(0xc0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0a1));
        // 13 0070
        gbc.setState(0x5d99, 0x50ee, 0x2630, 0xa4b7, 0x3b71, 0x6411, 0x1, 0x1);
        gbc.writeMem(0x5d99, { 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x50ee, gbc.sp());
        EXPECT(0x5d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0071
        gbc.setState(0xc119, 0x1dbe, 0xb370, 0xb49e, 0xf177, 0x4b36, 0x1, 0x0);
        gbc.writeMem(0xc119, { 0x13 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc119));
        // 13 0072
        gbc.setState(0xd2b0, 0xeac2, 0x4b0, 0x51ca, 0x4e85, 0x4226, 0x0, 0x0);
        gbc.writeMem(0xd2b0, { 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0xd2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd2b0));
        // 13 0073
        gbc.setState(0x34cd, 0x837, 0x7620, 0x7a6, 0xb191, 0xdea5, 0x0, 0x0);
        gbc.writeMem(0x34cd, { 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x837, gbc.sp());
        EXPECT(0x34ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0074
        gbc.setState(0xb34f, 0x6bb, 0x12a0, 0x3e39, 0x6769, 0x493f, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6bb, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb34f));
        // 13 0075
        gbc.setState(0x7ab5, 0x1da1, 0xfc60, 0x96a4, 0x4882, 0xe9d3, 0x1, 0x0);
        gbc.writeMem(0x7ab5, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1da1, gbc.sp());
        EXPECT(0x7ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0076
        gbc.setState(0xaf6e, 0x4828, 0x6e40, 0x7264, 0x6d92, 0x1619, 0x1, 0x0);
        gbc.writeMem(0xaf6e, { 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaf6e));
        // 13 0077
        gbc.setState(0x2a0c, 0x9d81, 0xab0, 0xaa18, 0xdbf6, 0xffde, 0x1, 0x0);
        gbc.writeMem(0x2a0c, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9d81, gbc.sp());
        EXPECT(0x2a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0078
        gbc.setState(0x104, 0xfa9d, 0xb850, 0xf85b, 0x9c6, 0xf787, 0x1, 0x0);
        gbc.writeMem(0x104, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0079
        gbc.setState(0x5794, 0x26e4, 0x5bd0, 0x13d5, 0xf9a8, 0x3aa1, 0x0, 0x1);
        gbc.writeMem(0x5794, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 007A
        gbc.setState(0x1669, 0x9e20, 0x7fb0, 0x17cb, 0xc68, 0x73ef, 0x0, 0x1);
        gbc.writeMem(0x1669, { 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9e20, gbc.sp());
        EXPECT(0x166a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 007B
        gbc.setState(0x4516, 0xb715, 0x86f0, 0xda6b, 0x2431, 0x7949, 0x1, 0x1);
        gbc.writeMem(0x4516, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb715, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 007C
        gbc.setState(0x289b, 0x480c, 0xe370, 0x71e9, 0xbca2, 0xe13b, 0x1, 0x0);
        gbc.writeMem(0x289b, { 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 007D
        gbc.setState(0xb3d7, 0x3415, 0x2f40, 0x1051, 0x2639, 0xdaa6, 0x0, 0x0);
        gbc.writeMem(0xb3d7, { 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb3d7));
        // 13 007E
        gbc.setState(0x16e5, 0x12e1, 0x4c70, 0x8595, 0x780f, 0x82d3, 0x0, 0x0);
        gbc.writeMem(0x16e5, { 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x12e1, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0080
        gbc.setState(0x9d10, 0xbb90, 0x7220, 0x8687, 0xdbdf, 0x36c9, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbb90, gbc.sp());
        EXPECT(0x9d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9d10));
        // 13 0081
        gbc.setState(0xccf5, 0x50c1, 0x7050, 0xe7ed, 0xe337, 0xe102, 0x0, 0x1);
        gbc.writeMem(0xccf5, { 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x50c1, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xccf5));
        // 13 0082
        gbc.setState(0x185c, 0x712e, 0x76f0, 0x8ded, 0xd5ea, 0xbf5a, 0x0, 0x1);
        gbc.writeMem(0x185c, { 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x712e, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0083
        gbc.setState(0x81d8, 0x79ac, 0xf870, 0xaa34, 0xe12b, 0xe02b, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x79ac, gbc.sp());
        EXPECT(0x81d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x81d8));
        // 13 0084
        gbc.setState(0x22f2, 0xdda, 0x7760, 0x5b85, 0x850, 0xb92e, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdda, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0085
        gbc.setState(0x40a7, 0x4536, 0x50e0, 0xbc36, 0xd821, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0x40a7, { 0x13 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4536, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0086
        gbc.setState(0x648e, 0x18bd, 0xfc80, 0xd04c, 0xa342, 0x207a, 0x1, 0x1);
        gbc.writeMem(0x648e, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x18bd, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0087
        gbc.setState(0x29aa, 0x65db, 0x5660, 0x67f2, 0xb8f, 0x1cf0, 0x0, 0x1);
        gbc.writeMem(0x29aa, { 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x65db, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0088
        gbc.setState(0xd1b5, 0xcef6, 0x8050, 0xf148, 0x83ae, 0xf7e, 0x0, 0x0);
        gbc.writeMem(0xd1b5, { 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd1b5));
        // 13 0089
        gbc.setState(0x8bff, 0xe1e5, 0xd110, 0x7661, 0xf3c7, 0xfcb4, 0x0, 0x1);
        gbc.writeMem(0x8bff, { 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe1e5, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8bff));
        // 13 008A
        gbc.setState(0xae94, 0x3879, 0xa950, 0x2b65, 0xe831, 0xdaab, 0x1, 0x0);
        gbc.writeMem(0xae94, { 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0xae95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae94));
        // 13 008B
        gbc.setState(0x392b, 0x8203, 0x6890, 0x6ed5, 0xec02, 0xdad0, 0x0, 0x0);
        gbc.writeMem(0x392b, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0x392c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 008C
        gbc.setState(0xa7d8, 0x3ce1, 0x9390, 0x9c5, 0x3dbc, 0xe101, 0x1, 0x1);
        gbc.writeMem(0xa7d8, { 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3ce1, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa7d8));
        // 13 008D
        gbc.setState(0x1a21, 0xfefd, 0x7a0, 0x5f56, 0x660b, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0x1a21, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0x1a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 008E
        gbc.setState(0x70bd, 0x13e7, 0xc6f0, 0xf9f2, 0x949e, 0xe700, 0x1, 0x0);
        gbc.writeMem(0x70bd, { 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0x70be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 008F
        gbc.setState(0xb9a5, 0xc0bc, 0x16a0, 0x6b84, 0xf522, 0x83ae, 0x0, 0x0);
        gbc.writeMem(0xb9a5, { 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0xb9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb9a5));
        // 13 0090
        gbc.setState(0xed55, 0x4a6d, 0xf8a0, 0x422, 0xd4e5, 0x8101, 0x1, 0x0);
        gbc.writeMem(0xed55, { 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a6d, gbc.sp());
        EXPECT(0xed56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xed55));
        // 13 0091
        gbc.setState(0xd39d, 0x6b5c, 0xaad0, 0xd048, 0x6a77, 0x6418, 0x1, 0x0);
        gbc.writeMem(0xd39d, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6b5c, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd39d));
        // 13 0092
        gbc.setState(0xadc3, 0xac8e, 0xabe0, 0x86c1, 0xb16e, 0x7b78, 0x0, 0x1);
        gbc.writeMem(0xadc3, { 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xac8e, gbc.sp());
        EXPECT(0xadc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xadc3));
        // 13 0093
        gbc.setState(0xa8cf, 0x619f, 0x8e80, 0xb5f3, 0x8895, 0x9ec4, 0x1, 0x0);
        gbc.writeMem(0xa8cf, { 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x619f, gbc.sp());
        EXPECT(0xa8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa8cf));
        // 13 0094
        gbc.setState(0x3f60, 0xbd03, 0x5ee0, 0xe90d, 0x1164, 0x8290, 0x1, 0x0);
        gbc.writeMem(0x3f60, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbd03, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0095
        gbc.setState(0xd0ab, 0x8947, 0xcf40, 0x298f, 0xe7ef, 0x5e9, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8947, gbc.sp());
        EXPECT(0xd0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd0ab));
        // 13 0096
        gbc.setState(0xed46, 0x27dc, 0x72b0, 0x9848, 0x69b9, 0x3e9e, 0x1, 0x1);
        gbc.writeMem(0xed46, { 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x27dc, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xed46));
        // 13 0097
        gbc.setState(0xc8d0, 0x4296, 0x7350, 0xd94e, 0xad6b, 0x6a67, 0x1, 0x0);
        gbc.writeMem(0xc8d0, { 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4296, gbc.sp());
        EXPECT(0xc8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc8d0));
        // 13 0098
        gbc.setState(0x9bdd, 0x8ed8, 0xbf20, 0xac84, 0xdc15, 0x896, 0x0, 0x0);
        gbc.writeMem(0x9bdd, { 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8ed8, gbc.sp());
        EXPECT(0x9bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9bdd));
        // 13 0099
        gbc.setState(0xc7f, 0xc1e5, 0x7cf0, 0xfe20, 0x222a, 0x4d5d, 0x0, 0x0);
        gbc.writeMem(0xc7f, { 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0xc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 009A
        gbc.setState(0x7bd1, 0x17e0, 0xbbd0, 0xd0a6, 0x4194, 0x7fa3, 0x1, 0x0);
        gbc.writeMem(0x7bd1, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x17e0, gbc.sp());
        EXPECT(0x7bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 009B
        gbc.setState(0xe4fb, 0x7812, 0x4bd0, 0x7aeb, 0x832f, 0x428b, 0x1, 0x0);
        gbc.writeMem(0xe4fb, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7812, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe4fb));
        // 13 009C
        gbc.setState(0x8aeb, 0x58d9, 0x3c0, 0xeaf1, 0xc252, 0x4bb4, 0x0, 0x1);
        gbc.writeMem(0x8aeb, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x58d9, gbc.sp());
        EXPECT(0x8aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8aeb));
        // 13 009D
        gbc.setState(0x76c, 0xc46, 0x9790, 0x2e73, 0x4523, 0x6dc4, 0x0, 0x0);
        gbc.writeMem(0x76c, { 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc46, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 009E
        gbc.setState(0x162d, 0xbdd9, 0x1a0, 0x97d5, 0x7a6e, 0x8dff, 0x1, 0x1);
        gbc.writeMem(0x162d, { 0x13 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbdd9, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 009F
        gbc.setState(0x6c5d, 0x1679, 0x6790, 0x49ca, 0xf92, 0x3afa, 0x0, 0x1);
        gbc.writeMem(0x6c5d, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1679, gbc.sp());
        EXPECT(0x6c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00A0
        gbc.setState(0x6425, 0xbc7c, 0x8800, 0x9562, 0xe59a, 0xe1a3, 0x1, 0x1);
        gbc.writeMem(0x6425, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0x6426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00A1
        gbc.setState(0x16e1, 0x9334, 0xa030, 0xfacd, 0xfa99, 0xe082, 0x0, 0x1);
        gbc.writeMem(0x16e1, { 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9334, gbc.sp());
        EXPECT(0x16e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00A2
        gbc.setState(0x7a9e, 0x490e, 0xa410, 0xd55a, 0x119f, 0x43e8, 0x1, 0x1);
        gbc.writeMem(0x7a9e, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x490e, gbc.sp());
        EXPECT(0x7a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00A4
        gbc.setState(0xda7e, 0xfc53, 0x4250, 0x619f, 0xc3b6, 0xba91, 0x0, 0x1);
        gbc.writeMem(0xda7e, { 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0xda7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xda7e));
        // 13 00A5
        gbc.setState(0x4221, 0x3ed5, 0x1fd0, 0x2b3a, 0xf880, 0x7117, 0x0, 0x0);
        gbc.writeMem(0x4221, { 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0x4222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00A6
        gbc.setState(0xb2, 0x385a, 0xa410, 0x5ade, 0x1d3c, 0xed07, 0x0, 0x0);
        gbc.writeMem(0xb2, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x385a, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00A7
        gbc.setState(0xe55b, 0x1d69, 0x2380, 0xe6bb, 0x7d9e, 0x7c91, 0x1, 0x1);
        gbc.writeMem(0xe55b, { 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d69, gbc.sp());
        EXPECT(0xe55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe55b));
        // 13 00A8
        gbc.setState(0x61c4, 0xd5c5, 0x5e20, 0x98b4, 0xdcb6, 0x1980, 0x1, 0x0);
        gbc.writeMem(0x61c4, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd5c5, gbc.sp());
        EXPECT(0x61c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00A9
        gbc.setState(0xd15e, 0xd4ca, 0xa1c0, 0x9e56, 0xb926, 0xfb6c, 0x0, 0x1);
        gbc.writeMem(0xd15e, { 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd15e));
        // 13 00AA
        gbc.setState(0xb737, 0x58c1, 0x5d40, 0x7ce9, 0x1cb4, 0x871e, 0x1, 0x0);
        gbc.writeMem(0xb737, { 0x13 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb737));
        // 13 00AB
        gbc.setState(0x8483, 0x6b94, 0x94e0, 0x4a5f, 0x1c25, 0xaf7e, 0x1, 0x1);
        gbc.writeMem(0x8483, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6b94, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8483));
        // 13 00AC
        gbc.setState(0x65fa, 0x2f8f, 0x3990, 0x69de, 0xcc8, 0xe9c8, 0x0, 0x1);
        gbc.writeMem(0x65fa, { 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00AD
        gbc.setState(0xdcfc, 0xc0bd, 0x4950, 0x9941, 0x777e, 0xbb1, 0x0, 0x0);
        gbc.writeMem(0xdcfc, { 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdcfc));
        // 13 00AE
        gbc.setState(0xa57a, 0xcc05, 0x33b0, 0x7a06, 0x9831, 0x611, 0x1, 0x1);
        gbc.writeMem(0xa57a, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcc05, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa57a));
        // 13 00AF
        gbc.setState(0x3301, 0x130d, 0xf0, 0x7535, 0x6b35, 0x2cb0, 0x1, 0x1);
        gbc.writeMem(0x3301, { 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0x3302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00B0
        gbc.setState(0xc1f, 0x4653, 0x6260, 0x7428, 0x5b79, 0xef45, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4653, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00B1
        gbc.setState(0x2879, 0x135d, 0xf8b0, 0xb9d8, 0x5fe4, 0x6026, 0x1, 0x0);
        gbc.writeMem(0x2879, { 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00B2
        gbc.setState(0x90ca, 0xeb, 0x4140, 0x6da5, 0x7622, 0x2606, 0x0, 0x1);
        gbc.writeMem(0x90ca, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x90cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x90ca));
        // 13 00B3
        gbc.setState(0x14c1, 0x1c0a, 0xe480, 0x1fd6, 0xa2f7, 0xb5dd, 0x1, 0x0);
        gbc.writeMem(0x14c1, { 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1c0a, gbc.sp());
        EXPECT(0x14c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00B4
        gbc.setState(0x9979, 0x4b45, 0xd890, 0xa7f7, 0xe565, 0xe689, 0x0, 0x1);
        gbc.writeMem(0x9979, { 0x13 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9979));
        // 13 00B5
        gbc.setState(0x7139, 0x486d, 0xd060, 0xc69e, 0x2ea2, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x7139, { 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00B6
        gbc.setState(0x70b8, 0x6123, 0x2c20, 0x4a82, 0x4d5f, 0x1fa8, 0x1, 0x1);
        gbc.writeMem(0x70b8, { 0x13 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6123, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00B7
        gbc.setState(0xd9a7, 0xe5fd, 0x85a0, 0x1786, 0x666b, 0x9a3a, 0x0, 0x1);
        gbc.writeMem(0xd9a7, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0xd9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd9a7));
        // 13 00B8
        gbc.setState(0xacaf, 0xee2f, 0x13f0, 0xf8b5, 0x956f, 0x61be, 0x0, 0x1);
        gbc.writeMem(0xacaf, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xacaf));
        // 13 00B9
        gbc.setState(0xb72, 0xaffe, 0xc440, 0x7c6, 0xad1f, 0xab9f, 0x1, 0x1);
        gbc.writeMem(0xb72, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaffe, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00BA
        gbc.setState(0x7e1f, 0xb5e5, 0xc450, 0x9f40, 0xb91b, 0xe2d8, 0x1, 0x0);
        gbc.writeMem(0x7e1f, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00BB
        gbc.setState(0xc389, 0x49b7, 0x61d0, 0x4dbd, 0x98ca, 0x54ef, 0x1, 0x0);
        gbc.writeMem(0xc389, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc389));
        // 13 00BC
        gbc.setState(0x30bf, 0x7908, 0x92b0, 0xda3c, 0x8a3b, 0x8845, 0x0, 0x1);
        gbc.writeMem(0x30bf, { 0x13 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7908, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00BD
        gbc.setState(0x630b, 0xf09d, 0xd270, 0x3418, 0xc1b0, 0x4d2, 0x0, 0x0);
        gbc.writeMem(0x630b, { 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf09d, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00BF
        gbc.setState(0xe04a, 0x3ae0, 0x85d0, 0x1759, 0x3ae5, 0x7746, 0x1, 0x1);
        gbc.writeMem(0xe04a, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3ae0, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe04a));
        // 13 00C0
        gbc.setState(0x7123, 0xbd1d, 0x4d40, 0x20c5, 0x6a4f, 0x5439, 0x0, 0x0);
        gbc.writeMem(0x7123, { 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0x7124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00C1
        gbc.setState(0xbf1b, 0x8dcd, 0xd720, 0xb4eb, 0xc3c3, 0x85aa, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0x13 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8dcd, gbc.sp());
        EXPECT(0xbf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf1b));
        // 13 00C2
        gbc.setState(0x1f24, 0x2acb, 0xeaf0, 0x1400, 0x505d, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0x1f24, { 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2acb, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00C3
        gbc.setState(0xe0aa, 0xff31, 0x9d10, 0x2d03, 0xb570, 0xaa14, 0x0, 0x0);
        gbc.writeMem(0xe0aa, { 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe0aa));
        // 13 00C4
        gbc.setState(0x8624, 0x69d, 0xca30, 0x3bb1, 0x3910, 0x5bb8, 0x1, 0x0);
        gbc.writeMem(0x8624, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x69d, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8624));
        // 13 00C5
        gbc.setState(0xde81, 0xc8f7, 0x2630, 0x67a8, 0x6b5b, 0xc3be, 0x0, 0x0);
        gbc.writeMem(0xde81, { 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc8f7, gbc.sp());
        EXPECT(0xde82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xde81));
        // 13 00C7
        gbc.setState(0x26f5, 0x1601, 0x9540, 0xf18, 0xdfca, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0x26f5, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x26f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00C8
        gbc.setState(0xb518, 0x2b34, 0x4520, 0x55f9, 0x2b86, 0xdea8, 0x0, 0x1);
        gbc.writeMem(0xb518, { 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0xb519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb518));
        // 13 00C9
        gbc.setState(0x5b1a, 0x6337, 0x1a20, 0xbd87, 0xfa0b, 0xbf8, 0x1, 0x0);
        gbc.writeMem(0x5b1a, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6337, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00CA
        gbc.setState(0x872e, 0xd789, 0x3620, 0xb0d5, 0xd34c, 0x3433, 0x0, 0x1);
        gbc.writeMem(0x872e, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd789, gbc.sp());
        EXPECT(0x872f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x872e));
        // 13 00CB
        gbc.setState(0x5fb3, 0x37a6, 0x1810, 0x59d, 0x56d7, 0x6018, 0x0, 0x0);
        gbc.writeMem(0x5fb3, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x37a6, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00CC
        gbc.setState(0xb93d, 0xbc93, 0x7240, 0xc2f7, 0x5958, 0x4562, 0x0, 0x0);
        gbc.writeMem(0xb93d, { 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbc93, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb93d));
        // 13 00CD
        gbc.setState(0xb5a0, 0xbe00, 0xde40, 0xcdfd, 0x4428, 0x2688, 0x0, 0x1);
        gbc.writeMem(0xb5a0, { 0x13 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbe00, gbc.sp());
        EXPECT(0xb5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb5a0));
        // 13 00CE
        gbc.setState(0x5340, 0xcd50, 0x7ef0, 0xf2cb, 0xbff0, 0xc7f, 0x1, 0x0);
        gbc.writeMem(0x5340, { 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x5341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D0
        gbc.setState(0xa38b, 0x3793, 0x88e0, 0x89ba, 0x1208, 0x4249, 0x1, 0x0);
        gbc.writeMem(0xa38b, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3793, gbc.sp());
        EXPECT(0xa38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa38b));
        // 13 00D1
        gbc.setState(0x2ca0, 0x1fea, 0xfdb0, 0x1688, 0xd21d, 0x23e9, 0x1, 0x1);
        gbc.writeMem(0x2ca0, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1fea, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D2
        gbc.setState(0x61a6, 0xc4c4, 0xb690, 0x3fa7, 0xa510, 0xe104, 0x0, 0x0);
        gbc.writeMem(0x61a6, { 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc4c4, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D3
        gbc.setState(0xc89, 0xdabb, 0x9a50, 0x5d33, 0x2b81, 0xb27, 0x1, 0x1);
        gbc.writeMem(0xc89, { 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdabb, gbc.sp());
        EXPECT(0xc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D4
        gbc.setState(0xbc01, 0x1259, 0x79c0, 0x7cc3, 0x6397, 0xe5f7, 0x0, 0x1);
        gbc.writeMem(0xbc01, { 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0xbc02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbc01));
        // 13 00D5
        gbc.setState(0x4907, 0x2494, 0x89d0, 0x5f37, 0xe352, 0xe337, 0x1, 0x0);
        gbc.writeMem(0x4907, { 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0x4908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D6
        gbc.setState(0xe412, 0x80e2, 0xfb30, 0xdf64, 0xac30, 0xe06c, 0x1, 0x1);
        gbc.writeMem(0xe412, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe412));
        // 13 00D7
        gbc.setState(0xe20e, 0x4d66, 0x81d0, 0x217f, 0x7d0d, 0xb166, 0x0, 0x0);
        gbc.writeMem(0xe20e, { 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe20e));
        // 13 00D8
        gbc.setState(0x4281, 0x7b50, 0xa990, 0x7088, 0xff0d, 0x5ddc, 0x1, 0x0);
        gbc.writeMem(0x4281, { 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00D9
        gbc.setState(0xe93c, 0x2509, 0xd010, 0x3d67, 0x538c, 0x5de5, 0x1, 0x0);
        gbc.writeMem(0xe93c, { 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2509, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe93c));
        // 13 00DA
        gbc.setState(0x28ee, 0x141a, 0x480, 0xc937, 0x3f39, 0xa9c3, 0x1, 0x1);
        gbc.writeMem(0x28ee, { 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0x28ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00DB
        gbc.setState(0x95a7, 0x824c, 0xbc20, 0x52b3, 0xe391, 0xa59a, 0x0, 0x1);
        gbc.writeMem(0x95a7, { 0x13 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x824c, gbc.sp());
        EXPECT(0x95a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x95a7));
        // 13 00DC
        gbc.setState(0x8a84, 0xbe0d, 0x7180, 0xfe4c, 0x11c5, 0xf1ef, 0x1, 0x0);
        gbc.writeMem(0x8a84, { 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x8a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8a84));
        // 13 00DE
        gbc.setState(0x32a4, 0x935, 0xb810, 0x3815, 0xba52, 0xcc49, 0x1, 0x0);
        gbc.writeMem(0x32a4, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00DF
        gbc.setState(0x8c99, 0xe20, 0xb100, 0x8a0d, 0x6901, 0xec96, 0x0, 0x0);
        gbc.writeMem(0x8c99, { 0x13 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x8c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8c99));
        // 13 00E0
        gbc.setState(0xa054, 0x1ca0, 0x5ae0, 0xe1bc, 0xda20, 0x828, 0x1, 0x0);
        gbc.writeMem(0xa054, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa054));
        // 13 00E1
        gbc.setState(0xdb87, 0xb131, 0x3ca0, 0xeb45, 0x71d7, 0x76ad, 0x1, 0x1);
        gbc.writeMem(0xdb87, { 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0xdb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdb87));
        // 13 00E2
        gbc.setState(0x796b, 0xae50, 0x6820, 0x7a4, 0x4fe, 0xdb66, 0x1, 0x1);
        gbc.writeMem(0x796b, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00E3
        gbc.setState(0x69d3, 0xaa54, 0x6a60, 0xaa32, 0xecb2, 0xe1ad, 0x0, 0x1);
        gbc.writeMem(0x69d3, { 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00E4
        gbc.setState(0xcf43, 0x947, 0x7550, 0xa623, 0x5fd7, 0xf63c, 0x0, 0x1);
        gbc.writeMem(0xcf43, { 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x947, gbc.sp());
        EXPECT(0xcf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcf43));
        // 13 00E5
        gbc.setState(0xa7a5, 0xe095, 0x8a40, 0x487a, 0xba1, 0x544c, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe095, gbc.sp());
        EXPECT(0xa7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa7a5));
        // 13 00E6
        gbc.setState(0x5997, 0xe099, 0xccb0, 0x3b3b, 0x3730, 0x5acc, 0x0, 0x1);
        gbc.writeMem(0x5997, { 0x13 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00E7
        gbc.setState(0x46f2, 0xfbc8, 0x6850, 0x1df0, 0x137a, 0x568f, 0x0, 0x0);
        gbc.writeMem(0x46f2, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfbc8, gbc.sp());
        EXPECT(0x46f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00E9
        gbc.setState(0x1ecd, 0x2cc5, 0x2220, 0x972, 0xe010, 0xe8ed, 0x0, 0x1);
        gbc.writeMem(0x1ecd, { 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2cc5, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00EA
        gbc.setState(0x4121, 0x4d69, 0xa520, 0x6522, 0x7eec, 0xe557, 0x1, 0x1);
        gbc.writeMem(0x4121, { 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4d69, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00EB
        gbc.setState(0x9ed8, 0x6f2, 0x6690, 0xfb84, 0xbb0f, 0xbf03, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9ed8));
        // 13 00EC
        gbc.setState(0x7ad8, 0x3d97, 0x47f0, 0x8a3d, 0x66c9, 0xbed7, 0x0, 0x1);
        gbc.writeMem(0x7ad8, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3d97, gbc.sp());
        EXPECT(0x7ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00ED
        gbc.setState(0x1e5b, 0x4cd, 0x9490, 0xfa52, 0x4961, 0xfec5, 0x1, 0x1);
        gbc.writeMem(0x1e5b, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4cd, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00EE
        gbc.setState(0x65dc, 0xeacb, 0x68f0, 0x7a45, 0x36a4, 0xb304, 0x1, 0x1);
        gbc.writeMem(0x65dc, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeacb, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00EF
        gbc.setState(0x41b4, 0x9abf, 0xaca0, 0x1c75, 0xf5b7, 0x8b88, 0x1, 0x0);
        gbc.writeMem(0x41b4, { 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0x41b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00F0
        gbc.setState(0xc26d, 0x8177, 0x9f50, 0x4b0e, 0x4bfb, 0xbafe, 0x0, 0x1);
        gbc.writeMem(0xc26d, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8177, gbc.sp());
        EXPECT(0xc26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc26d));
        // 13 00F1
        gbc.setState(0x8f20, 0xea5f, 0x5bb0, 0x4a7f, 0xe163, 0x7916, 0x0, 0x1);
        gbc.writeMem(0x8f20, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0x8f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8f20));
        // 13 00F2
        gbc.setState(0xe3a3, 0xf88c, 0x3d90, 0x9bcb, 0x4e, 0xdc40, 0x0, 0x0);
        gbc.writeMem(0xe3a3, { 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf88c, gbc.sp());
        EXPECT(0xe3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe3a3));
        // 13 00F3
        gbc.setState(0x57db, 0x76ae, 0x37c0, 0x1340, 0x4071, 0x193b, 0x1, 0x0);
        gbc.writeMem(0x57db, { 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00F4
        gbc.setState(0x667, 0x9469, 0xe4f0, 0x6e5c, 0xfbe1, 0x9f2b, 0x0, 0x0);
        gbc.writeMem(0x667, { 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00F5
        gbc.setState(0xea9e, 0x190f, 0xcd20, 0xbdc4, 0x220a, 0x27a1, 0x0, 0x1);
        gbc.writeMem(0xea9e, { 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x190f, gbc.sp());
        EXPECT(0xea9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xea9e));
        // 13 00F6
        gbc.setState(0x3e22, 0xfaa5, 0xee60, 0xd1c4, 0x8a15, 0x7eb4, 0x1, 0x1);
        gbc.writeMem(0x3e22, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00F7
        gbc.setState(0x4a36, 0x9e4b, 0xf730, 0x9fc8, 0xbf94, 0x23a8, 0x0, 0x1);
        gbc.writeMem(0x4a36, { 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9e4b, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 00F8
        gbc.setState(0xb51f, 0x9464, 0x3040, 0x9de7, 0xbfb, 0x2b85, 0x1, 0x1);
        gbc.writeMem(0xb51f, { 0x13 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9464, gbc.sp());
        EXPECT(0xb520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb51f));
        // 13 00F9
        gbc.setState(0xcd81, 0xc577, 0x9c30, 0x56e4, 0x1b0, 0xfeff, 0x1, 0x0);
        gbc.writeMem(0xcd81, { 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc577, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd81));
        // 13 00FA
        gbc.setState(0x3885, 0xbb43, 0x6280, 0xf233, 0x9a1, 0xc9fb, 0x1, 0x0);
        gbc.writeMem(0x3885, { 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0x3886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00FB
        gbc.setState(0x759c, 0x861d, 0xfde0, 0x4eaa, 0x64aa, 0xcd1f, 0x1, 0x0);
        gbc.writeMem(0x759c, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00FC
        gbc.setState(0xd50b, 0xb5ae, 0x1cb0, 0xfcfb, 0xd3ac, 0xed5, 0x0, 0x0);
        gbc.writeMem(0xd50b, { 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0xd50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd50b));
        // 13 00FD
        gbc.setState(0xcd41, 0x9fe3, 0xe1d0, 0xbdea, 0x7b26, 0x73ab, 0x0, 0x1);
        gbc.writeMem(0xcd41, { 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xcd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd41));
        // 13 00FE
        gbc.setState(0x7db1, 0xbae6, 0xd940, 0x4c22, 0x1542, 0xbc7b, 0x0, 0x0);
        gbc.writeMem(0x7db1, { 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0x7db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 00FF
        gbc.setState(0x1530, 0x46e3, 0x5600, 0xa8bf, 0x3b98, 0x655a, 0x1, 0x1);
        gbc.writeMem(0x1530, { 0x13 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x46e3, gbc.sp());
        EXPECT(0x1531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0100
        gbc.setState(0xe757, 0xd36, 0xcb40, 0xbd68, 0x4adc, 0x4288, 0x1, 0x0);
        gbc.writeMem(0xe757, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd36, gbc.sp());
        EXPECT(0xe758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe757));
        // 13 0101
        gbc.setState(0x10d0, 0x40be, 0x4e90, 0x8400, 0xd104, 0x3595, 0x1, 0x0);
        gbc.writeMem(0x10d0, { 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0102
        gbc.setState(0x5591, 0xc195, 0x42b0, 0x3f4b, 0xfb9f, 0xad87, 0x0, 0x1);
        gbc.writeMem(0x5591, { 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0103
        gbc.setState(0x328, 0x2b54, 0xb500, 0xf404, 0x8500, 0x79ef, 0x0, 0x1);
        gbc.writeMem(0x328, { 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0x329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0105
        gbc.setState(0x20e2, 0x80b8, 0xddb0, 0x7497, 0x296f, 0x7418, 0x1, 0x0);
        gbc.writeMem(0x20e2, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x80b8, gbc.sp());
        EXPECT(0x20e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0106
        gbc.setState(0x8927, 0x1b4, 0xd50, 0x85b, 0xcb5a, 0x1f21, 0x0, 0x1);
        gbc.writeMem(0x8927, { 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0x8928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8927));
        // 13 0107
        gbc.setState(0x7f1b, 0xf615, 0x6270, 0x9f75, 0xf4d8, 0x5a1f, 0x1, 0x0);
        gbc.writeMem(0x7f1b, { 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf615, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0108
        gbc.setState(0xc44e, 0xd017, 0x6e90, 0xfd2d, 0xb74b, 0x7724, 0x1, 0x1);
        gbc.writeMem(0xc44e, { 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd017, gbc.sp());
        EXPECT(0xc44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc44e));
        // 13 010A
        gbc.setState(0x881b, 0x8be, 0x2c30, 0x27a1, 0x740a, 0xc7f9, 0x1, 0x1);
        gbc.writeMem(0x881b, { 0x13 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8be, gbc.sp());
        EXPECT(0x881c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x881b));
        // 13 010B
        gbc.setState(0x9692, 0x495b, 0xe7c0, 0x61d1, 0x5459, 0x2c4e, 0x0, 0x1);
        gbc.writeMem(0x9692, { 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9692));
        // 13 010C
        gbc.setState(0xbf69, 0xa555, 0xa540, 0x6314, 0x6cf9, 0x39c, 0x0, 0x0);
        gbc.writeMem(0xbf69, { 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0xbf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf69));
        // 13 010D
        gbc.setState(0xa66c, 0xf69, 0x7770, 0xb4de, 0xff80, 0x8b79, 0x1, 0x1);
        gbc.writeMem(0xa66c, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf69, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa66c));
        // 13 010E
        gbc.setState(0xbf88, 0x7d2a, 0x8c80, 0xffe5, 0x8dd7, 0x2f3b, 0x1, 0x0);
        gbc.writeMem(0xbf88, { 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7d2a, gbc.sp());
        EXPECT(0xbf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf88));
        // 13 010F
        gbc.setState(0xbd98, 0x73ae, 0x7b0, 0x31e8, 0x6e8f, 0x4d8d, 0x0, 0x1);
        gbc.writeMem(0xbd98, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x73ae, gbc.sp());
        EXPECT(0xbd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd98));
        // 13 0110
        gbc.setState(0xa854, 0xf06c, 0x5eb0, 0x77b6, 0x74db, 0x98b0, 0x0, 0x1);
        gbc.writeMem(0xa854, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf06c, gbc.sp());
        EXPECT(0xa855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa854));
        // 13 0111
        gbc.setState(0x783b, 0x62fc, 0x9010, 0xe3f9, 0x3b3d, 0x3c9, 0x0, 0x1);
        gbc.writeMem(0x783b, { 0x13 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x62fc, gbc.sp());
        EXPECT(0x783c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0112
        gbc.setState(0xe066, 0x1ac2, 0xa160, 0x28a1, 0xe7d6, 0xdaa4, 0x1, 0x1);
        gbc.writeMem(0xe066, { 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1ac2, gbc.sp());
        EXPECT(0xe067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe066));
        // 13 0113
        gbc.setState(0xac01, 0xf76b, 0xacb0, 0xbf65, 0x97d8, 0xb76c, 0x1, 0x0);
        gbc.writeMem(0xac01, { 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf76b, gbc.sp());
        EXPECT(0xac02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xac01));
        // 13 0114
        gbc.setState(0xdd3c, 0x3c4d, 0xbd40, 0xce5f, 0x3cfd, 0x3554, 0x0, 0x0);
        gbc.writeMem(0xdd3c, { 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0xdd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdd3c));
        // 13 0115
        gbc.setState(0xeb2f, 0x454c, 0x310, 0xba56, 0xf21c, 0xdc55, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x454c, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeb2f));
        // 13 0116
        gbc.setState(0xed82, 0x3a2e, 0x5ed0, 0xed4d, 0x738d, 0x910d, 0x1, 0x0);
        gbc.writeMem(0xed82, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a2e, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xed82));
        // 13 0117
        gbc.setState(0x1095, 0x36a5, 0x8fd0, 0xf708, 0xad57, 0xccd7, 0x0, 0x0);
        gbc.writeMem(0x1095, { 0x13 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0x1096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0118
        gbc.setState(0x7e4a, 0x9ba4, 0x3ec0, 0xdc3b, 0x49ed, 0xf11c, 0x1, 0x0);
        gbc.writeMem(0x7e4a, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9ba4, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0119
        gbc.setState(0xad6, 0xf78f, 0x2f20, 0x64ba, 0xdc2b, 0x90c2, 0x0, 0x1);
        gbc.writeMem(0xad6, { 0x13 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0xad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 011A
        gbc.setState(0xd4b5, 0x58d9, 0x1480, 0xb034, 0xcb33, 0x543f, 0x0, 0x1);
        gbc.writeMem(0xd4b5, { 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x58d9, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd4b5));
        // 13 011B
        gbc.setState(0x3876, 0x79a2, 0x23e0, 0x845, 0xc4de, 0xea53, 0x1, 0x1);
        gbc.writeMem(0x3876, { 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 011C
        gbc.setState(0xd204, 0x23e4, 0xdf50, 0x56d2, 0xaa80, 0xf94f, 0x0, 0x0);
        gbc.writeMem(0xd204, { 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0xd205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd204));
        // 13 011D
        gbc.setState(0xa1b6, 0xfd28, 0xff00, 0x1ef6, 0x9b28, 0xf430, 0x1, 0x0);
        gbc.writeMem(0xa1b6, { 0x13 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfd28, gbc.sp());
        EXPECT(0xa1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa1b6));
        // 13 011E
        gbc.setState(0x5b1, 0x5808, 0x4880, 0x603, 0xf756, 0xaf2b, 0x1, 0x0);
        gbc.writeMem(0x5b1, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0x5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 011F
        gbc.setState(0x3156, 0xeb0, 0x85d0, 0x1420, 0x78a9, 0x443, 0x1, 0x0);
        gbc.writeMem(0x3156, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0120
        gbc.setState(0xb4d2, 0xc5e4, 0x36e0, 0x3b4a, 0x1b8f, 0xc04c, 0x1, 0x1);
        gbc.writeMem(0xb4d2, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc5e4, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb4d2));
        // 13 0121
        gbc.setState(0x5bc0, 0xca76, 0x5bd0, 0x4541, 0xa436, 0x3eb6, 0x0, 0x1);
        gbc.writeMem(0x5bc0, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x5bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0122
        gbc.setState(0xfa0, 0xed9e, 0x8c80, 0xf9bd, 0xc813, 0x6fc7, 0x1, 0x0);
        gbc.writeMem(0xfa0, { 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0xfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0123
        gbc.setState(0x50f8, 0x5f51, 0xddd0, 0x9b7f, 0x980a, 0xf843, 0x0, 0x1);
        gbc.writeMem(0x50f8, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5f51, gbc.sp());
        EXPECT(0x50f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0124
        gbc.setState(0xe9ae, 0xd3f7, 0x9190, 0xfc4a, 0xadbb, 0x9a4a, 0x1, 0x0);
        gbc.writeMem(0xe9ae, { 0x13 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd3f7, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe9ae));
        // 13 0125
        gbc.setState(0x2d11, 0x7590, 0xe390, 0x54a, 0xf934, 0x1f25, 0x0, 0x0);
        gbc.writeMem(0x2d11, { 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7590, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0126
        gbc.setState(0x4da6, 0xf389, 0x7e10, 0x17d, 0xbcfb, 0xede6, 0x0, 0x0);
        gbc.writeMem(0x4da6, { 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0x4da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0127
        gbc.setState(0x309e, 0xf32a, 0xdf40, 0x791c, 0xa51, 0x40bc, 0x0, 0x1);
        gbc.writeMem(0x309e, { 0x13 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0x309f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0128
        gbc.setState(0xbd87, 0x80a6, 0xf170, 0x8116, 0x8acb, 0xf383, 0x0, 0x0);
        gbc.writeMem(0xbd87, { 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80a6, gbc.sp());
        EXPECT(0xbd88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd87));
        // 13 0129
        gbc.setState(0xf8b, 0xaf2e, 0x3110, 0xf612, 0xbb88, 0x7a20, 0x1, 0x0);
        gbc.writeMem(0xf8b, { 0x13 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf2e, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 012A
        gbc.setState(0xa28e, 0x459, 0x9860, 0x8bfa, 0x108c, 0x30e7, 0x1, 0x1);
        gbc.writeMem(0xa28e, { 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa28e));
        // 13 012B
        gbc.setState(0x4e87, 0x6e0a, 0xb920, 0x8610, 0x4be8, 0xf0f9, 0x0, 0x0);
        gbc.writeMem(0x4e87, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6e0a, gbc.sp());
        EXPECT(0x4e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 012C
        gbc.setState(0x1b2b, 0xd98a, 0x52c0, 0xdf22, 0x8a1, 0xd996, 0x0, 0x0);
        gbc.writeMem(0x1b2b, { 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 012D
        gbc.setState(0xd45d, 0x6e51, 0x9770, 0xe6f3, 0xf4c2, 0x386d, 0x0, 0x1);
        gbc.writeMem(0xd45d, { 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd45d));
        // 13 012E
        gbc.setState(0xaa99, 0xf8c1, 0x6180, 0x10d0, 0x4092, 0xa791, 0x0, 0x1);
        gbc.writeMem(0xaa99, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0xaa9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaa99));
        // 13 012F
        gbc.setState(0xecad, 0xc975, 0xadc0, 0x2cbd, 0x9cd4, 0x3e15, 0x0, 0x0);
        gbc.writeMem(0xecad, { 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0xecae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xecad));
        // 13 0130
        gbc.setState(0xccbe, 0xaf18, 0xda90, 0x35f3, 0xae03, 0xfa11, 0x0, 0x0);
        gbc.writeMem(0xccbe, { 0x13 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0xccbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xccbe));
        // 13 0131
        gbc.setState(0x11b7, 0xf207, 0xfd00, 0x443c, 0x8698, 0x7d9e, 0x0, 0x1);
        gbc.writeMem(0x11b7, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0132
        gbc.setState(0x237c, 0xff2e, 0x9450, 0x799f, 0x403d, 0x8947, 0x0, 0x0);
        gbc.writeMem(0x237c, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xff2e, gbc.sp());
        EXPECT(0x237d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0133
        gbc.setState(0xd758, 0xc805, 0x4280, 0xcddb, 0x3768, 0x1984, 0x0, 0x1);
        gbc.writeMem(0xd758, { 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc805, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd758));
        // 13 0134
        gbc.setState(0x41b6, 0x19aa, 0xb10, 0xeb68, 0x9905, 0xa237, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0x13 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x41b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0135
        gbc.setState(0xc026, 0xd126, 0x41a0, 0x46b0, 0xccb7, 0xdce3, 0x0, 0x0);
        gbc.writeMem(0xc026, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0xc027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc026));
        // 13 0137
        gbc.setState(0xa9a3, 0x1b50, 0x9e60, 0xa91f, 0x4e9, 0xd887, 0x0, 0x0);
        gbc.writeMem(0xa9a3, { 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa9a3));
        // 13 0139
        gbc.setState(0x8a98, 0xc65d, 0x7c70, 0x9ed5, 0x7a81, 0x9bef, 0x1, 0x0);
        gbc.writeMem(0x8a98, { 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc65d, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8a98));
        // 13 013A
        gbc.setState(0x3934, 0x70b5, 0xf640, 0x4008, 0xa47d, 0xc973, 0x0, 0x0);
        gbc.writeMem(0x3934, { 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x70b5, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 013B
        gbc.setState(0x1d41, 0x2c9b, 0x65f0, 0x1fb5, 0x4211, 0x4b49, 0x0, 0x1);
        gbc.writeMem(0x1d41, { 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2c9b, gbc.sp());
        EXPECT(0x1d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 013C
        gbc.setState(0x7a44, 0xefae, 0xa810, 0xade9, 0x7a39, 0xdc92, 0x1, 0x1);
        gbc.writeMem(0x7a44, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x7a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 013D
        gbc.setState(0xac33, 0x2862, 0x7ac0, 0xb2e1, 0xf996, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0xac33, { 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0xac34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xac33));
        // 13 013E
        gbc.setState(0x463, 0xb3ea, 0x8020, 0xd166, 0xa931, 0xf9e1, 0x1, 0x0);
        gbc.writeMem(0x463, { 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb3ea, gbc.sp());
        EXPECT(0x464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 013F
        gbc.setState(0x62e4, 0x698e, 0xcef0, 0x490f, 0xbaee, 0xfa0, 0x1, 0x1);
        gbc.writeMem(0x62e4, { 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x698e, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0140
        gbc.setState(0x4824, 0xdfac, 0x6850, 0xa352, 0xb8c7, 0x760c, 0x0, 0x0);
        gbc.writeMem(0x4824, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0x4825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0141
        gbc.setState(0x6c56, 0xe86f, 0xb850, 0x739f, 0xdcb0, 0x8c1d, 0x0, 0x1);
        gbc.writeMem(0x6c56, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe86f, gbc.sp());
        EXPECT(0x6c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0142
        gbc.setState(0x31d1, 0xf5b3, 0xc790, 0xf818, 0x1213, 0xa49b, 0x0, 0x0);
        gbc.writeMem(0x31d1, { 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x31d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0143
        gbc.setState(0x32c9, 0xb41b, 0x4ca0, 0xfdad, 0xa040, 0x7392, 0x1, 0x1);
        gbc.writeMem(0x32c9, { 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb41b, gbc.sp());
        EXPECT(0x32ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0144
        gbc.setState(0xbf28, 0xef29, 0xb780, 0x5228, 0xd35a, 0x9dce, 0x0, 0x1);
        gbc.writeMem(0xbf28, { 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf28));
        // 13 0145
        gbc.setState(0x423, 0x4969, 0xd1b0, 0xe2e0, 0x2f4, 0x88d7, 0x0, 0x0);
        gbc.writeMem(0x423, { 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4969, gbc.sp());
        EXPECT(0x424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0146
        gbc.setState(0x7719, 0x9a44, 0xba70, 0xdca3, 0xfdf7, 0xbc7d, 0x0, 0x1);
        gbc.writeMem(0x7719, { 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9a44, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0147
        gbc.setState(0x856a, 0x1bd7, 0x33f0, 0xd521, 0x869f, 0x1cf6, 0x1, 0x1);
        gbc.writeMem(0x856a, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x856a));
        // 13 0148
        gbc.setState(0xa0a9, 0x32ae, 0x5b20, 0xfad, 0xa8e6, 0xa0df, 0x0, 0x1);
        gbc.writeMem(0xa0a9, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x32ae, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa0a9));
        // 13 0149
        gbc.setState(0x4a9f, 0xca4d, 0xca50, 0xe7ca, 0x4cd3, 0x3b33, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca4d, gbc.sp());
        EXPECT(0x4aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 014A
        gbc.setState(0xd408, 0x7d51, 0xb740, 0xf16c, 0xac74, 0x2ec7, 0x1, 0x1);
        gbc.writeMem(0xd408, { 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7d51, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd408));
        // 13 014C
        gbc.setState(0x2f6f, 0x4362, 0xdee0, 0xd7b1, 0x9e14, 0x4002, 0x1, 0x0);
        gbc.writeMem(0x2f6f, { 0x13 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 014D
        gbc.setState(0x11fd, 0xf9d0, 0xa9b0, 0x7313, 0xb929, 0x2255, 0x0, 0x0);
        gbc.writeMem(0x11fd, { 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0x11fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 014E
        gbc.setState(0xf8f, 0xa8dd, 0xdd20, 0xec1, 0x5a14, 0x493e, 0x1, 0x0);
        gbc.writeMem(0xf8f, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa8dd, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 014F
        gbc.setState(0x45c3, 0x86b4, 0x6cc0, 0xece1, 0x303e, 0xf9e5, 0x1, 0x0);
        gbc.writeMem(0x45c3, { 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x86b4, gbc.sp());
        EXPECT(0x45c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0150
        gbc.setState(0x603f, 0x96d3, 0x5b00, 0x7a79, 0xaee6, 0xb4db, 0x1, 0x1);
        gbc.writeMem(0x603f, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x96d3, gbc.sp());
        EXPECT(0x6040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0151
        gbc.setState(0xb6b1, 0x6a75, 0x58f0, 0x94e9, 0x7e99, 0x3417, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6a75, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb6b1));
        // 13 0152
        gbc.setState(0x374e, 0x538f, 0x6dd0, 0x5837, 0xfd0, 0xaa10, 0x0, 0x1);
        gbc.writeMem(0x374e, { 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0x374f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0153
        gbc.setState(0xdca, 0xaaf8, 0xaa10, 0xf99a, 0xe441, 0x34cf, 0x0, 0x1);
        gbc.writeMem(0xdca, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaaf8, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0154
        gbc.setState(0xe8f0, 0x2d31, 0xbba0, 0xfdd0, 0xbb32, 0x6a03, 0x1, 0x1);
        gbc.writeMem(0xe8f0, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2d31, gbc.sp());
        EXPECT(0xe8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe8f0));
        // 13 0155
        gbc.setState(0x71ae, 0x99de, 0xb540, 0xa13e, 0x2923, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0x71af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0156
        gbc.setState(0x85a6, 0x5893, 0x4700, 0xf786, 0xea19, 0x4b9a, 0x0, 0x1);
        gbc.writeMem(0x85a6, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x85a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x85a6));
        // 13 0157
        gbc.setState(0x133f, 0xc169, 0x28f0, 0x6806, 0x8405, 0x189f, 0x0, 0x1);
        gbc.writeMem(0x133f, { 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0x1340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0158
        gbc.setState(0xdd50, 0xf485, 0x8ef0, 0xca2a, 0xcf06, 0xf874, 0x0, 0x1);
        gbc.writeMem(0xdd50, { 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf485, gbc.sp());
        EXPECT(0xdd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdd50));
        // 13 0159
        gbc.setState(0x23f, 0x9dcf, 0xd9a0, 0xf045, 0x61ba, 0x7290, 0x0, 0x1);
        gbc.writeMem(0x23f, { 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9dcf, gbc.sp());
        EXPECT(0x240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 015A
        gbc.setState(0xac00, 0x745d, 0xc5a0, 0x64bd, 0xefb1, 0xc76e, 0x1, 0x1);
        gbc.writeMem(0xac00, { 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xac00));
        // 13 015B
        gbc.setState(0xde9d, 0x5bed, 0x1650, 0xf5a0, 0xe0e4, 0xa7f1, 0x0, 0x1);
        gbc.writeMem(0xde9d, { 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xde9d));
        // 13 015C
        gbc.setState(0x583f, 0x4b6c, 0xc2a0, 0x3284, 0xe5b3, 0x79eb, 0x0, 0x1);
        gbc.writeMem(0x583f, { 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4b6c, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 015D
        gbc.setState(0x921, 0xd90c, 0x51f0, 0xbd78, 0x4ae8, 0x66c7, 0x1, 0x1);
        gbc.writeMem(0x921, { 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 015E
        gbc.setState(0x590d, 0x9ac, 0xf390, 0x2e1b, 0xa352, 0x50f4, 0x0, 0x0);
        gbc.writeMem(0x590d, { 0x13 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9ac, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 015F
        gbc.setState(0x606a, 0x3fb1, 0x18b0, 0x391b, 0xf253, 0x7a07, 0x1, 0x0);
        gbc.writeMem(0x606a, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3fb1, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0160
        gbc.setState(0x43f2, 0xb95, 0xf1d0, 0xdb1e, 0xf09e, 0xb067, 0x0, 0x1);
        gbc.writeMem(0x43f2, { 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb95, gbc.sp());
        EXPECT(0x43f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0161
        gbc.setState(0x3bb0, 0x9e27, 0x2250, 0xdd70, 0x1940, 0x1107, 0x0, 0x1);
        gbc.writeMem(0x3bb0, { 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e27, gbc.sp());
        EXPECT(0x3bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0162
        gbc.setState(0xbce3, 0x37f8, 0x6e00, 0x4b84, 0x8da7, 0x2f34, 0x1, 0x0);
        gbc.writeMem(0xbce3, { 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x37f8, gbc.sp());
        EXPECT(0xbce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbce3));
        // 13 0163
        gbc.setState(0xb508, 0x8dee, 0xdb40, 0x4f6, 0xecd2, 0xc57b, 0x0, 0x1);
        gbc.writeMem(0xb508, { 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8dee, gbc.sp());
        EXPECT(0xb509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb508));
        // 13 0164
        gbc.setState(0xeeab, 0xe665, 0xfb20, 0x7f61, 0x1a81, 0x1af8, 0x0, 0x1);
        gbc.writeMem(0xeeab, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe665, gbc.sp());
        EXPECT(0xeeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeeab));
        // 13 0165
        gbc.setState(0x79f0, 0x3aa8, 0x6300, 0x37ca, 0xc553, 0xbb27, 0x1, 0x1);
        gbc.writeMem(0x79f0, { 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0166
        gbc.setState(0x4bdc, 0x8c83, 0x6700, 0x4f55, 0x8f34, 0xe8d9, 0x1, 0x1);
        gbc.writeMem(0x4bdc, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8c83, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0167
        gbc.setState(0xbd89, 0x175e, 0x1ac0, 0xa3e2, 0x1bbd, 0x14d0, 0x0, 0x0);
        gbc.writeMem(0xbd89, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x175e, gbc.sp());
        EXPECT(0xbd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd89));
        // 13 0168
        gbc.setState(0x88fd, 0x7587, 0xd500, 0x53d, 0xfad8, 0x7e0c, 0x1, 0x0);
        gbc.writeMem(0x88fd, { 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7587, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x88fd));
        // 13 0169
        gbc.setState(0xbf5, 0x5c94, 0x4680, 0xa4c, 0x159c, 0xf5cf, 0x0, 0x1);
        gbc.writeMem(0xbf5, { 0x13 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5c94, gbc.sp());
        EXPECT(0xbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 016B
        gbc.setState(0x1a10, 0x19f7, 0x6590, 0xcb40, 0x863b, 0x27f2, 0x1, 0x1);
        gbc.writeMem(0x1a10, { 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x19f7, gbc.sp());
        EXPECT(0x1a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 016C
        gbc.setState(0x3a3c, 0x1c72, 0x4800, 0x341b, 0xe5db, 0xa7a8, 0x0, 0x0);
        gbc.writeMem(0x3a3c, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1c72, gbc.sp());
        EXPECT(0x3a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 016D
        gbc.setState(0x2c20, 0x47e8, 0x4bb0, 0x7ba3, 0x5388, 0x6cfe, 0x0, 0x0);
        gbc.writeMem(0x2c20, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x47e8, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 016E
        gbc.setState(0x9b47, 0x45d3, 0xbd60, 0x5242, 0xd690, 0xe94b, 0x1, 0x1);
        gbc.writeMem(0x9b47, { 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x45d3, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9b47));
        // 13 016F
        gbc.setState(0xd4bb, 0x5c91, 0x320, 0xcbfc, 0x8e64, 0x942f, 0x0, 0x1);
        gbc.writeMem(0xd4bb, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0xd4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd4bb));
        // 13 0170
        gbc.setState(0xd494, 0x9cbc, 0x83b0, 0xadb0, 0xc538, 0x33c9, 0x1, 0x1);
        gbc.writeMem(0xd494, { 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0xd495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd494));
        // 13 0171
        gbc.setState(0x9614, 0xdabf, 0xae10, 0xb659, 0x2634, 0xf9b3, 0x0, 0x0);
        gbc.writeMem(0x9614, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x9615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9614));
        // 13 0172
        gbc.setState(0x656b, 0xce3e, 0x7380, 0xec90, 0xcc3a, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x656b, { 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xce3e, gbc.sp());
        EXPECT(0x656c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0173
        gbc.setState(0x3e58, 0xfb8, 0xf1f0, 0xd71f, 0xaeec, 0xf22, 0x0, 0x0);
        gbc.writeMem(0x3e58, { 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x3e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0174
        gbc.setState(0xe087, 0xdbe9, 0xd570, 0x81ca, 0xf8bd, 0x2ab7, 0x0, 0x1);
        gbc.writeMem(0xe087, { 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe087));
        // 13 0175
        gbc.setState(0xb1ef, 0x4d41, 0xe790, 0xe172, 0x3162, 0xf66e, 0x0, 0x1);
        gbc.writeMem(0xb1ef, { 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0xb1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb1ef));
        // 13 0176
        gbc.setState(0x961d, 0xe70a, 0xc00, 0x2e2f, 0x8cee, 0x344b, 0x1, 0x0);
        gbc.writeMem(0x961d, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x961d));
        // 13 0177
        gbc.setState(0x28f6, 0x4472, 0xf020, 0x9c3, 0x8fa2, 0xe6bf, 0x0, 0x0);
        gbc.writeMem(0x28f6, { 0x13 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4472, gbc.sp());
        EXPECT(0x28f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0178
        gbc.setState(0xc88, 0x1980, 0xbeb0, 0xcf66, 0xbe74, 0x70ac, 0x1, 0x0);
        gbc.writeMem(0xc88, { 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1980, gbc.sp());
        EXPECT(0xc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0179
        gbc.setState(0xedc9, 0xb7d2, 0x36b0, 0x254f, 0x6a5d, 0x6a9e, 0x0, 0x1);
        gbc.writeMem(0xedc9, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb7d2, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xedc9));
        // 13 017A
        gbc.setState(0x3e6a, 0xdbfe, 0xc80, 0xd458, 0xbce1, 0xb3b0, 0x1, 0x1);
        gbc.writeMem(0x3e6a, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0x3e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 017B
        gbc.setState(0x2c1c, 0xcd90, 0xc5f0, 0x8e0d, 0x75b7, 0x816a, 0x0, 0x0);
        gbc.writeMem(0x2c1c, { 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcd90, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 017C
        gbc.setState(0x2c92, 0xaac4, 0x9980, 0xedb5, 0x61b8, 0x4946, 0x0, 0x1);
        gbc.writeMem(0x2c92, { 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaac4, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 017D
        gbc.setState(0x8017, 0x9eed, 0x1df0, 0x314, 0x588, 0x968b, 0x0, 0x0);
        gbc.writeMem(0x8017, { 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x8018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8017));
        // 13 017E
        gbc.setState(0xc0d0, 0xf0a8, 0x86c0, 0xa4e0, 0x7be4, 0x749d, 0x1, 0x0);
        gbc.writeMem(0xc0d0, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0xc0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0d0));
        // 13 017F
        gbc.setState(0xcd99, 0xac14, 0x5ab0, 0x2116, 0x11b0, 0x6872, 0x1, 0x1);
        gbc.writeMem(0xcd99, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xac14, gbc.sp());
        EXPECT(0xcd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd99));
        // 13 0180
        gbc.setState(0xdfbc, 0x66f1, 0xf70, 0x4e1c, 0x8715, 0x97b1, 0x0, 0x0);
        gbc.writeMem(0xdfbc, { 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66f1, gbc.sp());
        EXPECT(0xdfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdfbc));
        // 13 0181
        gbc.setState(0x2b0d, 0x6255, 0xaa00, 0x2c74, 0xa164, 0x8f37, 0x1, 0x0);
        gbc.writeMem(0x2b0d, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6255, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0182
        gbc.setState(0x4bd2, 0x2589, 0x89b0, 0x440e, 0xec5d, 0x9e20, 0x0, 0x1);
        gbc.writeMem(0x4bd2, { 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2589, gbc.sp());
        EXPECT(0x4bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0183
        gbc.setState(0x1d55, 0x1586, 0x1d20, 0x3dde, 0xbc1e, 0x2a4b, 0x0, 0x0);
        gbc.writeMem(0x1d55, { 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1586, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0184
        gbc.setState(0x7298, 0x4d68, 0x7c10, 0xc683, 0xb52, 0xcf61, 0x0, 0x1);
        gbc.writeMem(0x7298, { 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0185
        gbc.setState(0xa014, 0xeffe, 0x1ca0, 0x251b, 0x6d0, 0xe619, 0x0, 0x0);
        gbc.writeMem(0xa014, { 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeffe, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa014));
        // 13 0187
        gbc.setState(0x13b9, 0xa914, 0x1ac0, 0x9564, 0x52cb, 0x2602, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa914, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0188
        gbc.setState(0xe73b, 0x6fcf, 0x4dd0, 0x13ca, 0x6e38, 0x878a, 0x1, 0x0);
        gbc.writeMem(0xe73b, { 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6fcf, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe73b));
        // 13 0189
        gbc.setState(0xecfd, 0xcb8f, 0xbb10, 0xcb97, 0x9b2a, 0x1c03, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xecfd));
        // 13 018B
        gbc.setState(0x15a9, 0xc977, 0xaf90, 0x983c, 0x9e21, 0xc406, 0x0, 0x1);
        gbc.writeMem(0x15a9, { 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 018C
        gbc.setState(0xb9f5, 0xbbe8, 0x72f0, 0x194a, 0xf473, 0xcb89, 0x1, 0x0);
        gbc.writeMem(0xb9f5, { 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbbe8, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb9f5));
        // 13 018D
        gbc.setState(0xa5b3, 0xd043, 0xffc0, 0x5b83, 0x7e1f, 0x70, 0x0, 0x0);
        gbc.writeMem(0xa5b3, { 0x13 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0xa5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa5b3));
        // 13 018E
        gbc.setState(0x48e1, 0x8230, 0xc9d0, 0x41b8, 0x9824, 0xc822, 0x0, 0x0);
        gbc.writeMem(0x48e1, { 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8230, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 018F
        gbc.setState(0xd696, 0x5693, 0x4a80, 0x7aa7, 0x60bf, 0x736f, 0x0, 0x0);
        gbc.writeMem(0xd696, { 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0xd697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd696));
        // 13 0190
        gbc.setState(0x3632, 0xc37, 0x4050, 0x6de8, 0x52ad, 0x7be9, 0x0, 0x0);
        gbc.writeMem(0x3632, { 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc37, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0191
        gbc.setState(0xa513, 0x7966, 0x6770, 0x1561, 0xce0d, 0x276, 0x0, 0x1);
        gbc.writeMem(0xa513, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0xa514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa513));
        // 13 0192
        gbc.setState(0x9ef2, 0x3951, 0x5a00, 0xd9a9, 0x9993, 0x14a1, 0x0, 0x1);
        gbc.writeMem(0x9ef2, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9ef2));
        // 13 0193
        gbc.setState(0x3d56, 0xe052, 0xb760, 0x12ae, 0x2056, 0xe073, 0x0, 0x1);
        gbc.writeMem(0x3d56, { 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe052, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0194
        gbc.setState(0x746, 0xfaef, 0x86a0, 0x1bba, 0x34df, 0xf192, 0x1, 0x1);
        gbc.writeMem(0x746, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfaef, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0195
        gbc.setState(0xd4a0, 0xc55f, 0x57e0, 0xa040, 0x1b6f, 0x2c62, 0x1, 0x1);
        gbc.writeMem(0xd4a0, { 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc55f, gbc.sp());
        EXPECT(0xd4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd4a0));
        // 13 0196
        gbc.setState(0xb509, 0x5dc2, 0x68d0, 0x70ad, 0x519d, 0x54a, 0x0, 0x0);
        gbc.writeMem(0xb509, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5dc2, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb509));
        // 13 0197
        gbc.setState(0xa8eb, 0xaeef, 0xa770, 0x2a96, 0x87e5, 0xe8c0, 0x1, 0x1);
        gbc.writeMem(0xa8eb, { 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaeef, gbc.sp());
        EXPECT(0xa8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa8eb));
        // 13 0198
        gbc.setState(0xdd50, 0xad7, 0xbf20, 0xd0d6, 0x2b6e, 0x7a24, 0x0, 0x0);
        gbc.writeMem(0xdd50, { 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xad7, gbc.sp());
        EXPECT(0xdd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdd50));
        // 13 019A
        gbc.setState(0x68c8, 0xb915, 0x44c0, 0xd9b7, 0xcd4a, 0x191, 0x1, 0x0);
        gbc.writeMem(0x68c8, { 0x13 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 019B
        gbc.setState(0x232d, 0x58e2, 0x6850, 0x616e, 0x3744, 0x7b55, 0x1, 0x0);
        gbc.writeMem(0x232d, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 019D
        gbc.setState(0xc98, 0xc0fa, 0x98b0, 0x2d56, 0xbede, 0xaf86, 0x0, 0x1);
        gbc.writeMem(0xc98, { 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc0fa, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 019E
        gbc.setState(0x41fc, 0xc2ca, 0x3980, 0xb2d1, 0xf5e7, 0x3558, 0x0, 0x0);
        gbc.writeMem(0x41fc, { 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc2ca, gbc.sp());
        EXPECT(0x41fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 019F
        gbc.setState(0xc740, 0xe23, 0xa5b0, 0x780f, 0x6391, 0x452b, 0x1, 0x0);
        gbc.writeMem(0xc740, { 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0xc741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc740));
        // 13 01A0
        gbc.setState(0xeed3, 0xf052, 0xb230, 0x4fd4, 0xa2f3, 0x2cc4, 0x1, 0x1);
        gbc.writeMem(0xeed3, { 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf052, gbc.sp());
        EXPECT(0xeed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeed3));
        // 13 01A1
        gbc.setState(0x82d7, 0x19fc, 0x65c0, 0x4df9, 0x8f7, 0xa341, 0x0, 0x1);
        gbc.writeMem(0x82d7, { 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x82d7));
        // 13 01A2
        gbc.setState(0x9db7, 0x6fd6, 0x1ce0, 0x432c, 0x61d0, 0xa235, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6fd6, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9db7));
        // 13 01A3
        gbc.setState(0xa162, 0x702b, 0x3690, 0x1f35, 0x3ab3, 0xd879, 0x0, 0x0);
        gbc.writeMem(0xa162, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x702b, gbc.sp());
        EXPECT(0xa163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa162));
        // 13 01A4
        gbc.setState(0x47f7, 0xf181, 0x10c0, 0xa5f, 0x5549, 0x6e4f, 0x0, 0x0);
        gbc.writeMem(0x47f7, { 0x13 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x47f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01A5
        gbc.setState(0x6bbf, 0xb7f8, 0x6ba0, 0x3351, 0xdf91, 0x1d96, 0x1, 0x1);
        gbc.writeMem(0x6bbf, { 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb7f8, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01A6
        gbc.setState(0x4e17, 0xdf59, 0x4230, 0x23a0, 0x3c69, 0xc010, 0x0, 0x1);
        gbc.writeMem(0x4e17, { 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01A7
        gbc.setState(0xde60, 0x4f1f, 0x35b0, 0xe947, 0x560e, 0xa513, 0x0, 0x1);
        gbc.writeMem(0xde60, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0xde61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xde60));
        // 13 01A8
        gbc.setState(0xc579, 0xf146, 0xa7a0, 0x6b55, 0x6ee, 0x5bac, 0x0, 0x0);
        gbc.writeMem(0xc579, { 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf146, gbc.sp());
        EXPECT(0xc57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc579));
        // 13 01A9
        gbc.setState(0x81cd, 0x2aa3, 0x6560, 0x2da, 0xaede, 0xa922, 0x0, 0x0);
        gbc.writeMem(0x81cd, { 0x13 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0x81ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x81cd));
        // 13 01AA
        gbc.setState(0x3fd0, 0x9878, 0xd020, 0x5f65, 0x7a51, 0x5177, 0x1, 0x0);
        gbc.writeMem(0x3fd0, { 0x13 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0x3fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01AB
        gbc.setState(0x8d27, 0xd8ac, 0x3b10, 0xad0f, 0xa49b, 0x16c6, 0x1, 0x1);
        gbc.writeMem(0x8d27, { 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd8ac, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8d27));
        // 13 01AC
        gbc.setState(0x8d9b, 0xbefc, 0x3f00, 0xa382, 0xd24a, 0x6916, 0x1, 0x1);
        gbc.writeMem(0x8d9b, { 0x13 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x8d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8d9b));
        // 13 01AD
        gbc.setState(0xbf3a, 0x8605, 0x9500, 0x7af5, 0x39b4, 0x939, 0x0, 0x0);
        gbc.writeMem(0xbf3a, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8605, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf3a));
        // 13 01AE
        gbc.setState(0x2558, 0xdd38, 0x4820, 0x1e2e, 0x18bb, 0xe8d8, 0x1, 0x0);
        gbc.writeMem(0x2558, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01AF
        gbc.setState(0x5cf4, 0xedff, 0x3300, 0xaa73, 0xa467, 0x64a3, 0x1, 0x1);
        gbc.writeMem(0x5cf4, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xedff, gbc.sp());
        EXPECT(0x5cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01B0
        gbc.setState(0x9801, 0x4e7f, 0x42f0, 0xf046, 0xdb26, 0xde46, 0x1, 0x1);
        gbc.writeMem(0x9801, { 0x13 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9801));
        // 13 01B1
        gbc.setState(0x2699, 0xab1d, 0x2360, 0x4e04, 0xa53e, 0x2951, 0x0, 0x0);
        gbc.writeMem(0x2699, { 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x269a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01B2
        gbc.setState(0xd5d7, 0xd60d, 0x7480, 0x31f0, 0x2a62, 0xb492, 0x1, 0x0);
        gbc.writeMem(0xd5d7, { 0x13 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0xd5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd5d7));
        // 13 01B3
        gbc.setState(0x36de, 0x7c44, 0x76f0, 0x5c1e, 0x37e6, 0x2476, 0x0, 0x1);
        gbc.writeMem(0x36de, { 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7c44, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01B4
        gbc.setState(0xb322, 0xd4b9, 0xec50, 0x612c, 0xed33, 0x1f3d, 0x0, 0x1);
        gbc.writeMem(0xb322, { 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0xb323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb322));
        // 13 01B5
        gbc.setState(0x3e92, 0x5260, 0xd180, 0xf123, 0x54df, 0x2ada, 0x1, 0x1);
        gbc.writeMem(0x3e92, { 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5260, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01B6
        gbc.setState(0x3e5c, 0x14de, 0x35e0, 0xb21b, 0x90e5, 0x129b, 0x0, 0x1);
        gbc.writeMem(0x3e5c, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01B7
        gbc.setState(0xeb35, 0xe14b, 0x5820, 0x3654, 0xe63f, 0x85a5, 0x0, 0x0);
        gbc.writeMem(0xeb35, { 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0xeb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeb35));
        // 13 01B8
        gbc.setState(0xa0ac, 0xac38, 0x9880, 0x773, 0x8147, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0xa0ac, { 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa0ac));
        // 13 01B9
        gbc.setState(0xcd75, 0xaf55, 0x3900, 0x7351, 0x1645, 0x6c78, 0x0, 0x1);
        gbc.writeMem(0xcd75, { 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xaf55, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd75));
        // 13 01BA
        gbc.setState(0x8f40, 0x8a1a, 0x7b70, 0x4656, 0xb82, 0xa69a, 0x1, 0x0);
        gbc.writeMem(0x8f40, { 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a1a, gbc.sp());
        EXPECT(0x8f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8f40));
        // 13 01BB
        gbc.setState(0x7824, 0x1270, 0x5240, 0x2f19, 0x4a37, 0x64a8, 0x1, 0x1);
        gbc.writeMem(0x7824, { 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1270, gbc.sp());
        EXPECT(0x7825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01BC
        gbc.setState(0xc39d, 0x9361, 0x3760, 0x46d3, 0xbab3, 0x389a, 0x1, 0x0);
        gbc.writeMem(0xc39d, { 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9361, gbc.sp());
        EXPECT(0xc39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc39d));
        // 13 01BD
        gbc.setState(0x329f, 0x31c3, 0xc150, 0xe1af, 0xaadd, 0x9070, 0x0, 0x0);
        gbc.writeMem(0x329f, { 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0x32a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01BE
        gbc.setState(0xd95b, 0xc0bd, 0x9f50, 0xc49a, 0x7b8c, 0xe4fb, 0x1, 0x1);
        gbc.writeMem(0xd95b, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0xd95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd95b));
        // 13 01BF
        gbc.setState(0xb842, 0x6f79, 0x6440, 0xfb93, 0xffc3, 0xd7c1, 0x1, 0x0);
        gbc.writeMem(0xb842, { 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb842));
        // 13 01C0
        gbc.setState(0xdf08, 0x5025, 0x4960, 0x9ce2, 0x646e, 0x7e30, 0x1, 0x1);
        gbc.writeMem(0xdf08, { 0x13 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5025, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdf08));
        // 13 01C1
        gbc.setState(0x817d, 0x1ed9, 0x2e30, 0x206a, 0x2a82, 0x8eab, 0x1, 0x0);
        gbc.writeMem(0x817d, { 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x817e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x817d));
        // 13 01C2
        gbc.setState(0xaab9, 0x6e0d, 0xfd60, 0x5826, 0x672, 0x720d, 0x0, 0x1);
        gbc.writeMem(0xaab9, { 0x13 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0xaaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaab9));
        // 13 01C3
        gbc.setState(0xf0a, 0xbe71, 0x1aa0, 0x752b, 0x962b, 0x1d00, 0x0, 0x0);
        gbc.writeMem(0xf0a, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbe71, gbc.sp());
        EXPECT(0xf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01C4
        gbc.setState(0x86dc, 0xeeef, 0xee50, 0x254f, 0xf398, 0x2f16, 0x1, 0x1);
        gbc.writeMem(0x86dc, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x86dc));
        // 13 01C5
        gbc.setState(0x22dd, 0xb2f5, 0x8240, 0x7b26, 0x165c, 0x85dc, 0x0, 0x1);
        gbc.writeMem(0x22dd, { 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0x22de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01C6
        gbc.setState(0x4d90, 0x20ec, 0x5790, 0xd0a8, 0x89b5, 0x41dc, 0x1, 0x1);
        gbc.writeMem(0x4d90, { 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x20ec, gbc.sp());
        EXPECT(0x4d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01C7
        gbc.setState(0x5ed0, 0xe079, 0x2b20, 0x89a7, 0xf5bf, 0x46c5, 0x1, 0x1);
        gbc.writeMem(0x5ed0, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01C8
        gbc.setState(0x10f, 0x4d29, 0x43e0, 0xfbcd, 0x58c1, 0x24c4, 0x0, 0x0);
        gbc.writeMem(0x10f, { 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4d29, gbc.sp());
        EXPECT(0x110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01C9
        gbc.setState(0xcc75, 0x9da8, 0xa360, 0xac62, 0xd6d9, 0xd9af, 0x1, 0x1);
        gbc.writeMem(0xcc75, { 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0xcc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcc75));
        // 13 01CA
        gbc.setState(0x3bb7, 0x2e04, 0xcda0, 0x904f, 0xd941, 0x9ed0, 0x0, 0x0);
        gbc.writeMem(0x3bb7, { 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01CB
        gbc.setState(0x122b, 0x8c55, 0x7c80, 0x568b, 0x3ea9, 0x2d65, 0x1, 0x0);
        gbc.writeMem(0x122b, { 0x13 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c55, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01CD
        gbc.setState(0x8a50, 0x52df, 0x1f20, 0x7878, 0x87a0, 0x73ff, 0x1, 0x1);
        gbc.writeMem(0x8a50, { 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x52df, gbc.sp());
        EXPECT(0x8a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8a50));
        // 13 01CE
        gbc.setState(0xebed, 0x30ad, 0xc600, 0x3335, 0x2095, 0xaafc, 0x1, 0x1);
        gbc.writeMem(0xebed, { 0x13 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x30ad, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xebed));
        // 13 01CF
        gbc.setState(0x7e63, 0xb6b8, 0x1e40, 0x43a5, 0x5b91, 0xd417, 0x0, 0x1);
        gbc.writeMem(0x7e63, { 0x13 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0x7e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01D0
        gbc.setState(0xcbbb, 0xbc23, 0xd510, 0x2570, 0x415c, 0x2667, 0x0, 0x1);
        gbc.writeMem(0xcbbb, { 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0xcbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcbbb));
        // 13 01D1
        gbc.setState(0x41b8, 0x8d19, 0xdc90, 0x44ad, 0x393, 0xc6a4, 0x0, 0x1);
        gbc.writeMem(0x41b8, { 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01D3
        gbc.setState(0xbfc2, 0x2907, 0xf740, 0xdfb0, 0x7136, 0x5bc8, 0x0, 0x1);
        gbc.writeMem(0xbfc2, { 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0xbfc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbfc2));
        // 13 01D4
        gbc.setState(0x7247, 0xb856, 0xa390, 0x9873, 0xdd3, 0xd144, 0x1, 0x1);
        gbc.writeMem(0x7247, { 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb856, gbc.sp());
        EXPECT(0x7248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01D5
        gbc.setState(0x640a, 0xe9d8, 0x1840, 0x52c4, 0x198c, 0xe65e, 0x0, 0x0);
        gbc.writeMem(0x640a, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0x640b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01D6
        gbc.setState(0x93e8, 0xa4c5, 0x95f0, 0x4eab, 0xba83, 0x526d, 0x0, 0x0);
        gbc.writeMem(0x93e8, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x93e8));
        // 13 01D7
        gbc.setState(0xcec3, 0x3a4e, 0xe800, 0xe28, 0x7231, 0xb983, 0x0, 0x0);
        gbc.writeMem(0xcec3, { 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3a4e, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcec3));
        // 13 01D8
        gbc.setState(0xa0cf, 0xe11f, 0x6c0, 0x373a, 0x120, 0x536, 0x0, 0x1);
        gbc.writeMem(0xa0cf, { 0x13 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe11f, gbc.sp());
        EXPECT(0xa0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa0cf));
        // 13 01D9
        gbc.setState(0x9ecd, 0x98dc, 0x58d0, 0xee8c, 0x14d7, 0xbb98, 0x0, 0x1);
        gbc.writeMem(0x9ecd, { 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x98dc, gbc.sp());
        EXPECT(0x9ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9ecd));
        // 13 01DA
        gbc.setState(0x3b31, 0x5778, 0xed30, 0xb2af, 0xac73, 0x633, 0x1, 0x0);
        gbc.writeMem(0x3b31, { 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5778, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01DB
        gbc.setState(0xe82d, 0xdf36, 0x6370, 0x4183, 0x58a6, 0x3e85, 0x0, 0x0);
        gbc.writeMem(0xe82d, { 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdf36, gbc.sp());
        EXPECT(0xe82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe82d));
        // 13 01DC
        gbc.setState(0x5b56, 0xc0b3, 0x28f0, 0xe5f4, 0x495c, 0x2472, 0x0, 0x0);
        gbc.writeMem(0x5b56, { 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc0b3, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01DD
        gbc.setState(0xb18e, 0x9357, 0x2800, 0x462a, 0xe12e, 0xb312, 0x1, 0x0);
        gbc.writeMem(0xb18e, { 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb18e));
        // 13 01DE
        gbc.setState(0x4f0f, 0x38df, 0xbbd0, 0x8358, 0xffe1, 0x4fd9, 0x0, 0x1);
        gbc.writeMem(0x4f0f, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01DF
        gbc.setState(0x7dbe, 0xd982, 0xfc90, 0x9393, 0x710, 0x9228, 0x1, 0x0);
        gbc.writeMem(0x7dbe, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd982, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01E0
        gbc.setState(0xa2b6, 0xf78f, 0x9b90, 0xa776, 0xd07f, 0x9657, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa2b6));
        // 13 01E1
        gbc.setState(0x9f8f, 0x1c6b, 0xfc90, 0xbc55, 0x134e, 0x7f3d, 0x1, 0x1);
        gbc.writeMem(0x9f8f, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0x9f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9f8f));
        // 13 01E3
        gbc.setState(0xc196, 0x5efa, 0x5730, 0x47a5, 0x7236, 0xc4bb, 0x1, 0x0);
        gbc.writeMem(0xc196, { 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc196));
        // 13 01E4
        gbc.setState(0x65c6, 0xe906, 0x57d0, 0x38b9, 0x92d0, 0x3782, 0x1, 0x1);
        gbc.writeMem(0x65c6, { 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0x65c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01E5
        gbc.setState(0x69cc, 0xa176, 0x6150, 0xd43b, 0xe6af, 0x7055, 0x0, 0x1);
        gbc.writeMem(0x69cc, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa176, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01E6
        gbc.setState(0xa800, 0x37ab, 0x9b90, 0xb175, 0x6c22, 0x29ad, 0x0, 0x0);
        gbc.writeMem(0xa800, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x37ab, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa800));
        // 13 01E7
        gbc.setState(0x49f8, 0x2717, 0x9070, 0x1425, 0x2b0d, 0x5761, 0x1, 0x1);
        gbc.writeMem(0x49f8, { 0x13 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01E8
        gbc.setState(0xca99, 0xb4ba, 0x99a0, 0x7eec, 0x60aa, 0xac55, 0x0, 0x1);
        gbc.writeMem(0xca99, { 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb4ba, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xca99));
        // 13 01E9
        gbc.setState(0x69b6, 0x178c, 0x9b80, 0x436d, 0x5ac2, 0xf1f9, 0x1, 0x0);
        gbc.writeMem(0x69b6, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x178c, gbc.sp());
        EXPECT(0x69b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01EA
        gbc.setState(0x37a1, 0x922b, 0x7050, 0x5e3, 0x129d, 0xe6a9, 0x1, 0x0);
        gbc.writeMem(0x37a1, { 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x922b, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01EB
        gbc.setState(0xb021, 0x8d0b, 0x8b70, 0x18e2, 0x6453, 0x2766, 0x0, 0x0);
        gbc.writeMem(0xb021, { 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb021));
        // 13 01EC
        gbc.setState(0x89c5, 0x83d9, 0x83f0, 0xaa3b, 0xc16c, 0xb63e, 0x0, 0x1);
        gbc.writeMem(0x89c5, { 0x13 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0x89c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x89c5));
        // 13 01ED
        gbc.setState(0xb007, 0x39d6, 0xc8d0, 0x119a, 0xbde2, 0x5192, 0x0, 0x1);
        gbc.writeMem(0xb007, { 0x13 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb007));
        // 13 01EE
        gbc.setState(0xf54, 0x65b0, 0x93f0, 0x8b6f, 0xd088, 0x6bf9, 0x1, 0x1);
        gbc.writeMem(0xf54, { 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65b0, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01EF
        gbc.setState(0xb62d, 0xc06d, 0x85d0, 0x5306, 0xba1d, 0xff02, 0x0, 0x0);
        gbc.writeMem(0xb62d, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc06d, gbc.sp());
        EXPECT(0xb62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb62d));
        // 13 01F0
        gbc.setState(0xc05f, 0x3bac, 0x43a0, 0x1249, 0x1d14, 0xb2b9, 0x0, 0x1);
        gbc.writeMem(0xc05f, { 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc05f));
        // 13 01F1
        gbc.setState(0x1cc8, 0x3e1c, 0x2be0, 0xe33f, 0x9536, 0x1ed1, 0x0, 0x0);
        gbc.writeMem(0x1cc8, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3e1c, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01F2
        gbc.setState(0x22a7, 0x2714, 0x94f0, 0xc65c, 0xd23a, 0x3e25, 0x1, 0x1);
        gbc.writeMem(0x22a7, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2714, gbc.sp());
        EXPECT(0x22a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01F3
        gbc.setState(0x32a0, 0xf3e4, 0xb660, 0x14b5, 0x339d, 0x803d, 0x0, 0x0);
        gbc.writeMem(0x32a0, { 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01F4
        gbc.setState(0x2550, 0xebfa, 0x2960, 0x7aad, 0xaf7f, 0xd97b, 0x1, 0x0);
        gbc.writeMem(0x2550, { 0x13 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x2551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01F5
        gbc.setState(0xd239, 0xe24e, 0xd990, 0x74e, 0x9fc5, 0x1ea5, 0x0, 0x1);
        gbc.writeMem(0xd239, { 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0xd23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd239));
        // 13 01F6
        gbc.setState(0x3c0d, 0xfc59, 0xbdd0, 0xcd6c, 0xc84, 0xc834, 0x1, 0x0);
        gbc.writeMem(0x3c0d, { 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x3c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01F7
        gbc.setState(0x2d7d, 0x82fe, 0xe830, 0x3cd4, 0x2c56, 0xadc1, 0x0, 0x0);
        gbc.writeMem(0x2d7d, { 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x82fe, gbc.sp());
        EXPECT(0x2d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01F8
        gbc.setState(0x81d, 0x6fc1, 0x4790, 0x1f24, 0x2208, 0x10aa, 0x1, 0x1);
        gbc.writeMem(0x81d, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6fc1, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01F9
        gbc.setState(0xbc58, 0xc9dd, 0x5a00, 0x2bc8, 0xc9f9, 0x64ce, 0x0, 0x1);
        gbc.writeMem(0xbc58, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc9dd, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbc58));
        // 13 01FA
        gbc.setState(0x63c7, 0xce7d, 0x5360, 0x9892, 0x7bc, 0x26df, 0x0, 0x0);
        gbc.writeMem(0x63c7, { 0x13 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xce7d, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01FB
        gbc.setState(0x1ab4, 0xe3b1, 0x11a0, 0xc8d6, 0x81b0, 0x2581, 0x1, 0x0);
        gbc.writeMem(0x1ab4, { 0x13 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0x1ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01FC
        gbc.setState(0x3411, 0x1afa, 0xf710, 0xea26, 0x1059, 0x7a28, 0x1, 0x0);
        gbc.writeMem(0x3411, { 0x13 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0x3412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 01FD
        gbc.setState(0x2e89, 0xe17f, 0x2bc0, 0xda42, 0xbefd, 0x6e0a, 0x0, 0x1);
        gbc.writeMem(0x2e89, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe17f, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 01FF
        gbc.setState(0x10d4, 0x1e9, 0x8590, 0x4f1, 0xb90c, 0xa69f, 0x0, 0x0);
        gbc.writeMem(0x10d4, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1e9, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0200
        gbc.setState(0x60cf, 0xbc9f, 0x9070, 0x2d03, 0xee45, 0xeda2, 0x0, 0x0);
        gbc.writeMem(0x60cf, { 0x13 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x60d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0201
        gbc.setState(0x8a41, 0x62ca, 0x47f0, 0x5b49, 0x70ed, 0x37aa, 0x1, 0x1);
        gbc.writeMem(0x8a41, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x62ca, gbc.sp());
        EXPECT(0x8a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8a41));
        // 13 0202
        gbc.setState(0x512e, 0x8283, 0x5ff0, 0x904c, 0xfba7, 0x28bf, 0x0, 0x1);
        gbc.writeMem(0x512e, { 0x13 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8283, gbc.sp());
        EXPECT(0x512f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0203
        gbc.setState(0x703f, 0x409e, 0xaa60, 0x143f, 0x168e, 0x7735, 0x1, 0x0);
        gbc.writeMem(0x703f, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x409e, gbc.sp());
        EXPECT(0x7040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0204
        gbc.setState(0x3679, 0x7364, 0xe1f0, 0xa4c3, 0x5186, 0xba65, 0x1, 0x1);
        gbc.writeMem(0x3679, { 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7364, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0205
        gbc.setState(0x5fba, 0x20a, 0xb7b0, 0x3a42, 0x8b10, 0x602a, 0x1, 0x0);
        gbc.writeMem(0x5fba, { 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x20a, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0206
        gbc.setState(0x17fd, 0xede7, 0xc1a0, 0x65cb, 0x2992, 0xdd61, 0x1, 0x0);
        gbc.writeMem(0x17fd, { 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xede7, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0207
        gbc.setState(0xc749, 0xd120, 0xbb00, 0xcfb8, 0x7e46, 0x2e72, 0x1, 0x0);
        gbc.writeMem(0xc749, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc749));
        // 13 0208
        gbc.setState(0xe, 0xce74, 0x1f90, 0x445b, 0x4560, 0x12a0, 0x1, 0x0);
        gbc.writeMem(0xe, { 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0209
        gbc.setState(0xd3ef, 0x8ede, 0x3260, 0xbe51, 0xfae9, 0x353, 0x0, 0x1);
        gbc.writeMem(0xd3ef, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8ede, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd3ef));
        // 13 020A
        gbc.setState(0x2576, 0xcd29, 0x46b0, 0x8362, 0x2e53, 0x43db, 0x1, 0x1);
        gbc.writeMem(0x2576, { 0x13 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0x2577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 020B
        gbc.setState(0x10e0, 0x93ad, 0x9510, 0xcb4d, 0x25a, 0x6c7f, 0x0, 0x1);
        gbc.writeMem(0x10e0, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x93ad, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 020C
        gbc.setState(0x104c, 0x90c5, 0x22a0, 0x82a9, 0xacd3, 0x90d5, 0x0, 0x0);
        gbc.writeMem(0x104c, { 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x90c5, gbc.sp());
        EXPECT(0x104d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 020D
        gbc.setState(0xd796, 0xf2a4, 0x1180, 0xb7ab, 0xa0d5, 0x7f99, 0x0, 0x1);
        gbc.writeMem(0xd796, { 0x13 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0xd797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd796));
        // 13 020E
        gbc.setState(0x694d, 0x63e6, 0xa110, 0x3406, 0xfa14, 0xf6fb, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x63e6, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 020F
        gbc.setState(0xdbd3, 0xd1cb, 0x8730, 0x4066, 0x81fe, 0x70d5, 0x0, 0x0);
        gbc.writeMem(0xdbd3, { 0x13 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd1cb, gbc.sp());
        EXPECT(0xdbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdbd3));
        // 13 0210
        gbc.setState(0x700f, 0xb142, 0x6bf0, 0x2009, 0x1f05, 0x2ec0, 0x0, 0x0);
        gbc.writeMem(0x700f, { 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x7010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0212
        gbc.setState(0x3561, 0x935a, 0x23b0, 0xec64, 0xfcaf, 0xaba6, 0x0, 0x1);
        gbc.writeMem(0x3561, { 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x935a, gbc.sp());
        EXPECT(0x3562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0213
        gbc.setState(0x7fcd, 0x5d6f, 0x8a80, 0x648f, 0x87b8, 0x5733, 0x0, 0x0);
        gbc.writeMem(0x7fcd, { 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0x7fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0214
        gbc.setState(0x46b, 0x9293, 0x770, 0x2334, 0x49e5, 0x572c, 0x1, 0x0);
        gbc.writeMem(0x46b, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9293, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0215
        gbc.setState(0xef5b, 0x2160, 0x13c0, 0xafb5, 0xa04a, 0x6314, 0x0, 0x0);
        gbc.writeMem(0xef5b, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2160, gbc.sp());
        EXPECT(0xef5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xef5b));
        // 13 0216
        gbc.setState(0x1973, 0x5653, 0xa0d0, 0x5424, 0x4d59, 0xd300, 0x1, 0x1);
        gbc.writeMem(0x1973, { 0x13 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x1974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0217
        gbc.setState(0x914a, 0x851b, 0x6f20, 0xa2e4, 0x978e, 0xcc96, 0x1, 0x0);
        gbc.writeMem(0x914a, { 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x851b, gbc.sp());
        EXPECT(0x914b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x914a));
        // 13 0218
        gbc.setState(0x1959, 0xf493, 0xafb0, 0x6911, 0xda60, 0xbee3, 0x0, 0x1);
        gbc.writeMem(0x1959, { 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0x195a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0219
        gbc.setState(0x7a0a, 0xdbca, 0xbfc0, 0xc629, 0xac35, 0xa002, 0x1, 0x0);
        gbc.writeMem(0x7a0a, { 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdbca, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 021A
        gbc.setState(0x4a5, 0x8b93, 0x4160, 0xb018, 0xed44, 0xb3de, 0x0, 0x1);
        gbc.writeMem(0x4a5, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8b93, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 021B
        gbc.setState(0x632d, 0x6ff2, 0xece0, 0x6ee7, 0x4f51, 0x3b91, 0x1, 0x0);
        gbc.writeMem(0x632d, { 0x13 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0x632e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 021C
        gbc.setState(0x211f, 0x866e, 0xe5a0, 0xc684, 0xdb8b, 0xe205, 0x1, 0x0);
        gbc.writeMem(0x211f, { 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x866e, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 021D
        gbc.setState(0xa02, 0xc5a2, 0x3f70, 0x9ffc, 0xc3fe, 0x6f80, 0x0, 0x1);
        gbc.writeMem(0xa02, { 0x13 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc5a2, gbc.sp());
        EXPECT(0xa03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 021E
        gbc.setState(0x9cb1, 0x511b, 0x5950, 0x5275, 0x9e1b, 0x4bf, 0x0, 0x1);
        gbc.writeMem(0x9cb1, { 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x511b, gbc.sp());
        EXPECT(0x9cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9cb1));
        // 13 021F
        gbc.setState(0xa982, 0xe400, 0x8ea0, 0xdb94, 0x28cb, 0xbdf3, 0x1, 0x1);
        gbc.writeMem(0xa982, { 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0xa983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa982));
        // 13 0220
        gbc.setState(0x8285, 0xfe56, 0xc470, 0xec57, 0x1dd, 0xcec2, 0x0, 0x1);
        gbc.writeMem(0x8285, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x8286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8285));
        // 13 0221
        gbc.setState(0xeec8, 0x2250, 0x9790, 0x92f8, 0xc731, 0x83b4, 0x1, 0x0);
        gbc.writeMem(0xeec8, { 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0xeec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeec8));
        // 13 0222
        gbc.setState(0x34d0, 0x6938, 0x4730, 0x3e34, 0xabe4, 0x2354, 0x0, 0x1);
        gbc.writeMem(0x34d0, { 0x13 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6938, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0223
        gbc.setState(0xc17d, 0x66f4, 0xb990, 0xc39, 0x62f1, 0xc9c0, 0x1, 0x0);
        gbc.writeMem(0xc17d, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc17d));
        // 13 0224
        gbc.setState(0x1546, 0xfff6, 0x9ac0, 0x6ce3, 0x6225, 0x5406, 0x1, 0x1);
        gbc.writeMem(0x1546, { 0x13 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfff6, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0225
        gbc.setState(0x7558, 0x9fb9, 0xf820, 0x1697, 0xbc7d, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x7558, { 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0x7559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0226
        gbc.setState(0xd20c, 0xd5bb, 0x1310, 0xe977, 0xec66, 0x38ae, 0x1, 0x1);
        gbc.writeMem(0xd20c, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd20c));
        // 13 0227
        gbc.setState(0x961b, 0x33da, 0x5280, 0x5329, 0xef2d, 0x338a, 0x0, 0x0);
        gbc.writeMem(0x961b, { 0x13 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0x961c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x961b));
        // 13 0228
        gbc.setState(0xdcd, 0xe226, 0x7860, 0xe530, 0xa09f, 0x78e, 0x0, 0x0);
        gbc.writeMem(0xdcd, { 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe226, gbc.sp());
        EXPECT(0xdce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0229
        gbc.setState(0x3a0f, 0xc38f, 0x33c0, 0xee99, 0x967c, 0xd5fc, 0x0, 0x1);
        gbc.writeMem(0x3a0f, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc38f, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 022A
        gbc.setState(0x5d62, 0xa45b, 0x3fb0, 0x4b56, 0xb95a, 0x7a0a, 0x1, 0x0);
        gbc.writeMem(0x5d62, { 0x13 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa45b, gbc.sp());
        EXPECT(0x5d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 022B
        gbc.setState(0x54e5, 0x756f, 0x36a0, 0x2952, 0x9380, 0x8ae4, 0x1, 0x1);
        gbc.writeMem(0x54e5, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x756f, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 022C
        gbc.setState(0x41d1, 0x4d7b, 0xeaa0, 0xd10e, 0xe516, 0xce69, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0x13 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 022D
        gbc.setState(0x9eda, 0x8b19, 0xee10, 0x293f, 0x3dda, 0x65c5, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8b19, gbc.sp());
        EXPECT(0x9edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9eda));
        // 13 022E
        gbc.setState(0xe179, 0x688a, 0xaa80, 0x6377, 0xa293, 0x48c, 0x1, 0x1);
        gbc.writeMem(0xe179, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x688a, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe179));
        // 13 022F
        gbc.setState(0x882d, 0xeca8, 0xad90, 0xd1bf, 0x2257, 0x9d19, 0x0, 0x1);
        gbc.writeMem(0x882d, { 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0x882e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x882d));
        // 13 0230
        gbc.setState(0x3e82, 0xed00, 0xf840, 0x68bc, 0x5eeb, 0x3a17, 0x0, 0x1);
        gbc.writeMem(0x3e82, { 0x13 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed00, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0231
        gbc.setState(0x6e58, 0x5e7f, 0xed0, 0x5752, 0xf501, 0x92, 0x0, 0x1);
        gbc.writeMem(0x6e58, { 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5e7f, gbc.sp());
        EXPECT(0x6e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0232
        gbc.setState(0xbc74, 0x7ee1, 0x8bc0, 0xd897, 0x80a, 0x4709, 0x0, 0x0);
        gbc.writeMem(0xbc74, { 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ee1, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbc74));
        // 13 0233
        gbc.setState(0x3821, 0x2a54, 0xd730, 0xdba1, 0x58d, 0x4b0b, 0x0, 0x1);
        gbc.writeMem(0x3821, { 0x13 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2a54, gbc.sp());
        EXPECT(0x3822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0234
        gbc.setState(0x986e, 0x3055, 0xde60, 0x5d3f, 0x194a, 0x16a0, 0x0, 0x0);
        gbc.writeMem(0x986e, { 0x13 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x986f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x986e));
        // 13 0235
        gbc.setState(0x17ca, 0xe0c0, 0xcba0, 0xc3ed, 0xd579, 0x52de, 0x1, 0x0);
        gbc.writeMem(0x17ca, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe0c0, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0236
        gbc.setState(0x12e7, 0xca1b, 0xc7a0, 0xa078, 0x5589, 0x90e1, 0x1, 0x1);
        gbc.writeMem(0x12e7, { 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0x12e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0237
        gbc.setState(0x2a20, 0x5862, 0x94f0, 0x44c5, 0x891e, 0x5441, 0x1, 0x0);
        gbc.writeMem(0x2a20, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5862, gbc.sp());
        EXPECT(0x2a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0238
        gbc.setState(0xdd63, 0xa49f, 0xfba0, 0x851b, 0xb1ec, 0xf707, 0x0, 0x0);
        gbc.writeMem(0xdd63, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa49f, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdd63));
        // 13 0239
        gbc.setState(0xcf34, 0xe44, 0x13f0, 0x5f50, 0x900f, 0x28c8, 0x1, 0x1);
        gbc.writeMem(0xcf34, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0xcf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcf34));
        // 13 023A
        gbc.setState(0x28f8, 0x7fd9, 0x86c0, 0x8f2e, 0x1cab, 0x6112, 0x1, 0x0);
        gbc.writeMem(0x28f8, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7fd9, gbc.sp());
        EXPECT(0x28f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 023B
        gbc.setState(0x3985, 0x76ce, 0x8190, 0xda55, 0xdaf4, 0x6f5d, 0x1, 0x0);
        gbc.writeMem(0x3985, { 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x76ce, gbc.sp());
        EXPECT(0x3986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 023D
        gbc.setState(0xef79, 0xeca3, 0xc370, 0x1f15, 0xb4c, 0x7f90, 0x0, 0x1);
        gbc.writeMem(0xef79, { 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeca3, gbc.sp());
        EXPECT(0xef7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xef79));
        // 13 023E
        gbc.setState(0xc32e, 0x99cc, 0x9500, 0x9223, 0xeca4, 0x6567, 0x0, 0x1);
        gbc.writeMem(0xc32e, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x99cc, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc32e));
        // 13 023F
        gbc.setState(0x2a13, 0xb640, 0xe4c0, 0x6a39, 0xc4b, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0x2a13, { 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb640, gbc.sp());
        EXPECT(0x2a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0240
        gbc.setState(0x5b61, 0xde48, 0x6840, 0xd410, 0x4c51, 0x14c2, 0x1, 0x0);
        gbc.writeMem(0x5b61, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x5b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0241
        gbc.setState(0x958, 0xf64, 0x33c0, 0x6617, 0x321a, 0xa591, 0x0, 0x1);
        gbc.writeMem(0x958, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf64, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0242
        gbc.setState(0x7fae, 0x5d48, 0x6860, 0x728e, 0x1825, 0xee28, 0x1, 0x0);
        gbc.writeMem(0x7fae, { 0x13 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d48, gbc.sp());
        EXPECT(0x7faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0244
        gbc.setState(0x3ca1, 0x2d3f, 0xcda0, 0x25db, 0x7572, 0x9a39, 0x1, 0x1);
        gbc.writeMem(0x3ca1, { 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d3f, gbc.sp());
        EXPECT(0x3ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0245
        gbc.setState(0x337f, 0x1e8a, 0xb560, 0x96f8, 0xc586, 0xe8d3, 0x1, 0x0);
        gbc.writeMem(0x337f, { 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1e8a, gbc.sp());
        EXPECT(0x3380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0246
        gbc.setState(0xe294, 0xa03b, 0x6cb0, 0x4c68, 0xfd86, 0x7fb4, 0x0, 0x0);
        gbc.writeMem(0xe294, { 0x13 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa03b, gbc.sp());
        EXPECT(0xe295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe294));
        // 13 0247
        gbc.setState(0xd11f, 0x970, 0xc60, 0xf7ec, 0xa697, 0x231e, 0x0, 0x0);
        gbc.writeMem(0xd11f, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd11f));
        // 13 0248
        gbc.setState(0xc1c3, 0xb38, 0x5aa0, 0x7242, 0xf8d0, 0xd19a, 0x1, 0x1);
        gbc.writeMem(0xc1c3, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0xc1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc1c3));
        // 13 0249
        gbc.setState(0xa5de, 0x8ad1, 0xf5d0, 0x93af, 0xd154, 0x8d19, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ad1, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa5de));
        // 13 024A
        gbc.setState(0xb4e7, 0xebd3, 0xfc90, 0x71, 0x30a8, 0x84e2, 0x0, 0x1);
        gbc.writeMem(0xb4e7, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xebd3, gbc.sp());
        EXPECT(0xb4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb4e7));
        // 13 024B
        gbc.setState(0xaabf, 0x8e4, 0x420, 0x9ae8, 0x429f, 0x2678, 0x0, 0x1);
        gbc.writeMem(0xaabf, { 0x13 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaabf));
        // 13 024D
        gbc.setState(0xe38a, 0x1b6e, 0x4a60, 0x5716, 0x4161, 0xd872, 0x0, 0x0);
        gbc.writeMem(0xe38a, { 0x13 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1b6e, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe38a));
        // 13 024E
        gbc.setState(0x60f2, 0x47, 0xc4e0, 0xcb1b, 0x7955, 0xcb07, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x47, gbc.sp());
        EXPECT(0x60f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 024F
        gbc.setState(0xe996, 0x887a, 0xd870, 0x1cb3, 0xfe80, 0x1459, 0x0, 0x0);
        gbc.writeMem(0xe996, { 0x13 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x887a, gbc.sp());
        EXPECT(0xe997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe996));
        // 13 0250
        gbc.setState(0x2fa0, 0x89db, 0xe560, 0x91c7, 0x7268, 0xfe64, 0x1, 0x1);
        gbc.writeMem(0x2fa0, { 0x13 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x89db, gbc.sp());
        EXPECT(0x2fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0251
        gbc.setState(0x54a8, 0x4adb, 0x5fe0, 0x6036, 0x5419, 0xea77, 0x1, 0x1);
        gbc.writeMem(0x54a8, { 0x13 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4adb, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0252
        gbc.setState(0xc897, 0xa345, 0x3b70, 0xe388, 0xbef1, 0x2ba5, 0x1, 0x0);
        gbc.writeMem(0xc897, { 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa345, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc897));
        // 13 0254
        gbc.setState(0x2cdc, 0x4f69, 0xd00, 0x2cf6, 0xbb41, 0xcf5f, 0x0, 0x0);
        gbc.writeMem(0x2cdc, { 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0255
        gbc.setState(0xe298, 0xc647, 0x3530, 0x60b3, 0x1bcb, 0x2613, 0x1, 0x1);
        gbc.writeMem(0xe298, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc647, gbc.sp());
        EXPECT(0xe299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe298));
        // 13 0256
        gbc.setState(0x3435, 0xca04, 0xe80, 0xac9e, 0xe34a, 0x367c, 0x1, 0x0);
        gbc.writeMem(0x3435, { 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xca04, gbc.sp());
        EXPECT(0x3436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0257
        gbc.setState(0x8174, 0xa42, 0x7e0, 0xdc7b, 0x771d, 0x3766, 0x1, 0x0);
        gbc.writeMem(0x8174, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x8175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8174));
        // 13 0258
        gbc.setState(0xdcb7, 0xe227, 0x7d50, 0x5067, 0x40c0, 0xec3, 0x0, 0x0);
        gbc.writeMem(0xdcb7, { 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe227, gbc.sp());
        EXPECT(0xdcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdcb7));
        // 13 0259
        gbc.setState(0xacf2, 0xb454, 0x9f60, 0x5449, 0x7126, 0xa29a, 0x0, 0x0);
        gbc.writeMem(0xacf2, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb454, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xacf2));
        // 13 025A
        gbc.setState(0x9d48, 0xb056, 0xcad0, 0x3d9a, 0xb904, 0xe49d, 0x0, 0x1);
        gbc.writeMem(0x9d48, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0x9d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9d48));
        // 13 025B
        gbc.setState(0x89c2, 0x6179, 0xb8c0, 0xba3d, 0x9e4a, 0xb477, 0x1, 0x1);
        gbc.writeMem(0x89c2, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6179, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x89c2));
        // 13 025C
        gbc.setState(0x8921, 0x3011, 0x2ae0, 0x72cb, 0xbcc8, 0x5013, 0x1, 0x0);
        gbc.writeMem(0x8921, { 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3011, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8921));
        // 13 025D
        gbc.setState(0x831e, 0xb12c, 0x15f0, 0xee5d, 0xd665, 0x781b, 0x1, 0x1);
        gbc.writeMem(0x831e, { 0x13 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0x831f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x831e));
        // 13 025E
        gbc.setState(0x1cb3, 0x9d15, 0xafb0, 0x3e7, 0x965e, 0x753b, 0x0, 0x0);
        gbc.writeMem(0x1cb3, { 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9d15, gbc.sp());
        EXPECT(0x1cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 025F
        gbc.setState(0x8a26, 0xe897, 0xb500, 0x9e1f, 0xc819, 0xe506, 0x0, 0x0);
        gbc.writeMem(0x8a26, { 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe897, gbc.sp());
        EXPECT(0x8a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8a26));
        // 13 0260
        gbc.setState(0x861, 0xbbf5, 0xade0, 0x747b, 0x1ac0, 0xce01, 0x1, 0x0);
        gbc.writeMem(0x861, { 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0x862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0261
        gbc.setState(0x7e52, 0x2dcb, 0x1410, 0xbfed, 0x89b8, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x7e52, { 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0x7e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0262
        gbc.setState(0x5424, 0xbcdd, 0x1970, 0x1e29, 0x268e, 0x2493, 0x0, 0x0);
        gbc.writeMem(0x5424, { 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0x5425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0263
        gbc.setState(0x6b2a, 0x3ee6, 0xf6d0, 0x24d4, 0x51ae, 0x4c3e, 0x1, 0x1);
        gbc.writeMem(0x6b2a, { 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3ee6, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0264
        gbc.setState(0x5717, 0xe7d6, 0x18c0, 0x63d9, 0x6cdb, 0xdbc0, 0x0, 0x0);
        gbc.writeMem(0x5717, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0265
        gbc.setState(0x39be, 0x591e, 0x9410, 0x7b68, 0xdecf, 0xaced, 0x0, 0x1);
        gbc.writeMem(0x39be, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0x39bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0266
        gbc.setState(0x8463, 0x890f, 0x61b0, 0x8713, 0x57d0, 0x1d63, 0x1, 0x0);
        gbc.writeMem(0x8463, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8463));
        // 13 0267
        gbc.setState(0xe547, 0xd54c, 0x6d60, 0xd375, 0xbe28, 0xfb9f, 0x0, 0x1);
        gbc.writeMem(0xe547, { 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd54c, gbc.sp());
        EXPECT(0xe548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe547));
        // 13 0268
        gbc.setState(0xa59f, 0x1bf5, 0xe030, 0x4fa5, 0xf72f, 0x9c17, 0x1, 0x1);
        gbc.writeMem(0xa59f, { 0x13 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1bf5, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa59f));
        // 13 0269
        gbc.setState(0xb5ac, 0x5b3d, 0xda0, 0x71c6, 0x5692, 0xb1e1, 0x0, 0x1);
        gbc.writeMem(0xb5ac, { 0x13 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b3d, gbc.sp());
        EXPECT(0xb5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb5ac));
        // 13 026A
        gbc.setState(0x546, 0x42f2, 0x34f0, 0x3a68, 0xf016, 0x2254, 0x0, 0x0);
        gbc.writeMem(0x546, { 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x42f2, gbc.sp());
        EXPECT(0x547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 026B
        gbc.setState(0x3392, 0xfd85, 0x5e40, 0x4fa8, 0x67e1, 0x9535, 0x1, 0x0);
        gbc.writeMem(0x3392, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0x3393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 026C
        gbc.setState(0x7bb0, 0x304c, 0x7f40, 0x5f49, 0x74fd, 0x35a3, 0x1, 0x0);
        gbc.writeMem(0x7bb0, { 0x13 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x304c, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 026D
        gbc.setState(0x58e7, 0x61, 0x99a0, 0x9e17, 0x3211, 0x1dd7, 0x1, 0x0);
        gbc.writeMem(0x58e7, { 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x61, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 026F
        gbc.setState(0x17ea, 0xbf1b, 0xe2a0, 0x7998, 0xcf6b, 0xec82, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0x13 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf1b, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0270
        gbc.setState(0xcf86, 0x1340, 0x3d40, 0xd776, 0xd81f, 0xdccc, 0x1, 0x0);
        gbc.writeMem(0xcf86, { 0x13 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcf86));
        // 13 0271
        gbc.setState(0x7e24, 0x9f7c, 0x1e10, 0xce2e, 0x8f4f, 0x88ca, 0x0, 0x1);
        gbc.writeMem(0x7e24, { 0x13 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f7c, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0272
        gbc.setState(0x9858, 0xe967, 0x36a0, 0x2063, 0x8adf, 0x404a, 0x0, 0x1);
        gbc.writeMem(0x9858, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x9859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9858));
        // 13 0273
        gbc.setState(0xb106, 0xd88c, 0x8a90, 0xbaed, 0xfa97, 0xf9b5, 0x1, 0x0);
        gbc.writeMem(0xb106, { 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd88c, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb106));
        // 13 0274
        gbc.setState(0xcfe7, 0xe9c4, 0xc0e0, 0x5ab6, 0xb5a6, 0x36d1, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe9c4, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcfe7));
        // 13 0275
        gbc.setState(0xef43, 0xe7a7, 0x9b40, 0xd5f0, 0xf97a, 0x7511, 0x1, 0x0);
        gbc.writeMem(0xef43, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe7a7, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xef43));
        // 13 0276
        gbc.setState(0x6223, 0xaa8a, 0x340, 0x9502, 0x6f03, 0xf448, 0x1, 0x1);
        gbc.writeMem(0x6223, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0x6224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0277
        gbc.setState(0xc344, 0xb6d1, 0x86e0, 0x2bda, 0xe3f5, 0x3604, 0x1, 0x0);
        gbc.writeMem(0xc344, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb6d1, gbc.sp());
        EXPECT(0xc345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc344));
        // 13 0278
        gbc.setState(0xc6b5, 0x5011, 0xe8b0, 0x6185, 0x7f9f, 0x838a, 0x1, 0x0);
        gbc.writeMem(0xc6b5, { 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5011, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc6b5));
        // 13 0279
        gbc.setState(0xe82e, 0x51a4, 0x4c00, 0xdfeb, 0x479e, 0x4f22, 0x1, 0x0);
        gbc.writeMem(0xe82e, { 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0xe82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe82e));
        // 13 027A
        gbc.setState(0xe05, 0xff2f, 0xa10, 0x8853, 0xac72, 0xe023, 0x0, 0x1);
        gbc.writeMem(0xe05, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xff2f, gbc.sp());
        EXPECT(0xe06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 027B
        gbc.setState(0xb701, 0x2ac, 0x2000, 0x7968, 0xce5c, 0x9c05, 0x1, 0x0);
        gbc.writeMem(0xb701, { 0x13 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2ac, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb701));
        // 13 027C
        gbc.setState(0x6dcd, 0x8895, 0x6180, 0xc22d, 0xa76f, 0xe8b, 0x0, 0x1);
        gbc.writeMem(0x6dcd, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8895, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 027D
        gbc.setState(0x657f, 0xacfd, 0x4080, 0xf644, 0xad1d, 0x9af8, 0x1, 0x1);
        gbc.writeMem(0x657f, { 0x13 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0x6580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 027E
        gbc.setState(0xc903, 0x2dca, 0x13e0, 0x887a, 0x7527, 0x162c, 0x0, 0x1);
        gbc.writeMem(0xc903, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2dca, gbc.sp());
        EXPECT(0xc904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc903));
        // 13 027F
        gbc.setState(0x192f, 0xea69, 0x7930, 0xd9f8, 0xe319, 0x55e6, 0x1, 0x0);
        gbc.writeMem(0x192f, { 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0280
        gbc.setState(0x2242, 0xfae3, 0x6a70, 0x5e91, 0x964c, 0x3a52, 0x1, 0x0);
        gbc.writeMem(0x2242, { 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfae3, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0281
        gbc.setState(0x39a4, 0x3135, 0x6e10, 0x174b, 0xaa3d, 0x8720, 0x0, 0x1);
        gbc.writeMem(0x39a4, { 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3135, gbc.sp());
        EXPECT(0x39a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0282
        gbc.setState(0x8acc, 0xf171, 0x6240, 0x9f6a, 0x78bb, 0xa669, 0x0, 0x0);
        gbc.writeMem(0x8acc, { 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf171, gbc.sp());
        EXPECT(0x8acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8acc));
        // 13 0283
        gbc.setState(0x7638, 0x7ab, 0x1aa0, 0x31d, 0x7ff8, 0xff09, 0x1, 0x1);
        gbc.writeMem(0x7638, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0284
        gbc.setState(0xd5d5, 0xce00, 0x3e20, 0x51e, 0xefa2, 0xd4ba, 0x1, 0x0);
        gbc.writeMem(0xd5d5, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce00, gbc.sp());
        EXPECT(0xd5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd5d5));
        // 13 0285
        gbc.setState(0xd049, 0xcffb, 0x59e0, 0x2bdc, 0x37c1, 0x1e90, 0x0, 0x0);
        gbc.writeMem(0xd049, { 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcffb, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd049));
        // 13 0286
        gbc.setState(0x11ca, 0x31e9, 0xb810, 0xb882, 0x9f97, 0x29a2, 0x0, 0x1);
        gbc.writeMem(0x11ca, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x31e9, gbc.sp());
        EXPECT(0x11cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0287
        gbc.setState(0x8139, 0x3a52, 0x69f0, 0xbf7f, 0x4b17, 0xa7d2, 0x0, 0x0);
        gbc.writeMem(0x8139, { 0x13 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3a52, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8139));
        // 13 0288
        gbc.setState(0x2417, 0xe6ce, 0x5470, 0x1cc6, 0x1c4, 0x1be1, 0x1, 0x1);
        gbc.writeMem(0x2417, { 0x13 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0289
        gbc.setState(0xac3e, 0xe166, 0xfb90, 0xd175, 0x4472, 0xf0f8, 0x1, 0x0);
        gbc.writeMem(0xac3e, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xac3e));
        // 13 028A
        gbc.setState(0xed8c, 0xe43c, 0x3570, 0x819a, 0x114a, 0x6cba, 0x1, 0x0);
        gbc.writeMem(0xed8c, { 0x13 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe43c, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xed8c));
        // 13 028B
        gbc.setState(0x3a47, 0xeaa2, 0xc9c0, 0x90c5, 0xb0b9, 0xb2c6, 0x1, 0x0);
        gbc.writeMem(0x3a47, { 0x13 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeaa2, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 028C
        gbc.setState(0x9c32, 0x70a9, 0x2a40, 0x1f55, 0xd77, 0x5521, 0x0, 0x0);
        gbc.writeMem(0x9c32, { 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x70a9, gbc.sp());
        EXPECT(0x9c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9c32));
        // 13 028D
        gbc.setState(0x2ad1, 0x4c3, 0x4b50, 0x4df9, 0x2e91, 0xe4d6, 0x0, 0x1);
        gbc.writeMem(0x2ad1, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4c3, gbc.sp());
        EXPECT(0x2ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 028E
        gbc.setState(0x652, 0x800b, 0xc0e0, 0x3e3a, 0xbf66, 0x6d6f, 0x1, 0x1);
        gbc.writeMem(0x652, { 0x13 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0x653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 028F
        gbc.setState(0xa564, 0xb332, 0xd9f0, 0x7f2, 0xbb47, 0x7da9, 0x1, 0x0);
        gbc.writeMem(0xa564, { 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa564));
        // 13 0290
        gbc.setState(0x6c8c, 0xfd41, 0xeb10, 0x6bb9, 0xe1d7, 0x5067, 0x1, 0x0);
        gbc.writeMem(0x6c8c, { 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfd41, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0291
        gbc.setState(0x4004, 0x9ac4, 0x74d0, 0xb731, 0x9ebe, 0x27c3, 0x1, 0x1);
        gbc.writeMem(0x4004, { 0x13 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x4005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0292
        gbc.setState(0x805c, 0x60b1, 0x5910, 0x22ec, 0x7c17, 0xd7eb, 0x0, 0x1);
        gbc.writeMem(0x805c, { 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0x805d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x805c));
        // 13 0293
        gbc.setState(0x7fbd, 0x4a9c, 0x60d0, 0x7a9d, 0x9515, 0xfc58, 0x1, 0x1);
        gbc.writeMem(0x7fbd, { 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4a9c, gbc.sp());
        EXPECT(0x7fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0294
        gbc.setState(0xea23, 0x30d9, 0x5a40, 0x9f14, 0x76d9, 0xc5d0, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x30d9, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xea23));
        // 13 0295
        gbc.setState(0x253c, 0x2115, 0x3c90, 0x442d, 0x592d, 0xb05a, 0x1, 0x1);
        gbc.writeMem(0x253c, { 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2115, gbc.sp());
        EXPECT(0x253d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0296
        gbc.setState(0xcbc9, 0xbfcc, 0xe610, 0x61a3, 0x7d6e, 0x455, 0x1, 0x1);
        gbc.writeMem(0xcbc9, { 0x13 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbfcc, gbc.sp());
        EXPECT(0xcbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcbc9));
        // 13 0297
        gbc.setState(0x48b9, 0xa7a8, 0xad70, 0xbb7, 0x228c, 0x9aa, 0x0, 0x0);
        gbc.writeMem(0x48b9, { 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x48ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0298
        gbc.setState(0xc0b4, 0x3393, 0x8c00, 0x96f3, 0x17d3, 0x84eb, 0x1, 0x1);
        gbc.writeMem(0xc0b4, { 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0xc0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0b4));
        // 13 0299
        gbc.setState(0xc7db, 0x1832, 0x1240, 0xd716, 0x8996, 0xfb9e, 0x0, 0x1);
        gbc.writeMem(0xc7db, { 0x13 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0xc7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc7db));
        // 13 029A
        gbc.setState(0x163f, 0xb7ab, 0x89b0, 0xc89a, 0x7189, 0x1a23, 0x1, 0x0);
        gbc.writeMem(0x163f, { 0x13 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 029B
        gbc.setState(0x239d, 0x8bab, 0x6300, 0xda83, 0x4e72, 0x1169, 0x1, 0x0);
        gbc.writeMem(0x239d, { 0x13 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8bab, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 029C
        gbc.setState(0x107e, 0x49b9, 0xf220, 0x5891, 0x34b9, 0x2ebd, 0x0, 0x0);
        gbc.writeMem(0x107e, { 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x107f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 029D
        gbc.setState(0x4c67, 0x274b, 0x1930, 0x4a64, 0x8506, 0xc4be, 0x1, 0x1);
        gbc.writeMem(0x4c67, { 0x13 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 029E
        gbc.setState(0xa09a, 0x3b9, 0xc730, 0xac39, 0x4845, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0xa09a, { 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3b9, gbc.sp());
        EXPECT(0xa09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa09a));
        // 13 029F
        gbc.setState(0x61c5, 0x790a, 0x5f30, 0x6233, 0x38f4, 0xd8f0, 0x0, 0x1);
        gbc.writeMem(0x61c5, { 0x13 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0x61c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02A1
        gbc.setState(0xaf72, 0xe5a3, 0x3280, 0xc93, 0x31f5, 0x30e4, 0x1, 0x1);
        gbc.writeMem(0xaf72, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaf72));
        // 13 02A2
        gbc.setState(0x4c0b, 0xe499, 0x78a0, 0x3d65, 0x38d1, 0x901e, 0x0, 0x1);
        gbc.writeMem(0x4c0b, { 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe499, gbc.sp());
        EXPECT(0x4c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02A4
        gbc.setState(0x5015, 0x976b, 0x2e30, 0x9ac2, 0xd036, 0x789c, 0x0, 0x0);
        gbc.writeMem(0x5015, { 0x13 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x5016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02A5
        gbc.setState(0x9e8f, 0xccf1, 0x41c0, 0x8c7d, 0x64b1, 0x830c, 0x0, 0x0);
        gbc.writeMem(0x9e8f, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xccf1, gbc.sp());
        EXPECT(0x9e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9e8f));
        // 13 02A6
        gbc.setState(0x2628, 0x8858, 0xf260, 0x28b8, 0x2c2a, 0x5ba6, 0x0, 0x1);
        gbc.writeMem(0x2628, { 0x13 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8858, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02A8
        gbc.setState(0x57c6, 0x8792, 0x2b90, 0xa931, 0xa2e6, 0xf508, 0x0, 0x0);
        gbc.writeMem(0x57c6, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x57c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02A9
        gbc.setState(0xcf7e, 0xe00f, 0x8d90, 0x4cd7, 0xe4ad, 0xd172, 0x1, 0x1);
        gbc.writeMem(0xcf7e, { 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0xcf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcf7e));
        // 13 02AA
        gbc.setState(0xa3ef, 0x3121, 0xdc20, 0x93e3, 0xd5, 0x68cd, 0x1, 0x1);
        gbc.writeMem(0xa3ef, { 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3121, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa3ef));
        // 13 02AB
        gbc.setState(0x715f, 0x6e2a, 0x8df0, 0xb153, 0x814d, 0xc507, 0x1, 0x1);
        gbc.writeMem(0x715f, { 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6e2a, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02AC
        gbc.setState(0xce8d, 0xa01a, 0xdc20, 0x6cdc, 0x1f3b, 0xc388, 0x1, 0x0);
        gbc.writeMem(0xce8d, { 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xce8d));
        // 13 02AD
        gbc.setState(0x896f, 0x2761, 0xcfb0, 0xfc25, 0x5068, 0x701d, 0x1, 0x1);
        gbc.writeMem(0x896f, { 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x8970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x896f));
        // 13 02AE
        gbc.setState(0xe4bf, 0x71f3, 0xe1a0, 0xfeb9, 0x80b9, 0xd08d, 0x0, 0x1);
        gbc.writeMem(0xe4bf, { 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x71f3, gbc.sp());
        EXPECT(0xe4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe4bf));
        // 13 02AF
        gbc.setState(0x1be6, 0xfd60, 0x5850, 0x47e8, 0xa51c, 0xc641, 0x1, 0x0);
        gbc.writeMem(0x1be6, { 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfd60, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B0
        gbc.setState(0x76cb, 0x6429, 0x6d50, 0x3be8, 0xcdd, 0x1d57, 0x0, 0x0);
        gbc.writeMem(0x76cb, { 0x13 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B1
        gbc.setState(0x81cf, 0x9f34, 0xa7c0, 0x89bf, 0xd293, 0x649f, 0x1, 0x0);
        gbc.writeMem(0x81cf, { 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x81cf));
        // 13 02B2
        gbc.setState(0x6548, 0x281b, 0xaf0, 0x22a2, 0x1c21, 0x84de, 0x1, 0x1);
        gbc.writeMem(0x6548, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x281b, gbc.sp());
        EXPECT(0x6549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B3
        gbc.setState(0x7dde, 0x3387, 0xbfd0, 0x78c5, 0x2efa, 0x3ab0, 0x1, 0x0);
        gbc.writeMem(0x7dde, { 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B4
        gbc.setState(0x8401, 0x571f, 0x3160, 0x553f, 0x8778, 0xa38c, 0x1, 0x0);
        gbc.writeMem(0x8401, { 0x13 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x571f, gbc.sp());
        EXPECT(0x8402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8401));
        // 13 02B5
        gbc.setState(0x521c, 0xc163, 0x3770, 0xac06, 0xe70f, 0x138, 0x1, 0x1);
        gbc.writeMem(0x521c, { 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc163, gbc.sp());
        EXPECT(0x521d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B6
        gbc.setState(0x8129, 0x8d12, 0x84f0, 0xfd27, 0x3c1d, 0xef89, 0x0, 0x0);
        gbc.writeMem(0x8129, { 0x13 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8129));
        // 13 02B7
        gbc.setState(0x89fa, 0x9d3c, 0x8580, 0x5ef4, 0xc247, 0xbde8, 0x1, 0x1);
        gbc.writeMem(0x89fa, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9d3c, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x89fa));
        // 13 02B8
        gbc.setState(0x76a2, 0xe584, 0xaef0, 0x8b12, 0x9e6f, 0xf89d, 0x1, 0x1);
        gbc.writeMem(0x76a2, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02B9
        gbc.setState(0x3505, 0x1366, 0x4190, 0x5a0e, 0xed51, 0xc10f, 0x1, 0x0);
        gbc.writeMem(0x3505, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1366, gbc.sp());
        EXPECT(0x3506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02BA
        gbc.setState(0xd3b6, 0x9f25, 0xc780, 0x5e59, 0x3e7, 0xdbad, 0x1, 0x0);
        gbc.writeMem(0xd3b6, { 0x13 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0xd3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd3b6));
        // 13 02BB
        gbc.setState(0x48d3, 0x7d30, 0x1a40, 0x2373, 0xf6b5, 0x40cb, 0x1, 0x0);
        gbc.writeMem(0x48d3, { 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7d30, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02BC
        gbc.setState(0x83ce, 0xd4c2, 0xeb50, 0x95f6, 0xb818, 0xfea9, 0x0, 0x0);
        gbc.writeMem(0x83ce, { 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0x83cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x83ce));
        // 13 02BD
        gbc.setState(0xeeb5, 0xd29a, 0x8a30, 0x977c, 0x25d0, 0x15a4, 0x1, 0x1);
        gbc.writeMem(0xeeb5, { 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd29a, gbc.sp());
        EXPECT(0xeeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeeb5));
        // 13 02BE
        gbc.setState(0x495f, 0xc1ed, 0x1c90, 0xe6d6, 0x3c11, 0x7dc4, 0x1, 0x1);
        gbc.writeMem(0x495f, { 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0x4960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02BF
        gbc.setState(0xbe9a, 0x2053, 0x3ee0, 0xdec, 0xd07e, 0x7522, 0x0, 0x0);
        gbc.writeMem(0xbe9a, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2053, gbc.sp());
        EXPECT(0xbe9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbe9a));
        // 13 02C0
        gbc.setState(0x4548, 0x8da4, 0x7eb0, 0x1d9a, 0x8461, 0x6ddf, 0x0, 0x1);
        gbc.writeMem(0x4548, { 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x4549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02C1
        gbc.setState(0x97d2, 0xa6e5, 0xcba0, 0xb795, 0x44d5, 0xc3e0, 0x0, 0x1);
        gbc.writeMem(0x97d2, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa6e5, gbc.sp());
        EXPECT(0x97d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x97d2));
        // 13 02C3
        gbc.setState(0x63e3, 0xe42, 0xb680, 0x310c, 0xbc72, 0xaa87, 0x0, 0x1);
        gbc.writeMem(0x63e3, { 0x13 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0x63e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02C4
        gbc.setState(0x3502, 0x7c6f, 0x7e10, 0x41e, 0x2f86, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0x3502, { 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02C6
        gbc.setState(0xa1e6, 0x761, 0xb5c0, 0x5ff8, 0xab91, 0x3fbc, 0x1, 0x0);
        gbc.writeMem(0xa1e6, { 0x13 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x761, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa1e6));
        // 13 02C7
        gbc.setState(0x3194, 0xd01, 0xcaf0, 0xb6a4, 0xb1ea, 0x1b87, 0x0, 0x1);
        gbc.writeMem(0x3194, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd01, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02C8
        gbc.setState(0xcb91, 0xbabc, 0xc490, 0x647, 0x4204, 0x660e, 0x0, 0x1);
        gbc.writeMem(0xcb91, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcb91));
        // 13 02C9
        gbc.setState(0x8d40, 0xcecf, 0xe0b0, 0xc566, 0x5f92, 0x34b8, 0x1, 0x1);
        gbc.writeMem(0x8d40, { 0x13 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0x8d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8d40));
        // 13 02CA
        gbc.setState(0x4e8, 0x6fb2, 0x5ae0, 0x62c4, 0xd50b, 0xc3c, 0x1, 0x0);
        gbc.writeMem(0x4e8, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0x4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02CB
        gbc.setState(0x491, 0x6a5f, 0xce10, 0x19a, 0x465d, 0x754, 0x1, 0x0);
        gbc.writeMem(0x491, { 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6a5f, gbc.sp());
        EXPECT(0x492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02CC
        gbc.setState(0xe8f2, 0x99bf, 0xbed0, 0xcf44, 0x4b72, 0x3d4, 0x1, 0x0);
        gbc.writeMem(0xe8f2, { 0x13 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x99bf, gbc.sp());
        EXPECT(0xe8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe8f2));
        // 13 02CD
        gbc.setState(0xafd7, 0x8f66, 0xcdf0, 0x6c10, 0xb3fc, 0xdf4e, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8f66, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xafd7));
        // 13 02CE
        gbc.setState(0x76a2, 0x5645, 0x6ad0, 0xd545, 0x8458, 0x657e, 0x0, 0x1);
        gbc.writeMem(0x76a2, { 0x13 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02CF
        gbc.setState(0x37de, 0x347a, 0x2090, 0x59fc, 0x344, 0x91a7, 0x0, 0x0);
        gbc.writeMem(0x37de, { 0x13 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x347a, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02D0
        gbc.setState(0x2bb1, 0x809b, 0xee90, 0x7c2f, 0x21dd, 0x781a, 0x1, 0x0);
        gbc.writeMem(0x2bb1, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x809b, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02D1
        gbc.setState(0xad05, 0x5a01, 0x60, 0xe328, 0x80b3, 0x41c, 0x1, 0x1);
        gbc.writeMem(0xad05, { 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5a01, gbc.sp());
        EXPECT(0xad06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xad05));
        // 13 02D2
        gbc.setState(0x47fe, 0xd41, 0x8550, 0xde9d, 0xb533, 0xf732, 0x1, 0x0);
        gbc.writeMem(0x47fe, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd41, gbc.sp());
        EXPECT(0x47ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02D3
        gbc.setState(0x688, 0xb4df, 0xaed0, 0x30be, 0xb308, 0x8724, 0x1, 0x0);
        gbc.writeMem(0x688, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02D5
        gbc.setState(0xef6a, 0x476b, 0x9c70, 0x8ab7, 0x51c7, 0x97d0, 0x1, 0x1);
        gbc.writeMem(0xef6a, { 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xef6a));
        // 13 02D6
        gbc.setState(0xdbdd, 0x43ea, 0x58a0, 0x9e6a, 0x34f9, 0x545b, 0x1, 0x0);
        gbc.writeMem(0xdbdd, { 0x13 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x43ea, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdbdd));
        // 13 02D7
        gbc.setState(0x5c78, 0x28e1, 0x5be0, 0xd1df, 0xb225, 0x407, 0x0, 0x1);
        gbc.writeMem(0x5c78, { 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x28e1, gbc.sp());
        EXPECT(0x5c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02D8
        gbc.setState(0xbd30, 0x9acc, 0x9d00, 0xd4b8, 0xb847, 0x5bc3, 0x0, 0x0);
        gbc.writeMem(0xbd30, { 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9acc, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd30));
        // 13 02D9
        gbc.setState(0xd5d1, 0x2149, 0x37d0, 0x9564, 0x6e44, 0xb67c, 0x0, 0x0);
        gbc.writeMem(0xd5d1, { 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2149, gbc.sp());
        EXPECT(0xd5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd5d1));
        // 13 02DA
        gbc.setState(0x8f90, 0x49f2, 0xaff0, 0x201e, 0x91fa, 0xe607, 0x1, 0x1);
        gbc.writeMem(0x8f90, { 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0x8f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8f90));
        // 13 02DB
        gbc.setState(0x7298, 0xf427, 0x3890, 0x9741, 0x8621, 0xb7b4, 0x0, 0x1);
        gbc.writeMem(0x7298, { 0x13 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02DC
        gbc.setState(0x5470, 0x1769, 0x780, 0xd004, 0x25ce, 0xa2c0, 0x0, 0x1);
        gbc.writeMem(0x5470, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1769, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02DD
        gbc.setState(0x4494, 0xdbe8, 0x2b50, 0x386f, 0x9e6c, 0x373b, 0x1, 0x0);
        gbc.writeMem(0x4494, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdbe8, gbc.sp());
        EXPECT(0x4495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02DE
        gbc.setState(0xd81f, 0x214b, 0x94c0, 0xefd3, 0x4f70, 0x44c8, 0x0, 0x1);
        gbc.writeMem(0xd81f, { 0x13 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x214b, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd81f));
        // 13 02DF
        gbc.setState(0x3617, 0x8b66, 0xdd50, 0x5c56, 0x8df4, 0xa3f2, 0x0, 0x0);
        gbc.writeMem(0x3617, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x3618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02E0
        gbc.setState(0x81fe, 0x7332, 0x9c60, 0xf197, 0xc750, 0xa5b1, 0x0, 0x1);
        gbc.writeMem(0x81fe, { 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x81fe));
        // 13 02E1
        gbc.setState(0x5bcd, 0x2a0, 0x2840, 0xf2f2, 0xb940, 0xa546, 0x0, 0x0);
        gbc.writeMem(0x5bcd, { 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2a0, gbc.sp());
        EXPECT(0x5bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02E2
        gbc.setState(0xc556, 0x7e32, 0xb980, 0x8d2e, 0x2997, 0xc50b, 0x1, 0x0);
        gbc.writeMem(0xc556, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc556));
        // 13 02E3
        gbc.setState(0x1a83, 0xdbd7, 0x3720, 0xe81a, 0x690c, 0x3ff0, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x13 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdbd7, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02E5
        gbc.setState(0xc492, 0x491, 0x7310, 0x9405, 0x4116, 0xcf19, 0x1, 0x1);
        gbc.writeMem(0xc492, { 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc492));
        // 13 02E6
        gbc.setState(0xba24, 0xafc5, 0x75c0, 0xe70e, 0xfb12, 0x34da, 0x1, 0x0);
        gbc.writeMem(0xba24, { 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0xba25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xba24));
        // 13 02E7
        gbc.setState(0x384f, 0xe3e1, 0x6910, 0x8347, 0x171, 0x5bd5, 0x0, 0x0);
        gbc.writeMem(0x384f, { 0x13 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe3e1, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02E8
        gbc.setState(0x21c6, 0xad6f, 0xe2d0, 0x6b4c, 0x69c4, 0xcab9, 0x0, 0x1);
        gbc.writeMem(0x21c6, { 0x13 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02E9
        gbc.setState(0x4337, 0xe42b, 0x5c0, 0xa633, 0x531e, 0x99d2, 0x1, 0x0);
        gbc.writeMem(0x4337, { 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe42b, gbc.sp());
        EXPECT(0x4338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02EA
        gbc.setState(0x39ed, 0x409c, 0x1310, 0x556, 0x7a5, 0x36a2, 0x1, 0x1);
        gbc.writeMem(0x39ed, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02EB
        gbc.setState(0xbe7e, 0xfbd2, 0x9330, 0xdbf8, 0x635e, 0x8293, 0x1, 0x0);
        gbc.writeMem(0xbe7e, { 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfbd2, gbc.sp());
        EXPECT(0xbe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbe7e));
        // 13 02EC
        gbc.setState(0x3d4c, 0x9e72, 0x8a00, 0xca1, 0x9957, 0x4b8a, 0x0, 0x0);
        gbc.writeMem(0x3d4c, { 0x13 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x3d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02ED
        gbc.setState(0x9a93, 0x6817, 0x1730, 0xd9bc, 0xcbd6, 0xaf4f, 0x1, 0x0);
        gbc.writeMem(0x9a93, { 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9a93));
        // 13 02EE
        gbc.setState(0x639e, 0x9e39, 0xff90, 0xbafe, 0x75ce, 0x304b, 0x1, 0x1);
        gbc.writeMem(0x639e, { 0x13 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02EF
        gbc.setState(0x8416, 0x5fce, 0x4880, 0x38fe, 0x418e, 0x1edf, 0x1, 0x0);
        gbc.writeMem(0x8416, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5fce, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8416));
        // 13 02F1
        gbc.setState(0x61be, 0xc1a4, 0x2ad0, 0xd64c, 0xb243, 0xd07c, 0x1, 0x0);
        gbc.writeMem(0x61be, { 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0x61bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 02F2
        gbc.setState(0xb858, 0xc0dd, 0xcbd0, 0xd63e, 0x58f2, 0x8ab, 0x0, 0x0);
        gbc.writeMem(0xb858, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc0dd, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb858));
        // 13 02F3
        gbc.setState(0x3fef, 0x487e, 0xfe80, 0xf56c, 0xbd86, 0x77a8, 0x0, 0x1);
        gbc.writeMem(0x3fef, { 0x13 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x487e, gbc.sp());
        EXPECT(0x3ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02F4
        gbc.setState(0x1154, 0x1431, 0xc240, 0x9a5, 0x85aa, 0x2d4f, 0x0, 0x0);
        gbc.writeMem(0x1154, { 0x13 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1431, gbc.sp());
        EXPECT(0x1155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02F5
        gbc.setState(0x9ff3, 0x3da5, 0xf030, 0x8028, 0x1060, 0xfc93, 0x0, 0x0);
        gbc.writeMem(0x9ff3, { 0x13 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0x9ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9ff3));
        // 13 02F6
        gbc.setState(0xd59b, 0x224a, 0xa2a0, 0xc0cd, 0xa69a, 0xbc3e, 0x1, 0x1);
        gbc.writeMem(0xd59b, { 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd59b));
        // 13 02F7
        gbc.setState(0x699b, 0xfa50, 0xe7c0, 0x34e2, 0xb1a0, 0x7a99, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 02F8
        gbc.setState(0xb461, 0xc214, 0x8b00, 0xf58f, 0x81cc, 0x91a9, 0x1, 0x1);
        gbc.writeMem(0xb461, { 0x13 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0xb462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb461));
        // 13 02F9
        gbc.setState(0x9faa, 0xa3c1, 0x6460, 0x45b6, 0xe935, 0x88f9, 0x0, 0x1);
        gbc.writeMem(0x9faa, { 0x13 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9faa));
        // 13 02FA
        gbc.setState(0x87c4, 0x8e6, 0xa5a0, 0x8a88, 0x72c1, 0x257a, 0x0, 0x1);
        gbc.writeMem(0x87c4, { 0x13 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8e6, gbc.sp());
        EXPECT(0x87c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x87c4));
        // 13 02FC
        gbc.setState(0x8e5e, 0x647d, 0xfa60, 0x1cad, 0x2e06, 0xec45, 0x1, 0x0);
        gbc.writeMem(0x8e5e, { 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8e5e));
        // 13 02FE
        gbc.setState(0x977e, 0xa50a, 0x81f0, 0x6803, 0xf309, 0xd145, 0x1, 0x0);
        gbc.writeMem(0x977e, { 0x13 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa50a, gbc.sp());
        EXPECT(0x977f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x977e));
        // 13 02FF
        gbc.setState(0x9be4, 0xf8c8, 0x2b40, 0x87dd, 0xd160, 0xc7c, 0x1, 0x0);
        gbc.writeMem(0x9be4, { 0x13 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0x9be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9be4));
        // 13 0300
        gbc.setState(0x4501, 0xac64, 0xba20, 0x2db, 0x6c64, 0xa1ca, 0x0, 0x0);
        gbc.writeMem(0x4501, { 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xac64, gbc.sp());
        EXPECT(0x4502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0301
        gbc.setState(0x5de1, 0xb640, 0xe9c0, 0xd3af, 0xcdaf, 0xa45b, 0x1, 0x1);
        gbc.writeMem(0x5de1, { 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb640, gbc.sp());
        EXPECT(0x5de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0302
        gbc.setState(0x3da3, 0x42cd, 0x4570, 0x41ec, 0xc65c, 0x8905, 0x1, 0x1);
        gbc.writeMem(0x3da3, { 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x42cd, gbc.sp());
        EXPECT(0x3da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0303
        gbc.setState(0x3b07, 0x9866, 0x9d50, 0x573e, 0xe967, 0xb2df, 0x1, 0x1);
        gbc.writeMem(0x3b07, { 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9866, gbc.sp());
        EXPECT(0x3b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0304
        gbc.setState(0x5391, 0xda5b, 0x16d0, 0x6162, 0xdd6, 0xfd71, 0x1, 0x1);
        gbc.writeMem(0x5391, { 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0305
        gbc.setState(0xc0e5, 0x7fbd, 0xa60, 0x73c1, 0x3652, 0xca5e, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0x13 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7fbd, gbc.sp());
        EXPECT(0xc0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0e5));
        // 13 0306
        gbc.setState(0x884a, 0x18ae, 0x1bc0, 0x4127, 0xdf95, 0xb553, 0x1, 0x0);
        gbc.writeMem(0x884a, { 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x18ae, gbc.sp());
        EXPECT(0x884b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x884a));
        // 13 0307
        gbc.setState(0x8272, 0xee44, 0xc1a0, 0x9dca, 0x246, 0xd4ef, 0x1, 0x1);
        gbc.writeMem(0x8272, { 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee44, gbc.sp());
        EXPECT(0x8273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8272));
        // 13 0308
        gbc.setState(0xb9c7, 0xdd88, 0xfd0, 0xdd85, 0x301, 0x6b4b, 0x0, 0x1);
        gbc.writeMem(0xb9c7, { 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd88, gbc.sp());
        EXPECT(0xb9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb9c7));
        // 13 030A
        gbc.setState(0xa8bd, 0x6369, 0x4850, 0x523e, 0x2ed1, 0xe4e8, 0x1, 0x1);
        gbc.writeMem(0xa8bd, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6369, gbc.sp());
        EXPECT(0xa8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa8bd));
        // 13 030C
        gbc.setState(0xe893, 0x855c, 0x2740, 0x479c, 0x8979, 0x8e59, 0x1, 0x1);
        gbc.writeMem(0xe893, { 0x13 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0xe894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe893));
        // 13 030D
        gbc.setState(0x832, 0xa133, 0x270, 0x5a9a, 0x5743, 0x83, 0x0, 0x0);
        gbc.writeMem(0x832, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 030E
        gbc.setState(0xc6d0, 0xe2c7, 0x7d50, 0xbd0f, 0x89b0, 0x743a, 0x0, 0x0);
        gbc.writeMem(0xc6d0, { 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe2c7, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc6d0));
        // 13 030F
        gbc.setState(0x9fca, 0x8821, 0x6760, 0x8ead, 0xbdf8, 0xc952, 0x0, 0x0);
        gbc.writeMem(0x9fca, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8821, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9fca));
        // 13 0310
        gbc.setState(0x403a, 0x2907, 0x76a0, 0x21aa, 0xc4ff, 0x297f, 0x0, 0x0);
        gbc.writeMem(0x403a, { 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0x403b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0311
        gbc.setState(0x724, 0x749e, 0x23d0, 0x926, 0xddaa, 0x3d2e, 0x0, 0x1);
        gbc.writeMem(0x724, { 0x13 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x749e, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0312
        gbc.setState(0xb69b, 0x214e, 0x510, 0x167f, 0x8fd9, 0x2451, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0x13 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x214e, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb69b));
        // 13 0313
        gbc.setState(0x2b13, 0x6b25, 0x4c30, 0x88ca, 0xf49c, 0xe920, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0x13 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6b25, gbc.sp());
        EXPECT(0x2b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0314
        gbc.setState(0x62fd, 0x39ac, 0x6760, 0x994f, 0x8e3e, 0x11cd, 0x0, 0x0);
        gbc.writeMem(0x62fd, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x62fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0315
        gbc.setState(0xcc95, 0x6caa, 0x7630, 0xa389, 0x7cf0, 0x1ba7, 0x0, 0x1);
        gbc.writeMem(0xcc95, { 0x13 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6caa, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcc95));
        // 13 0316
        gbc.setState(0x19a3, 0xdb97, 0x790, 0x29f7, 0x8d8d, 0xceae, 0x0, 0x0);
        gbc.writeMem(0x19a3, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0317
        gbc.setState(0x38c5, 0x407d, 0xfa70, 0x11a, 0xf715, 0x43b8, 0x0, 0x0);
        gbc.writeMem(0x38c5, { 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x407d, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0318
        gbc.setState(0x87aa, 0x63dd, 0xacf0, 0xda89, 0xe28f, 0xbe62, 0x0, 0x1);
        gbc.writeMem(0x87aa, { 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x63dd, gbc.sp());
        EXPECT(0x87ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x87aa));
        // 13 0319
        gbc.setState(0x658f, 0x3017, 0x2e0, 0x59e1, 0xc9e5, 0x636a, 0x1, 0x0);
        gbc.writeMem(0x658f, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 031A
        gbc.setState(0x9bd6, 0x247b, 0x8800, 0xec33, 0xb23c, 0x96fc, 0x1, 0x1);
        gbc.writeMem(0x9bd6, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9bd6));
        // 13 031B
        gbc.setState(0xa2e8, 0xdc54, 0x9f00, 0xd1ce, 0xac8, 0xe1df, 0x0, 0x0);
        gbc.writeMem(0xa2e8, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0xa2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa2e8));
        // 13 031C
        gbc.setState(0x2a5d, 0x46dc, 0x9f80, 0x3b2d, 0xfb35, 0xd267, 0x1, 0x0);
        gbc.writeMem(0x2a5d, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x46dc, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 031D
        gbc.setState(0x5881, 0x34f8, 0xcf40, 0xca59, 0x7efb, 0xbe21, 0x0, 0x1);
        gbc.writeMem(0x5881, { 0x13 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x34f8, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 031E
        gbc.setState(0x2777, 0xd44d, 0xab90, 0x4fbf, 0x53bc, 0xfe2f, 0x0, 0x0);
        gbc.writeMem(0x2777, { 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x2778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0320
        gbc.setState(0x3a11, 0x903e, 0xdd70, 0x776e, 0x771e, 0xd5c7, 0x1, 0x1);
        gbc.writeMem(0x3a11, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x903e, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0321
        gbc.setState(0x41bf, 0xbe7b, 0xfba0, 0x9693, 0xcb4d, 0xe66, 0x0, 0x1);
        gbc.writeMem(0x41bf, { 0x13 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0324
        gbc.setState(0x41db, 0x1469, 0x5e50, 0x82d2, 0x4759, 0xa894, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x41dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0325
        gbc.setState(0x430a, 0xadac, 0xee70, 0xd473, 0x1ccc, 0x5ce5, 0x0, 0x1);
        gbc.writeMem(0x430a, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadac, gbc.sp());
        EXPECT(0x430b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0326
        gbc.setState(0x1c79, 0xbca1, 0x9c50, 0x72e5, 0x20c0, 0xfbc0, 0x0, 0x0);
        gbc.writeMem(0x1c79, { 0x13 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbca1, gbc.sp());
        EXPECT(0x1c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0327
        gbc.setState(0x5696, 0xe534, 0xeb00, 0x5f19, 0x8868, 0x1025, 0x1, 0x0);
        gbc.writeMem(0x5696, { 0x13 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0328
        gbc.setState(0xd36f, 0x4f87, 0x14c0, 0xd578, 0x606b, 0x6fc4, 0x0, 0x1);
        gbc.writeMem(0xd36f, { 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0xd370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd36f));
        // 13 0329
        gbc.setState(0xc2ec, 0x7210, 0x60a0, 0x4610, 0x7667, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0xc2ec, { 0x13 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7210, gbc.sp());
        EXPECT(0xc2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc2ec));
        // 13 032A
        gbc.setState(0xeaa9, 0x2a8e, 0x8810, 0xfe1f, 0x5c77, 0x2495, 0x0, 0x0);
        gbc.writeMem(0xeaa9, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0xeaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xeaa9));
        // 13 032B
        gbc.setState(0xd702, 0xa419, 0x7a20, 0xc52e, 0x8151, 0xf676, 0x0, 0x1);
        gbc.writeMem(0xd702, { 0x13 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa419, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd702));
        // 13 032C
        gbc.setState(0x2e6, 0x822c, 0x7050, 0x1590, 0x846e, 0x623, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0x13 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x822c, gbc.sp());
        EXPECT(0x2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 032D
        gbc.setState(0xc0a1, 0xffbb, 0x55a0, 0xa492, 0x748b, 0xdbe, 0x0, 0x1);
        gbc.writeMem(0xc0a1, { 0x13 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0xc0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0a1));
        // 13 032E
        gbc.setState(0x53ac, 0x97fc, 0x4190, 0xe6cc, 0x2210, 0x8b87, 0x1, 0x1);
        gbc.writeMem(0x53ac, { 0x13 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x97fc, gbc.sp());
        EXPECT(0x53ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 032F
        gbc.setState(0xbd9b, 0x16a6, 0x79c0, 0x2f82, 0x3a73, 0xbe31, 0x0, 0x0);
        gbc.writeMem(0xbd9b, { 0x13 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x16a6, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd9b));
        // 13 0330
        gbc.setState(0xc7a5, 0x7dc3, 0x6160, 0xa68f, 0x7c51, 0xfe0, 0x0, 0x0);
        gbc.writeMem(0xc7a5, { 0x13 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7dc3, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc7a5));
        // 13 0331
        gbc.setState(0xe31a, 0x1920, 0xca50, 0x2b97, 0x1a04, 0xacba, 0x0, 0x1);
        gbc.writeMem(0xe31a, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe31a));
        // 13 0332
        gbc.setState(0x8977, 0xbc96, 0xfe20, 0xf804, 0x2a52, 0x6d2c, 0x1, 0x0);
        gbc.writeMem(0x8977, { 0x13 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc96, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8977));
        // 13 0333
        gbc.setState(0x65db, 0xe6e5, 0xab10, 0x4837, 0x8508, 0x67de, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0334
        gbc.setState(0xc31, 0x4435, 0xaeb0, 0xfac4, 0xd5a1, 0xe06, 0x0, 0x0);
        gbc.writeMem(0xc31, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4435, gbc.sp());
        EXPECT(0xc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0335
        gbc.setState(0x7693, 0x7747, 0x3470, 0xdf0, 0x7e6, 0x79ee, 0x0, 0x0);
        gbc.writeMem(0x7693, { 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7747, gbc.sp());
        EXPECT(0x7694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0336
        gbc.setState(0x73eb, 0x4439, 0xf6d0, 0x3179, 0xca1c, 0xa15b, 0x0, 0x0);
        gbc.writeMem(0x73eb, { 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0x73ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0337
        gbc.setState(0x1b84, 0x986c, 0x8090, 0x745f, 0x7473, 0x6536, 0x1, 0x0);
        gbc.writeMem(0x1b84, { 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0x1b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0338
        gbc.setState(0x5c1, 0xa771, 0xca60, 0x4f17, 0x8c76, 0x7788, 0x0, 0x0);
        gbc.writeMem(0x5c1, { 0x13 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0x5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0339
        gbc.setState(0x30e7, 0x51b3, 0xf1b0, 0x927d, 0xbbb0, 0x9095, 0x0, 0x0);
        gbc.writeMem(0x30e7, { 0x13 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 033A
        gbc.setState(0x557, 0xefa5, 0x9de0, 0x250c, 0x2232, 0x3f28, 0x0, 0x1);
        gbc.writeMem(0x557, { 0x13 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 033B
        gbc.setState(0x798d, 0x53d7, 0xba60, 0xa315, 0xbfe, 0x9e3b, 0x1, 0x1);
        gbc.writeMem(0x798d, { 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x53d7, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 033C
        gbc.setState(0x97dd, 0x2a14, 0x3e80, 0x5746, 0xe026, 0xa136, 0x1, 0x0);
        gbc.writeMem(0x97dd, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2a14, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x97dd));
        // 13 033D
        gbc.setState(0xc2ef, 0xdbfb, 0xdd10, 0x6420, 0x31a3, 0xc42c, 0x1, 0x1);
        gbc.writeMem(0xc2ef, { 0x13 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdbfb, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc2ef));
        // 13 033E
        gbc.setState(0x7e98, 0xe237, 0x9870, 0x11b6, 0x3dc7, 0x19ae, 0x1, 0x1);
        gbc.writeMem(0x7e98, { 0x13 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe237, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0340
        gbc.setState(0xf9d, 0x3bfe, 0xfa20, 0x4fb2, 0x8cc0, 0xb060, 0x0, 0x0);
        gbc.writeMem(0xf9d, { 0x13 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3bfe, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0341
        gbc.setState(0x4cb4, 0x8da0, 0x32b0, 0x1083, 0x9427, 0x9bad, 0x1, 0x0);
        gbc.writeMem(0x4cb4, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8da0, gbc.sp());
        EXPECT(0x4cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0342
        gbc.setState(0x8fd0, 0x3f07, 0x95e0, 0xd8a8, 0x5237, 0x4609, 0x1, 0x0);
        gbc.writeMem(0x8fd0, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3f07, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8fd0));
        // 13 0344
        gbc.setState(0x6bce, 0x966c, 0xd970, 0xb454, 0xa1d6, 0x3231, 0x1, 0x1);
        gbc.writeMem(0x6bce, { 0x13 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x966c, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0345
        gbc.setState(0x701f, 0x47f2, 0xb970, 0x5457, 0x3871, 0x3818, 0x0, 0x0);
        gbc.writeMem(0x701f, { 0x13 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0x7020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0347
        gbc.setState(0xbf72, 0xfd71, 0x5e20, 0x34a1, 0x8333, 0x56fa, 0x0, 0x0);
        gbc.writeMem(0xbf72, { 0x13 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfd71, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf72));
        // 13 0348
        gbc.setState(0x8666, 0x4eb8, 0xd6f0, 0x74f8, 0x9926, 0xa472, 0x1, 0x0);
        gbc.writeMem(0x8666, { 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8666));
        // 13 0349
        gbc.setState(0x85b8, 0x3b44, 0x4470, 0x2679, 0xa9bb, 0xdc14, 0x1, 0x1);
        gbc.writeMem(0x85b8, { 0x13 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3b44, gbc.sp());
        EXPECT(0x85b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x85b8));
        // 13 034B
        gbc.setState(0x19d2, 0xc56, 0x90, 0xdf79, 0x28df, 0x3c65, 0x1, 0x0);
        gbc.writeMem(0x19d2, { 0x13 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc56, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 034C
        gbc.setState(0x683e, 0x5eba, 0xdc50, 0x3900, 0x5459, 0x9881, 0x1, 0x0);
        gbc.writeMem(0x683e, { 0x13 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5eba, gbc.sp());
        EXPECT(0x683f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 034D
        gbc.setState(0x645c, 0xb550, 0xdbb0, 0xedc8, 0x8324, 0x7704, 0x0, 0x0);
        gbc.writeMem(0x645c, { 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb550, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 034E
        gbc.setState(0x2f36, 0x17eb, 0xb0f0, 0x4cd1, 0x6ad6, 0x14de, 0x1, 0x0);
        gbc.writeMem(0x2f36, { 0x13 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 034F
        gbc.setState(0x178c, 0xaf33, 0xc1a0, 0x3381, 0x7623, 0x5bea, 0x1, 0x1);
        gbc.writeMem(0x178c, { 0x13 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaf33, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0351
        gbc.setState(0x2cdb, 0x9ba5, 0x96e0, 0x8c54, 0x228c, 0xeb53, 0x1, 0x1);
        gbc.writeMem(0x2cdb, { 0x13 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9ba5, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0352
        gbc.setState(0x629a, 0x4fea, 0x6e10, 0xa1c7, 0xd443, 0x4cad, 0x1, 0x1);
        gbc.writeMem(0x629a, { 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4fea, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0353
        gbc.setState(0xac2c, 0x4ed7, 0x5a70, 0x1b46, 0x1f72, 0xc95a, 0x1, 0x1);
        gbc.writeMem(0xac2c, { 0x13 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ed7, gbc.sp());
        EXPECT(0xac2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xac2c));
        // 13 0355
        gbc.setState(0x7e29, 0x5a6a, 0xd4b0, 0x9960, 0xd247, 0x36c0, 0x1, 0x0);
        gbc.writeMem(0x7e29, { 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5a6a, gbc.sp());
        EXPECT(0x7e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0356
        gbc.setState(0xbdcd, 0xdbd, 0x6ff0, 0x626f, 0x1c7f, 0x119b, 0x1, 0x1);
        gbc.writeMem(0xbdcd, { 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdbd, gbc.sp());
        EXPECT(0xbdce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbdcd));
        // 13 0357
        gbc.setState(0x1cba, 0xd694, 0x3270, 0xa488, 0x5cdd, 0x49e3, 0x0, 0x1);
        gbc.writeMem(0x1cba, { 0x13 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0x1cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0358
        gbc.setState(0x61cf, 0xb16b, 0x780, 0x9eae, 0xe1e9, 0xf39a, 0x0, 0x1);
        gbc.writeMem(0x61cf, { 0x13 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb16b, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0359
        gbc.setState(0x592e, 0x17bd, 0x3e70, 0x7303, 0x1f83, 0x664c, 0x0, 0x0);
        gbc.writeMem(0x592e, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0x592f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 035A
        gbc.setState(0x3b0e, 0xf787, 0x9fa0, 0x690e, 0x73f2, 0x47f, 0x0, 0x0);
        gbc.writeMem(0x3b0e, { 0x13 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 035B
        gbc.setState(0x8795, 0xd26f, 0x9b00, 0x70a, 0x8d34, 0x2dac, 0x1, 0x0);
        gbc.writeMem(0x8795, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd26f, gbc.sp());
        EXPECT(0x8796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8795));
        // 13 035C
        gbc.setState(0x5e15, 0xcb58, 0x22d0, 0x6026, 0xf363, 0xd997, 0x1, 0x1);
        gbc.writeMem(0x5e15, { 0x13 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcb58, gbc.sp());
        EXPECT(0x5e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 035D
        gbc.setState(0x6921, 0xad62, 0x43b0, 0x6a6c, 0x1305, 0x4898, 0x0, 0x0);
        gbc.writeMem(0x6921, { 0x13 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xad62, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 035E
        gbc.setState(0xcec4, 0xf1b, 0x2a20, 0x248b, 0x1b55, 0x402d, 0x1, 0x1);
        gbc.writeMem(0xcec4, { 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0xcec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcec4));
        // 13 0360
        gbc.setState(0xc0a3, 0x5afc, 0x9380, 0xd7e6, 0xae76, 0x74c0, 0x1, 0x1);
        gbc.writeMem(0xc0a3, { 0x13 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5afc, gbc.sp());
        EXPECT(0xc0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0a3));
        // 13 0361
        gbc.setState(0x5296, 0xe3c5, 0x9510, 0xaf59, 0xa89d, 0x7b78, 0x1, 0x1);
        gbc.writeMem(0x5296, { 0x13 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe3c5, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0362
        gbc.setState(0x4629, 0xea73, 0x78b0, 0xf09e, 0x506d, 0xbc09, 0x0, 0x0);
        gbc.writeMem(0x4629, { 0x13 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0x462a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0363
        gbc.setState(0x49b, 0x9e92, 0xa900, 0x4e83, 0x6901, 0xdd68, 0x0, 0x0);
        gbc.writeMem(0x49b, { 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9e92, gbc.sp());
        EXPECT(0x49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0365
        gbc.setState(0x85a8, 0xd33, 0x4e30, 0x8cc, 0x7bb8, 0x194f, 0x0, 0x0);
        gbc.writeMem(0x85a8, { 0x13 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd33, gbc.sp());
        EXPECT(0x85a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x85a8));
        // 13 0366
        gbc.setState(0x3151, 0x4e9d, 0xd7b0, 0x377, 0xaee7, 0x2fb2, 0x0, 0x1);
        gbc.writeMem(0x3151, { 0x13 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0x3152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0367
        gbc.setState(0xa5a4, 0xdfbc, 0x7bc0, 0x2f12, 0x2afb, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0xa5a4, { 0x13 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa5a4));
        // 13 0368
        gbc.setState(0x4334, 0x8881, 0x51e0, 0xc175, 0x1dce, 0xde79, 0x0, 0x1);
        gbc.writeMem(0x4334, { 0x13 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0x4335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0369
        gbc.setState(0xbc0d, 0xa1c9, 0x75f0, 0x9f13, 0x614b, 0x9108, 0x0, 0x0);
        gbc.writeMem(0xbc0d, { 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0xbc0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbc0d));
        // 13 036A
        gbc.setState(0x3c89, 0x1685, 0xb200, 0xa4bb, 0x899b, 0x6752, 0x0, 0x1);
        gbc.writeMem(0x3c89, { 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1685, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 036B
        gbc.setState(0x1717, 0x2885, 0x860, 0xd52d, 0x3029, 0x7399, 0x1, 0x1);
        gbc.writeMem(0x1717, { 0x13 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2885, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 036C
        gbc.setState(0x6ad3, 0x15d0, 0x9bb0, 0x1627, 0x5cab, 0x4c12, 0x0, 0x0);
        gbc.writeMem(0x6ad3, { 0x13 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x15d0, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 036D
        gbc.setState(0xe4cf, 0xd2e7, 0xd570, 0x8d2b, 0x9f2f, 0xc455, 0x1, 0x1);
        gbc.writeMem(0xe4cf, { 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0xe4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe4cf));
        // 13 036E
        gbc.setState(0xc0ac, 0x1067, 0xfe0, 0x2a7d, 0x5a6, 0xdab3, 0x0, 0x0);
        gbc.writeMem(0xc0ac, { 0x13 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1067, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0ac));
        // 13 036F
        gbc.setState(0xd52d, 0x424c, 0x1b50, 0xd27c, 0x9ae, 0x3662, 0x1, 0x1);
        gbc.writeMem(0xd52d, { 0x13 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0xd52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd52d));
        // 13 0370
        gbc.setState(0x28ad, 0x8b2, 0x90f0, 0x7653, 0x4c08, 0x426d, 0x0, 0x0);
        gbc.writeMem(0x28ad, { 0x13 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0x28ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0371
        gbc.setState(0xc7fb, 0xe7eb, 0xa820, 0x2a2e, 0x596e, 0x1364, 0x0, 0x1);
        gbc.writeMem(0xc7fb, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xc7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc7fb));
        // 13 0372
        gbc.setState(0xa40b, 0x5a2d, 0x3ef0, 0x2ab8, 0x7b59, 0x2335, 0x0, 0x0);
        gbc.writeMem(0xa40b, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa40b));
        // 13 0373
        gbc.setState(0x140c, 0x3415, 0x2aa0, 0x5d75, 0x19e5, 0x5d15, 0x1, 0x0);
        gbc.writeMem(0x140c, { 0x13 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0374
        gbc.setState(0xc483, 0xc9ae, 0xbdd0, 0x41c7, 0xf116, 0xd8d4, 0x1, 0x1);
        gbc.writeMem(0xc483, { 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc483));
        // 13 0375
        gbc.setState(0x7530, 0x79e4, 0x8fc0, 0x97d8, 0xdda9, 0x375c, 0x0, 0x0);
        gbc.writeMem(0x7530, { 0x13 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x79e4, gbc.sp());
        EXPECT(0x7531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0376
        gbc.setState(0x404f, 0x2422, 0xc590, 0x517e, 0x2a7a, 0xe878, 0x0, 0x1);
        gbc.writeMem(0x404f, { 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0x4050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0377
        gbc.setState(0x8c7, 0x47d5, 0xe2e0, 0x3a8a, 0xf940, 0xfb22, 0x0, 0x0);
        gbc.writeMem(0x8c7, { 0x13 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x47d5, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0378
        gbc.setState(0x60d4, 0xde67, 0xa7f0, 0x59dc, 0xc2, 0xd197, 0x1, 0x0);
        gbc.writeMem(0x60d4, { 0x13 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0379
        gbc.setState(0x21fa, 0xc2bd, 0xa4a0, 0xf763, 0x4474, 0xf3bc, 0x0, 0x1);
        gbc.writeMem(0x21fa, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc2bd, gbc.sp());
        EXPECT(0x21fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 037A
        gbc.setState(0xc36a, 0xa646, 0x120, 0xe441, 0xf44c, 0x3917, 0x1, 0x0);
        gbc.writeMem(0xc36a, { 0x13 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0xc36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc36a));
        // 13 037B
        gbc.setState(0x135, 0x9ec2, 0xedb0, 0x911, 0xbf1a, 0xec24, 0x0, 0x1);
        gbc.writeMem(0x135, { 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9ec2, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 037C
        gbc.setState(0x390b, 0x85fe, 0xa9c0, 0x56c0, 0xe63a, 0xab98, 0x0, 0x1);
        gbc.writeMem(0x390b, { 0x13 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x85fe, gbc.sp());
        EXPECT(0x390c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 037D
        gbc.setState(0xd5fa, 0xf578, 0xe610, 0xacb7, 0x3c86, 0x67da, 0x0, 0x0);
        gbc.writeMem(0xd5fa, { 0x13 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf578, gbc.sp());
        EXPECT(0xd5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd5fa));
        // 13 037E
        gbc.setState(0x9040, 0x3ce, 0xc550, 0x5e8b, 0x882c, 0xd98b, 0x0, 0x1);
        gbc.writeMem(0x9040, { 0x13 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3ce, gbc.sp());
        EXPECT(0x9041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9040));
        // 13 037F
        gbc.setState(0x8b34, 0x78a4, 0xfc70, 0x1740, 0x4883, 0x2ddd, 0x0, 0x1);
        gbc.writeMem(0x8b34, { 0x13 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x78a4, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8b34));
        // 13 0380
        gbc.setState(0xb650, 0x2f48, 0xaec0, 0x1fee, 0x70dd, 0xa119, 0x0, 0x0);
        gbc.writeMem(0xb650, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2f48, gbc.sp());
        EXPECT(0xb651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb650));
        // 13 0381
        gbc.setState(0xc10b, 0x932b, 0xcf0, 0xdfef, 0xb493, 0xae45, 0x0, 0x1);
        gbc.writeMem(0xc10b, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0xc10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc10b));
        // 13 0382
        gbc.setState(0x8279, 0x77b2, 0x69d0, 0x929c, 0x772f, 0x8169, 0x0, 0x1);
        gbc.writeMem(0x8279, { 0x13 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x77b2, gbc.sp());
        EXPECT(0x827a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8279));
        // 13 0383
        gbc.setState(0x685f, 0x6093, 0xa830, 0xa28f, 0xb892, 0x5e54, 0x1, 0x0);
        gbc.writeMem(0x685f, { 0x13 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0384
        gbc.setState(0xb590, 0x1fee, 0xabf0, 0x4a9, 0x5d41, 0xb3cd, 0x0, 0x0);
        gbc.writeMem(0xb590, { 0x13 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1fee, gbc.sp());
        EXPECT(0xb591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb590));
        // 13 0385
        gbc.setState(0xe8ee, 0xe883, 0x1370, 0x69af, 0x7288, 0x155f, 0x0, 0x0);
        gbc.writeMem(0xe8ee, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe883, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe8ee));
        // 13 0387
        gbc.setState(0x816b, 0xfb10, 0xb210, 0xbf6e, 0xaf84, 0x9243, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfb10, gbc.sp());
        EXPECT(0x816c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x816b));
        // 13 0388
        gbc.setState(0x815b, 0xf575, 0xcb90, 0x868f, 0x581f, 0x5aff, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0x13 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x815b));
        // 13 0389
        gbc.setState(0x2045, 0x2772, 0x9e10, 0xae89, 0xca89, 0x9bfa, 0x0, 0x0);
        gbc.writeMem(0x2045, { 0x13 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x2046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 038A
        gbc.setState(0xb629, 0x9066, 0xd220, 0x931a, 0xad47, 0xcc2, 0x1, 0x1);
        gbc.writeMem(0xb629, { 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0xb62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb629));
        // 13 038B
        gbc.setState(0x6665, 0xfe16, 0x36c0, 0x7ae1, 0xa2de, 0xa7f7, 0x0, 0x1);
        gbc.writeMem(0x6665, { 0x13 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfe16, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 038C
        gbc.setState(0xe3a7, 0x55e4, 0x7780, 0xe754, 0xb3d0, 0x9449, 0x1, 0x0);
        gbc.writeMem(0xe3a7, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0xe3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe3a7));
        // 13 038D
        gbc.setState(0xebb5, 0x10c3, 0xed00, 0x5a9f, 0xbe2, 0x59c1, 0x1, 0x0);
        gbc.writeMem(0xebb5, { 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0xebb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xebb5));
        // 13 038E
        gbc.setState(0xc0b6, 0x4e7b, 0xe4d0, 0x6, 0x5573, 0xf0f7, 0x0, 0x1);
        gbc.writeMem(0xc0b6, { 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0xc0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc0b6));
        // 13 038F
        gbc.setState(0xd1f1, 0x82d8, 0x48f0, 0xb22a, 0x793f, 0x95b6, 0x0, 0x1);
        gbc.writeMem(0xd1f1, { 0x13 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x82d8, gbc.sp());
        EXPECT(0xd1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd1f1));
        // 13 0390
        gbc.setState(0x7df0, 0x3295, 0x9910, 0x7153, 0x9ce, 0x20e0, 0x0, 0x0);
        gbc.writeMem(0x7df0, { 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0391
        gbc.setState(0x85c, 0xd866, 0x1fb0, 0x89b5, 0x5ec5, 0x4835, 0x0, 0x0);
        gbc.writeMem(0x85c, { 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd866, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0392
        gbc.setState(0xd19b, 0x99db, 0xa100, 0xa656, 0x172f, 0xb8b2, 0x1, 0x0);
        gbc.writeMem(0xd19b, { 0x13 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x99db, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd19b));
        // 13 0394
        gbc.setState(0xecff, 0xf3bd, 0x8070, 0x5834, 0x6d1e, 0x2956, 0x1, 0x0);
        gbc.writeMem(0xecff, { 0x13 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf3bd, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xecff));
        // 13 0395
        gbc.setState(0xccc0, 0x4f2f, 0xf090, 0x1e91, 0xe643, 0x32d6, 0x1, 0x0);
        gbc.writeMem(0xccc0, { 0x13 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xccc0));
        // 13 0396
        gbc.setState(0x9894, 0xb304, 0x57f0, 0x4591, 0xebb9, 0x8956, 0x1, 0x0);
        gbc.writeMem(0x9894, { 0x13 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb304, gbc.sp());
        EXPECT(0x9895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9894));
        // 13 0397
        gbc.setState(0xbe, 0xebb9, 0xe4f0, 0xdcc8, 0x510c, 0x6832, 0x0, 0x0);
        gbc.writeMem(0xbe, { 0x13 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xebb9, gbc.sp());
        EXPECT(0xbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 0398
        gbc.setState(0x36fd, 0x5f6b, 0x4400, 0xfdd7, 0x92a9, 0x7614, 0x0, 0x0);
        gbc.writeMem(0x36fd, { 0x13 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5f6b, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 0399
        gbc.setState(0x5852, 0x4ea0, 0x38e0, 0x4620, 0x5244, 0x8ae4, 0x1, 0x0);
        gbc.writeMem(0x5852, { 0x13 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4ea0, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 039B
        gbc.setState(0x156b, 0xd18f, 0xd620, 0xcdb8, 0xae80, 0x1905, 0x1, 0x0);
        gbc.writeMem(0x156b, { 0x13 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd18f, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 039C
        gbc.setState(0x1ac6, 0xdc5, 0xcc0, 0x3c20, 0xb8a6, 0x3a6c, 0x0, 0x0);
        gbc.writeMem(0x1ac6, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdc5, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 039D
        gbc.setState(0x225f, 0xd865, 0xdb30, 0x5263, 0x9cde, 0x7ef8, 0x0, 0x0);
        gbc.writeMem(0x225f, { 0x13 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0x2260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 039E
        gbc.setState(0xda5d, 0xd413, 0xb7f0, 0x59a1, 0x7e1, 0x68bf, 0x0, 0x0);
        gbc.writeMem(0xda5d, { 0x13 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0xda5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xda5d));
        // 13 039F
        gbc.setState(0x3a1c, 0xa58d, 0x2a0, 0xd75d, 0xd175, 0x372d, 0x1, 0x1);
        gbc.writeMem(0x3a1c, { 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa58d, gbc.sp());
        EXPECT(0x3a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03A1
        gbc.setState(0x6cea, 0xa214, 0x6650, 0xab23, 0x4501, 0x8d3b, 0x0, 0x1);
        gbc.writeMem(0x6cea, { 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0x6ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03A2
        gbc.setState(0xaaf3, 0x202a, 0xd790, 0xf14c, 0x28f3, 0x3966, 0x0, 0x1);
        gbc.writeMem(0xaaf3, { 0x13 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x202a, gbc.sp());
        EXPECT(0xaaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaaf3));
        // 13 03A3
        gbc.setState(0x4d7e, 0x98d3, 0xe160, 0xe5f6, 0xaaef, 0x6842, 0x0, 0x0);
        gbc.writeMem(0x4d7e, { 0x13 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x98d3, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03A4
        gbc.setState(0x6461, 0xa523, 0x2620, 0x6511, 0xb16d, 0x47ae, 0x0, 0x1);
        gbc.writeMem(0x6461, { 0x13 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03A5
        gbc.setState(0xd9a1, 0x9194, 0x1c00, 0xaa6, 0xb17, 0x8bff, 0x0, 0x0);
        gbc.writeMem(0xd9a1, { 0x13 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0xd9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd9a1));
        // 13 03A6
        gbc.setState(0x2dc5, 0x2c4c, 0xd510, 0xd721, 0x9719, 0x6064, 0x1, 0x0);
        gbc.writeMem(0x2dc5, { 0x13 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03A7
        gbc.setState(0xa384, 0xfa0b, 0xf3a0, 0x6ab0, 0xd16f, 0xff37, 0x0, 0x1);
        gbc.writeMem(0xa384, { 0x13 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa0b, gbc.sp());
        EXPECT(0xa385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa384));
        // 13 03A8
        gbc.setState(0xe36e, 0x5cf3, 0xc10, 0x46a8, 0x6bda, 0x913a, 0x0, 0x1);
        gbc.writeMem(0xe36e, { 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5cf3, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe36e));
        // 13 03A9
        gbc.setState(0x8f26, 0x3db9, 0x85f0, 0xc909, 0x3954, 0x45fd, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0x8f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8f26));
        // 13 03AA
        gbc.setState(0x53ed, 0x9fcc, 0x350, 0xe09f, 0x8d5f, 0xfefb, 0x0, 0x1);
        gbc.writeMem(0x53ed, { 0x13 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03AB
        gbc.setState(0x1d0f, 0x859d, 0xe310, 0x19ee, 0xfd81, 0xf2ca, 0x1, 0x1);
        gbc.writeMem(0x1d0f, { 0x13 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x859d, gbc.sp());
        EXPECT(0x1d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03AC
        gbc.setState(0x7296, 0xce21, 0x59e0, 0x709a, 0x6c1, 0x7f03, 0x1, 0x0);
        gbc.writeMem(0x7296, { 0x13 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x7297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03AD
        gbc.setState(0x195, 0xcf3f, 0x6650, 0xf4c8, 0x3d06, 0x5cab, 0x1, 0x0);
        gbc.writeMem(0x195, { 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03AE
        gbc.setState(0x89d6, 0x7cc0, 0xbb00, 0x7e52, 0x8e7, 0xe942, 0x1, 0x1);
        gbc.writeMem(0x89d6, { 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7cc0, gbc.sp());
        EXPECT(0x89d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x89d6));
        // 13 03AF
        gbc.setState(0xece3, 0xc503, 0x3430, 0x1d80, 0x6a32, 0x22f9, 0x0, 0x1);
        gbc.writeMem(0xece3, { 0x13 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0xece4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xece3));
        // 13 03B0
        gbc.setState(0xacf9, 0xea7f, 0x8c20, 0xa574, 0x28b5, 0x7dce, 0x0, 0x1);
        gbc.writeMem(0xacf9, { 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0xacfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xacf9));
        // 13 03B1
        gbc.setState(0xe959, 0x65d0, 0x17f0, 0x1a8a, 0x1f04, 0x2637, 0x0, 0x1);
        gbc.writeMem(0xe959, { 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x65d0, gbc.sp());
        EXPECT(0xe95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe959));
        // 13 03B2
        gbc.setState(0x7fd5, 0x60d1, 0xee50, 0xd22f, 0x1fce, 0x2c48, 0x0, 0x0);
        gbc.writeMem(0x7fd5, { 0x13 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x60d1, gbc.sp());
        EXPECT(0x7fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03B3
        gbc.setState(0xc35, 0xfa2, 0xacd0, 0xaae7, 0xabf3, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0xc35, { 0x13 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfa2, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03B4
        gbc.setState(0x38da, 0x30e0, 0xeb0, 0x8ded, 0xb619, 0x3c1a, 0x1, 0x1);
        gbc.writeMem(0x38da, { 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x30e0, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03B5
        gbc.setState(0x7137, 0xcb2, 0x940, 0x79b6, 0x3433, 0x93a3, 0x1, 0x1);
        gbc.writeMem(0x7137, { 0x13 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x7138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03B6
        gbc.setState(0x5458, 0x999e, 0xae50, 0xd14e, 0x8451, 0xd4e6, 0x0, 0x0);
        gbc.writeMem(0x5458, { 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x999e, gbc.sp());
        EXPECT(0x5459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03B7
        gbc.setState(0x2e78, 0x550c, 0x6280, 0x42e2, 0x47d4, 0x5f2a, 0x0, 0x0);
        gbc.writeMem(0x2e78, { 0x13 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x550c, gbc.sp());
        EXPECT(0x2e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03B8
        gbc.setState(0xd6fd, 0xfd72, 0x67f0, 0x9895, 0xdb99, 0x1e3c, 0x1, 0x0);
        gbc.writeMem(0xd6fd, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd6fd));
        // 13 03B9
        gbc.setState(0x97e8, 0x15d8, 0xcc40, 0xa195, 0x8038, 0x8da, 0x0, 0x0);
        gbc.writeMem(0x97e8, { 0x13 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x97e8));
        // 13 03BA
        gbc.setState(0xec4e, 0xe517, 0xb820, 0xd483, 0x5ae, 0xdad0, 0x1, 0x0);
        gbc.writeMem(0xec4e, { 0x13 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe517, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xec4e));
        // 13 03BB
        gbc.setState(0xa515, 0x88a4, 0x1880, 0xc99, 0x186d, 0x822e, 0x0, 0x1);
        gbc.writeMem(0xa515, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x88a4, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa515));
        // 13 03BC
        gbc.setState(0x43e8, 0x8f18, 0xe7a0, 0x9793, 0xb56f, 0xc741, 0x0, 0x1);
        gbc.writeMem(0x43e8, { 0x13 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8f18, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03BD
        gbc.setState(0xe022, 0x5562, 0xce90, 0xef2, 0xbfc8, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0xe022, { 0x13 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5562, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe022));
        // 13 03BE
        gbc.setState(0x6a4, 0x9344, 0x4bc0, 0xf39a, 0x59d2, 0x2883, 0x1, 0x1);
        gbc.writeMem(0x6a4, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9344, gbc.sp());
        EXPECT(0x6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03BF
        gbc.setState(0x8fee, 0x4da6, 0x67d0, 0xbf77, 0x3c7a, 0x36d0, 0x1, 0x0);
        gbc.writeMem(0x8fee, { 0x13 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0x8fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8fee));
        // 13 03C0
        gbc.setState(0x6342, 0x4fa5, 0x82f0, 0x8af, 0x2c2b, 0x6c5b, 0x0, 0x0);
        gbc.writeMem(0x6342, { 0x13 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4fa5, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C1
        gbc.setState(0x99c, 0x2d8a, 0x1890, 0x24cf, 0x9861, 0x7f9c, 0x0, 0x1);
        gbc.writeMem(0x99c, { 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C2
        gbc.setState(0xe0ad, 0xa73e, 0x8520, 0x37d7, 0xf53c, 0x5904, 0x1, 0x1);
        gbc.writeMem(0xe0ad, { 0x13 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa73e, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe0ad));
        // 13 03C3
        gbc.setState(0xebf6, 0xff61, 0x7280, 0x6dbd, 0xc1c7, 0xb9ba, 0x1, 0x1);
        gbc.writeMem(0xebf6, { 0x13 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xff61, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xebf6));
        // 13 03C4
        gbc.setState(0x7e60, 0x165e, 0x1150, 0xd2a, 0xfede, 0x9dce, 0x1, 0x1);
        gbc.writeMem(0x7e60, { 0x13 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x165e, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C5
        gbc.setState(0xe265, 0xd826, 0x7780, 0xb05, 0x41f1, 0x168, 0x0, 0x1);
        gbc.writeMem(0xe265, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd826, gbc.sp());
        EXPECT(0xe266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe265));
        // 13 03C6
        gbc.setState(0x2668, 0x586b, 0x3cf0, 0xada4, 0x5ac, 0x9da2, 0x0, 0x0);
        gbc.writeMem(0x2668, { 0x13 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x586b, gbc.sp());
        EXPECT(0x2669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C7
        gbc.setState(0x7092, 0x2602, 0x4f10, 0xdb7a, 0x9ab3, 0x81e7, 0x0, 0x0);
        gbc.writeMem(0x7092, { 0x13 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2602, gbc.sp());
        EXPECT(0x7093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C8
        gbc.setState(0x5fef, 0xb6ba, 0x8870, 0xcb2f, 0xa2d8, 0xaea5, 0x0, 0x0);
        gbc.writeMem(0x5fef, { 0x13 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03C9
        gbc.setState(0x357e, 0x1313, 0xa370, 0xc492, 0x8001, 0x863a, 0x1, 0x0);
        gbc.writeMem(0x357e, { 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1313, gbc.sp());
        EXPECT(0x357f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03CA
        gbc.setState(0xa886, 0xb58b, 0xed10, 0x2545, 0xf78, 0xfbab, 0x0, 0x1);
        gbc.writeMem(0xa886, { 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb58b, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa886));
        // 13 03CB
        gbc.setState(0x9732, 0xeda9, 0xf5a0, 0x9864, 0x9e3d, 0xf75e, 0x1, 0x1);
        gbc.writeMem(0x9732, { 0x13 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x9733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9732));
        // 13 03CC
        gbc.setState(0x2550, 0xc7bc, 0x7300, 0x1510, 0xc432, 0x5dae, 0x1, 0x0);
        gbc.writeMem(0x2550, { 0x13 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0x2551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03CD
        gbc.setState(0x3c82, 0x6a04, 0x86a0, 0x58e7, 0x30cf, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0x3c82, { 0x13 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6a04, gbc.sp());
        EXPECT(0x3c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03CE
        gbc.setState(0x8b5e, 0x7d23, 0xd100, 0x9ee5, 0x9ab0, 0x14dd, 0x1, 0x0);
        gbc.writeMem(0x8b5e, { 0x13 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7d23, gbc.sp());
        EXPECT(0x8b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8b5e));
        // 13 03CF
        gbc.setState(0xd3e3, 0x1e70, 0x8df0, 0x233c, 0x390c, 0x5602, 0x1, 0x0);
        gbc.writeMem(0xd3e3, { 0x13 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd3e3));
        // 13 03D0
        gbc.setState(0x9d03, 0xb975, 0x1fb0, 0x5039, 0xebb5, 0x699a, 0x0, 0x1);
        gbc.writeMem(0x9d03, { 0x13 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb975, gbc.sp());
        EXPECT(0x9d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9d03));
        // 13 03D1
        gbc.setState(0x16e4, 0x56a7, 0x2190, 0x6b64, 0x151e, 0xffef, 0x1, 0x0);
        gbc.writeMem(0x16e4, { 0x13 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x16e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03D2
        gbc.setState(0x6de5, 0x562, 0x66c0, 0x5120, 0x5b14, 0x38a2, 0x1, 0x0);
        gbc.writeMem(0x6de5, { 0x13 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x562, gbc.sp());
        EXPECT(0x6de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03D3
        gbc.setState(0x1906, 0x3177, 0x16e0, 0x5d2e, 0xc4f6, 0x6719, 0x0, 0x0);
        gbc.writeMem(0x1906, { 0x13 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3177, gbc.sp());
        EXPECT(0x1907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03D4
        gbc.setState(0x618c, 0xb6e3, 0x3a60, 0x91fe, 0x2d6b, 0x344, 0x1, 0x1);
        gbc.writeMem(0x618c, { 0x13 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb6e3, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03D6
        gbc.setState(0xe898, 0x384e, 0x33a0, 0x2b44, 0x7f9d, 0x5503, 0x1, 0x1);
        gbc.writeMem(0xe898, { 0x13 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x384e, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xe898));
        // 13 03D7
        gbc.setState(0x86be, 0x7275, 0xc3c0, 0x1632, 0xb54d, 0xf12a, 0x0, 0x1);
        gbc.writeMem(0x86be, { 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7275, gbc.sp());
        EXPECT(0x86bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x86be));
        // 13 03D8
        gbc.setState(0x728d, 0xd5ae, 0x3e00, 0xa7a5, 0xcdb8, 0xb4ad, 0x0, 0x0);
        gbc.writeMem(0x728d, { 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03D9
        gbc.setState(0xcd74, 0xf880, 0x1d50, 0x6a10, 0x642d, 0x6515, 0x1, 0x1);
        gbc.writeMem(0xcd74, { 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd74));
        // 13 03DA
        gbc.setState(0x13d9, 0xa11b, 0x7760, 0x69e4, 0x4da8, 0x6952, 0x0, 0x0);
        gbc.writeMem(0x13d9, { 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03DB
        gbc.setState(0xa8ec, 0xe47, 0x2860, 0x9f60, 0xd84e, 0xccc6, 0x1, 0x0);
        gbc.writeMem(0xa8ec, { 0x13 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0xa8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa8ec));
        // 13 03DC
        gbc.setState(0x89c9, 0x43f4, 0x7160, 0x7e0d, 0xc9ea, 0x27e5, 0x1, 0x1);
        gbc.writeMem(0x89c9, { 0x13 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x43f4, gbc.sp());
        EXPECT(0x89ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x89c9));
        // 13 03DD
        gbc.setState(0xb245, 0xb1db, 0x54c0, 0xb990, 0x4efa, 0x2e18, 0x1, 0x1);
        gbc.writeMem(0xb245, { 0x13 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb245));
        // 13 03DE
        gbc.setState(0x5cf9, 0x7806, 0x1360, 0x3ebf, 0xfe89, 0xccd3, 0x0, 0x1);
        gbc.writeMem(0x5cf9, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0x5cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03E0
        gbc.setState(0xa4de, 0x4d59, 0x4bc0, 0xd650, 0x9b29, 0xc307, 0x0, 0x1);
        gbc.writeMem(0xa4de, { 0x13 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0xa4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa4de));
        // 13 03E1
        gbc.setState(0xb40b, 0xe6ca, 0x8eb0, 0x139e, 0x2f6c, 0x4134, 0x0, 0x0);
        gbc.writeMem(0xb40b, { 0x13 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe6ca, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb40b));
        // 13 03E2
        gbc.setState(0xd6a0, 0xd336, 0x3980, 0x89b, 0xb125, 0xcf92, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0x13 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd336, gbc.sp());
        EXPECT(0xd6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd6a0));
        // 13 03E3
        gbc.setState(0x399, 0x1eb8, 0xad50, 0xe99b, 0xb1f8, 0xf2e6, 0x0, 0x1);
        gbc.writeMem(0x399, { 0x13 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03E4
        gbc.setState(0x61d3, 0xf27d, 0x75e0, 0xb9e5, 0x81a4, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0x61d3, { 0x13 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0x61d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 13 03E5
        gbc.setState(0x40a5, 0xb04b, 0xaaf0, 0x70a0, 0xda3f, 0x699c, 0x0, 0x0);
        gbc.writeMem(0x40a5, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb04b, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03E6
        gbc.setState(0x65e, 0xbc1d, 0x4d50, 0x4085, 0xffea, 0xfa5d, 0x0, 0x1);
        gbc.writeMem(0x65e, { 0x13 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc1d, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 13 03E7
        gbc.setState(0xd098, 0xe98f, 0x4630, 0x3ef6, 0x1a2f, 0x3784, 0x0, 0x1);
        gbc.writeMem(0xd098, { 0x13 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe98f, gbc.sp());
        EXPECT(0xd099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd098));
    }
