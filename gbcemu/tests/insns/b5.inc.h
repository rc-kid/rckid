    TEST(gbcemu, opcode_b5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B5 0000
        gbc.setState(0x3746, 0xc62e, 0xd5c0, 0x1dc6, 0xf90, 0x81b1, 0x1, 0x0);
        gbc.writeMem(0x3746, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0001
        gbc.setState(0x16bd, 0xd6b4, 0x2ff0, 0x7915, 0xc2c4, 0x73c4, 0x0, 0x0);
        gbc.writeMem(0x16bd, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0002
        gbc.setState(0xb24d, 0xbf56, 0x8310, 0x9651, 0xfd45, 0xbadf, 0x0, 0x0);
        gbc.writeMem(0xb24d, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbf56, gbc.sp());
        EXPECT(0xb24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb24d));
        // B5 0003
        gbc.setState(0x453b, 0x6b78, 0xfe00, 0x4013, 0x1ab, 0xaa9, 0x0, 0x1);
        gbc.writeMem(0x453b, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6b78, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0004
        gbc.setState(0xda8b, 0xc0e8, 0x3e60, 0xf495, 0x4dec, 0x1c5d, 0x1, 0x1);
        gbc.writeMem(0xda8b, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0xda8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xda8b));
        // B5 0005
        gbc.setState(0x8198, 0x5566, 0xd0b0, 0xca23, 0x7bab, 0xb3f6, 0x0, 0x0);
        gbc.writeMem(0x8198, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8198));
        // B5 0006
        gbc.setState(0x5cb, 0xe8d4, 0xdf50, 0xfdc8, 0xdc95, 0xd837, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe8d4, gbc.sp());
        EXPECT(0x5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0007
        gbc.setState(0xe008, 0xb80, 0x8e40, 0x6c15, 0xfcf5, 0x79a5, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb80, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe008));
        // B5 0008
        gbc.setState(0xc275, 0x396, 0x80d0, 0xa267, 0x2cbd, 0x80a7, 0x0, 0x1);
        gbc.writeMem(0xc275, { 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x396, gbc.sp());
        EXPECT(0xc276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc275));
        // B5 0009
        gbc.setState(0x1ef, 0x878e, 0xcc50, 0xbe30, 0x7b2b, 0x2348, 0x1, 0x0);
        gbc.writeMem(0x1ef, { 0xb5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x878e, gbc.sp());
        EXPECT(0x1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 000A
        gbc.setState(0x165e, 0xfd78, 0x3120, 0x2267, 0x3fac, 0x13b9, 0x0, 0x1);
        gbc.writeMem(0x165e, { 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfd78, gbc.sp());
        EXPECT(0x165f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 000B
        gbc.setState(0x8006, 0xfc6b, 0xeda0, 0xf6ac, 0xb43b, 0xc7f3, 0x0, 0x1);
        gbc.writeMem(0x8006, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8006));
        // B5 000D
        gbc.setState(0x476e, 0xad53, 0x9330, 0x177, 0x5362, 0xb926, 0x1, 0x0);
        gbc.writeMem(0x476e, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xad53, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 000E
        gbc.setState(0xba80, 0x2f92, 0x1610, 0x795b, 0x822e, 0xa7b2, 0x1, 0x0);
        gbc.writeMem(0xba80, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2f92, gbc.sp());
        EXPECT(0xba81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xba80));
        // B5 000F
        gbc.setState(0xa624, 0x9b64, 0x13d0, 0x3d6b, 0xe7e8, 0xa228, 0x1, 0x1);
        gbc.writeMem(0xa624, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9b64, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa624));
        // B5 0010
        gbc.setState(0xcdbf, 0x9363, 0x3b90, 0xebe8, 0x51a3, 0x4421, 0x1, 0x1);
        gbc.writeMem(0xcdbf, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9363, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcdbf));
        // B5 0011
        gbc.setState(0xe2b1, 0xc6a3, 0x7330, 0x52e6, 0x2a7f, 0x7eaf, 0x1, 0x1);
        gbc.writeMem(0xe2b1, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe2b1));
        // B5 0012
        gbc.setState(0x213a, 0xf81, 0x2d50, 0xc932, 0x2bac, 0x561b, 0x0, 0x1);
        gbc.writeMem(0x213a, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0013
        gbc.setState(0x3426, 0x320b, 0x6de0, 0xff38, 0x475a, 0x6266, 0x0, 0x1);
        gbc.writeMem(0x3426, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x320b, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0014
        gbc.setState(0x5575, 0x32f4, 0xefd0, 0xd30c, 0x3327, 0xd23d, 0x0, 0x0);
        gbc.writeMem(0x5575, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x32f4, gbc.sp());
        EXPECT(0x5576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0015
        gbc.setState(0x7649, 0x2a30, 0x9450, 0x5954, 0x5397, 0xdbd, 0x0, 0x0);
        gbc.writeMem(0x7649, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0x764a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0016
        gbc.setState(0x172, 0xa4ec, 0x6830, 0xc9bf, 0x2ef0, 0x2e4a, 0x0, 0x1);
        gbc.writeMem(0x172, { 0xb5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0017
        gbc.setState(0xca1f, 0x190b, 0x9c80, 0x75cb, 0xc73, 0x4aef, 0x1, 0x0);
        gbc.writeMem(0xca1f, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xca1f));
        // B5 0018
        gbc.setState(0x8797, 0x1447, 0x98a0, 0x21d4, 0x205, 0xabff, 0x0, 0x0);
        gbc.writeMem(0x8797, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0x8798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8797));
        // B5 0019
        gbc.setState(0x54a5, 0xd4c5, 0x3650, 0xdc1e, 0xf5f0, 0xb807, 0x0, 0x1);
        gbc.writeMem(0x54a5, { 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0x54a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 001A
        gbc.setState(0x156e, 0xf70e, 0xe180, 0xa40b, 0x526d, 0x14d7, 0x0, 0x0);
        gbc.writeMem(0x156e, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0x156f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 001B
        gbc.setState(0x676c, 0x38d1, 0xae70, 0x4985, 0x402d, 0xe9c8, 0x0, 0x0);
        gbc.writeMem(0x676c, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x38d1, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 001C
        gbc.setState(0x864, 0x8969, 0x1320, 0x1af7, 0x31d8, 0xc627, 0x0, 0x0);
        gbc.writeMem(0x864, { 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8969, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 001D
        gbc.setState(0x20ea, 0x176c, 0xc880, 0x953d, 0xe33b, 0xc98b, 0x1, 0x1);
        gbc.writeMem(0x20ea, { 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x176c, gbc.sp());
        EXPECT(0x20eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 001E
        gbc.setState(0xd550, 0xbd35, 0x38b0, 0xd5a2, 0x9bb8, 0xfe86, 0x1, 0x1);
        gbc.writeMem(0xd550, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd550));
        // B5 001F
        gbc.setState(0x4d81, 0x979f, 0x8360, 0xa41a, 0x74a6, 0x9eb5, 0x0, 0x1);
        gbc.writeMem(0x4d81, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x979f, gbc.sp());
        EXPECT(0x4d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0020
        gbc.setState(0xa827, 0x68d3, 0xd0e0, 0xe51b, 0x327f, 0x858d, 0x0, 0x0);
        gbc.writeMem(0xa827, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x68d3, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa827));
        // B5 0021
        gbc.setState(0x2d32, 0x18bc, 0x7ec0, 0x17a5, 0xa00c, 0xf3de, 0x0, 0x0);
        gbc.writeMem(0x2d32, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x18bc, gbc.sp());
        EXPECT(0x2d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0022
        gbc.setState(0xa24e, 0xe0e1, 0x8290, 0x8d42, 0xe0b3, 0xbbab, 0x1, 0x1);
        gbc.writeMem(0xa24e, { 0xb5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe0e1, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa24e));
        // B5 0023
        gbc.setState(0x2f42, 0xb53b, 0x8ab0, 0x9def, 0xbe88, 0x94d6, 0x0, 0x1);
        gbc.writeMem(0x2f42, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb53b, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0024
        gbc.setState(0x64f7, 0x237d, 0xe310, 0xf59e, 0xaf22, 0xff1f, 0x1, 0x1);
        gbc.writeMem(0x64f7, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x237d, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0025
        gbc.setState(0xc9f, 0x3dbe, 0xef60, 0xae9a, 0xf7b8, 0xa48e, 0x1, 0x0);
        gbc.writeMem(0xc9f, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0027
        gbc.setState(0x3747, 0x3664, 0x1cd0, 0xde46, 0xdbcf, 0x96c7, 0x0, 0x1);
        gbc.writeMem(0x3747, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3664, gbc.sp());
        EXPECT(0x3748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0028
        gbc.setState(0x1be5, 0xbd80, 0x6df0, 0x2e33, 0x7380, 0x7109, 0x0, 0x1);
        gbc.writeMem(0x1be5, { 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd80, gbc.sp());
        EXPECT(0x1be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0029
        gbc.setState(0x42d0, 0x70e, 0x86d0, 0x4327, 0xf12d, 0xfd66, 0x1, 0x1);
        gbc.writeMem(0x42d0, { 0xb5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x70e, gbc.sp());
        EXPECT(0x42d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 002A
        gbc.setState(0x6701, 0x72fc, 0x48d0, 0xf8ff, 0x79a, 0x9195, 0x1, 0x0);
        gbc.writeMem(0x6701, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x6702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 002B
        gbc.setState(0x32b8, 0x62fd, 0xe600, 0x222, 0x9a2c, 0x6141, 0x0, 0x1);
        gbc.writeMem(0x32b8, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x62fd, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 002C
        gbc.setState(0x9409, 0xe6ec, 0x3780, 0x28ec, 0x2853, 0x9971, 0x0, 0x0);
        gbc.writeMem(0x9409, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe6ec, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9409));
        // B5 002D
        gbc.setState(0x3ede, 0xfb89, 0xaea0, 0x5ec7, 0x9c60, 0xda6c, 0x1, 0x0);
        gbc.writeMem(0x3ede, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 002E
        gbc.setState(0x6f9b, 0x5304, 0xba0, 0xe1c9, 0xddbe, 0xa004, 0x0, 0x1);
        gbc.writeMem(0x6f9b, { 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0x6f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 002F
        gbc.setState(0x9cd4, 0xd582, 0xaf50, 0x45e8, 0x9287, 0xf784, 0x1, 0x0);
        gbc.writeMem(0x9cd4, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0x9cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9cd4));
        // B5 0030
        gbc.setState(0x1707, 0xa271, 0x5ad0, 0x3226, 0x7db2, 0xd0ab, 0x1, 0x0);
        gbc.writeMem(0x1707, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa271, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0031
        gbc.setState(0x6f37, 0xe0cc, 0x4470, 0x73cd, 0xf601, 0xaf38, 0x1, 0x1);
        gbc.writeMem(0x6f37, { 0xb5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0x6f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0032
        gbc.setState(0xe7d1, 0x63, 0xbab0, 0x5998, 0xfa0a, 0x234, 0x1, 0x0);
        gbc.writeMem(0xe7d1, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x63, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe7d1));
        // B5 0033
        gbc.setState(0x5a17, 0x1e33, 0x2360, 0x6162, 0xcd7a, 0xb51f, 0x0, 0x1);
        gbc.writeMem(0x5a17, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1e33, gbc.sp());
        EXPECT(0x5a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0036
        gbc.setState(0x75c8, 0xab3a, 0x1070, 0x74ff, 0x10a9, 0xce94, 0x1, 0x1);
        gbc.writeMem(0x75c8, { 0xb5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xab3a, gbc.sp());
        EXPECT(0x75c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0037
        gbc.setState(0x412, 0xca08, 0x90, 0x2f39, 0x8520, 0xacf8, 0x1, 0x0);
        gbc.writeMem(0x412, { 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca08, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0038
        gbc.setState(0xdcc8, 0x4e19, 0xc900, 0xe499, 0x49d8, 0xddf0, 0x1, 0x0);
        gbc.writeMem(0xdcc8, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0xdcc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdcc8));
        // B5 0039
        gbc.setState(0x1e92, 0x772, 0x5700, 0xb3d3, 0xe9d, 0x8992, 0x1, 0x1);
        gbc.writeMem(0x1e92, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x772, gbc.sp());
        EXPECT(0x1e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 003A
        gbc.setState(0x9de1, 0x2a2c, 0x52a0, 0x4030, 0xa44d, 0xd08d, 0x1, 0x0);
        gbc.writeMem(0x9de1, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2a2c, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9de1));
        // B5 003B
        gbc.setState(0x643f, 0x6648, 0x5ca0, 0x6551, 0xa6b7, 0xeb2e, 0x1, 0x1);
        gbc.writeMem(0x643f, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6648, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 003C
        gbc.setState(0xa5de, 0x7240, 0xc500, 0xf09d, 0xe7ef, 0xcbd9, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7240, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5de));
        // B5 003D
        gbc.setState(0xc53, 0x1eff, 0x96f0, 0x1f78, 0x6f80, 0x3a32, 0x1, 0x1);
        gbc.writeMem(0xc53, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 003E
        gbc.setState(0x36e8, 0x278d, 0x2620, 0x4559, 0x8f37, 0xe595, 0x1, 0x1);
        gbc.writeMem(0x36e8, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x36e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 003F
        gbc.setState(0xa31d, 0x68c8, 0xb8e0, 0x775a, 0x9f6d, 0x57dc, 0x1, 0x1);
        gbc.writeMem(0xa31d, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa31d));
        // B5 0040
        gbc.setState(0xa46c, 0x1584, 0xd690, 0x7ee4, 0x6867, 0xa349, 0x1, 0x1);
        gbc.writeMem(0xa46c, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa46c));
        // B5 0041
        gbc.setState(0xbf84, 0x536c, 0x530, 0x8007, 0x6bfc, 0xcac4, 0x0, 0x0);
        gbc.writeMem(0xbf84, { 0xb5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbf84));
        // B5 0042
        gbc.setState(0xa137, 0x62af, 0x3b50, 0x93ae, 0xa223, 0x7832, 0x0, 0x1);
        gbc.writeMem(0xa137, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x62af, gbc.sp());
        EXPECT(0xa138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa137));
        // B5 0043
        gbc.setState(0x6658, 0x4080, 0xc410, 0xc467, 0x96f8, 0x9eff, 0x0, 0x1);
        gbc.writeMem(0x6658, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4080, gbc.sp());
        EXPECT(0x6659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0044
        gbc.setState(0x197a, 0xd735, 0x3540, 0xf1c0, 0x767e, 0x7d8b, 0x1, 0x0);
        gbc.writeMem(0x197a, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd735, gbc.sp());
        EXPECT(0x197b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0045
        gbc.setState(0xb202, 0x330b, 0xa220, 0x8d5, 0x5abb, 0x6911, 0x0, 0x0);
        gbc.writeMem(0xb202, { 0xb5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x330b, gbc.sp());
        EXPECT(0xb203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb202));
        // B5 0046
        gbc.setState(0x6c77, 0xd508, 0x300, 0x5e3f, 0x246c, 0x228f, 0x0, 0x0);
        gbc.writeMem(0x6c77, { 0xb5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd508, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0047
        gbc.setState(0x461a, 0xd0a1, 0x1870, 0x5b54, 0xc52d, 0x1660, 0x1, 0x0);
        gbc.writeMem(0x461a, { 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd0a1, gbc.sp());
        EXPECT(0x461b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0048
        gbc.setState(0xbde5, 0x25df, 0xb050, 0xa3c2, 0x4657, 0x539d, 0x1, 0x0);
        gbc.writeMem(0xbde5, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25df, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbde5));
        // B5 0049
        gbc.setState(0x59fa, 0x833d, 0x450, 0xcc4, 0x9b43, 0x8f76, 0x0, 0x1);
        gbc.writeMem(0x59fa, { 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x833d, gbc.sp());
        EXPECT(0x59fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 004A
        gbc.setState(0xef8d, 0xe3f3, 0xa0f0, 0x573b, 0x8188, 0xe6dd, 0x1, 0x1);
        gbc.writeMem(0xef8d, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe3f3, gbc.sp());
        EXPECT(0xef8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xef8d));
        // B5 004B
        gbc.setState(0x263b, 0xfbac, 0x8f40, 0x8838, 0x52e5, 0xc54, 0x0, 0x1);
        gbc.writeMem(0x263b, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0x263c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 004C
        gbc.setState(0x440f, 0x5ab3, 0x1360, 0x973e, 0xf1d6, 0xf0e9, 0x1, 0x0);
        gbc.writeMem(0x440f, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 004D
        gbc.setState(0x498f, 0x25f5, 0x7380, 0xc11f, 0x63a2, 0xc20d, 0x0, 0x0);
        gbc.writeMem(0x498f, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 004E
        gbc.setState(0x907c, 0x3b34, 0x62c0, 0x6e74, 0x6e01, 0xc6ed, 0x0, 0x0);
        gbc.writeMem(0x907c, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x907c));
        // B5 004F
        gbc.setState(0x5cbf, 0xcc6a, 0x62b0, 0x995f, 0xbaac, 0x8aed, 0x0, 0x0);
        gbc.writeMem(0x5cbf, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0050
        gbc.setState(0x37c8, 0xe663, 0xbd60, 0xebb7, 0xf70b, 0x704b, 0x1, 0x1);
        gbc.writeMem(0x37c8, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe663, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0051
        gbc.setState(0x4038, 0x1af8, 0x9a0, 0x8e5b, 0xe1c9, 0xd73, 0x1, 0x0);
        gbc.writeMem(0x4038, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0052
        gbc.setState(0xb3e3, 0x9416, 0xa860, 0x26e0, 0xf769, 0xe4fd, 0x1, 0x0);
        gbc.writeMem(0xb3e3, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb3e3));
        // B5 0053
        gbc.setState(0xd1b7, 0xf45e, 0xd4f0, 0x8bcc, 0xbeb1, 0x2a8, 0x1, 0x0);
        gbc.writeMem(0xd1b7, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf45e, gbc.sp());
        EXPECT(0xd1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd1b7));
        // B5 0055
        gbc.setState(0x180c, 0x6d91, 0xbc30, 0x9690, 0xb0df, 0x1b35, 0x0, 0x1);
        gbc.writeMem(0x180c, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6d91, gbc.sp());
        EXPECT(0x180d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0056
        gbc.setState(0xeef, 0x21bf, 0x45b0, 0x9021, 0x6935, 0x9349, 0x1, 0x1);
        gbc.writeMem(0xeef, { 0xb5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x21bf, gbc.sp());
        EXPECT(0xef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0057
        gbc.setState(0xcc54, 0xaa92, 0xbb50, 0xb23e, 0x4775, 0x2370, 0x1, 0x0);
        gbc.writeMem(0xcc54, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0xcc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcc54));
        // B5 0058
        gbc.setState(0xe5b8, 0xc24d, 0xa9a0, 0xe26e, 0xc468, 0xf36b, 0x0, 0x1);
        gbc.writeMem(0xe5b8, { 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc24d, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe5b8));
        // B5 0059
        gbc.setState(0x12cb, 0x30d5, 0xf2c0, 0xfad1, 0xcdb9, 0x2346, 0x1, 0x1);
        gbc.writeMem(0x12cb, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x30d5, gbc.sp());
        EXPECT(0x12cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 005A
        gbc.setState(0xb583, 0xa766, 0x4d20, 0x6b11, 0x9dc0, 0x242, 0x0, 0x0);
        gbc.writeMem(0xb583, { 0xb5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0xb584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb583));
        // B5 005C
        gbc.setState(0xef0c, 0x8b16, 0x40f0, 0xce6f, 0x7b52, 0xbefb, 0x0, 0x0);
        gbc.writeMem(0xef0c, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0xef0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xef0c));
        // B5 005D
        gbc.setState(0xde21, 0x52b8, 0x8ab0, 0x8dc5, 0xed54, 0x32a5, 0x0, 0x0);
        gbc.writeMem(0xde21, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xde21));
        // B5 005E
        gbc.setState(0xa1d4, 0xea14, 0xe7e0, 0x55d8, 0xe461, 0x5041, 0x1, 0x0);
        gbc.writeMem(0xa1d4, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xea14, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa1d4));
        // B5 005F
        gbc.setState(0x532c, 0x960b, 0xec30, 0xf124, 0x8da2, 0xdb32, 0x1, 0x1);
        gbc.writeMem(0x532c, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x960b, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0060
        gbc.setState(0xa5e0, 0x91d1, 0x4eb0, 0x893, 0x8c0f, 0x23ef, 0x0, 0x1);
        gbc.writeMem(0xa5e0, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91d1, gbc.sp());
        EXPECT(0xa5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5e0));
        // B5 0061
        gbc.setState(0x2c9f, 0xf7c6, 0x7fe0, 0x5889, 0xfd39, 0xfc2d, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf7c6, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0062
        gbc.setState(0xbab8, 0xb420, 0xeff0, 0x5589, 0x8698, 0x664e, 0x0, 0x1);
        gbc.writeMem(0xbab8, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb420, gbc.sp());
        EXPECT(0xbab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbab8));
        // B5 0063
        gbc.setState(0x4b56, 0xc5e3, 0xfb70, 0x9c25, 0x6cde, 0xbf90, 0x1, 0x0);
        gbc.writeMem(0x4b56, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc5e3, gbc.sp());
        EXPECT(0x4b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0065
        gbc.setState(0xb3c6, 0x5cd8, 0x30, 0x7a6a, 0x107d, 0x3537, 0x0, 0x1);
        gbc.writeMem(0xb3c6, { 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5cd8, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb3c6));
        // B5 0066
        gbc.setState(0x8621, 0x133b, 0xc240, 0xe276, 0xb6b3, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0x8621, { 0xb5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0x8622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8621));
        // B5 0067
        gbc.setState(0xaafd, 0x21b0, 0xbf00, 0x72d4, 0xfe66, 0x6071, 0x1, 0x1);
        gbc.writeMem(0xaafd, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x21b0, gbc.sp());
        EXPECT(0xaafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaafd));
        // B5 0069
        gbc.setState(0x4733, 0xb4c3, 0x7cd0, 0xef19, 0x986f, 0x77, 0x0, 0x0);
        gbc.writeMem(0x4733, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb4c3, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 006A
        gbc.setState(0x3a76, 0xb422, 0xdbd0, 0x999d, 0x1c1c, 0x7b7c, 0x0, 0x0);
        gbc.writeMem(0x3a76, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0x3a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 006B
        gbc.setState(0xa28e, 0x1aae, 0xb390, 0xa145, 0x6f0d, 0x1365, 0x1, 0x0);
        gbc.writeMem(0xa28e, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1aae, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa28e));
        // B5 006C
        gbc.setState(0x3e8f, 0xf34b, 0x3e90, 0x1131, 0x5c9e, 0xfe2d, 0x1, 0x1);
        gbc.writeMem(0x3e8f, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 006D
        gbc.setState(0xeb7, 0xae80, 0xb960, 0x317f, 0xdb00, 0xe8ca, 0x0, 0x0);
        gbc.writeMem(0xeb7, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xae80, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 006E
        gbc.setState(0x803e, 0x40dc, 0x7e20, 0x9d2, 0x56b, 0xfb6a, 0x1, 0x0);
        gbc.writeMem(0x803e, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x803e));
        // B5 0070
        gbc.setState(0x20a4, 0x9624, 0x5c00, 0xb2d3, 0x3a66, 0xf154, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9624, gbc.sp());
        EXPECT(0x20a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0071
        gbc.setState(0xaecb, 0xfdc3, 0x6370, 0xa7bd, 0x5912, 0x20d3, 0x1, 0x0);
        gbc.writeMem(0xaecb, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaecb));
        // B5 0072
        gbc.setState(0x6eff, 0x7779, 0x34f0, 0xcf7e, 0xfd5a, 0x1db1, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0073
        gbc.setState(0x9a93, 0x756f, 0x8c40, 0xed24, 0x70e, 0x69c2, 0x1, 0x1);
        gbc.writeMem(0x9a93, { 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x756f, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9a93));
        // B5 0074
        gbc.setState(0xd81a, 0xe20a, 0xde90, 0x53d5, 0x5f25, 0x2b78, 0x1, 0x0);
        gbc.writeMem(0xd81a, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe20a, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd81a));
        // B5 0075
        gbc.setState(0xb536, 0xfcbb, 0xe750, 0x609e, 0xafa1, 0x7c75, 0x0, 0x1);
        gbc.writeMem(0xb536, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfcbb, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb536));
        // B5 0076
        gbc.setState(0x1f12, 0x2973, 0x8810, 0x639f, 0x8115, 0xd78d, 0x0, 0x1);
        gbc.writeMem(0x1f12, { 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2973, gbc.sp());
        EXPECT(0x1f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0077
        gbc.setState(0xd995, 0x586, 0x14a0, 0xa17d, 0xe4d3, 0x6118, 0x0, 0x0);
        gbc.writeMem(0xd995, { 0xb5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x586, gbc.sp());
        EXPECT(0xd996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd995));
        // B5 0078
        gbc.setState(0xda99, 0xf09, 0xc8d0, 0xe692, 0x56c5, 0xad3c, 0x1, 0x1);
        gbc.writeMem(0xda99, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xda99));
        // B5 007A
        gbc.setState(0xd81f, 0x5ba8, 0x1c30, 0xb6a3, 0x94ec, 0xe0d3, 0x0, 0x1);
        gbc.writeMem(0xd81f, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd81f));
        // B5 007B
        gbc.setState(0x3134, 0xc64e, 0xd030, 0x2d10, 0x5bd3, 0xf201, 0x0, 0x1);
        gbc.writeMem(0x3134, { 0xb5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc64e, gbc.sp());
        EXPECT(0x3135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 007C
        gbc.setState(0x807f, 0x30cf, 0xe7d0, 0x8a15, 0x3088, 0xdc20, 0x1, 0x0);
        gbc.writeMem(0x807f, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x30cf, gbc.sp());
        EXPECT(0x8080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x807f));
        // B5 007D
        gbc.setState(0x3733, 0x407c, 0x4da0, 0xc293, 0x76c5, 0xa1af, 0x1, 0x0);
        gbc.writeMem(0x3733, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 007E
        gbc.setState(0x68f9, 0xe18c, 0xc350, 0x34c9, 0xda86, 0x5f7c, 0x0, 0x0);
        gbc.writeMem(0x68f9, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 007F
        gbc.setState(0x4e75, 0xcdf9, 0x4720, 0xc04d, 0x6dcb, 0xeba7, 0x1, 0x1);
        gbc.writeMem(0x4e75, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcdf9, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0080
        gbc.setState(0x969b, 0x5109, 0x41d0, 0x50f, 0x83f0, 0x507a, 0x1, 0x1);
        gbc.writeMem(0x969b, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0x969c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x969b));
        // B5 0081
        gbc.setState(0x4671, 0x2764, 0x61c0, 0x5b8c, 0xd4a8, 0xa53, 0x0, 0x0);
        gbc.writeMem(0x4671, { 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2764, gbc.sp());
        EXPECT(0x4672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0083
        gbc.setState(0xb9f1, 0x11a9, 0xff20, 0xc453, 0x3ec0, 0x111f, 0x1, 0x1);
        gbc.writeMem(0xb9f1, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb9f1));
        // B5 0084
        gbc.setState(0xe88d, 0xaca4, 0x8ee0, 0x95d4, 0xc46a, 0x71b5, 0x0, 0x1);
        gbc.writeMem(0xe88d, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaca4, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe88d));
        // B5 0085
        gbc.setState(0x7ba2, 0xe06d, 0xa200, 0x5faf, 0xe178, 0xe6a7, 0x0, 0x1);
        gbc.writeMem(0x7ba2, { 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0086
        gbc.setState(0xe325, 0x371f, 0xebe0, 0xad47, 0x1a5b, 0xfbea, 0x0, 0x1);
        gbc.writeMem(0xe325, { 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x371f, gbc.sp());
        EXPECT(0xe326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe325));
        // B5 0087
        gbc.setState(0x6a21, 0x2a20, 0xf150, 0x1ea, 0x688c, 0x417, 0x0, 0x1);
        gbc.writeMem(0x6a21, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0x6a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0088
        gbc.setState(0x4538, 0xad6b, 0xd970, 0x29ee, 0x26d, 0xd986, 0x1, 0x1);
        gbc.writeMem(0x4538, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xad6b, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0089
        gbc.setState(0x6f99, 0x84b2, 0x6520, 0x3592, 0x7fdc, 0x7bf4, 0x0, 0x1);
        gbc.writeMem(0x6f99, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0x6f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 008A
        gbc.setState(0x1ed1, 0x45de, 0xd050, 0x1e4e, 0xd9bf, 0x2a64, 0x0, 0x0);
        gbc.writeMem(0x1ed1, { 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x1ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 008B
        gbc.setState(0x1664, 0x2b3e, 0x2d90, 0x65ce, 0x1b2d, 0xf809, 0x0, 0x0);
        gbc.writeMem(0x1664, { 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2b3e, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 008C
        gbc.setState(0x579a, 0x6cb2, 0x4dd0, 0x8bd4, 0xce88, 0xe767, 0x1, 0x0);
        gbc.writeMem(0x579a, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6cb2, gbc.sp());
        EXPECT(0x579b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 008D
        gbc.setState(0x5687, 0x973d, 0x2070, 0xa25a, 0x2cd6, 0x3ec0, 0x0, 0x1);
        gbc.writeMem(0x5687, { 0xb5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x973d, gbc.sp());
        EXPECT(0x5688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 008F
        gbc.setState(0xd711, 0x9335, 0x25c0, 0xb95c, 0x5f1c, 0x1608, 0x0, 0x1);
        gbc.writeMem(0xd711, { 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9335, gbc.sp());
        EXPECT(0xd712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd711));
        // B5 0090
        gbc.setState(0x931f, 0x614d, 0x8cd0, 0x463, 0x5345, 0x6357, 0x1, 0x1);
        gbc.writeMem(0x931f, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x614d, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x931f));
        // B5 0091
        gbc.setState(0xc3b5, 0x5bcb, 0xee80, 0xdd52, 0xfd, 0xb79f, 0x0, 0x0);
        gbc.writeMem(0xc3b5, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xc3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc3b5));
        // B5 0092
        gbc.setState(0x94af, 0x6f4c, 0x4200, 0xbf26, 0x8034, 0x657f, 0x1, 0x1);
        gbc.writeMem(0x94af, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0x94b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x94af));
        // B5 0093
        gbc.setState(0x22fd, 0xf8eb, 0x5cc0, 0x58be, 0x2a6f, 0xb522, 0x1, 0x0);
        gbc.writeMem(0x22fd, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf8eb, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0094
        gbc.setState(0x178c, 0x6ee5, 0xe7d0, 0xba0a, 0xe369, 0xc078, 0x1, 0x0);
        gbc.writeMem(0x178c, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6ee5, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0095
        gbc.setState(0xe758, 0x3d7c, 0x28d0, 0x2741, 0x2911, 0x77c1, 0x0, 0x0);
        gbc.writeMem(0xe758, { 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0xe759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe758));
        // B5 0096
        gbc.setState(0x8435, 0xfd0e, 0x4880, 0x3e8e, 0x17e0, 0x4175, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfd0e, gbc.sp());
        EXPECT(0x8436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8435));
        // B5 0097
        gbc.setState(0x7574, 0x6f91, 0x8ef0, 0x9645, 0xf1d6, 0x2705, 0x1, 0x1);
        gbc.writeMem(0x7574, { 0xb5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x7575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0098
        gbc.setState(0xa445, 0x5b02, 0x6040, 0x9d2d, 0x8a00, 0x1045, 0x1, 0x0);
        gbc.writeMem(0xa445, { 0xb5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5b02, gbc.sp());
        EXPECT(0xa446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa445));
        // B5 0099
        gbc.setState(0xeac9, 0xd491, 0x1320, 0xb5ca, 0xdba3, 0x27c5, 0x1, 0x1);
        gbc.writeMem(0xeac9, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0xeaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xeac9));
        // B5 009A
        gbc.setState(0x22dd, 0x413d, 0x8b20, 0x927e, 0x3679, 0x67c6, 0x0, 0x0);
        gbc.writeMem(0x22dd, { 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x413d, gbc.sp());
        EXPECT(0x22de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 009B
        gbc.setState(0x98df, 0x2ce3, 0xa80, 0x2867, 0x393b, 0x1ee7, 0x0, 0x0);
        gbc.writeMem(0x98df, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98df));
        // B5 009C
        gbc.setState(0x10c2, 0xf73b, 0x2810, 0xb52f, 0x86be, 0x3699, 0x0, 0x0);
        gbc.writeMem(0x10c2, { 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0x10c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 009D
        gbc.setState(0x96a7, 0xc495, 0xb460, 0xcfe0, 0x2404, 0x8b16, 0x0, 0x1);
        gbc.writeMem(0x96a7, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc495, gbc.sp());
        EXPECT(0x96a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x96a7));
        // B5 009E
        gbc.setState(0x6a26, 0x2e4a, 0x54c0, 0x3c2a, 0x2f4f, 0x28d7, 0x0, 0x0);
        gbc.writeMem(0x6a26, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2e4a, gbc.sp());
        EXPECT(0x6a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 009F
        gbc.setState(0x7234, 0x5f3d, 0x7f60, 0x3ce0, 0xc215, 0xf5f3, 0x0, 0x0);
        gbc.writeMem(0x7234, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0x7235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00A0
        gbc.setState(0xbe95, 0x4839, 0x90, 0x5ebc, 0x1bcd, 0x6ef6, 0x0, 0x1);
        gbc.writeMem(0xbe95, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4839, gbc.sp());
        EXPECT(0xbe96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbe95));
        // B5 00A1
        gbc.setState(0x7e18, 0x8491, 0x3e00, 0x2b83, 0xa4a5, 0x97b9, 0x1, 0x0);
        gbc.writeMem(0x7e18, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8491, gbc.sp());
        EXPECT(0x7e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00A2
        gbc.setState(0xb5f3, 0x8eb3, 0x6b0, 0xe94f, 0xb1a6, 0x7cfc, 0x0, 0x0);
        gbc.writeMem(0xb5f3, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0xb5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb5f3));
        // B5 00A3
        gbc.setState(0x837c, 0x9b30, 0x3a10, 0xb48f, 0x46ed, 0xace3, 0x1, 0x1);
        gbc.writeMem(0x837c, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x837c));
        // B5 00A4
        gbc.setState(0xc77b, 0x7d89, 0xb2e0, 0xb86e, 0x3bc7, 0x5e90, 0x0, 0x1);
        gbc.writeMem(0xc77b, { 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc77b));
        // B5 00A5
        gbc.setState(0x9abe, 0x7066, 0x870, 0xa6bc, 0xfa12, 0xef75, 0x0, 0x1);
        gbc.writeMem(0x9abe, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7066, gbc.sp());
        EXPECT(0x9abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9abe));
        // B5 00A6
        gbc.setState(0x636f, 0xe0eb, 0x630, 0x9646, 0x215d, 0x2288, 0x0, 0x0);
        gbc.writeMem(0x636f, { 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe0eb, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00A7
        gbc.setState(0xead2, 0xf7ab, 0x2040, 0xa4d4, 0xea54, 0x42bc, 0x1, 0x0);
        gbc.writeMem(0xead2, { 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf7ab, gbc.sp());
        EXPECT(0xead3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xead2));
        // B5 00A8
        gbc.setState(0x7101, 0xbc22, 0x76b0, 0x888, 0x37ce, 0x2871, 0x1, 0x1);
        gbc.writeMem(0x7101, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0x7102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00A9
        gbc.setState(0x7bcf, 0x96bb, 0x9c90, 0xb7eb, 0x7a11, 0x12c6, 0x0, 0x1);
        gbc.writeMem(0x7bcf, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0x7bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00AA
        gbc.setState(0x823b, 0xdaa5, 0xd500, 0x31fa, 0x796, 0x667a, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdaa5, gbc.sp());
        EXPECT(0x823c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x823b));
        // B5 00AB
        gbc.setState(0x9386, 0xeef8, 0x2d70, 0x273d, 0x31f7, 0x7842, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeef8, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9386));
        // B5 00AC
        gbc.setState(0xa159, 0x8993, 0x8520, 0x291b, 0x6b20, 0xa1a6, 0x0, 0x0);
        gbc.writeMem(0xa159, { 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8993, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa159));
        // B5 00AD
        gbc.setState(0x4e0f, 0xf91b, 0xc510, 0x4127, 0x5182, 0xf4d7, 0x1, 0x1);
        gbc.writeMem(0x4e0f, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf91b, gbc.sp());
        EXPECT(0x4e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00AE
        gbc.setState(0x3790, 0xa159, 0x31d0, 0x1b50, 0x9bae, 0xd843, 0x1, 0x1);
        gbc.writeMem(0x3790, { 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0x3791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00AF
        gbc.setState(0x8a97, 0xdb1b, 0x8690, 0x783, 0x4a76, 0x8420, 0x1, 0x1);
        gbc.writeMem(0x8a97, { 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdb1b, gbc.sp());
        EXPECT(0x8a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8a97));
        // B5 00B2
        gbc.setState(0xe303, 0xe5f0, 0x2870, 0x21d8, 0x17c9, 0xf847, 0x0, 0x1);
        gbc.writeMem(0xe303, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe5f0, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe303));
        // B5 00B3
        gbc.setState(0x9d3f, 0x4016, 0x7eb0, 0xd46, 0x7ace, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0x9d3f, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4016, gbc.sp());
        EXPECT(0x9d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9d3f));
        // B5 00B4
        gbc.setState(0x4399, 0x9dbe, 0x5c40, 0x2725, 0xdd31, 0x7b02, 0x1, 0x1);
        gbc.writeMem(0x4399, { 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9dbe, gbc.sp());
        EXPECT(0x439a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00B5
        gbc.setState(0x98ff, 0x45fb, 0xb2a0, 0x349a, 0xbc66, 0xae88, 0x1, 0x0);
        gbc.writeMem(0x98ff, { 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x45fb, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98ff));
        // B5 00B6
        gbc.setState(0xce4a, 0x259e, 0xdc70, 0x42fa, 0x869f, 0xfc9a, 0x0, 0x1);
        gbc.writeMem(0xce4a, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0xce4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce4a));
        // B5 00B7
        gbc.setState(0x40b, 0xee33, 0x1870, 0x65c1, 0x462, 0xa8dc, 0x0, 0x1);
        gbc.writeMem(0x40b, { 0xb5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00B8
        gbc.setState(0xc300, 0xfa23, 0x6a40, 0x47a1, 0x8c4f, 0xd85b, 0x1, 0x1);
        gbc.writeMem(0xc300, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfa23, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc300));
        // B5 00B9
        gbc.setState(0x7595, 0xec40, 0xefa0, 0xec92, 0xd39e, 0x5087, 0x0, 0x1);
        gbc.writeMem(0x7595, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xec40, gbc.sp());
        EXPECT(0x7596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00BA
        gbc.setState(0xbeb, 0x4df, 0x4090, 0xa092, 0x2cac, 0x60e1, 0x0, 0x1);
        gbc.writeMem(0xbeb, { 0xb5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4df, gbc.sp());
        EXPECT(0xbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00BB
        gbc.setState(0xdbb1, 0x9b04, 0x4320, 0xb050, 0x2f5e, 0xf621, 0x1, 0x1);
        gbc.writeMem(0xdbb1, { 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b04, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdbb1));
        // B5 00BC
        gbc.setState(0x269, 0x7b50, 0x1440, 0x68f2, 0xd655, 0x4387, 0x0, 0x1);
        gbc.writeMem(0x269, { 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00BD
        gbc.setState(0x62e6, 0x6af5, 0x1dd0, 0x33a4, 0x4f8e, 0xa05e, 0x1, 0x1);
        gbc.writeMem(0x62e6, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6af5, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00BE
        gbc.setState(0x8f75, 0x5a70, 0x6c80, 0x4f3c, 0x1076, 0x4243, 0x0, 0x0);
        gbc.writeMem(0x8f75, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a70, gbc.sp());
        EXPECT(0x8f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8f75));
        // B5 00BF
        gbc.setState(0xbdcc, 0xb880, 0x92d0, 0x2300, 0x8917, 0xcef1, 0x0, 0x0);
        gbc.writeMem(0xbdcc, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb880, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbdcc));
        // B5 00C0
        gbc.setState(0x8669, 0xfd5f, 0x6370, 0x9b87, 0x8123, 0x67f9, 0x1, 0x1);
        gbc.writeMem(0x8669, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfd5f, gbc.sp());
        EXPECT(0x866a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8669));
        // B5 00C1
        gbc.setState(0xa918, 0x9c61, 0x92e0, 0xd9ab, 0xf759, 0x7cf9, 0x0, 0x0);
        gbc.writeMem(0xa918, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0xa919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa918));
        // B5 00C2
        gbc.setState(0xac6d, 0xc03b, 0xa260, 0xe65d, 0x932b, 0x30da, 0x1, 0x1);
        gbc.writeMem(0xac6d, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc03b, gbc.sp());
        EXPECT(0xac6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xac6d));
        // B5 00C3
        gbc.setState(0xbf32, 0xec99, 0xfab0, 0xb1cb, 0xbbbb, 0x1b05, 0x0, 0x1);
        gbc.writeMem(0xbf32, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xec99, gbc.sp());
        EXPECT(0xbf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbf32));
        // B5 00C4
        gbc.setState(0x7e07, 0xa18e, 0xa5f0, 0x57b9, 0x72ed, 0x1a8c, 0x0, 0x0);
        gbc.writeMem(0x7e07, { 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0x7e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00C5
        gbc.setState(0x8b4e, 0xd519, 0x55a0, 0x3c4f, 0x4d08, 0x88c1, 0x0, 0x0);
        gbc.writeMem(0x8b4e, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd519, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8b4e));
        // B5 00C6
        gbc.setState(0xc620, 0xdc3e, 0x1170, 0x54ba, 0x1995, 0xb60a, 0x0, 0x1);
        gbc.writeMem(0xc620, { 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdc3e, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc620));
        // B5 00C7
        gbc.setState(0xb180, 0x9669, 0xfa40, 0x51c2, 0xa4b9, 0x8255, 0x1, 0x0);
        gbc.writeMem(0xb180, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9669, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb180));
        // B5 00C8
        gbc.setState(0x7ae1, 0xe6bc, 0xed40, 0xd720, 0x3f90, 0x22dc, 0x0, 0x0);
        gbc.writeMem(0x7ae1, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe6bc, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00C9
        gbc.setState(0x40af, 0x97e9, 0xb7f0, 0xde72, 0xe9b6, 0x3cc9, 0x1, 0x0);
        gbc.writeMem(0x40af, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x40b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CA
        gbc.setState(0x6164, 0xa235, 0x8910, 0x6f9b, 0xc6bb, 0x2852, 0x1, 0x0);
        gbc.writeMem(0x6164, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa235, gbc.sp());
        EXPECT(0x6165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CB
        gbc.setState(0x1ffe, 0xd376, 0x8570, 0xa614, 0xa5a0, 0xa212, 0x1, 0x1);
        gbc.writeMem(0x1ffe, { 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd376, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CC
        gbc.setState(0x2dbd, 0xfeb7, 0x5890, 0x8d5f, 0xaff6, 0x16ee, 0x1, 0x0);
        gbc.writeMem(0x2dbd, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x2dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CD
        gbc.setState(0x1e10, 0x357c, 0x6c0, 0xc096, 0xfe97, 0xd595, 0x1, 0x1);
        gbc.writeMem(0x1e10, { 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x357c, gbc.sp());
        EXPECT(0x1e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CE
        gbc.setState(0x4dd3, 0xad06, 0x4830, 0xd23d, 0x4bdb, 0x9527, 0x0, 0x1);
        gbc.writeMem(0x4dd3, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xad06, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00CF
        gbc.setState(0xdf5a, 0x4740, 0x1ec0, 0x62cb, 0xc9fd, 0x916, 0x0, 0x1);
        gbc.writeMem(0xdf5a, { 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4740, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdf5a));
        // B5 00D0
        gbc.setState(0xef0e, 0x2b1e, 0xa940, 0xb7e0, 0x7fa4, 0x6551, 0x0, 0x1);
        gbc.writeMem(0xef0e, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0xef0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xef0e));
        // B5 00D1
        gbc.setState(0x723d, 0xa0ee, 0x24d0, 0x8ef8, 0xfddc, 0x1128, 0x1, 0x0);
        gbc.writeMem(0x723d, { 0xb5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa0ee, gbc.sp());
        EXPECT(0x723e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00D2
        gbc.setState(0x607, 0x24a3, 0x9c50, 0x695b, 0x8f54, 0xfeb, 0x1, 0x1);
        gbc.writeMem(0x607, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x24a3, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00D3
        gbc.setState(0xe474, 0x52f1, 0xa8c0, 0x3546, 0xdf96, 0x1f78, 0x1, 0x1);
        gbc.writeMem(0xe474, { 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0xe475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe474));
        // B5 00D4
        gbc.setState(0x475c, 0xcaf0, 0xfac0, 0xd7b0, 0x2a3b, 0x48d2, 0x0, 0x1);
        gbc.writeMem(0x475c, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcaf0, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00D5
        gbc.setState(0x7478, 0x2fdd, 0x40a0, 0x21f6, 0x87e2, 0x9742, 0x1, 0x1);
        gbc.writeMem(0x7478, { 0xb5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00D6
        gbc.setState(0x96f1, 0x2b51, 0xafd0, 0x25e, 0x3bb, 0x482d, 0x1, 0x1);
        gbc.writeMem(0x96f1, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2b51, gbc.sp());
        EXPECT(0x96f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x96f1));
        // B5 00D7
        gbc.setState(0xd5d7, 0xb8a6, 0x52a0, 0xf5bf, 0xe3b5, 0xc28f, 0x1, 0x0);
        gbc.writeMem(0xd5d7, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb8a6, gbc.sp());
        EXPECT(0xd5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd5d7));
        // B5 00D8
        gbc.setState(0x824d, 0x4a00, 0x1450, 0x64c8, 0x1747, 0xec01, 0x0, 0x0);
        gbc.writeMem(0x824d, { 0xb5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a00, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x824d));
        // B5 00D9
        gbc.setState(0xd6bd, 0x12dd, 0xb310, 0xf546, 0x6dd0, 0x4eb5, 0x0, 0x1);
        gbc.writeMem(0xd6bd, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x12dd, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd6bd));
        // B5 00DA
        gbc.setState(0x4691, 0xeddc, 0x19f0, 0xa19d, 0x71ef, 0x7271, 0x1, 0x1);
        gbc.writeMem(0x4691, { 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeddc, gbc.sp());
        EXPECT(0x4692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00DB
        gbc.setState(0x210, 0xab20, 0xc70, 0x89b2, 0x8652, 0xdae6, 0x1, 0x0);
        gbc.writeMem(0x210, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab20, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00DC
        gbc.setState(0x738f, 0xc271, 0xb270, 0x1f41, 0xdfce, 0xa028, 0x0, 0x0);
        gbc.writeMem(0x738f, { 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x7390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00DD
        gbc.setState(0x2a01, 0x3159, 0x16d0, 0x98dc, 0x7dc4, 0x809c, 0x1, 0x0);
        gbc.writeMem(0x2a01, { 0xb5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3159, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00DE
        gbc.setState(0xd0c0, 0x6146, 0x8d00, 0xb28f, 0xb04a, 0x835e, 0x0, 0x1);
        gbc.writeMem(0xd0c0, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6146, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd0c0));
        // B5 00DF
        gbc.setState(0xb30b, 0x2ae7, 0x750, 0x877, 0x23e8, 0x1272, 0x1, 0x1);
        gbc.writeMem(0xb30b, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2ae7, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb30b));
        // B5 00E0
        gbc.setState(0x9baa, 0x7e84, 0x12f0, 0x9496, 0x2849, 0x823e, 0x0, 0x0);
        gbc.writeMem(0x9baa, { 0xb5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7e84, gbc.sp());
        EXPECT(0x9bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9baa));
        // B5 00E1
        gbc.setState(0x7ae0, 0xf6e0, 0x57f0, 0xaf03, 0x748a, 0x85ec, 0x0, 0x1);
        gbc.writeMem(0x7ae0, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf6e0, gbc.sp());
        EXPECT(0x7ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00E2
        gbc.setState(0x9450, 0x16ea, 0xd700, 0x2bf, 0xb61f, 0x6d54, 0x0, 0x1);
        gbc.writeMem(0x9450, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x16ea, gbc.sp());
        EXPECT(0x9451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9450));
        // B5 00E3
        gbc.setState(0xaf97, 0xf4b2, 0x9250, 0x7271, 0xc757, 0x7780, 0x0, 0x0);
        gbc.writeMem(0xaf97, { 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0xaf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaf97));
        // B5 00E4
        gbc.setState(0x45b6, 0x9cca, 0xfcf0, 0x30d1, 0x3c77, 0x22f3, 0x0, 0x0);
        gbc.writeMem(0x45b6, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9cca, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00E5
        gbc.setState(0x9807, 0x8453, 0x1410, 0x7290, 0x216b, 0x47ef, 0x1, 0x1);
        gbc.writeMem(0x9807, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x9808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9807));
        // B5 00E6
        gbc.setState(0x4024, 0xf5a5, 0x3620, 0xbeeb, 0xba, 0x1daf, 0x0, 0x0);
        gbc.writeMem(0x4024, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0x4025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00E8
        gbc.setState(0x8416, 0x8d6a, 0x23b0, 0xc6fb, 0x3cf0, 0x86c2, 0x1, 0x0);
        gbc.writeMem(0x8416, { 0xb5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8416));
        // B5 00E9
        gbc.setState(0xb997, 0xa076, 0xc140, 0x6e51, 0xda5d, 0xc5bd, 0x1, 0x1);
        gbc.writeMem(0xb997, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0xb998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb997));
        // B5 00EA
        gbc.setState(0xc5b0, 0x2d31, 0x4800, 0xd948, 0x3bce, 0xf5ed, 0x0, 0x1);
        gbc.writeMem(0xc5b0, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2d31, gbc.sp());
        EXPECT(0xc5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc5b0));
        // B5 00EB
        gbc.setState(0x34de, 0x2421, 0x75c0, 0xd893, 0x54e, 0x9cd, 0x0, 0x1);
        gbc.writeMem(0x34de, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0x34df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00EC
        gbc.setState(0xcd7d, 0x297a, 0xdd20, 0xc15, 0x1e5c, 0xaead, 0x1, 0x0);
        gbc.writeMem(0xcd7d, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0xcd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcd7d));
        // B5 00ED
        gbc.setState(0x490, 0xcaae, 0x14b0, 0xf005, 0x4362, 0x9349, 0x1, 0x1);
        gbc.writeMem(0x490, { 0xb5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcaae, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00EE
        gbc.setState(0x3543, 0x310b, 0xae90, 0x2ab0, 0x8439, 0xd700, 0x0, 0x1);
        gbc.writeMem(0x3543, { 0xb5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x3544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00EF
        gbc.setState(0x662e, 0xe788, 0xc920, 0x9bc7, 0x80c1, 0x89cb, 0x1, 0x1);
        gbc.writeMem(0x662e, { 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00F0
        gbc.setState(0x86fd, 0xdfcc, 0x3db0, 0x2feb, 0x358f, 0xf6e5, 0x1, 0x0);
        gbc.writeMem(0x86fd, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x86fd));
        // B5 00F1
        gbc.setState(0xb847, 0x25fd, 0xb5b0, 0xc120, 0x3982, 0x4580, 0x0, 0x1);
        gbc.writeMem(0xb847, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x25fd, gbc.sp());
        EXPECT(0xb848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb847));
        // B5 00F2
        gbc.setState(0x51bf, 0x8b3b, 0xc330, 0x330d, 0x2b65, 0xd63e, 0x1, 0x1);
        gbc.writeMem(0x51bf, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0x51c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00F3
        gbc.setState(0x2eb4, 0x8d14, 0x5b80, 0x8d40, 0xa48c, 0x8893, 0x0, 0x1);
        gbc.writeMem(0x2eb4, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8d14, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00F5
        gbc.setState(0x9280, 0x5f78, 0x2260, 0x1b97, 0x18eb, 0xf531, 0x1, 0x0);
        gbc.writeMem(0x9280, { 0xb5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0x9281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9280));
        // B5 00F6
        gbc.setState(0x9fd9, 0x5507, 0x480, 0xc64c, 0x174, 0x4a5f, 0x1, 0x0);
        gbc.writeMem(0x9fd9, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0x9fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9fd9));
        // B5 00F7
        gbc.setState(0xd297, 0xf97b, 0xd5a0, 0x9036, 0xfa1b, 0x2953, 0x0, 0x0);
        gbc.writeMem(0xd297, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd297));
        // B5 00F8
        gbc.setState(0x6e8d, 0x1365, 0xcae0, 0x20f7, 0x5990, 0xf4ba, 0x1, 0x1);
        gbc.writeMem(0x6e8d, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1365, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00F9
        gbc.setState(0x17b8, 0xc626, 0x6290, 0x896d, 0x64e9, 0x9598, 0x0, 0x0);
        gbc.writeMem(0x17b8, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x17b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00FB
        gbc.setState(0xdf63, 0xf0e4, 0xaa40, 0x881d, 0xfb00, 0x8152, 0x1, 0x0);
        gbc.writeMem(0xdf63, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf0e4, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdf63));
        // B5 00FC
        gbc.setState(0xe99f, 0xfeed, 0x2910, 0x8010, 0xbdea, 0xa0d3, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfeed, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe99f));
        // B5 00FD
        gbc.setState(0x7c8e, 0xe658, 0x51d0, 0xebb5, 0x49ec, 0x7b24, 0x0, 0x0);
        gbc.writeMem(0x7c8e, { 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0x7c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00FE
        gbc.setState(0x7270, 0x98ea, 0x2480, 0x5544, 0x23a5, 0x5e14, 0x1, 0x0);
        gbc.writeMem(0x7270, { 0xb5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 00FF
        gbc.setState(0xc856, 0x4b4d, 0xc970, 0x6f63, 0xd049, 0x762c, 0x1, 0x0);
        gbc.writeMem(0xc856, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4b4d, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc856));
        // B5 0100
        gbc.setState(0x7597, 0x11a9, 0x8430, 0x45c3, 0xc5cf, 0x59f5, 0x1, 0x1);
        gbc.writeMem(0x7597, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x11a9, gbc.sp());
        EXPECT(0x7598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0101
        gbc.setState(0x5f91, 0xb060, 0x5b60, 0x90de, 0x242, 0xb2fe, 0x1, 0x1);
        gbc.writeMem(0x5f91, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb060, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0102
        gbc.setState(0xa136, 0xb084, 0xd800, 0x3f48, 0xefd, 0xc481, 0x1, 0x1);
        gbc.writeMem(0xa136, { 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb084, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa136));
        // B5 0103
        gbc.setState(0xe42d, 0x51df, 0xa280, 0xe471, 0xb0e4, 0xadff, 0x0, 0x1);
        gbc.writeMem(0xe42d, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe42d));
        // B5 0105
        gbc.setState(0x81f0, 0xfc51, 0xe5a0, 0xf1ad, 0x9181, 0x5235, 0x0, 0x0);
        gbc.writeMem(0x81f0, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfc51, gbc.sp());
        EXPECT(0x81f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x81f0));
        // B5 0106
        gbc.setState(0xce34, 0xdcea, 0x30b0, 0x3df0, 0x42e6, 0xc730, 0x0, 0x0);
        gbc.writeMem(0xce34, { 0xb5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdcea, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce34));
        // B5 0107
        gbc.setState(0x8eb3, 0x6e74, 0x73b0, 0x9081, 0x5d5e, 0x117c, 0x1, 0x0);
        gbc.writeMem(0x8eb3, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0x8eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8eb3));
        // B5 0108
        gbc.setState(0x6350, 0x55fc, 0x2750, 0xef51, 0x1b45, 0x3ae0, 0x0, 0x1);
        gbc.writeMem(0x6350, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0x6351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0109
        gbc.setState(0x6386, 0xc484, 0x89b0, 0x1753, 0x5679, 0xd5db, 0x1, 0x0);
        gbc.writeMem(0x6386, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc484, gbc.sp());
        EXPECT(0x6387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010A
        gbc.setState(0x747, 0x931, 0x4ac0, 0xe6c6, 0x896e, 0x914c, 0x1, 0x1);
        gbc.writeMem(0x747, { 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x931, gbc.sp());
        EXPECT(0x748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010B
        gbc.setState(0x6d68, 0x538c, 0xaef0, 0x1c5c, 0xb84c, 0x1318, 0x0, 0x1);
        gbc.writeMem(0x6d68, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x538c, gbc.sp());
        EXPECT(0x6d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010C
        gbc.setState(0x37ad, 0x6147, 0x2a80, 0xce7b, 0x96e8, 0x900b, 0x1, 0x1);
        gbc.writeMem(0x37ad, { 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6147, gbc.sp());
        EXPECT(0x37ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010D
        gbc.setState(0x5127, 0xa8d9, 0xeda0, 0xc3e5, 0x649f, 0xdd4, 0x0, 0x1);
        gbc.writeMem(0x5127, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010E
        gbc.setState(0x22ed, 0x1a8e, 0xf2b0, 0xe2da, 0xb12f, 0xb030, 0x1, 0x1);
        gbc.writeMem(0x22ed, { 0xb5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1a8e, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 010F
        gbc.setState(0x252c, 0x4364, 0xc6a0, 0x43c7, 0xf6c0, 0x3b81, 0x0, 0x0);
        gbc.writeMem(0x252c, { 0xb5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0110
        gbc.setState(0x36cc, 0xf997, 0x7410, 0x94f4, 0x68f6, 0x5293, 0x1, 0x1);
        gbc.writeMem(0x36cc, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf997, gbc.sp());
        EXPECT(0x36cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0111
        gbc.setState(0x96ea, 0xa2b7, 0x3450, 0x37ef, 0x66f3, 0x97a1, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x96ea));
        // B5 0112
        gbc.setState(0xb973, 0x4de4, 0x7190, 0xdb6e, 0xcfe3, 0xab53, 0x1, 0x1);
        gbc.writeMem(0xb973, { 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4de4, gbc.sp());
        EXPECT(0xb974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb973));
        // B5 0113
        gbc.setState(0xd236, 0x161e, 0x3530, 0x48dd, 0x7e08, 0xafcb, 0x0, 0x1);
        gbc.writeMem(0xd236, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x161e, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd236));
        // B5 0114
        gbc.setState(0x21ec, 0x5cc3, 0x8750, 0x507a, 0xeb29, 0x3c91, 0x0, 0x1);
        gbc.writeMem(0x21ec, { 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0x21ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0115
        gbc.setState(0xa479, 0x6fee, 0xe1a0, 0xad3b, 0xe867, 0x8efa, 0x0, 0x0);
        gbc.writeMem(0xa479, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6fee, gbc.sp());
        EXPECT(0xa47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa479));
        // B5 0116
        gbc.setState(0x5acf, 0xd453, 0x5bb0, 0x3e04, 0x23a9, 0x3075, 0x1, 0x1);
        gbc.writeMem(0x5acf, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd453, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0118
        gbc.setState(0x1f99, 0x34d9, 0x6510, 0x7432, 0xb9a4, 0x98dc, 0x0, 0x0);
        gbc.writeMem(0x1f99, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x34d9, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0119
        gbc.setState(0xb924, 0x31d1, 0x4050, 0x247e, 0xe665, 0x1fc6, 0x1, 0x1);
        gbc.writeMem(0xb924, { 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x31d1, gbc.sp());
        EXPECT(0xb925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb924));
        // B5 011A
        gbc.setState(0xb0ec, 0xc674, 0xfbc0, 0x46b2, 0xe709, 0x9a6d, 0x0, 0x1);
        gbc.writeMem(0xb0ec, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc674, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb0ec));
        // B5 011B
        gbc.setState(0x9e34, 0xc6f6, 0xf8e0, 0xdc11, 0x702a, 0xf0b5, 0x1, 0x1);
        gbc.writeMem(0x9e34, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9e34));
        // B5 011C
        gbc.setState(0x7235, 0xcc, 0x9600, 0x539c, 0x7e13, 0xa1f, 0x1, 0x1);
        gbc.writeMem(0x7235, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcc, gbc.sp());
        EXPECT(0x7236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 011D
        gbc.setState(0xab01, 0x838f, 0x4990, 0xbe1d, 0x5323, 0x3f6b, 0x1, 0x1);
        gbc.writeMem(0xab01, { 0xb5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xab01));
        // B5 011E
        gbc.setState(0x6375, 0x15d8, 0x780, 0x9929, 0x59dc, 0xab22, 0x1, 0x1);
        gbc.writeMem(0x6375, { 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 011F
        gbc.setState(0x18d3, 0x5223, 0x1f30, 0x3731, 0xef94, 0x62ac, 0x1, 0x0);
        gbc.writeMem(0x18d3, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0x18d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0120
        gbc.setState(0x8f9a, 0x3677, 0xad90, 0xf289, 0x3bd, 0x3aaa, 0x0, 0x0);
        gbc.writeMem(0x8f9a, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3677, gbc.sp());
        EXPECT(0x8f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8f9a));
        // B5 0121
        gbc.setState(0xd41b, 0x1d10, 0xc200, 0x1cc4, 0x55c5, 0xed8c, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1d10, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd41b));
        // B5 0122
        gbc.setState(0x604f, 0x7105, 0x53b0, 0xb5f6, 0xb8b3, 0xa096, 0x1, 0x1);
        gbc.writeMem(0x604f, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0x6050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0123
        gbc.setState(0x6d1d, 0xb2a7, 0x6d00, 0x1994, 0xb0a2, 0xa62d, 0x1, 0x1);
        gbc.writeMem(0x6d1d, { 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb2a7, gbc.sp());
        EXPECT(0x6d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0124
        gbc.setState(0x1d8c, 0x9798, 0x5b70, 0xcf84, 0x545a, 0x5d17, 0x1, 0x1);
        gbc.writeMem(0x1d8c, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9798, gbc.sp());
        EXPECT(0x1d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0125
        gbc.setState(0xe135, 0xaebd, 0xbae0, 0xc173, 0x2965, 0x28d3, 0x0, 0x0);
        gbc.writeMem(0xe135, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaebd, gbc.sp());
        EXPECT(0xe136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe135));
        // B5 0126
        gbc.setState(0xb5d1, 0x1772, 0x33c0, 0x8080, 0xcbfc, 0x883c, 0x0, 0x0);
        gbc.writeMem(0xb5d1, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1772, gbc.sp());
        EXPECT(0xb5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb5d1));
        // B5 0127
        gbc.setState(0x8060, 0x2a4d, 0x6c90, 0x2c66, 0x6086, 0xd18f, 0x1, 0x0);
        gbc.writeMem(0x8060, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0x8061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8060));
        // B5 0128
        gbc.setState(0xaad7, 0x90ef, 0x47d0, 0xf06f, 0x18f9, 0x47b3, 0x1, 0x1);
        gbc.writeMem(0xaad7, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x90ef, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaad7));
        // B5 0129
        gbc.setState(0xd187, 0x211e, 0x66a0, 0xa2f3, 0xf9ca, 0x5881, 0x1, 0x1);
        gbc.writeMem(0xd187, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x211e, gbc.sp());
        EXPECT(0xd188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd187));
        // B5 012A
        gbc.setState(0x9ee0, 0x443e, 0x28e0, 0x8758, 0x321, 0xeab2, 0x0, 0x1);
        gbc.writeMem(0x9ee0, { 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x443e, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9ee0));
        // B5 012C
        gbc.setState(0x2c1f, 0x6b29, 0x1d80, 0xbd73, 0xcc00, 0x21f, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0xb5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6b29, gbc.sp());
        EXPECT(0x2c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 012D
        gbc.setState(0xb66b, 0x6c33, 0x5c10, 0xed03, 0x49c9, 0xd8e8, 0x0, 0x1);
        gbc.writeMem(0xb66b, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0xb66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb66b));
        // B5 012E
        gbc.setState(0x55c0, 0xe624, 0xfc80, 0x3ba2, 0xb174, 0x68bc, 0x1, 0x1);
        gbc.writeMem(0x55c0, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x55c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 012F
        gbc.setState(0x3373, 0x94d5, 0xd100, 0x72b6, 0xf120, 0xf9b8, 0x0, 0x0);
        gbc.writeMem(0x3373, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x94d5, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0130
        gbc.setState(0x6dff, 0xd3fb, 0xdef0, 0x9e7a, 0x17fe, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x6dff, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0131
        gbc.setState(0x6b4d, 0xc928, 0x1b40, 0x1787, 0xe2d0, 0xa39e, 0x0, 0x0);
        gbc.writeMem(0x6b4d, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc928, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0133
        gbc.setState(0x220f, 0x68e5, 0x8e0, 0x7e51, 0x518, 0xe333, 0x1, 0x0);
        gbc.writeMem(0x220f, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x68e5, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0134
        gbc.setState(0xcf70, 0xd0, 0x79e0, 0xec41, 0x80de, 0xe37a, 0x1, 0x1);
        gbc.writeMem(0xcf70, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd0, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcf70));
        // B5 0135
        gbc.setState(0x6ace, 0x9439, 0xcd50, 0x23ec, 0xa20a, 0x3e1d, 0x0, 0x1);
        gbc.writeMem(0x6ace, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0136
        gbc.setState(0x8618, 0xdc2e, 0x6200, 0xf1a7, 0x6ab9, 0xfff7, 0x0, 0x1);
        gbc.writeMem(0x8618, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdc2e, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8618));
        // B5 0137
        gbc.setState(0x831, 0xfc59, 0xa2c0, 0x2c37, 0xc6b, 0x38a7, 0x0, 0x1);
        gbc.writeMem(0x831, { 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0138
        gbc.setState(0x7bd2, 0x5b33, 0xa700, 0xf599, 0xb43d, 0xfc10, 0x1, 0x1);
        gbc.writeMem(0x7bd2, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b33, gbc.sp());
        EXPECT(0x7bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 013A
        gbc.setState(0x7f01, 0xc97d, 0xbb00, 0xbc4c, 0x8f47, 0x7e59, 0x0, 0x0);
        gbc.writeMem(0x7f01, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc97d, gbc.sp());
        EXPECT(0x7f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 013B
        gbc.setState(0x61d3, 0xad40, 0xfc80, 0x1d4e, 0x72e7, 0x3fd1, 0x1, 0x1);
        gbc.writeMem(0x61d3, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xad40, gbc.sp());
        EXPECT(0x61d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 013C
        gbc.setState(0xea89, 0xb788, 0x17a0, 0x5325, 0x4784, 0xb3a0, 0x1, 0x1);
        gbc.writeMem(0xea89, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xea89));
        // B5 013D
        gbc.setState(0xbb34, 0x83bc, 0xe500, 0xb1bf, 0x6f7b, 0x2dc5, 0x0, 0x1);
        gbc.writeMem(0xbb34, { 0xb5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x83bc, gbc.sp());
        EXPECT(0xbb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbb34));
        // B5 013E
        gbc.setState(0x3d07, 0xf6eb, 0x9f40, 0xc351, 0x6dbd, 0x2aad, 0x1, 0x1);
        gbc.writeMem(0x3d07, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0x3d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 013F
        gbc.setState(0xc25e, 0x6d41, 0x320, 0x595b, 0x3052, 0xa1ff, 0x1, 0x1);
        gbc.writeMem(0xc25e, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc25e));
        // B5 0140
        gbc.setState(0x4562, 0x2f18, 0x3810, 0xc0, 0xc9ed, 0x3d44, 0x1, 0x0);
        gbc.writeMem(0x4562, { 0xb5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x4563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0142
        gbc.setState(0x473d, 0x1b3c, 0x88c0, 0x9d8a, 0xd4b, 0xdeec, 0x1, 0x0);
        gbc.writeMem(0x473d, { 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1b3c, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0143
        gbc.setState(0xb066, 0x9391, 0x23b0, 0x9bb8, 0xa54b, 0x2a63, 0x1, 0x0);
        gbc.writeMem(0xb066, { 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9391, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb066));
        // B5 0144
        gbc.setState(0x271f, 0xe05a, 0xd340, 0x77ba, 0x596b, 0xe64c, 0x0, 0x0);
        gbc.writeMem(0x271f, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x2720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0145
        gbc.setState(0xe369, 0xdf9d, 0x88e0, 0x8d9e, 0x34a4, 0xd033, 0x1, 0x0);
        gbc.writeMem(0xe369, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdf9d, gbc.sp());
        EXPECT(0xe36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe369));
        // B5 0146
        gbc.setState(0x73d2, 0xf0cd, 0x7950, 0x2139, 0x80ed, 0x9324, 0x1, 0x0);
        gbc.writeMem(0x73d2, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf0cd, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0147
        gbc.setState(0x2413, 0x1bf6, 0x30f0, 0x20d7, 0xbce4, 0xbf63, 0x1, 0x1);
        gbc.writeMem(0x2413, { 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1bf6, gbc.sp());
        EXPECT(0x2414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0148
        gbc.setState(0x1b31, 0x4860, 0xb7d0, 0xa628, 0x4584, 0x66eb, 0x1, 0x1);
        gbc.writeMem(0x1b31, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4860, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0149
        gbc.setState(0x7da6, 0xdf4a, 0x8c00, 0x880e, 0xc6fa, 0xc9b9, 0x1, 0x0);
        gbc.writeMem(0x7da6, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdf4a, gbc.sp());
        EXPECT(0x7da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 014A
        gbc.setState(0x4833, 0x1f64, 0x5d70, 0x376, 0x1d0f, 0x458b, 0x0, 0x1);
        gbc.writeMem(0x4833, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0x4834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 014B
        gbc.setState(0x2007, 0xc4e, 0xb5f0, 0x9f3f, 0xbe4a, 0x7c67, 0x0, 0x1);
        gbc.writeMem(0x2007, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 014D
        gbc.setState(0xaad6, 0xadc, 0xbaa0, 0x1fcc, 0xf71a, 0xc207, 0x0, 0x1);
        gbc.writeMem(0xaad6, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xadc, gbc.sp());
        EXPECT(0xaad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaad6));
        // B5 014E
        gbc.setState(0x8d81, 0xe21, 0x47b0, 0x32b6, 0xe8cb, 0xf86c, 0x1, 0x0);
        gbc.writeMem(0x8d81, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0x8d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8d81));
        // B5 014F
        gbc.setState(0x37f0, 0x1aa, 0x80b0, 0xd957, 0xc584, 0xb740, 0x0, 0x0);
        gbc.writeMem(0x37f0, { 0xb5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1aa, gbc.sp());
        EXPECT(0x37f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0150
        gbc.setState(0xdcfd, 0x58c2, 0x2cc0, 0x706d, 0xda00, 0xb6ac, 0x0, 0x0);
        gbc.writeMem(0xdcfd, { 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x58c2, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdcfd));
        // B5 0151
        gbc.setState(0x9fca, 0x6816, 0xb2e0, 0xb5be, 0xe45e, 0x7bc4, 0x1, 0x1);
        gbc.writeMem(0x9fca, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6816, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9fca));
        // B5 0152
        gbc.setState(0x9c11, 0x7c37, 0xde0, 0x6b6e, 0x2e9d, 0x739, 0x0, 0x0);
        gbc.writeMem(0x9c11, { 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9c11));
        // B5 0153
        gbc.setState(0x6dc3, 0xf69e, 0xfab0, 0x646c, 0xf5dd, 0x2589, 0x0, 0x0);
        gbc.writeMem(0x6dc3, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf69e, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0154
        gbc.setState(0x7f22, 0x23d6, 0xfb30, 0x4d1c, 0x57e, 0x6fa0, 0x0, 0x0);
        gbc.writeMem(0x7f22, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x23d6, gbc.sp());
        EXPECT(0x7f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0155
        gbc.setState(0xb08a, 0x1502, 0x6e80, 0xaa46, 0xe299, 0xba82, 0x1, 0x0);
        gbc.writeMem(0xb08a, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1502, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb08a));
        // B5 0156
        gbc.setState(0xadd9, 0xec13, 0x97c0, 0x42bf, 0xf707, 0xa963, 0x1, 0x0);
        gbc.writeMem(0xadd9, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec13, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xadd9));
        // B5 0157
        gbc.setState(0x5850, 0xd8a5, 0x9e80, 0x77c1, 0x240b, 0x8e49, 0x0, 0x0);
        gbc.writeMem(0x5850, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x5851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0158
        gbc.setState(0xd3f1, 0x4ff1, 0x3f80, 0xa4b1, 0xf167, 0x5710, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd3f1));
        // B5 0159
        gbc.setState(0x5037, 0xd0c6, 0xa770, 0x9d2b, 0x8b25, 0xca99, 0x1, 0x0);
        gbc.writeMem(0x5037, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 015A
        gbc.setState(0x93f7, 0x8de, 0x2640, 0x7b44, 0xc3be, 0x4bf6, 0x0, 0x0);
        gbc.writeMem(0x93f7, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8de, gbc.sp());
        EXPECT(0x93f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x93f7));
        // B5 015B
        gbc.setState(0x4c8c, 0x8cbb, 0x50a0, 0x1b5, 0x429e, 0x94b3, 0x0, 0x1);
        gbc.writeMem(0x4c8c, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8cbb, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 015C
        gbc.setState(0x3f7f, 0x8834, 0x2290, 0xb6d7, 0x6300, 0xbed3, 0x1, 0x0);
        gbc.writeMem(0x3f7f, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8834, gbc.sp());
        EXPECT(0x3f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 015D
        gbc.setState(0x2337, 0x7506, 0x2d20, 0x6bc9, 0x3797, 0x8937, 0x0, 0x0);
        gbc.writeMem(0x2337, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7506, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 015E
        gbc.setState(0x536, 0xe23c, 0xa920, 0x4bc1, 0xb8a3, 0x5112, 0x1, 0x0);
        gbc.writeMem(0x536, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe23c, gbc.sp());
        EXPECT(0x537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 015F
        gbc.setState(0xb11b, 0x412b, 0xf40, 0xd0d2, 0xf568, 0xe0e, 0x0, 0x1);
        gbc.writeMem(0xb11b, { 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x412b, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb11b));
        // B5 0160
        gbc.setState(0x1bf3, 0xbf08, 0x7a20, 0x44ef, 0x6743, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0x1bf3, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0x1bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0161
        gbc.setState(0xaef4, 0xb8e4, 0x5540, 0x38b1, 0x14ae, 0x12b2, 0x1, 0x1);
        gbc.writeMem(0xaef4, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb8e4, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaef4));
        // B5 0162
        gbc.setState(0x77c7, 0xeeed, 0xbfd0, 0xeeff, 0x8560, 0xda3e, 0x1, 0x1);
        gbc.writeMem(0x77c7, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0163
        gbc.setState(0xe546, 0x5d43, 0xa8b0, 0xed8b, 0x1662, 0xffe9, 0x0, 0x0);
        gbc.writeMem(0xe546, { 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d43, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe546));
        // B5 0164
        gbc.setState(0xe481, 0x71f7, 0x2ad0, 0xbedf, 0x6f3c, 0x7ff3, 0x1, 0x0);
        gbc.writeMem(0xe481, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe481));
        // B5 0165
        gbc.setState(0x3e2e, 0x9650, 0x1f40, 0xf8b7, 0xfeea, 0x5a53, 0x0, 0x0);
        gbc.writeMem(0x3e2e, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0166
        gbc.setState(0x45bb, 0x86f3, 0xc7d0, 0x9a03, 0x43c9, 0x7df2, 0x0, 0x1);
        gbc.writeMem(0x45bb, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x86f3, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0167
        gbc.setState(0xc4f6, 0x33e3, 0x9ca0, 0xc58f, 0xa26d, 0xd2b4, 0x0, 0x0);
        gbc.writeMem(0xc4f6, { 0xb5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0xc4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc4f6));
        // B5 0168
        gbc.setState(0x3be5, 0x4efb, 0xc830, 0xe8d4, 0x1d2d, 0xed47, 0x0, 0x0);
        gbc.writeMem(0x3be5, { 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4efb, gbc.sp());
        EXPECT(0x3be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 016A
        gbc.setState(0x3ae8, 0x2081, 0x7d60, 0x36a2, 0x156c, 0x29a5, 0x1, 0x1);
        gbc.writeMem(0x3ae8, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 016B
        gbc.setState(0x1f57, 0x8a5e, 0xf700, 0xfc6d, 0x4e45, 0xef33, 0x0, 0x0);
        gbc.writeMem(0x1f57, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 016C
        gbc.setState(0x1962, 0x7339, 0x5d10, 0x47dc, 0x5615, 0xd2e5, 0x0, 0x1);
        gbc.writeMem(0x1962, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7339, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 016D
        gbc.setState(0xa794, 0xa629, 0x7460, 0xe96b, 0x96a6, 0x42d9, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa629, gbc.sp());
        EXPECT(0xa795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa794));
        // B5 016E
        gbc.setState(0xe533, 0xf9a5, 0xa9f0, 0xcc9, 0xd63e, 0x3947, 0x0, 0x1);
        gbc.writeMem(0xe533, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf9a5, gbc.sp());
        EXPECT(0xe534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe533));
        // B5 016F
        gbc.setState(0x56ad, 0x21e8, 0xf8f0, 0x9ba0, 0xb3a, 0x8fb2, 0x0, 0x0);
        gbc.writeMem(0x56ad, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x21e8, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0170
        gbc.setState(0xbfb5, 0x91ff, 0xbd30, 0x6732, 0xcdff, 0xfd73, 0x0, 0x1);
        gbc.writeMem(0xbfb5, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x91ff, gbc.sp());
        EXPECT(0xbfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbfb5));
        // B5 0171
        gbc.setState(0x4bc7, 0xe1d3, 0x6360, 0xa40f, 0x54ce, 0xad91, 0x1, 0x0);
        gbc.writeMem(0x4bc7, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0172
        gbc.setState(0xccbd, 0xb28d, 0x5d0, 0x7a18, 0xe32f, 0x4685, 0x0, 0x1);
        gbc.writeMem(0xccbd, { 0xb5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb28d, gbc.sp());
        EXPECT(0xccbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xccbd));
        // B5 0173
        gbc.setState(0xb272, 0xafe4, 0xc1a0, 0x2ee0, 0x3f83, 0x58ae, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xafe4, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb272));
        // B5 0174
        gbc.setState(0xe947, 0xc2db, 0xc450, 0xeb7f, 0x2481, 0xaf52, 0x0, 0x1);
        gbc.writeMem(0xe947, { 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc2db, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe947));
        // B5 0175
        gbc.setState(0xee36, 0xc3a1, 0xaf60, 0x8f15, 0x7aa1, 0x72ca, 0x1, 0x1);
        gbc.writeMem(0xee36, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0xee37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xee36));
        // B5 0176
        gbc.setState(0xec75, 0xe3ab, 0x36a0, 0xa390, 0x4a82, 0x17de, 0x0, 0x1);
        gbc.writeMem(0xec75, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe3ab, gbc.sp());
        EXPECT(0xec76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xec75));
        // B5 0177
        gbc.setState(0x8b, 0x26d6, 0xb7f0, 0x21c8, 0xfce3, 0x6eda, 0x0, 0x0);
        gbc.writeMem(0x8b, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0x8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0178
        gbc.setState(0xe51a, 0x421f, 0x3cb0, 0x4378, 0x2a38, 0xe9e8, 0x1, 0x0);
        gbc.writeMem(0xe51a, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x421f, gbc.sp());
        EXPECT(0xe51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe51a));
        // B5 0179
        gbc.setState(0x36ff, 0x1a7c, 0x87b0, 0x4eba, 0x62ea, 0xd6e6, 0x0, 0x1);
        gbc.writeMem(0x36ff, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1a7c, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 017A
        gbc.setState(0x6522, 0xd201, 0x5990, 0xdddf, 0x780a, 0x585, 0x1, 0x0);
        gbc.writeMem(0x6522, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 017B
        gbc.setState(0xe75c, 0x7ec9, 0x3000, 0xf1a8, 0xe8f2, 0xc22d, 0x1, 0x1);
        gbc.writeMem(0xe75c, { 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0xe75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe75c));
        // B5 017C
        gbc.setState(0xe828, 0x7068, 0xd320, 0x8a9a, 0xd4f6, 0xf078, 0x1, 0x1);
        gbc.writeMem(0xe828, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7068, gbc.sp());
        EXPECT(0xe829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe828));
        // B5 017E
        gbc.setState(0xa330, 0xdfe4, 0x7130, 0x4b5, 0xb2da, 0x98ee, 0x1, 0x0);
        gbc.writeMem(0xa330, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0xa331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa330));
        // B5 017F
        gbc.setState(0x77ba, 0x3fe2, 0x5090, 0x87d4, 0x8b79, 0x5fbf, 0x1, 0x1);
        gbc.writeMem(0x77ba, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3fe2, gbc.sp());
        EXPECT(0x77bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0180
        gbc.setState(0x275c, 0xebf6, 0x5b70, 0xd4be, 0x3972, 0x640, 0x0, 0x1);
        gbc.writeMem(0x275c, { 0xb5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0181
        gbc.setState(0x4fdd, 0xddba, 0x64d0, 0x7c42, 0x364e, 0x450e, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xddba, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0182
        gbc.setState(0x8b70, 0xf44b, 0x7920, 0x9669, 0x1d88, 0xf689, 0x1, 0x0);
        gbc.writeMem(0x8b70, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8b70));
        // B5 0183
        gbc.setState(0x25ef, 0x41a8, 0xe5d0, 0xb5f5, 0xe89e, 0x8263, 0x1, 0x1);
        gbc.writeMem(0x25ef, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x25f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0184
        gbc.setState(0xedb4, 0x458c, 0x910, 0xa5ca, 0xd85e, 0xfdee, 0x0, 0x0);
        gbc.writeMem(0xedb4, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xedb4));
        // B5 0185
        gbc.setState(0xbf3, 0xa73b, 0xf050, 0x8055, 0x70aa, 0xa5c1, 0x0, 0x0);
        gbc.writeMem(0xbf3, { 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa73b, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0186
        gbc.setState(0x913b, 0x1027, 0x88e0, 0x922c, 0x9c94, 0x2e2d, 0x0, 0x1);
        gbc.writeMem(0x913b, { 0xb5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1027, gbc.sp());
        EXPECT(0x913c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x913b));
        // B5 0187
        gbc.setState(0x98a9, 0xdef, 0x2170, 0x83df, 0xfa75, 0xc407, 0x0, 0x0);
        gbc.writeMem(0x98a9, { 0xb5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdef, gbc.sp());
        EXPECT(0x98aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98a9));
        // B5 0189
        gbc.setState(0x7806, 0xc24f, 0x7890, 0x259c, 0x6ed9, 0x979d, 0x0, 0x0);
        gbc.writeMem(0x7806, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc24f, gbc.sp());
        EXPECT(0x7807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 018A
        gbc.setState(0x52da, 0x7786, 0x2560, 0x973d, 0x9125, 0x14f9, 0x0, 0x0);
        gbc.writeMem(0x52da, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7786, gbc.sp());
        EXPECT(0x52db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 018B
        gbc.setState(0x6870, 0x14ff, 0x36d0, 0x7c1c, 0x5025, 0xb52, 0x0, 0x0);
        gbc.writeMem(0x6870, { 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0x6871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 018C
        gbc.setState(0xcb11, 0xdd38, 0x7840, 0x86d0, 0x89e7, 0x419d, 0x1, 0x0);
        gbc.writeMem(0xcb11, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0xcb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcb11));
        // B5 018D
        gbc.setState(0xa828, 0x1c4e, 0xe620, 0x8e0c, 0x9bad, 0xa3f7, 0x0, 0x1);
        gbc.writeMem(0xa828, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1c4e, gbc.sp());
        EXPECT(0xa829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa828));
        // B5 018E
        gbc.setState(0xb03c, 0x7451, 0x3230, 0xd421, 0x3ed5, 0x358c, 0x1, 0x0);
        gbc.writeMem(0xb03c, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7451, gbc.sp());
        EXPECT(0xb03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb03c));
        // B5 018F
        gbc.setState(0x9434, 0x50d8, 0x8110, 0x7572, 0xf288, 0xf735, 0x0, 0x0);
        gbc.writeMem(0x9434, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x50d8, gbc.sp());
        EXPECT(0x9435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9434));
        // B5 0190
        gbc.setState(0xdbd0, 0x8d75, 0xe1a0, 0x60ff, 0xa186, 0x9f63, 0x1, 0x0);
        gbc.writeMem(0xdbd0, { 0xb5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0xdbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdbd0));
        // B5 0191
        gbc.setState(0x723, 0x4f14, 0x1cc0, 0xb317, 0x6987, 0x697, 0x1, 0x1);
        gbc.writeMem(0x723, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4f14, gbc.sp());
        EXPECT(0x724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0192
        gbc.setState(0x82a7, 0x154f, 0x1f60, 0x73ab, 0x7678, 0x80d5, 0x1, 0x0);
        gbc.writeMem(0x82a7, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x154f, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x82a7));
        // B5 0193
        gbc.setState(0xae5f, 0x4c21, 0x7e10, 0xd96f, 0x69cb, 0x73da, 0x1, 0x0);
        gbc.writeMem(0xae5f, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xae5f));
        // B5 0194
        gbc.setState(0x6743, 0x25b2, 0x6bc0, 0xcece, 0x35cb, 0x94cf, 0x0, 0x1);
        gbc.writeMem(0x6743, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x6744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0195
        gbc.setState(0x5198, 0xc9fc, 0x9ad0, 0x23a7, 0x3c94, 0x7fd9, 0x1, 0x0);
        gbc.writeMem(0x5198, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0196
        gbc.setState(0x56a0, 0xbed1, 0x32f0, 0x8d22, 0xedfd, 0xfe2b, 0x1, 0x0);
        gbc.writeMem(0x56a0, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0197
        gbc.setState(0x8119, 0xc16f, 0xc710, 0xbbf2, 0x97bf, 0x811a, 0x1, 0x1);
        gbc.writeMem(0x8119, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x811a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8119));
        // B5 0198
        gbc.setState(0xd88d, 0xf256, 0xdb0, 0x3fe1, 0x85d4, 0x6a8c, 0x0, 0x0);
        gbc.writeMem(0xd88d, { 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf256, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd88d));
        // B5 0199
        gbc.setState(0xc8da, 0x7944, 0xfdf0, 0x1e63, 0x93a1, 0x3fd5, 0x0, 0x0);
        gbc.writeMem(0xc8da, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7944, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc8da));
        // B5 019A
        gbc.setState(0x54fd, 0x4068, 0xf740, 0x6979, 0xae70, 0x19b7, 0x1, 0x0);
        gbc.writeMem(0x54fd, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4068, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 019B
        gbc.setState(0xa00c, 0x3a34, 0x48f0, 0x16f, 0x8d17, 0x68fb, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3a34, gbc.sp());
        EXPECT(0xa00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa00c));
        // B5 019C
        gbc.setState(0x4b7b, 0xa185, 0xc630, 0x3d25, 0x5784, 0x7f04, 0x0, 0x0);
        gbc.writeMem(0x4b7b, { 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa185, gbc.sp());
        EXPECT(0x4b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 019D
        gbc.setState(0xe3d8, 0x45b7, 0x8660, 0xc027, 0x7b8e, 0xe50e, 0x1, 0x1);
        gbc.writeMem(0xe3d8, { 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe3d8));
        // B5 019E
        gbc.setState(0x9140, 0xbb76, 0xf870, 0xa904, 0x166f, 0x6163, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbb76, gbc.sp());
        EXPECT(0x9141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9140));
        // B5 019F
        gbc.setState(0x8375, 0xaa0c, 0x4a90, 0xfdcb, 0xfd12, 0x498b, 0x0, 0x0);
        gbc.writeMem(0x8375, { 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaa0c, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8375));
        // B5 01A0
        gbc.setState(0x1c4a, 0x582, 0x59c0, 0x39b2, 0x452f, 0xc995, 0x1, 0x1);
        gbc.writeMem(0x1c4a, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x1c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01A1
        gbc.setState(0xdb1f, 0x13a1, 0x4050, 0xf1c7, 0x24a9, 0x61aa, 0x0, 0x0);
        gbc.writeMem(0xdb1f, { 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0xdb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdb1f));
        // B5 01A2
        gbc.setState(0x9e71, 0xf9cf, 0xc030, 0x2971, 0xbf18, 0x9e1e, 0x0, 0x0);
        gbc.writeMem(0x9e71, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf9cf, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9e71));
        // B5 01A3
        gbc.setState(0x8327, 0x727c, 0xd1d0, 0xb728, 0xa3ee, 0xee1e, 0x0, 0x1);
        gbc.writeMem(0x8327, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x727c, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8327));
        // B5 01A4
        gbc.setState(0xefbf, 0xfbe3, 0xf600, 0x9a36, 0xae4d, 0x2699, 0x0, 0x0);
        gbc.writeMem(0xefbf, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfbe3, gbc.sp());
        EXPECT(0xefc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xefbf));
        // B5 01A5
        gbc.setState(0xa8d, 0x6fd9, 0x5bd0, 0xe72a, 0x6f3f, 0xed47, 0x0, 0x0);
        gbc.writeMem(0xa8d, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6fd9, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01A6
        gbc.setState(0x467f, 0xa36a, 0xf0d0, 0x6bab, 0xe2fc, 0x9eeb, 0x1, 0x0);
        gbc.writeMem(0x467f, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01A7
        gbc.setState(0xb4d7, 0xd9b1, 0x9d0, 0x498f, 0x6c52, 0x9f03, 0x1, 0x1);
        gbc.writeMem(0xb4d7, { 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd9b1, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb4d7));
        // B5 01A8
        gbc.setState(0x2621, 0xefa4, 0x7cb0, 0x7f2, 0x30f5, 0x16d8, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x2622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01A9
        gbc.setState(0x69c0, 0x7fd, 0x9b20, 0x667d, 0xbffc, 0xd775, 0x1, 0x1);
        gbc.writeMem(0x69c0, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01AA
        gbc.setState(0xe5b, 0xc216, 0xcec0, 0x5837, 0x4a4c, 0x8da0, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc216, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01AB
        gbc.setState(0x8d5f, 0x6ae4, 0x2b90, 0x73bc, 0x465e, 0x3d0b, 0x0, 0x1);
        gbc.writeMem(0x8d5f, { 0xb5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8d5f));
        // B5 01AC
        gbc.setState(0xd69c, 0x62b4, 0x9f40, 0x1548, 0x57e4, 0x8a2a, 0x0, 0x1);
        gbc.writeMem(0xd69c, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xd69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd69c));
        // B5 01AD
        gbc.setState(0xaca5, 0x5214, 0x5060, 0x2096, 0x23c6, 0x837a, 0x1, 0x0);
        gbc.writeMem(0xaca5, { 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaca5));
        // B5 01AE
        gbc.setState(0x3ffe, 0x796d, 0xd1a0, 0x40a2, 0x41b5, 0x45d5, 0x0, 0x0);
        gbc.writeMem(0x3ffe, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x796d, gbc.sp());
        EXPECT(0x3fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01AF
        gbc.setState(0xac61, 0x427a, 0x2650, 0x6954, 0x7ace, 0x3e5d, 0x1, 0x1);
        gbc.writeMem(0xac61, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0xac62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xac61));
        // B5 01B0
        gbc.setState(0x1aac, 0x6980, 0xfb0, 0xb2b2, 0x83c0, 0x7fe7, 0x1, 0x1);
        gbc.writeMem(0x1aac, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6980, gbc.sp());
        EXPECT(0x1aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01B1
        gbc.setState(0xe567, 0x4da8, 0xefb0, 0x347e, 0x4434, 0x3383, 0x1, 0x1);
        gbc.writeMem(0xe567, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4da8, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe567));
        // B5 01B2
        gbc.setState(0xb3f5, 0x50e3, 0x3ac0, 0xd6e7, 0x2ccf, 0x37af, 0x1, 0x0);
        gbc.writeMem(0xb3f5, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb3f5));
        // B5 01B3
        gbc.setState(0x6ee2, 0x80f7, 0x9db0, 0xd738, 0xb974, 0x7e03, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01B4
        gbc.setState(0x5467, 0xc084, 0xc170, 0x30ce, 0x32b4, 0x5243, 0x0, 0x1);
        gbc.writeMem(0x5467, { 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc084, gbc.sp());
        EXPECT(0x5468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01B5
        gbc.setState(0xd99f, 0xa553, 0x6750, 0xfae3, 0x6229, 0x1fa7, 0x0, 0x0);
        gbc.writeMem(0xd99f, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0xd9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd99f));
        // B5 01B6
        gbc.setState(0xe4c3, 0x3790, 0xf620, 0x8a52, 0x8851, 0x6e6, 0x0, 0x0);
        gbc.writeMem(0xe4c3, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3790, gbc.sp());
        EXPECT(0xe4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe4c3));
        // B5 01B7
        gbc.setState(0x8ed6, 0xc200, 0x68f0, 0x1956, 0x96cd, 0x418f, 0x1, 0x1);
        gbc.writeMem(0x8ed6, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc200, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8ed6));
        // B5 01B8
        gbc.setState(0x3685, 0xb891, 0x44f0, 0x54da, 0x7c50, 0x386e, 0x1, 0x0);
        gbc.writeMem(0x3685, { 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb891, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01BA
        gbc.setState(0xd1ab, 0x6149, 0xf6d0, 0x5d2, 0x802a, 0xdff6, 0x1, 0x0);
        gbc.writeMem(0xd1ab, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd1ab));
        // B5 01BB
        gbc.setState(0xb74a, 0x706a, 0x6430, 0x934d, 0xba6b, 0xdf58, 0x0, 0x1);
        gbc.writeMem(0xb74a, { 0xb5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x706a, gbc.sp());
        EXPECT(0xb74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb74a));
        // B5 01BC
        gbc.setState(0xcf81, 0xdbbc, 0xc560, 0xcfdd, 0x5867, 0x311f, 0x0, 0x1);
        gbc.writeMem(0xcf81, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdbbc, gbc.sp());
        EXPECT(0xcf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcf81));
        // B5 01BD
        gbc.setState(0xa26d, 0xd01e, 0x1e30, 0xa813, 0x2f85, 0x2e77, 0x0, 0x1);
        gbc.writeMem(0xa26d, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0xa26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa26d));
        // B5 01BE
        gbc.setState(0xa8b7, 0x30bc, 0x220, 0xb2a5, 0x2d87, 0x6e2, 0x0, 0x0);
        gbc.writeMem(0xa8b7, { 0xb5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0xa8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa8b7));
        // B5 01BF
        gbc.setState(0x7a63, 0x6be5, 0xb70, 0x6c34, 0x3ba4, 0x6c81, 0x1, 0x1);
        gbc.writeMem(0x7a63, { 0xb5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6be5, gbc.sp());
        EXPECT(0x7a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C0
        gbc.setState(0x3d84, 0xcdec, 0xd7f0, 0x4ac4, 0xba61, 0x5bfd, 0x0, 0x0);
        gbc.writeMem(0x3d84, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcdec, gbc.sp());
        EXPECT(0x3d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C1
        gbc.setState(0x1ed7, 0x7fbb, 0xaf70, 0x4b86, 0xbc64, 0xc3c8, 0x1, 0x1);
        gbc.writeMem(0x1ed7, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7fbb, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C2
        gbc.setState(0x2ab, 0x40a2, 0xed90, 0xda60, 0x93da, 0x2e71, 0x1, 0x0);
        gbc.writeMem(0x2ab, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x40a2, gbc.sp());
        EXPECT(0x2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C3
        gbc.setState(0x4f3c, 0x6cec, 0x3b40, 0xce6c, 0x67a7, 0x3151, 0x0, 0x0);
        gbc.writeMem(0x4f3c, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6cec, gbc.sp());
        EXPECT(0x4f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C4
        gbc.setState(0x9677, 0x1835, 0x26a0, 0xff9, 0xe6a8, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x9677, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9677));
        // B5 01C5
        gbc.setState(0x5325, 0xc015, 0xd580, 0xdc81, 0xf8e0, 0x8710, 0x1, 0x1);
        gbc.writeMem(0x5325, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x5326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C6
        gbc.setState(0xe553, 0x64e0, 0xce70, 0xd7f9, 0x5219, 0xf413, 0x0, 0x1);
        gbc.writeMem(0xe553, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x64e0, gbc.sp());
        EXPECT(0xe554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe553));
        // B5 01C7
        gbc.setState(0x7ba2, 0x5d7, 0x4e20, 0xe7f9, 0x934f, 0x7d07, 0x1, 0x1);
        gbc.writeMem(0x7ba2, { 0xb5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d7, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01C8
        gbc.setState(0x9c37, 0x8acb, 0x6240, 0xdb6a, 0xc72, 0x8c8c, 0x0, 0x1);
        gbc.writeMem(0x9c37, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0x9c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9c37));
        // B5 01C9
        gbc.setState(0xec4e, 0x8f50, 0x6200, 0x1c46, 0x12b7, 0x571f, 0x0, 0x0);
        gbc.writeMem(0xec4e, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0xec4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xec4e));
        // B5 01CA
        gbc.setState(0xc833, 0x6bf9, 0xaaa0, 0x5bd9, 0xc7f3, 0xfbe2, 0x1, 0x1);
        gbc.writeMem(0xc833, { 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0xc834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc833));
        // B5 01CC
        gbc.setState(0x3c3c, 0xe1fd, 0x9390, 0x30b5, 0x25d1, 0x6537, 0x1, 0x0);
        gbc.writeMem(0x3c3c, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe1fd, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01CD
        gbc.setState(0x6500, 0xc5b6, 0xd850, 0x9857, 0x1797, 0xa58f, 0x1, 0x0);
        gbc.writeMem(0x6500, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc5b6, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01CF
        gbc.setState(0x5874, 0x18ee, 0x2ef0, 0x2692, 0x794c, 0x21c1, 0x0, 0x0);
        gbc.writeMem(0x5874, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x18ee, gbc.sp());
        EXPECT(0x5875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D0
        gbc.setState(0xa42, 0x50e8, 0xe2a0, 0x83c8, 0xef65, 0xe5c6, 0x1, 0x1);
        gbc.writeMem(0xa42, { 0xb5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x50e8, gbc.sp());
        EXPECT(0xa43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D1
        gbc.setState(0xbff2, 0x6290, 0x2fe0, 0x72ff, 0x79a2, 0x603a, 0x1, 0x1);
        gbc.writeMem(0xbff2, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0xbff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbff2));
        // B5 01D2
        gbc.setState(0x13ea, 0xd9ab, 0x5f80, 0xe8c3, 0xd41e, 0x2c73, 0x1, 0x1);
        gbc.writeMem(0x13ea, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd9ab, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D5
        gbc.setState(0x89, 0xd993, 0x6980, 0x4170, 0xdbb9, 0xc801, 0x0, 0x0);
        gbc.writeMem(0x89, { 0xb5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd993, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D6
        gbc.setState(0x62a, 0x3139, 0xb2a0, 0xa71b, 0x251f, 0xff90, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3139, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D7
        gbc.setState(0xddf5, 0x7793, 0x7fc0, 0x5bb7, 0x53c7, 0x27fd, 0x0, 0x0);
        gbc.writeMem(0xddf5, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7793, gbc.sp());
        EXPECT(0xddf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xddf5));
        // B5 01D8
        gbc.setState(0x32ec, 0x4850, 0x6820, 0x908a, 0x1897, 0xf5a6, 0x1, 0x0);
        gbc.writeMem(0x32ec, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4850, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01D9
        gbc.setState(0x65ad, 0x7d48, 0x5f0, 0x942f, 0x8e73, 0x30c8, 0x1, 0x1);
        gbc.writeMem(0x65ad, { 0xb5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7d48, gbc.sp());
        EXPECT(0x65ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01DA
        gbc.setState(0x3a07, 0xce3f, 0x4480, 0x1b06, 0x18bd, 0x407, 0x0, 0x0);
        gbc.writeMem(0x3a07, { 0xb5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xce3f, gbc.sp());
        EXPECT(0x3a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01DB
        gbc.setState(0x6f22, 0x5fb9, 0xbf90, 0xe250, 0x62ad, 0x39c9, 0x1, 0x0);
        gbc.writeMem(0x6f22, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5fb9, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01DC
        gbc.setState(0xb628, 0xb668, 0x9250, 0xbe8b, 0xd92d, 0x7522, 0x1, 0x0);
        gbc.writeMem(0xb628, { 0xb5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb668, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb628));
        // B5 01DD
        gbc.setState(0xde96, 0xf15f, 0xe880, 0xe73e, 0x93be, 0x73ef, 0x0, 0x1);
        gbc.writeMem(0xde96, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xde97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xde96));
        // B5 01DE
        gbc.setState(0xe898, 0x9f3f, 0xb060, 0x1370, 0x4122, 0xc000, 0x0, 0x0);
        gbc.writeMem(0xe898, { 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9f3f, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe898));
        // B5 01DF
        gbc.setState(0x4cce, 0x84c2, 0xb9d0, 0xf1b4, 0xeb32, 0xec16, 0x0, 0x1);
        gbc.writeMem(0x4cce, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x84c2, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E0
        gbc.setState(0xab42, 0x4ee5, 0xb230, 0xc434, 0x36f5, 0x416a, 0x0, 0x0);
        gbc.writeMem(0xab42, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4ee5, gbc.sp());
        EXPECT(0xab43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xab42));
        // B5 01E1
        gbc.setState(0xb29b, 0xb11, 0x9560, 0xf4fd, 0xd7a4, 0xa5b9, 0x1, 0x1);
        gbc.writeMem(0xb29b, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0xb29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb29b));
        // B5 01E2
        gbc.setState(0x31f9, 0x3dcd, 0x8880, 0xd970, 0xa44c, 0x7f02, 0x1, 0x0);
        gbc.writeMem(0x31f9, { 0xb5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3dcd, gbc.sp());
        EXPECT(0x31fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E3
        gbc.setState(0x15a3, 0xf501, 0xc060, 0xf670, 0xef81, 0xd428, 0x1, 0x0);
        gbc.writeMem(0x15a3, { 0xb5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0x15a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E4
        gbc.setState(0x4f86, 0xae28, 0xd6d0, 0x7c9c, 0x2fe1, 0x57e7, 0x0, 0x0);
        gbc.writeMem(0x4f86, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae28, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E5
        gbc.setState(0xae0f, 0xf6b4, 0x8150, 0xe9ec, 0x7da5, 0x8682, 0x0, 0x0);
        gbc.writeMem(0xae0f, { 0xb5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf6b4, gbc.sp());
        EXPECT(0xae10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xae0f));
        // B5 01E7
        gbc.setState(0x786f, 0x38e9, 0x9800, 0x32ec, 0xc98b, 0x961b, 0x0, 0x0);
        gbc.writeMem(0x786f, { 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x38e9, gbc.sp());
        EXPECT(0x7870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E8
        gbc.setState(0x7de2, 0xb7bb, 0x48f0, 0x9422, 0x10ec, 0xe1fa, 0x0, 0x1);
        gbc.writeMem(0x7de2, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01E9
        gbc.setState(0x8744, 0x13c6, 0x56c0, 0xf0e, 0x18a7, 0xa01, 0x0, 0x0);
        gbc.writeMem(0x8744, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x13c6, gbc.sp());
        EXPECT(0x8745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8744));
        // B5 01EA
        gbc.setState(0x85f6, 0x2da8, 0xe630, 0xaba4, 0xdfb, 0x6830, 0x1, 0x0);
        gbc.writeMem(0x85f6, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x85f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x85f6));
        // B5 01EC
        gbc.setState(0xa0a8, 0x4e98, 0xd730, 0x7b07, 0x8db2, 0xf123, 0x0, 0x1);
        gbc.writeMem(0xa0a8, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4e98, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa0a8));
        // B5 01ED
        gbc.setState(0xd285, 0xb2be, 0x6b90, 0xcee3, 0x74c2, 0xd0af, 0x0, 0x1);
        gbc.writeMem(0xd285, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb2be, gbc.sp());
        EXPECT(0xd286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd285));
        // B5 01EE
        gbc.setState(0x5f98, 0xcdbb, 0x4b00, 0x3d3b, 0x8685, 0x59ee, 0x0, 0x0);
        gbc.writeMem(0x5f98, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01EF
        gbc.setState(0xaa6d, 0x418, 0x2c20, 0x2843, 0x3fdf, 0x622c, 0x1, 0x0);
        gbc.writeMem(0xaa6d, { 0xb5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaa6d));
        // B5 01F0
        gbc.setState(0xa217, 0x826c, 0x3a00, 0x7576, 0xdefb, 0xa8a9, 0x0, 0x0);
        gbc.writeMem(0xa217, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x826c, gbc.sp());
        EXPECT(0xa218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa217));
        // B5 01F1
        gbc.setState(0xebc3, 0xed6c, 0x72c0, 0x49a6, 0x9e7b, 0x2a3a, 0x0, 0x1);
        gbc.writeMem(0xebc3, { 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xed6c, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xebc3));
        // B5 01F2
        gbc.setState(0x8d5c, 0xdb17, 0xeb0, 0x5727, 0x4b1, 0xf856, 0x0, 0x1);
        gbc.writeMem(0x8d5c, { 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0x8d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8d5c));
        // B5 01F3
        gbc.setState(0x43aa, 0x2e59, 0xf270, 0x520f, 0x6d, 0xa8ab, 0x0, 0x0);
        gbc.writeMem(0x43aa, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x43ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01F4
        gbc.setState(0x7ae4, 0x6c24, 0xbd80, 0xdccc, 0x4d1d, 0x9feb, 0x1, 0x1);
        gbc.writeMem(0x7ae4, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0x7ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01F5
        gbc.setState(0x3fc3, 0xbe4c, 0x36e0, 0xb4f5, 0x404c, 0x4fa4, 0x0, 0x0);
        gbc.writeMem(0x3fc3, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbe4c, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01F6
        gbc.setState(0x37c2, 0xae7d, 0xfcd0, 0xc862, 0x70f6, 0xde83, 0x1, 0x1);
        gbc.writeMem(0x37c2, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xae7d, gbc.sp());
        EXPECT(0x37c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01F7
        gbc.setState(0xa65e, 0x8d0d, 0x8a40, 0x9d2d, 0x5059, 0x87a9, 0x1, 0x0);
        gbc.writeMem(0xa65e, { 0xb5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8d0d, gbc.sp());
        EXPECT(0xa65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa65e));
        // B5 01F8
        gbc.setState(0x46f8, 0xad6e, 0x57b0, 0x80ee, 0x91ed, 0xaf44, 0x1, 0x0);
        gbc.writeMem(0x46f8, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01F9
        gbc.setState(0xcea3, 0xe316, 0x820, 0x61d5, 0x6b09, 0x86b7, 0x1, 0x1);
        gbc.writeMem(0xcea3, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe316, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcea3));
        // B5 01FA
        gbc.setState(0xb871, 0xfae6, 0xa140, 0x9d44, 0xe28d, 0x5bb7, 0x1, 0x0);
        gbc.writeMem(0xb871, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfae6, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb871));
        // B5 01FB
        gbc.setState(0x97c2, 0xfafb, 0xc910, 0x5195, 0x73a3, 0xf25f, 0x0, 0x1);
        gbc.writeMem(0x97c2, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x97c2));
        // B5 01FC
        gbc.setState(0x6083, 0x6cd2, 0x9de0, 0xcb33, 0x3039, 0x470d, 0x1, 0x1);
        gbc.writeMem(0x6083, { 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6cd2, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01FD
        gbc.setState(0x4fd8, 0x4559, 0x6000, 0xa744, 0x613c, 0x80c6, 0x0, 0x0);
        gbc.writeMem(0x4fd8, { 0xb5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4559, gbc.sp());
        EXPECT(0x4fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 01FF
        gbc.setState(0x11c5, 0xb6f9, 0x4600, 0x6f87, 0xf0d4, 0x37ff, 0x1, 0x0);
        gbc.writeMem(0x11c5, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb6f9, gbc.sp());
        EXPECT(0x11c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0200
        gbc.setState(0xd636, 0xe781, 0xdab0, 0x865, 0x13f, 0x2ce7, 0x1, 0x0);
        gbc.writeMem(0xd636, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe781, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd636));
        // B5 0201
        gbc.setState(0x9f36, 0xbc8a, 0x37f0, 0xa8fb, 0xbffe, 0xa6e1, 0x0, 0x0);
        gbc.writeMem(0x9f36, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbc8a, gbc.sp());
        EXPECT(0x9f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9f36));
        // B5 0202
        gbc.setState(0x791a, 0x237, 0xd860, 0x10d4, 0x670e, 0x6c59, 0x0, 0x1);
        gbc.writeMem(0x791a, { 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x237, gbc.sp());
        EXPECT(0x791b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0203
        gbc.setState(0xb8dd, 0xe53e, 0xdf30, 0xb63f, 0xe3e9, 0xaa73, 0x1, 0x0);
        gbc.writeMem(0xb8dd, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe53e, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb8dd));
        // B5 0204
        gbc.setState(0xeb29, 0x19e8, 0x2690, 0xc8c6, 0xa775, 0x571c, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xb5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0xeb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xeb29));
        // B5 0205
        gbc.setState(0xa6bf, 0x791a, 0x3b00, 0x1792, 0x11f5, 0xbca, 0x0, 0x0);
        gbc.writeMem(0xa6bf, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x791a, gbc.sp());
        EXPECT(0xa6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa6bf));
        // B5 0206
        gbc.setState(0xcd, 0x23da, 0x7bd0, 0x7644, 0x1fab, 0x16, 0x1, 0x0);
        gbc.writeMem(0xcd, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x23da, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0207
        gbc.setState(0xb0af, 0x8e4f, 0x1320, 0x3a45, 0x70b7, 0x22fa, 0x0, 0x0);
        gbc.writeMem(0xb0af, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0xb0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb0af));
        // B5 0208
        gbc.setState(0x1293, 0x5d18, 0x3dd0, 0x89da, 0x27b3, 0x6fba, 0x0, 0x0);
        gbc.writeMem(0x1293, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0x1294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0209
        gbc.setState(0x4ce6, 0x8da2, 0xec10, 0x6bc8, 0xda44, 0x6288, 0x1, 0x0);
        gbc.writeMem(0x4ce6, { 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 020A
        gbc.setState(0x271e, 0xad99, 0xa4e0, 0x93cf, 0xde7, 0xcd31, 0x0, 0x0);
        gbc.writeMem(0x271e, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0x271f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 020B
        gbc.setState(0xd445, 0xa0ba, 0x8100, 0x4c24, 0x1f56, 0x4336, 0x0, 0x0);
        gbc.writeMem(0xd445, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa0ba, gbc.sp());
        EXPECT(0xd446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd445));
        // B5 020C
        gbc.setState(0x6283, 0x27df, 0x5f10, 0xbe84, 0x850e, 0x2f95, 0x1, 0x0);
        gbc.writeMem(0x6283, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27df, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 020D
        gbc.setState(0x76bf, 0x28d0, 0xd20, 0x47e6, 0xf9b1, 0xa5b4, 0x0, 0x1);
        gbc.writeMem(0x76bf, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x28d0, gbc.sp());
        EXPECT(0x76c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 020E
        gbc.setState(0x5418, 0x9441, 0x7c30, 0xd8f3, 0x4f27, 0x3931, 0x1, 0x1);
        gbc.writeMem(0x5418, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9441, gbc.sp());
        EXPECT(0x5419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 020F
        gbc.setState(0x531b, 0x9213, 0xe6f0, 0x66fd, 0x1fc3, 0xa640, 0x1, 0x1);
        gbc.writeMem(0x531b, { 0xb5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0x531c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0210
        gbc.setState(0x2009, 0x5ebb, 0x9ca0, 0xe3f2, 0x2fec, 0x2a19, 0x1, 0x1);
        gbc.writeMem(0x2009, { 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0x200a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0211
        gbc.setState(0xaabd, 0x628f, 0x42e0, 0xb006, 0xc326, 0xe8f, 0x0, 0x0);
        gbc.writeMem(0xaabd, { 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x628f, gbc.sp());
        EXPECT(0xaabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaabd));
        // B5 0212
        gbc.setState(0x7ee1, 0xd1c9, 0xef80, 0xa2a7, 0x3920, 0x10fc, 0x0, 0x0);
        gbc.writeMem(0x7ee1, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd1c9, gbc.sp());
        EXPECT(0x7ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0213
        gbc.setState(0x948f, 0x9c37, 0xa910, 0xe48, 0x26bf, 0x39b0, 0x1, 0x0);
        gbc.writeMem(0x948f, { 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c37, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x948f));
        // B5 0214
        gbc.setState(0x3b38, 0x5e55, 0x7af0, 0xbc7, 0xbc6d, 0xe7f2, 0x0, 0x1);
        gbc.writeMem(0x3b38, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e55, gbc.sp());
        EXPECT(0x3b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0215
        gbc.setState(0x7c21, 0x7725, 0x370, 0xbb3e, 0xf620, 0xae19, 0x1, 0x0);
        gbc.writeMem(0x7c21, { 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7725, gbc.sp());
        EXPECT(0x7c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0216
        gbc.setState(0x8521, 0x7a71, 0x6d10, 0x15a, 0xe4bb, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x8521, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7a71, gbc.sp());
        EXPECT(0x8522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8521));
        // B5 0217
        gbc.setState(0x1e38, 0xb66c, 0x1fe0, 0x629, 0x8918, 0x74ce, 0x0, 0x0);
        gbc.writeMem(0x1e38, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb66c, gbc.sp());
        EXPECT(0x1e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0218
        gbc.setState(0x5fbe, 0x4fbf, 0x3540, 0x49cc, 0x7a37, 0x7cdc, 0x0, 0x0);
        gbc.writeMem(0x5fbe, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4fbf, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0219
        gbc.setState(0x57ba, 0x61dc, 0xeef0, 0xc2cc, 0x3378, 0x3ea7, 0x1, 0x1);
        gbc.writeMem(0x57ba, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x61dc, gbc.sp());
        EXPECT(0x57bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 021A
        gbc.setState(0x8f1, 0x477c, 0x83a0, 0xd949, 0x2197, 0x6db3, 0x1, 0x0);
        gbc.writeMem(0x8f1, { 0xb5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 021B
        gbc.setState(0xe9a3, 0x6380, 0x5f70, 0xd5c8, 0x1389, 0x6188, 0x1, 0x1);
        gbc.writeMem(0xe9a3, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0xe9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe9a3));
        // B5 021C
        gbc.setState(0xde23, 0x4cd3, 0x4dd0, 0xb762, 0x94d0, 0xa02a, 0x1, 0x1);
        gbc.writeMem(0xde23, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4cd3, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xde23));
        // B5 021D
        gbc.setState(0x5def, 0x9c04, 0x9410, 0xe03e, 0x8f72, 0x2373, 0x0, 0x1);
        gbc.writeMem(0x5def, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9c04, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 021E
        gbc.setState(0x411d, 0x6f45, 0x28a0, 0xed8b, 0x2d98, 0x211f, 0x0, 0x1);
        gbc.writeMem(0x411d, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 021F
        gbc.setState(0x1f4, 0x5d29, 0xb410, 0x769e, 0x327c, 0x706b, 0x0, 0x0);
        gbc.writeMem(0x1f4, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5d29, gbc.sp());
        EXPECT(0x1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0220
        gbc.setState(0x614a, 0xaed, 0x3f30, 0x313b, 0xac63, 0xb20a, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0221
        gbc.setState(0x33b6, 0x98db, 0x7850, 0xef4, 0x42c1, 0xf3c9, 0x1, 0x0);
        gbc.writeMem(0x33b6, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x98db, gbc.sp());
        EXPECT(0x33b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0222
        gbc.setState(0x9704, 0xca9, 0xe3a0, 0x4983, 0x927, 0x300c, 0x0, 0x0);
        gbc.writeMem(0x9704, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0x9705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9704));
        // B5 0223
        gbc.setState(0xde51, 0xff0a, 0xd260, 0xb4a3, 0x48d0, 0x5d08, 0x0, 0x0);
        gbc.writeMem(0xde51, { 0xb5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xde51));
        // B5 0224
        gbc.setState(0x173b, 0xcdb5, 0x4490, 0x51a2, 0xc07a, 0xad5c, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0xb5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0225
        gbc.setState(0xe051, 0x60cf, 0x5c70, 0x19c7, 0xc630, 0xa19a, 0x0, 0x0);
        gbc.writeMem(0xe051, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x60cf, gbc.sp());
        EXPECT(0xe052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe051));
        // B5 0226
        gbc.setState(0xe30b, 0x66b0, 0x9450, 0xa2dd, 0x82c, 0x2c33, 0x1, 0x0);
        gbc.writeMem(0xe30b, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0xe30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe30b));
        // B5 0227
        gbc.setState(0x5163, 0x6681, 0x8c80, 0x89d1, 0x46c9, 0xbbe7, 0x1, 0x0);
        gbc.writeMem(0x5163, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x5164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0228
        gbc.setState(0x9d8b, 0xa03a, 0x92f0, 0xd41, 0x9451, 0x8a03, 0x0, 0x1);
        gbc.writeMem(0x9d8b, { 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa03a, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9d8b));
        // B5 0229
        gbc.setState(0x7611, 0x159, 0x3eb0, 0xc465, 0x3877, 0x1d3d, 0x1, 0x0);
        gbc.writeMem(0x7611, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0x7612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 022B
        gbc.setState(0xe093, 0xd60, 0x58a0, 0x6bfc, 0x7415, 0x4092, 0x1, 0x0);
        gbc.writeMem(0xe093, { 0xb5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd60, gbc.sp());
        EXPECT(0xe094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe093));
        // B5 022C
        gbc.setState(0x38f6, 0xf462, 0x4340, 0x3803, 0x8ea8, 0xe29a, 0x1, 0x1);
        gbc.writeMem(0x38f6, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf462, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 022D
        gbc.setState(0x14d6, 0xd60a, 0x70d0, 0x6de0, 0x4196, 0xf71d, 0x0, 0x0);
        gbc.writeMem(0x14d6, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd60a, gbc.sp());
        EXPECT(0x14d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 022E
        gbc.setState(0x89b9, 0x1e4a, 0xfb10, 0x666, 0xe136, 0x45a2, 0x0, 0x1);
        gbc.writeMem(0x89b9, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0x89ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x89b9));
        // B5 022F
        gbc.setState(0x12b5, 0x99d4, 0xd9d0, 0x8964, 0x2b01, 0x98bd, 0x1, 0x0);
        gbc.writeMem(0x12b5, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0230
        gbc.setState(0x9c01, 0x4246, 0x69a0, 0xdc6d, 0xd67b, 0xd295, 0x0, 0x1);
        gbc.writeMem(0x9c01, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0x9c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9c01));
        // B5 0231
        gbc.setState(0x8416, 0x8361, 0xc500, 0x66cd, 0x338, 0xf05e, 0x1, 0x0);
        gbc.writeMem(0x8416, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8361, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8416));
        // B5 0232
        gbc.setState(0xd06f, 0x5149, 0x2880, 0x4095, 0xfae, 0x864f, 0x0, 0x1);
        gbc.writeMem(0xd06f, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0xd070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd06f));
        // B5 0233
        gbc.setState(0x4374, 0x3ae5, 0xf140, 0x882b, 0x53e6, 0x468a, 0x1, 0x0);
        gbc.writeMem(0x4374, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3ae5, gbc.sp());
        EXPECT(0x4375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0234
        gbc.setState(0x111d, 0xe049, 0x4a50, 0x3ccc, 0xbb2e, 0x6693, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe049, gbc.sp());
        EXPECT(0x111e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0235
        gbc.setState(0x2360, 0x5ede, 0x7430, 0xdf7e, 0xffee, 0xd3f5, 0x1, 0x0);
        gbc.writeMem(0x2360, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5ede, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0236
        gbc.setState(0x1f8b, 0x39bf, 0x8760, 0x9df7, 0xfa9, 0xf04e, 0x1, 0x0);
        gbc.writeMem(0x1f8b, { 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0237
        gbc.setState(0x2938, 0xf81d, 0x2230, 0x5f82, 0xfeb5, 0x61f7, 0x0, 0x1);
        gbc.writeMem(0x2938, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0x2939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0238
        gbc.setState(0xc8a9, 0x5d84, 0x8430, 0x170f, 0x62a5, 0xa9ca, 0x1, 0x1);
        gbc.writeMem(0xc8a9, { 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5d84, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc8a9));
        // B5 0239
        gbc.setState(0x8c0c, 0xbdbf, 0xf800, 0x5b0a, 0x905f, 0xe531, 0x1, 0x1);
        gbc.writeMem(0x8c0c, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbdbf, gbc.sp());
        EXPECT(0x8c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8c0c));
        // B5 023B
        gbc.setState(0xb8b2, 0x8061, 0x3110, 0x3651, 0x4134, 0x1fd1, 0x0, 0x1);
        gbc.writeMem(0xb8b2, { 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8061, gbc.sp());
        EXPECT(0xb8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb8b2));
        // B5 023C
        gbc.setState(0x37c8, 0x1acd, 0x80, 0x11fa, 0x8277, 0x6901, 0x0, 0x0);
        gbc.writeMem(0x37c8, { 0xb5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1acd, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 023E
        gbc.setState(0xa99b, 0xce22, 0xd490, 0x3fa7, 0x461b, 0x2001, 0x1, 0x0);
        gbc.writeMem(0xa99b, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce22, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa99b));
        // B5 023F
        gbc.setState(0xa1d6, 0xf5ec, 0x9270, 0x8333, 0xbfcf, 0x637e, 0x1, 0x0);
        gbc.writeMem(0xa1d6, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa1d6));
        // B5 0240
        gbc.setState(0x1af6, 0xfd66, 0xedb0, 0x78ea, 0x6bf8, 0xcf36, 0x1, 0x1);
        gbc.writeMem(0x1af6, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfd66, gbc.sp());
        EXPECT(0x1af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0241
        gbc.setState(0x4841, 0x1eff, 0x66e0, 0xe544, 0x5efc, 0xde3c, 0x0, 0x0);
        gbc.writeMem(0x4841, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1eff, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0242
        gbc.setState(0x5c86, 0x194d, 0xd090, 0x64b1, 0x450e, 0x9f3c, 0x1, 0x1);
        gbc.writeMem(0x5c86, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x194d, gbc.sp());
        EXPECT(0x5c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0243
        gbc.setState(0x2454, 0x6845, 0xbdc0, 0xd399, 0x4ef4, 0x48a2, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6845, gbc.sp());
        EXPECT(0x2455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0245
        gbc.setState(0xce4, 0xb147, 0x5100, 0xe309, 0xc7e9, 0xc19e, 0x1, 0x1);
        gbc.writeMem(0xce4, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb147, gbc.sp());
        EXPECT(0xce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0246
        gbc.setState(0x1d1e, 0x53a3, 0xd1a0, 0xc729, 0xecb1, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0x1d1e, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0x1d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0247
        gbc.setState(0x604c, 0xe54e, 0xcfc0, 0x1112, 0x56c1, 0x3bb3, 0x1, 0x0);
        gbc.writeMem(0x604c, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe54e, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0248
        gbc.setState(0x520, 0xe8c6, 0xf800, 0xba78, 0xb36f, 0x49eb, 0x0, 0x0);
        gbc.writeMem(0x520, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe8c6, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0249
        gbc.setState(0x3a02, 0x7425, 0xe660, 0xc9a, 0xf02e, 0x8777, 0x0, 0x0);
        gbc.writeMem(0x3a02, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0x3a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 024A
        gbc.setState(0x91, 0x5369, 0xc5e0, 0x241d, 0x9776, 0x7ed5, 0x0, 0x0);
        gbc.writeMem(0x91, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5369, gbc.sp());
        EXPECT(0x92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 024B
        gbc.setState(0x9431, 0x7b0, 0x5af0, 0x205d, 0x2d8f, 0xa165, 0x1, 0x1);
        gbc.writeMem(0x9431, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b0, gbc.sp());
        EXPECT(0x9432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9431));
        // B5 024C
        gbc.setState(0xdbba, 0x63f, 0xd770, 0xb04a, 0x56ba, 0x4f4, 0x1, 0x1);
        gbc.writeMem(0xdbba, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x63f, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdbba));
        // B5 024D
        gbc.setState(0xedd0, 0x5b92, 0x85b0, 0xa455, 0x236a, 0xda36, 0x0, 0x1);
        gbc.writeMem(0xedd0, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5b92, gbc.sp());
        EXPECT(0xedd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xedd0));
        // B5 024E
        gbc.setState(0xe632, 0x5803, 0x28a0, 0x3763, 0x2b0b, 0x8ecc, 0x0, 0x1);
        gbc.writeMem(0xe632, { 0xb5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe632));
        // B5 024F
        gbc.setState(0x5852, 0x7e80, 0x41b0, 0xd08f, 0x6eb1, 0x5d74, 0x1, 0x0);
        gbc.writeMem(0x5852, { 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0250
        gbc.setState(0x777d, 0x4466, 0xace0, 0x75bf, 0xaefc, 0x5d28, 0x1, 0x0);
        gbc.writeMem(0x777d, { 0xb5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0251
        gbc.setState(0x22b1, 0x28e0, 0x42f0, 0x8366, 0xc106, 0xc8ec, 0x0, 0x0);
        gbc.writeMem(0x22b1, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0252
        gbc.setState(0x7046, 0xcad1, 0x2f20, 0x1b79, 0x733b, 0xcc4a, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcad1, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0253
        gbc.setState(0x9ccb, 0xb2fc, 0x7330, 0x9f9a, 0x5760, 0xb1b9, 0x1, 0x0);
        gbc.writeMem(0x9ccb, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb2fc, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9ccb));
        // B5 0254
        gbc.setState(0x5304, 0xf707, 0x8490, 0x5259, 0x6fed, 0xc7, 0x1, 0x1);
        gbc.writeMem(0x5304, { 0xb5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0255
        gbc.setState(0xb1fa, 0x5b5c, 0xa2e0, 0x3769, 0x1a50, 0x1d1d, 0x0, 0x0);
        gbc.writeMem(0xb1fa, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb1fa));
        // B5 0256
        gbc.setState(0x9f19, 0x8ff5, 0x3700, 0xed71, 0x9dde, 0x3cd5, 0x0, 0x0);
        gbc.writeMem(0x9f19, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0x9f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9f19));
        // B5 0257
        gbc.setState(0x2aa2, 0x2f36, 0x9fd0, 0x7c0d, 0xed1d, 0x6d6f, 0x1, 0x0);
        gbc.writeMem(0x2aa2, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x2aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0258
        gbc.setState(0x566, 0xa823, 0x3ba0, 0x7297, 0xb7e9, 0x3777, 0x0, 0x1);
        gbc.writeMem(0x566, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0259
        gbc.setState(0xa304, 0x2782, 0x5820, 0x1fb9, 0xc7e1, 0x47, 0x0, 0x0);
        gbc.writeMem(0xa304, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa304));
        // B5 025A
        gbc.setState(0x880b, 0x643f, 0xe200, 0x2ae, 0x1b9c, 0x8997, 0x0, 0x1);
        gbc.writeMem(0x880b, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x643f, gbc.sp());
        EXPECT(0x880c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x880b));
        // B5 025B
        gbc.setState(0xe96a, 0xbdd1, 0x10e0, 0x1111, 0x41af, 0x6182, 0x1, 0x0);
        gbc.writeMem(0xe96a, { 0xb5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe96a));
        // B5 025C
        gbc.setState(0x24e5, 0x370e, 0xe2f0, 0x72d1, 0x32bb, 0xe0bb, 0x1, 0x0);
        gbc.writeMem(0x24e5, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x24e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 025D
        gbc.setState(0x3cd0, 0x2e9c, 0x2910, 0x9467, 0x3ba2, 0x5ece, 0x1, 0x1);
        gbc.writeMem(0x3cd0, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2e9c, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 025E
        gbc.setState(0xce2c, 0x38a2, 0xe5b0, 0xa9bd, 0x6ee8, 0x48ad, 0x1, 0x1);
        gbc.writeMem(0xce2c, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x38a2, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce2c));
        // B5 025F
        gbc.setState(0x8578, 0x3b3f, 0x4be0, 0xd926, 0x6a8a, 0x7f42, 0x0, 0x0);
        gbc.writeMem(0x8578, { 0xb5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3b3f, gbc.sp());
        EXPECT(0x8579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8578));
        // B5 0260
        gbc.setState(0xc58d, 0x829a, 0xa630, 0x5d66, 0x6b28, 0x2408, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xb5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0xc58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc58d));
        // B5 0261
        gbc.setState(0xea8e, 0x67d, 0x5b30, 0x8cac, 0x2faa, 0xe6af, 0x0, 0x1);
        gbc.writeMem(0xea8e, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0xea8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xea8e));
        // B5 0262
        gbc.setState(0x640f, 0xd3d, 0x35a0, 0x68a7, 0xdea1, 0xb8df, 0x1, 0x0);
        gbc.writeMem(0x640f, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd3d, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0263
        gbc.setState(0x4dc, 0x1d85, 0x9130, 0x934, 0xdba2, 0x4468, 0x0, 0x1);
        gbc.writeMem(0x4dc, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0x4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0264
        gbc.setState(0xc241, 0xf7af, 0x4460, 0x43f, 0xa3ed, 0x68da, 0x0, 0x1);
        gbc.writeMem(0xc241, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf7af, gbc.sp());
        EXPECT(0xc242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc241));
        // B5 0265
        gbc.setState(0x2a12, 0xe8d2, 0x1b30, 0x33e5, 0x4834, 0xd827, 0x0, 0x0);
        gbc.writeMem(0x2a12, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe8d2, gbc.sp());
        EXPECT(0x2a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0266
        gbc.setState(0x8a49, 0x7b84, 0xc850, 0x581d, 0xbc2c, 0x3159, 0x1, 0x0);
        gbc.writeMem(0x8a49, { 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8a49));
        // B5 0267
        gbc.setState(0xceaf, 0x5a42, 0xf640, 0xdc9, 0x1413, 0x7230, 0x1, 0x1);
        gbc.writeMem(0xceaf, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5a42, gbc.sp());
        EXPECT(0xceb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xceaf));
        // B5 0269
        gbc.setState(0xd51d, 0x89c, 0x7a80, 0x33cf, 0x59d5, 0xc12b, 0x0, 0x0);
        gbc.writeMem(0xd51d, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0xd51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd51d));
        // B5 026A
        gbc.setState(0x867e, 0x6a1e, 0x4bf0, 0x2d76, 0xf7d5, 0xace8, 0x0, 0x1);
        gbc.writeMem(0x867e, { 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a1e, gbc.sp());
        EXPECT(0x867f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x867e));
        // B5 026B
        gbc.setState(0xad98, 0xb1cf, 0xbb90, 0x3d9b, 0x71b8, 0xb7ea, 0x0, 0x0);
        gbc.writeMem(0xad98, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb1cf, gbc.sp());
        EXPECT(0xad99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xad98));
        // B5 026C
        gbc.setState(0x7a2b, 0x3524, 0xa380, 0x64db, 0x903d, 0xf576, 0x0, 0x0);
        gbc.writeMem(0x7a2b, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 026D
        gbc.setState(0xae12, 0xb03d, 0xd00, 0x5fce, 0xd190, 0x739a, 0x0, 0x1);
        gbc.writeMem(0xae12, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb03d, gbc.sp());
        EXPECT(0xae13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xae12));
        // B5 026E
        gbc.setState(0x875, 0xf6a8, 0x1220, 0xb884, 0x375, 0x86f1, 0x0, 0x1);
        gbc.writeMem(0x875, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 026F
        gbc.setState(0x651, 0xce94, 0x66b0, 0xf9bf, 0x298, 0x206c, 0x0, 0x0);
        gbc.writeMem(0x651, { 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0x652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0270
        gbc.setState(0x9112, 0x897b, 0xb600, 0xbd97, 0x200e, 0xc121, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x897b, gbc.sp());
        EXPECT(0x9113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9112));
        // B5 0271
        gbc.setState(0x2caf, 0xbc45, 0x1b10, 0x7812, 0x8cbd, 0x2b, 0x1, 0x0);
        gbc.writeMem(0x2caf, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbc45, gbc.sp());
        EXPECT(0x2cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0272
        gbc.setState(0x550d, 0x8783, 0x64f0, 0x36a0, 0x402f, 0xd75a, 0x1, 0x1);
        gbc.writeMem(0x550d, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8783, gbc.sp());
        EXPECT(0x550e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0273
        gbc.setState(0xacb7, 0x33ad, 0xe960, 0x80b9, 0x22d3, 0x494e, 0x1, 0x1);
        gbc.writeMem(0xacb7, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0xacb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xacb7));
        // B5 0274
        gbc.setState(0x1b1c, 0x67ee, 0x7f90, 0x3ca4, 0x4736, 0x2a24, 0x1, 0x0);
        gbc.writeMem(0x1b1c, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0x1b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0275
        gbc.setState(0xcbf0, 0x5580, 0x8d50, 0x9f14, 0x641f, 0xa33c, 0x1, 0x0);
        gbc.writeMem(0xcbf0, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5580, gbc.sp());
        EXPECT(0xcbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcbf0));
        // B5 0276
        gbc.setState(0x33eb, 0x88b8, 0xa960, 0x2d2f, 0x386c, 0xe222, 0x1, 0x1);
        gbc.writeMem(0x33eb, { 0xb5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0277
        gbc.setState(0x1b37, 0x28d9, 0x4300, 0x5266, 0x950d, 0x8ab9, 0x1, 0x1);
        gbc.writeMem(0x1b37, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0278
        gbc.setState(0x2a12, 0xeb68, 0xe430, 0xef2a, 0x44ca, 0xc147, 0x1, 0x0);
        gbc.writeMem(0x2a12, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeb68, gbc.sp());
        EXPECT(0x2a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0279
        gbc.setState(0x5745, 0xb097, 0xa890, 0xd0d3, 0xce14, 0x1c9d, 0x0, 0x0);
        gbc.writeMem(0x5745, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb097, gbc.sp());
        EXPECT(0x5746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 027A
        gbc.setState(0xa8, 0xaf60, 0x8100, 0x7b58, 0x4fe1, 0xfe1d, 0x0, 0x1);
        gbc.writeMem(0xa8, { 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaf60, gbc.sp());
        EXPECT(0xa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 027B
        gbc.setState(0xe156, 0x7d93, 0x4410, 0xb7a, 0x6ad3, 0x5f9f, 0x0, 0x1);
        gbc.writeMem(0xe156, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7d93, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe156));
        // B5 027C
        gbc.setState(0x9662, 0xa02a, 0x7340, 0x5c04, 0x39d5, 0x1574, 0x0, 0x0);
        gbc.writeMem(0x9662, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa02a, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9662));
        // B5 027D
        gbc.setState(0x1d97, 0x3358, 0x9e50, 0xb1d3, 0x6816, 0x4c19, 0x0, 0x0);
        gbc.writeMem(0x1d97, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 027E
        gbc.setState(0x1fb5, 0x9c85, 0x9480, 0x8b19, 0x2688, 0x8052, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9c85, gbc.sp());
        EXPECT(0x1fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 027F
        gbc.setState(0xf55, 0x26d9, 0x3f40, 0x64b7, 0x405d, 0x9edd, 0x0, 0x1);
        gbc.writeMem(0xf55, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x26d9, gbc.sp());
        EXPECT(0xf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0281
        gbc.setState(0xb0f2, 0x5fd2, 0xe960, 0x71fd, 0x980e, 0x7bc8, 0x0, 0x1);
        gbc.writeMem(0xb0f2, { 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0xb0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb0f2));
        // B5 0282
        gbc.setState(0x301f, 0xaab7, 0x8a80, 0x753b, 0x43f7, 0x4ce4, 0x1, 0x1);
        gbc.writeMem(0x301f, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaab7, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0283
        gbc.setState(0x12ad, 0x285, 0xe390, 0x8f56, 0x2d1d, 0x259b, 0x1, 0x0);
        gbc.writeMem(0x12ad, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0x12ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0284
        gbc.setState(0x2487, 0x781e, 0x49d0, 0x3cb1, 0x7fd8, 0xb564, 0x1, 0x1);
        gbc.writeMem(0x2487, { 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x781e, gbc.sp());
        EXPECT(0x2488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0285
        gbc.setState(0x98d8, 0x1fcd, 0xcd70, 0xe61f, 0x745f, 0x7c4d, 0x0, 0x1);
        gbc.writeMem(0x98d8, { 0xb5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1fcd, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98d8));
        // B5 0286
        gbc.setState(0x7fad, 0xe0a8, 0xd660, 0xab73, 0xda8d, 0x4bd4, 0x0, 0x0);
        gbc.writeMem(0x7fad, { 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0287
        gbc.setState(0xcb7e, 0xab4e, 0x2d80, 0xaae6, 0x81fd, 0xaff3, 0x1, 0x0);
        gbc.writeMem(0xcb7e, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0xcb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcb7e));
        // B5 0288
        gbc.setState(0x48ed, 0xa805, 0x240, 0x3dac, 0x35db, 0x99c3, 0x0, 0x0);
        gbc.writeMem(0x48ed, { 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0x48ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0289
        gbc.setState(0xec7, 0x57b3, 0x7320, 0xf8c3, 0x3509, 0xf61a, 0x0, 0x0);
        gbc.writeMem(0xec7, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x57b3, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 028A
        gbc.setState(0xab0f, 0x9319, 0x7810, 0x3b9a, 0xa3c2, 0xe62e, 0x1, 0x1);
        gbc.writeMem(0xab0f, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9319, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xab0f));
        // B5 028B
        gbc.setState(0x65ee, 0x512d, 0x370, 0x8db5, 0x473a, 0x8de1, 0x1, 0x0);
        gbc.writeMem(0x65ee, { 0xb5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x65ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 028C
        gbc.setState(0x31de, 0xb330, 0x2700, 0xc6ae, 0x7735, 0x20b, 0x1, 0x0);
        gbc.writeMem(0x31de, { 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x31df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 028D
        gbc.setState(0x2a4a, 0x26ca, 0x6400, 0xa252, 0x4ac9, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0x2a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 028E
        gbc.setState(0x482, 0xc77b, 0xc710, 0x11e7, 0x82a9, 0xbf7f, 0x1, 0x0);
        gbc.writeMem(0x482, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc77b, gbc.sp());
        EXPECT(0x483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 028F
        gbc.setState(0x89a0, 0x31fb, 0xca70, 0x5ab6, 0xca02, 0xec0b, 0x1, 0x0);
        gbc.writeMem(0x89a0, { 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x31fb, gbc.sp());
        EXPECT(0x89a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x89a0));
        // B5 0290
        gbc.setState(0x9fc8, 0xba4, 0xe600, 0xc93d, 0xb3b5, 0xa8b7, 0x0, 0x1);
        gbc.writeMem(0x9fc8, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xba4, gbc.sp());
        EXPECT(0x9fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9fc8));
        // B5 0291
        gbc.setState(0xc3cc, 0x1e62, 0xa0d0, 0xda77, 0x44c1, 0x2da6, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0xb5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0xc3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc3cc));
        // B5 0292
        gbc.setState(0xa5ef, 0x9e, 0xcdb0, 0xca68, 0x76c3, 0x17b0, 0x0, 0x0);
        gbc.writeMem(0xa5ef, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5ef));
        // B5 0293
        gbc.setState(0xa907, 0x6598, 0x210, 0xbfbe, 0x9f52, 0x62dd, 0x0, 0x0);
        gbc.writeMem(0xa907, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0xa908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa907));
        // B5 0294
        gbc.setState(0x3d38, 0x6e68, 0x7d10, 0x33dc, 0x36c3, 0xc114, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6e68, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0295
        gbc.setState(0x4ac1, 0xace5, 0x1790, 0xb7df, 0xfdd4, 0x2d38, 0x0, 0x0);
        gbc.writeMem(0x4ac1, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x4ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0296
        gbc.setState(0x7764, 0xd54, 0x3070, 0xb29b, 0xe5be, 0x8a9e, 0x1, 0x1);
        gbc.writeMem(0x7764, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd54, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0297
        gbc.setState(0xec98, 0x9001, 0xf170, 0xe4db, 0x596f, 0xeea4, 0x0, 0x1);
        gbc.writeMem(0xec98, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9001, gbc.sp());
        EXPECT(0xec99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xec98));
        // B5 0298
        gbc.setState(0x80cf, 0x540f, 0x1a20, 0xaa5, 0xa18c, 0x1819, 0x0, 0x0);
        gbc.writeMem(0x80cf, { 0xb5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x80cf));
        // B5 0299
        gbc.setState(0x844f, 0x24d8, 0x98f0, 0x2655, 0xf1fc, 0x4adb, 0x0, 0x1);
        gbc.writeMem(0x844f, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x24d8, gbc.sp());
        EXPECT(0x8450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x844f));
        // B5 029A
        gbc.setState(0xc808, 0x4786, 0xce60, 0x5c0a, 0x4120, 0x9aae, 0x1, 0x0);
        gbc.writeMem(0xc808, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4786, gbc.sp());
        EXPECT(0xc809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc808));
        // B5 029B
        gbc.setState(0x5e36, 0xde44, 0xacc0, 0x86ab, 0x18fd, 0x851, 0x0, 0x1);
        gbc.writeMem(0x5e36, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde44, gbc.sp());
        EXPECT(0x5e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 029C
        gbc.setState(0xea93, 0x2ad9, 0x16a0, 0x762e, 0xb01, 0xe972, 0x1, 0x1);
        gbc.writeMem(0xea93, { 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2ad9, gbc.sp());
        EXPECT(0xea94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xea93));
        // B5 029D
        gbc.setState(0x94ce, 0x326c, 0x6000, 0x82c1, 0xea8c, 0xe3d, 0x1, 0x1);
        gbc.writeMem(0x94ce, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x326c, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x94ce));
        // B5 029F
        gbc.setState(0x7035, 0x155d, 0xdd60, 0x9099, 0x6382, 0x9cdf, 0x1, 0x0);
        gbc.writeMem(0x7035, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x155d, gbc.sp());
        EXPECT(0x7036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A0
        gbc.setState(0xeb44, 0x3b4f, 0x3300, 0xadf7, 0x4369, 0xc3f3, 0x1, 0x1);
        gbc.writeMem(0xeb44, { 0xb5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xeb44));
        // B5 02A1
        gbc.setState(0x2d57, 0x2ab1, 0xe8a0, 0x9b54, 0x3fef, 0xbf26, 0x1, 0x1);
        gbc.writeMem(0x2d57, { 0xb5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2ab1, gbc.sp());
        EXPECT(0x2d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A2
        gbc.setState(0x2d12, 0xff2b, 0x71b0, 0x38be, 0xa757, 0x902f, 0x0, 0x1);
        gbc.writeMem(0x2d12, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xff2b, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A3
        gbc.setState(0xd4a, 0x9155, 0x9d40, 0xe7e8, 0x4cf1, 0x9245, 0x1, 0x0);
        gbc.writeMem(0xd4a, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0xd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A4
        gbc.setState(0xb867, 0xfe30, 0xaa00, 0xc692, 0x86a8, 0x4678, 0x1, 0x1);
        gbc.writeMem(0xb867, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfe30, gbc.sp());
        EXPECT(0xb868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb867));
        // B5 02A5
        gbc.setState(0x2efa, 0x859c, 0xa40, 0x4c4e, 0xcaf9, 0x4c4, 0x1, 0x0);
        gbc.writeMem(0x2efa, { 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x859c, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A6
        gbc.setState(0x2c71, 0x450, 0x8740, 0xc436, 0xf395, 0x2451, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A7
        gbc.setState(0x14b9, 0x1f3b, 0x5ee0, 0x6650, 0x8657, 0x5e9c, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1f3b, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02A8
        gbc.setState(0xa5b7, 0xebd2, 0x5160, 0x9c5, 0x2765, 0xc91d, 0x1, 0x1);
        gbc.writeMem(0xa5b7, { 0xb5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xebd2, gbc.sp());
        EXPECT(0xa5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5b7));
        // B5 02A9
        gbc.setState(0x3bf, 0x6057, 0x9c0, 0xcf47, 0xea, 0xd20b, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6057, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02AA
        gbc.setState(0x9a67, 0x25bf, 0xccf0, 0x8e28, 0x3623, 0xb473, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0x9a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9a67));
        // B5 02AB
        gbc.setState(0xe54c, 0x2368, 0x8810, 0x19c3, 0x83d2, 0xf0b0, 0x0, 0x0);
        gbc.writeMem(0xe54c, { 0xb5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2368, gbc.sp());
        EXPECT(0xe54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe54c));
        // B5 02AC
        gbc.setState(0x4ce9, 0x26a8, 0xdd80, 0x72e4, 0x2eca, 0xce7c, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0x4cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02AD
        gbc.setState(0x7a53, 0x8f34, 0x5fa0, 0x5fc, 0xe9ac, 0x1607, 0x0, 0x0);
        gbc.writeMem(0x7a53, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8f34, gbc.sp());
        EXPECT(0x7a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02AE
        gbc.setState(0xaf65, 0xad3b, 0x9b00, 0xdacf, 0x510f, 0x17f0, 0x0, 0x0);
        gbc.writeMem(0xaf65, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0xaf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaf65));
        // B5 02AF
        gbc.setState(0x5f85, 0xd6dc, 0xd360, 0x2b02, 0x194e, 0xce48, 0x1, 0x0);
        gbc.writeMem(0x5f85, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B0
        gbc.setState(0xf3d, 0xb5c, 0x1d10, 0xe076, 0x23f4, 0x4de0, 0x0, 0x0);
        gbc.writeMem(0xf3d, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb5c, gbc.sp());
        EXPECT(0xf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B1
        gbc.setState(0xc32f, 0x43c5, 0x1a50, 0x2919, 0x9993, 0x13bd, 0x1, 0x1);
        gbc.writeMem(0xc32f, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x43c5, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc32f));
        // B5 02B2
        gbc.setState(0x7334, 0xf492, 0xc050, 0xe642, 0xeb77, 0x9c3c, 0x1, 0x0);
        gbc.writeMem(0x7334, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf492, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B3
        gbc.setState(0xe397, 0xafc0, 0x1d30, 0x2552, 0x2918, 0xca18, 0x0, 0x1);
        gbc.writeMem(0xe397, { 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0xe398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe397));
        // B5 02B4
        gbc.setState(0x1e01, 0xefe3, 0xd250, 0x550, 0x206e, 0x342, 0x0, 0x0);
        gbc.writeMem(0x1e01, { 0xb5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B5
        gbc.setState(0x7b5c, 0xf79a, 0xc2c0, 0xaf33, 0x65fd, 0xb53f, 0x1, 0x1);
        gbc.writeMem(0x7b5c, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf79a, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B6
        gbc.setState(0x5d43, 0x9d31, 0xb790, 0xf8c0, 0x7cf8, 0x1b7f, 0x1, 0x1);
        gbc.writeMem(0x5d43, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9d31, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B7
        gbc.setState(0x8681, 0xf3a8, 0x5bb0, 0xc346, 0x1f6a, 0x34c, 0x1, 0x1);
        gbc.writeMem(0x8681, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf3a8, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8681));
        // B5 02B8
        gbc.setState(0x371, 0x1958, 0x7f70, 0x99ef, 0x8b54, 0x64c7, 0x1, 0x0);
        gbc.writeMem(0x371, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0x372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02B9
        gbc.setState(0x3334, 0x66f7, 0xe300, 0x5af4, 0xe3b9, 0xe56d, 0x0, 0x0);
        gbc.writeMem(0x3334, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0x3335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02BA
        gbc.setState(0xce8f, 0x80dc, 0xfab0, 0x1a82, 0xc845, 0xe944, 0x1, 0x0);
        gbc.writeMem(0xce8f, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce8f));
        // B5 02BC
        gbc.setState(0x4251, 0xe975, 0xc80, 0xc10e, 0x29b2, 0x610, 0x1, 0x1);
        gbc.writeMem(0x4251, { 0xb5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe975, gbc.sp());
        EXPECT(0x4252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02BD
        gbc.setState(0xa5a9, 0xc4e9, 0x46c0, 0x3db9, 0x67, 0x5521, 0x0, 0x1);
        gbc.writeMem(0xa5a9, { 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc4e9, gbc.sp());
        EXPECT(0xa5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5a9));
        // B5 02BE
        gbc.setState(0x6bbf, 0xfcab, 0xa750, 0xdd6f, 0xc2fd, 0x538d, 0x1, 0x1);
        gbc.writeMem(0x6bbf, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfcab, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02BF
        gbc.setState(0x340c, 0xcbad, 0x5ef0, 0xd6d3, 0x9b44, 0x29ec, 0x0, 0x1);
        gbc.writeMem(0x340c, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C0
        gbc.setState(0xd1c6, 0x388e, 0xa930, 0x478b, 0x57c4, 0xa993, 0x0, 0x1);
        gbc.writeMem(0xd1c6, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x388e, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd1c6));
        // B5 02C1
        gbc.setState(0x9623, 0x7922, 0x18a0, 0x6c8e, 0xe232, 0xa028, 0x0, 0x1);
        gbc.writeMem(0x9623, { 0xb5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7922, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9623));
        // B5 02C2
        gbc.setState(0x41de, 0xdcee, 0x10a0, 0x1bf5, 0x17ae, 0x578c, 0x0, 0x1);
        gbc.writeMem(0x41de, { 0xb5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdcee, gbc.sp());
        EXPECT(0x41df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C3
        gbc.setState(0x80dc, 0xa70, 0xd4a0, 0xc05c, 0xe256, 0xfe49, 0x1, 0x0);
        gbc.writeMem(0x80dc, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x80dc));
        // B5 02C4
        gbc.setState(0x20bd, 0x7c8f, 0xd9b0, 0x47e, 0xc4f, 0x1aca, 0x1, 0x1);
        gbc.writeMem(0x20bd, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C5
        gbc.setState(0xd040, 0x2c, 0xebd0, 0x1105, 0x4a6d, 0xd7b7, 0x1, 0x0);
        gbc.writeMem(0xd040, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2c, gbc.sp());
        EXPECT(0xd041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd040));
        // B5 02C6
        gbc.setState(0x6bf6, 0xb4b4, 0x2680, 0xbf98, 0xf608, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0x6bf6, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x6bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C7
        gbc.setState(0x3a47, 0x41e4, 0x1620, 0xc042, 0xfed8, 0xb555, 0x0, 0x0);
        gbc.writeMem(0x3a47, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x41e4, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C8
        gbc.setState(0x73df, 0x8392, 0x5a0, 0x9751, 0xe378, 0xb569, 0x1, 0x0);
        gbc.writeMem(0x73df, { 0xb5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8392, gbc.sp());
        EXPECT(0x73e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02C9
        gbc.setState(0x5100, 0x2f85, 0x4830, 0x89a9, 0xd236, 0x8583, 0x1, 0x1);
        gbc.writeMem(0x5100, { 0xb5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f85, gbc.sp());
        EXPECT(0x5101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02CA
        gbc.setState(0x677, 0x9b09, 0x7640, 0x3809, 0xc530, 0x2679, 0x0, 0x0);
        gbc.writeMem(0x677, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b09, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02CB
        gbc.setState(0xd3f7, 0xddaa, 0x4170, 0xe33c, 0x2fe7, 0x412e, 0x1, 0x0);
        gbc.writeMem(0xd3f7, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0xd3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd3f7));
        // B5 02CC
        gbc.setState(0xa6b4, 0x1a31, 0xc220, 0x2e09, 0x9704, 0x88c4, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xb5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1a31, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa6b4));
        // B5 02CD
        gbc.setState(0x9833, 0x6b14, 0xed70, 0x9854, 0xae96, 0x15ff, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x9834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9833));
        // B5 02CE
        gbc.setState(0xaf78, 0xd6c9, 0xfe50, 0x394c, 0x4868, 0xc93c, 0x1, 0x0);
        gbc.writeMem(0xaf78, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0xaf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaf78));
        // B5 02CF
        gbc.setState(0x2b91, 0xafe, 0xb140, 0xa7e0, 0xc87f, 0x5819, 0x1, 0x0);
        gbc.writeMem(0x2b91, { 0xb5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xafe, gbc.sp());
        EXPECT(0x2b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02D0
        gbc.setState(0x9357, 0xe13e, 0xf740, 0xfcc3, 0xd565, 0xad75, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x9358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9357));
        // B5 02D1
        gbc.setState(0xc28, 0xabbc, 0x91e0, 0x31a1, 0xeed1, 0x2291, 0x1, 0x1);
        gbc.writeMem(0xc28, { 0xb5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xabbc, gbc.sp());
        EXPECT(0xc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02D2
        gbc.setState(0x72da, 0x3748, 0x9d10, 0x5af8, 0xa19b, 0xd460, 0x0, 0x1);
        gbc.writeMem(0x72da, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3748, gbc.sp());
        EXPECT(0x72db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02D3
        gbc.setState(0xaed0, 0x2141, 0x40b0, 0x3b3, 0xcd23, 0xbc9c, 0x1, 0x0);
        gbc.writeMem(0xaed0, { 0xb5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0xaed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaed0));
        // B5 02D4
        gbc.setState(0x4ec, 0xb6b3, 0x2930, 0x13fe, 0x2b99, 0xfe36, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb6b3, gbc.sp());
        EXPECT(0x4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02D5
        gbc.setState(0x9d87, 0x9c4, 0x78c0, 0x83d2, 0xf1f2, 0xa916, 0x1, 0x1);
        gbc.writeMem(0x9d87, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0x9d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9d87));
        // B5 02D6
        gbc.setState(0xe74b, 0x78d2, 0xdc50, 0x2b1d, 0x1b46, 0x2857, 0x1, 0x0);
        gbc.writeMem(0xe74b, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x78d2, gbc.sp());
        EXPECT(0xe74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe74b));
        // B5 02D7
        gbc.setState(0x5867, 0x4b58, 0x1a10, 0x1dcf, 0xc7a7, 0x53d6, 0x0, 0x1);
        gbc.writeMem(0x5867, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4b58, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02D8
        gbc.setState(0xe52a, 0x9e2f, 0x6320, 0xe99e, 0x3a4b, 0xfc07, 0x1, 0x0);
        gbc.writeMem(0xe52a, { 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe52a));
        // B5 02D9
        gbc.setState(0xc7d5, 0x323a, 0xc6a0, 0xdbb, 0xfa80, 0x6b55, 0x1, 0x1);
        gbc.writeMem(0xc7d5, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x323a, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc7d5));
        // B5 02DA
        gbc.setState(0x2d27, 0x9bf, 0xbdb0, 0x8581, 0x6a17, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0x2d27, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9bf, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02DB
        gbc.setState(0xcd1f, 0x8bbb, 0x6e30, 0xa326, 0x58db, 0x3701, 0x0, 0x0);
        gbc.writeMem(0xcd1f, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8bbb, gbc.sp());
        EXPECT(0xcd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcd1f));
        // B5 02DC
        gbc.setState(0x24ef, 0xd995, 0x3210, 0x8026, 0x6831, 0x94ba, 0x1, 0x0);
        gbc.writeMem(0x24ef, { 0xb5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd995, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02DD
        gbc.setState(0x2946, 0xb08d, 0xfdb0, 0x734d, 0x9ad4, 0xa57e, 0x1, 0x0);
        gbc.writeMem(0x2946, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x2947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02DE
        gbc.setState(0xd22, 0x3715, 0x3ee0, 0xb4cd, 0x787c, 0xd437, 0x1, 0x1);
        gbc.writeMem(0xd22, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3715, gbc.sp());
        EXPECT(0xd23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02DF
        gbc.setState(0x6221, 0x81c6, 0x2da0, 0x4435, 0x2c0e, 0x7b10, 0x1, 0x1);
        gbc.writeMem(0x6221, { 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x81c6, gbc.sp());
        EXPECT(0x6222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02E0
        gbc.setState(0x8924, 0x9e3c, 0x5fa0, 0x118, 0xb377, 0xc897, 0x0, 0x0);
        gbc.writeMem(0x8924, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9e3c, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8924));
        // B5 02E1
        gbc.setState(0x8c47, 0x4e4d, 0xec70, 0x9281, 0x2d45, 0x4227, 0x0, 0x0);
        gbc.writeMem(0x8c47, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4e4d, gbc.sp());
        EXPECT(0x8c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8c47));
        // B5 02E2
        gbc.setState(0xaa97, 0x37e0, 0x9a40, 0xe12e, 0x1314, 0x14ee, 0x1, 0x0);
        gbc.writeMem(0xaa97, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x37e0, gbc.sp());
        EXPECT(0xaa98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaa97));
        // B5 02E3
        gbc.setState(0xb083, 0xe4ed, 0xbf10, 0xffa3, 0x75d9, 0xf7f5, 0x1, 0x1);
        gbc.writeMem(0xb083, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe4ed, gbc.sp());
        EXPECT(0xb084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb083));
        // B5 02E5
        gbc.setState(0x7a53, 0xa00d, 0x66e0, 0x53ac, 0xd7ef, 0x952, 0x0, 0x0);
        gbc.writeMem(0x7a53, { 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa00d, gbc.sp());
        EXPECT(0x7a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02E6
        gbc.setState(0x408, 0x1985, 0x22a0, 0x5000, 0xb290, 0x7372, 0x0, 0x0);
        gbc.writeMem(0x408, { 0xb5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1985, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02E7
        gbc.setState(0x9542, 0x903c, 0xb430, 0xda0c, 0xbba8, 0xe451, 0x1, 0x0);
        gbc.writeMem(0x9542, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0x9543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9542));
        // B5 02E8
        gbc.setState(0x6339, 0xad92, 0xf7c0, 0x6299, 0x39c9, 0x4f3, 0x0, 0x1);
        gbc.writeMem(0x6339, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xad92, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02E9
        gbc.setState(0xa89b, 0x770f, 0x79e0, 0xfd48, 0xaa55, 0xefa, 0x0, 0x0);
        gbc.writeMem(0xa89b, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0xa89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa89b));
        // B5 02EA
        gbc.setState(0xa643, 0x5f73, 0x1930, 0xa523, 0xa0d6, 0x9b2a, 0x1, 0x0);
        gbc.writeMem(0xa643, { 0xb5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f73, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa643));
        // B5 02EB
        gbc.setState(0x950e, 0xc575, 0x4f80, 0x3755, 0xb6bd, 0x95df, 0x0, 0x0);
        gbc.writeMem(0x950e, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x950e));
        // B5 02EC
        gbc.setState(0xddad, 0xd681, 0x1170, 0x4c, 0x30b7, 0x79e6, 0x1, 0x1);
        gbc.writeMem(0xddad, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xddad));
        // B5 02ED
        gbc.setState(0x3f88, 0xf2e7, 0x60e0, 0xe48f, 0xa418, 0xe907, 0x0, 0x1);
        gbc.writeMem(0x3f88, { 0xb5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02EE
        gbc.setState(0xe0fd, 0xc39, 0x3e00, 0xa9e0, 0xdc3c, 0xb48, 0x1, 0x1);
        gbc.writeMem(0xe0fd, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc39, gbc.sp());
        EXPECT(0xe0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe0fd));
        // B5 02EF
        gbc.setState(0xb0f7, 0x248e, 0xb890, 0x94aa, 0xfe58, 0x5e59, 0x1, 0x0);
        gbc.writeMem(0xb0f7, { 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0xb0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb0f7));
        // B5 02F0
        gbc.setState(0xc080, 0xf0e1, 0xd290, 0xdfe4, 0x9cb6, 0x2364, 0x0, 0x0);
        gbc.writeMem(0xc080, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf0e1, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc080));
        // B5 02F1
        gbc.setState(0x1d4c, 0xb27f, 0x8cb0, 0xd029, 0xddca, 0xcc7, 0x0, 0x1);
        gbc.writeMem(0x1d4c, { 0xb5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0x1d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02F2
        gbc.setState(0xac3, 0x9087, 0xcfd0, 0xef4, 0xb86e, 0x9a17, 0x0, 0x1);
        gbc.writeMem(0xac3, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9087, gbc.sp());
        EXPECT(0xac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02F3
        gbc.setState(0x8bf6, 0x9c2c, 0x76f0, 0x31b4, 0xc6d2, 0x42c7, 0x1, 0x1);
        gbc.writeMem(0x8bf6, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8bf6));
        // B5 02F4
        gbc.setState(0x9aa4, 0xba11, 0xe7e0, 0x4e8e, 0x450b, 0xbd0c, 0x1, 0x1);
        gbc.writeMem(0x9aa4, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xba11, gbc.sp());
        EXPECT(0x9aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9aa4));
        // B5 02F5
        gbc.setState(0x6d09, 0xc07a, 0x4080, 0x5e97, 0xfd5, 0x6ad7, 0x0, 0x0);
        gbc.writeMem(0x6d09, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02F6
        gbc.setState(0x2b2b, 0xfa2c, 0x68d0, 0x94bc, 0x9ca1, 0x53a2, 0x0, 0x0);
        gbc.writeMem(0x2b2b, { 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa2c, gbc.sp());
        EXPECT(0x2b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02F7
        gbc.setState(0x874e, 0x3ad0, 0xb3c0, 0x33e7, 0xf23d, 0x4aa9, 0x1, 0x0);
        gbc.writeMem(0x874e, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3ad0, gbc.sp());
        EXPECT(0x874f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x874e));
        // B5 02F8
        gbc.setState(0x579, 0x570e, 0x9520, 0x73e5, 0x67b2, 0xf672, 0x1, 0x1);
        gbc.writeMem(0x579, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x570e, gbc.sp());
        EXPECT(0x57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02F9
        gbc.setState(0xdaeb, 0xdb36, 0x7280, 0xe95a, 0x82c4, 0x1e94, 0x1, 0x1);
        gbc.writeMem(0xdaeb, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0xdaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdaeb));
        // B5 02FA
        gbc.setState(0xd204, 0xa678, 0x8c70, 0xbc60, 0x3b2c, 0xff81, 0x0, 0x0);
        gbc.writeMem(0xd204, { 0xb5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa678, gbc.sp());
        EXPECT(0xd205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd204));
        // B5 02FB
        gbc.setState(0x968f, 0x5b8b, 0x3fb0, 0x1b81, 0x6be9, 0x7a86, 0x0, 0x1);
        gbc.writeMem(0x968f, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0x9690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x968f));
        // B5 02FC
        gbc.setState(0xbdb1, 0xad71, 0xb8c0, 0x5c3b, 0x5bf6, 0x66e5, 0x1, 0x1);
        gbc.writeMem(0xbdb1, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xad71, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbdb1));
        // B5 02FD
        gbc.setState(0x9c6, 0x5bbd, 0x9190, 0xccb1, 0x1919, 0xc75, 0x1, 0x0);
        gbc.writeMem(0x9c6, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5bbd, gbc.sp());
        EXPECT(0x9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 02FE
        gbc.setState(0xb9f9, 0xfe0d, 0xf8b0, 0xfc30, 0x2a7f, 0xb905, 0x0, 0x0);
        gbc.writeMem(0xb9f9, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfe0d, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb9f9));
        // B5 02FF
        gbc.setState(0x39c8, 0x37f6, 0x3f0, 0xd05d, 0x3754, 0xaa34, 0x1, 0x1);
        gbc.writeMem(0x39c8, { 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x37f6, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0300
        gbc.setState(0x1efc, 0x767d, 0xd7f0, 0xf53c, 0x767b, 0x27b, 0x1, 0x1);
        gbc.writeMem(0x1efc, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x767d, gbc.sp());
        EXPECT(0x1efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0301
        gbc.setState(0x2d6a, 0x5773, 0xe220, 0x5ca7, 0xd49c, 0x7145, 0x0, 0x0);
        gbc.writeMem(0x2d6a, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x2d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0302
        gbc.setState(0x7f24, 0xa874, 0xf620, 0xb919, 0xb4cc, 0x8d5d, 0x0, 0x1);
        gbc.writeMem(0x7f24, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0303
        gbc.setState(0x2c7a, 0x908b, 0x6d80, 0xf260, 0x46e1, 0x64ea, 0x1, 0x0);
        gbc.writeMem(0x2c7a, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0304
        gbc.setState(0x4a9c, 0x1797, 0x5350, 0xd223, 0x76ed, 0x1669, 0x0, 0x0);
        gbc.writeMem(0x4a9c, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1797, gbc.sp());
        EXPECT(0x4a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0305
        gbc.setState(0x8e57, 0xd249, 0xea0, 0x165c, 0x1c2, 0x35d3, 0x0, 0x1);
        gbc.writeMem(0x8e57, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd249, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8e57));
        // B5 0306
        gbc.setState(0x1ff9, 0x17ba, 0x3260, 0xf66, 0x2079, 0x1635, 0x0, 0x1);
        gbc.writeMem(0x1ff9, { 0xb5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0x1ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0307
        gbc.setState(0x5ed8, 0x59f6, 0x7110, 0x5f8e, 0xed6, 0x8e04, 0x1, 0x0);
        gbc.writeMem(0x5ed8, { 0xb5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x59f6, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 030A
        gbc.setState(0xed9c, 0x87db, 0x1fe0, 0xb6ba, 0xe67a, 0xd670, 0x1, 0x0);
        gbc.writeMem(0xed9c, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87db, gbc.sp());
        EXPECT(0xed9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xed9c));
        // B5 030B
        gbc.setState(0x9add, 0x4d5e, 0x9a80, 0x1833, 0x3738, 0xc1ed, 0x1, 0x1);
        gbc.writeMem(0x9add, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d5e, gbc.sp());
        EXPECT(0x9ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9add));
        // B5 030C
        gbc.setState(0x1813, 0x7844, 0x4bf0, 0x7168, 0xf755, 0x573f, 0x0, 0x0);
        gbc.writeMem(0x1813, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7844, gbc.sp());
        EXPECT(0x1814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 030D
        gbc.setState(0xe39d, 0xcb78, 0x9770, 0xe736, 0xd393, 0x387, 0x0, 0x0);
        gbc.writeMem(0xe39d, { 0xb5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcb78, gbc.sp());
        EXPECT(0xe39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe39d));
        // B5 030E
        gbc.setState(0xcf55, 0xde95, 0x8210, 0x2d3e, 0xa209, 0xda6d, 0x1, 0x1);
        gbc.writeMem(0xcf55, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xde95, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcf55));
        // B5 030F
        gbc.setState(0xd6b5, 0xaa0e, 0xf620, 0x5d74, 0x59a, 0x4b42, 0x1, 0x0);
        gbc.writeMem(0xd6b5, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaa0e, gbc.sp());
        EXPECT(0xd6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd6b5));
        // B5 0310
        gbc.setState(0x372b, 0x655c, 0x4c20, 0x81e6, 0xe3f4, 0x9b0a, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0311
        gbc.setState(0xc066, 0xec49, 0x1d70, 0xbc5e, 0x5e33, 0x4342, 0x1, 0x1);
        gbc.writeMem(0xc066, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc066));
        // B5 0312
        gbc.setState(0xce3b, 0x32c6, 0x69b0, 0x3f1c, 0x23f2, 0x7f92, 0x0, 0x1);
        gbc.writeMem(0xce3b, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x32c6, gbc.sp());
        EXPECT(0xce3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce3b));
        // B5 0313
        gbc.setState(0xce8c, 0x83d1, 0xf630, 0x8ae, 0x14de, 0xc2b3, 0x1, 0x1);
        gbc.writeMem(0xce8c, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x83d1, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce8c));
        // B5 0314
        gbc.setState(0xb866, 0x4548, 0x1850, 0x45e5, 0x9c36, 0x1949, 0x1, 0x0);
        gbc.writeMem(0xb866, { 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4548, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb866));
        // B5 0315
        gbc.setState(0xb4d3, 0x1c0c, 0xa1e0, 0x1e9c, 0x4be0, 0xfdfe, 0x1, 0x0);
        gbc.writeMem(0xb4d3, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1c0c, gbc.sp());
        EXPECT(0xb4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb4d3));
        // B5 0316
        gbc.setState(0xbaaf, 0xc5f8, 0x9400, 0x49eb, 0x5347, 0xaa11, 0x0, 0x0);
        gbc.writeMem(0xbaaf, { 0xb5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc5f8, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbaaf));
        // B5 0318
        gbc.setState(0xd878, 0xaa40, 0x1f70, 0x5df0, 0xd8e, 0x7dc8, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaa40, gbc.sp());
        EXPECT(0xd879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd878));
        // B5 031B
        gbc.setState(0x95ee, 0xca89, 0xbf0, 0x9c8a, 0x4411, 0x13dc, 0x1, 0x1);
        gbc.writeMem(0x95ee, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xca89, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x95ee));
        // B5 031C
        gbc.setState(0x5a6, 0x10d2, 0xe410, 0x27b3, 0xa9da, 0x7e9b, 0x1, 0x0);
        gbc.writeMem(0x5a6, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0x5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 031D
        gbc.setState(0x9f03, 0xa6eb, 0x4700, 0xaabd, 0xc7f1, 0xe871, 0x0, 0x0);
        gbc.writeMem(0x9f03, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0x9f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9f03));
        // B5 031E
        gbc.setState(0xc7f3, 0x751e, 0x5cc0, 0xf70a, 0x7839, 0x7b37, 0x0, 0x1);
        gbc.writeMem(0xc7f3, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc7f3));
        // B5 031F
        gbc.setState(0xeb90, 0x7ad7, 0x51f0, 0x57ed, 0x5743, 0xf72a, 0x0, 0x1);
        gbc.writeMem(0xeb90, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0xeb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xeb90));
        // B5 0320
        gbc.setState(0xb9f2, 0x3705, 0x8790, 0x22b3, 0x6125, 0xf73c, 0x0, 0x0);
        gbc.writeMem(0xb9f2, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb9f2));
        // B5 0321
        gbc.setState(0xc33f, 0x844a, 0x98f0, 0x766e, 0xfda2, 0x76f8, 0x1, 0x0);
        gbc.writeMem(0xc33f, { 0xb5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc33f));
        // B5 0322
        gbc.setState(0x4d7, 0xc36c, 0x9440, 0xefa0, 0xf97b, 0x907e, 0x1, 0x1);
        gbc.writeMem(0x4d7, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0x4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0323
        gbc.setState(0xb05e, 0xb431, 0x7820, 0xa333, 0x240e, 0x1b14, 0x1, 0x0);
        gbc.writeMem(0xb05e, { 0xb5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0xb05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb05e));
        // B5 0324
        gbc.setState(0x4d65, 0x2378, 0x8250, 0x5a59, 0x20ba, 0x8606, 0x0, 0x1);
        gbc.writeMem(0x4d65, { 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x4d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0325
        gbc.setState(0x409f, 0xba54, 0xed80, 0xc467, 0x8e19, 0x4d53, 0x0, 0x0);
        gbc.writeMem(0x409f, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xba54, gbc.sp());
        EXPECT(0x40a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0326
        gbc.setState(0x9a6f, 0xa556, 0xbaf0, 0x9515, 0x6816, 0xa0d1, 0x0, 0x0);
        gbc.writeMem(0x9a6f, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9a6f));
        // B5 0327
        gbc.setState(0x7795, 0x7e0a, 0xf0, 0xb3a8, 0x204b, 0xc1fb, 0x0, 0x0);
        gbc.writeMem(0x7795, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e0a, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0328
        gbc.setState(0xe62, 0x3dad, 0xe120, 0x9611, 0x3f2a, 0x3536, 0x0, 0x0);
        gbc.writeMem(0xe62, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0xe63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0329
        gbc.setState(0x57f7, 0x29fc, 0xf730, 0x88da, 0x423f, 0xdee9, 0x1, 0x1);
        gbc.writeMem(0x57f7, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x29fc, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 032A
        gbc.setState(0x6883, 0xf72b, 0x1ee0, 0x2d37, 0xc77d, 0xc59d, 0x0, 0x0);
        gbc.writeMem(0x6883, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0x6884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 032B
        gbc.setState(0x4301, 0x507a, 0xa8a0, 0x7f91, 0x2690, 0x5943, 0x1, 0x0);
        gbc.writeMem(0x4301, { 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 032C
        gbc.setState(0x71be, 0x82e5, 0x3960, 0x87c1, 0x95b9, 0x12ea, 0x1, 0x0);
        gbc.writeMem(0x71be, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 032D
        gbc.setState(0x6f79, 0xc261, 0xf8f0, 0x6d72, 0xdfd9, 0x569c, 0x1, 0x1);
        gbc.writeMem(0x6f79, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc261, gbc.sp());
        EXPECT(0x6f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 032E
        gbc.setState(0xb6a6, 0x61da, 0x2ea0, 0xc578, 0x1315, 0x33b6, 0x0, 0x0);
        gbc.writeMem(0xb6a6, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x61da, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb6a6));
        // B5 032F
        gbc.setState(0xb852, 0x6e2f, 0x4150, 0x39bb, 0xc5b0, 0xb925, 0x1, 0x0);
        gbc.writeMem(0xb852, { 0xb5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0xb853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb852));
        // B5 0330
        gbc.setState(0x8457, 0xee24, 0x11c0, 0x896a, 0x243b, 0xd268, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xee24, gbc.sp());
        EXPECT(0x8458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8457));
        // B5 0331
        gbc.setState(0xa8c9, 0xdc8, 0x9c80, 0xe4b9, 0xfe8b, 0x5b4e, 0x1, 0x0);
        gbc.writeMem(0xa8c9, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdc8, gbc.sp());
        EXPECT(0xa8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa8c9));
        // B5 0332
        gbc.setState(0x98a2, 0x1c40, 0xabb0, 0x5906, 0xdc2e, 0xc9cd, 0x0, 0x0);
        gbc.writeMem(0x98a2, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0x98a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x98a2));
        // B5 0333
        gbc.setState(0x2216, 0xf0c2, 0x5010, 0xb26d, 0xdc72, 0xd686, 0x1, 0x1);
        gbc.writeMem(0x2216, { 0xb5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0334
        gbc.setState(0xc863, 0x65b4, 0x4d10, 0x6107, 0x8474, 0x4bd5, 0x0, 0x0);
        gbc.writeMem(0xc863, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65b4, gbc.sp());
        EXPECT(0xc864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc863));
        // B5 0335
        gbc.setState(0x77e3, 0x343d, 0xd50, 0x7712, 0x1bf4, 0x141b, 0x0, 0x1);
        gbc.writeMem(0x77e3, { 0xb5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0337
        gbc.setState(0xef92, 0x3cc2, 0xd840, 0xb98e, 0xfea8, 0xdcaa, 0x0, 0x1);
        gbc.writeMem(0xef92, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3cc2, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xef92));
        // B5 0338
        gbc.setState(0x25ce, 0x68b0, 0xcd00, 0xc02b, 0x1bb2, 0xe5d4, 0x0, 0x1);
        gbc.writeMem(0x25ce, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0x25cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0339
        gbc.setState(0x4030, 0x2e7f, 0xe130, 0x7a15, 0x3423, 0x60ff, 0x0, 0x0);
        gbc.writeMem(0x4030, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 033A
        gbc.setState(0x93ff, 0xb762, 0xe990, 0xba28, 0x1406, 0xa9c3, 0x1, 0x0);
        gbc.writeMem(0x93ff, { 0xb5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0x9400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x93ff));
        // B5 033B
        gbc.setState(0xa762, 0xe1c0, 0xa2a0, 0xcfc7, 0x4917, 0xb927, 0x0, 0x0);
        gbc.writeMem(0xa762, { 0xb5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0xa763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa762));
        // B5 033C
        gbc.setState(0x5776, 0xc0a2, 0x76b0, 0x869d, 0x2df5, 0x509e, 0x0, 0x1);
        gbc.writeMem(0x5776, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 033D
        gbc.setState(0x2dcb, 0xd228, 0xe00, 0x70fe, 0x89f6, 0xd924, 0x1, 0x0);
        gbc.writeMem(0x2dcb, { 0xb5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 033F
        gbc.setState(0x6710, 0xdc9f, 0x4ef0, 0xc25b, 0x78c1, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0x6710, { 0xb5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0x6711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0340
        gbc.setState(0xced1, 0x24be, 0x6e80, 0x1996, 0xaa70, 0x4b4d, 0x1, 0x0);
        gbc.writeMem(0xced1, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x24be, gbc.sp());
        EXPECT(0xced2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xced1));
        // B5 0341
        gbc.setState(0x6a25, 0xe51d, 0xa6d0, 0xd761, 0x69fa, 0x8d71, 0x1, 0x1);
        gbc.writeMem(0x6a25, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe51d, gbc.sp());
        EXPECT(0x6a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0342
        gbc.setState(0xb216, 0x304d, 0x62b0, 0x46c9, 0x7ac3, 0x4921, 0x0, 0x0);
        gbc.writeMem(0xb216, { 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb216));
        // B5 0344
        gbc.setState(0xcbcd, 0xe018, 0x3380, 0x4d29, 0x1410, 0xeebe, 0x1, 0x1);
        gbc.writeMem(0xcbcd, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe018, gbc.sp());
        EXPECT(0xcbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcbcd));
        // B5 0345
        gbc.setState(0xcd78, 0x3d46, 0x9980, 0x2f2f, 0x5628, 0xb68d, 0x1, 0x0);
        gbc.writeMem(0xcd78, { 0xb5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0xcd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcd78));
        // B5 0346
        gbc.setState(0xb845, 0xc1aa, 0x8240, 0x4247, 0xdef4, 0xd734, 0x1, 0x0);
        gbc.writeMem(0xb845, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc1aa, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb845));
        // B5 0347
        gbc.setState(0x202, 0x2fb, 0xc6c0, 0xedf3, 0x896e, 0xaa70, 0x0, 0x0);
        gbc.writeMem(0x202, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0348
        gbc.setState(0x7f2c, 0x726b, 0xa570, 0x2319, 0xe7a3, 0x2c30, 0x0, 0x0);
        gbc.writeMem(0x7f2c, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0349
        gbc.setState(0xa732, 0x41e9, 0xc950, 0xba92, 0x3a72, 0x6d55, 0x1, 0x0);
        gbc.writeMem(0xa732, { 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x41e9, gbc.sp());
        EXPECT(0xa733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa732));
        // B5 034A
        gbc.setState(0xaaf3, 0xd7ca, 0xd2f0, 0x36da, 0x1bda, 0xebc7, 0x0, 0x0);
        gbc.writeMem(0xaaf3, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd7ca, gbc.sp());
        EXPECT(0xaaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xaaf3));
        // B5 034B
        gbc.setState(0x173d, 0x5612, 0x3480, 0x9e90, 0x93bb, 0x620d, 0x1, 0x1);
        gbc.writeMem(0x173d, { 0xb5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5612, gbc.sp());
        EXPECT(0x173e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 034C
        gbc.setState(0xcd, 0x2cd3, 0xecd0, 0xfab6, 0x1290, 0x2d3c, 0x0, 0x1);
        gbc.writeMem(0xcd, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0xce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 034D
        gbc.setState(0x4e62, 0x9fb4, 0x7e10, 0x4637, 0x459a, 0x6ae2, 0x1, 0x0);
        gbc.writeMem(0x4e62, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0x4e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 034E
        gbc.setState(0xa1c2, 0xa951, 0x8180, 0x4924, 0x3b32, 0x8f54, 0x0, 0x1);
        gbc.writeMem(0xa1c2, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa1c2));
        // B5 0350
        gbc.setState(0x2d66, 0xb318, 0x6bd0, 0x4de9, 0x266f, 0x9fa7, 0x1, 0x1);
        gbc.writeMem(0x2d66, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb318, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0351
        gbc.setState(0x91b3, 0x273e, 0xba40, 0xa661, 0x699a, 0xbe21, 0x0, 0x0);
        gbc.writeMem(0x91b3, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x273e, gbc.sp());
        EXPECT(0x91b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x91b3));
        // B5 0352
        gbc.setState(0x9a7b, 0xc312, 0x76b0, 0x90d0, 0xfe46, 0x7f7d, 0x0, 0x0);
        gbc.writeMem(0x9a7b, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0x9a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9a7b));
        // B5 0354
        gbc.setState(0xe69f, 0x179f, 0x92f0, 0x59f3, 0x2d3e, 0x354f, 0x1, 0x1);
        gbc.writeMem(0xe69f, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe69f));
        // B5 0355
        gbc.setState(0x9c5d, 0x917a, 0x2840, 0xc8e1, 0xee93, 0xc12f, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x917a, gbc.sp());
        EXPECT(0x9c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9c5d));
        // B5 0356
        gbc.setState(0x1279, 0xd307, 0xfd50, 0xd3c5, 0x19e6, 0xc467, 0x1, 0x0);
        gbc.writeMem(0x1279, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd307, gbc.sp());
        EXPECT(0x127a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0357
        gbc.setState(0x75f3, 0xa83f, 0x55e0, 0xfc4a, 0xf45e, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0x75f3, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0358
        gbc.setState(0x9d42, 0xc7f0, 0xfeb0, 0xdb1, 0xfcc6, 0x405d, 0x0, 0x1);
        gbc.writeMem(0x9d42, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9d42));
        // B5 0359
        gbc.setState(0x8c2d, 0xa71, 0x9840, 0xb566, 0x1b89, 0x6b1b, 0x1, 0x0);
        gbc.writeMem(0x8c2d, { 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa71, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8c2d));
        // B5 035A
        gbc.setState(0x34fc, 0x16cf, 0x4940, 0xc46e, 0x2ae, 0xe550, 0x0, 0x1);
        gbc.writeMem(0x34fc, { 0xb5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x16cf, gbc.sp());
        EXPECT(0x34fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 035C
        gbc.setState(0xffd, 0x6d6e, 0xa360, 0x7fe3, 0xbec9, 0xe8a1, 0x0, 0x0);
        gbc.writeMem(0xffd, { 0xb5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0xffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 035D
        gbc.setState(0x912f, 0xc2e4, 0x42d0, 0x3c0, 0x8b21, 0x57b9, 0x0, 0x1);
        gbc.writeMem(0x912f, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0x9130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x912f));
        // B5 035E
        gbc.setState(0x3821, 0xee0b, 0xc260, 0x1a07, 0x2e61, 0x544e, 0x1, 0x1);
        gbc.writeMem(0x3821, { 0xb5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee0b, gbc.sp());
        EXPECT(0x3822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 035F
        gbc.setState(0xd27, 0x9a2e, 0x8e50, 0x4c32, 0x8b54, 0x2606, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xb5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9a2e, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0360
        gbc.setState(0x6f7d, 0xf20, 0xa090, 0x3f0a, 0xfbdd, 0x6369, 0x0, 0x0);
        gbc.writeMem(0x6f7d, { 0xb5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0x6f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0361
        gbc.setState(0x6ba0, 0x3573, 0x8130, 0xbd06, 0xe67, 0x6c6d, 0x0, 0x1);
        gbc.writeMem(0x6ba0, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3573, gbc.sp());
        EXPECT(0x6ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0363
        gbc.setState(0x3fd3, 0x663, 0x8950, 0x376f, 0xc4be, 0x7309, 0x0, 0x1);
        gbc.writeMem(0x3fd3, { 0xb5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x663, gbc.sp());
        EXPECT(0x3fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0364
        gbc.setState(0x617f, 0xa78c, 0x6ba0, 0x8149, 0xa334, 0x9933, 0x1, 0x0);
        gbc.writeMem(0x617f, { 0xb5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0x6180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0365
        gbc.setState(0x87d8, 0xef2a, 0xcde0, 0x7c99, 0x6e91, 0x553a, 0x0, 0x1);
        gbc.writeMem(0x87d8, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xef2a, gbc.sp());
        EXPECT(0x87d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x87d8));
        // B5 0366
        gbc.setState(0x3bdc, 0x1e5f, 0xe310, 0xa88f, 0x2c17, 0xf5ae, 0x0, 0x1);
        gbc.writeMem(0x3bdc, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0367
        gbc.setState(0x55ba, 0x121b, 0xa90, 0x6af7, 0xff58, 0x87ad, 0x1, 0x1);
        gbc.writeMem(0x55ba, { 0xb5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0x55bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0368
        gbc.setState(0xb03e, 0xdefa, 0xcad0, 0xe02a, 0xc762, 0x2968, 0x1, 0x1);
        gbc.writeMem(0xb03e, { 0xb5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb03e));
        // B5 0369
        gbc.setState(0x920a, 0x97d9, 0x20d0, 0x40b5, 0x5775, 0x338a, 0x0, 0x1);
        gbc.writeMem(0x920a, { 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97d9, gbc.sp());
        EXPECT(0x920b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x920a));
        // B5 036A
        gbc.setState(0xe641, 0x4964, 0xae80, 0xd6b3, 0xa041, 0xb482, 0x0, 0x1);
        gbc.writeMem(0xe641, { 0xb5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4964, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe641));
        // B5 036B
        gbc.setState(0xdda6, 0x2218, 0x4230, 0x765, 0x570, 0x4257, 0x0, 0x1);
        gbc.writeMem(0xdda6, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2218, gbc.sp());
        EXPECT(0xdda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdda6));
        // B5 036C
        gbc.setState(0x6dfb, 0xb1f, 0x6590, 0xadc0, 0x2565, 0x298b, 0x0, 0x0);
        gbc.writeMem(0x6dfb, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 036D
        gbc.setState(0xc689, 0x32e1, 0x4730, 0xe38f, 0x625e, 0xb552, 0x1, 0x0);
        gbc.writeMem(0xc689, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x32e1, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc689));
        // B5 036E
        gbc.setState(0xc284, 0x330d, 0x6490, 0x31ec, 0x53a7, 0x91d0, 0x0, 0x1);
        gbc.writeMem(0xc284, { 0xb5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x330d, gbc.sp());
        EXPECT(0xc285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc284));
        // B5 036F
        gbc.setState(0x4e72, 0xc723, 0x1840, 0xbf28, 0xae2d, 0x7f0e, 0x0, 0x1);
        gbc.writeMem(0x4e72, { 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x4e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0370
        gbc.setState(0xc744, 0xfdc4, 0x1690, 0xf0e9, 0xa934, 0x3b08, 0x1, 0x1);
        gbc.writeMem(0xc744, { 0xb5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc744));
        // B5 0371
        gbc.setState(0xb432, 0x3491, 0x6c30, 0xb0c5, 0xb5c0, 0x694f, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3491, gbc.sp());
        EXPECT(0xb433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb432));
        // B5 0372
        gbc.setState(0x9ce8, 0x71f8, 0xd370, 0x261d, 0xe7b6, 0x5a3b, 0x0, 0x1);
        gbc.writeMem(0x9ce8, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x71f8, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9ce8));
        // B5 0373
        gbc.setState(0x3efc, 0x87e9, 0xb5d0, 0x2006, 0x32f7, 0x3ac6, 0x0, 0x0);
        gbc.writeMem(0x3efc, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0x3efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0374
        gbc.setState(0x9ba5, 0xf1c2, 0x34f0, 0x5aea, 0x4b8, 0xfb53, 0x1, 0x1);
        gbc.writeMem(0x9ba5, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf1c2, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9ba5));
        // B5 0375
        gbc.setState(0x51a0, 0xaef4, 0x59e0, 0x40d7, 0xefee, 0xacd7, 0x1, 0x1);
        gbc.writeMem(0x51a0, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaef4, gbc.sp());
        EXPECT(0x51a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0376
        gbc.setState(0x65dc, 0x2ed4, 0xe6c0, 0xc045, 0xb58b, 0xfd55, 0x0, 0x0);
        gbc.writeMem(0x65dc, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0x65dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0377
        gbc.setState(0x754c, 0xfe6f, 0x6650, 0xa670, 0x7e7e, 0xe9f2, 0x0, 0x1);
        gbc.writeMem(0x754c, { 0xb5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfe6f, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0378
        gbc.setState(0x92ad, 0x9357, 0x7170, 0x8140, 0x8b8, 0xbbd, 0x0, 0x0);
        gbc.writeMem(0x92ad, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x92ad));
        // B5 0379
        gbc.setState(0xe6ed, 0x9762, 0xea80, 0x87d2, 0xc0e4, 0xc732, 0x1, 0x1);
        gbc.writeMem(0xe6ed, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9762, gbc.sp());
        EXPECT(0xe6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe6ed));
        // B5 037A
        gbc.setState(0xa4e1, 0x3341, 0x6870, 0x7f0e, 0x5be4, 0x47dc, 0x0, 0x1);
        gbc.writeMem(0xa4e1, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0xa4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa4e1));
        // B5 037B
        gbc.setState(0x3e14, 0x4af5, 0xb2a0, 0x2d02, 0x9a9f, 0xcdbc, 0x0, 0x1);
        gbc.writeMem(0x3e14, { 0xb5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4af5, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 037C
        gbc.setState(0x49f, 0x7e2c, 0x6180, 0xa3b2, 0x8e4a, 0x2013, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0xb5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7e2c, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 037D
        gbc.setState(0xc40d, 0x53bd, 0x3850, 0x5074, 0xbdb2, 0xa6ec, 0x1, 0x0);
        gbc.writeMem(0xc40d, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x53bd, gbc.sp());
        EXPECT(0xc40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc40d));
        // B5 037E
        gbc.setState(0xccf6, 0x2ab4, 0xd9d0, 0xb86a, 0x8520, 0xa3c, 0x0, 0x1);
        gbc.writeMem(0xccf6, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ab4, gbc.sp());
        EXPECT(0xccf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xccf6));
        // B5 037F
        gbc.setState(0x1ea5, 0x3763, 0xf0, 0x546b, 0x5950, 0xbfe7, 0x1, 0x0);
        gbc.writeMem(0x1ea5, { 0xb5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3763, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0380
        gbc.setState(0xd066, 0x4799, 0xea70, 0x2294, 0x9044, 0xc73c, 0x1, 0x1);
        gbc.writeMem(0xd066, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4799, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd066));
        // B5 0381
        gbc.setState(0x2cae, 0xf33d, 0xc990, 0x1f2f, 0x4bd8, 0x34de, 0x0, 0x0);
        gbc.writeMem(0x2cae, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0382
        gbc.setState(0xccb1, 0xd228, 0x2540, 0x8a93, 0x66cb, 0xdcb3, 0x1, 0x1);
        gbc.writeMem(0xccb1, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0xccb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xccb1));
        // B5 0383
        gbc.setState(0x21, 0x2d00, 0x99f0, 0x9e80, 0xc803, 0xbb6a, 0x1, 0x0);
        gbc.writeMem(0x21, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2d00, gbc.sp());
        EXPECT(0x22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0384
        gbc.setState(0xcf21, 0xdffe, 0xff30, 0xeb06, 0xcf74, 0x47ab, 0x0, 0x0);
        gbc.writeMem(0xcf21, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdffe, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcf21));
        // B5 0385
        gbc.setState(0xce84, 0x627e, 0x9b30, 0x1166, 0xce2b, 0x18a0, 0x1, 0x0);
        gbc.writeMem(0xce84, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x627e, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce84));
        // B5 0386
        gbc.setState(0x5d67, 0xb9f5, 0xfba0, 0x805b, 0x5bd9, 0xab87, 0x0, 0x1);
        gbc.writeMem(0x5d67, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0x5d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0387
        gbc.setState(0xc0f0, 0x45fa, 0xa0d0, 0x8cda, 0xdf92, 0x652a, 0x1, 0x1);
        gbc.writeMem(0xc0f0, { 0xb5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc0f0));
        // B5 0388
        gbc.setState(0x5c8b, 0x86c6, 0xd9a0, 0x2716, 0x8fbd, 0x5324, 0x0, 0x0);
        gbc.writeMem(0x5c8b, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x86c6, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0389
        gbc.setState(0xcf23, 0x6541, 0xbc00, 0x2de3, 0x1152, 0x1431, 0x0, 0x0);
        gbc.writeMem(0xcf23, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcf23));
        // B5 038A
        gbc.setState(0x8910, 0x6fca, 0xc510, 0xb9fb, 0x208d, 0xf606, 0x0, 0x1);
        gbc.writeMem(0x8910, { 0xb5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6fca, gbc.sp());
        EXPECT(0x8911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8910));
        // B5 038C
        gbc.setState(0x6651, 0x6854, 0x4e20, 0x50d1, 0xbb8a, 0x630c, 0x0, 0x1);
        gbc.writeMem(0x6651, { 0xb5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6854, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 038D
        gbc.setState(0xc364, 0x7c72, 0x94c0, 0x1deb, 0x1d1, 0x7be9, 0x1, 0x0);
        gbc.writeMem(0xc364, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7c72, gbc.sp());
        EXPECT(0xc365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc364));
        // B5 038E
        gbc.setState(0x377c, 0x7711, 0xd6f0, 0xa089, 0x6d80, 0xebec, 0x1, 0x0);
        gbc.writeMem(0x377c, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x377d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 038F
        gbc.setState(0x8ee6, 0x9731, 0x2610, 0x2a2e, 0xacb, 0xebcd, 0x0, 0x0);
        gbc.writeMem(0x8ee6, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9731, gbc.sp());
        EXPECT(0x8ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8ee6));
        // B5 0390
        gbc.setState(0x5fe0, 0xc3ad, 0x7ee0, 0xab55, 0xf81f, 0xbeac, 0x1, 0x0);
        gbc.writeMem(0x5fe0, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc3ad, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0391
        gbc.setState(0x7340, 0x1c12, 0x8130, 0x90c9, 0x144d, 0xf59, 0x0, 0x0);
        gbc.writeMem(0x7340, { 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c12, gbc.sp());
        EXPECT(0x7341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0392
        gbc.setState(0x8285, 0xf776, 0xe080, 0x6c94, 0xbd08, 0x869b, 0x0, 0x1);
        gbc.writeMem(0x8285, { 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0x8286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8285));
        // B5 0393
        gbc.setState(0xabb1, 0xb4b7, 0x9bf0, 0xb52b, 0xecaf, 0xa7d7, 0x0, 0x0);
        gbc.writeMem(0xabb1, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xabb1));
        // B5 0395
        gbc.setState(0x147, 0xf690, 0xd8a0, 0xe0a5, 0xde0c, 0xb535, 0x1, 0x1);
        gbc.writeMem(0x147, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf690, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0396
        gbc.setState(0xa5f2, 0xc916, 0x3240, 0xb317, 0xd2a2, 0xb448, 0x0, 0x0);
        gbc.writeMem(0xa5f2, { 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc916, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5f2));
        // B5 0397
        gbc.setState(0x1456, 0x9093, 0x7700, 0x5bca, 0x6e28, 0xc793, 0x1, 0x0);
        gbc.writeMem(0x1456, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9093, gbc.sp());
        EXPECT(0x1457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0398
        gbc.setState(0x72b4, 0xa1ea, 0x1970, 0x348a, 0x442f, 0x1045, 0x0, 0x0);
        gbc.writeMem(0x72b4, { 0xb5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 0399
        gbc.setState(0x5118, 0xc495, 0xa4d0, 0x6f08, 0xa137, 0xafd5, 0x0, 0x0);
        gbc.writeMem(0x5118, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc495, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 039A
        gbc.setState(0x5366, 0xbca1, 0x2140, 0xff72, 0xb6a3, 0x2d2c, 0x1, 0x1);
        gbc.writeMem(0x5366, { 0xb5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbca1, gbc.sp());
        EXPECT(0x5367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 039B
        gbc.setState(0x8143, 0xb81, 0x8e10, 0x536b, 0x856b, 0xade7, 0x1, 0x1);
        gbc.writeMem(0x8143, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8143));
        // B5 039C
        gbc.setState(0xceb5, 0xeb1b, 0xbfb0, 0xe47b, 0xacf5, 0x571f, 0x1, 0x1);
        gbc.writeMem(0xceb5, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0xceb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xceb5));
        // B5 039D
        gbc.setState(0x56e0, 0xc355, 0x3cd0, 0x2179, 0x1c56, 0xda0b, 0x0, 0x0);
        gbc.writeMem(0x56e0, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc355, gbc.sp());
        EXPECT(0x56e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 039E
        gbc.setState(0x3223, 0xdc40, 0xea60, 0xc9e5, 0xd7f4, 0x8592, 0x0, 0x1);
        gbc.writeMem(0x3223, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc40, gbc.sp());
        EXPECT(0x3224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 039F
        gbc.setState(0xdb2d, 0x16ee, 0xbb20, 0x6863, 0xe190, 0x278c, 0x1, 0x0);
        gbc.writeMem(0xdb2d, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdb2d));
        // B5 03A0
        gbc.setState(0x5fc9, 0xce26, 0xabc0, 0x360a, 0xe0d2, 0x3244, 0x0, 0x1);
        gbc.writeMem(0x5fc9, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xce26, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A1
        gbc.setState(0xdf73, 0xfb4, 0x5b40, 0xc37, 0x1dd6, 0xdf54, 0x0, 0x1);
        gbc.writeMem(0xdf73, { 0xb5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfb4, gbc.sp());
        EXPECT(0xdf74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdf73));
        // B5 03A2
        gbc.setState(0x6a6a, 0x9088, 0x64e0, 0x54d6, 0x3672, 0xce28, 0x0, 0x0);
        gbc.writeMem(0x6a6a, { 0xb5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9088, gbc.sp());
        EXPECT(0x6a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A3
        gbc.setState(0x3b94, 0xf618, 0x26b0, 0xe987, 0x27cb, 0xf24d, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf618, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A4
        gbc.setState(0x23b8, 0x9797, 0x7c50, 0x23f6, 0x44ee, 0xae43, 0x1, 0x0);
        gbc.writeMem(0x23b8, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9797, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A5
        gbc.setState(0xbc9, 0x601f, 0x1f90, 0xb6f2, 0xd5de, 0x1a8b, 0x0, 0x0);
        gbc.writeMem(0xbc9, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x601f, gbc.sp());
        EXPECT(0xbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A6
        gbc.setState(0x2464, 0xf90b, 0xd5e0, 0x7cc, 0x904, 0x2fe4, 0x0, 0x0);
        gbc.writeMem(0x2464, { 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x2465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A7
        gbc.setState(0x188a, 0x15c9, 0x360, 0x65c1, 0xc362, 0xdc16, 0x0, 0x1);
        gbc.writeMem(0x188a, { 0xb5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x15c9, gbc.sp());
        EXPECT(0x188b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03A8
        gbc.setState(0x87d0, 0x5d8c, 0xb0e0, 0xee1, 0x5670, 0x8487, 0x0, 0x1);
        gbc.writeMem(0x87d0, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0x87d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x87d0));
        // B5 03A9
        gbc.setState(0xc4cc, 0x8e00, 0x3020, 0x6c06, 0xd8ae, 0x80cc, 0x0, 0x1);
        gbc.writeMem(0xc4cc, { 0xb5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e00, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc4cc));
        // B5 03AA
        gbc.setState(0xabcb, 0x383a, 0xe5b0, 0xc13c, 0x21c1, 0x8f0d, 0x1, 0x1);
        gbc.writeMem(0xabcb, { 0xb5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xabcb));
        // B5 03AB
        gbc.setState(0x5e24, 0xd0e5, 0xab90, 0x7799, 0xcb37, 0x3f6e, 0x0, 0x1);
        gbc.writeMem(0x5e24, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03AC
        gbc.setState(0x4f5d, 0x9824, 0x4820, 0x181b, 0x1bec, 0xa32a, 0x0, 0x1);
        gbc.writeMem(0x4f5d, { 0xb5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9824, gbc.sp());
        EXPECT(0x4f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03AD
        gbc.setState(0x97bc, 0x795c, 0xe980, 0x95cb, 0xe9e7, 0x20f7, 0x0, 0x1);
        gbc.writeMem(0x97bc, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x97bc));
        // B5 03AE
        gbc.setState(0x27cd, 0x9f5, 0xff00, 0x1b6, 0x57c9, 0xcc5c, 0x1, 0x0);
        gbc.writeMem(0x27cd, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03AF
        gbc.setState(0xe722, 0x6ff5, 0xd370, 0x80e3, 0x918e, 0xa474, 0x0, 0x1);
        gbc.writeMem(0xe722, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6ff5, gbc.sp());
        EXPECT(0xe723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe722));
        // B5 03B0
        gbc.setState(0x1b19, 0xce2d, 0x50c0, 0xf998, 0xa317, 0xd3c9, 0x1, 0x0);
        gbc.writeMem(0x1b19, { 0xb5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xce2d, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B1
        gbc.setState(0x4803, 0xd3c9, 0x59b0, 0xc8e7, 0xa235, 0x4c29, 0x0, 0x0);
        gbc.writeMem(0x4803, { 0xb5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B2
        gbc.setState(0x8b75, 0xa13f, 0x5c60, 0x5d04, 0xf637, 0x3633, 0x1, 0x1);
        gbc.writeMem(0x8b75, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa13f, gbc.sp());
        EXPECT(0x8b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8b75));
        // B5 03B3
        gbc.setState(0x5312, 0xb287, 0xcc00, 0x5d7d, 0xc2e8, 0x5271, 0x0, 0x1);
        gbc.writeMem(0x5312, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb287, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B4
        gbc.setState(0xf51, 0xf608, 0x97a0, 0xe4dd, 0x5175, 0x8c20, 0x0, 0x0);
        gbc.writeMem(0xf51, { 0xb5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf608, gbc.sp());
        EXPECT(0xf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B5
        gbc.setState(0xa56d, 0x4bf8, 0xf00, 0x3dd7, 0xf5a3, 0xff6f, 0x0, 0x0);
        gbc.writeMem(0xa56d, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa56d));
        // B5 03B6
        gbc.setState(0x27d7, 0x588e, 0x6460, 0xe64d, 0x1c72, 0xd66a, 0x0, 0x0);
        gbc.writeMem(0x27d7, { 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x588e, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B7
        gbc.setState(0x362f, 0x8d14, 0x1840, 0xfb7b, 0x8e6, 0xabc4, 0x0, 0x0);
        gbc.writeMem(0x362f, { 0xb5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8d14, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B8
        gbc.setState(0x6b8, 0xdad0, 0xfe0, 0xfab5, 0x64eb, 0x2dd3, 0x1, 0x1);
        gbc.writeMem(0x6b8, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdad0, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03B9
        gbc.setState(0x2020, 0xa717, 0x4710, 0x96bd, 0x2f90, 0x2cd1, 0x1, 0x1);
        gbc.writeMem(0x2020, { 0xb5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa717, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03BA
        gbc.setState(0x3cac, 0xbadd, 0x1650, 0x3f1b, 0x9b94, 0x8548, 0x0, 0x0);
        gbc.writeMem(0x3cac, { 0xb5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0x3cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03BB
        gbc.setState(0x298c, 0xfaf0, 0x7920, 0xe6f4, 0xd704, 0x1eac, 0x1, 0x0);
        gbc.writeMem(0x298c, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03BC
        gbc.setState(0x332d, 0x8235, 0xc4b0, 0x1b6b, 0x21a3, 0x5ec5, 0x0, 0x0);
        gbc.writeMem(0x332d, { 0xb5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8235, gbc.sp());
        EXPECT(0x332e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03BD
        gbc.setState(0x89dd, 0xd793, 0x1090, 0xf510, 0x30cb, 0x1ea, 0x0, 0x1);
        gbc.writeMem(0x89dd, { 0xb5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0x89de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x89dd));
        // B5 03BE
        gbc.setState(0x3841, 0x8604, 0x6c10, 0x9131, 0x3bb, 0xa00, 0x1, 0x1);
        gbc.writeMem(0x3841, { 0xb5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03BF
        gbc.setState(0x3bc6, 0xd6f9, 0xefe0, 0x815f, 0xe4a, 0x4948, 0x0, 0x0);
        gbc.writeMem(0x3bc6, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd6f9, gbc.sp());
        EXPECT(0x3bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03C0
        gbc.setState(0xb780, 0xaca2, 0x2160, 0x7fb9, 0x3903, 0x685d, 0x1, 0x0);
        gbc.writeMem(0xb780, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaca2, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb780));
        // B5 03C1
        gbc.setState(0x9b61, 0xb47d, 0x9720, 0x9674, 0x7b40, 0x3d99, 0x1, 0x1);
        gbc.writeMem(0x9b61, { 0xb5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb47d, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9b61));
        // B5 03C2
        gbc.setState(0x47f, 0x394c, 0x9810, 0x8641, 0xf8de, 0xcfa3, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xb5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x394c, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03C3
        gbc.setState(0x8cc8, 0xb8cb, 0x9b80, 0x4d20, 0xf174, 0xc14f, 0x1, 0x0);
        gbc.writeMem(0x8cc8, { 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb8cb, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8cc8));
        // B5 03C4
        gbc.setState(0x63a5, 0x3ce1, 0x4440, 0x7e4, 0xa19c, 0x67f, 0x1, 0x1);
        gbc.writeMem(0x63a5, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3ce1, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03C5
        gbc.setState(0x51bf, 0x4884, 0xf0f0, 0xa9c3, 0x9cd1, 0xc881, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0x51c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03C6
        gbc.setState(0x23b5, 0x462c, 0xda50, 0xcad6, 0x8250, 0xb4db, 0x1, 0x1);
        gbc.writeMem(0x23b5, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x462c, gbc.sp());
        EXPECT(0x23b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03C7
        gbc.setState(0xe986, 0x6f98, 0x2840, 0xbe44, 0x3219, 0x6508, 0x0, 0x1);
        gbc.writeMem(0xe986, { 0xb5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f98, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe986));
        // B5 03C8
        gbc.setState(0xce31, 0xbab1, 0xe180, 0x361e, 0x63a1, 0x80b0, 0x0, 0x1);
        gbc.writeMem(0xce31, { 0xb5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbab1, gbc.sp());
        EXPECT(0xce32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xce31));
        // B5 03C9
        gbc.setState(0x2601, 0xa10b, 0xb770, 0xf1eb, 0xb0d8, 0x25fb, 0x1, 0x1);
        gbc.writeMem(0x2601, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa10b, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03CA
        gbc.setState(0xa5d0, 0x2863, 0x6600, 0xf023, 0x8281, 0x679d, 0x0, 0x0);
        gbc.writeMem(0xa5d0, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2863, gbc.sp());
        EXPECT(0xa5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa5d0));
        // B5 03CC
        gbc.setState(0xc251, 0xec85, 0x9fd0, 0xbe5a, 0x8218, 0x98bb, 0x1, 0x1);
        gbc.writeMem(0xc251, { 0xb5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xec85, gbc.sp());
        EXPECT(0xc252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc251));
        // B5 03CD
        gbc.setState(0x72aa, 0x2a1c, 0x2690, 0x8893, 0xa27f, 0x3438, 0x0, 0x1);
        gbc.writeMem(0x72aa, { 0xb5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x72ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03CE
        gbc.setState(0xe1d, 0xec2b, 0xf4c0, 0x7026, 0x7cf9, 0x133a, 0x1, 0x1);
        gbc.writeMem(0xe1d, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xec2b, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03CF
        gbc.setState(0x894f, 0x7cc8, 0x1c60, 0x57c2, 0xb0d2, 0xff67, 0x0, 0x1);
        gbc.writeMem(0x894f, { 0xb5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7cc8, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x894f));
        // B5 03D0
        gbc.setState(0xe4b9, 0x4d1c, 0xd610, 0x1d90, 0xed65, 0xa7a9, 0x0, 0x1);
        gbc.writeMem(0xe4b9, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4d1c, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe4b9));
        // B5 03D1
        gbc.setState(0xebd3, 0x9e25, 0x1d90, 0x219a, 0x7f15, 0xf874, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9e25, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xebd3));
        // B5 03D2
        gbc.setState(0x4ed1, 0x4c66, 0x7540, 0x9f88, 0xd8c7, 0x92cd, 0x0, 0x1);
        gbc.writeMem(0x4ed1, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4c66, gbc.sp());
        EXPECT(0x4ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03D3
        gbc.setState(0x4483, 0xffa9, 0x3c00, 0x143b, 0x661f, 0xbf45, 0x0, 0x1);
        gbc.writeMem(0x4483, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xffa9, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03D4
        gbc.setState(0xe54b, 0xb5db, 0x800, 0xa156, 0x6ad4, 0x860b, 0x1, 0x0);
        gbc.writeMem(0xe54b, { 0xb5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe54b));
        // B5 03D6
        gbc.setState(0xc289, 0x3d08, 0xeb40, 0x4bf1, 0x9f21, 0xa507, 0x1, 0x0);
        gbc.writeMem(0xc289, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0xc28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc289));
        // B5 03D7
        gbc.setState(0xbf4b, 0x63ef, 0x2b80, 0x6ebc, 0x8a95, 0x6ef4, 0x0, 0x1);
        gbc.writeMem(0xbf4b, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbf4b));
        // B5 03D8
        gbc.setState(0x303c, 0x42e0, 0xb9b0, 0x70cc, 0x4682, 0x41df, 0x0, 0x0);
        gbc.writeMem(0x303c, { 0xb5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x303d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03D9
        gbc.setState(0xe4fa, 0x47f4, 0x83a0, 0x1f63, 0x7ecf, 0x758d, 0x0, 0x0);
        gbc.writeMem(0xe4fa, { 0xb5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x47f4, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe4fa));
        // B5 03DA
        gbc.setState(0x61b5, 0x251f, 0x9500, 0xfb0a, 0xa4cf, 0x4854, 0x0, 0x1);
        gbc.writeMem(0x61b5, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x251f, gbc.sp());
        EXPECT(0x61b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03DB
        gbc.setState(0x38f6, 0x22d8, 0xb610, 0xfd32, 0xcb85, 0x48b6, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0xb5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x22d8, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03DC
        gbc.setState(0xadaa, 0x4b38, 0x9850, 0xe20b, 0xe85, 0xf319, 0x1, 0x0);
        gbc.writeMem(0xadaa, { 0xb5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4b38, gbc.sp());
        EXPECT(0xadab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xadaa));
        // B5 03DD
        gbc.setState(0xdafd, 0xfbde, 0x4200, 0x50a8, 0x3e4c, 0x8e3a, 0x0, 0x0);
        gbc.writeMem(0xdafd, { 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfbde, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xdafd));
        // B5 03DE
        gbc.setState(0x5c2c, 0xa811, 0x46f0, 0xa0ea, 0x2cbb, 0x7f29, 0x1, 0x1);
        gbc.writeMem(0x5c2c, { 0xb5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa811, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03DF
        gbc.setState(0x3fa1, 0x2e82, 0x1780, 0xd3e0, 0xc9cc, 0xc02b, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xb5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03E0
        gbc.setState(0x9719, 0x5a99, 0xe780, 0x2a77, 0x2f35, 0x2231, 0x0, 0x0);
        gbc.writeMem(0x9719, { 0xb5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9719));
        // B5 03E2
        gbc.setState(0xc054, 0xa8cb, 0xd220, 0x8bf9, 0xe9c2, 0x155b, 0x1, 0x0);
        gbc.writeMem(0xc054, { 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa8cb, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc054));
        // B5 03E3
        gbc.setState(0x679, 0xfce4, 0x6360, 0xe4fc, 0x2fbd, 0x8737, 0x0, 0x0);
        gbc.writeMem(0x679, { 0xb5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfce4, gbc.sp());
        EXPECT(0x67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03E4
        gbc.setState(0x701c, 0x758, 0x7c70, 0x1cd6, 0xe231, 0x223e, 0x1, 0x0);
        gbc.writeMem(0x701c, { 0xb5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0x701d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B5 03E5
        gbc.setState(0xbf1f, 0x463a, 0x4640, 0x3bd6, 0x8921, 0xa9fe, 0x1, 0x1);
        gbc.writeMem(0xbf1f, { 0xb5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x463a, gbc.sp());
        EXPECT(0xbf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbf1f));
        // B5 03E6
        gbc.setState(0xd856, 0x7d82, 0x27f0, 0x25dd, 0x5185, 0xb6ed, 0x0, 0x1);
        gbc.writeMem(0xd856, { 0xb5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7d82, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd856));
        // B5 03E7
        gbc.setState(0x5ade, 0xf94b, 0x23e0, 0x4b87, 0xe0ec, 0xbe30, 0x1, 0x1);
        gbc.writeMem(0x5ade, { 0xb5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
