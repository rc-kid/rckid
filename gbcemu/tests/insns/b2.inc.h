    TEST(gbcemu, opcode_b2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B2 0000
        gbc.setState(0xe761, 0x1df5, 0x7020, 0x4384, 0xd93c, 0xbffb, 0x1, 0x0);
        gbc.writeMem(0xe761, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0xe762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe761));
        // B2 0001
        gbc.setState(0x1f9b, 0x439, 0xbc40, 0xd659, 0xef24, 0xec42, 0x0, 0x1);
        gbc.writeMem(0x1f9b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0x1f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0002
        gbc.setState(0xc8dc, 0x7e51, 0xdd50, 0xc407, 0xe4bd, 0x2fae, 0x1, 0x1);
        gbc.writeMem(0xc8dc, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7e51, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc8dc));
        // B2 0003
        gbc.setState(0x6295, 0x46ae, 0x6750, 0x11ac, 0xa0cb, 0x3dfa, 0x1, 0x1);
        gbc.writeMem(0x6295, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x46ae, gbc.sp());
        EXPECT(0x6296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0006
        gbc.setState(0x83a4, 0x8649, 0xc9f0, 0xc3e8, 0x25fe, 0x2776, 0x0, 0x0);
        gbc.writeMem(0x83a4, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8649, gbc.sp());
        EXPECT(0x83a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x83a4));
        // B2 0007
        gbc.setState(0xbccc, 0x5400, 0xd120, 0x289d, 0xd581, 0xa4fb, 0x1, 0x1);
        gbc.writeMem(0xbccc, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5400, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbccc));
        // B2 0009
        gbc.setState(0x394a, 0xb615, 0x1310, 0xbc4e, 0x59ef, 0x4e36, 0x1, 0x0);
        gbc.writeMem(0x394a, { 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb615, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 000A
        gbc.setState(0xdd52, 0x19ee, 0x64c0, 0xca7d, 0x977f, 0xcb4f, 0x0, 0x0);
        gbc.writeMem(0xdd52, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x19ee, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdd52));
        // B2 000B
        gbc.setState(0xc913, 0x3b4a, 0x1010, 0xd102, 0x82a9, 0x6074, 0x1, 0x1);
        gbc.writeMem(0xc913, { 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3b4a, gbc.sp());
        EXPECT(0xc914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc913));
        // B2 000C
        gbc.setState(0x9c96, 0x8506, 0xd490, 0xbd0b, 0xa205, 0x4f56, 0x1, 0x0);
        gbc.writeMem(0x9c96, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8506, gbc.sp());
        EXPECT(0x9c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9c96));
        // B2 000D
        gbc.setState(0x9449, 0x8774, 0xf850, 0xee24, 0x58e8, 0x7ecc, 0x0, 0x1);
        gbc.writeMem(0x9449, { 0xb2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8774, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9449));
        // B2 000E
        gbc.setState(0x102e, 0x324b, 0x19e0, 0xe2f3, 0x6fa0, 0x3abc, 0x1, 0x1);
        gbc.writeMem(0x102e, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x324b, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 000F
        gbc.setState(0xc4e9, 0x7bdf, 0xa600, 0x4667, 0x1b9a, 0xd9f3, 0x1, 0x1);
        gbc.writeMem(0xc4e9, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7bdf, gbc.sp());
        EXPECT(0xc4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc4e9));
        // B2 0010
        gbc.setState(0xc2b, 0xd59e, 0x4050, 0x2384, 0xba12, 0x8307, 0x0, 0x0);
        gbc.writeMem(0xc2b, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd59e, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0011
        gbc.setState(0x8c37, 0x31fa, 0x2a50, 0x399f, 0xe089, 0x46e3, 0x0, 0x1);
        gbc.writeMem(0x8c37, { 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0x8c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8c37));
        // B2 0012
        gbc.setState(0x2b3d, 0x2e81, 0x5530, 0x2be8, 0xa71c, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x2b3d, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2e81, gbc.sp());
        EXPECT(0x2b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0013
        gbc.setState(0xd813, 0x8615, 0xf430, 0x981c, 0xf0dc, 0x33b9, 0x1, 0x0);
        gbc.writeMem(0xd813, { 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd813));
        // B2 0014
        gbc.setState(0x1bd8, 0x9a43, 0x2d50, 0x2747, 0xc52e, 0x8298, 0x1, 0x0);
        gbc.writeMem(0x1bd8, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9a43, gbc.sp());
        EXPECT(0x1bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0015
        gbc.setState(0x736c, 0xa031, 0xdc40, 0x6048, 0xe126, 0x2c8c, 0x0, 0x1);
        gbc.writeMem(0x736c, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa031, gbc.sp());
        EXPECT(0x736d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0017
        gbc.setState(0xbdf1, 0x6107, 0x6780, 0x356b, 0x927a, 0x59e6, 0x0, 0x1);
        gbc.writeMem(0xbdf1, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6107, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbdf1));
        // B2 0018
        gbc.setState(0xcd4d, 0x585d, 0x8400, 0x4aff, 0x9696, 0xf5f0, 0x0, 0x1);
        gbc.writeMem(0xcd4d, { 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x585d, gbc.sp());
        EXPECT(0xcd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcd4d));
        // B2 0019
        gbc.setState(0x6ac3, 0x482c, 0x78e0, 0xb89f, 0xdb94, 0x7361, 0x1, 0x1);
        gbc.writeMem(0x6ac3, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x6ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 001A
        gbc.setState(0x489b, 0x6fa0, 0xfe0, 0x8756, 0x2a62, 0x285f, 0x0, 0x0);
        gbc.writeMem(0x489b, { 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6fa0, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 001B
        gbc.setState(0x3c84, 0xf376, 0x9180, 0xd687, 0x8ff7, 0xf82, 0x1, 0x1);
        gbc.writeMem(0x3c84, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf376, gbc.sp());
        EXPECT(0x3c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 001C
        gbc.setState(0xc61a, 0x6e3b, 0x9730, 0xb100, 0x238, 0x37dc, 0x1, 0x0);
        gbc.writeMem(0xc61a, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0xc61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc61a));
        // B2 001D
        gbc.setState(0x3749, 0x717, 0x3300, 0x859f, 0x369f, 0x425a, 0x1, 0x0);
        gbc.writeMem(0x3749, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0x374a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 001F
        gbc.setState(0xab07, 0x46d7, 0x7140, 0xd36d, 0x540b, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0xab07, { 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x46d7, gbc.sp());
        EXPECT(0xab08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xab07));
        // B2 0020
        gbc.setState(0x8ae8, 0xa1fa, 0xffa0, 0x3946, 0x7f51, 0xc809, 0x1, 0x1);
        gbc.writeMem(0x8ae8, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa1fa, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8ae8));
        // B2 0021
        gbc.setState(0x6453, 0x88bf, 0x7c10, 0x97db, 0x7114, 0x8200, 0x1, 0x1);
        gbc.writeMem(0x6453, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x88bf, gbc.sp());
        EXPECT(0x6454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0022
        gbc.setState(0x7f4f, 0x9eb4, 0xe780, 0x601b, 0x9139, 0xfd3f, 0x1, 0x1);
        gbc.writeMem(0x7f4f, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9eb4, gbc.sp());
        EXPECT(0x7f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0023
        gbc.setState(0x865e, 0x3144, 0x36d0, 0x12b0, 0xc7f6, 0x1e6a, 0x1, 0x0);
        gbc.writeMem(0x865e, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x865e));
        // B2 0025
        gbc.setState(0x27cb, 0x553c, 0x5660, 0x3971, 0xc107, 0x56d6, 0x1, 0x1);
        gbc.writeMem(0x27cb, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x553c, gbc.sp());
        EXPECT(0x27cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0027
        gbc.setState(0x9199, 0xaeb2, 0x6770, 0xfd2d, 0x7053, 0xc2a5, 0x1, 0x1);
        gbc.writeMem(0x9199, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaeb2, gbc.sp());
        EXPECT(0x919a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9199));
        // B2 0028
        gbc.setState(0xed4e, 0x32ac, 0xa9b0, 0x4f56, 0x53b, 0xb6ed, 0x0, 0x0);
        gbc.writeMem(0xed4e, { 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0xed4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xed4e));
        // B2 0029
        gbc.setState(0x7974, 0x5d73, 0x7b20, 0x3c2b, 0x5026, 0x1430, 0x1, 0x1);
        gbc.writeMem(0x7974, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x7975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 002A
        gbc.setState(0x28c3, 0xdba4, 0x9160, 0xab25, 0xf740, 0x558f, 0x0, 0x1);
        gbc.writeMem(0x28c3, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdba4, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 002B
        gbc.setState(0xff6, 0xad3c, 0x6fb0, 0xa2e8, 0xf77e, 0x42d4, 0x0, 0x0);
        gbc.writeMem(0xff6, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xad3c, gbc.sp());
        EXPECT(0xff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 002C
        gbc.setState(0x3aac, 0xdc3c, 0x13d0, 0x9a7a, 0x8413, 0x969d, 0x1, 0x0);
        gbc.writeMem(0x3aac, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 002D
        gbc.setState(0x4578, 0x39f4, 0xd340, 0x8890, 0xa8aa, 0x1100, 0x0, 0x0);
        gbc.writeMem(0x4578, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39f4, gbc.sp());
        EXPECT(0x4579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 002E
        gbc.setState(0xee1c, 0x16d7, 0x8750, 0x2622, 0x2531, 0xa25c, 0x1, 0x1);
        gbc.writeMem(0xee1c, { 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x16d7, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xee1c));
        // B2 002F
        gbc.setState(0x1496, 0xf8ff, 0x3680, 0x54e2, 0xd8f5, 0x89bf, 0x1, 0x1);
        gbc.writeMem(0x1496, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0x1497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0031
        gbc.setState(0xd81, 0xa677, 0x9f90, 0x97b5, 0xd8b3, 0x3c54, 0x0, 0x1);
        gbc.writeMem(0xd81, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa677, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0032
        gbc.setState(0xbde5, 0x7a8b, 0xb950, 0xdeef, 0x27c1, 0xe0b3, 0x0, 0x0);
        gbc.writeMem(0xbde5, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7a8b, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbde5));
        // B2 0033
        gbc.setState(0x58bc, 0x35a, 0x75d0, 0x1b71, 0x1535, 0xd903, 0x0, 0x0);
        gbc.writeMem(0x58bc, { 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0x58bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0034
        gbc.setState(0x7083, 0xe7ad, 0xb710, 0xacc0, 0x7fc5, 0x4cb9, 0x0, 0x1);
        gbc.writeMem(0x7083, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe7ad, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0035
        gbc.setState(0xdb92, 0xc24e, 0x6720, 0x62b5, 0x4f34, 0xa6da, 0x0, 0x0);
        gbc.writeMem(0xdb92, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc24e, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdb92));
        // B2 0036
        gbc.setState(0xa3e6, 0x11f3, 0x84c0, 0x325a, 0x2835, 0xf908, 0x0, 0x1);
        gbc.writeMem(0xa3e6, { 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa3e6));
        // B2 0037
        gbc.setState(0xb8d9, 0x729, 0x1360, 0x16a7, 0x31a0, 0x758, 0x0, 0x1);
        gbc.writeMem(0xb8d9, { 0xb2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x729, gbc.sp());
        EXPECT(0xb8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb8d9));
        // B2 0038
        gbc.setState(0x761a, 0x8d6b, 0x6210, 0xb0ff, 0x7b3a, 0x3bc0, 0x0, 0x0);
        gbc.writeMem(0x761a, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0039
        gbc.setState(0xb7d7, 0xd5e6, 0xa090, 0xb9a2, 0xc4d7, 0x9b3, 0x0, 0x0);
        gbc.writeMem(0xb7d7, { 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0xb7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb7d7));
        // B2 003A
        gbc.setState(0x7203, 0x8ab0, 0xf1f0, 0x432b, 0x1565, 0xcfb5, 0x0, 0x1);
        gbc.writeMem(0x7203, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8ab0, gbc.sp());
        EXPECT(0x7204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 003B
        gbc.setState(0x2e4d, 0x45f3, 0x9340, 0x28b4, 0x58d4, 0x7233, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x45f3, gbc.sp());
        EXPECT(0x2e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 003C
        gbc.setState(0x3cda, 0xb9a9, 0xc00, 0x5492, 0xe902, 0x798a, 0x1, 0x0);
        gbc.writeMem(0x3cda, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 003D
        gbc.setState(0xcca2, 0x8e34, 0xec40, 0xe478, 0xadee, 0xb134, 0x0, 0x0);
        gbc.writeMem(0xcca2, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcca2));
        // B2 003E
        gbc.setState(0x501e, 0x6d1d, 0xa780, 0xc052, 0x9c60, 0xdbf9, 0x0, 0x1);
        gbc.writeMem(0x501e, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6d1d, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 003F
        gbc.setState(0x8d4e, 0x9a7b, 0x2ea0, 0x3489, 0xecf9, 0x3776, 0x1, 0x1);
        gbc.writeMem(0x8d4e, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0x8d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8d4e));
        // B2 0040
        gbc.setState(0x8727, 0xe20b, 0xa120, 0x21f8, 0xc301, 0xc808, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8727));
        // B2 0041
        gbc.setState(0x23ba, 0x382b, 0xf2b0, 0xc8f6, 0xa32c, 0xfd20, 0x0, 0x0);
        gbc.writeMem(0x23ba, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x382b, gbc.sp());
        EXPECT(0x23bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0042
        gbc.setState(0x754a, 0x3428, 0xb5e0, 0x28d6, 0xe41f, 0x756e, 0x1, 0x1);
        gbc.writeMem(0x754a, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x754b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0043
        gbc.setState(0xe024, 0xc5d3, 0x9e20, 0x8dac, 0xe663, 0x59fc, 0x0, 0x1);
        gbc.writeMem(0xe024, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc5d3, gbc.sp());
        EXPECT(0xe025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe024));
        // B2 0044
        gbc.setState(0xa623, 0x2c53, 0x6c00, 0xfc3f, 0x2af5, 0x7f9f, 0x0, 0x0);
        gbc.writeMem(0xa623, { 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2c53, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa623));
        // B2 0045
        gbc.setState(0x7f65, 0x81f1, 0x3ff0, 0x6b04, 0xbc79, 0xbec9, 0x0, 0x1);
        gbc.writeMem(0x7f65, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0046
        gbc.setState(0x4e3a, 0x5467, 0xb940, 0x84ce, 0x8988, 0x1add, 0x0, 0x0);
        gbc.writeMem(0x4e3a, { 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5467, gbc.sp());
        EXPECT(0x4e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0047
        gbc.setState(0x4762, 0x9b22, 0x88c0, 0x835f, 0xabf4, 0x2545, 0x1, 0x0);
        gbc.writeMem(0x4762, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0048
        gbc.setState(0x7c, 0x56fd, 0x6eb0, 0x3447, 0xd5cf, 0x7579, 0x0, 0x0);
        gbc.writeMem(0x7c, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0x7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0049
        gbc.setState(0xb551, 0x6a73, 0xaec0, 0x553f, 0x25d5, 0xa378, 0x0, 0x1);
        gbc.writeMem(0xb551, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb551));
        // B2 004A
        gbc.setState(0x4791, 0x5618, 0x39d0, 0xa135, 0x1ede, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0x4791, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 004B
        gbc.setState(0x490f, 0x12c2, 0x22f0, 0x908b, 0x4470, 0x8018, 0x0, 0x1);
        gbc.writeMem(0x490f, { 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0x4910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 004C
        gbc.setState(0xc9ae, 0xadde, 0x9d20, 0xe773, 0x4439, 0x591d, 0x1, 0x1);
        gbc.writeMem(0xc9ae, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xadde, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc9ae));
        // B2 004D
        gbc.setState(0x8794, 0xc35b, 0x8480, 0x2bd0, 0x6e5b, 0x231b, 0x1, 0x0);
        gbc.writeMem(0x8794, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0x8795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8794));
        // B2 004E
        gbc.setState(0x650, 0xfebf, 0x4860, 0x8e61, 0xdb03, 0x98dd, 0x1, 0x1);
        gbc.writeMem(0x650, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfebf, gbc.sp());
        EXPECT(0x651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 004F
        gbc.setState(0x2392, 0xcb8a, 0xa5d0, 0x4b2e, 0xd443, 0xe359, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcb8a, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0050
        gbc.setState(0x8f62, 0x689d, 0x3da0, 0xa087, 0x5e36, 0x97f2, 0x1, 0x0);
        gbc.writeMem(0x8f62, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x689d, gbc.sp());
        EXPECT(0x8f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8f62));
        // B2 0051
        gbc.setState(0xc28f, 0xadec, 0xfeb0, 0x1619, 0x877f, 0x4510, 0x0, 0x0);
        gbc.writeMem(0xc28f, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xadec, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc28f));
        // B2 0052
        gbc.setState(0x84b8, 0x452f, 0x5e00, 0x42ee, 0x6660, 0xfdef, 0x0, 0x0);
        gbc.writeMem(0x84b8, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0x84b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x84b8));
        // B2 0053
        gbc.setState(0xdd5d, 0xcabd, 0x7070, 0x83d6, 0x9c0, 0xa29d, 0x0, 0x1);
        gbc.writeMem(0xdd5d, { 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdd5d));
        // B2 0054
        gbc.setState(0x50f1, 0x1e72, 0xecd0, 0xb605, 0xb6c4, 0x2ee5, 0x1, 0x1);
        gbc.writeMem(0x50f1, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0055
        gbc.setState(0x40c, 0x9ab5, 0xb120, 0x9bf0, 0x3137, 0x347d, 0x1, 0x0);
        gbc.writeMem(0x40c, { 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0056
        gbc.setState(0xa5de, 0x748b, 0xed40, 0xabea, 0x968a, 0x212, 0x0, 0x1);
        gbc.writeMem(0xa5de, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa5de));
        // B2 0057
        gbc.setState(0xeed6, 0x594d, 0x1b90, 0xf132, 0x33fe, 0x5475, 0x1, 0x0);
        gbc.writeMem(0xeed6, { 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeed6));
        // B2 0058
        gbc.setState(0xb816, 0x22d1, 0x1260, 0xea4c, 0xb5cf, 0xd5d0, 0x1, 0x0);
        gbc.writeMem(0xb816, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb816));
        // B2 005A
        gbc.setState(0xa5da, 0xccb9, 0xb8b0, 0xe71c, 0xcf6c, 0x402e, 0x1, 0x1);
        gbc.writeMem(0xa5da, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccb9, gbc.sp());
        EXPECT(0xa5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa5da));
        // B2 005B
        gbc.setState(0x8675, 0x7833, 0x7ad0, 0xfa43, 0x4231, 0x5467, 0x0, 0x0);
        gbc.writeMem(0x8675, { 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7833, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8675));
        // B2 005C
        gbc.setState(0xcdeb, 0x87fa, 0x26a0, 0x82, 0x60eb, 0x95ea, 0x1, 0x0);
        gbc.writeMem(0xcdeb, { 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcdeb));
        // B2 005D
        gbc.setState(0x9009, 0x36ff, 0x3680, 0x8668, 0x3b58, 0x23f2, 0x0, 0x1);
        gbc.writeMem(0x9009, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9009));
        // B2 005E
        gbc.setState(0x5468, 0x575d, 0xed00, 0x7f61, 0xba83, 0x4f9, 0x0, 0x0);
        gbc.writeMem(0x5468, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0x5469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 005F
        gbc.setState(0x1a52, 0xbcba, 0xdeb0, 0xbc77, 0x566f, 0xaba7, 0x0, 0x1);
        gbc.writeMem(0x1a52, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbcba, gbc.sp());
        EXPECT(0x1a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0060
        gbc.setState(0xa4a8, 0x5f3a, 0x6c60, 0x7839, 0x35e5, 0x19c5, 0x0, 0x0);
        gbc.writeMem(0xa4a8, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5f3a, gbc.sp());
        EXPECT(0xa4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa4a8));
        // B2 0061
        gbc.setState(0x4b8b, 0xc239, 0x4330, 0x14ee, 0x162c, 0x35c7, 0x0, 0x1);
        gbc.writeMem(0x4b8b, { 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc239, gbc.sp());
        EXPECT(0x4b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0062
        gbc.setState(0x39bd, 0x282c, 0x5300, 0x7477, 0x7ac1, 0x5bfc, 0x1, 0x0);
        gbc.writeMem(0x39bd, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0063
        gbc.setState(0xa76c, 0x85db, 0xf8b0, 0x4089, 0x75e4, 0xefe5, 0x0, 0x0);
        gbc.writeMem(0xa76c, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa76c));
        // B2 0064
        gbc.setState(0x6552, 0xc13a, 0x91f0, 0x3832, 0x555f, 0xbb75, 0x0, 0x0);
        gbc.writeMem(0x6552, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x6553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0065
        gbc.setState(0xd455, 0x5448, 0xd110, 0x86de, 0x7a9e, 0xf95, 0x1, 0x0);
        gbc.writeMem(0xd455, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5448, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd455));
        // B2 0066
        gbc.setState(0xca56, 0xe1cb, 0x5e50, 0x709a, 0xe487, 0xf7a8, 0x0, 0x1);
        gbc.writeMem(0xca56, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0xca57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xca56));
        // B2 0067
        gbc.setState(0x1cba, 0x95ab, 0xc30, 0x536c, 0x3418, 0x38cc, 0x0, 0x0);
        gbc.writeMem(0x1cba, { 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0x1cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0068
        gbc.setState(0x6320, 0x6e27, 0x28b0, 0x8a51, 0xec66, 0x57e5, 0x1, 0x0);
        gbc.writeMem(0x6320, { 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6e27, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 006A
        gbc.setState(0x6f6e, 0x7f9, 0x1180, 0xa539, 0xf68d, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x6f6e, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0x6f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 006B
        gbc.setState(0xaed8, 0x93d3, 0x4960, 0xc817, 0xaf1e, 0x1f11, 0x1, 0x1);
        gbc.writeMem(0xaed8, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0xaed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaed8));
        // B2 006C
        gbc.setState(0xdfb7, 0xf5d6, 0xc310, 0x95b0, 0x5018, 0x4ba8, 0x1, 0x1);
        gbc.writeMem(0xdfb7, { 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf5d6, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdfb7));
        // B2 006D
        gbc.setState(0x8906, 0x77f0, 0x7ff0, 0x6f26, 0x5d6e, 0x3a7a, 0x0, 0x0);
        gbc.writeMem(0x8906, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x77f0, gbc.sp());
        EXPECT(0x8907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8906));
        // B2 006E
        gbc.setState(0x961d, 0x7916, 0xa990, 0x40b2, 0xaf22, 0x52e, 0x1, 0x1);
        gbc.writeMem(0x961d, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x961d));
        // B2 006F
        gbc.setState(0x4f62, 0x37ea, 0xeb90, 0x1a8e, 0xfb52, 0x56a, 0x0, 0x0);
        gbc.writeMem(0x4f62, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x37ea, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0070
        gbc.setState(0x9d5d, 0x35aa, 0x4a10, 0x6959, 0x855a, 0xf968, 0x1, 0x1);
        gbc.writeMem(0x9d5d, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x35aa, gbc.sp());
        EXPECT(0x9d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9d5d));
        // B2 0071
        gbc.setState(0x2886, 0x9f1b, 0x8e0, 0x28b5, 0xc837, 0xb313, 0x1, 0x1);
        gbc.writeMem(0x2886, { 0xb2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0x2887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0072
        gbc.setState(0x547e, 0x2d66, 0x7b90, 0x914, 0xf389, 0xdbc2, 0x0, 0x0);
        gbc.writeMem(0x547e, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0073
        gbc.setState(0x3b76, 0x483e, 0xc7d0, 0x9945, 0x654c, 0xb91d, 0x1, 0x1);
        gbc.writeMem(0x3b76, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x483e, gbc.sp());
        EXPECT(0x3b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0074
        gbc.setState(0x45fc, 0xedec, 0x1f30, 0x6666, 0x2832, 0x666c, 0x0, 0x0);
        gbc.writeMem(0x45fc, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0x45fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0075
        gbc.setState(0x5df7, 0x205e, 0x8290, 0xcc55, 0x905a, 0x9e2, 0x1, 0x0);
        gbc.writeMem(0x5df7, { 0xb2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0076
        gbc.setState(0x2d66, 0x8c51, 0x7c70, 0xe6a5, 0x7eee, 0xa10c, 0x1, 0x1);
        gbc.writeMem(0x2d66, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8c51, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0077
        gbc.setState(0x72ea, 0x9f81, 0xf470, 0x76a9, 0xc56e, 0x85f3, 0x0, 0x0);
        gbc.writeMem(0x72ea, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f81, gbc.sp());
        EXPECT(0x72eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0078
        gbc.setState(0xc02, 0x47b3, 0x8350, 0xeed7, 0x488, 0xee2b, 0x0, 0x0);
        gbc.writeMem(0xc02, { 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0079
        gbc.setState(0x2ff1, 0xcd00, 0x51e0, 0xa37e, 0xf07, 0x3b16, 0x1, 0x0);
        gbc.writeMem(0x2ff1, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcd00, gbc.sp());
        EXPECT(0x2ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 007A
        gbc.setState(0x889d, 0xc5a0, 0x2e70, 0x8d4f, 0x699a, 0xf602, 0x1, 0x1);
        gbc.writeMem(0x889d, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc5a0, gbc.sp());
        EXPECT(0x889e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x889d));
        // B2 007B
        gbc.setState(0x3167, 0x4c41, 0x35b0, 0x78db, 0x871c, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x3167, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c41, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 007C
        gbc.setState(0x427a, 0x41aa, 0xee30, 0xb686, 0x5097, 0x161b, 0x1, 0x1);
        gbc.writeMem(0x427a, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x41aa, gbc.sp());
        EXPECT(0x427b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 007D
        gbc.setState(0x8e90, 0x6e85, 0xcd30, 0xc958, 0xae9d, 0xc7ed, 0x1, 0x1);
        gbc.writeMem(0x8e90, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e85, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8e90));
        // B2 007E
        gbc.setState(0xec5, 0xccff, 0x62c0, 0xa28, 0x13f0, 0x51f5, 0x1, 0x1);
        gbc.writeMem(0xec5, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xccff, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 007F
        gbc.setState(0x93f0, 0x7279, 0x77f0, 0xdc85, 0x8605, 0x3777, 0x0, 0x1);
        gbc.writeMem(0x93f0, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7279, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x93f0));
        // B2 0080
        gbc.setState(0xa74b, 0x7c6e, 0xf7a0, 0xae8e, 0xf6a9, 0xcb, 0x1, 0x0);
        gbc.writeMem(0xa74b, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0xa74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa74b));
        // B2 0081
        gbc.setState(0x1e54, 0x4013, 0xcce0, 0x9701, 0x108c, 0x3d82, 0x0, 0x1);
        gbc.writeMem(0x1e54, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4013, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0082
        gbc.setState(0x8f9f, 0xb88, 0x2a30, 0x74e, 0x1873, 0xe9b3, 0x0, 0x1);
        gbc.writeMem(0x8f9f, { 0xb2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb88, gbc.sp());
        EXPECT(0x8fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8f9f));
        // B2 0083
        gbc.setState(0x297e, 0x3eb6, 0xc440, 0x984c, 0x11a2, 0x3d3c, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3eb6, gbc.sp());
        EXPECT(0x297f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0084
        gbc.setState(0x2238, 0x9fe5, 0xf040, 0xc5d1, 0x7e78, 0x9365, 0x0, 0x0);
        gbc.writeMem(0x2238, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0x2239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0085
        gbc.setState(0x20e, 0x365, 0x4350, 0x39fa, 0xbd2a, 0xc836, 0x0, 0x1);
        gbc.writeMem(0x20e, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x365, gbc.sp());
        EXPECT(0x20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0086
        gbc.setState(0x80b9, 0x9643, 0xa740, 0x1407, 0xeabe, 0x355f, 0x0, 0x1);
        gbc.writeMem(0x80b9, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x80ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x80b9));
        // B2 0087
        gbc.setState(0x7fde, 0xb50a, 0x85e0, 0xe20f, 0xa5, 0xe3c0, 0x0, 0x1);
        gbc.writeMem(0x7fde, { 0xb2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb50a, gbc.sp());
        EXPECT(0x7fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0088
        gbc.setState(0xe0ea, 0xd81b, 0x4b00, 0x4a31, 0x2a83, 0x653b, 0x0, 0x1);
        gbc.writeMem(0xe0ea, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe0ea));
        // B2 0089
        gbc.setState(0x5efa, 0xcf5b, 0xfe10, 0x7bfb, 0xc26f, 0xc820, 0x0, 0x1);
        gbc.writeMem(0x5efa, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcf5b, gbc.sp());
        EXPECT(0x5efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 008A
        gbc.setState(0xb330, 0x5f6e, 0x4b80, 0x1f0a, 0x3ef2, 0xf029, 0x1, 0x0);
        gbc.writeMem(0xb330, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb330));
        // B2 008B
        gbc.setState(0xb0ad, 0x4867, 0xf600, 0x8b3b, 0x4f13, 0xb4bc, 0x1, 0x1);
        gbc.writeMem(0xb0ad, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb0ad));
        // B2 008C
        gbc.setState(0x8e, 0xb688, 0x2eb0, 0x5f0, 0xda44, 0xe498, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 008D
        gbc.setState(0x1729, 0x2407, 0x7bf0, 0xaced, 0xf680, 0x58bb, 0x0, 0x0);
        gbc.writeMem(0x1729, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x172a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 008E
        gbc.setState(0x8cdf, 0xc5cb, 0x7920, 0x8285, 0x1349, 0xb0cc, 0x1, 0x1);
        gbc.writeMem(0x8cdf, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc5cb, gbc.sp());
        EXPECT(0x8ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8cdf));
        // B2 008F
        gbc.setState(0x1705, 0x8e2b, 0x7b00, 0xeaf9, 0xa035, 0x9ed6, 0x1, 0x1);
        gbc.writeMem(0x1705, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x1706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0090
        gbc.setState(0x89c0, 0xa1f1, 0xbd80, 0x4770, 0x7387, 0xb422, 0x0, 0x1);
        gbc.writeMem(0x89c0, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0x89c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x89c0));
        // B2 0091
        gbc.setState(0x5171, 0xb022, 0x7e20, 0xe523, 0x69b6, 0x736, 0x1, 0x0);
        gbc.writeMem(0x5171, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb022, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0092
        gbc.setState(0xd906, 0x2a3d, 0x7c80, 0x420d, 0xb08e, 0xf8d5, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2a3d, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd906));
        // B2 0093
        gbc.setState(0x5b66, 0x87ca, 0x70f0, 0xaea3, 0xae2c, 0x4e3, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x87ca, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0095
        gbc.setState(0x67f0, 0x7c22, 0xc690, 0xc34c, 0x2a24, 0x816b, 0x0, 0x0);
        gbc.writeMem(0x67f0, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c22, gbc.sp());
        EXPECT(0x67f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0096
        gbc.setState(0x4c64, 0x40e3, 0xfb90, 0xe977, 0x3412, 0x95fe, 0x1, 0x0);
        gbc.writeMem(0x4c64, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x40e3, gbc.sp());
        EXPECT(0x4c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0097
        gbc.setState(0x9766, 0x426e, 0x150, 0xaa76, 0xc4f5, 0x5700, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xb2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x426e, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9766));
        // B2 0098
        gbc.setState(0xd322, 0xdf09, 0x5a30, 0xcde6, 0x5392, 0xf874, 0x0, 0x0);
        gbc.writeMem(0xd322, { 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd322));
        // B2 0099
        gbc.setState(0xaecb, 0x1a55, 0xcd50, 0xf9ff, 0xeaaf, 0xe2d9, 0x0, 0x1);
        gbc.writeMem(0xaecb, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a55, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaecb));
        // B2 009A
        gbc.setState(0x42c7, 0x382f, 0xf840, 0xba39, 0x62e7, 0xd80d, 0x1, 0x0);
        gbc.writeMem(0x42c7, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0x42c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 009B
        gbc.setState(0xa38a, 0xd01e, 0x6b40, 0x4500, 0x722f, 0xdc8, 0x0, 0x1);
        gbc.writeMem(0xa38a, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa38a));
        // B2 009C
        gbc.setState(0xdbc8, 0xe0c4, 0x9cc0, 0x805a, 0xb062, 0xda82, 0x0, 0x0);
        gbc.writeMem(0xdbc8, { 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe0c4, gbc.sp());
        EXPECT(0xdbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdbc8));
        // B2 009D
        gbc.setState(0x28c6, 0x9d68, 0x47a0, 0x69b0, 0xe0d1, 0x9757, 0x1, 0x1);
        gbc.writeMem(0x28c6, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 009E
        gbc.setState(0x1b2, 0x8763, 0xa030, 0xcb74, 0xe23, 0xb7e0, 0x1, 0x1);
        gbc.writeMem(0x1b2, { 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0x1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 009F
        gbc.setState(0xb39c, 0xa80d, 0xd490, 0x8614, 0x24fd, 0x8797, 0x0, 0x1);
        gbc.writeMem(0xb39c, { 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb39c));
        // B2 00A0
        gbc.setState(0x4373, 0xc51b, 0xaa40, 0x3cb0, 0x49d0, 0xcb7f, 0x1, 0x1);
        gbc.writeMem(0x4373, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc51b, gbc.sp());
        EXPECT(0x4374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00A1
        gbc.setState(0xaec0, 0x96ee, 0xb2e0, 0x181, 0x80e6, 0xb488, 0x0, 0x0);
        gbc.writeMem(0xaec0, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0xaec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaec0));
        // B2 00A2
        gbc.setState(0x24de, 0xe179, 0x4c10, 0x84b0, 0x19ff, 0xfc9d, 0x1, 0x0);
        gbc.writeMem(0x24de, { 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe179, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00A3
        gbc.setState(0x6c3a, 0x8865, 0x5450, 0x1bb8, 0x3a34, 0x4beb, 0x0, 0x0);
        gbc.writeMem(0x6c3a, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0x6c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00A4
        gbc.setState(0x5a2c, 0xd2fb, 0x1050, 0x526, 0x2eb5, 0x5dae, 0x0, 0x0);
        gbc.writeMem(0x5a2c, { 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd2fb, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00A5
        gbc.setState(0xcc64, 0x6a33, 0x2170, 0xc8a0, 0x692a, 0x1821, 0x0, 0x1);
        gbc.writeMem(0xcc64, { 0xb2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a33, gbc.sp());
        EXPECT(0xcc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcc64));
        // B2 00A6
        gbc.setState(0x548c, 0xdf4b, 0xb140, 0xe0a0, 0xae6f, 0x3245, 0x0, 0x1);
        gbc.writeMem(0x548c, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdf4b, gbc.sp());
        EXPECT(0x548d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00A7
        gbc.setState(0xa2e6, 0xabfe, 0x2430, 0xd154, 0xd4a9, 0xfe7, 0x1, 0x1);
        gbc.writeMem(0xa2e6, { 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xabfe, gbc.sp());
        EXPECT(0xa2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa2e6));
        // B2 00A8
        gbc.setState(0x9616, 0x2332, 0x1e70, 0x812a, 0x58a9, 0xa406, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2332, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9616));
        // B2 00AA
        gbc.setState(0xefea, 0x1695, 0x1f0, 0x339e, 0x15c9, 0xdf2b, 0x0, 0x0);
        gbc.writeMem(0xefea, { 0xb2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1695, gbc.sp());
        EXPECT(0xefeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xefea));
        // B2 00AB
        gbc.setState(0x68e9, 0x7402, 0xb470, 0xc4d, 0x927e, 0x321e, 0x1, 0x1);
        gbc.writeMem(0x68e9, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0x68ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00AC
        gbc.setState(0xbb5a, 0x9ade, 0xcd50, 0x22cb, 0x34e7, 0xf374, 0x0, 0x1);
        gbc.writeMem(0xbb5a, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9ade, gbc.sp());
        EXPECT(0xbb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbb5a));
        // B2 00AE
        gbc.setState(0xd547, 0xe282, 0x2fc0, 0xa77d, 0xe2e9, 0x32ca, 0x1, 0x0);
        gbc.writeMem(0xd547, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe282, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd547));
        // B2 00AF
        gbc.setState(0xaeb1, 0x82aa, 0x50a0, 0xf01, 0xe2b, 0xe0e9, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x82aa, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaeb1));
        // B2 00B0
        gbc.setState(0x3878, 0xf7ad, 0x23e0, 0x4fd6, 0xd96b, 0xea7, 0x1, 0x1);
        gbc.writeMem(0x3878, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x3879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00B1
        gbc.setState(0xe75b, 0xa118, 0xe50, 0x3968, 0x616b, 0x13a7, 0x1, 0x0);
        gbc.writeMem(0xe75b, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe75b));
        // B2 00B2
        gbc.setState(0xc17e, 0xad46, 0x7f0, 0x28c3, 0x3c68, 0xcf58, 0x1, 0x1);
        gbc.writeMem(0xc17e, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xad46, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc17e));
        // B2 00B3
        gbc.setState(0x176b, 0x4a7a, 0xef80, 0xd41e, 0x36, 0xd6ff, 0x1, 0x0);
        gbc.writeMem(0x176b, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4a7a, gbc.sp());
        EXPECT(0x176c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00B4
        gbc.setState(0xca34, 0x756b, 0xc910, 0xea2, 0x294, 0xb7a4, 0x1, 0x0);
        gbc.writeMem(0xca34, { 0xb2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x756b, gbc.sp());
        EXPECT(0xca35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xca34));
        // B2 00B5
        gbc.setState(0xc2b1, 0x3960, 0x29d0, 0x1495, 0xf80a, 0xcfab, 0x1, 0x1);
        gbc.writeMem(0xc2b1, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3960, gbc.sp());
        EXPECT(0xc2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc2b1));
        // B2 00B6
        gbc.setState(0x59d7, 0x3741, 0x2380, 0x100e, 0xb8aa, 0x9b61, 0x1, 0x1);
        gbc.writeMem(0x59d7, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x59d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00B7
        gbc.setState(0xc74f, 0xf98d, 0xb5c0, 0xda1f, 0x89e6, 0x9ee2, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc74f));
        // B2 00B8
        gbc.setState(0xdcdd, 0x3512, 0x91b0, 0x8b93, 0xed59, 0x3b77, 0x0, 0x1);
        gbc.writeMem(0xdcdd, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdcdd));
        // B2 00B9
        gbc.setState(0x761a, 0x6bb8, 0x3bb0, 0xa290, 0x9317, 0x686, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6bb8, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00BB
        gbc.setState(0x9783, 0x75f0, 0xc380, 0x70df, 0x1e7e, 0x2a24, 0x0, 0x0);
        gbc.writeMem(0x9783, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x75f0, gbc.sp());
        EXPECT(0x9784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9783));
        // B2 00BD
        gbc.setState(0x1c63, 0x14cc, 0xac20, 0x1400, 0x4c4d, 0xe145, 0x0, 0x0);
        gbc.writeMem(0x1c63, { 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00BE
        gbc.setState(0xb798, 0x87e2, 0xa90, 0x1040, 0x2291, 0x91dd, 0x0, 0x0);
        gbc.writeMem(0xb798, { 0xb2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x87e2, gbc.sp());
        EXPECT(0xb799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb798));
        // B2 00BF
        gbc.setState(0xa934, 0x13f0, 0x42d0, 0xca22, 0x6989, 0xf33e, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa934));
        // B2 00C0
        gbc.setState(0xd01b, 0xca90, 0x1d00, 0x646, 0x4fc2, 0x1782, 0x0, 0x1);
        gbc.writeMem(0xd01b, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0xd01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd01b));
        // B2 00C1
        gbc.setState(0x9377, 0xa31f, 0x8d40, 0xfca, 0xb6fb, 0xb6aa, 0x0, 0x1);
        gbc.writeMem(0x9377, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0x9378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9377));
        // B2 00C2
        gbc.setState(0x24db, 0xcfbd, 0x72c0, 0xf535, 0xd60e, 0x4ec7, 0x1, 0x1);
        gbc.writeMem(0x24db, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcfbd, gbc.sp());
        EXPECT(0x24dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00C3
        gbc.setState(0x5af8, 0x27bd, 0x7e70, 0x829, 0x3c19, 0x9508, 0x1, 0x0);
        gbc.writeMem(0x5af8, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x27bd, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00C4
        gbc.setState(0xbf6c, 0x84c5, 0x3160, 0xed3f, 0xa624, 0xee40, 0x0, 0x1);
        gbc.writeMem(0xbf6c, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x84c5, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbf6c));
        // B2 00C5
        gbc.setState(0x65cf, 0xf072, 0x2220, 0xcdd4, 0x1698, 0x8860, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0xb2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf072, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00C6
        gbc.setState(0xa95e, 0x84b4, 0x5d0, 0x539e, 0xb762, 0xefee, 0x1, 0x1);
        gbc.writeMem(0xa95e, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x84b4, gbc.sp());
        EXPECT(0xa95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa95e));
        // B2 00C7
        gbc.setState(0x7f54, 0xe888, 0x710, 0x7234, 0x44a2, 0x5184, 0x1, 0x1);
        gbc.writeMem(0x7f54, { 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00C8
        gbc.setState(0xe63e, 0x1ba7, 0x7d60, 0x247e, 0x35c2, 0x6ad9, 0x1, 0x0);
        gbc.writeMem(0xe63e, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1ba7, gbc.sp());
        EXPECT(0xe63f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe63e));
        // B2 00C9
        gbc.setState(0xedb7, 0x528d, 0x9100, 0x96c0, 0x1a26, 0xd294, 0x1, 0x1);
        gbc.writeMem(0xedb7, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x528d, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xedb7));
        // B2 00CA
        gbc.setState(0xc027, 0x8028, 0x40b0, 0x9a5d, 0x885b, 0x5fbc, 0x0, 0x1);
        gbc.writeMem(0xc027, { 0xb2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8028, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc027));
        // B2 00CB
        gbc.setState(0x4460, 0xac4e, 0xdb30, 0xa2d8, 0xbed8, 0xba5f, 0x1, 0x0);
        gbc.writeMem(0x4460, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xac4e, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00CC
        gbc.setState(0x999d, 0x2c53, 0x9f10, 0x348b, 0xa092, 0x6ab3, 0x1, 0x1);
        gbc.writeMem(0x999d, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2c53, gbc.sp());
        EXPECT(0x999e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x999d));
        // B2 00CD
        gbc.setState(0x3edf, 0x6cc1, 0x86d0, 0x74d6, 0x59c7, 0x212, 0x0, 0x1);
        gbc.writeMem(0x3edf, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00CE
        gbc.setState(0x79f9, 0xa800, 0x9d40, 0x67dd, 0x8bc7, 0xcb2f, 0x0, 0x0);
        gbc.writeMem(0x79f9, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa800, gbc.sp());
        EXPECT(0x79fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00CF
        gbc.setState(0x2075, 0x1ed7, 0x1280, 0xe132, 0xcbe7, 0xe2d2, 0x0, 0x0);
        gbc.writeMem(0x2075, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0x2076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00D0
        gbc.setState(0x823f, 0x9ed9, 0xf990, 0xaacf, 0x6350, 0xbf1, 0x1, 0x1);
        gbc.writeMem(0x823f, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9ed9, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x823f));
        // B2 00D1
        gbc.setState(0x9b52, 0xb638, 0x46a0, 0x5277, 0x14e2, 0x3443, 0x0, 0x1);
        gbc.writeMem(0x9b52, { 0xb2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9b52));
        // B2 00D2
        gbc.setState(0xd026, 0x7b5c, 0x6ce0, 0x3ea2, 0xfc11, 0xe25f, 0x0, 0x1);
        gbc.writeMem(0xd026, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b5c, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd026));
        // B2 00D3
        gbc.setState(0xa219, 0xcf28, 0xb3c0, 0x4157, 0xce71, 0x31e6, 0x1, 0x0);
        gbc.writeMem(0xa219, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcf28, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa219));
        // B2 00D4
        gbc.setState(0x6ed7, 0x69e6, 0x6ba0, 0x7fbf, 0x227e, 0x7d79, 0x1, 0x0);
        gbc.writeMem(0x6ed7, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0x6ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00D5
        gbc.setState(0xa592, 0x15c2, 0x91b0, 0x1389, 0x94ef, 0xb93, 0x1, 0x0);
        gbc.writeMem(0xa592, { 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x15c2, gbc.sp());
        EXPECT(0xa593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa592));
        // B2 00D6
        gbc.setState(0xe17, 0x79f, 0xdb70, 0xdf91, 0x1b3, 0x262f, 0x0, 0x0);
        gbc.writeMem(0xe17, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79f, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00D7
        gbc.setState(0xc176, 0xa386, 0x660, 0x3400, 0x5e6f, 0xdfd9, 0x0, 0x0);
        gbc.writeMem(0xc176, { 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc176));
        // B2 00D8
        gbc.setState(0xe6ea, 0xc88e, 0x1f50, 0xcf82, 0xaaf5, 0x12a0, 0x0, 0x1);
        gbc.writeMem(0xe6ea, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0xe6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe6ea));
        // B2 00D9
        gbc.setState(0x638d, 0x58de, 0x4090, 0xa29, 0x3f78, 0xdca5, 0x0, 0x1);
        gbc.writeMem(0x638d, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0x638e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DA
        gbc.setState(0x6294, 0x9ec0, 0xfdb0, 0xb747, 0xb2f0, 0xf571, 0x1, 0x1);
        gbc.writeMem(0x6294, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ec0, gbc.sp());
        EXPECT(0x6295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DB
        gbc.setState(0x1c7a, 0xa35b, 0x3b10, 0x6a81, 0x29f5, 0xa905, 0x0, 0x0);
        gbc.writeMem(0x1c7a, { 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa35b, gbc.sp());
        EXPECT(0x1c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DC
        gbc.setState(0x10c0, 0x9932, 0x97e0, 0xe5b0, 0xd690, 0x5572, 0x0, 0x1);
        gbc.writeMem(0x10c0, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0x10c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DD
        gbc.setState(0x20de, 0xba56, 0x1ae0, 0x3c3b, 0x8f9b, 0xa710, 0x0, 0x1);
        gbc.writeMem(0x20de, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DE
        gbc.setState(0x4a00, 0x841a, 0x4860, 0x4ffc, 0xb003, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xb2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x841a, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00DF
        gbc.setState(0x7bed, 0xdaa5, 0xee20, 0xc6ca, 0x2f4a, 0xae0f, 0x1, 0x1);
        gbc.writeMem(0x7bed, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdaa5, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00E0
        gbc.setState(0x2f2f, 0xe097, 0x9a60, 0xc6c5, 0x3d90, 0x2de5, 0x0, 0x0);
        gbc.writeMem(0x2f2f, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0x2f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00E1
        gbc.setState(0x87bf, 0xa07b, 0x61f0, 0x51cf, 0xc284, 0xae03, 0x1, 0x1);
        gbc.writeMem(0x87bf, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x87bf));
        // B2 00E2
        gbc.setState(0xa81b, 0xd5b8, 0x7ce0, 0xad75, 0x8fe4, 0x4c73, 0x0, 0x1);
        gbc.writeMem(0xa81b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd5b8, gbc.sp());
        EXPECT(0xa81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa81b));
        // B2 00E3
        gbc.setState(0x11ca, 0xc787, 0x7d60, 0x853f, 0xfadc, 0x3c72, 0x1, 0x0);
        gbc.writeMem(0x11ca, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc787, gbc.sp());
        EXPECT(0x11cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00E4
        gbc.setState(0xbc3e, 0xadc1, 0xef00, 0x1bf8, 0x7a99, 0xd443, 0x0, 0x1);
        gbc.writeMem(0xbc3e, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0xbc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbc3e));
        // B2 00E6
        gbc.setState(0xacec, 0x89fc, 0x7680, 0x4951, 0xaf78, 0xecfa, 0x1, 0x1);
        gbc.writeMem(0xacec, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0xaced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xacec));
        // B2 00E7
        gbc.setState(0x9ce1, 0xbe4e, 0xc2c0, 0x1217, 0xe6fb, 0x4720, 0x0, 0x1);
        gbc.writeMem(0x9ce1, { 0xb2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbe4e, gbc.sp());
        EXPECT(0x9ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9ce1));
        // B2 00E8
        gbc.setState(0x78dc, 0x1d61, 0xd1e0, 0x7846, 0xdca8, 0xf5b, 0x1, 0x0);
        gbc.writeMem(0x78dc, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x78dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00E9
        gbc.setState(0x6136, 0x86d0, 0x71e0, 0xbe, 0xf249, 0x3f20, 0x1, 0x0);
        gbc.writeMem(0x6136, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0x6137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00EA
        gbc.setState(0x6f91, 0x8f0f, 0x2b10, 0x7c3d, 0xf4a4, 0x51a3, 0x0, 0x0);
        gbc.writeMem(0x6f91, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8f0f, gbc.sp());
        EXPECT(0x6f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00EB
        gbc.setState(0xde52, 0xbc77, 0x1be0, 0xec0b, 0x726b, 0x6494, 0x1, 0x0);
        gbc.writeMem(0xde52, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbc77, gbc.sp());
        EXPECT(0xde53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xde52));
        // B2 00EC
        gbc.setState(0x9b30, 0x3a5e, 0x49d0, 0xbdf2, 0x9c84, 0xf694, 0x1, 0x1);
        gbc.writeMem(0x9b30, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3a5e, gbc.sp());
        EXPECT(0x9b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9b30));
        // B2 00ED
        gbc.setState(0x1f5a, 0x8865, 0x25b0, 0x3f07, 0xbdd3, 0x4861, 0x0, 0x0);
        gbc.writeMem(0x1f5a, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00EE
        gbc.setState(0xe2f5, 0x4d26, 0xdf00, 0x825c, 0x99f0, 0x338a, 0x1, 0x1);
        gbc.writeMem(0xe2f5, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0xe2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe2f5));
        // B2 00EF
        gbc.setState(0xff8, 0x6069, 0x2bc0, 0x5978, 0x7e22, 0xd8d1, 0x0, 0x0);
        gbc.writeMem(0xff8, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6069, gbc.sp());
        EXPECT(0xff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F0
        gbc.setState(0x5db3, 0x4dd, 0x1600, 0xa4f2, 0x87f9, 0x6a73, 0x0, 0x1);
        gbc.writeMem(0x5db3, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4dd, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F1
        gbc.setState(0x525d, 0x9f59, 0x9210, 0x602f, 0x26f0, 0x84e8, 0x1, 0x0);
        gbc.writeMem(0x525d, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9f59, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F2
        gbc.setState(0x1dc4, 0xe862, 0x3550, 0xfcc, 0x5c0f, 0x441b, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe862, gbc.sp());
        EXPECT(0x1dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F3
        gbc.setState(0xe5ec, 0x56ad, 0x5c80, 0x23aa, 0x97b8, 0xc04d, 0x1, 0x1);
        gbc.writeMem(0xe5ec, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56ad, gbc.sp());
        EXPECT(0xe5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe5ec));
        // B2 00F4
        gbc.setState(0x2e47, 0xaf04, 0xaf50, 0x2382, 0x1ca, 0x519e, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x2e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F5
        gbc.setState(0x595, 0x408e, 0xdec0, 0xd54b, 0x5b4, 0x5178, 0x1, 0x1);
        gbc.writeMem(0x595, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x408e, gbc.sp());
        EXPECT(0x596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F6
        gbc.setState(0xd9f3, 0xb0e5, 0x70c0, 0x18ff, 0xaa73, 0x3b8e, 0x1, 0x1);
        gbc.writeMem(0xd9f3, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb0e5, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd9f3));
        // B2 00F7
        gbc.setState(0x7f48, 0xa94f, 0x5440, 0x2789, 0xd203, 0xc0ad, 0x0, 0x0);
        gbc.writeMem(0x7f48, { 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa94f, gbc.sp());
        EXPECT(0x7f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00F9
        gbc.setState(0xab00, 0x56d2, 0x2c0, 0x6cc3, 0x6b0c, 0x6f03, 0x1, 0x0);
        gbc.writeMem(0xab00, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xab00));
        // B2 00FA
        gbc.setState(0x2cd, 0x8253, 0x4050, 0x2e, 0xa2ee, 0x64a6, 0x0, 0x0);
        gbc.writeMem(0x2cd, { 0xb2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0x2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00FB
        gbc.setState(0x2d5b, 0xdcc1, 0xfb20, 0x8cf9, 0x14be, 0x42d, 0x0, 0x0);
        gbc.writeMem(0x2d5b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdcc1, gbc.sp());
        EXPECT(0x2d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00FC
        gbc.setState(0x96f4, 0x308c, 0xe3c0, 0x8a92, 0xecba, 0xc29c, 0x0, 0x0);
        gbc.writeMem(0x96f4, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x308c, gbc.sp());
        EXPECT(0x96f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x96f4));
        // B2 00FD
        gbc.setState(0x5365, 0x161, 0x8f50, 0x1497, 0x63e9, 0x6969, 0x0, 0x0);
        gbc.writeMem(0x5365, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x161, gbc.sp());
        EXPECT(0x5366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 00FE
        gbc.setState(0x9f00, 0xe261, 0xfb70, 0x50f2, 0xd6dd, 0xacc1, 0x0, 0x0);
        gbc.writeMem(0x9f00, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe261, gbc.sp());
        EXPECT(0x9f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9f00));
        // B2 00FF
        gbc.setState(0xea73, 0x23e2, 0xb0a0, 0x9694, 0x502d, 0x2b43, 0x0, 0x0);
        gbc.writeMem(0xea73, { 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x23e2, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xea73));
        // B2 0100
        gbc.setState(0x4f60, 0x548c, 0x1770, 0x8610, 0x5442, 0xe290, 0x1, 0x1);
        gbc.writeMem(0x4f60, { 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0101
        gbc.setState(0x4bca, 0xb00a, 0x3250, 0xdc45, 0xac80, 0xd50a, 0x0, 0x1);
        gbc.writeMem(0x4bca, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb00a, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0102
        gbc.setState(0x8380, 0xc508, 0xb260, 0x84ce, 0x876b, 0x5a07, 0x1, 0x1);
        gbc.writeMem(0x8380, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc508, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8380));
        // B2 0103
        gbc.setState(0xa4d8, 0x8f8, 0x4940, 0xbfc7, 0xfde6, 0x11d0, 0x1, 0x0);
        gbc.writeMem(0xa4d8, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8f8, gbc.sp());
        EXPECT(0xa4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa4d8));
        // B2 0104
        gbc.setState(0x23a6, 0x10b, 0x5730, 0x9afc, 0x7bcd, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0x23a6, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x10b, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0105
        gbc.setState(0xed31, 0x91a6, 0xd9d0, 0xe41a, 0xcef0, 0x1d8d, 0x1, 0x0);
        gbc.writeMem(0xed31, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x91a6, gbc.sp());
        EXPECT(0xed32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xed31));
        // B2 0106
        gbc.setState(0x9d96, 0x8414, 0x2e30, 0x129f, 0xfeed, 0xab70, 0x0, 0x0);
        gbc.writeMem(0x9d96, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0x9d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9d96));
        // B2 0107
        gbc.setState(0x24cc, 0xf06a, 0x4b40, 0xe69c, 0x6bdf, 0x690b, 0x1, 0x0);
        gbc.writeMem(0x24cc, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0108
        gbc.setState(0x3544, 0xed8e, 0xf6a0, 0x6942, 0xcbb2, 0xe9fe, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0109
        gbc.setState(0x3deb, 0xefc, 0x1e20, 0x8b5f, 0xddb1, 0x6720, 0x1, 0x0);
        gbc.writeMem(0x3deb, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 010A
        gbc.setState(0x958f, 0x7133, 0xd080, 0xb0a4, 0x45, 0x8085, 0x0, 0x0);
        gbc.writeMem(0x958f, { 0xb2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7133, gbc.sp());
        EXPECT(0x9590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x958f));
        // B2 010B
        gbc.setState(0xe644, 0x5aeb, 0xde0, 0x2d25, 0xca08, 0xf2cd, 0x1, 0x0);
        gbc.writeMem(0xe644, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5aeb, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe644));
        // B2 010C
        gbc.setState(0x200b, 0x643e, 0xc910, 0xb712, 0xd62d, 0xd0ee, 0x1, 0x1);
        gbc.writeMem(0x200b, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x643e, gbc.sp());
        EXPECT(0x200c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 010D
        gbc.setState(0xf97, 0x14e8, 0xe3b0, 0x3034, 0x9ee9, 0x8d51, 0x0, 0x0);
        gbc.writeMem(0xf97, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x14e8, gbc.sp());
        EXPECT(0xf98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 010E
        gbc.setState(0xda4d, 0x78c2, 0xc4e0, 0xc7d4, 0xfac1, 0x705d, 0x0, 0x1);
        gbc.writeMem(0xda4d, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x78c2, gbc.sp());
        EXPECT(0xda4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xda4d));
        // B2 010F
        gbc.setState(0xbf56, 0x2158, 0x3ba0, 0x8f6c, 0x3fb0, 0xdf5c, 0x1, 0x1);
        gbc.writeMem(0xbf56, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2158, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbf56));
        // B2 0110
        gbc.setState(0x9420, 0x9198, 0x24a0, 0xfb70, 0x6be5, 0x7677, 0x1, 0x1);
        gbc.writeMem(0x9420, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9198, gbc.sp());
        EXPECT(0x9421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9420));
        // B2 0111
        gbc.setState(0xd6ea, 0xa71a, 0xe880, 0xcdc7, 0xb10a, 0x4571, 0x1, 0x0);
        gbc.writeMem(0xd6ea, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0xd6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd6ea));
        // B2 0112
        gbc.setState(0x4645, 0x6656, 0xa3a0, 0x9d0c, 0x1c42, 0x4a2d, 0x0, 0x1);
        gbc.writeMem(0x4645, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0113
        gbc.setState(0x8f32, 0x638f, 0x4d10, 0xb026, 0x4d44, 0xeee6, 0x1, 0x0);
        gbc.writeMem(0x8f32, { 0xb2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x638f, gbc.sp());
        EXPECT(0x8f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8f32));
        // B2 0114
        gbc.setState(0x85c3, 0xec56, 0xba30, 0x4e7, 0x6c36, 0x72f7, 0x1, 0x0);
        gbc.writeMem(0x85c3, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xec56, gbc.sp());
        EXPECT(0x85c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x85c3));
        // B2 0115
        gbc.setState(0x8399, 0x18e8, 0xfb30, 0x15b8, 0x8d01, 0x762b, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x18e8, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8399));
        // B2 0116
        gbc.setState(0x27bd, 0x977b, 0x28d0, 0xa779, 0x1f2a, 0xefae, 0x0, 0x1);
        gbc.writeMem(0x27bd, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x977b, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0117
        gbc.setState(0x6911, 0xa587, 0x4210, 0x36f0, 0xeb93, 0x9b03, 0x0, 0x0);
        gbc.writeMem(0x6911, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa587, gbc.sp());
        EXPECT(0x6912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0118
        gbc.setState(0xca7d, 0x8de9, 0x24e0, 0x49ae, 0x1a73, 0xb3f6, 0x0, 0x0);
        gbc.writeMem(0xca7d, { 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8de9, gbc.sp());
        EXPECT(0xca7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xca7d));
        // B2 0119
        gbc.setState(0x119a, 0xfe6, 0x2920, 0x9627, 0xb1be, 0xe3a9, 0x1, 0x1);
        gbc.writeMem(0x119a, { 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfe6, gbc.sp());
        EXPECT(0x119b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 011A
        gbc.setState(0x1d3e, 0x8b84, 0xa980, 0xc17e, 0xfa12, 0x1b79, 0x0, 0x1);
        gbc.writeMem(0x1d3e, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b84, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 011B
        gbc.setState(0xac74, 0xa297, 0xb580, 0x202b, 0xf0d3, 0xf347, 0x0, 0x0);
        gbc.writeMem(0xac74, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xac74));
        // B2 011C
        gbc.setState(0x855d, 0x7a39, 0x330, 0x2cea, 0x7966, 0xa519, 0x0, 0x0);
        gbc.writeMem(0x855d, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0x855e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x855d));
        // B2 011D
        gbc.setState(0xc2f1, 0xdb8a, 0x4f20, 0x3308, 0xce0, 0x61b, 0x0, 0x1);
        gbc.writeMem(0xc2f1, { 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc2f1));
        // B2 011E
        gbc.setState(0x9c6f, 0x6202, 0xa60, 0xfd51, 0x2385, 0x3762, 0x1, 0x1);
        gbc.writeMem(0x9c6f, { 0xb2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9c6f));
        // B2 011F
        gbc.setState(0x8587, 0x577a, 0x5450, 0xd14f, 0xde00, 0xa543, 0x0, 0x0);
        gbc.writeMem(0x8587, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0x8588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8587));
        // B2 0120
        gbc.setState(0x952c, 0xf5b6, 0xbeb0, 0xd117, 0xdfa6, 0xe0a6, 0x1, 0x1);
        gbc.writeMem(0x952c, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf5b6, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x952c));
        // B2 0121
        gbc.setState(0x9288, 0x58e7, 0x5e50, 0x37f2, 0x5d4, 0x4f2a, 0x1, 0x1);
        gbc.writeMem(0x9288, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9288));
        // B2 0122
        gbc.setState(0xc96, 0xba36, 0xf700, 0x9a8d, 0x4b8b, 0x9274, 0x0, 0x0);
        gbc.writeMem(0xc96, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0123
        gbc.setState(0x139b, 0xc394, 0xfd50, 0xe976, 0xf680, 0x30da, 0x0, 0x0);
        gbc.writeMem(0x139b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc394, gbc.sp());
        EXPECT(0x139c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0124
        gbc.setState(0xbac5, 0xc30, 0x6ec0, 0xe8c7, 0x3b7e, 0xe506, 0x1, 0x1);
        gbc.writeMem(0xbac5, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbac5));
        // B2 0125
        gbc.setState(0x5e19, 0x5315, 0xeeb0, 0x164b, 0x3003, 0x2a36, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5315, gbc.sp());
        EXPECT(0x5e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0126
        gbc.setState(0x4836, 0x5137, 0xd140, 0xcdf0, 0x8e3, 0xa5ee, 0x1, 0x1);
        gbc.writeMem(0x4836, { 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5137, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0127
        gbc.setState(0x8dc9, 0x2b43, 0xa40, 0x2171, 0x583b, 0x82dd, 0x1, 0x1);
        gbc.writeMem(0x8dc9, { 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2b43, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8dc9));
        // B2 0128
        gbc.setState(0xa69c, 0xc2b4, 0xff00, 0x3988, 0x3dfa, 0xdd4e, 0x1, 0x0);
        gbc.writeMem(0xa69c, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc2b4, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa69c));
        // B2 0129
        gbc.setState(0x207d, 0xe52c, 0x10a0, 0x153f, 0x961f, 0x97a2, 0x0, 0x1);
        gbc.writeMem(0x207d, { 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe52c, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 012B
        gbc.setState(0x10ca, 0x2523, 0x1570, 0xfd90, 0xb143, 0xa3b, 0x0, 0x0);
        gbc.writeMem(0x10ca, { 0xb2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 012C
        gbc.setState(0x7f2, 0xf1bc, 0x70a0, 0x17a0, 0x1adc, 0x5fee, 0x0, 0x0);
        gbc.writeMem(0x7f2, { 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 012D
        gbc.setState(0x955, 0xe376, 0x3a30, 0xdead, 0x6e50, 0xa12a, 0x0, 0x1);
        gbc.writeMem(0x955, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe376, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 012E
        gbc.setState(0x148f, 0xead1, 0x72b0, 0x5100, 0x6af6, 0x8ccb, 0x1, 0x0);
        gbc.writeMem(0x148f, { 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0130
        gbc.setState(0xd856, 0xf98d, 0xe970, 0xeb40, 0x49e8, 0x6d2c, 0x1, 0x1);
        gbc.writeMem(0xd856, { 0xb2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd856));
        // B2 0131
        gbc.setState(0x2e7a, 0xd87b, 0xa540, 0x724f, 0xa700, 0x794a, 0x0, 0x1);
        gbc.writeMem(0x2e7a, { 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0x2e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0132
        gbc.setState(0x9705, 0xeb93, 0x8930, 0x69a7, 0xdd72, 0x5341, 0x0, 0x1);
        gbc.writeMem(0x9705, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeb93, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9705));
        // B2 0133
        gbc.setState(0x6a2d, 0x2d69, 0x3350, 0x1f82, 0x5449, 0xfedf, 0x0, 0x0);
        gbc.writeMem(0x6a2d, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2d69, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0134
        gbc.setState(0x6d5, 0xd0b6, 0x2e40, 0xc4, 0x6de5, 0x30a0, 0x0, 0x0);
        gbc.writeMem(0x6d5, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0x6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0135
        gbc.setState(0xc9cd, 0xbdc9, 0xb780, 0x2fa7, 0xd728, 0x14f0, 0x1, 0x0);
        gbc.writeMem(0xc9cd, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbdc9, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc9cd));
        // B2 0136
        gbc.setState(0x532e, 0x7f27, 0x6d30, 0xb1a5, 0x343f, 0x3252, 0x0, 0x0);
        gbc.writeMem(0x532e, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7f27, gbc.sp());
        EXPECT(0x532f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0137
        gbc.setState(0xbf66, 0xd37d, 0x5560, 0x6a4d, 0xe2a, 0xdb6f, 0x1, 0x1);
        gbc.writeMem(0xbf66, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd37d, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbf66));
        // B2 0138
        gbc.setState(0x1110, 0x984b, 0xf160, 0x47ed, 0x9435, 0xb17c, 0x1, 0x0);
        gbc.writeMem(0x1110, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x984b, gbc.sp());
        EXPECT(0x1111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0139
        gbc.setState(0x721f, 0x2465, 0xdf40, 0x499b, 0xb5da, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0x721f, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0x7220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 013B
        gbc.setState(0xd92a, 0x4f31, 0x3890, 0xc5b3, 0xf352, 0x599f, 0x0, 0x0);
        gbc.writeMem(0xd92a, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f31, gbc.sp());
        EXPECT(0xd92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd92a));
        // B2 013D
        gbc.setState(0x86c8, 0xf0a7, 0x7a0, 0xeca3, 0x98ca, 0x41fa, 0x1, 0x0);
        gbc.writeMem(0x86c8, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x86c8));
        // B2 013E
        gbc.setState(0xd6ec, 0xa2a4, 0xd450, 0x622d, 0x7607, 0x794b, 0x0, 0x0);
        gbc.writeMem(0xd6ec, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa2a4, gbc.sp());
        EXPECT(0xd6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd6ec));
        // B2 013F
        gbc.setState(0xea55, 0xbec1, 0x1ed0, 0xc822, 0xf2b2, 0xf93, 0x0, 0x0);
        gbc.writeMem(0xea55, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xea55));
        // B2 0140
        gbc.setState(0x7e72, 0xe946, 0xf710, 0x5707, 0xdec4, 0x19bc, 0x0, 0x0);
        gbc.writeMem(0x7e72, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe946, gbc.sp());
        EXPECT(0x7e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0141
        gbc.setState(0x1fef, 0x39d8, 0xfc00, 0x6cb5, 0xd734, 0x5d5a, 0x1, 0x0);
        gbc.writeMem(0x1fef, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x39d8, gbc.sp());
        EXPECT(0x1ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0142
        gbc.setState(0xe5c7, 0x66fe, 0x1210, 0xca0e, 0xf0d4, 0x9ec4, 0x1, 0x1);
        gbc.writeMem(0xe5c7, { 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0xe5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe5c7));
        // B2 0143
        gbc.setState(0x7dcc, 0x6037, 0x630, 0x761e, 0x84fe, 0xb1db, 0x1, 0x1);
        gbc.writeMem(0x7dcc, { 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6037, gbc.sp());
        EXPECT(0x7dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0144
        gbc.setState(0xda31, 0x6988, 0xff40, 0x3651, 0xc8e1, 0xffab, 0x1, 0x1);
        gbc.writeMem(0xda31, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6988, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xda31));
        // B2 0145
        gbc.setState(0xaba2, 0xfc52, 0x8680, 0x8356, 0xde13, 0xb2ff, 0x0, 0x0);
        gbc.writeMem(0xaba2, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0xaba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaba2));
        // B2 0148
        gbc.setState(0xdc03, 0xd676, 0x45f0, 0x6be1, 0x765a, 0xf94f, 0x1, 0x1);
        gbc.writeMem(0xdc03, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd676, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdc03));
        // B2 0149
        gbc.setState(0x55a7, 0x241a, 0x340, 0xf37a, 0x7d9d, 0xe79f, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0x55a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 014A
        gbc.setState(0xbdde, 0x7e07, 0x2290, 0x367, 0xd474, 0xffb0, 0x1, 0x1);
        gbc.writeMem(0xbdde, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbdde));
        // B2 014B
        gbc.setState(0x339b, 0xe324, 0x60d0, 0x8b40, 0x4577, 0xba40, 0x1, 0x0);
        gbc.writeMem(0x339b, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 014C
        gbc.setState(0x36c5, 0xd5d8, 0x6da0, 0xac31, 0x7a38, 0xbff0, 0x1, 0x0);
        gbc.writeMem(0x36c5, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd5d8, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 014D
        gbc.setState(0x34b, 0x3b75, 0x82c0, 0x8b03, 0x94b0, 0x7afb, 0x0, 0x0);
        gbc.writeMem(0x34b, { 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3b75, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 014E
        gbc.setState(0x1fe1, 0xfd6c, 0xbb50, 0xf10c, 0x152a, 0x2e93, 0x0, 0x1);
        gbc.writeMem(0x1fe1, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0x1fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 014F
        gbc.setState(0x5714, 0x12ca, 0x7e50, 0xb7d5, 0xdc17, 0x6b90, 0x0, 0x0);
        gbc.writeMem(0x5714, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x12ca, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0150
        gbc.setState(0x4670, 0x6978, 0xca30, 0x26a, 0xa0f3, 0x7927, 0x1, 0x1);
        gbc.writeMem(0x4670, { 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6978, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0152
        gbc.setState(0x368b, 0x486f, 0x5fd0, 0x9b5, 0x9157, 0xe7ad, 0x0, 0x1);
        gbc.writeMem(0x368b, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0153
        gbc.setState(0x94a3, 0x2a2c, 0x8f90, 0x76a8, 0xb39b, 0x8423, 0x1, 0x0);
        gbc.writeMem(0x94a3, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2a2c, gbc.sp());
        EXPECT(0x94a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x94a3));
        // B2 0154
        gbc.setState(0x64b4, 0xde90, 0x7a50, 0x634e, 0xac8a, 0x56e8, 0x0, 0x1);
        gbc.writeMem(0x64b4, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x64b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0155
        gbc.setState(0xb7d9, 0x1c49, 0x1510, 0x5782, 0x9fe9, 0x47c7, 0x0, 0x1);
        gbc.writeMem(0xb7d9, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb7d9));
        // B2 0156
        gbc.setState(0x7a23, 0xe025, 0x2d60, 0x543, 0x41a5, 0x3e78, 0x1, 0x0);
        gbc.writeMem(0x7a23, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe025, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0157
        gbc.setState(0x5fda, 0x1f2a, 0xa120, 0x87cb, 0x5764, 0x62ca, 0x1, 0x1);
        gbc.writeMem(0x5fda, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f2a, gbc.sp());
        EXPECT(0x5fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0158
        gbc.setState(0x67ff, 0x4f5b, 0x8740, 0xcaaa, 0xc3a0, 0x4ed4, 0x1, 0x0);
        gbc.writeMem(0x67ff, { 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4f5b, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0159
        gbc.setState(0xa565, 0x55dc, 0x1d30, 0x3cd1, 0x618, 0xef6f, 0x0, 0x0);
        gbc.writeMem(0xa565, { 0xb2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x55dc, gbc.sp());
        EXPECT(0xa566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa565));
        // B2 015A
        gbc.setState(0x1a6f, 0xb47c, 0x2d60, 0x19, 0x4c53, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x1a6f, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb47c, gbc.sp());
        EXPECT(0x1a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 015B
        gbc.setState(0xabdb, 0x332d, 0x84a0, 0x22f5, 0x2726, 0xc2b3, 0x1, 0x1);
        gbc.writeMem(0xabdb, { 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x332d, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xabdb));
        // B2 015D
        gbc.setState(0x3d50, 0x23c7, 0xf600, 0x863d, 0x2d54, 0x6bed, 0x0, 0x0);
        gbc.writeMem(0x3d50, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x23c7, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 015E
        gbc.setState(0x7d10, 0xbcb9, 0xc6e0, 0x261b, 0x79c5, 0x35b0, 0x0, 0x0);
        gbc.writeMem(0x7d10, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x7d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 015F
        gbc.setState(0x9519, 0xeadd, 0xaa40, 0xd34f, 0x37ea, 0xf833, 0x1, 0x0);
        gbc.writeMem(0x9519, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9519));
        // B2 0160
        gbc.setState(0xe090, 0xc925, 0x20f0, 0xefb8, 0xd3f3, 0x3848, 0x1, 0x1);
        gbc.writeMem(0xe090, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0xe091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe090));
        // B2 0161
        gbc.setState(0x4019, 0xc5b, 0xad00, 0xa1cb, 0x6cf0, 0x7ede, 0x1, 0x1);
        gbc.writeMem(0x4019, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc5b, gbc.sp());
        EXPECT(0x401a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0162
        gbc.setState(0x589b, 0xd212, 0x1e50, 0x2fd, 0xfd77, 0xc8c5, 0x0, 0x1);
        gbc.writeMem(0x589b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0164
        gbc.setState(0xa750, 0x21cd, 0xd880, 0x62c8, 0xf06, 0x477, 0x1, 0x0);
        gbc.writeMem(0xa750, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x21cd, gbc.sp());
        EXPECT(0xa751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa750));
        // B2 0165
        gbc.setState(0xabf7, 0x91, 0x6d80, 0xf1c1, 0x726f, 0x7a9, 0x0, 0x1);
        gbc.writeMem(0xabf7, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x91, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xabf7));
        // B2 0166
        gbc.setState(0x14a5, 0xa4e, 0xfd90, 0xbe3b, 0x9272, 0xa4f2, 0x0, 0x1);
        gbc.writeMem(0x14a5, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0167
        gbc.setState(0x8880, 0x97f5, 0x73f0, 0x480e, 0xd2fd, 0x3038, 0x1, 0x0);
        gbc.writeMem(0x8880, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x97f5, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8880));
        // B2 0168
        gbc.setState(0x8752, 0xae9a, 0x8aa0, 0x3e47, 0xcb0a, 0x2163, 0x1, 0x1);
        gbc.writeMem(0x8752, { 0xb2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae9a, gbc.sp());
        EXPECT(0x8753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8752));
        // B2 0169
        gbc.setState(0xd2c, 0xa427, 0x8fe0, 0x2a9, 0x6bdd, 0x72b6, 0x0, 0x0);
        gbc.writeMem(0xd2c, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016A
        gbc.setState(0xa41, 0x5f07, 0x9d60, 0xcfbd, 0x6533, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0xa41, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016B
        gbc.setState(0x4138, 0x97d4, 0x49f0, 0x6d2c, 0xa3da, 0xbd, 0x1, 0x1);
        gbc.writeMem(0x4138, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x97d4, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016C
        gbc.setState(0x1d71, 0x5838, 0x62e0, 0x2912, 0xb192, 0x3fad, 0x1, 0x0);
        gbc.writeMem(0x1d71, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5838, gbc.sp());
        EXPECT(0x1d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016D
        gbc.setState(0x4bd, 0x44aa, 0xeb70, 0x37c0, 0x8275, 0x264, 0x1, 0x1);
        gbc.writeMem(0x4bd, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x44aa, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016E
        gbc.setState(0x2686, 0x74d3, 0xb6b0, 0x903d, 0x69cb, 0x931a, 0x1, 0x1);
        gbc.writeMem(0x2686, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74d3, gbc.sp());
        EXPECT(0x2687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 016F
        gbc.setState(0xb380, 0xc7a3, 0xd0b0, 0x73c8, 0x2b79, 0x58c3, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc7a3, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb380));
        // B2 0171
        gbc.setState(0xb3d5, 0x3d4b, 0xc7c0, 0x56e3, 0x9885, 0x2206, 0x0, 0x1);
        gbc.writeMem(0xb3d5, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb3d5));
        // B2 0172
        gbc.setState(0xa406, 0xd907, 0x1ae0, 0x99ba, 0x5b61, 0x1320, 0x0, 0x1);
        gbc.writeMem(0xa406, { 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd907, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa406));
        // B2 0173
        gbc.setState(0x4a64, 0xf218, 0x6090, 0x5a4d, 0xd4e5, 0x1307, 0x0, 0x0);
        gbc.writeMem(0x4a64, { 0xb2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf218, gbc.sp());
        EXPECT(0x4a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0174
        gbc.setState(0xcb06, 0xee7f, 0x7600, 0xafc2, 0xfe79, 0x704f, 0x1, 0x1);
        gbc.writeMem(0xcb06, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcb06));
        // B2 0175
        gbc.setState(0x37ae, 0x88c6, 0x11d0, 0x4cf7, 0x4f1c, 0x128, 0x1, 0x0);
        gbc.writeMem(0x37ae, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x88c6, gbc.sp());
        EXPECT(0x37af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0176
        gbc.setState(0x216f, 0x7fa9, 0xb700, 0x6ae2, 0xeee4, 0xa62c, 0x1, 0x0);
        gbc.writeMem(0x216f, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7fa9, gbc.sp());
        EXPECT(0x2170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0177
        gbc.setState(0x3143, 0x669e, 0x6620, 0x4146, 0xa547, 0x57a4, 0x0, 0x0);
        gbc.writeMem(0x3143, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x669e, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0178
        gbc.setState(0xa232, 0x18b8, 0xd50, 0x3bf6, 0x156d, 0x520b, 0x1, 0x0);
        gbc.writeMem(0xa232, { 0xb2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x18b8, gbc.sp());
        EXPECT(0xa233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa232));
        // B2 0179
        gbc.setState(0x364a, 0x1a48, 0x8df0, 0x58eb, 0x7a9f, 0x869e, 0x0, 0x1);
        gbc.writeMem(0x364a, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1a48, gbc.sp());
        EXPECT(0x364b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 017A
        gbc.setState(0x2f11, 0xbe9e, 0x19c0, 0x237c, 0x335c, 0x97f2, 0x0, 0x1);
        gbc.writeMem(0x2f11, { 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 017B
        gbc.setState(0x3a1b, 0x5a3a, 0xddc0, 0xde06, 0x1f1e, 0x4404, 0x0, 0x1);
        gbc.writeMem(0x3a1b, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5a3a, gbc.sp());
        EXPECT(0x3a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 017C
        gbc.setState(0x9776, 0x1132, 0x1800, 0xbe9e, 0xe1ca, 0x7aa2, 0x0, 0x0);
        gbc.writeMem(0x9776, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1132, gbc.sp());
        EXPECT(0x9777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9776));
        // B2 017D
        gbc.setState(0x7f34, 0xc60, 0x9c70, 0xcc2f, 0x7a1, 0x8426, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc60, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 017E
        gbc.setState(0xd094, 0xbd4a, 0x730, 0x5ebf, 0x6796, 0x798, 0x1, 0x0);
        gbc.writeMem(0xd094, { 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0xd095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd094));
        // B2 017F
        gbc.setState(0xe0e3, 0xb4a7, 0xd340, 0x4e10, 0xfee1, 0x5ec7, 0x0, 0x1);
        gbc.writeMem(0xe0e3, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb4a7, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe0e3));
        // B2 0180
        gbc.setState(0x8ac9, 0x5758, 0x1e00, 0xf989, 0xeb70, 0xa1ac, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8ac9));
        // B2 0182
        gbc.setState(0x3d9d, 0xba16, 0x320, 0x63f8, 0x2ce0, 0x5020, 0x0, 0x1);
        gbc.writeMem(0x3d9d, { 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba16, gbc.sp());
        EXPECT(0x3d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0183
        gbc.setState(0x6cf3, 0x2fb0, 0xe6d0, 0xc24b, 0x529f, 0x8835, 0x0, 0x0);
        gbc.writeMem(0x6cf3, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0184
        gbc.setState(0x8a93, 0xf9e0, 0x4250, 0x512f, 0xf5cd, 0x4db1, 0x1, 0x0);
        gbc.writeMem(0x8a93, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf9e0, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8a93));
        // B2 0185
        gbc.setState(0x4962, 0x413f, 0x4260, 0x352, 0xc753, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x4962, { 0xb2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0186
        gbc.setState(0x213, 0x878e, 0x7880, 0x2cc8, 0x243c, 0x63cd, 0x1, 0x1);
        gbc.writeMem(0x213, { 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x878e, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0187
        gbc.setState(0x74c9, 0x8a5f, 0xe310, 0x29ca, 0xa2b6, 0xf192, 0x1, 0x1);
        gbc.writeMem(0x74c9, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0188
        gbc.setState(0xb4ce, 0x2a4b, 0xb150, 0x9372, 0x99e4, 0xc210, 0x1, 0x1);
        gbc.writeMem(0xb4ce, { 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0xb4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb4ce));
        // B2 0189
        gbc.setState(0x4bb1, 0x4dc1, 0xa90, 0x32e1, 0xf960, 0x10c3, 0x0, 0x0);
        gbc.writeMem(0x4bb1, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 018A
        gbc.setState(0xc22c, 0x9158, 0xb930, 0x7259, 0x2551, 0x7d1f, 0x0, 0x0);
        gbc.writeMem(0xc22c, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0xc22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc22c));
        // B2 018B
        gbc.setState(0x3f79, 0xab5f, 0x7540, 0xa6c, 0x38f7, 0x5e9b, 0x1, 0x1);
        gbc.writeMem(0x3f79, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xab5f, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 018C
        gbc.setState(0xef89, 0x3019, 0x8910, 0x9306, 0xfa2a, 0xbdac, 0x0, 0x1);
        gbc.writeMem(0xef89, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3019, gbc.sp());
        EXPECT(0xef8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xef89));
        // B2 018D
        gbc.setState(0xe3d1, 0xcf07, 0xd660, 0xe7c0, 0xfa24, 0x290, 0x1, 0x1);
        gbc.writeMem(0xe3d1, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcf07, gbc.sp());
        EXPECT(0xe3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3d1));
        // B2 018E
        gbc.setState(0x17ef, 0xae69, 0x8ed0, 0x76a8, 0x3e2c, 0x5a74, 0x0, 0x0);
        gbc.writeMem(0x17ef, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae69, gbc.sp());
        EXPECT(0x17f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 018F
        gbc.setState(0xb01f, 0xbc1d, 0x3d10, 0xd9ff, 0xe87a, 0x2b51, 0x1, 0x0);
        gbc.writeMem(0xb01f, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc1d, gbc.sp());
        EXPECT(0xb020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb01f));
        // B2 0190
        gbc.setState(0x894f, 0xfeee, 0xce20, 0x10ca, 0x97dd, 0x3d43, 0x0, 0x1);
        gbc.writeMem(0x894f, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfeee, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x894f));
        // B2 0191
        gbc.setState(0xc36c, 0x8a7, 0x9000, 0x86b1, 0xb47d, 0xa08e, 0x1, 0x0);
        gbc.writeMem(0xc36c, { 0xb2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8a7, gbc.sp());
        EXPECT(0xc36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc36c));
        // B2 0192
        gbc.setState(0x2656, 0x6bc5, 0x69d0, 0xe5c9, 0xfdf4, 0x6345, 0x0, 0x1);
        gbc.writeMem(0x2656, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6bc5, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0193
        gbc.setState(0x63a8, 0x27cc, 0x4720, 0x9d82, 0x74d8, 0xca95, 0x0, 0x1);
        gbc.writeMem(0x63a8, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27cc, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0194
        gbc.setState(0xcfc7, 0x9bb5, 0xcd90, 0xcf72, 0x9048, 0x334a, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9bb5, gbc.sp());
        EXPECT(0xcfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcfc7));
        // B2 0195
        gbc.setState(0x391c, 0xc05e, 0x4610, 0x659c, 0xa5c1, 0xd882, 0x0, 0x0);
        gbc.writeMem(0x391c, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc05e, gbc.sp());
        EXPECT(0x391d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0196
        gbc.setState(0xaf23, 0x1465, 0x4be0, 0x59ff, 0x342c, 0x7a0e, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1465, gbc.sp());
        EXPECT(0xaf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaf23));
        // B2 0197
        gbc.setState(0x5251, 0xbfd2, 0x8490, 0x1e4a, 0x4e1d, 0xefe9, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x5252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0198
        gbc.setState(0x2499, 0x835d, 0x3e60, 0x888d, 0x5adc, 0xb736, 0x1, 0x0);
        gbc.writeMem(0x2499, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x835d, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0199
        gbc.setState(0xe716, 0xd402, 0xb6d0, 0xa0f9, 0x22b0, 0x6819, 0x0, 0x1);
        gbc.writeMem(0xe716, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd402, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe716));
        // B2 019A
        gbc.setState(0x122b, 0xee62, 0x6170, 0x3389, 0xf76f, 0x3e37, 0x1, 0x1);
        gbc.writeMem(0x122b, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 019B
        gbc.setState(0x679b, 0x6dcf, 0x3390, 0x5e33, 0xf151, 0xd64b, 0x1, 0x0);
        gbc.writeMem(0x679b, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6dcf, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 019C
        gbc.setState(0x24a1, 0xa898, 0x37b0, 0x15f5, 0x8a00, 0x2f09, 0x1, 0x1);
        gbc.writeMem(0x24a1, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa898, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 019D
        gbc.setState(0xbd59, 0x4b21, 0x590, 0xfb7b, 0x325c, 0xbef8, 0x0, 0x1);
        gbc.writeMem(0xbd59, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4b21, gbc.sp());
        EXPECT(0xbd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbd59));
        // B2 019E
        gbc.setState(0x64f5, 0x5c2, 0x1400, 0xfdc5, 0x9665, 0x5f6e, 0x1, 0x1);
        gbc.writeMem(0x64f5, { 0xb2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 019F
        gbc.setState(0x542d, 0x3805, 0x5ff0, 0x1c53, 0x8536, 0x6f9e, 0x1, 0x0);
        gbc.writeMem(0x542d, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3805, gbc.sp());
        EXPECT(0x542e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01A0
        gbc.setState(0xe260, 0xdbae, 0x4f30, 0xe552, 0x957c, 0x1066, 0x1, 0x1);
        gbc.writeMem(0xe260, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdbae, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe260));
        // B2 01A1
        gbc.setState(0x9e25, 0xbccf, 0x8840, 0x2269, 0x8124, 0x6bdf, 0x0, 0x0);
        gbc.writeMem(0x9e25, { 0xb2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9e25));
        // B2 01A2
        gbc.setState(0xc9ec, 0x3fe9, 0xb8f0, 0x65f9, 0xc7f9, 0xfe62, 0x0, 0x0);
        gbc.writeMem(0xc9ec, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3fe9, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc9ec));
        // B2 01A3
        gbc.setState(0x32ba, 0xadab, 0x18c0, 0x6b93, 0x4075, 0x23d, 0x1, 0x1);
        gbc.writeMem(0x32ba, { 0xb2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xadab, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01A4
        gbc.setState(0xdbd6, 0xf8fd, 0x7bf0, 0x8d97, 0xc508, 0x1a96, 0x0, 0x0);
        gbc.writeMem(0xdbd6, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf8fd, gbc.sp());
        EXPECT(0xdbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdbd6));
        // B2 01A5
        gbc.setState(0x7096, 0xe02b, 0xbb80, 0xf126, 0xf0cf, 0x496d, 0x0, 0x1);
        gbc.writeMem(0x7096, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe02b, gbc.sp());
        EXPECT(0x7097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01A6
        gbc.setState(0xeced, 0x5fa0, 0x9010, 0x916e, 0xd437, 0x4a74, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xb2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0xecee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeced));
        // B2 01A7
        gbc.setState(0x4982, 0x27ca, 0x9c40, 0x3c56, 0xe3d1, 0x3712, 0x1, 0x1);
        gbc.writeMem(0x4982, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x27ca, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01A8
        gbc.setState(0xa087, 0xbb00, 0x7c50, 0x1a38, 0xe63e, 0x8117, 0x1, 0x0);
        gbc.writeMem(0xa087, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0xa088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa087));
        // B2 01A9
        gbc.setState(0x468, 0x9d5d, 0x3f20, 0xb92a, 0x8ee6, 0x207, 0x0, 0x0);
        gbc.writeMem(0x468, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9d5d, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01AA
        gbc.setState(0xcc74, 0x1a04, 0x5ca0, 0xd8c5, 0x844e, 0xdd7a, 0x1, 0x1);
        gbc.writeMem(0xcc74, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1a04, gbc.sp());
        EXPECT(0xcc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcc74));
        // B2 01AB
        gbc.setState(0xc462, 0xa8fc, 0x7a20, 0x8177, 0x7a77, 0x260a, 0x0, 0x0);
        gbc.writeMem(0xc462, { 0xb2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa8fc, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc462));
        // B2 01AC
        gbc.setState(0x91e4, 0x116e, 0x8a70, 0xaa1b, 0xd529, 0x3c05, 0x1, 0x0);
        gbc.writeMem(0x91e4, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x116e, gbc.sp());
        EXPECT(0x91e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x91e4));
        // B2 01AD
        gbc.setState(0x36d1, 0x751b, 0xd290, 0x1257, 0x32c8, 0x473, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01AE
        gbc.setState(0x470d, 0x9a28, 0xb5e0, 0x97f7, 0x269a, 0x26dd, 0x1, 0x1);
        gbc.writeMem(0x470d, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9a28, gbc.sp());
        EXPECT(0x470e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01AF
        gbc.setState(0xdcdc, 0x967, 0x4a60, 0x12e6, 0xca3a, 0xa8a9, 0x0, 0x1);
        gbc.writeMem(0xdcdc, { 0xb2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0xdcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdcdc));
        // B2 01B0
        gbc.setState(0xa73, 0x5c93, 0xb2c0, 0xcc3, 0xdfe2, 0x64a0, 0x1, 0x1);
        gbc.writeMem(0xa73, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5c93, gbc.sp());
        EXPECT(0xa74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B1
        gbc.setState(0x3259, 0x5bba, 0xeb60, 0xdfa0, 0x87c7, 0xde36, 0x0, 0x1);
        gbc.writeMem(0x3259, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B2
        gbc.setState(0x6b27, 0x75e, 0xf0b0, 0x9c56, 0xf292, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0x6b27, { 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x75e, gbc.sp());
        EXPECT(0x6b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B3
        gbc.setState(0x2b02, 0x4e23, 0x6620, 0x2bb6, 0xfff1, 0xf07a, 0x0, 0x1);
        gbc.writeMem(0x2b02, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e23, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B4
        gbc.setState(0xc3f5, 0x4483, 0xf610, 0x53cd, 0xecdc, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0xc3f5, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc3f5));
        // B2 01B5
        gbc.setState(0x62da, 0x4034, 0xec40, 0x720b, 0x7451, 0x4696, 0x1, 0x0);
        gbc.writeMem(0x62da, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B6
        gbc.setState(0xb875, 0x295e, 0xd420, 0x5d26, 0xf366, 0xffdb, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0xb876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb875));
        // B2 01B7
        gbc.setState(0xa43f, 0x9a5f, 0x7c70, 0xc5a7, 0xfc82, 0xb6f8, 0x0, 0x1);
        gbc.writeMem(0xa43f, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa43f));
        // B2 01B8
        gbc.setState(0x32a4, 0x85d, 0x13d0, 0xc7f6, 0x92eb, 0x9abc, 0x1, 0x0);
        gbc.writeMem(0x32a4, { 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01B9
        gbc.setState(0x562d, 0x83b, 0x6010, 0xf015, 0xf947, 0xf886, 0x0, 0x0);
        gbc.writeMem(0x562d, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x83b, gbc.sp());
        EXPECT(0x562e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01BA
        gbc.setState(0xad93, 0xbc9b, 0x58b0, 0xef86, 0x1ce2, 0x4a02, 0x1, 0x0);
        gbc.writeMem(0xad93, { 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xad94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xad93));
        // B2 01BB
        gbc.setState(0xe676, 0x33d5, 0x7fe0, 0x70ce, 0x34a0, 0x4c7e, 0x1, 0x1);
        gbc.writeMem(0xe676, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x33d5, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe676));
        // B2 01BD
        gbc.setState(0xdc1f, 0x655, 0x6e30, 0x7a9f, 0x1dca, 0x378e, 0x1, 0x1);
        gbc.writeMem(0xdc1f, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x655, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdc1f));
        // B2 01BE
        gbc.setState(0x58b5, 0xae59, 0x9cd0, 0xbfa0, 0xd06e, 0x2d1c, 0x1, 0x1);
        gbc.writeMem(0x58b5, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01C0
        gbc.setState(0x4911, 0x60bb, 0x5060, 0x49c9, 0xc367, 0xfade, 0x1, 0x0);
        gbc.writeMem(0x4911, { 0xb2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x60bb, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01C1
        gbc.setState(0xcb71, 0xcf2d, 0x60d0, 0x9f84, 0x470e, 0xf600, 0x1, 0x1);
        gbc.writeMem(0xcb71, { 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf2d, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcb71));
        // B2 01C2
        gbc.setState(0x90dc, 0xd405, 0x740, 0xd771, 0x1cc3, 0xf4f5, 0x0, 0x1);
        gbc.writeMem(0x90dc, { 0xb2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd405, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x90dc));
        // B2 01C3
        gbc.setState(0xba44, 0xe193, 0xc540, 0xa61b, 0x21bc, 0x75b6, 0x0, 0x0);
        gbc.writeMem(0xba44, { 0xb2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe193, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xba44));
        // B2 01C4
        gbc.setState(0x1347, 0xe6c8, 0x48f0, 0xbc77, 0x1e73, 0x8bd7, 0x1, 0x1);
        gbc.writeMem(0x1347, { 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01C5
        gbc.setState(0x97c5, 0xd513, 0x6230, 0x13b7, 0x1194, 0x6c57, 0x0, 0x0);
        gbc.writeMem(0x97c5, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0x97c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x97c5));
        // B2 01C6
        gbc.setState(0x174d, 0xb9fe, 0x4000, 0x6a6b, 0xe8b5, 0x5b66, 0x0, 0x0);
        gbc.writeMem(0x174d, { 0xb2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb9fe, gbc.sp());
        EXPECT(0x174e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01C7
        gbc.setState(0x2c4e, 0x2584, 0x7e0, 0x2b9c, 0x139c, 0xc6a8, 0x0, 0x1);
        gbc.writeMem(0x2c4e, { 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01C8
        gbc.setState(0xbb62, 0xa074, 0x8e80, 0x2494, 0xbdd4, 0x1fe4, 0x0, 0x0);
        gbc.writeMem(0xbb62, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0xbb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbb62));
        // B2 01C9
        gbc.setState(0xd5d4, 0x9764, 0x17e0, 0x23c1, 0x97db, 0x76, 0x1, 0x1);
        gbc.writeMem(0xd5d4, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd5d4));
        // B2 01CA
        gbc.setState(0xce95, 0x2c9d, 0xce00, 0x2f0e, 0x6363, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0xce95, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2c9d, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xce95));
        // B2 01CB
        gbc.setState(0xc636, 0xa44d, 0xfb00, 0x285b, 0x357c, 0x5575, 0x0, 0x0);
        gbc.writeMem(0xc636, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0xc637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc636));
        // B2 01CC
        gbc.setState(0xa326, 0xf3e9, 0xbfd0, 0x26ce, 0x2e43, 0x9059, 0x1, 0x0);
        gbc.writeMem(0xa326, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0xa327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa326));
        // B2 01CE
        gbc.setState(0xc48b, 0xc1d9, 0xda00, 0x1192, 0xdad0, 0x5ef3, 0x0, 0x0);
        gbc.writeMem(0xc48b, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc1d9, gbc.sp());
        EXPECT(0xc48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc48b));
        // B2 01CF
        gbc.setState(0x69ee, 0x1702, 0x2b60, 0x928b, 0x80e0, 0x6d79, 0x0, 0x0);
        gbc.writeMem(0x69ee, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1702, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D0
        gbc.setState(0x5c3e, 0xa4fa, 0xf510, 0x70ee, 0x35bb, 0x8793, 0x0, 0x0);
        gbc.writeMem(0x5c3e, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa4fa, gbc.sp());
        EXPECT(0x5c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D1
        gbc.setState(0x9ecc, 0x2672, 0x2b00, 0x65c8, 0x26b8, 0xe895, 0x0, 0x1);
        gbc.writeMem(0x9ecc, { 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9ecc));
        // B2 01D2
        gbc.setState(0xe34, 0x38bd, 0x86a0, 0xf81e, 0xeaf0, 0x60da, 0x0, 0x0);
        gbc.writeMem(0xe34, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x38bd, gbc.sp());
        EXPECT(0xe35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D3
        gbc.setState(0x3ea, 0x38e0, 0x9cb0, 0x8621, 0xab39, 0x47f3, 0x1, 0x1);
        gbc.writeMem(0x3ea, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x38e0, gbc.sp());
        EXPECT(0x3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D4
        gbc.setState(0xca44, 0xb2ed, 0xeba0, 0x5d94, 0xbe26, 0x76e8, 0x0, 0x1);
        gbc.writeMem(0xca44, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0xca45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xca44));
        // B2 01D5
        gbc.setState(0xcac4, 0x6b37, 0xde00, 0x958c, 0x8c74, 0x3e61, 0x1, 0x0);
        gbc.writeMem(0xcac4, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6b37, gbc.sp());
        EXPECT(0xcac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcac4));
        // B2 01D6
        gbc.setState(0x66e0, 0x9eaa, 0xfa0, 0x294f, 0x6c41, 0x28, 0x0, 0x1);
        gbc.writeMem(0x66e0, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0x66e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D7
        gbc.setState(0x545c, 0xc32d, 0xd710, 0x7021, 0xbeab, 0x59a1, 0x1, 0x0);
        gbc.writeMem(0x545c, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc32d, gbc.sp());
        EXPECT(0x545d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01D8
        gbc.setState(0x8d54, 0x6d8b, 0x5fe0, 0x1197, 0xd9d6, 0xcce4, 0x0, 0x1);
        gbc.writeMem(0x8d54, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d8b, gbc.sp());
        EXPECT(0x8d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8d54));
        // B2 01D9
        gbc.setState(0x1612, 0xd216, 0xe750, 0xcc08, 0xac94, 0xaed4, 0x0, 0x0);
        gbc.writeMem(0x1612, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd216, gbc.sp());
        EXPECT(0x1613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01DC
        gbc.setState(0x9cd8, 0xe955, 0xbb90, 0xecaf, 0xcbcc, 0x54d, 0x1, 0x0);
        gbc.writeMem(0x9cd8, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0x9cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9cd8));
        // B2 01DD
        gbc.setState(0x176e, 0x8038, 0x6da0, 0x7bf4, 0xd116, 0x3acb, 0x1, 0x0);
        gbc.writeMem(0x176e, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0x176f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01DE
        gbc.setState(0xd0fb, 0xca13, 0xced0, 0x6b74, 0x864f, 0x6490, 0x1, 0x0);
        gbc.writeMem(0xd0fb, { 0xb2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0xd0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd0fb));
        // B2 01DF
        gbc.setState(0x219d, 0xd522, 0x19c0, 0x314c, 0xe77b, 0x8926, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x219e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E0
        gbc.setState(0x1b25, 0x5f69, 0xae50, 0xdb8, 0x335, 0xd903, 0x0, 0x0);
        gbc.writeMem(0x1b25, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5f69, gbc.sp());
        EXPECT(0x1b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E1
        gbc.setState(0x1685, 0x690, 0xa7a0, 0x1e64, 0xd74f, 0xbfb9, 0x0, 0x0);
        gbc.writeMem(0x1685, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x690, gbc.sp());
        EXPECT(0x1686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E2
        gbc.setState(0x1df, 0xdae7, 0x9700, 0xfd7f, 0x7720, 0xbe09, 0x1, 0x0);
        gbc.writeMem(0x1df, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdae7, gbc.sp());
        EXPECT(0x1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E3
        gbc.setState(0xdad, 0xd147, 0x8950, 0x5f12, 0x5d40, 0x9f24, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd147, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E4
        gbc.setState(0xcc84, 0x503a, 0xbb20, 0x908a, 0xf065, 0xae33, 0x0, 0x1);
        gbc.writeMem(0xcc84, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x503a, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcc84));
        // B2 01E5
        gbc.setState(0x4539, 0x12cd, 0xbd00, 0x1de4, 0x5595, 0xe682, 0x0, 0x1);
        gbc.writeMem(0x4539, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x12cd, gbc.sp());
        EXPECT(0x453a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E6
        gbc.setState(0x603d, 0xd9f, 0x8330, 0xaa49, 0x8129, 0x357f, 0x1, 0x0);
        gbc.writeMem(0x603d, { 0xb2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0x603e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E7
        gbc.setState(0x496, 0x6867, 0x4ff0, 0xc83e, 0xbe7c, 0x551d, 0x0, 0x0);
        gbc.writeMem(0x496, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0x497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E8
        gbc.setState(0xf0c, 0x2f8a, 0xfda0, 0xb783, 0x2ad9, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0xf0c, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01E9
        gbc.setState(0x5709, 0xee51, 0x4340, 0x6e0b, 0xef4d, 0x17f0, 0x1, 0x0);
        gbc.writeMem(0x5709, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xee51, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01EA
        gbc.setState(0x13d7, 0x61b3, 0x1b60, 0x427f, 0x33f6, 0x76df, 0x0, 0x1);
        gbc.writeMem(0x13d7, { 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61b3, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01EB
        gbc.setState(0x8d4d, 0x5e2e, 0x140, 0xe91f, 0x1892, 0x84b, 0x0, 0x0);
        gbc.writeMem(0x8d4d, { 0xb2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5e2e, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8d4d));
        // B2 01EC
        gbc.setState(0xca53, 0xb1c5, 0x7490, 0xc920, 0x2b14, 0xa4e7, 0x1, 0x1);
        gbc.writeMem(0xca53, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1c5, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xca53));
        // B2 01ED
        gbc.setState(0x41fa, 0x1363, 0xab80, 0xa32a, 0x8291, 0xa21a, 0x1, 0x1);
        gbc.writeMem(0x41fa, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1363, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01EE
        gbc.setState(0x79b9, 0xf3c7, 0xcdf0, 0x40c7, 0x7164, 0x68f9, 0x1, 0x0);
        gbc.writeMem(0x79b9, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf3c7, gbc.sp());
        EXPECT(0x79ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01EF
        gbc.setState(0xe9e7, 0x7c3f, 0x81d0, 0x71bd, 0x69c3, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0xe9e7, { 0xb2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0xe9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe9e7));
        // B2 01F0
        gbc.setState(0xe2dc, 0xf608, 0xb770, 0xe08a, 0xf2f8, 0x5baf, 0x1, 0x1);
        gbc.writeMem(0xe2dc, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf608, gbc.sp());
        EXPECT(0xe2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe2dc));
        // B2 01F1
        gbc.setState(0x5b51, 0x6396, 0x9e50, 0x7e8a, 0xee05, 0x2b95, 0x1, 0x0);
        gbc.writeMem(0x5b51, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0x5b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01F2
        gbc.setState(0xe3e6, 0xa583, 0x4dc0, 0x1a1a, 0x2cf2, 0x35ea, 0x0, 0x1);
        gbc.writeMem(0xe3e6, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa583, gbc.sp());
        EXPECT(0xe3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3e6));
        // B2 01F3
        gbc.setState(0x8aac, 0x37ca, 0xa0, 0x7d2a, 0x9b64, 0xa08d, 0x0, 0x0);
        gbc.writeMem(0x8aac, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8aac));
        // B2 01F4
        gbc.setState(0x53ab, 0xec43, 0x8a90, 0x2360, 0x64d4, 0xe73f, 0x1, 0x1);
        gbc.writeMem(0x53ab, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xec43, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01F6
        gbc.setState(0x8699, 0x96cc, 0x4520, 0xf2ef, 0x6195, 0x5d4, 0x0, 0x1);
        gbc.writeMem(0x8699, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x96cc, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8699));
        // B2 01F7
        gbc.setState(0x8538, 0x2076, 0x6830, 0xf35a, 0x1bd9, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x8538, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8538));
        // B2 01F8
        gbc.setState(0x1fb3, 0x1545, 0x3840, 0x8902, 0x4858, 0x8f98, 0x0, 0x1);
        gbc.writeMem(0x1fb3, { 0xb2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1545, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01FA
        gbc.setState(0x8251, 0x5d2a, 0xfaf0, 0xa8eb, 0x3fca, 0x2a37, 0x0, 0x1);
        gbc.writeMem(0x8251, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8251));
        // B2 01FB
        gbc.setState(0x9d6f, 0x3ef, 0x1ed0, 0xb431, 0x9767, 0xbc4c, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3ef, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9d6f));
        // B2 01FC
        gbc.setState(0x1a22, 0xdcd7, 0x3b60, 0xb7b7, 0x21ef, 0x2e5c, 0x1, 0x1);
        gbc.writeMem(0x1a22, { 0xb2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 01FD
        gbc.setState(0xc1cb, 0x767, 0x58c0, 0xff55, 0xcaac, 0x7521, 0x0, 0x0);
        gbc.writeMem(0xc1cb, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0xc1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc1cb));
        // B2 01FE
        gbc.setState(0x8ab6, 0xae9b, 0x90b0, 0xc23c, 0xdcd1, 0x8ea, 0x0, 0x0);
        gbc.writeMem(0x8ab6, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8ab6));
        // B2 01FF
        gbc.setState(0x168c, 0xe154, 0x6160, 0x8d07, 0x2ada, 0x3b87, 0x0, 0x0);
        gbc.writeMem(0x168c, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe154, gbc.sp());
        EXPECT(0x168d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0200
        gbc.setState(0x3bf, 0x9c38, 0x4a0, 0xa942, 0x698c, 0x8ffc, 0x0, 0x1);
        gbc.writeMem(0x3bf, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0201
        gbc.setState(0x3d5, 0x40d5, 0xfa00, 0xb646, 0x1f, 0x6ab2, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x40d5, gbc.sp());
        EXPECT(0x3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0202
        gbc.setState(0x8431, 0xca66, 0x42d0, 0x7640, 0x97f3, 0x8e2e, 0x0, 0x1);
        gbc.writeMem(0x8431, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0x8432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8431));
        // B2 0203
        gbc.setState(0xaa6d, 0x35ae, 0x3d70, 0x2d9, 0x3b64, 0x1534, 0x0, 0x0);
        gbc.writeMem(0xaa6d, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x35ae, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaa6d));
        // B2 0204
        gbc.setState(0x4b59, 0x1ea9, 0x9460, 0xd22, 0xf5af, 0xba20, 0x1, 0x0);
        gbc.writeMem(0x4b59, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0205
        gbc.setState(0x1932, 0xf1eb, 0x61e0, 0x7467, 0xe28c, 0xa88b, 0x1, 0x1);
        gbc.writeMem(0x1932, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0x1933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0206
        gbc.setState(0x5cb6, 0x6f2a, 0x9700, 0xe220, 0xae07, 0xd17, 0x1, 0x0);
        gbc.writeMem(0x5cb6, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6f2a, gbc.sp());
        EXPECT(0x5cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0207
        gbc.setState(0xb9b0, 0x6625, 0xa1f0, 0x8754, 0xc94c, 0x4e45, 0x1, 0x0);
        gbc.writeMem(0xb9b0, { 0xb2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb9b0));
        // B2 0208
        gbc.setState(0x6f9c, 0x2f36, 0xb130, 0xb0d6, 0xaf3e, 0x87f9, 0x1, 0x0);
        gbc.writeMem(0x6f9c, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0209
        gbc.setState(0x73dd, 0x3006, 0x9fe0, 0x587e, 0x3a4, 0x2962, 0x0, 0x0);
        gbc.writeMem(0x73dd, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3006, gbc.sp());
        EXPECT(0x73de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 020A
        gbc.setState(0x6bba, 0xf0db, 0xcc70, 0xc536, 0x3db6, 0xc42e, 0x0, 0x0);
        gbc.writeMem(0x6bba, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf0db, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 020B
        gbc.setState(0x6288, 0xad4, 0x5360, 0xc6c5, 0xb861, 0x1270, 0x0, 0x1);
        gbc.writeMem(0x6288, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xad4, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 020C
        gbc.setState(0x1f0e, 0xd87d, 0x9a20, 0xc50c, 0xa96a, 0xd145, 0x1, 0x0);
        gbc.writeMem(0x1f0e, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd87d, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 020D
        gbc.setState(0xd0e2, 0xe308, 0x75a0, 0xd87a, 0xa163, 0x7eb0, 0x1, 0x1);
        gbc.writeMem(0xd0e2, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe308, gbc.sp());
        EXPECT(0xd0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd0e2));
        // B2 020E
        gbc.setState(0x2275, 0xed86, 0x1e80, 0x5be8, 0xc88, 0x92fb, 0x0, 0x0);
        gbc.writeMem(0x2275, { 0xb2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0x2276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0210
        gbc.setState(0x66ba, 0x7413, 0xc620, 0xb6d, 0x14a4, 0x6ec3, 0x1, 0x0);
        gbc.writeMem(0x66ba, { 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0211
        gbc.setState(0x8d6, 0x4bc6, 0x1380, 0x1739, 0x1724, 0xbabb, 0x1, 0x1);
        gbc.writeMem(0x8d6, { 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4bc6, gbc.sp());
        EXPECT(0x8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0212
        gbc.setState(0xe3da, 0x2ea, 0x4b0, 0xba0f, 0x3d0e, 0x8ddd, 0x1, 0x0);
        gbc.writeMem(0xe3da, { 0xb2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0xe3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3da));
        // B2 0213
        gbc.setState(0xa182, 0xb04e, 0xad60, 0x1e01, 0x7c76, 0xe932, 0x0, 0x0);
        gbc.writeMem(0xa182, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb04e, gbc.sp());
        EXPECT(0xa183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa182));
        // B2 0214
        gbc.setState(0x785, 0x9875, 0xd5c0, 0xdfcf, 0x8435, 0x828b, 0x1, 0x1);
        gbc.writeMem(0x785, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9875, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0215
        gbc.setState(0xc50b, 0x649b, 0x1190, 0x5e17, 0x4d42, 0x2a1a, 0x1, 0x0);
        gbc.writeMem(0xc50b, { 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0xc50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc50b));
        // B2 0216
        gbc.setState(0xcd1b, 0x2122, 0x3cd0, 0xeaa9, 0xea8d, 0x5b40, 0x0, 0x0);
        gbc.writeMem(0xcd1b, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2122, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcd1b));
        // B2 0217
        gbc.setState(0xa84b, 0x7f84, 0x2220, 0x5ed5, 0xe55a, 0x66e8, 0x1, 0x1);
        gbc.writeMem(0xa84b, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7f84, gbc.sp());
        EXPECT(0xa84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa84b));
        // B2 0218
        gbc.setState(0x61e5, 0xd380, 0x2a70, 0x1789, 0x92e8, 0xb178, 0x0, 0x0);
        gbc.writeMem(0x61e5, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd380, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0219
        gbc.setState(0xcffd, 0xbadf, 0x2520, 0x90d2, 0x7439, 0xc605, 0x1, 0x0);
        gbc.writeMem(0xcffd, { 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbadf, gbc.sp());
        EXPECT(0xcffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcffd));
        // B2 021A
        gbc.setState(0x299c, 0xce11, 0x7550, 0x1ffd, 0xad8a, 0x8bf7, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 021B
        gbc.setState(0xc3b5, 0xc643, 0x6510, 0x3345, 0x4476, 0xcc3a, 0x1, 0x1);
        gbc.writeMem(0xc3b5, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc643, gbc.sp());
        EXPECT(0xc3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc3b5));
        // B2 021C
        gbc.setState(0xcd2b, 0x7dfe, 0x7200, 0x8902, 0x1d6c, 0xaf3c, 0x0, 0x1);
        gbc.writeMem(0xcd2b, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcd2b));
        // B2 021E
        gbc.setState(0x53d6, 0xef8a, 0x72a0, 0x7efd, 0x5330, 0x53de, 0x1, 0x1);
        gbc.writeMem(0x53d6, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0x53d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 021F
        gbc.setState(0x61b0, 0xdf90, 0x3b60, 0x6cfc, 0x70d3, 0x9204, 0x0, 0x0);
        gbc.writeMem(0x61b0, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdf90, gbc.sp());
        EXPECT(0x61b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0220
        gbc.setState(0x996c, 0xcd0a, 0x6600, 0x63a7, 0x7fc6, 0x134d, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcd0a, gbc.sp());
        EXPECT(0x996d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x996c));
        // B2 0221
        gbc.setState(0xe3a4, 0x3149, 0x5cf0, 0x8f48, 0x7c49, 0xfa8c, 0x0, 0x0);
        gbc.writeMem(0xe3a4, { 0xb2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xe3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3a4));
        // B2 0222
        gbc.setState(0xcdec, 0x9f57, 0x8a60, 0x3961, 0x8f4f, 0xe813, 0x0, 0x1);
        gbc.writeMem(0xcdec, { 0xb2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0xcded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcdec));
        // B2 0223
        gbc.setState(0x25b2, 0xc9c, 0x4c40, 0x59ac, 0x8dcb, 0x7ba4, 0x0, 0x1);
        gbc.writeMem(0x25b2, { 0xb2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc9c, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0224
        gbc.setState(0xe08b, 0x6dea, 0xaa50, 0xa55e, 0x3e2b, 0x4d9f, 0x0, 0x1);
        gbc.writeMem(0xe08b, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0xe08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe08b));
        // B2 0225
        gbc.setState(0xa1a1, 0x6b39, 0xb6d0, 0xfbc7, 0x2ecf, 0xc28e, 0x0, 0x0);
        gbc.writeMem(0xa1a1, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa1a1));
        // B2 0226
        gbc.setState(0x236f, 0x6751, 0x5ec0, 0xb1a5, 0x60db, 0xace7, 0x1, 0x0);
        gbc.writeMem(0x236f, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6751, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0227
        gbc.setState(0x3b62, 0xf045, 0xfb70, 0x13c7, 0xff6e, 0x6eba, 0x0, 0x1);
        gbc.writeMem(0x3b62, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0228
        gbc.setState(0xc594, 0x8ca8, 0x6500, 0x1622, 0xfddb, 0x67db, 0x0, 0x1);
        gbc.writeMem(0xc594, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8ca8, gbc.sp());
        EXPECT(0xc595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc594));
        // B2 0229
        gbc.setState(0xc25c, 0xc83d, 0xa100, 0xa3a1, 0xe7d9, 0x85c8, 0x0, 0x1);
        gbc.writeMem(0xc25c, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc83d, gbc.sp());
        EXPECT(0xc25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc25c));
        // B2 022B
        gbc.setState(0xa652, 0x2d17, 0xf040, 0xb19a, 0xc9bd, 0x3f3a, 0x1, 0x1);
        gbc.writeMem(0xa652, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2d17, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa652));
        // B2 022C
        gbc.setState(0x50c1, 0xde18, 0x64a0, 0xac38, 0x2f58, 0xd3ef, 0x0, 0x0);
        gbc.writeMem(0x50c1, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0x50c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 022D
        gbc.setState(0xbab1, 0xb971, 0x9030, 0xeaec, 0x3733, 0xfaec, 0x1, 0x1);
        gbc.writeMem(0xbab1, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xbab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbab1));
        // B2 022E
        gbc.setState(0x507e, 0x57ba, 0x32d0, 0x2da3, 0xb98c, 0x2b6d, 0x1, 0x1);
        gbc.writeMem(0x507e, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x57ba, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 022F
        gbc.setState(0x1e6e, 0xfe68, 0x9570, 0xbac3, 0x7eb2, 0x15bd, 0x1, 0x1);
        gbc.writeMem(0x1e6e, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0230
        gbc.setState(0x8f68, 0xe12c, 0x8a0, 0x6e87, 0xf3a7, 0x53f9, 0x1, 0x0);
        gbc.writeMem(0x8f68, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe12c, gbc.sp());
        EXPECT(0x8f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8f68));
        // B2 0231
        gbc.setState(0x75d0, 0x6643, 0x6f40, 0x7544, 0xe16d, 0x2976, 0x0, 0x0);
        gbc.writeMem(0x75d0, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6643, gbc.sp());
        EXPECT(0x75d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0232
        gbc.setState(0xc751, 0xed73, 0x5770, 0x1623, 0x5d8e, 0x8558, 0x1, 0x1);
        gbc.writeMem(0xc751, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xed73, gbc.sp());
        EXPECT(0xc752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc751));
        // B2 0233
        gbc.setState(0x9169, 0xd0e2, 0x53b0, 0x8519, 0x373b, 0x8d77, 0x0, 0x1);
        gbc.writeMem(0x9169, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9169));
        // B2 0234
        gbc.setState(0xa12d, 0x321a, 0xb940, 0x52cf, 0x8ca7, 0x40df, 0x0, 0x0);
        gbc.writeMem(0xa12d, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0xa12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa12d));
        // B2 0235
        gbc.setState(0xbf6c, 0x13f5, 0x1700, 0xbc30, 0x5e7, 0xc024, 0x0, 0x0);
        gbc.writeMem(0xbf6c, { 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x13f5, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbf6c));
        // B2 0237
        gbc.setState(0x12b2, 0xeb01, 0x1100, 0xedd8, 0x8584, 0xa08b, 0x1, 0x1);
        gbc.writeMem(0x12b2, { 0xb2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeb01, gbc.sp());
        EXPECT(0x12b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0238
        gbc.setState(0x30f4, 0xe1e4, 0xcf0, 0xed6e, 0xa68c, 0x56b0, 0x0, 0x1);
        gbc.writeMem(0x30f4, { 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe1e4, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0239
        gbc.setState(0x7246, 0xfaae, 0x1380, 0x6250, 0x71bf, 0x5c85, 0x0, 0x1);
        gbc.writeMem(0x7246, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfaae, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 023A
        gbc.setState(0xdbf0, 0x4291, 0x3d70, 0x4df1, 0xe5d4, 0x9e4f, 0x0, 0x1);
        gbc.writeMem(0xdbf0, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4291, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdbf0));
        // B2 023B
        gbc.setState(0x1cc2, 0x42c6, 0x3720, 0xe541, 0x24e5, 0xcf7c, 0x1, 0x0);
        gbc.writeMem(0x1cc2, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x42c6, gbc.sp());
        EXPECT(0x1cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 023D
        gbc.setState(0x87af, 0x38f1, 0xf310, 0x27a3, 0x8a15, 0x4e6a, 0x0, 0x0);
        gbc.writeMem(0x87af, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0x87b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x87af));
        // B2 023E
        gbc.setState(0x609d, 0xe11c, 0x2580, 0x5f9c, 0x4e8a, 0xa99a, 0x0, 0x1);
        gbc.writeMem(0x609d, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x609e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 023F
        gbc.setState(0xbd46, 0xaa1a, 0x5ea0, 0x3634, 0x66b8, 0x4ce4, 0x1, 0x1);
        gbc.writeMem(0xbd46, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa1a, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbd46));
        // B2 0240
        gbc.setState(0x9def, 0x5537, 0xb340, 0x18ef, 0xd004, 0x728f, 0x0, 0x1);
        gbc.writeMem(0x9def, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9def));
        // B2 0241
        gbc.setState(0xced, 0x6090, 0xa940, 0x7f47, 0xaa83, 0xbb9e, 0x0, 0x1);
        gbc.writeMem(0xced, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6090, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0242
        gbc.setState(0xe178, 0x32f5, 0xc80, 0x7dbc, 0xbdfe, 0x9a1f, 0x0, 0x1);
        gbc.writeMem(0xe178, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0xe179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe178));
        // B2 0243
        gbc.setState(0x926d, 0x34fd, 0x1660, 0xd913, 0xfff1, 0x60d8, 0x1, 0x0);
        gbc.writeMem(0x926d, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x926d));
        // B2 0245
        gbc.setState(0x87b9, 0xff7b, 0x4bc0, 0x3ce8, 0x9dc1, 0xdcba, 0x0, 0x0);
        gbc.writeMem(0x87b9, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xff7b, gbc.sp());
        EXPECT(0x87ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x87b9));
        // B2 0246
        gbc.setState(0xbe0c, 0x893f, 0xd330, 0xbe66, 0xdf90, 0x681f, 0x0, 0x1);
        gbc.writeMem(0xbe0c, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x893f, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbe0c));
        // B2 0247
        gbc.setState(0x62f4, 0xe877, 0x9a80, 0x17a0, 0xaebd, 0x8377, 0x0, 0x0);
        gbc.writeMem(0x62f4, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe877, gbc.sp());
        EXPECT(0x62f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0248
        gbc.setState(0x2ca2, 0x652, 0x5010, 0x8993, 0x9b5f, 0x5365, 0x0, 0x1);
        gbc.writeMem(0x2ca2, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0249
        gbc.setState(0x7a95, 0xe058, 0x7b20, 0xf1a1, 0x8ecc, 0xb467, 0x1, 0x1);
        gbc.writeMem(0x7a95, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe058, gbc.sp());
        EXPECT(0x7a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 024A
        gbc.setState(0x1ab0, 0x9621, 0xab50, 0x6e78, 0x4e4f, 0x6ca2, 0x1, 0x0);
        gbc.writeMem(0x1ab0, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9621, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 024B
        gbc.setState(0x4ec, 0x1a2e, 0xb070, 0x97ec, 0x17ce, 0x7002, 0x1, 0x0);
        gbc.writeMem(0x4ec, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a2e, gbc.sp());
        EXPECT(0x4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 024C
        gbc.setState(0xaab6, 0xa8e0, 0x3f00, 0xe3bf, 0xe512, 0x96c2, 0x0, 0x1);
        gbc.writeMem(0xaab6, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa8e0, gbc.sp());
        EXPECT(0xaab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaab6));
        // B2 024D
        gbc.setState(0x2e38, 0x5879, 0x6480, 0x363d, 0x5f74, 0xb7c6, 0x0, 0x0);
        gbc.writeMem(0x2e38, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5879, gbc.sp());
        EXPECT(0x2e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 024E
        gbc.setState(0x76bc, 0xd452, 0x6890, 0x74b0, 0xd756, 0xb703, 0x1, 0x1);
        gbc.writeMem(0x76bc, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd452, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 024F
        gbc.setState(0x10c6, 0x2834, 0xeeb0, 0x6cfc, 0x96f6, 0xc85e, 0x0, 0x1);
        gbc.writeMem(0x10c6, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2834, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0250
        gbc.setState(0x6046, 0xc24a, 0x89b0, 0x1fb1, 0xf62b, 0x930a, 0x1, 0x0);
        gbc.writeMem(0x6046, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc24a, gbc.sp());
        EXPECT(0x6047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0251
        gbc.setState(0x7bac, 0x11c2, 0x7180, 0xe897, 0x56a4, 0x8242, 0x0, 0x1);
        gbc.writeMem(0x7bac, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x11c2, gbc.sp());
        EXPECT(0x7bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0252
        gbc.setState(0xabe0, 0x460a, 0x8b60, 0x446f, 0x69e1, 0x22f1, 0x1, 0x0);
        gbc.writeMem(0xabe0, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x460a, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xabe0));
        // B2 0253
        gbc.setState(0xd2a6, 0x57e5, 0x9ac0, 0x36fd, 0x5bda, 0xd375, 0x1, 0x0);
        gbc.writeMem(0xd2a6, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x57e5, gbc.sp());
        EXPECT(0xd2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd2a6));
        // B2 0254
        gbc.setState(0x35b8, 0xbad8, 0x72b0, 0xd983, 0x8b35, 0xba14, 0x0, 0x1);
        gbc.writeMem(0x35b8, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x35b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0255
        gbc.setState(0xe897, 0x48c8, 0xbff0, 0x48b2, 0x58a7, 0xb61, 0x0, 0x0);
        gbc.writeMem(0xe897, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x48c8, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe897));
        // B2 0256
        gbc.setState(0x25ee, 0x7fff, 0x9af0, 0xa4b7, 0x1897, 0xf7b1, 0x0, 0x0);
        gbc.writeMem(0x25ee, { 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7fff, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0257
        gbc.setState(0x64c4, 0x6769, 0x73e0, 0x49f2, 0x9d45, 0x3050, 0x1, 0x1);
        gbc.writeMem(0x64c4, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0259
        gbc.setState(0x4969, 0x3d95, 0xf70, 0xcc2, 0x8afe, 0x3ba2, 0x0, 0x0);
        gbc.writeMem(0x4969, { 0xb2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3d95, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 025A
        gbc.setState(0x5206, 0xabc4, 0x8a80, 0xc075, 0xea3e, 0x9de9, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xabc4, gbc.sp());
        EXPECT(0x5207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 025B
        gbc.setState(0x8836, 0x537c, 0x62d0, 0x2b81, 0x7252, 0xa217, 0x1, 0x1);
        gbc.writeMem(0x8836, { 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x537c, gbc.sp());
        EXPECT(0x8837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8836));
        // B2 025C
        gbc.setState(0xef47, 0x882c, 0xdfa0, 0x4932, 0xce2d, 0xc6b6, 0x0, 0x0);
        gbc.writeMem(0xef47, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xef47));
        // B2 025D
        gbc.setState(0x6fc9, 0xbef9, 0x1730, 0xbb83, 0xfcc0, 0xcd99, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbef9, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 025E
        gbc.setState(0x7686, 0x9fe, 0xbab0, 0x88ad, 0x254b, 0x8330, 0x1, 0x1);
        gbc.writeMem(0x7686, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9fe, gbc.sp());
        EXPECT(0x7687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 025F
        gbc.setState(0x94d1, 0xbfc4, 0xf880, 0x81e, 0x3294, 0x9461, 0x1, 0x0);
        gbc.writeMem(0x94d1, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbfc4, gbc.sp());
        EXPECT(0x94d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x94d1));
        // B2 0260
        gbc.setState(0x828e, 0x9d3d, 0x760, 0xdf70, 0xe7b6, 0xd5a0, 0x0, 0x0);
        gbc.writeMem(0x828e, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9d3d, gbc.sp());
        EXPECT(0x828f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x828e));
        // B2 0261
        gbc.setState(0x71a9, 0xf4d2, 0x1930, 0x90ba, 0x7a53, 0x5960, 0x0, 0x1);
        gbc.writeMem(0x71a9, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf4d2, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0262
        gbc.setState(0x18a9, 0xbab3, 0xae70, 0x6507, 0x34c5, 0x4d36, 0x1, 0x0);
        gbc.writeMem(0x18a9, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x18aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0263
        gbc.setState(0xcb21, 0x8764, 0x65b0, 0xbb75, 0xcf61, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0xcb21, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0xcb22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcb21));
        // B2 0264
        gbc.setState(0xc4da, 0x8a83, 0x5b70, 0xcc62, 0xb48e, 0x9627, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc4da));
        // B2 0265
        gbc.setState(0x56ca, 0xb50c, 0xf6a0, 0x6139, 0x6a8b, 0x56f5, 0x0, 0x1);
        gbc.writeMem(0x56ca, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb50c, gbc.sp());
        EXPECT(0x56cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0266
        gbc.setState(0x6cc6, 0xf02d, 0x4180, 0xde2c, 0xc2ce, 0x94c0, 0x1, 0x0);
        gbc.writeMem(0x6cc6, { 0xb2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf02d, gbc.sp());
        EXPECT(0x6cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0267
        gbc.setState(0xb22c, 0x37d3, 0x1ca0, 0x4e1a, 0xe41d, 0xb0e1, 0x0, 0x1);
        gbc.writeMem(0xb22c, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb22c));
        // B2 0268
        gbc.setState(0x92, 0xfbaa, 0xfdd0, 0x659c, 0xf806, 0x403b, 0x1, 0x0);
        gbc.writeMem(0x92, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 026A
        gbc.setState(0x52ed, 0x5dd8, 0xa390, 0x5899, 0x4376, 0x610f, 0x0, 0x1);
        gbc.writeMem(0x52ed, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x52ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 026B
        gbc.setState(0x9192, 0x601a, 0xa960, 0x85cf, 0x1a27, 0xb9e0, 0x1, 0x0);
        gbc.writeMem(0x9192, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9192));
        // B2 026C
        gbc.setState(0x7e0b, 0x4866, 0xb850, 0x308, 0x4dae, 0x78db, 0x1, 0x1);
        gbc.writeMem(0x7e0b, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4866, gbc.sp());
        EXPECT(0x7e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 026D
        gbc.setState(0x6dae, 0x3dd0, 0x6f10, 0xdd89, 0x8531, 0xaf85, 0x1, 0x1);
        gbc.writeMem(0x6dae, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3dd0, gbc.sp());
        EXPECT(0x6daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 026E
        gbc.setState(0x726, 0x2207, 0xba40, 0x68f1, 0xc157, 0x1318, 0x1, 0x1);
        gbc.writeMem(0x726, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 026F
        gbc.setState(0x176f, 0x977, 0x5fc0, 0x3627, 0xa786, 0x729e, 0x1, 0x1);
        gbc.writeMem(0x176f, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x1770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0270
        gbc.setState(0xa622, 0x1839, 0xadb0, 0xf2e2, 0x2837, 0x6d41, 0x0, 0x1);
        gbc.writeMem(0xa622, { 0xb2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1839, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa622));
        // B2 0271
        gbc.setState(0xc2da, 0x6111, 0x1050, 0x4ac2, 0x510, 0xfafd, 0x0, 0x1);
        gbc.writeMem(0xc2da, { 0xb2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6111, gbc.sp());
        EXPECT(0xc2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc2da));
        // B2 0272
        gbc.setState(0x545, 0x2d94, 0xee10, 0x9560, 0x34a1, 0x9b84, 0x1, 0x0);
        gbc.writeMem(0x545, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0273
        gbc.setState(0x8541, 0x712, 0x80a0, 0xd802, 0x708f, 0xdf4c, 0x0, 0x0);
        gbc.writeMem(0x8541, { 0xb2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8541));
        // B2 0274
        gbc.setState(0xb842, 0xccb6, 0xb900, 0x3df5, 0x1041, 0x6d45, 0x1, 0x0);
        gbc.writeMem(0xb842, { 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xccb6, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb842));
        // B2 0275
        gbc.setState(0xafc0, 0x5663, 0xa220, 0x10b8, 0x8705, 0x3d22, 0x0, 0x1);
        gbc.writeMem(0xafc0, { 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xafc0));
        // B2 0276
        gbc.setState(0x836b, 0xf5d4, 0x3db0, 0xc16f, 0x71ba, 0x257c, 0x1, 0x0);
        gbc.writeMem(0x836b, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x836b));
        // B2 0277
        gbc.setState(0x937b, 0x3ea2, 0x37d0, 0xc5e1, 0x2ace, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x937b, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3ea2, gbc.sp());
        EXPECT(0x937c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x937b));
        // B2 0278
        gbc.setState(0xd647, 0xff41, 0x8b00, 0x783, 0x9d5f, 0x2a5b, 0x0, 0x1);
        gbc.writeMem(0xd647, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xff41, gbc.sp());
        EXPECT(0xd648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd647));
        // B2 0279
        gbc.setState(0x9826, 0x9acb, 0x5050, 0x29c0, 0x7269, 0x2f99, 0x0, 0x1);
        gbc.writeMem(0x9826, { 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9826));
        // B2 027A
        gbc.setState(0xe70c, 0xc37b, 0xb7a0, 0x4943, 0xac6c, 0xf480, 0x1, 0x1);
        gbc.writeMem(0xe70c, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe70c));
        // B2 027B
        gbc.setState(0xe61, 0x2b67, 0xa750, 0xeaa5, 0x15a0, 0xd5fd, 0x0, 0x0);
        gbc.writeMem(0xe61, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2b67, gbc.sp());
        EXPECT(0xe62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 027C
        gbc.setState(0x7677, 0x7a41, 0xb310, 0x2f4, 0xc0d1, 0xdcea, 0x1, 0x0);
        gbc.writeMem(0x7677, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7a41, gbc.sp());
        EXPECT(0x7678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 027D
        gbc.setState(0x238a, 0x750f, 0x2f50, 0xede4, 0xbc76, 0xd734, 0x1, 0x0);
        gbc.writeMem(0x238a, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0x238b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 027E
        gbc.setState(0x4094, 0x4481, 0xbb80, 0x6ce0, 0xea43, 0x20ea, 0x0, 0x0);
        gbc.writeMem(0x4094, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4481, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 027F
        gbc.setState(0xc202, 0x7d83, 0x97a0, 0xe38f, 0x530, 0x18f7, 0x0, 0x0);
        gbc.writeMem(0xc202, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0xc203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc202));
        // B2 0280
        gbc.setState(0x822d, 0xda06, 0x8690, 0x2798, 0xa2f0, 0x7c18, 0x1, 0x0);
        gbc.writeMem(0x822d, { 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xda06, gbc.sp());
        EXPECT(0x822e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x822d));
        // B2 0281
        gbc.setState(0xcbd1, 0xb0f4, 0xa910, 0x30ec, 0xd5ab, 0x6953, 0x0, 0x1);
        gbc.writeMem(0xcbd1, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb0f4, gbc.sp());
        EXPECT(0xcbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcbd1));
        // B2 0282
        gbc.setState(0x7ef4, 0x8a31, 0xe700, 0x6ea5, 0xa03d, 0x3011, 0x0, 0x0);
        gbc.writeMem(0x7ef4, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8a31, gbc.sp());
        EXPECT(0x7ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0284
        gbc.setState(0xd453, 0x9e17, 0xcd60, 0x4aeb, 0x8afd, 0x8a71, 0x0, 0x0);
        gbc.writeMem(0xd453, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9e17, gbc.sp());
        EXPECT(0xd454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd453));
        // B2 0285
        gbc.setState(0x6abd, 0x6c7b, 0x33b0, 0x3d60, 0x6a5d, 0xde71, 0x0, 0x0);
        gbc.writeMem(0x6abd, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c7b, gbc.sp());
        EXPECT(0x6abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0286
        gbc.setState(0x33a4, 0x4b60, 0x3b40, 0x5d8e, 0x498d, 0xcfa8, 0x0, 0x0);
        gbc.writeMem(0x33a4, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x33a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0287
        gbc.setState(0x17a1, 0x286b, 0x2ee0, 0x975d, 0x98a1, 0xe996, 0x1, 0x1);
        gbc.writeMem(0x17a1, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x17a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0288
        gbc.setState(0x9593, 0xc3df, 0x4ce0, 0x4f47, 0x547f, 0x6e5f, 0x0, 0x1);
        gbc.writeMem(0x9593, { 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9593));
        // B2 0289
        gbc.setState(0xb335, 0x8cee, 0x63e0, 0xc135, 0x448c, 0xaa08, 0x0, 0x1);
        gbc.writeMem(0xb335, { 0xb2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0xb336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb335));
        // B2 028A
        gbc.setState(0xe2ee, 0x6637, 0xc710, 0x780d, 0x51ff, 0x127, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0xe2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe2ee));
        // B2 028B
        gbc.setState(0x400a, 0xbb08, 0x5d70, 0x9cef, 0x675c, 0x5854, 0x0, 0x1);
        gbc.writeMem(0x400a, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x400b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 028C
        gbc.setState(0x815b, 0xde4f, 0xa2e0, 0xf787, 0xc994, 0xe72f, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xde4f, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x815b));
        // B2 028D
        gbc.setState(0x2cf9, 0x3ddb, 0x8990, 0x81ff, 0x5725, 0x960b, 0x1, 0x1);
        gbc.writeMem(0x2cf9, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3ddb, gbc.sp());
        EXPECT(0x2cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 028E
        gbc.setState(0x9c7, 0x19f8, 0xda40, 0x162e, 0x48a0, 0xe0af, 0x1, 0x0);
        gbc.writeMem(0x9c7, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x19f8, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 028F
        gbc.setState(0x24c3, 0x312f, 0xf170, 0x79e8, 0x6ec3, 0xa146, 0x1, 0x0);
        gbc.writeMem(0x24c3, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x312f, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0290
        gbc.setState(0xdc4, 0xaca6, 0xcd60, 0x462a, 0x1d05, 0x876f, 0x0, 0x0);
        gbc.writeMem(0xdc4, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0xdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0292
        gbc.setState(0x5e02, 0xb7f0, 0x84f0, 0x2146, 0x5c37, 0xf884, 0x0, 0x1);
        gbc.writeMem(0x5e02, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb7f0, gbc.sp());
        EXPECT(0x5e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0294
        gbc.setState(0xb927, 0x3539, 0xe5f0, 0x6ccf, 0xbc8c, 0xbfaa, 0x1, 0x0);
        gbc.writeMem(0xb927, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3539, gbc.sp());
        EXPECT(0xb928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb927));
        // B2 0295
        gbc.setState(0x8a44, 0x9084, 0x2b20, 0x9222, 0xaa4, 0xd758, 0x1, 0x1);
        gbc.writeMem(0x8a44, { 0xb2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8a44));
        // B2 0296
        gbc.setState(0x753, 0x3cac, 0x9990, 0x480e, 0x123b, 0x7cef, 0x0, 0x0);
        gbc.writeMem(0x753, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3cac, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0297
        gbc.setState(0xe30, 0xe16b, 0x82f0, 0x5c7f, 0xf6ec, 0xc045, 0x0, 0x1);
        gbc.writeMem(0xe30, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe16b, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0298
        gbc.setState(0x333c, 0xffab, 0x8780, 0x4c8f, 0x81b9, 0x3321, 0x0, 0x1);
        gbc.writeMem(0x333c, { 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0x333d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0299
        gbc.setState(0x1ce2, 0x3a08, 0xc480, 0xc8d3, 0x226, 0x68a9, 0x0, 0x0);
        gbc.writeMem(0x1ce2, { 0xb2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 029A
        gbc.setState(0xd926, 0xc327, 0x15b0, 0xb155, 0xd0b5, 0x22ac, 0x1, 0x1);
        gbc.writeMem(0xd926, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0xd927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd926));
        // B2 029B
        gbc.setState(0x2589, 0xdb7, 0x1e30, 0x5f38, 0xc40f, 0xab8f, 0x0, 0x1);
        gbc.writeMem(0x2589, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdb7, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 029C
        gbc.setState(0x32cf, 0x3810, 0x60e0, 0x32d8, 0x4b7, 0x5b63, 0x0, 0x0);
        gbc.writeMem(0x32cf, { 0xb2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3810, gbc.sp());
        EXPECT(0x32d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 029D
        gbc.setState(0x14e6, 0x1286, 0xfe30, 0x6589, 0x577a, 0x58, 0x1, 0x0);
        gbc.writeMem(0x14e6, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1286, gbc.sp());
        EXPECT(0x14e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 029E
        gbc.setState(0x6fa6, 0xc71c, 0x48c0, 0x8049, 0xda5a, 0x91bc, 0x1, 0x1);
        gbc.writeMem(0x6fa6, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc71c, gbc.sp());
        EXPECT(0x6fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 029F
        gbc.setState(0xd28e, 0x82eb, 0xd2d0, 0xd2c, 0x188e, 0xfe1e, 0x0, 0x0);
        gbc.writeMem(0xd28e, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x82eb, gbc.sp());
        EXPECT(0xd28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd28e));
        // B2 02A0
        gbc.setState(0x38c0, 0x649a, 0x4df0, 0x235a, 0xd604, 0xb63b, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02A1
        gbc.setState(0x6c79, 0xcdd6, 0x1630, 0xf8f1, 0x8dd8, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0x6c79, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0x6c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02A2
        gbc.setState(0xb602, 0x3b11, 0x27f0, 0xa35, 0x3170, 0xe585, 0x1, 0x0);
        gbc.writeMem(0xb602, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0xb603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb602));
        // B2 02A3
        gbc.setState(0xb5d7, 0xd35a, 0xaee0, 0x6bdf, 0x34b4, 0xc48, 0x0, 0x0);
        gbc.writeMem(0xb5d7, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0xb5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb5d7));
        // B2 02A4
        gbc.setState(0x92b5, 0x9d86, 0x78a0, 0xba24, 0xd7a9, 0x8d14, 0x0, 0x1);
        gbc.writeMem(0x92b5, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x92b5));
        // B2 02A5
        gbc.setState(0x2ff1, 0x7b2d, 0x58d0, 0xb156, 0xa49, 0xa13f, 0x0, 0x1);
        gbc.writeMem(0x2ff1, { 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7b2d, gbc.sp());
        EXPECT(0x2ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02A6
        gbc.setState(0x7d0f, 0x4895, 0x85d0, 0xb1ac, 0x3df, 0x66d9, 0x1, 0x1);
        gbc.writeMem(0x7d0f, { 0xb2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0x7d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02A7
        gbc.setState(0xab08, 0xb3ad, 0xd390, 0xd925, 0xa32b, 0xce7, 0x1, 0x0);
        gbc.writeMem(0xab08, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb3ad, gbc.sp());
        EXPECT(0xab09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xab08));
        // B2 02A8
        gbc.setState(0x41f, 0xdbcd, 0x7fe0, 0x8e44, 0x6d, 0x2c04, 0x0, 0x0);
        gbc.writeMem(0x41f, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdbcd, gbc.sp());
        EXPECT(0x420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02A9
        gbc.setState(0x32d2, 0xa927, 0x5db0, 0x7cb7, 0x111b, 0x7482, 0x1, 0x0);
        gbc.writeMem(0x32d2, { 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa927, gbc.sp());
        EXPECT(0x32d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02AA
        gbc.setState(0x404, 0x992b, 0x1270, 0x1f32, 0x253f, 0x3584, 0x0, 0x0);
        gbc.writeMem(0x404, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02AB
        gbc.setState(0xeb66, 0x69ab, 0x2190, 0x5f8e, 0x5912, 0xb443, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x69ab, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeb66));
        // B2 02AC
        gbc.setState(0xe673, 0x9b8b, 0x3200, 0x7dbe, 0xc61b, 0xff44, 0x1, 0x1);
        gbc.writeMem(0xe673, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b8b, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe673));
        // B2 02AD
        gbc.setState(0xe606, 0x7f1a, 0x6cd0, 0x4b0e, 0x4d94, 0x46e1, 0x1, 0x0);
        gbc.writeMem(0xe606, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7f1a, gbc.sp());
        EXPECT(0xe607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe606));
        // B2 02AE
        gbc.setState(0x312b, 0x101e, 0xd070, 0xe085, 0x717b, 0xb5d6, 0x1, 0x0);
        gbc.writeMem(0x312b, { 0xb2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x312c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02AF
        gbc.setState(0xc2f7, 0x79b4, 0x1960, 0x4bdf, 0x75e2, 0x6400, 0x1, 0x1);
        gbc.writeMem(0xc2f7, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x79b4, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc2f7));
        // B2 02B0
        gbc.setState(0x1ea1, 0xe4cc, 0x6260, 0x2ae0, 0x72fd, 0xf470, 0x1, 0x0);
        gbc.writeMem(0x1ea1, { 0xb2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4cc, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B1
        gbc.setState(0xa65c, 0xfd69, 0x8440, 0x3bd2, 0x4fed, 0x5c18, 0x1, 0x0);
        gbc.writeMem(0xa65c, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfd69, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa65c));
        // B2 02B2
        gbc.setState(0x3989, 0x241e, 0x2bf0, 0x3f5d, 0x2189, 0x2c02, 0x0, 0x1);
        gbc.writeMem(0x3989, { 0xb2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x241e, gbc.sp());
        EXPECT(0x398a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B3
        gbc.setState(0x5174, 0xdd93, 0xdcd0, 0xfc68, 0xf8ba, 0xc480, 0x1, 0x0);
        gbc.writeMem(0x5174, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd93, gbc.sp());
        EXPECT(0x5175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B4
        gbc.setState(0x8d48, 0xc9d2, 0xdca0, 0x108d, 0x3262, 0x9dd4, 0x0, 0x0);
        gbc.writeMem(0x8d48, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8d48));
        // B2 02B5
        gbc.setState(0x1c5a, 0x81fc, 0xe80, 0x78, 0x640f, 0x8969, 0x0, 0x0);
        gbc.writeMem(0x1c5a, { 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0x1c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B6
        gbc.setState(0xbc56, 0xa2a3, 0xdc30, 0x3bed, 0x48b9, 0x692f, 0x1, 0x0);
        gbc.writeMem(0xbc56, { 0xb2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa2a3, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbc56));
        // B2 02B7
        gbc.setState(0x2898, 0xcb6c, 0x6c00, 0x8eed, 0x3a35, 0x1023, 0x1, 0x1);
        gbc.writeMem(0x2898, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcb6c, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B8
        gbc.setState(0x108e, 0x6346, 0x1240, 0x32f4, 0xa6d2, 0x8989, 0x0, 0x1);
        gbc.writeMem(0x108e, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0x108f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02B9
        gbc.setState(0x1cde, 0x1a4d, 0x6e80, 0x75d4, 0x721c, 0x1b45, 0x1, 0x1);
        gbc.writeMem(0x1cde, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0x1cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02BA
        gbc.setState(0x38c9, 0x4e, 0xbb60, 0xa06e, 0xc64, 0x9ec9, 0x0, 0x0);
        gbc.writeMem(0x38c9, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4e, gbc.sp());
        EXPECT(0x38ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02BB
        gbc.setState(0xd2bc, 0xbd61, 0xfac0, 0xe131, 0x4757, 0x631, 0x0, 0x1);
        gbc.writeMem(0xd2bc, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd2bc));
        // B2 02BC
        gbc.setState(0x124e, 0x548c, 0xbc00, 0xe57c, 0x6c0f, 0xbaf1, 0x1, 0x1);
        gbc.writeMem(0x124e, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x124f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02BD
        gbc.setState(0x1b62, 0x4b81, 0x4040, 0x7d59, 0xe523, 0x5d9e, 0x1, 0x1);
        gbc.writeMem(0x1b62, { 0xb2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02BE
        gbc.setState(0xdeb1, 0xe6c, 0x8730, 0x122a, 0xe726, 0x8470, 0x1, 0x0);
        gbc.writeMem(0xdeb1, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0xdeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdeb1));
        // B2 02BF
        gbc.setState(0x4152, 0x39ea, 0x3ad0, 0xcc7a, 0x2f19, 0x283d, 0x1, 0x1);
        gbc.writeMem(0x4152, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39ea, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02C1
        gbc.setState(0x8748, 0xd0d4, 0xb170, 0x352e, 0x1cf4, 0xcf6c, 0x0, 0x1);
        gbc.writeMem(0x8748, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd0d4, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8748));
        // B2 02C2
        gbc.setState(0xdf5e, 0x150e, 0x7f20, 0xccff, 0xd7f5, 0xd8ae, 0x1, 0x1);
        gbc.writeMem(0xdf5e, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdf5e));
        // B2 02C3
        gbc.setState(0x78ad, 0xa77d, 0x17a0, 0x14d1, 0x8078, 0x5e4a, 0x0, 0x1);
        gbc.writeMem(0x78ad, { 0xb2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa77d, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02C4
        gbc.setState(0x22fd, 0x5519, 0x9040, 0x4ed6, 0x8eaf, 0xfc61, 0x0, 0x0);
        gbc.writeMem(0x22fd, { 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5519, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02C5
        gbc.setState(0x1c10, 0xcd65, 0xbda0, 0xc120, 0x4c86, 0x28e1, 0x1, 0x0);
        gbc.writeMem(0x1c10, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcd65, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02C6
        gbc.setState(0xa5c2, 0xb2a0, 0xea40, 0xf96, 0xd91, 0x3c42, 0x1, 0x0);
        gbc.writeMem(0xa5c2, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa5c2));
        // B2 02C7
        gbc.setState(0x7323, 0x68f1, 0x8940, 0x9479, 0x2210, 0x374b, 0x0, 0x1);
        gbc.writeMem(0x7323, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02C9
        gbc.setState(0x3194, 0x1109, 0xbc50, 0xcc1e, 0x8eb, 0x357a, 0x0, 0x0);
        gbc.writeMem(0x3194, { 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1109, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02CA
        gbc.setState(0xedfd, 0x37ab, 0xe400, 0xf4d1, 0x6c0b, 0x2ead, 0x1, 0x1);
        gbc.writeMem(0xedfd, { 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x37ab, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xedfd));
        // B2 02CB
        gbc.setState(0x920e, 0x320d, 0x61d0, 0xe128, 0x6fd0, 0xa2f7, 0x0, 0x1);
        gbc.writeMem(0x920e, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x320d, gbc.sp());
        EXPECT(0x920f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x920e));
        // B2 02CC
        gbc.setState(0x26dd, 0x1eb7, 0x64a0, 0x3f82, 0x89b2, 0x4253, 0x1, 0x0);
        gbc.writeMem(0x26dd, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0x26de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02CD
        gbc.setState(0xe3df, 0x4778, 0x79e0, 0xcd09, 0x1f21, 0x9263, 0x1, 0x1);
        gbc.writeMem(0xe3df, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4778, gbc.sp());
        EXPECT(0xe3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3df));
        // B2 02CE
        gbc.setState(0x2344, 0xb864, 0x1790, 0xdc0e, 0xecaa, 0x42df, 0x1, 0x1);
        gbc.writeMem(0x2344, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02CF
        gbc.setState(0xc65c, 0xaf3c, 0x8400, 0x8106, 0x21ff, 0xa0a8, 0x0, 0x1);
        gbc.writeMem(0xc65c, { 0xb2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0xc65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc65c));
        // B2 02D0
        gbc.setState(0x8cd4, 0x4c41, 0x18a0, 0x9155, 0x1ba9, 0x4280, 0x0, 0x1);
        gbc.writeMem(0x8cd4, { 0xb2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4c41, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8cd4));
        // B2 02D1
        gbc.setState(0xe287, 0xe20f, 0x1f60, 0x80e4, 0xd6b0, 0x9f91, 0x1, 0x0);
        gbc.writeMem(0xe287, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe20f, gbc.sp());
        EXPECT(0xe288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe287));
        // B2 02D2
        gbc.setState(0x3816, 0x62a2, 0x5580, 0x1ad9, 0x32ab, 0x3c53, 0x0, 0x1);
        gbc.writeMem(0x3816, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x62a2, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02D3
        gbc.setState(0x122c, 0xe329, 0x7960, 0x9501, 0xb1be, 0xc77b, 0x1, 0x0);
        gbc.writeMem(0x122c, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe329, gbc.sp());
        EXPECT(0x122d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02D4
        gbc.setState(0x4dfd, 0x4d56, 0x9bb0, 0x5b83, 0x9fe0, 0x5dd5, 0x1, 0x0);
        gbc.writeMem(0x4dfd, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02D5
        gbc.setState(0xd5f4, 0xa6f2, 0x3ef0, 0xc040, 0xe4fe, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0xd5f4, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa6f2, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd5f4));
        // B2 02D6
        gbc.setState(0x8f7c, 0x8b68, 0x71e0, 0x8623, 0x4672, 0xc1c8, 0x0, 0x1);
        gbc.writeMem(0x8f7c, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8b68, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8f7c));
        // B2 02D7
        gbc.setState(0xa118, 0x1ff0, 0x1760, 0x5cc, 0xbc32, 0xe6ca, 0x1, 0x1);
        gbc.writeMem(0xa118, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1ff0, gbc.sp());
        EXPECT(0xa119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa118));
        // B2 02D8
        gbc.setState(0xa86, 0x3a8, 0x1a60, 0xea2e, 0x9b6b, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0xa86, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02D9
        gbc.setState(0xadab, 0x8925, 0x460, 0xf356, 0x1c14, 0xbd83, 0x0, 0x0);
        gbc.writeMem(0xadab, { 0xb2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0xadac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xadab));
        // B2 02DA
        gbc.setState(0x3bb5, 0x3a09, 0x93f0, 0x9018, 0x13c4, 0xc886, 0x1, 0x0);
        gbc.writeMem(0x3bb5, { 0xb2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02DB
        gbc.setState(0xd03f, 0xc228, 0xd3f0, 0xe455, 0x2691, 0x3d51, 0x0, 0x1);
        gbc.writeMem(0xd03f, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd03f));
        // B2 02DC
        gbc.setState(0x3c3f, 0xbd2c, 0xf0a0, 0x1d58, 0x435f, 0xb160, 0x1, 0x0);
        gbc.writeMem(0x3c3f, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0x3c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02DD
        gbc.setState(0xd0a9, 0x7c08, 0xd760, 0x4b19, 0x92af, 0xba21, 0x0, 0x0);
        gbc.writeMem(0xd0a9, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c08, gbc.sp());
        EXPECT(0xd0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd0a9));
        // B2 02DE
        gbc.setState(0x1f89, 0x2ba, 0x9810, 0x358b, 0x460b, 0xfd3e, 0x1, 0x1);
        gbc.writeMem(0x1f89, { 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2ba, gbc.sp());
        EXPECT(0x1f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02E0
        gbc.setState(0xb460, 0x1065, 0xc690, 0xd21e, 0x399e, 0x2c3, 0x0, 0x0);
        gbc.writeMem(0xb460, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0xb461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb460));
        // B2 02E1
        gbc.setState(0x974f, 0x6d9a, 0xad60, 0xd844, 0x9e20, 0xfb67, 0x1, 0x0);
        gbc.writeMem(0x974f, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0x9750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x974f));
        // B2 02E2
        gbc.setState(0x71bb, 0x3d70, 0x3a00, 0x21e0, 0xf9ae, 0xd64d, 0x1, 0x0);
        gbc.writeMem(0x71bb, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02E3
        gbc.setState(0x7356, 0x11a5, 0x80a0, 0x1585, 0x3d07, 0xe29, 0x1, 0x0);
        gbc.writeMem(0x7356, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x11a5, gbc.sp());
        EXPECT(0x7357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02E4
        gbc.setState(0xc8b1, 0x970c, 0x42d0, 0x41bb, 0x99cd, 0x4bb4, 0x0, 0x1);
        gbc.writeMem(0xc8b1, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x970c, gbc.sp());
        EXPECT(0xc8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc8b1));
        // B2 02E5
        gbc.setState(0x6fb2, 0x88c4, 0xb200, 0xb07, 0x3b35, 0x2dcb, 0x1, 0x0);
        gbc.writeMem(0x6fb2, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x88c4, gbc.sp());
        EXPECT(0x6fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02E6
        gbc.setState(0xc902, 0x37ff, 0x4060, 0xa4c6, 0x53a4, 0x7f45, 0x0, 0x0);
        gbc.writeMem(0xc902, { 0xb2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x37ff, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc902));
        // B2 02E7
        gbc.setState(0x14b5, 0x77a9, 0xd640, 0x3268, 0xf561, 0xfc38, 0x1, 0x1);
        gbc.writeMem(0x14b5, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x14b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02E8
        gbc.setState(0xc34e, 0x9fde, 0x5ea0, 0xa691, 0x694c, 0xd8ff, 0x1, 0x1);
        gbc.writeMem(0xc34e, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9fde, gbc.sp());
        EXPECT(0xc34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc34e));
        // B2 02E9
        gbc.setState(0x111c, 0x4d56, 0x7be0, 0x611, 0xe991, 0xce3f, 0x0, 0x0);
        gbc.writeMem(0x111c, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4d56, gbc.sp());
        EXPECT(0x111d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02EA
        gbc.setState(0x5a89, 0x79f4, 0x3e60, 0xcb62, 0xf560, 0x792f, 0x0, 0x0);
        gbc.writeMem(0x5a89, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x5a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02EB
        gbc.setState(0x75a2, 0x9cb4, 0xcea0, 0x529a, 0x26f4, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x75a2, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0x75a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02EC
        gbc.setState(0x4d16, 0xe73c, 0xf690, 0xf3d8, 0x273a, 0x33ce, 0x1, 0x0);
        gbc.writeMem(0x4d16, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe73c, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02ED
        gbc.setState(0x21a3, 0x3906, 0x27f0, 0xb3e, 0x39a6, 0x68e2, 0x1, 0x1);
        gbc.writeMem(0x21a3, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3906, gbc.sp());
        EXPECT(0x21a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02EE
        gbc.setState(0x1687, 0xaade, 0xa360, 0xafcd, 0x8cd7, 0xdc42, 0x1, 0x0);
        gbc.writeMem(0x1687, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaade, gbc.sp());
        EXPECT(0x1688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02EF
        gbc.setState(0x3af6, 0x9b0b, 0xc820, 0x5812, 0xd110, 0xeca0, 0x0, 0x1);
        gbc.writeMem(0x3af6, { 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F0
        gbc.setState(0x5b8f, 0x7dee, 0x6250, 0x6b0a, 0x4602, 0xf441, 0x1, 0x1);
        gbc.writeMem(0x5b8f, { 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7dee, gbc.sp());
        EXPECT(0x5b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F1
        gbc.setState(0xcd3e, 0x452, 0x4af0, 0x47bc, 0xbe16, 0x7e71, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0xcd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcd3e));
        // B2 02F2
        gbc.setState(0x92c, 0x7d4d, 0x4940, 0x6c65, 0x75a7, 0xf99a, 0x0, 0x1);
        gbc.writeMem(0x92c, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F3
        gbc.setState(0x5c67, 0x9586, 0x5be0, 0xee4b, 0x8989, 0x6f1a, 0x1, 0x1);
        gbc.writeMem(0x5c67, { 0xb2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F4
        gbc.setState(0xe80d, 0x3740, 0x14a0, 0x9544, 0x4061, 0x99f0, 0x0, 0x1);
        gbc.writeMem(0xe80d, { 0xb2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe80d));
        // B2 02F5
        gbc.setState(0x6112, 0xb1eb, 0xca30, 0xf80, 0x65f1, 0x2997, 0x0, 0x0);
        gbc.writeMem(0x6112, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb1eb, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F6
        gbc.setState(0x461e, 0x711c, 0xfb70, 0x1863, 0x48bb, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0x461e, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x711c, gbc.sp());
        EXPECT(0x461f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02F7
        gbc.setState(0x8c01, 0x61b4, 0x85c0, 0xdb9e, 0xbac4, 0x8513, 0x1, 0x0);
        gbc.writeMem(0x8c01, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x61b4, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8c01));
        // B2 02F8
        gbc.setState(0xad0d, 0x5b6e, 0xcca0, 0xa986, 0xd10e, 0xf35e, 0x1, 0x1);
        gbc.writeMem(0xad0d, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5b6e, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xad0d));
        // B2 02F9
        gbc.setState(0xb15d, 0x8444, 0xce70, 0x7d3e, 0x15e9, 0xe853, 0x0, 0x0);
        gbc.writeMem(0xb15d, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8444, gbc.sp());
        EXPECT(0xb15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb15d));
        // B2 02FA
        gbc.setState(0xd58e, 0x95c3, 0x81a0, 0x8f1d, 0x8b4b, 0xd928, 0x0, 0x1);
        gbc.writeMem(0xd58e, { 0xb2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0xd58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd58e));
        // B2 02FB
        gbc.setState(0xb0d6, 0xdb8, 0xbb10, 0x2ba1, 0xa1d3, 0x6f44, 0x0, 0x0);
        gbc.writeMem(0xb0d6, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdb8, gbc.sp());
        EXPECT(0xb0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb0d6));
        // B2 02FC
        gbc.setState(0x24dc, 0xc5b5, 0x8540, 0x765c, 0x3dc0, 0xee16, 0x1, 0x1);
        gbc.writeMem(0x24dc, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc5b5, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 02FD
        gbc.setState(0x8ebf, 0x1f5c, 0xaae0, 0x95b2, 0x5008, 0xc87f, 0x0, 0x1);
        gbc.writeMem(0x8ebf, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8ebf));
        // B2 02FE
        gbc.setState(0x7522, 0x99ea, 0x3880, 0xb018, 0x9764, 0x679e, 0x0, 0x1);
        gbc.writeMem(0x7522, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x99ea, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0300
        gbc.setState(0x8304, 0x61fd, 0x8460, 0xd0e7, 0x8c56, 0x1572, 0x0, 0x0);
        gbc.writeMem(0x8304, { 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8304));
        // B2 0301
        gbc.setState(0xe5c6, 0xb962, 0x2b10, 0x7752, 0x81e5, 0xabef, 0x0, 0x0);
        gbc.writeMem(0xe5c6, { 0xb2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb962, gbc.sp());
        EXPECT(0xe5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe5c6));
        // B2 0302
        gbc.setState(0x6a59, 0x8e16, 0xc0, 0xbf22, 0x1e8c, 0xc166, 0x1, 0x1);
        gbc.writeMem(0x6a59, { 0xb2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8e16, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0303
        gbc.setState(0x15cc, 0x2ce5, 0xbad0, 0x9341, 0x4b92, 0x4fee, 0x1, 0x1);
        gbc.writeMem(0x15cc, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0304
        gbc.setState(0xc60e, 0xdf26, 0x1f50, 0x59d1, 0x2518, 0xf414, 0x0, 0x0);
        gbc.writeMem(0xc60e, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc60e));
        // B2 0305
        gbc.setState(0x494d, 0x660c, 0x8170, 0x4065, 0x558b, 0x8361, 0x1, 0x1);
        gbc.writeMem(0x494d, { 0xb2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x660c, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0306
        gbc.setState(0x4a56, 0x24e9, 0x7de0, 0x3098, 0xda2a, 0xbf4f, 0x0, 0x0);
        gbc.writeMem(0x4a56, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x24e9, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0307
        gbc.setState(0x5fb3, 0x4245, 0x78b0, 0x62e7, 0x9292, 0xa82b, 0x1, 0x1);
        gbc.writeMem(0x5fb3, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4245, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0308
        gbc.setState(0x7507, 0xcd67, 0x5fa0, 0x8e85, 0xb7d, 0xfec5, 0x0, 0x1);
        gbc.writeMem(0x7507, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcd67, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0309
        gbc.setState(0xd31b, 0xc93a, 0x4d30, 0x2eb9, 0x2c78, 0xf76a, 0x0, 0x1);
        gbc.writeMem(0xd31b, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc93a, gbc.sp());
        EXPECT(0xd31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd31b));
        // B2 030A
        gbc.setState(0x1f1e, 0x5e4b, 0xb2c0, 0x7e51, 0x9263, 0xe64d, 0x1, 0x0);
        gbc.writeMem(0x1f1e, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5e4b, gbc.sp());
        EXPECT(0x1f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 030B
        gbc.setState(0x27ad, 0x68cd, 0x1ec0, 0x1e58, 0xeac5, 0x2792, 0x0, 0x0);
        gbc.writeMem(0x27ad, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x27ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 030C
        gbc.setState(0xc4a4, 0x40a7, 0x68e0, 0xac70, 0x969d, 0x88b9, 0x1, 0x0);
        gbc.writeMem(0xc4a4, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x40a7, gbc.sp());
        EXPECT(0xc4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc4a4));
        // B2 030D
        gbc.setState(0x2e59, 0xc053, 0xc790, 0xc34f, 0xbae0, 0x6238, 0x1, 0x1);
        gbc.writeMem(0x2e59, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 030E
        gbc.setState(0xcd61, 0x22e, 0xe8b0, 0x15ac, 0xdaa0, 0xc937, 0x1, 0x1);
        gbc.writeMem(0xcd61, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22e, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcd61));
        // B2 030F
        gbc.setState(0x1c03, 0x1255, 0xaf90, 0x4d1b, 0xd099, 0x1d9, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1255, gbc.sp());
        EXPECT(0x1c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0310
        gbc.setState(0x1edc, 0x543, 0xa70, 0x9f45, 0xc32d, 0x2799, 0x1, 0x1);
        gbc.writeMem(0x1edc, { 0xb2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x1edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0311
        gbc.setState(0x74e1, 0x9d57, 0xf230, 0x8140, 0x97d5, 0xf793, 0x0, 0x1);
        gbc.writeMem(0x74e1, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9d57, gbc.sp());
        EXPECT(0x74e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0312
        gbc.setState(0x6dca, 0x7c62, 0xd250, 0x5496, 0x1fba, 0x98ff, 0x1, 0x0);
        gbc.writeMem(0x6dca, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0313
        gbc.setState(0x2a59, 0x7f6c, 0x1190, 0x1d6f, 0x8e6f, 0xa37a, 0x0, 0x0);
        gbc.writeMem(0x2a59, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0x2a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0314
        gbc.setState(0x5bf2, 0x653f, 0x1df0, 0x2e84, 0x577e, 0xcdca, 0x0, 0x1);
        gbc.writeMem(0x5bf2, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0315
        gbc.setState(0x1089, 0x8157, 0x6a70, 0x7910, 0xe0a5, 0xd25c, 0x0, 0x1);
        gbc.writeMem(0x1089, { 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0x108a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0316
        gbc.setState(0x4af8, 0x771e, 0x10b0, 0xea14, 0xf6d4, 0xce84, 0x1, 0x0);
        gbc.writeMem(0x4af8, { 0xb2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x771e, gbc.sp());
        EXPECT(0x4af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0317
        gbc.setState(0xf3f, 0xf8d2, 0x2840, 0x628b, 0x7e4f, 0xe892, 0x1, 0x0);
        gbc.writeMem(0xf3f, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf8d2, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0318
        gbc.setState(0x9ef7, 0x720, 0x3810, 0x878a, 0x9ad8, 0x9f26, 0x0, 0x0);
        gbc.writeMem(0x9ef7, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0x9ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9ef7));
        // B2 0319
        gbc.setState(0xea36, 0x247e, 0x8e60, 0xa4dc, 0x6068, 0x4d1b, 0x1, 0x1);
        gbc.writeMem(0xea36, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x247e, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xea36));
        // B2 031A
        gbc.setState(0x18d0, 0x8a7e, 0xc430, 0x9aed, 0xec85, 0x5ac9, 0x0, 0x0);
        gbc.writeMem(0x18d0, { 0xb2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 031B
        gbc.setState(0x6ca2, 0x4b43, 0x3000, 0x4c99, 0xaaf4, 0xfac9, 0x1, 0x0);
        gbc.writeMem(0x6ca2, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 031C
        gbc.setState(0xc126, 0x6efb, 0x2110, 0x9f64, 0x236a, 0x3c43, 0x0, 0x0);
        gbc.writeMem(0xc126, { 0xb2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6efb, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc126));
        // B2 031D
        gbc.setState(0x520e, 0xd7c5, 0x5d30, 0x2849, 0x9296, 0x2836, 0x1, 0x0);
        gbc.writeMem(0x520e, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x520f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 031E
        gbc.setState(0xe0c7, 0x3e5e, 0xb620, 0xaf96, 0xcb5a, 0x23c7, 0x0, 0x1);
        gbc.writeMem(0xe0c7, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe0c7));
        // B2 031F
        gbc.setState(0x641a, 0xdf4d, 0x840, 0x65e, 0x650e, 0xaca, 0x1, 0x0);
        gbc.writeMem(0x641a, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdf4d, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0320
        gbc.setState(0xe519, 0x8aca, 0xb400, 0x6c97, 0x1ffd, 0xa5f5, 0x1, 0x1);
        gbc.writeMem(0xe519, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0xe51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe519));
        // B2 0321
        gbc.setState(0x9349, 0x7325, 0xb2a0, 0xe0bf, 0x6c8, 0x254f, 0x0, 0x1);
        gbc.writeMem(0x9349, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7325, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9349));
        // B2 0322
        gbc.setState(0x45a4, 0xb9b4, 0x4280, 0x906e, 0xa5e1, 0xb522, 0x0, 0x0);
        gbc.writeMem(0x45a4, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0x45a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0323
        gbc.setState(0x3e66, 0xc45, 0xfaf0, 0xb6c, 0x9e64, 0x4edb, 0x0, 0x1);
        gbc.writeMem(0x3e66, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0324
        gbc.setState(0x6f3b, 0x492c, 0x9a90, 0x2368, 0xf4d2, 0xcdac, 0x1, 0x1);
        gbc.writeMem(0x6f3b, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x492c, gbc.sp());
        EXPECT(0x6f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0325
        gbc.setState(0x46ad, 0x8287, 0x6bc0, 0x1b92, 0xe2de, 0x523b, 0x1, 0x1);
        gbc.writeMem(0x46ad, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8287, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0326
        gbc.setState(0xaa6e, 0xcb28, 0x4e00, 0xea72, 0x5418, 0x24b5, 0x0, 0x0);
        gbc.writeMem(0xaa6e, { 0xb2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0xaa6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaa6e));
        // B2 0327
        gbc.setState(0x7dca, 0x6647, 0xe3a0, 0xc3c, 0x1a44, 0xc95a, 0x0, 0x0);
        gbc.writeMem(0x7dca, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6647, gbc.sp());
        EXPECT(0x7dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0328
        gbc.setState(0x4324, 0xb676, 0x5bf0, 0xf93d, 0x3fc8, 0x800c, 0x0, 0x1);
        gbc.writeMem(0x4324, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0x4325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0329
        gbc.setState(0x42e7, 0x7ca5, 0xc5e0, 0xdb74, 0xb425, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0x42e7, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7ca5, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 032A
        gbc.setState(0xb2b8, 0x9f1f, 0x1f50, 0x7ae0, 0x8cca, 0xed1c, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9f1f, gbc.sp());
        EXPECT(0xb2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb2b8));
        // B2 032B
        gbc.setState(0x9908, 0x709a, 0x5750, 0x1173, 0xd38c, 0xd8cd, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0x9909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9908));
        // B2 032C
        gbc.setState(0xe341, 0xf99c, 0x5190, 0x6b7f, 0xec41, 0x97bc, 0x1, 0x1);
        gbc.writeMem(0xe341, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0xe342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe341));
        // B2 032D
        gbc.setState(0xc97, 0xee1e, 0x3c00, 0xcae6, 0x4f67, 0xcdc1, 0x1, 0x0);
        gbc.writeMem(0xc97, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 032E
        gbc.setState(0xb978, 0x986c, 0x5990, 0x57df, 0x65bc, 0x4ad8, 0x1, 0x0);
        gbc.writeMem(0xb978, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb978));
        // B2 032F
        gbc.setState(0x511a, 0xf7cf, 0x1e20, 0x1ffe, 0x2ebc, 0x340a, 0x0, 0x1);
        gbc.writeMem(0x511a, { 0xb2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf7cf, gbc.sp());
        EXPECT(0x511b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0330
        gbc.setState(0x667e, 0xae0c, 0x4670, 0xb128, 0x35c3, 0xe5a9, 0x1, 0x1);
        gbc.writeMem(0x667e, { 0xb2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xae0c, gbc.sp());
        EXPECT(0x667f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0332
        gbc.setState(0x7773, 0x4b6f, 0x9130, 0x1e56, 0xef8d, 0x605d, 0x1, 0x0);
        gbc.writeMem(0x7773, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4b6f, gbc.sp());
        EXPECT(0x7774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0333
        gbc.setState(0xa367, 0xebbf, 0xba20, 0x3f3e, 0x97a9, 0xa2a, 0x0, 0x0);
        gbc.writeMem(0xa367, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa367));
        // B2 0334
        gbc.setState(0x22ab, 0x93d6, 0xb760, 0x3fb9, 0xae00, 0x1953, 0x0, 0x1);
        gbc.writeMem(0x22ab, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x93d6, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0335
        gbc.setState(0xfeb, 0x32d6, 0x47c0, 0xe8e3, 0x3858, 0x4718, 0x0, 0x0);
        gbc.writeMem(0xfeb, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0336
        gbc.setState(0x89a1, 0x57fe, 0x9970, 0x5857, 0xa37c, 0xaee0, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x57fe, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x89a1));
        // B2 0337
        gbc.setState(0x4341, 0x63b7, 0x7670, 0x63d6, 0xf79d, 0xd49c, 0x1, 0x1);
        gbc.writeMem(0x4341, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0x4342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0338
        gbc.setState(0xcf38, 0xbb57, 0x6eb0, 0x90b7, 0x1b13, 0xb86a, 0x0, 0x0);
        gbc.writeMem(0xcf38, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbb57, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcf38));
        // B2 0339
        gbc.setState(0x4bd7, 0x91ef, 0xb3b0, 0x7649, 0x71fd, 0x670d, 0x1, 0x0);
        gbc.writeMem(0x4bd7, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 033A
        gbc.setState(0x97c9, 0xf47e, 0xd7d0, 0xb10a, 0xf3f1, 0xf173, 0x1, 0x0);
        gbc.writeMem(0x97c9, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf47e, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x97c9));
        // B2 033B
        gbc.setState(0x26e8, 0xe8eb, 0x5bb0, 0x7a5c, 0x7531, 0xd41e, 0x1, 0x0);
        gbc.writeMem(0x26e8, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe8eb, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 033C
        gbc.setState(0x26ba, 0x2416, 0x53e0, 0xe2ce, 0x44f2, 0x37f, 0x0, 0x1);
        gbc.writeMem(0x26ba, { 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2416, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 033D
        gbc.setState(0x2208, 0x2b4f, 0x2310, 0x1b2d, 0x7148, 0x70c7, 0x0, 0x0);
        gbc.writeMem(0x2208, { 0xb2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2b4f, gbc.sp());
        EXPECT(0x2209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 033E
        gbc.setState(0x3175, 0x96bc, 0x3a70, 0x90, 0x96b1, 0xfd86, 0x1, 0x0);
        gbc.writeMem(0x3175, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0x3176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 033F
        gbc.setState(0xeee5, 0x1dbf, 0x1060, 0x9b9c, 0x4d14, 0xe549, 0x0, 0x1);
        gbc.writeMem(0xeee5, { 0xb2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1dbf, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeee5));
        // B2 0340
        gbc.setState(0x2eed, 0x9fe9, 0xfcc0, 0x107b, 0x56d0, 0x2e02, 0x0, 0x0);
        gbc.writeMem(0x2eed, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9fe9, gbc.sp());
        EXPECT(0x2eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0341
        gbc.setState(0x1686, 0xf5ed, 0xde00, 0xcf7f, 0xba92, 0xb74b, 0x0, 0x0);
        gbc.writeMem(0x1686, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0342
        gbc.setState(0x98fa, 0xd381, 0x6ad0, 0x5206, 0x3ed3, 0x348f, 0x1, 0x0);
        gbc.writeMem(0x98fa, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd381, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x98fa));
        // B2 0343
        gbc.setState(0x49ab, 0x73fc, 0x1fc0, 0xc736, 0x7dad, 0xf7ec, 0x1, 0x0);
        gbc.writeMem(0x49ab, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x73fc, gbc.sp());
        EXPECT(0x49ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0345
        gbc.setState(0x2e01, 0xb591, 0x6c10, 0x633a, 0xdb3, 0x3315, 0x1, 0x1);
        gbc.writeMem(0x2e01, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0x2e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0346
        gbc.setState(0x3970, 0x4121, 0xeaf0, 0x2408, 0x54fe, 0x1ec5, 0x0, 0x1);
        gbc.writeMem(0x3970, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4121, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0347
        gbc.setState(0xc7fb, 0x1718, 0xb8f0, 0xb022, 0xc7c5, 0x1e45, 0x1, 0x0);
        gbc.writeMem(0xc7fb, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1718, gbc.sp());
        EXPECT(0xc7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc7fb));
        // B2 0348
        gbc.setState(0x9c6, 0x6517, 0xd610, 0x7be6, 0x1693, 0xa77f, 0x0, 0x1);
        gbc.writeMem(0x9c6, { 0xb2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6517, gbc.sp());
        EXPECT(0x9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0349
        gbc.setState(0xa454, 0xc875, 0x86d0, 0xc3a4, 0xa864, 0x7ef9, 0x0, 0x0);
        gbc.writeMem(0xa454, { 0xb2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc875, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa454));
        // B2 034A
        gbc.setState(0xab47, 0x9f95, 0x3300, 0xd971, 0xd72a, 0xa845, 0x0, 0x1);
        gbc.writeMem(0xab47, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9f95, gbc.sp());
        EXPECT(0xab48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xab47));
        // B2 034B
        gbc.setState(0x91a3, 0x218a, 0xcff0, 0xef42, 0x5366, 0x4320, 0x1, 0x1);
        gbc.writeMem(0x91a3, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x91a3));
        // B2 034C
        gbc.setState(0x83f6, 0xcf0e, 0x3c50, 0x9180, 0xf242, 0x23d8, 0x1, 0x1);
        gbc.writeMem(0x83f6, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0x83f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x83f6));
        // B2 034D
        gbc.setState(0x211, 0x1199, 0xa4c0, 0x63a2, 0xb33b, 0x5fdb, 0x1, 0x0);
        gbc.writeMem(0x211, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1199, gbc.sp());
        EXPECT(0x212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 034E
        gbc.setState(0x1697, 0xe750, 0xb0d0, 0xf29c, 0xf788, 0xf822, 0x1, 0x0);
        gbc.writeMem(0x1697, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe750, gbc.sp());
        EXPECT(0x1698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 034F
        gbc.setState(0x90b8, 0x8cf8, 0xebc0, 0x4758, 0xc8e0, 0x3a25, 0x1, 0x1);
        gbc.writeMem(0x90b8, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x90b8));
        // B2 0350
        gbc.setState(0x7ed8, 0x1a4a, 0x9cb0, 0x66b, 0x8164, 0x846, 0x1, 0x1);
        gbc.writeMem(0x7ed8, { 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1a4a, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0351
        gbc.setState(0x6527, 0x5a61, 0xa70, 0xcb8f, 0x5d52, 0xa4c8, 0x0, 0x1);
        gbc.writeMem(0x6527, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5a61, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0352
        gbc.setState(0xbca8, 0x63d2, 0xf9a0, 0x263e, 0xd11e, 0x72f0, 0x0, 0x1);
        gbc.writeMem(0xbca8, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbca8));
        // B2 0354
        gbc.setState(0x7c91, 0xd26, 0x9cb0, 0x4232, 0x63c4, 0x6d35, 0x0, 0x1);
        gbc.writeMem(0x7c91, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd26, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0355
        gbc.setState(0x6b03, 0x3fbf, 0x69e0, 0x5848, 0x9976, 0x1520, 0x1, 0x0);
        gbc.writeMem(0x6b03, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3fbf, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0356
        gbc.setState(0x1df6, 0x7380, 0x6f0, 0x1a44, 0x2a7e, 0xadfe, 0x1, 0x1);
        gbc.writeMem(0x1df6, { 0xb2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7380, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0357
        gbc.setState(0x1f89, 0xcff1, 0x6df0, 0xd22a, 0x2c71, 0xb0ba, 0x0, 0x1);
        gbc.writeMem(0x1f89, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcff1, gbc.sp());
        EXPECT(0x1f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0358
        gbc.setState(0xdfb5, 0x528b, 0xec0, 0x1fcd, 0xe88, 0x8518, 0x0, 0x0);
        gbc.writeMem(0xdfb5, { 0xb2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdfb5));
        // B2 0359
        gbc.setState(0xef24, 0xea00, 0xe650, 0xd4b3, 0x193f, 0x624a, 0x1, 0x1);
        gbc.writeMem(0xef24, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xea00, gbc.sp());
        EXPECT(0xef25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xef24));
        // B2 035A
        gbc.setState(0x16dd, 0x198a, 0xe6f0, 0x28e9, 0x9cbb, 0xa258, 0x0, 0x1);
        gbc.writeMem(0x16dd, { 0xb2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x198a, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 035B
        gbc.setState(0xd7dd, 0xc5d0, 0xdc30, 0xd97, 0x8d93, 0x7878, 0x0, 0x1);
        gbc.writeMem(0xd7dd, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd7dd));
        // B2 035C
        gbc.setState(0x296d, 0x3159, 0xa260, 0xc804, 0xced5, 0x7c8, 0x1, 0x1);
        gbc.writeMem(0x296d, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3159, gbc.sp());
        EXPECT(0x296e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 035D
        gbc.setState(0x949f, 0xeaeb, 0x6fa0, 0x2046, 0x7389, 0xc5b4, 0x0, 0x0);
        gbc.writeMem(0x949f, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x949f));
        // B2 035E
        gbc.setState(0x3ce1, 0x21a8, 0x7ba0, 0xa2ba, 0xf3cc, 0xb5a0, 0x0, 0x1);
        gbc.writeMem(0x3ce1, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 035F
        gbc.setState(0x8aca, 0x368b, 0x9a40, 0x2440, 0xb8d7, 0xb522, 0x0, 0x0);
        gbc.writeMem(0x8aca, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x368b, gbc.sp());
        EXPECT(0x8acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8aca));
        // B2 0360
        gbc.setState(0x36ed, 0x2fd3, 0x69d0, 0xcd89, 0xf89a, 0x7e18, 0x0, 0x0);
        gbc.writeMem(0x36ed, { 0xb2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0361
        gbc.setState(0x7e1, 0xe642, 0x43c0, 0x71b7, 0xf00d, 0x6c0c, 0x0, 0x1);
        gbc.writeMem(0x7e1, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe642, gbc.sp());
        EXPECT(0x7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0362
        gbc.setState(0xb6b1, 0x7023, 0xa620, 0xf17e, 0xb2e0, 0xc093, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb6b1));
        // B2 0363
        gbc.setState(0x750e, 0x9642, 0xf500, 0xa8dc, 0xd4af, 0xd55b, 0x1, 0x1);
        gbc.writeMem(0x750e, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0x750f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0364
        gbc.setState(0x7c, 0x545, 0x28c0, 0x5fda, 0xcecf, 0xab13, 0x0, 0x1);
        gbc.writeMem(0x7c, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0x7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0365
        gbc.setState(0x71fd, 0x8c50, 0x9570, 0x7e61, 0xca8c, 0xa70d, 0x1, 0x0);
        gbc.writeMem(0x71fd, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0366
        gbc.setState(0xd2e7, 0xdc27, 0x2d00, 0xaa4f, 0x2780, 0xda60, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0xb2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdc27, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd2e7));
        // B2 0367
        gbc.setState(0x5005, 0x1234, 0x12b0, 0xca85, 0x3792, 0xfcd6, 0x1, 0x0);
        gbc.writeMem(0x5005, { 0xb2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1234, gbc.sp());
        EXPECT(0x5006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0368
        gbc.setState(0x8350, 0xd271, 0xd370, 0x56a5, 0xfbf4, 0x3926, 0x0, 0x1);
        gbc.writeMem(0x8350, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd271, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8350));
        // B2 0369
        gbc.setState(0xaff3, 0xb0c4, 0x1190, 0xaa17, 0x477f, 0xe6dc, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xb2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0xaff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaff3));
        // B2 036A
        gbc.setState(0x510f, 0xa05, 0x6b40, 0x773c, 0x96b9, 0xed8e, 0x0, 0x0);
        gbc.writeMem(0x510f, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 036B
        gbc.setState(0x34b0, 0x1a93, 0xf5f0, 0x6de2, 0xfa31, 0x5015, 0x1, 0x0);
        gbc.writeMem(0x34b0, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a93, gbc.sp());
        EXPECT(0x34b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 036C
        gbc.setState(0xb1a8, 0xf6a3, 0x7c20, 0x8b14, 0x7db, 0xf41f, 0x0, 0x0);
        gbc.writeMem(0xb1a8, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6a3, gbc.sp());
        EXPECT(0xb1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb1a8));
        // B2 036D
        gbc.setState(0x532f, 0xd2bf, 0x1c10, 0xe049, 0x347c, 0xf9a9, 0x1, 0x1);
        gbc.writeMem(0x532f, { 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd2bf, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 036E
        gbc.setState(0x2834, 0x2c1f, 0xbd20, 0x6c9f, 0x8352, 0x8dd5, 0x0, 0x1);
        gbc.writeMem(0x2834, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0x2835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 036F
        gbc.setState(0xcdb6, 0x4f62, 0x6090, 0x6c9, 0x6efd, 0x1972, 0x1, 0x1);
        gbc.writeMem(0xcdb6, { 0xb2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4f62, gbc.sp());
        EXPECT(0xcdb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcdb6));
        // B2 0370
        gbc.setState(0x7a35, 0xfb8d, 0xd7f0, 0xe65a, 0x60a6, 0x836a, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb8d, gbc.sp());
        EXPECT(0x7a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0371
        gbc.setState(0x1f64, 0x8b40, 0xdf00, 0xb2b, 0x6439, 0x3f0f, 0x0, 0x1);
        gbc.writeMem(0x1f64, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8b40, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0372
        gbc.setState(0x68f5, 0xd40c, 0xa670, 0x286a, 0x203b, 0xe209, 0x0, 0x1);
        gbc.writeMem(0x68f5, { 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0x68f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0373
        gbc.setState(0x2fa6, 0x422b, 0xe840, 0x699, 0x4586, 0xa2bd, 0x0, 0x1);
        gbc.writeMem(0x2fa6, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x422b, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0374
        gbc.setState(0xdcf7, 0x9079, 0x9730, 0xfebd, 0x70ed, 0x6aad, 0x1, 0x0);
        gbc.writeMem(0xdcf7, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9079, gbc.sp());
        EXPECT(0xdcf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdcf7));
        // B2 0375
        gbc.setState(0x81a0, 0xffb1, 0x4240, 0x561e, 0xed5b, 0x1f09, 0x1, 0x1);
        gbc.writeMem(0x81a0, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xffb1, gbc.sp());
        EXPECT(0x81a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x81a0));
        // B2 0376
        gbc.setState(0xa39d, 0xb443, 0xeed0, 0x86cf, 0x8686, 0x1d29, 0x0, 0x0);
        gbc.writeMem(0xa39d, { 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa39d));
        // B2 0377
        gbc.setState(0x8a45, 0xa78b, 0x71c0, 0x5c72, 0x50c7, 0xf07c, 0x0, 0x0);
        gbc.writeMem(0x8a45, { 0xb2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8a45));
        // B2 0378
        gbc.setState(0xc3be, 0x82b9, 0x7bc0, 0x17b0, 0x261a, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0xc3be, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x82b9, gbc.sp());
        EXPECT(0xc3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc3be));
        // B2 0379
        gbc.setState(0xae0f, 0x2ad1, 0xd850, 0x96f2, 0x2416, 0xdf60, 0x0, 0x0);
        gbc.writeMem(0xae0f, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2ad1, gbc.sp());
        EXPECT(0xae10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xae0f));
        // B2 037A
        gbc.setState(0x822c, 0x79a2, 0x2080, 0x4909, 0xbaa5, 0x678b, 0x1, 0x0);
        gbc.writeMem(0x822c, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0x822d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x822c));
        // B2 037B
        gbc.setState(0x8885, 0xdf00, 0xa2b0, 0x72ff, 0xd242, 0xa1a7, 0x0, 0x1);
        gbc.writeMem(0x8885, { 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdf00, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8885));
        // B2 037C
        gbc.setState(0xeb8f, 0x5536, 0x2930, 0x6e48, 0xb06d, 0xb7cd, 0x0, 0x0);
        gbc.writeMem(0xeb8f, { 0xb2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5536, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeb8f));
        // B2 037D
        gbc.setState(0x9832, 0x1581, 0xb670, 0xb14d, 0x87d0, 0x2a71, 0x1, 0x1);
        gbc.writeMem(0x9832, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9832));
        // B2 037E
        gbc.setState(0x5c0, 0x6459, 0xcfa0, 0x1c10, 0x3ea5, 0xc3a5, 0x0, 0x1);
        gbc.writeMem(0x5c0, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 037F
        gbc.setState(0xc78b, 0xc1e7, 0x1380, 0xb802, 0x1559, 0xfc90, 0x0, 0x1);
        gbc.writeMem(0xc78b, { 0xb2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc1e7, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc78b));
        // B2 0380
        gbc.setState(0x105, 0x3500, 0x5a20, 0x6bff, 0x922e, 0xcf61, 0x0, 0x0);
        gbc.writeMem(0x105, { 0xb2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3500, gbc.sp());
        EXPECT(0x106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0381
        gbc.setState(0x2d01, 0x74ea, 0xe390, 0x75be, 0xd72, 0x3fb5, 0x1, 0x1);
        gbc.writeMem(0x2d01, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0383
        gbc.setState(0xaf02, 0x9f4c, 0x4580, 0xb1c4, 0x61fc, 0xb48e, 0x0, 0x1);
        gbc.writeMem(0xaf02, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f4c, gbc.sp());
        EXPECT(0xaf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xaf02));
        // B2 0384
        gbc.setState(0x45d, 0xe37f, 0x920, 0x281e, 0xdfa7, 0x4137, 0x0, 0x1);
        gbc.writeMem(0x45d, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0385
        gbc.setState(0x76b0, 0xcbcd, 0x4fe0, 0xb4c8, 0x6fa0, 0x8f50, 0x1, 0x1);
        gbc.writeMem(0x76b0, { 0xb2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcbcd, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0386
        gbc.setState(0xbcbd, 0x63ca, 0x8870, 0x1057, 0x9729, 0x82a8, 0x1, 0x0);
        gbc.writeMem(0xbcbd, { 0xb2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x63ca, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbcbd));
        // B2 0387
        gbc.setState(0x7ce4, 0x74ab, 0xd6d0, 0xe625, 0x9f14, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x7ce4, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x74ab, gbc.sp());
        EXPECT(0x7ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0388
        gbc.setState(0xdf66, 0x19f7, 0xa7c0, 0x70f1, 0xb34b, 0x6c20, 0x0, 0x0);
        gbc.writeMem(0xdf66, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x19f7, gbc.sp());
        EXPECT(0xdf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdf66));
        // B2 0389
        gbc.setState(0x5a06, 0xefce, 0xce10, 0x790f, 0x690d, 0x4a23, 0x1, 0x1);
        gbc.writeMem(0x5a06, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xefce, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 038A
        gbc.setState(0xa695, 0xabf2, 0xc550, 0xfde1, 0x84bc, 0xe5ce, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0xb2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa695));
        // B2 038B
        gbc.setState(0x3fbc, 0x7821, 0x3890, 0x2dec, 0x866, 0x485c, 0x1, 0x1);
        gbc.writeMem(0x3fbc, { 0xb2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x3fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 038D
        gbc.setState(0xb6d0, 0xd792, 0x97e0, 0x9a7f, 0xbda3, 0xdc84, 0x1, 0x1);
        gbc.writeMem(0xb6d0, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0xb6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb6d0));
        // B2 038E
        gbc.setState(0x78b8, 0xb17d, 0xfa80, 0x5633, 0x4961, 0x6d77, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 038F
        gbc.setState(0x3d55, 0x3c3, 0x5130, 0xe99b, 0x79bd, 0x1198, 0x1, 0x1);
        gbc.writeMem(0x3d55, { 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0x3d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0390
        gbc.setState(0x9d9a, 0x6030, 0x8890, 0x529d, 0xe7b8, 0x5bbd, 0x0, 0x1);
        gbc.writeMem(0x9d9a, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6030, gbc.sp());
        EXPECT(0x9d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9d9a));
        // B2 0391
        gbc.setState(0x19af, 0xc6df, 0x5e50, 0xb0bf, 0xdd37, 0xef3, 0x0, 0x1);
        gbc.writeMem(0x19af, { 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0x19b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0392
        gbc.setState(0x59bc, 0x1550, 0x8840, 0x7027, 0x4137, 0xb1ee, 0x1, 0x0);
        gbc.writeMem(0x59bc, { 0xb2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0393
        gbc.setState(0xbfac, 0x4767, 0x44a0, 0x2d6, 0x3c, 0x85b2, 0x1, 0x1);
        gbc.writeMem(0xbfac, { 0xb2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4767, gbc.sp());
        EXPECT(0xbfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbfac));
        // B2 0394
        gbc.setState(0xeb79, 0x56be, 0x24f0, 0x64e, 0x5e5a, 0xed49, 0x0, 0x0);
        gbc.writeMem(0xeb79, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xeb79));
        // B2 0395
        gbc.setState(0x90bc, 0xe535, 0x1890, 0xfd69, 0x474, 0x183c, 0x1, 0x0);
        gbc.writeMem(0x90bc, { 0xb2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe535, gbc.sp());
        EXPECT(0x90bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x90bc));
        // B2 0396
        gbc.setState(0xc8db, 0xd5f3, 0xf200, 0x5d23, 0xe163, 0x1f, 0x1, 0x1);
        gbc.writeMem(0xc8db, { 0xb2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5f3, gbc.sp());
        EXPECT(0xc8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc8db));
        // B2 0397
        gbc.setState(0x2be5, 0x4684, 0x84c0, 0xd29a, 0xb9bf, 0x2439, 0x1, 0x0);
        gbc.writeMem(0x2be5, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4684, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0398
        gbc.setState(0x4c9, 0x22a4, 0x7bc0, 0x248b, 0x7132, 0xbba4, 0x0, 0x0);
        gbc.writeMem(0x4c9, { 0xb2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 0399
        gbc.setState(0x7b0d, 0x37cb, 0xbaf0, 0x52b, 0xa5f, 0x2446, 0x1, 0x1);
        gbc.writeMem(0x7b0d, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 039A
        gbc.setState(0x2876, 0xa206, 0x110, 0xb435, 0xddd6, 0x7242, 0x0, 0x0);
        gbc.writeMem(0x2876, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0x2877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 039B
        gbc.setState(0x8ba8, 0x1619, 0xdc50, 0xffbc, 0x590a, 0x6516, 0x0, 0x1);
        gbc.writeMem(0x8ba8, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1619, gbc.sp());
        EXPECT(0x8ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8ba8));
        // B2 039C
        gbc.setState(0x2b55, 0xf696, 0x2470, 0xf9d7, 0x8cd1, 0x2467, 0x0, 0x0);
        gbc.writeMem(0x2b55, { 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf696, gbc.sp());
        EXPECT(0x2b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 039D
        gbc.setState(0x6096, 0x6473, 0xe000, 0x6199, 0x1f7e, 0x10, 0x1, 0x1);
        gbc.writeMem(0x6096, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6473, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 039E
        gbc.setState(0xb8da, 0xe747, 0x340, 0x59d0, 0x8881, 0x7fbc, 0x0, 0x0);
        gbc.writeMem(0xb8da, { 0xb2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0xb8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb8da));
        // B2 039F
        gbc.setState(0xa8ba, 0xea19, 0xbe40, 0x3195, 0x39f9, 0xf5b2, 0x0, 0x1);
        gbc.writeMem(0xa8ba, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea19, gbc.sp());
        EXPECT(0xa8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa8ba));
        // B2 03A0
        gbc.setState(0xb5b, 0xbd33, 0x6780, 0x6d6, 0x7ed2, 0xbf5e, 0x0, 0x1);
        gbc.writeMem(0xb5b, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbd33, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A1
        gbc.setState(0x3bb0, 0x59cd, 0x39e0, 0x8112, 0xe57b, 0x1b56, 0x1, 0x1);
        gbc.writeMem(0x3bb0, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x59cd, gbc.sp());
        EXPECT(0x3bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A2
        gbc.setState(0x2fb0, 0xf02e, 0x5680, 0x76f, 0x3abf, 0xf181, 0x1, 0x1);
        gbc.writeMem(0x2fb0, { 0xb2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf02e, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A3
        gbc.setState(0x4925, 0x12d5, 0x6ad0, 0xfaba, 0x7589, 0x205c, 0x1, 0x1);
        gbc.writeMem(0x4925, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x12d5, gbc.sp());
        EXPECT(0x4926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A4
        gbc.setState(0x1b3, 0xe080, 0xa1e0, 0x253a, 0x10aa, 0x1702, 0x0, 0x1);
        gbc.writeMem(0x1b3, { 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A5
        gbc.setState(0xa090, 0xab60, 0xb250, 0x6ebf, 0xc977, 0xbd2, 0x0, 0x1);
        gbc.writeMem(0xa090, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xab60, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa090));
        // B2 03A6
        gbc.setState(0x8506, 0x9db4, 0xe710, 0xca3, 0x82f3, 0xff7c, 0x1, 0x0);
        gbc.writeMem(0x8506, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9db4, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8506));
        // B2 03A7
        gbc.setState(0x1907, 0xc47e, 0xada0, 0x43c9, 0x6c30, 0xc272, 0x1, 0x1);
        gbc.writeMem(0x1907, { 0xb2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc47e, gbc.sp());
        EXPECT(0x1908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A8
        gbc.setState(0x22c8, 0xc5c1, 0x1ca0, 0xab56, 0xc1d8, 0x32ed, 0x1, 0x0);
        gbc.writeMem(0x22c8, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc5c1, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03A9
        gbc.setState(0xd553, 0x9cbf, 0x9b50, 0xb96c, 0x753b, 0x3fdb, 0x1, 0x1);
        gbc.writeMem(0xd553, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9cbf, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd553));
        // B2 03AA
        gbc.setState(0xbc2a, 0xf388, 0x6cb0, 0x16df, 0xb889, 0xde19, 0x1, 0x1);
        gbc.writeMem(0xbc2a, { 0xb2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf388, gbc.sp());
        EXPECT(0xbc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbc2a));
        // B2 03AB
        gbc.setState(0x882, 0x38dc, 0x43b0, 0xe0f3, 0x8ad1, 0xedd6, 0x1, 0x0);
        gbc.writeMem(0x882, { 0xb2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x38dc, gbc.sp());
        EXPECT(0x883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03AD
        gbc.setState(0xd665, 0xf208, 0x56e0, 0x9f0b, 0x544c, 0x790, 0x1, 0x0);
        gbc.writeMem(0xd665, { 0xb2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf208, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd665));
        // B2 03AE
        gbc.setState(0xa2ad, 0x17c, 0x1b60, 0xcd77, 0x371e, 0x8ea, 0x1, 0x0);
        gbc.writeMem(0xa2ad, { 0xb2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0xa2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa2ad));
        // B2 03AF
        gbc.setState(0x1b, 0xf411, 0xf790, 0xf62, 0xba1c, 0x7c42, 0x0, 0x0);
        gbc.writeMem(0x1b, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0x1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03B0
        gbc.setState(0xa182, 0x45d8, 0x6880, 0x5005, 0x71aa, 0x1681, 0x1, 0x0);
        gbc.writeMem(0xa182, { 0xb2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0xa183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa182));
        // B2 03B1
        gbc.setState(0xab11, 0xc31f, 0x4690, 0x5200, 0x47a6, 0x2527, 0x0, 0x1);
        gbc.writeMem(0xab11, { 0xb2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc31f, gbc.sp());
        EXPECT(0xab12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xab11));
        // B2 03B2
        gbc.setState(0x883b, 0x9677, 0xf280, 0xe8f1, 0xa26f, 0x436f, 0x0, 0x1);
        gbc.writeMem(0x883b, { 0xb2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0x883c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x883b));
        // B2 03B3
        gbc.setState(0x7402, 0xa3ec, 0x1200, 0xd4da, 0xfa9d, 0x8f7a, 0x0, 0x0);
        gbc.writeMem(0x7402, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa3ec, gbc.sp());
        EXPECT(0x7403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03B4
        gbc.setState(0xedbc, 0x1aa1, 0x3930, 0x1e8a, 0x9592, 0x3082, 0x0, 0x0);
        gbc.writeMem(0xedbc, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0xedbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xedbc));
        // B2 03B5
        gbc.setState(0x68f9, 0x6162, 0xdaf0, 0x938a, 0x38a3, 0x343e, 0x1, 0x1);
        gbc.writeMem(0x68f9, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6162, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03B6
        gbc.setState(0xad93, 0x7e35, 0x2460, 0x3312, 0x61e0, 0x6d65, 0x1, 0x1);
        gbc.writeMem(0xad93, { 0xb2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7e35, gbc.sp());
        EXPECT(0xad94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xad93));
        // B2 03B7
        gbc.setState(0xb350, 0xfd33, 0xe6c0, 0x840d, 0xfde5, 0x741f, 0x1, 0x0);
        gbc.writeMem(0xb350, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfd33, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb350));
        // B2 03B9
        gbc.setState(0x9ab1, 0xf181, 0x7d00, 0x3c0d, 0x5de3, 0x131f, 0x0, 0x1);
        gbc.writeMem(0x9ab1, { 0xb2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x9ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9ab1));
        // B2 03BA
        gbc.setState(0xb118, 0xb63f, 0xabd0, 0x62ed, 0x9f04, 0x6c8a, 0x1, 0x1);
        gbc.writeMem(0xb118, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb63f, gbc.sp());
        EXPECT(0xb119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb118));
        // B2 03BB
        gbc.setState(0x7795, 0x103a, 0xb6d0, 0x6340, 0x202e, 0xf598, 0x0, 0x0);
        gbc.writeMem(0x7795, { 0xb2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03BD
        gbc.setState(0x9748, 0x7bbd, 0xca70, 0xb8af, 0x22a7, 0x446, 0x0, 0x1);
        gbc.writeMem(0x9748, { 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7bbd, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9748));
        // B2 03BE
        gbc.setState(0x99f4, 0xba8b, 0xac60, 0xbcc6, 0x84d2, 0x81a4, 0x1, 0x0);
        gbc.writeMem(0x99f4, { 0xb2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x99f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x99f4));
        // B2 03BF
        gbc.setState(0x613c, 0x537c, 0x8c40, 0x5d1b, 0x80d6, 0x13a, 0x1, 0x1);
        gbc.writeMem(0x613c, { 0xb2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x537c, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C0
        gbc.setState(0x60a3, 0xdbbf, 0x5440, 0xd51a, 0x1896, 0x1ac6, 0x0, 0x0);
        gbc.writeMem(0x60a3, { 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdbbf, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C1
        gbc.setState(0xd7ef, 0x87e1, 0x6140, 0xe0a6, 0xe290, 0x770d, 0x0, 0x1);
        gbc.writeMem(0xd7ef, { 0xb2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x87e1, gbc.sp());
        EXPECT(0xd7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd7ef));
        // B2 03C2
        gbc.setState(0x652c, 0xb356, 0x340, 0x67aa, 0x4f97, 0x65fe, 0x1, 0x0);
        gbc.writeMem(0x652c, { 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb356, gbc.sp());
        EXPECT(0x652d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C3
        gbc.setState(0x80cf, 0x400b, 0x8950, 0xf7a5, 0xeb9d, 0xcac0, 0x0, 0x0);
        gbc.writeMem(0x80cf, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x400b, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x80cf));
        // B2 03C4
        gbc.setState(0xd225, 0x5485, 0x40d0, 0x878b, 0x461f, 0xcd23, 0x0, 0x1);
        gbc.writeMem(0xd225, { 0xb2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5485, gbc.sp());
        EXPECT(0xd226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd225));
        // B2 03C5
        gbc.setState(0x1390, 0x6aa8, 0x3fd0, 0x67ce, 0xaa0b, 0xb70e, 0x1, 0x0);
        gbc.writeMem(0x1390, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x1391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C6
        gbc.setState(0x561d, 0x9de0, 0x9dd0, 0xef9d, 0x383e, 0xa9a6, 0x1, 0x0);
        gbc.writeMem(0x561d, { 0xb2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9de0, gbc.sp());
        EXPECT(0x561e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C7
        gbc.setState(0x51bc, 0x6dc2, 0x7270, 0xe298, 0x8ff9, 0x4976, 0x1, 0x0);
        gbc.writeMem(0x51bc, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0x51bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03C8
        gbc.setState(0xdd9b, 0xb9d9, 0x64d0, 0x5b6e, 0x80d5, 0x3b2b, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0xb2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xdd9b));
        // B2 03C9
        gbc.setState(0xcc42, 0x4960, 0x7ff0, 0x49b1, 0x8b47, 0x971c, 0x0, 0x0);
        gbc.writeMem(0xcc42, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0xcc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcc42));
        // B2 03CA
        gbc.setState(0x1c34, 0x9bec, 0xcae0, 0x52f, 0x63a0, 0x524d, 0x1, 0x1);
        gbc.writeMem(0x1c34, { 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9bec, gbc.sp());
        EXPECT(0x1c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03CB
        gbc.setState(0x8132, 0xa1ed, 0xce70, 0xe447, 0xcf86, 0xb3de, 0x1, 0x1);
        gbc.writeMem(0x8132, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa1ed, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8132));
        // B2 03CD
        gbc.setState(0x6a37, 0x5fb7, 0x6420, 0xd408, 0xc7b9, 0x9c7, 0x0, 0x0);
        gbc.writeMem(0x6a37, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0x6a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03CE
        gbc.setState(0x19b, 0xd316, 0x2790, 0x8171, 0xa8a0, 0x6f4f, 0x1, 0x0);
        gbc.writeMem(0x19b, { 0xb2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd316, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03CF
        gbc.setState(0x360e, 0x877c, 0x10f0, 0x785e, 0x5cb4, 0xb12d, 0x1, 0x0);
        gbc.writeMem(0x360e, { 0xb2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x877c, gbc.sp());
        EXPECT(0x360f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D0
        gbc.setState(0x9afd, 0xc8f5, 0x4cc0, 0x5941, 0x1760, 0x97e3, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xb2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc8f5, gbc.sp());
        EXPECT(0x9afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9afd));
        // B2 03D1
        gbc.setState(0x92d6, 0xbd69, 0xe2d0, 0x74ce, 0xbaca, 0x42a0, 0x1, 0x0);
        gbc.writeMem(0x92d6, { 0xb2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x92d6));
        // B2 03D2
        gbc.setState(0x734c, 0x6a89, 0xa3a0, 0xbc9a, 0xe782, 0xac3c, 0x1, 0x1);
        gbc.writeMem(0x734c, { 0xb2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6a89, gbc.sp());
        EXPECT(0x734d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D3
        gbc.setState(0x914b, 0x5adf, 0x2840, 0x61c0, 0xd8b, 0x895d, 0x1, 0x1);
        gbc.writeMem(0x914b, { 0xb2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5adf, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x914b));
        // B2 03D4
        gbc.setState(0x171b, 0x361c, 0x64e0, 0x5949, 0x2646, 0x9972, 0x0, 0x1);
        gbc.writeMem(0x171b, { 0xb2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0x171c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D5
        gbc.setState(0xacfe, 0x29e2, 0x72a0, 0x2fa9, 0xb5b8, 0xfbed, 0x1, 0x0);
        gbc.writeMem(0xacfe, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x29e2, gbc.sp());
        EXPECT(0xacff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xacfe));
        // B2 03D6
        gbc.setState(0x11f9, 0x480e, 0xd6e0, 0x7ce9, 0xed41, 0xedf2, 0x0, 0x1);
        gbc.writeMem(0x11f9, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x480e, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D7
        gbc.setState(0x4c1f, 0x89d, 0x9d20, 0xfbd1, 0xd81e, 0xc78d, 0x1, 0x1);
        gbc.writeMem(0x4c1f, { 0xb2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D8
        gbc.setState(0x6d3a, 0xac0c, 0xdfd0, 0xe8a1, 0x749d, 0x5940, 0x0, 0x0);
        gbc.writeMem(0x6d3a, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xac0c, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03D9
        gbc.setState(0x7318, 0x1fc0, 0x9ba0, 0xa90a, 0x8979, 0x2d14, 0x0, 0x0);
        gbc.writeMem(0x7318, { 0xb2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03DA
        gbc.setState(0xd291, 0xbc14, 0x9730, 0x6720, 0xabde, 0x2091, 0x1, 0x0);
        gbc.writeMem(0xd291, { 0xb2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbc14, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd291));
        // B2 03DB
        gbc.setState(0x2719, 0x48ae, 0x2dc0, 0xad45, 0x5ae3, 0x28cc, 0x0, 0x0);
        gbc.writeMem(0x2719, { 0xb2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0x271a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03DC
        gbc.setState(0xd3, 0x70c8, 0x9da0, 0x95a3, 0x9835, 0x88e7, 0x0, 0x1);
        gbc.writeMem(0xd3, { 0xb2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0xd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03DD
        gbc.setState(0x69f6, 0x94fd, 0x92d0, 0x942d, 0xc7f2, 0xf6e3, 0x1, 0x1);
        gbc.writeMem(0x69f6, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0x69f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03DE
        gbc.setState(0xd6a5, 0xd1cd, 0x23f0, 0xa03a, 0x6876, 0x84cd, 0x0, 0x1);
        gbc.writeMem(0xd6a5, { 0xb2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd1cd, gbc.sp());
        EXPECT(0xd6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd6a5));
        // B2 03DF
        gbc.setState(0x5a54, 0x70ae, 0xa620, 0x93a8, 0xfbca, 0x7c4b, 0x1, 0x0);
        gbc.writeMem(0x5a54, { 0xb2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x70ae, gbc.sp());
        EXPECT(0x5a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03E0
        gbc.setState(0x8662, 0x53f1, 0x40b0, 0xdab3, 0x99dc, 0x584d, 0x0, 0x0);
        gbc.writeMem(0x8662, { 0xb2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x53f1, gbc.sp());
        EXPECT(0x8663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8662));
        // B2 03E1
        gbc.setState(0x684d, 0x38d8, 0xcd50, 0x9381, 0xca9f, 0xb362, 0x0, 0x1);
        gbc.writeMem(0x684d, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x38d8, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03E2
        gbc.setState(0x357, 0xa0dd, 0x6600, 0x6bbf, 0x529c, 0xa03b, 0x1, 0x0);
        gbc.writeMem(0x357, { 0xb2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03E3
        gbc.setState(0xef39, 0x646b, 0x8ab0, 0x9bed, 0x3616, 0xc42c, 0x0, 0x0);
        gbc.writeMem(0xef39, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0xef3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xef39));
        // B2 03E4
        gbc.setState(0x8a65, 0xe0ec, 0xc540, 0xd91b, 0x2e27, 0xd883, 0x1, 0x0);
        gbc.writeMem(0x8a65, { 0xb2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0x8a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8a65));
        // B2 03E5
        gbc.setState(0x347a, 0x2778, 0xe340, 0xe5a6, 0x9bee, 0x7d10, 0x0, 0x0);
        gbc.writeMem(0x347a, { 0xb2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0x347b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03E6
        gbc.setState(0x513c, 0x4be, 0x90a0, 0x3ca, 0xb1b9, 0xbe22, 0x1, 0x0);
        gbc.writeMem(0x513c, { 0xb2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4be, gbc.sp());
        EXPECT(0x513d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B2 03E7
        gbc.setState(0x9ee6, 0xe0b6, 0xbbb0, 0xed4f, 0x3ac1, 0x241a, 0x1, 0x1);
        gbc.writeMem(0x9ee6, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x9ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9ee6));
    }
